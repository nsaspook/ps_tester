

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 10 09:42:04 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=4,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=4,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=4,class=CODE,delta=1
   103                           	psect	text84,global,reloc=4,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=4,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=4,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   116                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   119                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   120                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   121  0000                     
   122                           ; Version 2.40
   123                           ; Generated 17/11/2021 GMT
   124                           ; 
   125                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   126                           ; All rights reserved.
   127                           ; 
   128                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   129                           ; 
   130                           ; Redistribution and use in source and binary forms, with or without modification, are
   131                           ; permitted provided that the following conditions are met:
   132                           ; 
   133                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   134                           ;        conditions and the following disclaimer.
   135                           ; 
   136                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   137                           ;        of conditions and the following disclaimer in the documentation and/or other
   138                           ;        materials provided with the distribution. Publication is not required when
   139                           ;        this file is used in an embedded application.
   140                           ; 
   141                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   142                           ;        software without specific prior written permission.
   143                           ; 
   144                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   145                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   146                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   147                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   148                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   149                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   150                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   151                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   152                           ; 
   153                           ; 
   154                           ; Code-generator required, PIC18F57K42 Definitions
   155                           ; 
   156                           ; SFR Addresses
   157  0000                     
   158                           	psect	idataBANK0
   159  005DF6                     __pidataBANK0:
   160                           	callstack 0
   161                           
   162                           ;initializer for _build_time
   163  005DF6  D5                 	db	low STR_2
   164                           
   165                           ;initializer for _build_date
   166  005DF7  C9                 	db	low STR_1
   167                           
   168                           	psect	idataBANK1
   169  005D10                     __pidataBANK1:
   170                           	callstack 0
   171                           
   172                           ;initializer for stoa@F1164
   173  005D10  28                 	db	40
   174  005D11  6E                 	db	110
   175  005D12  75                 	db	117
   176  005D13  6C                 	db	108
   177  005D14  6C                 	db	108
   178  005D15  29                 	db	41
   179  005D16  00                 	db	0
   180                           
   181                           ;initializer for _g_cmds
   182  005D17  F8                 	db	low STR_7
   183  005D18  54                 	db	low _fh_pr
   184  005D19  5B                 	db	high _fh_pr
   185  005D1A  00                 	db	low (_fh_pr shr (0+16))
   186  005D1B  FB                 	db	low STR_8
   187  005D1C  C8                 	db	low _fh_ps
   188  005D1D  5C                 	db	high _fh_ps
   189  005D1E  00                 	db	low (_fh_ps shr (0+16))
   190  005D1F  F5                 	db	low STR_9
   191  005D20  B0                 	db	low _fh_po
   192  005D21  5C                 	db	high _fh_po
   193  005D22  00                 	db	low (_fh_po shr (0+16))
   194  005D23  00                 	db	0
   195  005D24  00                 	db	0
   196  005D25  00                 	db	0
   197  005D26  00                 	db	0
   198                           
   199                           	psect	smallconst
   200  002000                     __psmallconst:
   201                           	callstack 0
   202  002000  00                 	db	0
   203  002001  02                 	db	2
   204  002002  40                 	db	64
   205  002003  00                 	db	0
   206  002004  08                 	db	8
   207  002005  00                 	db	0
   208  002006                     __end_of_spi1_configuration:
   209                           	callstack 0
   210  002006                     _cmdm:
   211                           	callstack 0
   212  002006  0D                 	db	13
   213  002007  0A                 	db	10
   214  002008  20                 	db	32
   215  002009  43                 	db	67
   216  00200A  6F                 	db	111
   217  00200B  6D                 	db	109
   218  00200C  6D                 	db	109
   219  00200D  61                 	db	97
   220  00200E  6E                 	db	110
   221  00200F  64                 	db	100
   222  002010  20                 	db	32
   223  002011  70                 	db	112
   224  002012  72                 	db	114
   225  002013  6F                 	db	111
   226  002014  63                 	db	99
   227  002015  65                 	db	101
   228  002016  73                 	db	115
   229  002017  73                 	db	115
   230  002018  6F                 	db	111
   231  002019  72                 	db	114
   232  00201A  20                 	db	32
   233  00201B  56                 	db	86
   234  00201C  30                 	db	48
   235  00201D  2E                 	db	46
   236  00201E  31                 	db	49
   237  00201F  0D                 	db	13
   238  002020  0A                 	db	10
   239  002021  00                 	db	0
   240  002022                     __end_of_cmdm:
   241                           	callstack 0
   242  0000                     _T2CON	set	16300
   243  0000                     _T5CON	set	16282
   244  0000                     _TMR5L	set	16280
   245  0000                     _TMR5H	set	16281
   246  0000                     _T5GCON	set	16283
   247  0000                     _IVTBASEL	set	16341
   248  0000                     _IVTBASEH	set	16342
   249  0000                     _IVTBASEU	set	16343
   250  0000                     _T6CON	set	16276
   251  0000                     _T6RST	set	16279
   252  0000                     _ADERRL	set	16098
   253  0000                     _ADERRH	set	16099
   254  0000                     _ADPREVL	set	16109
   255  0000                     _ADPREVH	set	16110
   256  0000                     _ADFLTRL	set	16102
   257  0000                     _ADFLTRH	set	16103
   258  0000                     _ADACCL	set	16104
   259  0000                     _ADACCH	set	16105
   260  0000                     _ADCNT	set	16107
   261  0000                     _ADRESL	set	16111
   262  0000                     _ADRESH	set	16112
   263  0000                     _ADCON0	set	16120
   264  0000                     _ADCON1	set	16121
   265  0000                     _ADPREH	set	16119
   266  0000                     _ADPREL	set	16118
   267  0000                     _ADCAP	set	16117
   268  0000                     _ADACQH	set	16116
   269  0000                     _ADPCH	set	16113
   270  0000                     _ADRPT	set	16108
   271  0000                     _ADACCU	set	16106
   272  0000                     _ADSTPTH	set	16101
   273  0000                     _ADSTPTL	set	16100
   274  0000                     _ADUTHH	set	16097
   275  0000                     _ADUTHL	set	16096
   276  0000                     _ADLTHH	set	16095
   277  0000                     _OSCTUNE	set	14814
   278  0000                     _OSCFRQ	set	14815
   279  0000                     _OSCEN	set	14813
   280  0000                     _TRISD	set	16325
   281  0000                     _TRISC	set	16324
   282  0000                     _TRISB	set	16323
   283  0000                     _LATC	set	16316
   284  0000                     _LATB	set	16315
   285  0000                     _PLLR	set	118496
   286  0000                     _U1ERRIRbits	set	15865
   287  0000                     _LATFbits	set	16319
   288  0000                     _LATAbits	set	16314
   289  0000                     _LATDbits	set	16317
   290  0000                     _LATEbits	set	16318
   291  0000                     _TRISCbits	set	16324
   292  0000                     _T5CONbits	set	16282
   293  0000                     _IVTLOCKbits	set	16340
   294  0000                     _GIE	set	130711
   295  0000                     _IPR1bits	set	14721
   296  0000                     _IPR3bits	set	14723
   297  0000                     _PIE1bits	set	14737
   298  0000                     _PIR1bits	set	14753
   299  0000                     _PMD0	set	14784
   300  0000                     _OSCCON1	set	14809
   301  0000                     _RC3PPS	set	14867
   302  0000                     _RD2PPS	set	14874
   303  0000                     _ANSELA	set	14912
   304  0000                     _ANSELB	set	14928
   305  0000                     _ANSELC	set	14944
   306  0000                     _ANSELD	set	14960
   307  0000                     _LATA	set	16314
   308  0000                     _LATD	set	16317
   309  0000                     _LATE	set	16318
   310  0000                     _TRISA	set	16322
   311  0000                     _TRISE	set	16326
   312  0000                     _LATF	set	16319
   313  0000                     _PORTAbits	set	16330
   314  0000                     _INTCON0bits	set	16338
   315  0000                     _TRISF	set	16327
   316  0000                     _INLVLD	set	14964
   317  0000                     _SLRCOND	set	14963
   318  0000                     _ODCOND	set	14962
   319  0000                     _RD0I2C	set	14970
   320  0000                     _WPUD	set	14961
   321  0000                     _ANSELE	set	14976
   322  0000                     _INLVLC	set	14948
   323  0000                     _SLRCONC	set	14947
   324  0000                     _ODCONC	set	14946
   325  0000                     _RC3I2C	set	14954
   326  0000                     _WPUC	set	14945
   327  0000                     _INLVLB	set	14932
   328  0000                     _SLRCONB	set	14931
   329  0000                     _ODCONB	set	14930
   330  0000                     _RB1I2C	set	14938
   331  0000                     _WPUB	set	14929
   332  0000                     _INLVLE	set	14980
   333  0000                     _SLRCONE	set	14979
   334  0000                     _ODCONE	set	14978
   335  0000                     _WPUE	set	14977
   336  0000                     _ANSELF	set	14992
   337  0000                     _SPI1SCKPPS	set	15070
   338  0000                     _INLVLF	set	14996
   339  0000                     _SLRCONF	set	14995
   340  0000                     _ODCONF	set	14994
   341  0000                     _WPUF	set	14993
   342  0000                     _INLVLA	set	14916
   343  0000                     _SLRCONA	set	14915
   344  0000                     _ODCONA	set	14914
   345  0000                     _WPUA	set	14913
   346  0000                     _RB2I2C	set	14939
   347  0000                     _RC4I2C	set	14955
   348  0000                     _RD1I2C	set	14971
   349  0000                     _RF2PPS	set	14890
   350  0000                     _SPI1SDIPPS	set	15071
   351  0000                     _U1RXPPS	set	15077
   352  0000                     _RC5PPS	set	14869
   353  0000                     _RC6PPS	set	14870
   354  0000                     _SPI1RXB	set	15632
   355  0000                     _SPI1TXB	set	15633
   356  0000                     _SPI1TCNTL	set	15634
   357  0000                     _SPI1CON0	set	15636
   358  0000                     _U1RXB	set	15848
   359  0000                     _U1TXB	set	15850
   360  0000                     _U1P1L	set	15852
   361  0000                     _DAC1CON1	set	16028
   362  0000                     _DAC1CON0	set	16030
   363  0000                     _ADLTHL	set	16094
   364  0000                     _OSCCON3	set	14811
   365  0000                     _PMD7	set	14791
   366  0000                     _PMD6	set	14790
   367  0000                     _PMD5	set	14789
   368  0000                     _PMD4	set	14788
   369  0000                     _PMD3	set	14787
   370  0000                     _PMD2	set	14786
   371  0000                     _PMD1	set	14785
   372  0000                     _ADACQL	set	16115
   373  0000                     _CCPTMRS1bits	set	16223
   374  0000                     _PWM5DCL	set	16236
   375  0000                     _PWM5DCH	set	16237
   376  0000                     _PWM5CON	set	16238
   377  0000                     _T6TMR	set	16274
   378  0000                     _T6PR	set	16275
   379  0000                     _T6HLT	set	16277
   380  0000                     _T6CLKCON	set	16278
   381  0000                     _ADCLK	set	16127
   382  0000                     _ADACT	set	16126
   383  0000                     _ADREF	set	16125
   384  0000                     _ADSTAT	set	16124
   385  0000                     _ADCON3	set	16123
   386  0000                     _ADCON2	set	16122
   387  0000                     _PIR4bits	set	14756
   388  0000                     _PIR2bits	set	14754
   389  0000                     _PIR8bits	set	14760
   390  0000                     _PIR9bits	set	14761
   391  0000                     _PIE3bits	set	14739
   392  0000                     _PIE9bits	set	14745
   393  0000                     _IVTLOCK	set	16340
   394  0000                     _IPR8bits	set	14728
   395  0000                     _IPR9bits	set	14729
   396  0000                     _PIE8bits	set	14744
   397  0000                     _U1ERRIE	set	15866
   398  0000                     _U1ERRIR	set	15865
   399  0000                     _U1UIR	set	15864
   400  0000                     _U1FIFO	set	15863
   401  0000                     _U1BRGH	set	15862
   402  0000                     _U1BRGL	set	15861
   403  0000                     _U1CON2	set	15860
   404  0000                     _U1CON1	set	15859
   405  0000                     _U1CON0	set	15858
   406  0000                     _U1P3H	set	15857
   407  0000                     _U1P3L	set	15856
   408  0000                     _U1P2H	set	15855
   409  0000                     _U1P2L	set	15854
   410  0000                     _U1P1H	set	15853
   411  0000                     _T2TMR	set	16298
   412  0000                     _T2PR	set	16299
   413  0000                     _T2HLT	set	16301
   414  0000                     _T2CLKCON	set	16302
   415  0000                     _T5CLK	set	16285
   416  0000                     _T5GATE	set	16284
   417  0000                     _SPI1BAUD	set	15641
   418  0000                     _SPI1CLK	set	15644
   419  0000                     _SPI1CON2	set	15638
   420  0000                     _SPI1CON1	set	15637
   421  0000                     _PORTBbits	set	16331
   422  0000                     _PWM6DCL	set	16232
   423  0000                     _PWM6DCH	set	16233
   424  0000                     _PWM6CON	set	16234
   425  0000                     _T2RST	set	16303
   426  002022                     STR_6:
   427                           
   428                           ; BSR set to: 0
   429  002022  20                 	db	32
   430  002023  50                 	db	80	;'P'
   431  002024  53                 	db	83	;'S'
   432  002025  20                 	db	32
   433  002026  54                 	db	84	;'T'
   434  002027  65                 	db	101	;'e'
   435  002028  73                 	db	115	;'s'
   436  002029  74                 	db	116	;'t'
   437  00202A  20                 	db	32
   438  00202B  25                 	db	37
   439  00202C  31                 	db	49	;'1'
   440  00202D  75                 	db	117	;'u'
   441  00202E  3A                 	db	58	;':'
   442  00202F  20                 	db	32
   443  002030  44                 	db	68	;'D'
   444  002031  41                 	db	65	;'A'
   445  002032  43                 	db	67	;'C'
   446  002033  20                 	db	32
   447  002034  4F                 	db	79	;'O'
   448  002035  55                 	db	85	;'U'
   449  002036  54                 	db	84	;'T'
   450  002037  3D                 	db	61	;'='
   451  002038  25                 	db	37
   452  002039  2E                 	db	46
   453  00203A  32                 	db	50	;'2'
   454  00203B  75                 	db	117	;'u'
   455  00203C  2C                 	db	44
   456  00203D  20                 	db	32
   457  00203E  53                 	db	83	;'S'
   458  00203F  75                 	db	117	;'u'
   459  002040  70                 	db	112	;'p'
   460  002041  70                 	db	112	;'p'
   461  002042  6C                 	db	108	;'l'
   462  002043  79                 	db	121	;'y'
   463  002044  20                 	db	32
   464  002045  52                 	db	82	;'R'
   465  002046  65                 	db	101	;'e'
   466  002047  61                 	db	97	;'a'
   467  002048  64                 	db	100	;'d'
   468  002049  42                 	db	66	;'B'
   469  00204A  61                 	db	97	;'a'
   470  00204B  63                 	db	99	;'c'
   471  00204C  6B                 	db	107	;'k'
   472  00204D  20                 	db	32
   473  00204E  25                 	db	37
   474  00204F  34                 	db	52	;'4'
   475  002050  2E                 	db	46
   476  002051  34                 	db	52	;'4'
   477  002052  75                 	db	117	;'u'
   478  002053  20                 	db	32
   479  002054  56                 	db	86	;'V'
   480  002055  3D                 	db	61	;'='
   481  002056  25                 	db	37
   482  002057  2B                 	db	43
   483  002058  36                 	db	54	;'6'
   484  002059  2E                 	db	46
   485  00205A  31                 	db	49	;'1'
   486  00205B  66                 	db	102	;'f'
   487  00205C  56                 	db	86	;'V'
   488  00205D  20                 	db	32
   489  00205E  25                 	db	37
   490  00205F  34                 	db	52	;'4'
   491  002060  2E                 	db	46
   492  002061  34                 	db	52	;'4'
   493  002062  75                 	db	117	;'u'
   494  002063  20                 	db	32
   495  002064  49                 	db	73	;'I'
   496  002065  3D                 	db	61	;'='
   497  002066  25                 	db	37
   498  002067  2B                 	db	43
   499  002068  33                 	db	51	;'3'
   500  002069  2E                 	db	46
   501  00206A  31                 	db	49	;'1'
   502  00206B  66                 	db	102	;'f'
   503  00206C  6D                 	db	109	;'m'
   504  00206D  41                 	db	65	;'A'
   505  00206E  0D                 	db	13
   506  00206F  0A                 	db	10
   507  002070  00                 	db	0
   508  002071                     STR_3:
   509                           
   510                           ; BSR set to: 0
   511  002071  0D                 	db	13
   512  002072  0A                 	db	10
   513  002073  20                 	db	32
   514  002074  52                 	db	82	;'R'
   515  002075  61                 	db	97	;'a'
   516  002076  6D                 	db	109	;'m'
   517  002077  70                 	db	112	;'p'
   518  002078  20                 	db	32
   519  002079  74                 	db	116	;'t'
   520  00207A  6F                 	db	111	;'o'
   521  00207B  20                 	db	32
   522  00207C  31                 	db	49	;'1'
   523  00207D  30                 	db	48	;'0'
   524  00207E  30                 	db	48	;'0'
   525  00207F  30                 	db	48	;'0'
   526  002080  56                 	db	86	;'V'
   527  002081  44                 	db	68	;'D'
   528  002082  43                 	db	67	;'C'
   529  002083  20                 	db	32
   530  002084  4F                 	db	79	;'O'
   531  002085  4E                 	db	78	;'N'
   532  002086  20                 	db	32
   533  002087  0D                 	db	13
   534  002088  0A                 	db	10
   535  002089  00                 	db	0
   536  00208A                     STR_4:
   537                           
   538                           ; BSR set to: 0
   539  00208A  0D                 	db	13
   540  00208B  0A                 	db	10
   541  00208C  20                 	db	32
   542  00208D  53                 	db	83	;'S'
   543  00208E  74                 	db	116	;'t'
   544  00208F  65                 	db	101	;'e'
   545  002090  61                 	db	97	;'a'
   546  002091  64                 	db	100	;'d'
   547  002092  79                 	db	121	;'y'
   548  002093  20                 	db	32
   549  002094  31                 	db	49	;'1'
   550  002095  30                 	db	48	;'0'
   551  002096  30                 	db	48	;'0'
   552  002097  30                 	db	48	;'0'
   553  002098  56                 	db	86	;'V'
   554  002099  44                 	db	68	;'D'
   555  00209A  43                 	db	67	;'C'
   556  00209B  20                 	db	32
   557  00209C  4F                 	db	79	;'O'
   558  00209D  4E                 	db	78	;'N'
   559  00209E  20                 	db	32
   560  00209F  0D                 	db	13
   561  0020A0  0A                 	db	10
   562  0020A1  00                 	db	0
   563  0020A2                     STR_10:
   564                           
   565                           ; BSR set to: 0
   566  0020A2  0D                 	db	13
   567  0020A3  0A                 	db	10
   568  0020A4  20                 	db	32
   569  0020A5  50                 	db	80	;'P'
   570  0020A6  73                 	db	115	;'s'
   571  0020A7  20                 	db	32
   572  0020A8  54                 	db	84	;'T'
   573  0020A9  65                 	db	101	;'e'
   574  0020AA  73                 	db	115	;'s'
   575  0020AB  74                 	db	116	;'t'
   576  0020AC  65                 	db	101	;'e'
   577  0020AD  72                 	db	114	;'r'
   578  0020AE  20                 	db	32
   579  0020AF  25                 	db	37
   580  0020B0  73                 	db	115	;'s'
   581  0020B1  20                 	db	32
   582  0020B2  25                 	db	37
   583  0020B3  73                 	db	115	;'s'
   584  0020B4  0D                 	db	13
   585  0020B5  0A                 	db	10
   586  0020B6  00                 	db	0
   587  0020B7                     STR_5:
   588                           
   589                           ; BSR set to: 0
   590  0020B7  0D                 	db	13
   591  0020B8  0A                 	db	10
   592  0020B9  20                 	db	32
   593  0020BA  56                 	db	86	;'V'
   594  0020BB  6F                 	db	111	;'o'
   595  0020BC  6C                 	db	108	;'l'
   596  0020BD  74                 	db	116	;'t'
   597  0020BE  61                 	db	97	;'a'
   598  0020BF  67                 	db	103	;'g'
   599  0020C0  65                 	db	101	;'e'
   600  0020C1  20                 	db	32
   601  0020C2  4F                 	db	79	;'O'
   602  0020C3  46                 	db	70	;'F'
   603  0020C4  46                 	db	70	;'F'
   604  0020C5  20                 	db	32
   605  0020C6  0D                 	db	13
   606  0020C7  0A                 	db	10
   607  0020C8  00                 	db	0
   608  0020C9                     STR_1:
   609                           
   610                           ; BSR set to: 0
   611  0020C9  4D                 	db	77	;'M'
   612  0020CA  61                 	db	97	;'a'
   613  0020CB  72                 	db	114	;'r'
   614  0020CC  20                 	db	32
   615  0020CD  31                 	db	49	;'1'
   616  0020CE  30                 	db	48	;'0'
   617  0020CF  20                 	db	32
   618  0020D0  32                 	db	50	;'2'
   619  0020D1  30                 	db	48	;'0'
   620  0020D2  32                 	db	50	;'2'
   621  0020D3  32                 	db	50	;'2'
   622  0020D4  00                 	db	0
   623  0020D5                     STR_2:
   624                           
   625                           ; BSR set to: 0
   626  0020D5  30                 	db	48	;'0'
   627  0020D6  39                 	db	57	;'9'
   628  0020D7  3A                 	db	58	;':'
   629  0020D8  34                 	db	52	;'4'
   630  0020D9  31                 	db	49	;'1'
   631  0020DA  3A                 	db	58	;':'
   632  0020DB  35                 	db	53	;'5'
   633  0020DC  34                 	db	52	;'4'
   634  0020DD  00                 	db	0
   635  0020DE                     STR_12:
   636                           
   637                           ; BSR set to: 0
   638  0020DE  49                 	db	73	;'I'
   639  0020DF  4E                 	db	78	;'N'
   640  0020E0  46                 	db	70	;'F'
   641  0020E1  00                 	db	0
   642  0020E2                     STR_16:
   643                           
   644                           ; BSR set to: 0
   645  0020E2  4E                 	db	78	;'N'
   646  0020E3  41                 	db	65	;'A'
   647  0020E4  4E                 	db	78	;'N'
   648  0020E5  00                 	db	0
   649  0020E6                     STR_13:
   650                           
   651                           ; BSR set to: 0
   652  0020E6  69                 	db	105	;'i'
   653  0020E7  6E                 	db	110	;'n'
   654  0020E8  66                 	db	102	;'f'
   655  0020E9  00                 	db	0
   656  0020EA                     STR_17:
   657                           
   658                           ; BSR set to: 0
   659  0020EA  6E                 	db	110	;'n'
   660  0020EB  61                 	db	97	;'a'
   661  0020EC  6E                 	db	110	;'n'
   662  0020ED  00                 	db	0
   663  0020EE                     STR_25:
   664                           
   665                           ; BSR set to: 0
   666  0020EE  6C                 	db	108	;'l'
   667  0020EF  6C                 	db	108	;'l'
   668  0020F0  73                 	db	115	;'s'
   669  0020F1  00                 	db	0
   670  0020F2                     STR_20:
   671                           
   672                           ; BSR set to: 0
   673  0020F2  6C                 	db	108	;'l'
   674  0020F3  66                 	db	102	;'f'
   675  0020F4  00                 	db	0
   676  0020F5                     STR_9:
   677                           
   678                           ; BSR set to: 0
   679  0020F5  70                 	db	112	;'p'
   680  0020F6  6F                 	db	111	;'o'
   681  0020F7  00                 	db	0
   682  0020F8                     STR_7:
   683                           
   684                           ; BSR set to: 0
   685  0020F8  70                 	db	112	;'p'
   686  0020F9  72                 	db	114	;'r'
   687  0020FA  00                 	db	0
   688  0020FB                     STR_8:
   689                           
   690                           ; BSR set to: 0
   691  0020FB  70                 	db	112	;'p'
   692  0020FC  73                 	db	115	;'s'
   693  0020FD  00                 	db	0
   694  0020FE  00                 	db	0	; dummy byte at the end
   695  0000                     
   696                           ; #config settings
   697                           
   698                           	psect	cinit
   699  005154                     __pcinit:
   700                           	callstack 0
   701  005154                     start_initialization:
   702                           	callstack 0
   703  005154                     __initialization:
   704                           	callstack 0
   705                           
   706                           ; Initialize objects allocated to BANK1 (23 bytes)
   707                           ; load TBLPTR registers with __pidataBANK1
   708  005154  0E10               	movlw	low __pidataBANK1
   709  005156  6EF6               	movwf	tblptrl,c
   710  005158  0E5D               	movlw	high __pidataBANK1
   711  00515A  6EF7               	movwf	tblptrh,c
   712  00515C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   713  00515E  6EF8               	movwf	tblptru,c
   714  005160  EE00  F1E8         	lfsr	0,__pdataBANK1
   715  005164  EE10 F017          	lfsr	1,23
   716  005168                     copy_data0:
   717  005168  0009               	tblrd		*+
   718  00516A  006F FFD7 FFEE     	movff	tablat,postinc0
   719  005170  50E5               	movf	postdec1,w,c
   720  005172  50E1               	movf	fsr1l,w,c
   721  005174  E1F9               	bnz	copy_data0
   722                           
   723                           ; Initialize objects allocated to BANK0 (2 bytes)
   724                           ; load TBLPTR registers with __pidataBANK0
   725  005176  0EF6               	movlw	low __pidataBANK0
   726  005178  6EF6               	movwf	tblptrl,c
   727  00517A  0E5D               	movlw	high __pidataBANK0
   728  00517C  6EF7               	movwf	tblptrh,c
   729  00517E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   730  005180  6EF8               	movwf	tblptru,c
   731  005182  0009               	tblrd		*+	;fetch initializer
   732  005184  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
   733  00518A  0009               	tblrd		*+	;fetch initializer
   734  00518C  006F FFD4  F0FF    	movff	tablat,__pdataBANK0+1
   735                           
   736                           ; Clear objects allocated to BANK3 (255 bytes)
   737  005192  EE00  F300         	lfsr	0,__pbssBANK3
   738  005196  EE10 F0FF          	lfsr	1,255
   739  00519A                     clear_0:
   740  00519A  6AEE               	clrf	postinc0,c
   741  00519C  50E5               	movf	postdec1,w,c
   742  00519E  50E1               	movf	fsr1l,w,c
   743  0051A0  E1FC               	bnz	clear_0
   744  0051A2  50E2               	movf	fsr1h,w,c
   745  0051A4  E1FA               	bnz	clear_0
   746                           
   747                           ; Clear objects allocated to BANK2 (195 bytes)
   748  0051A6  EE00  F200         	lfsr	0,__pbssBANK2
   749  0051AA  0EC3               	movlw	195
   750  0051AC                     clear_1:
   751  0051AC  6AEE               	clrf	postinc0,c
   752  0051AE  06E8               	decf	wreg,f,c
   753  0051B0  E1FD               	bnz	clear_1
   754                           
   755                           ; Clear objects allocated to BANK1 (232 bytes)
   756  0051B2  EE00  F100         	lfsr	0,__pbssBANK1
   757  0051B6  0EE8               	movlw	232
   758  0051B8                     clear_2:
   759  0051B8  6AEE               	clrf	postinc0,c
   760  0051BA  06E8               	decf	wreg,f,c
   761  0051BC  E1FD               	bnz	clear_2
   762                           
   763                           ; Clear objects allocated to BANK0 (37 bytes)
   764  0051BE  EE00  F0D9         	lfsr	0,__pbssBANK0
   765  0051C2  0E25               	movlw	37
   766  0051C4                     clear_3:
   767  0051C4  6AEE               	clrf	postinc0,c
   768  0051C6  06E8               	decf	wreg,f,c
   769  0051C8  E1FD               	bnz	clear_3
   770                           
   771                           ; Clear objects allocated to COMRAM (19 bytes)
   772  0051CA  EE00  F039         	lfsr	0,__pbssCOMRAM
   773  0051CE  0E13               	movlw	19
   774  0051D0                     clear_4:
   775  0051D0  6AEE               	clrf	postinc0,c
   776  0051D2  06E8               	decf	wreg,f,c
   777  0051D4  E1FD               	bnz	clear_4
   778                           
   779                           ;
   780                           ; Setup IVTBASE
   781                           ;
   782  0051D6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   783  0051D8  6ED5               	movwf	213,c
   784  0051DA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   785  0051DC  6ED6               	movwf	214,c
   786  0051DE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   787  0051E0  6ED7               	movwf	215,c
   788  0051E2                     end_of_initialization:
   789                           	callstack 0
   790  0051E2                     __end_of__initialization:
   791                           	callstack 0
   792  0051E2  0100               	movlb	0
   793  0051E4  EF15  F01D         	goto	_main	;jump to C main() function
   794                           
   795                           	psect	bssCOMRAM
   796  000039                     __pbssCOMRAM:
   797                           	callstack 0
   798  000039                     _ana:
   799                           	callstack 0
   800  000039                     	ds	4
   801  00003D                     _flags:
   802                           	callstack 0
   803  00003D                     	ds	2
   804  00003F                     _timer5ReloadVal:
   805                           	callstack 0
   806  00003F                     	ds	2
   807  000041                     TMR6_ISR@CountCallBack:
   808                           	callstack 0
   809  000041                     	ds	2
   810  000043                     _res:
   811                           	callstack 0
   812  000043                     	ds	1
   813  000044                     _adc_chan:
   814                           	callstack 0
   815  000044                     	ds	1
   816  000045                     _uart1RxLastError:
   817                           	callstack 0
   818  000045                     	ds	1
   819  000046                     _uart1RxCount:
   820                           	callstack 0
   821  000046                     	ds	1
   822  000047                     _uart1RxTail:
   823                           	callstack 0
   824  000047                     	ds	1
   825  000048                     _uart1RxHead:
   826                           	callstack 0
   827  000048                     	ds	1
   828  000049                     _uart1TxBufferRemaining:
   829                           	callstack 0
   830  000049                     	ds	1
   831  00004A                     _uart1TxTail:
   832                           	callstack 0
   833  00004A                     	ds	1
   834  00004B                     _uart1TxHead:
   835                           	callstack 0
   836  00004B                     	ds	1
   837                           
   838                           	psect	bssBANK0
   839  0000D9                     __pbssBANK0:
   840                           	callstack 0
   841  0000D9                     _vval:
   842                           	callstack 0
   843  0000D9                     	ds	4
   844  0000DD                     _TMR5_InterruptHandler:
   845                           	callstack 0
   846  0000DD                     	ds	3
   847  0000E0                     _UART1_ErrorHandler:
   848                           	callstack 0
   849  0000E0                     	ds	3
   850  0000E3                     _UART1_OverrunErrorHandler:
   851                           	callstack 0
   852  0000E3                     	ds	3
   853  0000E6                     _UART1_FramingErrorHandler:
   854                           	callstack 0
   855  0000E6                     	ds	3
   856  0000E9                     _TMR6_InterruptHandler:
   857                           	callstack 0
   858  0000E9                     	ds	3
   859  0000EC                     _ADCC_ADI_InterruptHandler:
   860                           	callstack 0
   861  0000EC                     	ds	3
   862  0000EF                     _UART1_TxInterruptHandler:
   863                           	callstack 0
   864  0000EF                     	ds	3
   865  0000F2                     _UART1_RxInterruptHandler:
   866                           	callstack 0
   867  0000F2                     	ds	3
   868  0000F5                     _nout:
   869                           	callstack 0
   870  0000F5                     	ds	2
   871  0000F7                     _width:
   872                           	callstack 0
   873  0000F7                     	ds	2
   874  0000F9                     _prec:
   875                           	callstack 0
   876  0000F9                     	ds	2
   877  0000FB                     _mode:
   878                           	callstack 0
   879  0000FB                     	ds	1
   880  0000FC                     _adc_tick:
   881                           	callstack 0
   882  0000FC                     	ds	1
   883  0000FD                     _disp_tick:
   884                           	callstack 0
   885  0000FD                     	ds	1
   886                           
   887                           	psect	dataBANK0
   888  0000FE                     __pdataBANK0:
   889                           	callstack 0
   890  0000FE                     _build_time:
   891                           	callstack 0
   892  0000FE                     	ds	1
   893  0000FF                     _build_date:
   894                           	callstack 0
   895  0000FF                     	ds	1
   896                           
   897                           	psect	bssBANK1
   898  000100                     __pbssBANK1:
   899                           	callstack 0
   900  000100                     _uart1RxStatusBuffer:
   901                           	callstack 0
   902  000100                     	ds	64
   903  000140                     _uart1TxBuffer:
   904                           	callstack 0
   905  000140                     	ds	64
   906  000180                     _tickCount:
   907                           	callstack 0
   908  000180                     	ds	12
   909  00018C                     floorf@F526:
   910                           	callstack 0
   911  00018C                     	ds	4
   912  000190                     ___fpclassifyf@F465:
   913                           	callstack 0
   914  000190                     	ds	4
   915  000194                     _ival:
   916                           	callstack 0
   917  000194                     	ds	4
   918  000198                     _dbuf:
   919                           	callstack 0
   920  000198                     	ds	80
   921                           
   922                           	psect	dataBANK1
   923  0001E8                     __pdataBANK1:
   924                           	callstack 0
   925  0001E8                     stoa@F1164:
   926                           	callstack 0
   927  0001E8                     	ds	7
   928  0001EF                     _g_cmds:
   929                           	callstack 0
   930  0001EF                     	ds	16
   931                           
   932                           	psect	bssBANK2
   933  000200                     __pbssBANK2:
   934                           	callstack 0
   935  000200                     _uart1RxBuffer:
   936                           	callstack 0
   937  000200                     	ds	64
   938  000240                     _cli_ctx:
   939                           	callstack 0
   940  000240                     	ds	131
   941                           
   942                           	psect	bssBANK3
   943  000300                     __pbssBANK3:
   944                           	callstack 0
   945  000300                     _buff1:
   946                           	callstack 0
   947  000300                     	ds	255
   948                           
   949                           	psect	cstackBANK2
   950  0002C3                     __pcstackBANK2:
   951                           	callstack 0
   952  0002C3                     ?_printf:
   953                           	callstack 0
   954  0002C3                     ?_sprintf:
   955                           	callstack 0
   956  0002C3                     printf@fmt:
   957                           	callstack 0
   958  0002C3                     sprintf@s:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x0
   962  0002C3                     	ds	2
   963  0002C5                     sprintf@fmt:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x2
   967  0002C5                     	ds	5
   968  0002CA                     sprintf@ap:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x7
   972  0002CA                     	ds	2
   973  0002CC                     sprintf@f:
   974                           	callstack 0
   975                           
   976                           ; 11 bytes @ 0x9
   977  0002CC                     	ds	11
   978  0002D7                     cli_init@a_ctx:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x14
   982  0002D7                     	ds	2
   983  0002D9                     cli_init@a_cmds:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x16
   987  0002D9                     	ds	2
   988                           
   989                           	psect	cstackBANK0
   990  000060                     __pcstackBANK0:
   991                           	callstack 0
   992  000060                     ??__cli_interpret_cmd:
   993  000060                     ?_utoa:
   994                           	callstack 0
   995  000060                     ___flmul@sign:
   996                           	callstack 0
   997  000060                     utoa@fp:
   998                           	callstack 0
   999  000060                     floorf@m:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x0
  1003  000060                     	ds	1
  1004  000061                     ___flmul@aexp:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x1
  1008  000061                     	ds	1
  1009  000062                     ___flmul@bexp:
  1010                           	callstack 0
  1011  000062                     utoa@d:
  1012                           	callstack 0
  1013                           
  1014                           ; 8 bytes @ 0x2
  1015  000062                     	ds	1
  1016  000063                     ___flmul@grs:
  1017                           	callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x3
  1020  000063                     	ds	1
  1021  000064                     floorf@e:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x4
  1025  000064                     	ds	2
  1026  000066                     floorf@u:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x6
  1030  000066                     	ds	1
  1031  000067                     ___flmul@prod:
  1032                           	callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x7
  1035  000067                     	ds	3
  1036  00006A                     ??_utoa:
  1037  00006A                     _cli_read$2165:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xA
  1041  00006A                     	ds	1
  1042  00006B                     ___flmul@temp:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0xB
  1046  00006B                     	ds	1
  1047  00006C                     cli_read@i:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0xC
  1051  00006C                     	ds	1
  1052  00006D                     ??___flge:
  1053                           
  1054                           ; 1 bytes @ 0xD
  1055  00006D                     	ds	4
  1056  000071                     ?_efgtoa:
  1057                           	callstack 0
  1058  000071                     efgtoa@fp:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x11
  1062  000071                     	ds	1
  1063  000072                     utoa@p:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x12
  1067  000072                     	ds	1
  1068  000073                     efgtoa@f:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x13
  1072  000073                     	ds	1
  1073  000074                     utoa@w:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x14
  1077  000074                     	ds	2
  1078  000076                     utoa@n:
  1079                           	callstack 0
  1080                           
  1081                           ; 8 bytes @ 0x16
  1082  000076                     	ds	1
  1083  000077                     efgtoa@c:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x17
  1087  000077                     	ds	1
  1088  000078                     ??_efgtoa:
  1089                           
  1090                           ; 1 bytes @ 0x18
  1091  000078                     	ds	5
  1092  00007D                     _efgtoa$3072:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x1D
  1096  00007D                     	ds	1
  1097  00007E                     utoa@i:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x1E
  1101  00007E                     	ds	1
  1102  00007F                     _efgtoa$3080:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x1F
  1106  00007F                     	ds	2
  1107  000081                     _efgtoa$3081:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x21
  1111  000081                     	ds	2
  1112  000083                     efgtoa@t:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x23
  1116  000083                     	ds	2
  1117  000085                     efgtoa@pp:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x25
  1121  000085                     	ds	2
  1122  000087                     efgtoa@ne:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x27
  1126  000087                     	ds	2
  1127  000089                     efgtoa@m:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x29
  1131  000089                     	ds	2
  1132  00008B                     efgtoa@ou:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x2B
  1136  00008B                     	ds	4
  1137  00008F                     efgtoa@d:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x2F
  1141  00008F                     	ds	2
  1142  000091                     efgtoa@sign:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x31
  1146  000091                     	ds	2
  1147  000093                     efgtoa@p:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x33
  1151  000093                     	ds	2
  1152  000095                     efgtoa@nmode:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x35
  1156  000095                     	ds	1
  1157  000096                     efgtoa@w:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x36
  1161  000096                     	ds	2
  1162  000098                     efgtoa@mode:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x38
  1166  000098                     	ds	1
  1167  000099                     efgtoa@h:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x39
  1171  000099                     	ds	4
  1172  00009D                     efgtoa@l:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x3D
  1176  00009D                     	ds	4
  1177  0000A1                     efgtoa@g:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x41
  1181  0000A1                     	ds	4
  1182  0000A5                     efgtoa@i:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x45
  1186  0000A5                     	ds	2
  1187  0000A7                     efgtoa@e:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x47
  1191  0000A7                     	ds	2
  1192  0000A9                     efgtoa@n:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x49
  1196  0000A9                     	ds	2
  1197  0000AB                     efgtoa@u:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x4B
  1201  0000AB                     	ds	4
  1202  0000AF                     ?_vfpfcnvrt:
  1203                           	callstack 0
  1204  0000AF                     vfpfcnvrt@fp:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x4F
  1208  0000AF                     	ds	2
  1209  0000B1                     vfpfcnvrt@fmt:
  1210                           	callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x51
  1213  0000B1                     	ds	1
  1214  0000B2                     vfpfcnvrt@ap:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x52
  1218  0000B2                     	ds	2
  1219  0000B4                     ??_vfpfcnvrt:
  1220                           
  1221                           ; 1 bytes @ 0x54
  1222  0000B4                     	ds	4
  1223  0000B8                     vfpfcnvrt@llu:
  1224                           	callstack 0
  1225                           
  1226                           ; 8 bytes @ 0x58
  1227  0000B8                     	ds	8
  1228  0000C0                     vfpfcnvrt@cp:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x60
  1232  0000C0                     	ds	2
  1233  0000C2                     vfpfcnvrt@done:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x62
  1237  0000C2                     	ds	2
  1238  0000C4                     _vfpfcnvrt$3119:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x64
  1242  0000C4                     	ds	2
  1243  0000C6                     vfpfcnvrt@c:
  1244                           	callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x66
  1247  0000C6                     	ds	1
  1248  0000C7                     vfpfcnvrt@f:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x67
  1252  0000C7                     	ds	4
  1253  0000CB                     vfpfcnvrt@ct:
  1254                           	callstack 0
  1255                           
  1256                           ; 3 bytes @ 0x6B
  1257  0000CB                     	ds	3
  1258  0000CE                     ?_vfprintf:
  1259                           	callstack 0
  1260  0000CE                     vfprintf@fp:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x6E
  1264  0000CE                     	ds	2
  1265  0000D0                     vfprintf@fmt:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x70
  1269  0000D0                     	ds	1
  1270  0000D1                     vfprintf@ap:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x71
  1274  0000D1                     	ds	2
  1275  0000D3                     printf@ap:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x73
  1279  0000D3                     	ds	2
  1280  0000D5                     ??_main:
  1281                           
  1282                           ; 1 bytes @ 0x75
  1283  0000D5                     	ds	2
  1284  0000D7                     main@mode_sw:
  1285                           	callstack 0
  1286                           
  1287                           ; 1 bytes @ 0x77
  1288  0000D7                     	ds	1
  1289  0000D8                     main@dac_v:
  1290                           	callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x78
  1293  0000D8                     	ds	1
  1294                           
  1295                           	psect	cstackCOMRAM
  1296  000001                     __pcstackCOMRAM:
  1297                           	callstack 0
  1298  000001                     ?_ADCC_GetConversionResult:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x0
  1302  000001                     	ds	2
  1303  000003                     ??_ADCC_GetConversionResult:
  1304                           
  1305                           ; 1 bytes @ 0x2
  1306  000003                     	ds	2
  1307  000005                     ??_Adc_Isr:
  1308                           
  1309                           ; 1 bytes @ 0x4
  1310  000005                     	ds	1
  1311  000006                     ??_ADCC_ISR:
  1312                           
  1313                           ; 1 bytes @ 0x5
  1314  000006                     	ds	2
  1315  000008                     ??_Led_Blink:
  1316                           
  1317                           ; 1 bytes @ 0x7
  1318  000008                     	ds	1
  1319  000009                     ??_TMR6_ISR:
  1320                           
  1321                           ; 1 bytes @ 0x8
  1322  000009                     	ds	2
  1323  00000B                     ??_UART1_tx_vect_isr:
  1324                           
  1325                           ; 1 bytes @ 0xA
  1326  00000B                     	ds	2
  1327  00000D                     ??_UART1_rx_vect_isr:
  1328                           
  1329                           ; 1 bytes @ 0xC
  1330  00000D                     	ds	2
  1331  00000F                     TMR5_WriteTimer@timerVal:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0xE
  1335  00000F                     	ds	2
  1336  000011                     Timers_Isr@i:
  1337                           	callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x10
  1340  000011                     	ds	2
  1341  000013                     ??_TMR5_ISR:
  1342                           
  1343                           ; 1 bytes @ 0x12
  1344  000013                     	ds	2
  1345  000015                     ??_display_led:
  1346  000015                     ?_strlen:
  1347                           	callstack 0
  1348  000015                     ?___fpclassifyf:
  1349                           	callstack 0
  1350  000015                     ?_isupper:
  1351                           	callstack 0
  1352  000015                     ?_isdigit:
  1353                           	callstack 0
  1354  000015                     ?_isspace:
  1355                           	callstack 0
  1356  000015                     ?___wmul:
  1357                           	callstack 0
  1358  000015                     ?___awdiv:
  1359                           	callstack 0
  1360  000015                     ?___awmod:
  1361                           	callstack 0
  1362  000015                     ?___fladd:
  1363                           	callstack 0
  1364  000015                     ?___fldiv:
  1365                           	callstack 0
  1366  000015                     ?___flneg:
  1367                           	callstack 0
  1368  000015                     ?___fltol:
  1369                           	callstack 0
  1370  000015                     ?___xxtofl:
  1371                           	callstack 0
  1372  000015                     ?___lodiv:
  1373                           	callstack 0
  1374  000015                     ?___lomod:
  1375                           	callstack 0
  1376  000015                     DAC1_SetOutput@inputData:
  1377                           	callstack 0
  1378  000015                     INTERRUPT_Initialize@state:
  1379                           	callstack 0
  1380  000015                     UART1_Read@readValue:
  1381                           	callstack 0
  1382  000015                     UART1_Write@txData:
  1383                           	callstack 0
  1384  000015                     ___wmul@multiplier:
  1385                           	callstack 0
  1386  000015                     ___awdiv@dividend:
  1387                           	callstack 0
  1388  000015                     ___awmod@dividend:
  1389                           	callstack 0
  1390  000015                     memset@dest:
  1391                           	callstack 0
  1392  000015                     isdigit@c:
  1393                           	callstack 0
  1394  000015                     isspace@c:
  1395                           	callstack 0
  1396  000015                     isupper@c:
  1397                           	callstack 0
  1398  000015                     strcpy@dest:
  1399                           	callstack 0
  1400  000015                     strlen@s:
  1401                           	callstack 0
  1402  000015                     ADCC_SetADIInterruptHandler@InterruptHandler:
  1403                           	callstack 0
  1404  000015                     TMR6_SetInterruptHandler@InterruptHandler:
  1405                           	callstack 0
  1406  000015                     UART1_SetFramingErrorHandler@interruptHandler:
  1407                           	callstack 0
  1408  000015                     UART1_SetOverrunErrorHandler@interruptHandler:
  1409                           	callstack 0
  1410  000015                     UART1_SetErrorHandler@interruptHandler:
  1411                           	callstack 0
  1412  000015                     UART1_SetRxInterruptHandler@InterruptHandler:
  1413                           	callstack 0
  1414  000015                     UART1_SetTxInterruptHandler@InterruptHandler:
  1415                           	callstack 0
  1416  000015                     TMR5_SetInterruptHandler@InterruptHandler:
  1417                           	callstack 0
  1418  000015                     ___fleq@ff1:
  1419                           	callstack 0
  1420  000015                     ___flneg@f1:
  1421                           	callstack 0
  1422  000015                     ___fltol@f1:
  1423                           	callstack 0
  1424  000015                     ___fladd@b:
  1425                           	callstack 0
  1426  000015                     ___fldiv@b:
  1427                           	callstack 0
  1428  000015                     ___xxtofl@val:
  1429                           	callstack 0
  1430  000015                     ___fpclassifyf@x:
  1431                           	callstack 0
  1432  000015                     ___lodiv@dividend:
  1433                           	callstack 0
  1434  000015                     ___lomod@dividend:
  1435                           	callstack 0
  1436                           
  1437                           ; 8 bytes @ 0x14
  1438  000015                     	ds	1
  1439  000016                     putch@txData:
  1440                           	callstack 0
  1441  000016                     linux_getc@a_data:
  1442                           	callstack 0
  1443                           
  1444                           ; 1 bytes @ 0x15
  1445  000016                     	ds	1
  1446  000017                     ??_isupper:
  1447  000017                     ??_isdigit:
  1448  000017                     ??_isspace:
  1449  000017                     ??_linux_getc:
  1450  000017                     ?_fputc:
  1451                           	callstack 0
  1452  000017                     display_led@led:
  1453                           	callstack 0
  1454  000017                     ___wmul@multiplicand:
  1455                           	callstack 0
  1456  000017                     ___awdiv@divisor:
  1457                           	callstack 0
  1458  000017                     ___awmod@divisor:
  1459                           	callstack 0
  1460  000017                     memset@c:
  1461                           	callstack 0
  1462  000017                     fputc@c:
  1463                           	callstack 0
  1464  000017                     strcpy@src:
  1465                           	callstack 0
  1466  000017                     strlen@a:
  1467                           	callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x16
  1470  000017                     	ds	1
  1471  000018                     ??_TMR5_Initialize:
  1472  000018                     
  1473                           ; 1 bytes @ 0x17
  1474  000018                     	ds	1
  1475  000019                     ??___fpclassifyf:
  1476  000019                     ??_strcpy:
  1477  000019                     ??___fltol:
  1478  000019                     ??___xxtofl:
  1479  000019                     ?_strncmp:
  1480                           	callstack 0
  1481  000019                     ___awdiv@counter:
  1482                           	callstack 0
  1483  000019                     ___awmod@counter:
  1484                           	callstack 0
  1485  000019                     ___wmul@product:
  1486                           	callstack 0
  1487  000019                     memset@n:
  1488                           	callstack 0
  1489  000019                     fputc@fp:
  1490                           	callstack 0
  1491  000019                     strncmp@_l:
  1492                           	callstack 0
  1493  000019                     ___fleq@ff2:
  1494                           	callstack 0
  1495  000019                     ___fladd@a:
  1496                           	callstack 0
  1497  000019                     ___fldiv@a:
  1498                           	callstack 0
  1499                           
  1500                           ; 4 bytes @ 0x18
  1501  000019                     	ds	1
  1502  00001A                     ___awdiv@sign:
  1503                           	callstack 0
  1504  00001A                     ___awmod@sign:
  1505                           	callstack 0
  1506                           
  1507                           ; 1 bytes @ 0x19
  1508  00001A                     	ds	1
  1509  00001B                     ??_memset:
  1510  00001B                     ??_fputc:
  1511  00001B                     ?_tolower:
  1512                           	callstack 0
  1513  00001B                     _isspace$3184:
  1514                           	callstack 0
  1515  00001B                     ___awdiv@quotient:
  1516                           	callstack 0
  1517  00001B                     strcpy@s:
  1518                           	callstack 0
  1519  00001B                     strncmp@_r:
  1520                           	callstack 0
  1521  00001B                     tolower@c:
  1522                           	callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x1A
  1525  00001B                     	ds	1
  1526  00001C                     ?_atoi:
  1527                           	callstack 0
  1528  00001C                     atoi@s:
  1529                           	callstack 0
  1530                           
  1531                           ; 1 bytes @ 0x1B
  1532  00001C                     	ds	1
  1533  00001D                     ??___fladd:
  1534  00001D                     ??___fldiv:
  1535  00001D                     ??_tolower:
  1536  00001D                     ??___fleq:
  1537  00001D                     ___fltol@sign1:
  1538                           	callstack 0
  1539  00001D                     ___xxtofl@sign:
  1540                           	callstack 0
  1541  00001D                     memset@k:
  1542                           	callstack 0
  1543  00001D                     ___fpclassifyf@e:
  1544                           	callstack 0
  1545  00001D                     strcpy@d:
  1546                           	callstack 0
  1547  00001D                     strncmp@n:
  1548                           	callstack 0
  1549  00001D                     ___lodiv@divisor:
  1550                           	callstack 0
  1551  00001D                     ___lomod@divisor:
  1552                           	callstack 0
  1553                           
  1554                           ; 8 bytes @ 0x1C
  1555  00001D                     	ds	1
  1556  00001E                     ??_atoi:
  1557  00001E                     ___fltol@exp1:
  1558                           	callstack 0
  1559  00001E                     ___xxtofl@exp:
  1560                           	callstack 0
  1561                           
  1562                           ; 1 bytes @ 0x1D
  1563  00001E                     	ds	1
  1564  00001F                     ??_strncmp:
  1565  00001F                     memset@s:
  1566                           	callstack 0
  1567  00001F                     ___xxtofl@arg:
  1568                           	callstack 0
  1569  00001F                     ___fpclassifyf@u:
  1570                           	callstack 0
  1571                           
  1572                           ; 4 bytes @ 0x1E
  1573  00001F                     	ds	1
  1574  000020                     ?_fputs:
  1575                           	callstack 0
  1576  000020                     ?_stoa:
  1577                           	callstack 0
  1578  000020                     stoa@fp:
  1579                           	callstack 0
  1580  000020                     fputs@s:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x1F
  1584  000020                     	ds	1
  1585  000021                     ___fladd@signs:
  1586                           	callstack 0
  1587  000021                     strncmp@l:
  1588                           	callstack 0
  1589  000021                     ___fldiv@rem:
  1590                           	callstack 0
  1591                           
  1592                           ; 4 bytes @ 0x20
  1593  000021                     	ds	1
  1594  000022                     ___fladd@aexp:
  1595                           	callstack 0
  1596  000022                     stoa@s:
  1597                           	callstack 0
  1598  000022                     atoi@neg:
  1599                           	callstack 0
  1600  000022                     fputs@fp:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x21
  1604  000022                     	ds	1
  1605  000023                     ?___flmul:
  1606                           	callstack 0
  1607  000023                     ___fladd@bexp:
  1608                           	callstack 0
  1609  000023                     strncmp@r:
  1610                           	callstack 0
  1611  000023                     ___flmul@b:
  1612                           	callstack 0
  1613                           
  1614                           ; 4 bytes @ 0x22
  1615  000023                     	ds	1
  1616  000024                     ??_fputs:
  1617  000024                     ??_stoa:
  1618  000024                     ___fladd@grs:
  1619                           	callstack 0
  1620  000024                     atoi@n:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x23
  1624  000024                     	ds	1
  1625  000025                     ___lomod@counter:
  1626                           	callstack 0
  1627  000025                     ___fldiv@sign:
  1628                           	callstack 0
  1629  000025                     stoa@nuls:
  1630                           	callstack 0
  1631  000025                     ___lodiv@quotient:
  1632                           	callstack 0
  1633                           
  1634                           ; 8 bytes @ 0x24
  1635  000025                     	ds	1
  1636  000026                     fputs@c:
  1637                           	callstack 0
  1638  000026                     ___fldiv@new_exp:
  1639                           	callstack 0
  1640                           
  1641                           ; 2 bytes @ 0x25
  1642  000026                     	ds	1
  1643  000027                     fputs@i:
  1644                           	callstack 0
  1645  000027                     ___flmul@a:
  1646                           	callstack 0
  1647                           
  1648                           ; 4 bytes @ 0x26
  1649  000027                     	ds	1
  1650  000028                     ___fldiv@grs:
  1651                           	callstack 0
  1652                           
  1653                           ; 4 bytes @ 0x27
  1654  000028                     	ds	1
  1655  000029                     ?_pad:
  1656                           	callstack 0
  1657  000029                     pad@fp:
  1658                           	callstack 0
  1659  000029                     puts@s:
  1660                           	callstack 0
  1661                           
  1662                           ; 2 bytes @ 0x28
  1663  000029                     	ds	2
  1664  00002B                     ??___flmul:
  1665  00002B                     _puts$3263:
  1666                           	callstack 0
  1667  00002B                     pad@buf:
  1668                           	callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x2A
  1671  00002B                     	ds	1
  1672  00002C                     ___fldiv@bexp:
  1673                           	callstack 0
  1674  00002C                     fh_pr@a_data:
  1675                           	callstack 0
  1676  00002C                     fh_po@a_data:
  1677                           	callstack 0
  1678  00002C                     linux_putc@data:
  1679                           	callstack 0
  1680  00002C                     stoa@i:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x2B
  1684  00002C                     	ds	1
  1685  00002D                     ___lodiv@counter:
  1686                           	callstack 0
  1687  00002D                     ___fldiv@aexp:
  1688                           	callstack 0
  1689  00002D                     pad@p:
  1690                           	callstack 0
  1691                           
  1692                           ; 2 bytes @ 0x2C
  1693  00002D                     	ds	1
  1694  00002E                     ?_floorf:
  1695                           	callstack 0
  1696  00002E                     linux_putc@a_len:
  1697                           	callstack 0
  1698  00002E                     __cli_interpret_cmd@a_ctx:
  1699                           	callstack 0
  1700  00002E                     stoa@w:
  1701                           	callstack 0
  1702  00002E                     floorf@x:
  1703                           	callstack 0
  1704                           
  1705                           ; 4 bytes @ 0x2D
  1706  00002E                     	ds	1
  1707  00002F                     ??_pad:
  1708  00002F                     ?___flsub:
  1709                           	callstack 0
  1710  00002F                     ___flge@ff1:
  1711                           	callstack 0
  1712  00002F                     ___flsub@b:
  1713                           	callstack 0
  1714                           
  1715                           ; 4 bytes @ 0x2E
  1716  00002F                     	ds	1
  1717  000030                     __cli_interpret_cmd@ret:
  1718                           	callstack 0
  1719  000030                     pad@i:
  1720                           	callstack 0
  1721  000030                     stoa@cp:
  1722                           	callstack 0
  1723                           
  1724                           ; 2 bytes @ 0x2F
  1725  000030                     	ds	1
  1726  000031                     __cli_interpret_cmd@i:
  1727                           	callstack 0
  1728                           
  1729                           ; 1 bytes @ 0x30
  1730  000031                     	ds	1
  1731  000032                     ??_floorf:
  1732  000032                     cli_read@a_ctx:
  1733                           	callstack 0
  1734  000032                     pad@w:
  1735                           	callstack 0
  1736  000032                     stoa@p:
  1737                           	callstack 0
  1738                           
  1739                           ; 2 bytes @ 0x31
  1740  000032                     	ds	1
  1741  000033                     ___flge@ff2:
  1742                           	callstack 0
  1743  000033                     ___flsub@a:
  1744                           	callstack 0
  1745                           
  1746                           ; 4 bytes @ 0x32
  1747  000033                     	ds	1
  1748  000034                     ??_cli_read:
  1749  000034                     stoa@l:
  1750                           	callstack 0
  1751                           
  1752                           ; 2 bytes @ 0x33
  1753  000034                     	ds	3
  1754  000037                     
  1755                           ; 1 bytes @ 0x36
  1756  000037                     	ds	1
  1757  000038                     vfprintf@cfmt:
  1758                           	callstack 0
  1759                           
  1760                           ; 1 bytes @ 0x37
  1761  000038                     	ds	1
  1762  000039                     
  1763                           ; 1 bytes @ 0x38
  1764 ;;
  1765 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1766 ;;
  1767 ;; *************** function _main *****************
  1768 ;; Defined at:
  1769 ;;		line 121 in file "main.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  dac_v           1  120[BANK0 ] unsigned char 
  1774 ;;  mode_sw         1  119[BANK0 ] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 3F/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1785 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1786 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1787 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1788 ;;Total ram usage:        4 bytes
  1789 ;; Hardware stack levels required when called: 15
  1790 ;; This function calls:
  1791 ;;		_ADCC_SetADIInterruptHandler
  1792 ;;		_DAC1_GetOutput
  1793 ;;		_DAC1_SetOutput
  1794 ;;		_SYSTEM_Initialize
  1795 ;;		_TMR5_SetInterruptHandler
  1796 ;;		_TMR6_SetInterruptHandler
  1797 ;;		___flmul
  1798 ;;		___xxtofl
  1799 ;;		_cli_read
  1800 ;;		_display_led
  1801 ;;		_printf
  1802 ;;		_scmd_init
  1803 ;; This function is called by:
  1804 ;;		Startup code after reset
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text0
  1809  003A2A                     __ptext0:
  1810                           	callstack 0
  1811  003A2A                     _main:
  1812                           	callstack 16
  1813                           
  1814                           ;main.c: 123:  uint8_t dac_v = 0, mode_sw = 0;
  1815                           
  1816                           ;incstack = 0
  1817  003A2A  0E00               	movlw	0
  1818  003A2C  0100               	movlb	0	; () banked
  1819  003A2E  6FD8               	movwf	main@dac_v& (0+255),b
  1820  003A30  0E00               	movlw	0
  1821  003A32  6FD7               	movwf	main@mode_sw& (0+255),b
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;main.c: 125:  SYSTEM_Initialize();
  1825  003A34  ECF3  F02C         	call	_SYSTEM_Initialize	;wreg free
  1826                           
  1827                           ; BSR set to: 61
  1828  003A38  92BD               	bcf	189,1,c	;volatile
  1829                           
  1830                           ; BSR set to: 61
  1831  003A3A  94BE               	bcf	190,2,c	;volatile
  1832                           
  1833                           ; BSR set to: 61
  1834                           ;main.c: 129:  TMR6_SetInterruptHandler(Led_Blink);
  1835  003A3C  0E44               	movlw	low _Led_Blink
  1836  003A3E  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  1837  003A40  0E5C               	movlw	high _Led_Blink
  1838  003A42  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  1839  003A44  0E00               	movlw	low (_Led_Blink shr (0+16))
  1840  003A46  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  1841  003A48  ECD0  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
  1842                           
  1843                           ;main.c: 130:  TMR5_SetInterruptHandler(Timers_Isr);
  1844  003A4C  0E76               	movlw	low _Timers_Isr
  1845  003A4E  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  1846  003A50  0E55               	movlw	high _Timers_Isr
  1847  003A52  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  1848  003A54  0E00               	movlw	low (_Timers_Isr shr (0+16))
  1849  003A56  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  1850  003A58  ECD7  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
  1851                           
  1852                           ;main.c: 131:  ADCC_SetADIInterruptHandler(Adc_Isr);
  1853  003A5C  0E72               	movlw	low _Adc_Isr
  1854  003A5E  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  1855  003A60  0E59               	movlw	high _Adc_Isr
  1856  003A62  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  1857  003A64  0E00               	movlw	low (_Adc_Isr shr (0+16))
  1858  003A66  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
  1859  003A68  ECDE  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
  1860                           
  1861                           ;main.c: 132:  ADPCH = adc_chan;
  1862  003A6C  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
  1863                           
  1864                           ;main.c: 137:  scmd_init();
  1865  003A72  EC4C  F02E         	call	_scmd_init	;wreg free
  1866                           
  1867                           ;main.c: 140:  (INTCON0bits.GIEH = 1);
  1868  003A76  8ED2               	bsf	210,7,c	;volatile
  1869                           
  1870                           ;main.c: 145:  DAC1_SetOutput(dac_v);
  1871  003A78  0E00               	movlw	0
  1872  003A7A  ECF0  F02E         	call	_DAC1_SetOutput
  1873  003A7E                     l10769:
  1874                           
  1875                           ;main.c: 148:   if (adc_tick) {
  1876  003A7E  0100               	movlb	0	; () banked
  1877  003A80  51FC               	movf	_adc_tick& (0+255),w,b	;volatile
  1878  003A82  B4D8               	btfsc	status,2,c
  1879  003A84  D7FC               	goto	l10769
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 149:    if (ana[0] < 900) {
  1883  003A86  0E84               	movlw	132
  1884  003A88  5C39               	subwf	_ana^0,w,c	;volatile
  1885  003A8A  0E03               	movlw	3
  1886  003A8C  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1887  003A8E  B0D8               	btfsc	status,0,c
  1888  003A90  D004               	goto	l10775
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;main.c: 150:     display_led(oo00_off);
  1892  003A92  0E00               	movlw	0
  1893  003A94  ECA7  F026         	call	_display_led
  1894                           
  1895                           ;main.c: 151:    } else {
  1896  003A98  D00D               	goto	l10781
  1897  003A9A                     l10775:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;main.c: 152:     if (ana[0] > 1800) {
  1901  003A9A  0E09               	movlw	9
  1902  003A9C  5C39               	subwf	_ana^0,w,c	;volatile
  1903  003A9E  0E07               	movlw	7
  1904  003AA0  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1905  003AA2  A0D8               	btfss	status,0,c
  1906  003AA4  D004               	goto	l10779
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;main.c: 153:      display_led(oo00_g);
  1910  003AA6  0E01               	movlw	1
  1911  003AA8  ECA7  F026         	call	_display_led
  1912                           
  1913                           ;main.c: 154:     } else {
  1914  003AAC  D003               	goto	l10781
  1915  003AAE                     l10779:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;main.c: 155:      display_led(oo00_r);
  1919  003AAE  0E02               	movlw	2
  1920  003AB0  ECA7  F026         	call	_display_led
  1921  003AB4                     l10781:
  1922                           
  1923                           ;main.c: 159:    if (ana[1] < 50) {
  1924  003AB4  503C               	movf	(_ana+3)^0,w,c	;volatile
  1925  003AB6  E108               	bnz	l10785
  1926  003AB8  0E32               	movlw	50
  1927  003ABA  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1928  003ABC  B0D8               	btfsc	status,0,c
  1929  003ABE  D004               	goto	l10785
  1930                           
  1931                           ;main.c: 160:     display_led(oo10_off);
  1932  003AC0  0E03               	movlw	3
  1933  003AC2  ECA7  F026         	call	_display_led
  1934                           
  1935                           ;main.c: 161:    } else {
  1936  003AC6  D00D               	goto	l10791
  1937  003AC8                     l10785:
  1938                           
  1939                           ;main.c: 162:     if (ana[1] > 150) {
  1940  003AC8  503C               	movf	(_ana+3)^0,w,c	;volatile
  1941  003ACA  E104               	bnz	u12400
  1942  003ACC  0E97               	movlw	151
  1943  003ACE  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1944  003AD0  A0D8               	btfss	status,0,c
  1945  003AD2  D004               	goto	l10789
  1946  003AD4                     u12400:
  1947                           
  1948                           ;main.c: 163:      display_led(oo10_g);
  1949  003AD4  0E04               	movlw	4
  1950  003AD6  ECA7  F026         	call	_display_led
  1951                           
  1952                           ;main.c: 164:     } else {
  1953  003ADA  D003               	goto	l10791
  1954  003ADC                     l10789:
  1955                           
  1956                           ;main.c: 165:      display_led(oo10_r);
  1957  003ADC  0E05               	movlw	5
  1958  003ADE  ECA7  F026         	call	_display_led
  1959  003AE2                     l10791:
  1960                           
  1961                           ;main.c: 168:    adc_tick = 0;
  1962  003AE2  0E00               	movlw	0
  1963  003AE4  0100               	movlb	0	; () banked
  1964  003AE6  6FFC               	movwf	_adc_tick& (0+255),b	;volatile
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;main.c: 170:    if (!PORTAbits.RA6) {
  1968  003AE8  BCCA               	btfsc	202,6,c	;volatile
  1969  003AEA  D004               	goto	l10797
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;main.c: 171:     display_led(oo30_r);
  1973  003AEC  0E0B               	movlw	11
  1974  003AEE  ECA7  F026         	call	_display_led
  1975                           
  1976                           ;main.c: 172:    } else {
  1977  003AF2  D003               	goto	l10799
  1978  003AF4                     l10797:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;main.c: 173:     display_led(oo30_off);
  1982  003AF4  0E09               	movlw	9
  1983  003AF6  ECA7  F026         	call	_display_led
  1984  003AFA                     l10799:
  1985                           
  1986                           ;main.c: 177:    if (!PORTAbits.RA4) {
  1987  003AFA  B8CA               	btfsc	202,4,c	;volatile
  1988  003AFC  D004               	goto	l10803
  1989                           
  1990                           ;main.c: 178:     display_led(oo20_g);
  1991  003AFE  0E07               	movlw	7
  1992  003B00  ECA7  F026         	call	_display_led
  1993                           
  1994                           ;main.c: 179:    } else {
  1995  003B04  D003               	goto	l10805
  1996  003B06                     l10803:
  1997                           
  1998                           ;main.c: 180:     display_led(oo20_off);
  1999  003B06  0E06               	movlw	6
  2000  003B08  ECA7  F026         	call	_display_led
  2001  003B0C                     l10805:
  2002                           
  2003                           ;main.c: 183:    if (disp_tick) {
  2004  003B0C  0100               	movlb	0	; () banked
  2005  003B0E  51FD               	movf	_disp_tick& (0+255),w,b	;volatile
  2006  003B10  B4D8               	btfsc	status,2,c
  2007  003B12  D7B5               	goto	l10769
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 184:     vval = (double) ana[0] * 0.405194;
  2011  003B14  C039  F015         	movff	_ana,___xxtofl@val	;volatile
  2012  003B18  C03A  F016         	movff	_ana+1,___xxtofl@val+1	;volatile
  2013  003B1C  6A17               	clrf	(___xxtofl@val+2)^0,c
  2014  003B1E  6A18               	clrf	(___xxtofl@val+3)^0,c
  2015  003B20  0E00               	movlw	0
  2016  003B22  EC75  F023         	call	___xxtofl
  2017  003B26  C015  F023         	movff	?___xxtofl,___flmul@b
  2018  003B2A  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  2019  003B2E  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  2020  003B32  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  2021  003B36  0E97               	movlw	151
  2022  003B38  6E27               	movwf	___flmul@a^0,c
  2023  003B3A  0E75               	movlw	117
  2024  003B3C  6E28               	movwf	(___flmul@a+1)^0,c
  2025  003B3E  0ECF               	movlw	207
  2026  003B40  6E29               	movwf	(___flmul@a+2)^0,c
  2027  003B42  0E3E               	movlw	62
  2028  003B44  6E2A               	movwf	(___flmul@a+3)^0,c
  2029  003B46  ECA2  F018         	call	___flmul	;wreg free
  2030  003B4A  C023  F0D9         	movff	?___flmul,_vval
  2031  003B4E  C024  F0DA         	movff	?___flmul+1,_vval+1
  2032  003B52  C025  F0DB         	movff	?___flmul+2,_vval+2
  2033  003B56  C026  F0DC         	movff	?___flmul+3,_vval+3
  2034                           
  2035                           ;main.c: 185:     ival = (double) ana[1] * 0.004;
  2036  003B5A  C03B  F015         	movff	_ana+2,___xxtofl@val	;volatile
  2037  003B5E  C03C  F016         	movff	_ana+3,___xxtofl@val+1	;volatile
  2038  003B62  6A17               	clrf	(___xxtofl@val+2)^0,c
  2039  003B64  6A18               	clrf	(___xxtofl@val+3)^0,c
  2040  003B66  0E00               	movlw	0
  2041  003B68  EC75  F023         	call	___xxtofl
  2042  003B6C  C015  F023         	movff	?___xxtofl,___flmul@b
  2043  003B70  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  2044  003B74  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  2045  003B78  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  2046  003B7C  0E6F               	movlw	111
  2047  003B7E  6E27               	movwf	___flmul@a^0,c
  2048  003B80  0E12               	movlw	18
  2049  003B82  6E28               	movwf	(___flmul@a+1)^0,c
  2050  003B84  0E83               	movlw	131
  2051  003B86  6E29               	movwf	(___flmul@a+2)^0,c
  2052  003B88  0E3B               	movlw	59
  2053  003B8A  6E2A               	movwf	(___flmul@a+3)^0,c
  2054  003B8C  ECA2  F018         	call	___flmul	;wreg free
  2055  003B90  C023  F194         	movff	?___flmul,_ival
  2056  003B94  C024  F195         	movff	?___flmul+1,_ival+1
  2057  003B98  C025  F196         	movff	?___flmul+2,_ival+2
  2058  003B9C  C026  F197         	movff	?___flmul+3,_ival+3
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;main.c: 186:     printf(" PS Test %1u: DAC OUT=%.2u, Supply ReadBack %4.4u V=%+6.1fV %4
      +                          .4u I=%+3.1fmA\r\n", mode, (uint16_t) DAC1_GetOutput(), ana[0], vval, ana[1], ival);
  2062  003BA0  0E22               	movlw	low STR_6
  2063  003BA2  0102               	movlb	2	; () banked
  2064  003BA4  6FC3               	movwf	printf@fmt& (0+255),b
  2065  003BA6  C0FB  F2C4         	movff	_mode,?_printf+1
  2066  003BAA  6BC5               	clrf	(?_printf+2)& (0+255),b
  2067  003BAC  ECF5  F02E         	call	_DAC1_GetOutput	;wreg free
  2068  003BB0  0100               	movlb	0	; () banked
  2069  003BB2  6FD5               	movwf	??_main& (0+255),b
  2070  003BB4  51D5               	movf	??_main& (0+255),w,b
  2071  003BB6  0102               	movlb	2	; () banked
  2072  003BB8  6FC6               	movwf	(?_printf+3)& (0+255),b
  2073  003BBA  6BC7               	clrf	(?_printf+4)& (0+255),b
  2074  003BBC  C039  F2C8         	movff	_ana,?_printf+5	;volatile
  2075  003BC0  C03A  F2C9         	movff	_ana+1,?_printf+6	;volatile
  2076  003BC4  C0D9  F2CA         	movff	_vval,?_printf+7
  2077  003BC8  C0DA  F2CB         	movff	_vval+1,?_printf+8
  2078  003BCC  C0DB  F2CC         	movff	_vval+2,?_printf+9
  2079  003BD0  C0DC  F2CD         	movff	_vval+3,?_printf+10
  2080  003BD4  C03B  F2CE         	movff	_ana+2,?_printf+11	;volatile
  2081  003BD8  C03C  F2CF         	movff	_ana+3,?_printf+12	;volatile
  2082  003BDC  C194  F2D0         	movff	_ival,?_printf+13
  2083  003BE0  C195  F2D1         	movff	_ival+1,?_printf+14
  2084  003BE4  C196  F2D2         	movff	_ival+2,?_printf+15
  2085  003BE8  C197  F2D3         	movff	_ival+3,?_printf+16
  2086  003BEC  ECE0  F02D         	call	_printf	;wreg free
  2087                           
  2088                           ;main.c: 191:     switch (mode) {
  2089  003BF0  D01D               	goto	l10839
  2090  003BF2                     l10811:
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;main.c: 193:      if (dac_v > 19) {
  2094  003BF2  0E13               	movlw	19
  2095  003BF4  65D8               	cpfsgt	main@dac_v& (0+255),b
  2096  003BF6  D002               	goto	l10815
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;main.c: 194:       dac_v = 0;
  2100  003BF8  0E00               	movlw	0
  2101  003BFA  6FD8               	movwf	main@dac_v& (0+255),b
  2102  003BFC                     l10815:
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;main.c: 196:      DAC1_SetOutput(++dac_v);
  2106  003BFC  2BD8               	incf	main@dac_v& (0+255),f,b
  2107  003BFE  51D8               	movf	main@dac_v& (0+255),w,b
  2108  003C00  ECF0  F02E         	call	_DAC1_SetOutput
  2109  003C04  D007               	goto	l10825
  2110  003C06                     l10819:
  2111  003C06  9ABA               	bcf	186,5,c	;volatile
  2112  003C08  D023               	goto	l10841
  2113  003C0A                     l10821:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;main.c: 201:      dac_v = 20;
  2117  003C0A  0E14               	movlw	20
  2118  003C0C  6FD8               	movwf	main@dac_v& (0+255),b
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;main.c: 202:      DAC1_SetOutput(dac_v);
  2122  003C0E  0E14               	movlw	20
  2123  003C10  ECF0  F02E         	call	_DAC1_SetOutput
  2124  003C14                     l10825:
  2125  003C14  82BD               	bsf	189,1,c	;volatile
  2126  003C16  D7F7               	goto	l10819
  2127  003C18                     l10829:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;main.c: 208:      mode = off_mode;
  2131  003C18  0E00               	movlw	0
  2132  003C1A  6FFB               	movwf	_mode& (0+255),b
  2133                           
  2134                           ;main.c: 209:      dac_v = 0;
  2135  003C1C  0E00               	movlw	0
  2136  003C1E  6FD8               	movwf	main@dac_v& (0+255),b
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;main.c: 210:      DAC1_SetOutput(dac_v);
  2140  003C20  0E00               	movlw	0
  2141  003C22  ECF0  F02E         	call	_DAC1_SetOutput
  2142  003C26  92BD               	bcf	189,1,c	;volatile
  2143  003C28  8ABA               	bsf	186,5,c	;volatile
  2144  003C2A  D012               	goto	l10841
  2145  003C2C                     l10839:
  2146                           
  2147                           ; BSR set to: 0
  2148  003C2C  51FB               	movf	_mode& (0+255),w,b
  2149  003C2E  6FD5               	movwf	??_main& (0+255),b
  2150  003C30  6BD6               	clrf	(??_main+1)& (0+255),b
  2151                           
  2152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2153                           ; Switch size 1, requested type "simple"
  2154                           ; Number of cases is 1, Range of values is 0 to 0
  2155                           ; switch strategies available:
  2156                           ; Name         Instructions Cycles
  2157                           ; simple_byte            4     3 (average)
  2158                           ;	Chosen strategy is simple_byte
  2159  003C32  51D6               	movf	(??_main+1)& (0+255),w,b
  2160  003C34  0A00               	xorlw	0	; case 0
  2161  003C36  A4D8               	btfss	status,2,c
  2162  003C38  D7EF               	goto	l10829
  2163                           
  2164                           ; BSR set to: 0
  2165                           ; Switch size 1, requested type "simple"
  2166                           ; Number of cases is 3, Range of values is 0 to 2
  2167                           ; switch strategies available:
  2168                           ; Name         Instructions Cycles
  2169                           ; simple_byte           10     6 (average)
  2170                           ;	Chosen strategy is simple_byte
  2171  003C3A  51D5               	movf	??_main& (0+255),w,b
  2172  003C3C  0A00               	xorlw	0	; case 0
  2173  003C3E  B4D8               	btfsc	status,2,c
  2174  003C40  D7EB               	goto	l10829
  2175  003C42  0A01               	xorlw	1	; case 1
  2176  003C44  B4D8               	btfsc	status,2,c
  2177  003C46  D7D5               	goto	l10811
  2178  003C48  0A03               	xorlw	3	; case 2
  2179  003C4A  B4D8               	btfsc	status,2,c
  2180  003C4C  D7DE               	goto	l10821
  2181  003C4E  D7E4               	goto	l10829
  2182  003C50                     l10841:
  2183                           
  2184                           ;main.c: 220:     cli_read(&cli_ctx);
  2185  003C50  0E40               	movlw	low _cli_ctx
  2186  003C52  6E32               	movwf	cli_read@a_ctx^0,c
  2187  003C54  0E02               	movlw	high _cli_ctx
  2188  003C56  6E33               	movwf	(cli_read@a_ctx+1)^0,c
  2189  003C58  EC80  F021         	call	_cli_read	;wreg free
  2190                           
  2191                           ;main.c: 221:     disp_tick = 0;
  2192  003C5C  0E00               	movlw	0
  2193  003C5E  0100               	movlb	0	; () banked
  2194  003C60  6FFD               	movwf	_disp_tick& (0+255),b	;volatile
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 222:     if (!PORTBbits.RB0) {
  2198  003C62  B0CB               	btfsc	203,0,c	;volatile
  2199  003C64  D009               	goto	l10855
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;main.c: 223:      if (++mode_sw > 4) {
  2203  003C66  2BD7               	incf	main@mode_sw& (0+255),f,b
  2204  003C68  0E04               	movlw	4
  2205  003C6A  65D7               	cpfsgt	main@mode_sw& (0+255),b
  2206  003C6C  D708               	goto	l10769
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;main.c: 224:       mode++;
  2210  003C6E  2BFB               	incf	_mode& (0+255),f,b
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;main.c: 225:       mode_sw = 0;
  2214  003C70  0E00               	movlw	0
  2215  003C72  6FD7               	movwf	main@mode_sw& (0+255),b
  2216                           
  2217                           ; BSR set to: 0
  2218  003C74  84BE               	bsf	190,2,c	;volatile
  2219  003C76  D703               	goto	l10769
  2220  003C78                     l10855:
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;main.c: 229:      mode_sw = 0;
  2224  003C78  0E00               	movlw	0
  2225  003C7A  6FD7               	movwf	main@mode_sw& (0+255),b
  2226                           
  2227                           ; BSR set to: 0
  2228  003C7C  94BE               	bcf	190,2,c	;volatile
  2229  003C7E  D6FF               	goto	l10769
  2230  003C80                     __end_of_main:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _scmd_init *****************
  2234 ;; Defined at:
  2235 ;;		line 32 in file "scdm.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 3B/3D
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2253 ;;Total ram usage:        0 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 14
  2256 ;; This function calls:
  2257 ;;		_cli_init
  2258 ;; This function is called by:
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text1
  2264  005C98                     __ptext1:
  2265                           	callstack 0
  2266  005C98                     _scmd_init:
  2267                           	callstack 16
  2268                           
  2269                           ;scdm.c: 34:  cli_init(&cli_ctx, g_cmds);
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;incstack = 0
  2273  005C98  0E40               	movlw	low _cli_ctx
  2274  005C9A  0102               	movlb	2	; () banked
  2275  005C9C  6FD7               	movwf	cli_init@a_ctx& (0+255),b
  2276  005C9E  0E02               	movlw	high _cli_ctx
  2277  005CA0  6FD8               	movwf	(cli_init@a_ctx+1)& (0+255),b
  2278  005CA2  0EEF               	movlw	low _g_cmds
  2279  005CA4  6FD9               	movwf	cli_init@a_cmds& (0+255),b
  2280  005CA6  0E01               	movlw	high _g_cmds
  2281  005CA8  6FDA               	movwf	(cli_init@a_cmds+1)& (0+255),b
  2282  005CAA  EC39  F029         	call	_cli_init	;wreg free
  2283  005CAE  0012               	return		;funcret
  2284  005CB0                     __end_of_scmd_init:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _cli_init *****************
  2288 ;; Defined at:
  2289 ;;		line 20 in file "scdm.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  a_ctx           2   20[BANK2 ] PTR struct _t_cli_ctx
  2292 ;;		 -> cli_ctx(131), 
  2293 ;;  a_cmds          2   22[BANK2 ] PTR struct _t_cmd
  2294 ;;		 -> g_cmds(16), 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 3F/2
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2306 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2309 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2310 ;;Total ram usage:        4 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 13
  2313 ;; This function calls:
  2314 ;;		_memset
  2315 ;;		_puts
  2316 ;;		_sprintf
  2317 ;; This function is called by:
  2318 ;;		_scmd_init
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text2
  2323  005272                     __ptext2:
  2324                           	callstack 0
  2325  005272                     _cli_init:
  2326                           	callstack 16
  2327                           
  2328                           ; BSR set to: 2
  2329                           ;scdm.c: 20: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 21: {;scdm.c:
      +                           22:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  2330                           
  2331                           ;incstack = 0
  2332  005272  C2D7  F015         	movff	cli_init@a_ctx,memset@dest
  2333  005276  C2D8  F016         	movff	cli_init@a_ctx+1,memset@dest+1
  2334  00527A  0E00               	movlw	0
  2335  00527C  6E18               	movwf	(memset@c+1)^0,c
  2336  00527E  0E00               	movlw	0
  2337  005280  6E17               	movwf	memset@c^0,c
  2338  005282  0E00               	movlw	0
  2339  005284  6E1A               	movwf	(memset@n+1)^0,c
  2340  005286  0E83               	movlw	131
  2341  005288  6E19               	movwf	memset@n^0,c
  2342  00528A  EC2B  F022         	call	_memset	;wreg free
  2343                           
  2344                           ;scdm.c: 23:  a_ctx->cmds = a_cmds;
  2345  00528E  0060  FB5F  FFD9   	movff	cli_init@a_ctx,fsr2l
  2346  005294  0060  FB63  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  2347  00529A  0060  FB67  FFDE   	movff	cli_init@a_cmds,postinc2
  2348  0052A0  0060  FB6B  FFDD   	movff	cli_init@a_cmds+1,postdec2
  2349  0052A6  0E02               	movlw	2
  2350  0052A8  0102               	movlb	2	; () banked
  2351  0052AA  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2352  0052AC  6FC3               	movwf	sprintf@s& (0+255),b
  2353  0052AE  0E00               	movlw	0
  2354  0052B0  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2355  0052B2  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  2356  0052B4  0EA2               	movlw	low STR_10
  2357  0052B6  6FC5               	movwf	sprintf@fmt& (0+255),b
  2358  0052B8  0EC9               	movlw	low STR_1
  2359  0052BA  6FC6               	movwf	(?_sprintf+3)& (0+255),b
  2360  0052BC  51C6               	movf	(?_sprintf+3)& (0+255),w,b
  2361  0052BE  A4D8               	btfss	status,2,c
  2362  0052C0  0E20               	movlw	high __smallconst
  2363  0052C2  6FC7               	movwf	(?_sprintf+4)& (0+255),b
  2364  0052C4  0ED5               	movlw	low STR_2
  2365  0052C6  6FC8               	movwf	(?_sprintf+5)& (0+255),b
  2366  0052C8  51C8               	movf	(?_sprintf+5)& (0+255),w,b
  2367  0052CA  A4D8               	btfss	status,2,c
  2368  0052CC  0E20               	movlw	high __smallconst
  2369  0052CE  6FC9               	movwf	(?_sprintf+6)& (0+255),b
  2370  0052D0  ECE4  F02A         	call	_sprintf	;wreg free
  2371                           
  2372                           ; BSR set to: 2
  2373                           ;scdm.c: 28:  puts(a_ctx->cmd);
  2374  0052D4  0E02               	movlw	2
  2375  0052D6  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2376  0052D8  6E29               	movwf	puts@s^0,c
  2377  0052DA  0E00               	movlw	0
  2378  0052DC  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2379  0052DE  6E2A               	movwf	(puts@s+1)^0,c
  2380  0052E0  EC9C  F02C         	call	_puts	;wreg free
  2381                           
  2382                           ;scdm.c: 29:  puts(cmdm);
  2383  0052E4  0E06               	movlw	low _cmdm
  2384  0052E6  6E29               	movwf	puts@s^0,c
  2385  0052E8  5029               	movf	puts@s^0,w,c
  2386  0052EA  A4D8               	btfss	status,2,c
  2387  0052EC  0E20               	movlw	high __smallconst
  2388  0052EE  6E2A               	movwf	(puts@s+1)^0,c
  2389  0052F0  EC9C  F02C         	call	_puts	;wreg free
  2390  0052F4  0012               	return		;funcret
  2391  0052F6                     __end_of_cli_init:
  2392                           	callstack 0
  2393                           
  2394 ;; *************** function _sprintf *****************
  2395 ;; Defined at:
  2396 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  s               2    0[BANK2 ] PTR unsigned char 
  2399 ;;		 -> cli_ctx(131), 
  2400 ;;  fmt             1    2[BANK2 ] PTR const unsigned char 
  2401 ;;		 -> STR_10(21), 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  f              11    9[BANK2 ] struct _IO_FILE
  2404 ;;  ap              2    7[BANK2 ] PTR void [1]
  2405 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2406 ;;  ret             2    0        int 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  2    0[BANK2 ] int 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 3F/2
  2413 ;;		On exit  : 3F/2
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2416 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2417 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2419 ;;      Totals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2420 ;;Total ram usage:       20 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 12
  2423 ;; This function calls:
  2424 ;;		_vfprintf
  2425 ;; This function is called by:
  2426 ;;		_cli_init
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text3
  2431  0055C8                     __ptext3:
  2432                           	callstack 0
  2433  0055C8                     _sprintf:
  2434                           	callstack 16
  2435                           
  2436                           ; BSR set to: 2
  2437                           
  2438                           ;incstack = 0
  2439  0055C8  0EC6               	movlw	low (?_sprintf+3)
  2440  0055CA  6FCA               	movwf	sprintf@ap& (0+255),b
  2441  0055CC  0E02               	movlw	high (?_sprintf+3)
  2442  0055CE  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  2443  0055D0  C2C3  F2CC         	movff	sprintf@s,sprintf@f
  2444  0055D4  C2C4  F2CD         	movff	sprintf@s+1,sprintf@f+1
  2445                           
  2446                           ; BSR set to: 2
  2447  0055D8  0E00               	movlw	0
  2448  0055DA  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  2449  0055DC  0E00               	movlw	0
  2450  0055DE  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  2451                           
  2452                           ; BSR set to: 2
  2453  0055E0  0E00               	movlw	0
  2454  0055E2  6FD6               	movwf	(sprintf@f+10)& (0+255),b
  2455  0055E4  0E00               	movlw	0
  2456  0055E6  6FD5               	movwf	(sprintf@f+9)& (0+255),b
  2457                           
  2458                           ; BSR set to: 2
  2459  0055E8  0ECC               	movlw	low sprintf@f
  2460  0055EA  0100               	movlb	0	; () banked
  2461  0055EC  6FCE               	movwf	vfprintf@fp& (0+255),b
  2462  0055EE  0E02               	movlw	high sprintf@f
  2463  0055F0  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2464  0055F2  C2C5  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  2465  0055F6  0ECA               	movlw	low sprintf@ap
  2466  0055F8  6FD1               	movwf	vfprintf@ap& (0+255),b
  2467  0055FA  0E02               	movlw	high sprintf@ap
  2468  0055FC  6FD2               	movwf	(vfprintf@ap+1)& (0+255),b
  2469  0055FE  EC92  F02A         	call	_vfprintf	;wreg free
  2470                           
  2471                           ; BSR set to: 0
  2472  005602  0102               	movlb	2	; () banked
  2473  005604  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  2474  005606  25C3               	addwf	sprintf@s& (0+255),w,b
  2475  005608  6ED9               	movwf	fsr2l,c
  2476  00560A  51D0               	movf	(sprintf@f+4)& (0+255),w,b
  2477  00560C  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  2478  00560E  6EDA               	movwf	fsr2h,c
  2479  005610  0E00               	movlw	0
  2480  005612  6EDF               	movwf	indf2,c
  2481                           
  2482                           ; BSR set to: 2
  2483  005614  0012               	return		;funcret
  2484  005616                     __end_of_sprintf:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function _printf *****************
  2488 ;; Defined at:
  2489 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  fmt             1    0[BANK2 ] PTR const unsigned char 
  2492 ;;		 -> STR_6(79), 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  ap              2  115[BANK0 ] PTR void [1]
  2495 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2496 ;;  ret             2    0        int 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  2    0[BANK2 ] int 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 3F/2
  2503 ;;		On exit  : 3F/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2506 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2509 ;;      Totals:         0       2       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2510 ;;Total ram usage:       19 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 12
  2513 ;; This function calls:
  2514 ;;		_vfprintf
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text4
  2521  005BC0                     __ptext4:
  2522                           	callstack 0
  2523  005BC0                     _printf:
  2524                           	callstack 18
  2525                           
  2526                           ; BSR set to: 2
  2527                           
  2528                           ; BSR set to: 2
  2529                           ;incstack = 0
  2530  005BC0  0EC4               	movlw	low (?_printf+1)
  2531  005BC2  0100               	movlb	0	; () banked
  2532  005BC4  6FD3               	movwf	printf@ap& (0+255),b
  2533  005BC6  0E02               	movlw	high (?_printf+1)
  2534  005BC8  6FD4               	movwf	(printf@ap+1)& (0+255),b
  2535                           
  2536                           ; BSR set to: 0
  2537  005BCA  0E00               	movlw	0
  2538  005BCC  6FCE               	movwf	vfprintf@fp& (0+255),b
  2539  005BCE  0E00               	movlw	0
  2540  005BD0  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2541  005BD2  C2C3  F0D0         	movff	printf@fmt,vfprintf@fmt
  2542  005BD6  0ED3               	movlw	low printf@ap
  2543  005BD8  6FD1               	movwf	vfprintf@ap& (0+255),b
  2544  005BDA  6BD2               	clrf	(vfprintf@ap+1)& (0+255),b
  2545  005BDC  EC92  F02A         	call	_vfprintf	;wreg free
  2546                           
  2547                           ; BSR set to: 0
  2548  005BE0  0012               	return		;funcret
  2549  005BE2                     __end_of_printf:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _vfprintf *****************
  2553 ;; Defined at:
  2554 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  fp              2  110[BANK0 ] PTR struct _IO_FILE
  2557 ;;		 -> sprintf@f(11), NULL(0), 
  2558 ;;  fmt             1  112[BANK0 ] PTR const unsigned char 
  2559 ;;		 -> STR_10(21), STR_6(79), 
  2560 ;;  ap              2  113[BANK0 ] PTR PTR void 
  2561 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  cfmt            1   55[COMRAM] PTR unsigned char 
  2564 ;;		 -> STR_10(21), STR_6(79), 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  2  110[BANK0 ] int 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 3F/0
  2571 ;;		On exit  : 3F/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2574 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2577 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2578 ;;Total ram usage:        6 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 11
  2581 ;; This function calls:
  2582 ;;		_vfpfcnvrt
  2583 ;; This function is called by:
  2584 ;;		_sprintf
  2585 ;;		_printf
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text5
  2590  005524                     __ptext5:
  2591                           	callstack 0
  2592  005524                     _vfprintf:
  2593                           	callstack 16
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;incstack = 0
  2600  005524  C0D0  F038         	movff	vfprintf@fmt,vfprintf@cfmt
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2604  005528  0E00               	movlw	0
  2605  00552A  6FF6               	movwf	(_nout+1)& (0+255),b
  2606  00552C  0E00               	movlw	0
  2607  00552E  6FF5               	movwf	_nout& (0+255),b
  2608                           
  2609                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2610  005530  D011               	goto	l10333
  2611  005532                     l10331:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2615  005532  C0CE  F0AF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2616  005536  C0CF  F0B0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2617  00553A  0E38               	movlw	low vfprintf@cfmt
  2618  00553C  6FB1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2619  00553E  C0D1  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2620  005542  C0D2  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2621  005546  EC66  F015         	call	_vfpfcnvrt	;wreg free
  2622  00554A  0100               	movlb	0	; () banked
  2623  00554C  51AF               	movf	?_vfpfcnvrt& (0+255),w,b
  2624  00554E  27F5               	addwf	_nout& (0+255),f,b
  2625  005550  51B0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2626  005552  23F6               	addwfc	(_nout+1)& (0+255),f,b
  2627  005554                     l10333:
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2631  005554  0060  F0E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  2632  00555A                     	if	1	;There is more than 1 active tblptr byte
  2633  00555A  0E20               	movlw	high __smallconst
  2634  00555C  6EF7               	movwf	tblptrh,c
  2635  00555E                     	endif
  2636  00555E                     	if	0	;tblptru may be non-zero
  2637  00555E                     	endif
  2638  00555E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2639  00555E  0E00               	movlw	low (__smallconst shr (0+16))
  2640  005560  6EF8               	movwf	tblptru,c
  2641  005562                     	endif
  2642  005562  0008               	tblrd		*
  2643  005564  50F5               	movf	tablat,w,c
  2644  005566  0900               	iorlw	0
  2645  005568  A4D8               	btfss	status,2,c
  2646  00556A  D7E3               	goto	l10331
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2650  00556C  C0F5  F0CE         	movff	_nout,?_vfprintf
  2651  005570  C0F6  F0CF         	movff	_nout+1,?_vfprintf+1
  2652                           
  2653                           ; BSR set to: 0
  2654  005574  0012               	return		;funcret
  2655  005576                     __end_of_vfprintf:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _vfpfcnvrt *****************
  2659 ;; Defined at:
  2660 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  2663 ;;		 -> sprintf@f(11), NULL(0), 
  2664 ;;  fmt             1   81[BANK0 ] PTR PTR unsigned char 
  2665 ;;		 -> vfprintf@cfmt(1), 
  2666 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2667 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  llu             8   88[BANK0 ] unsigned long long 
  2670 ;;  ll              8    0        long long 
  2671 ;;  f               4  103[BANK0 ] long long 
  2672 ;;  ct              3  107[BANK0 ] unsigned char [3]
  2673 ;;  vp              3    0        PTR void 
  2674 ;;  done            2   98[BANK0 ] int 
  2675 ;;  cp              2   96[BANK0 ] PTR unsigned char 
  2676 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  2677 ;;  i               2    0        int 
  2678 ;;  c               1  102[BANK0 ] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  2   79[BANK0 ] int 
  2681 ;; Registers used:
  2682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 3F/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2688 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2689 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2690 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2691 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2692 ;;Total ram usage:       31 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 10
  2695 ;; This function calls:
  2696 ;;		_atoi
  2697 ;;		_efgtoa
  2698 ;;		_fputc
  2699 ;;		_isdigit
  2700 ;;		_isupper
  2701 ;;		_stoa
  2702 ;;		_strncmp
  2703 ;;		_tolower
  2704 ;;		_utoa
  2705 ;; This function is called by:
  2706 ;;		_vfprintf
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text6
  2711  002ACC                     __ptext6:
  2712                           	callstack 0
  2713  002ACC                     _vfpfcnvrt:
  2714                           	callstack 16
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;incstack = 0
  2721  002ACC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2722  002ACE  6ED9               	movwf	fsr2l,c
  2723  002AD0  6ADA               	clrf	fsr2h,c
  2724  002AD2  006F FF7F FFF6     	movff	indf2,tblptrl
  2725  002AD8                     	if	1	;There is more than 1 active tblptr byte
  2726  002AD8  0E20               	movlw	high __smallconst
  2727  002ADA  6EF7               	movwf	tblptrh,c
  2728  002ADC                     	endif
  2729  002ADC                     	if	0	;tblptru may be non-zero
  2730  002ADC                     	endif
  2731  002ADC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2732  002ADC  0E00               	movlw	low (__smallconst shr (0+16))
  2733  002ADE  6EF8               	movwf	tblptru,c
  2734  002AE0                     	endif
  2735  002AE0  0008               	tblrd		*
  2736  002AE2  50F5               	movf	tablat,w,c
  2737  002AE4  0A25               	xorlw	37
  2738  002AE6  A4D8               	btfss	status,2,c
  2739  002AE8  D313               	goto	l10305
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2743  002AEA  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2744  002AEC  6ED9               	movwf	fsr2l,c
  2745  002AEE  6ADA               	clrf	fsr2h,c
  2746  002AF0  2ADF               	incf	indf2,f,c
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2750  002AF2  0E00               	movlw	0
  2751  002AF4  6FF8               	movwf	(_width+1)& (0+255),b
  2752  002AF6  0E00               	movlw	0
  2753  002AF8  6FF7               	movwf	_width& (0+255),b
  2754  002AFA  C0F7  F03D         	movff	_width,_flags
  2755  002AFE  C0F8  F03E         	movff	_width+1,_flags+1
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2759  002B02  69F9               	setf	_prec& (0+255),b
  2760  002B04  69FA               	setf	(_prec+1)& (0+255),b
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  2764  002B06  0E00               	movlw	0
  2765  002B08  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2766  002B0A  0E00               	movlw	0
  2767  002B0C  D011               	goto	L1
  2768  002B0E                     l10159:
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  2772  002B0E  803D               	bsf	_flags^0,0,c
  2773  002B10                     l10161:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  2777  002B10  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2778  002B12  6ED9               	movwf	fsr2l,c
  2779  002B14  6ADA               	clrf	fsr2h,c
  2780  002B16  2ADF               	incf	indf2,f,c
  2781                           
  2782                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  2783  002B18  D030               	goto	l10185
  2784  002B1A                     l10163:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  2788  002B1A  823D               	bsf	_flags^0,1,c
  2789  002B1C  D7F9               	goto	l10161
  2790  002B1E                     l10167:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  2794  002B1E  843D               	bsf	_flags^0,2,c
  2795  002B20  D7F7               	goto	l10161
  2796  002B22                     l10171:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  2800  002B22  863D               	bsf	_flags^0,3,c
  2801  002B24  D7F5               	goto	l10161
  2802  002B26                     l10175:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  2806  002B26  883D               	bsf	_flags^0,4,c
  2807  002B28  D7F3               	goto	l10161
  2808  002B2A                     l10179:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  2812  002B2A  0E00               	movlw	0
  2813  002B2C  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2814  002B2E  0E01               	movlw	1
  2815  002B30                     L1:
  2816  002B30  6FC2               	movwf	vfpfcnvrt@done& (0+255),b
  2817                           
  2818                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  2819  002B32  D023               	goto	l10185
  2820  002B34                     l10183:
  2821                           
  2822                           ; BSR set to: 0
  2823  002B34  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2824  002B36  6ED9               	movwf	fsr2l,c
  2825  002B38  6ADA               	clrf	fsr2h,c
  2826  002B3A  006F FF7F FFF6     	movff	indf2,tblptrl
  2827  002B40                     	if	1	;There is more than 1 active tblptr byte
  2828  002B40  0E20               	movlw	high __smallconst
  2829  002B42  6EF7               	movwf	tblptrh,c
  2830  002B44                     	endif
  2831  002B44                     	if	0	;tblptru may be non-zero
  2832  002B44                     	endif
  2833  002B44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2834  002B44  0E00               	movlw	low (__smallconst shr (0+16))
  2835  002B46  6EF8               	movwf	tblptru,c
  2836  002B48                     	endif
  2837  002B48  0008               	tblrd		*
  2838  002B4A  50F5               	movf	tablat,w,c
  2839  002B4C  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2840  002B4E  6BB5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2841                           
  2842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2843                           ; Switch size 1, requested type "simple"
  2844                           ; Number of cases is 1, Range of values is 0 to 0
  2845                           ; switch strategies available:
  2846                           ; Name         Instructions Cycles
  2847                           ; simple_byte            4     3 (average)
  2848                           ;	Chosen strategy is simple_byte
  2849  002B50  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2850  002B52  0A00               	xorlw	0	; case 0
  2851  002B54  A4D8               	btfss	status,2,c
  2852  002B56  D7E9               	goto	l10179
  2853                           
  2854                           ; BSR set to: 0
  2855                           ; Switch size 1, requested type "simple"
  2856                           ; Number of cases is 5, Range of values is 32 to 48
  2857                           ; switch strategies available:
  2858                           ; Name         Instructions Cycles
  2859                           ; simple_byte           16     9 (average)
  2860                           ;	Chosen strategy is simple_byte
  2861  002B58  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2862  002B5A  0A20               	xorlw	32	; case 32
  2863  002B5C  B4D8               	btfsc	status,2,c
  2864  002B5E  D7E1               	goto	l10171
  2865  002B60  0A03               	xorlw	3	; case 35
  2866  002B62  B4D8               	btfsc	status,2,c
  2867  002B64  D7E0               	goto	l10175
  2868  002B66  0A08               	xorlw	8	; case 43
  2869  002B68  B4D8               	btfsc	status,2,c
  2870  002B6A  D7D9               	goto	l10167
  2871  002B6C  0A06               	xorlw	6	; case 45
  2872  002B6E  B4D8               	btfsc	status,2,c
  2873  002B70  D7CE               	goto	l10159
  2874  002B72  0A1D               	xorlw	29	; case 48
  2875  002B74  B4D8               	btfsc	status,2,c
  2876  002B76  D7D1               	goto	l10163
  2877  002B78  D7D8               	goto	l10179
  2878  002B7A                     l10185:
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2882  002B7A  51C2               	movf	vfpfcnvrt@done& (0+255),w,b
  2883  002B7C  11C3               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2884  002B7E  B4D8               	btfsc	status,2,c
  2885  002B80  D7D9               	goto	l10183
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  2889  002B82  B03D               	btfsc	_flags^0,0,c
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  2893  002B84  923D               	bcf	_flags^0,1,c
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  2897  002B86  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2898  002B88  6ED9               	movwf	fsr2l,c
  2899  002B8A  6ADA               	clrf	fsr2h,c
  2900  002B8C  006F FF7F FFF6     	movff	indf2,tblptrl
  2901  002B92                     	if	1	;There is more than 1 active tblptr byte
  2902  002B92  0E20               	movlw	high __smallconst
  2903  002B94  6EF7               	movwf	tblptrh,c
  2904  002B96                     	endif
  2905  002B96                     	if	0	;tblptru may be non-zero
  2906  002B96                     	endif
  2907  002B96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2908  002B96  0E00               	movlw	low (__smallconst shr (0+16))
  2909  002B98  6EF8               	movwf	tblptru,c
  2910  002B9A                     	endif
  2911  002B9A  0008               	tblrd		*
  2912  002B9C  50F5               	movf	tablat,w,c
  2913  002B9E  0A2A               	xorlw	42
  2914  002BA0  A4D8               	btfss	status,2,c
  2915  002BA2  D028               	goto	l10197
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  2919  002BA4  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2920  002BA6  6ED9               	movwf	fsr2l,c
  2921  002BA8  6ADA               	clrf	fsr2h,c
  2922  002BAA  2ADF               	incf	indf2,f,c
  2923                           
  2924                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2925  002BAC  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2926  002BB2  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2927  002BB8  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  2928  002BBE  0E02               	movlw	2
  2929  002BC0  26DE               	addwf	postinc2,f,c
  2930  002BC2  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  2931  002BC8  0E00               	movlw	0
  2932  002BCA  22DD               	addwfc	postdec2,f,c
  2933  002BCC  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2934  002BD2  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2935  002BD8  006F FF78  F0F7    	movff	postinc2,_width
  2936  002BDE  006F FF74  F0F8    	movff	postdec2,_width+1
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  2940  002BE4  AFF8               	btfss	(_width+1)& (0+255),7,b
  2941  002BE6  D033               	goto	u11880
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  2945  002BE8  803D               	bsf	_flags^0,0,c
  2946                           
  2947                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  2948  002BEA  6DF7               	negf	_width& (0+255),b
  2949  002BEC  1FF8               	comf	(_width+1)& (0+255),f,b
  2950  002BEE  B0D8               	btfsc	status,0,c
  2951  002BF0  2BF8               	incf	(_width+1)& (0+255),f,b
  2952  002BF2  D02D               	goto	u11880
  2953  002BF4                     l10197:
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  2957  002BF4  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2958  002BF6  6ED9               	movwf	fsr2l,c
  2959  002BF8  6ADA               	clrf	fsr2h,c
  2960  002BFA  50DF               	movf	indf2,w,c
  2961  002BFC  6E1C               	movwf	atoi@s^0,c
  2962  002BFE  EC15  F024         	call	_atoi	;wreg free
  2963  002C02  C01C  F0F7         	movff	?_atoi,_width
  2964  002C06  C01D  F0F8         	movff	?_atoi+1,_width+1
  2965                           
  2966                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2967  002C0A  D004               	goto	l10203
  2968  002C0C                     l10199:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  2972  002C0C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2973  002C0E  6ED9               	movwf	fsr2l,c
  2974  002C10  6ADA               	clrf	fsr2h,c
  2975  002C12  2ADF               	incf	indf2,f,c
  2976  002C14                     l10203:
  2977  002C14  0ED0               	movlw	208
  2978  002C16  0100               	movlb	0	; () banked
  2979  002C18  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2980  002C1A  0EFF               	movlw	255
  2981  002C1C  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2982  002C1E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2983  002C20  6ED9               	movwf	fsr2l,c
  2984  002C22  6ADA               	clrf	fsr2h,c
  2985  002C24  006F FF7F FFF6     	movff	indf2,tblptrl
  2986  002C2A                     	if	1	;There is more than 1 active tblptr byte
  2987  002C2A  0E20               	movlw	high __smallconst
  2988  002C2C  6EF7               	movwf	tblptrh,c
  2989  002C2E                     	endif
  2990  002C2E                     	if	0	;tblptru may be non-zero
  2991  002C2E                     	endif
  2992  002C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2993  002C2E  0E00               	movlw	low (__smallconst shr (0+16))
  2994  002C30  6EF8               	movwf	tblptru,c
  2995  002C32                     	endif
  2996  002C32  0008               	tblrd		*
  2997  002C34  50F5               	movf	tablat,w,c
  2998  002C36  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2999  002C38  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3000  002C3A  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3001  002C3C  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3002  002C3E  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3003  002C40  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3004  002C42  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3005  002C44  E104               	bnz	u11880
  3006  002C46  0E0A               	movlw	10
  3007  002C48  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3008  002C4A  A0D8               	btfss	status,0,c
  3009  002C4C  D7DF               	goto	l10199
  3010  002C4E                     u11880:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  3014  002C4E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3015  002C50  6ED9               	movwf	fsr2l,c
  3016  002C52  6ADA               	clrf	fsr2h,c
  3017  002C54  006F FF7F FFF6     	movff	indf2,tblptrl
  3018  002C5A                     	if	1	;There is more than 1 active tblptr byte
  3019  002C5A  0E20               	movlw	high __smallconst
  3020  002C5C  6EF7               	movwf	tblptrh,c
  3021  002C5E                     	endif
  3022  002C5E                     	if	0	;tblptru may be non-zero
  3023  002C5E                     	endif
  3024  002C5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3025  002C5E  0E00               	movlw	low (__smallconst shr (0+16))
  3026  002C60  6EF8               	movwf	tblptru,c
  3027  002C62                     	endif
  3028  002C62  0008               	tblrd		*
  3029  002C64  50F5               	movf	tablat,w,c
  3030  002C66  0A2E               	xorlw	46
  3031  002C68  A4D8               	btfss	status,2,c
  3032  002C6A  D065               	goto	u11910
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  3036  002C6C  0E00               	movlw	0
  3037  002C6E  6FFA               	movwf	(_prec+1)& (0+255),b
  3038  002C70  0E00               	movlw	0
  3039  002C72  6FF9               	movwf	_prec& (0+255),b
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  3043  002C74  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3044  002C76  6ED9               	movwf	fsr2l,c
  3045  002C78  6ADA               	clrf	fsr2h,c
  3046  002C7A  2ADF               	incf	indf2,f,c
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  3050  002C7C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3051  002C7E  6ED9               	movwf	fsr2l,c
  3052  002C80  6ADA               	clrf	fsr2h,c
  3053  002C82  006F FF7F FFF6     	movff	indf2,tblptrl
  3054  002C88                     	if	1	;There is more than 1 active tblptr byte
  3055  002C88  0E20               	movlw	high __smallconst
  3056  002C8A  6EF7               	movwf	tblptrh,c
  3057  002C8C                     	endif
  3058  002C8C                     	if	0	;tblptru may be non-zero
  3059  002C8C                     	endif
  3060  002C8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3061  002C8C  0E00               	movlw	low (__smallconst shr (0+16))
  3062  002C8E  6EF8               	movwf	tblptru,c
  3063  002C90                     	endif
  3064  002C90  0008               	tblrd		*
  3065  002C92  50F5               	movf	tablat,w,c
  3066  002C94  0A2A               	xorlw	42
  3067  002C96  A4D8               	btfss	status,2,c
  3068  002C98  D021               	goto	l10215
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  3072  002C9A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3073  002C9C  6ED9               	movwf	fsr2l,c
  3074  002C9E  6ADA               	clrf	fsr2h,c
  3075  002CA0  2ADF               	incf	indf2,f,c
  3076                           
  3077                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  3078  002CA2  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3079  002CA8  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3080  002CAE  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3081  002CB4  0E02               	movlw	2
  3082  002CB6  26DE               	addwf	postinc2,f,c
  3083  002CB8  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3084  002CBE  0E00               	movlw	0
  3085  002CC0  22DD               	addwfc	postdec2,f,c
  3086  002CC2  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3087  002CC8  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3088  002CCE  006F FF78  F0F9    	movff	postinc2,_prec
  3089  002CD4  006F FF74  F0FA    	movff	postdec2,_prec+1
  3090                           
  3091                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  3092  002CDA  D02D               	goto	u11910
  3093  002CDC                     l10215:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  3097  002CDC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3098  002CDE  6ED9               	movwf	fsr2l,c
  3099  002CE0  6ADA               	clrf	fsr2h,c
  3100  002CE2  50DF               	movf	indf2,w,c
  3101  002CE4  6E1C               	movwf	atoi@s^0,c
  3102  002CE6  EC15  F024         	call	_atoi	;wreg free
  3103  002CEA  C01C  F0F9         	movff	?_atoi,_prec
  3104  002CEE  C01D  F0FA         	movff	?_atoi+1,_prec+1
  3105                           
  3106                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3107  002CF2  D004               	goto	l10221
  3108  002CF4                     l10217:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  3112  002CF4  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3113  002CF6  6ED9               	movwf	fsr2l,c
  3114  002CF8  6ADA               	clrf	fsr2h,c
  3115  002CFA  2ADF               	incf	indf2,f,c
  3116  002CFC                     l10221:
  3117  002CFC  0ED0               	movlw	208
  3118  002CFE  0100               	movlb	0	; () banked
  3119  002D00  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3120  002D02  0EFF               	movlw	255
  3121  002D04  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3122  002D06  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3123  002D08  6ED9               	movwf	fsr2l,c
  3124  002D0A  6ADA               	clrf	fsr2h,c
  3125  002D0C  006F FF7F FFF6     	movff	indf2,tblptrl
  3126  002D12                     	if	1	;There is more than 1 active tblptr byte
  3127  002D12  0E20               	movlw	high __smallconst
  3128  002D14  6EF7               	movwf	tblptrh,c
  3129  002D16                     	endif
  3130  002D16                     	if	0	;tblptru may be non-zero
  3131  002D16                     	endif
  3132  002D16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3133  002D16  0E00               	movlw	low (__smallconst shr (0+16))
  3134  002D18  6EF8               	movwf	tblptru,c
  3135  002D1A                     	endif
  3136  002D1A  0008               	tblrd		*
  3137  002D1C  50F5               	movf	tablat,w,c
  3138  002D1E  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3139  002D20  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3140  002D22  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3141  002D24  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3142  002D26  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3143  002D28  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3144  002D2A  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3145  002D2C  E104               	bnz	u11910
  3146  002D2E  0E0A               	movlw	10
  3147  002D30  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3148  002D32  A0D8               	btfss	status,0,c
  3149  002D34  D7DF               	goto	l10217
  3150  002D36                     u11910:
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  3154  002D36  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3155  002D38  6ED9               	movwf	fsr2l,c
  3156  002D3A  6ADA               	clrf	fsr2h,c
  3157  002D3C  006F FF7F FFF6     	movff	indf2,tblptrl
  3158  002D42                     	if	1	;There is more than 1 active tblptr byte
  3159  002D42  0E20               	movlw	high __smallconst
  3160  002D44  6EF7               	movwf	tblptrh,c
  3161  002D46                     	endif
  3162  002D46                     	if	0	;tblptru may be non-zero
  3163  002D46                     	endif
  3164  002D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3165  002D46  0E00               	movlw	low (__smallconst shr (0+16))
  3166  002D48  6EF8               	movwf	tblptru,c
  3167  002D4A                     	endif
  3168  002D4A  0008               	tblrd		*
  3169  002D4C  50F5               	movf	tablat,w,c
  3170  002D4E  6E1B               	movwf	tolower@c^0,c
  3171  002D50  6A1C               	clrf	(tolower@c+1)^0,c
  3172  002D52  EC7F  F02C         	call	_tolower	;wreg free
  3173  002D56  501B               	movf	?_tolower^0,w,c
  3174  002D58  6FCB               	movwf	vfpfcnvrt@ct& (0+255),b
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  3178  002D5A  51CB               	movf	vfpfcnvrt@ct& (0+255),w,b
  3179  002D5C  B4D8               	btfsc	status,2,c
  3180  002D5E  D02F               	goto	l10233
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  3184  002D60  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3185  002D62  6ED9               	movwf	fsr2l,c
  3186  002D64  6ADA               	clrf	fsr2h,c
  3187  002D66  50DF               	movf	indf2,w,c
  3188  002D68  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3189  002D6A  0E01               	movlw	1
  3190  002D6C  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3191  002D6E  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3192  002D74                     	if	1	;There is more than 1 active tblptr byte
  3193  002D74  0E20               	movlw	high __smallconst
  3194  002D76  6EF7               	movwf	tblptrh,c
  3195  002D78                     	endif
  3196  002D78                     	if	0	;tblptru may be non-zero
  3197  002D78                     	endif
  3198  002D78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3199  002D78  0E00               	movlw	low (__smallconst shr (0+16))
  3200  002D7A  6EF8               	movwf	tblptru,c
  3201  002D7C                     	endif
  3202  002D7C  0008               	tblrd		*
  3203  002D7E  50F5               	movf	tablat,w,c
  3204  002D80  6E1B               	movwf	tolower@c^0,c
  3205  002D82  6A1C               	clrf	(tolower@c+1)^0,c
  3206  002D84  EC7F  F02C         	call	_tolower	;wreg free
  3207  002D88  501B               	movf	?_tolower^0,w,c
  3208  002D8A  6FCC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  3212  002D8C  51CC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3213  002D8E  B4D8               	btfsc	status,2,c
  3214  002D90  D016               	goto	l10233
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  3218  002D92  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3219  002D94  6ED9               	movwf	fsr2l,c
  3220  002D96  6ADA               	clrf	fsr2h,c
  3221  002D98  50DF               	movf	indf2,w,c
  3222  002D9A  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3223  002D9C  0E02               	movlw	2
  3224  002D9E  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3225  002DA0  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3226  002DA6                     	if	1	;There is more than 1 active tblptr byte
  3227  002DA6  0E20               	movlw	high __smallconst
  3228  002DA8  6EF7               	movwf	tblptrh,c
  3229  002DAA                     	endif
  3230  002DAA                     	if	0	;tblptru may be non-zero
  3231  002DAA                     	endif
  3232  002DAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3233  002DAA  0E00               	movlw	low (__smallconst shr (0+16))
  3234  002DAC  6EF8               	movwf	tblptru,c
  3235  002DAE                     	endif
  3236  002DAE  0008               	tblrd		*
  3237  002DB0  50F5               	movf	tablat,w,c
  3238  002DB2  6E1B               	movwf	tolower@c^0,c
  3239  002DB4  6A1C               	clrf	(tolower@c+1)^0,c
  3240  002DB6  EC7F  F02C         	call	_tolower	;wreg free
  3241  002DBA  501B               	movf	?_tolower^0,w,c
  3242  002DBC  6FCD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3243  002DBE                     l10233:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  3247  002DBE  0E66               	movlw	102
  3248  002DC0  19CB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3249  002DC2  A4D8               	btfss	status,2,c
  3250  002DC4  D049               	goto	l10245
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  3254  002DC6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3255  002DC8  6ED9               	movwf	fsr2l,c
  3256  002DCA  6ADA               	clrf	fsr2h,c
  3257  002DCC  006F FF7F FFF6     	movff	indf2,tblptrl
  3258  002DD2                     	if	1	;There is more than 1 active tblptr byte
  3259  002DD2  0E20               	movlw	high __smallconst
  3260  002DD4  6EF7               	movwf	tblptrh,c
  3261  002DD6                     	endif
  3262  002DD6                     	if	0	;tblptru may be non-zero
  3263  002DD6                     	endif
  3264  002DD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3265  002DD6  0E00               	movlw	low (__smallconst shr (0+16))
  3266  002DD8  6EF8               	movwf	tblptru,c
  3267  002DDA                     	endif
  3268  002DDA  0008               	tblrd		*
  3269  002DDC  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  3273  002DE2  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3274  002DE4  6ED9               	movwf	fsr2l,c
  3275  002DE6  6ADA               	clrf	fsr2h,c
  3276  002DE8  2ADF               	incf	indf2,f,c
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  3280  002DEA  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3281  002DF0  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3282  002DF6  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3283  002DFC  0E04               	movlw	4
  3284  002DFE  26DE               	addwf	postinc2,f,c
  3285  002E00  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3286  002E06  0E00               	movlw	0
  3287  002E08  22DD               	addwfc	postdec2,f,c
  3288  002E0A  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3289  002E10  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3290  002E16  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3291  002E1C  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3292  002E22  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3293  002E28  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3294  002E2E                     l10241:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  3298  002E2E  C0AF  F071         	movff	vfpfcnvrt@fp,efgtoa@fp
  3299  002E32  C0B0  F072         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3300  002E36  C0C7  F073         	movff	vfpfcnvrt@f,efgtoa@f
  3301  002E3A  C0C8  F074         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3302  002E3E  C0C9  F075         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3303  002E42  C0CA  F076         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3304  002E46  C0C6  F077         	movff	vfpfcnvrt@c,efgtoa@c
  3305  002E4A  EC80  F010         	call	_efgtoa	;wreg free
  3306  002E4E  C071  F0AF         	movff	?_efgtoa,?_vfpfcnvrt
  3307  002E52  C072  F0B0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3308  002E56  0012               	return	
  3309  002E58                     l10245:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3313  002E58  0ECB               	movlw	low vfpfcnvrt@ct
  3314  002E5A  6E19               	movwf	strncmp@_l^0,c
  3315  002E5C  6A1A               	clrf	(strncmp@_l+1)^0,c
  3316  002E5E  0EF2               	movlw	low STR_20
  3317  002E60  6E1B               	movwf	strncmp@_r^0,c
  3318  002E62  501B               	movf	strncmp@_r^0,w,c
  3319  002E64  A4D8               	btfss	status,2,c
  3320  002E66  0E20               	movlw	high __smallconst
  3321  002E68  6E1C               	movwf	(strncmp@_r+1)^0,c
  3322  002E6A  0E00               	movlw	0
  3323  002E6C  6E1E               	movwf	(strncmp@n+1)^0,c
  3324  002E6E  0E02               	movlw	2
  3325  002E70  6E1D               	movwf	strncmp@n^0,c
  3326  002E72  ECCF  F020         	call	_strncmp	;wreg free
  3327  002E76  5019               	movf	?_strncmp^0,w,c
  3328  002E78  101A               	iorwf	(?_strncmp+1)^0,w,c
  3329  002E7A  A4D8               	btfss	status,2,c
  3330  002E7C  D055               	goto	l10263
  3331                           
  3332                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  3333  002E7E  0100               	movlb	0	; () banked
  3334  002E80  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3335  002E82  6ED9               	movwf	fsr2l,c
  3336  002E84  6ADA               	clrf	fsr2h,c
  3337  002E86  50DF               	movf	indf2,w,c
  3338  002E88  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3339  002E8A  0E01               	movlw	1
  3340  002E8C  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3341  002E8E  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3342  002E94                     	if	1	;There is more than 1 active tblptr byte
  3343  002E94  0E20               	movlw	high __smallconst
  3344  002E96  6EF7               	movwf	tblptrh,c
  3345  002E98                     	endif
  3346  002E98                     	if	0	;tblptru may be non-zero
  3347  002E98                     	endif
  3348  002E98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3349  002E98  0E00               	movlw	low (__smallconst shr (0+16))
  3350  002E9A  6EF8               	movwf	tblptru,c
  3351  002E9C                     	endif
  3352  002E9C  0008               	tblrd		*
  3353  002E9E  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3354                           
  3355                           ; BSR set to: 0
  3356                           
  3357                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3358  002EA4  0EBF               	movlw	191
  3359  002EA6  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3360  002EA8  0EFF               	movlw	255
  3361  002EAA  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3362  002EAC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3363  002EAE  6ED9               	movwf	fsr2l,c
  3364  002EB0  6ADA               	clrf	fsr2h,c
  3365  002EB2  006F FF7F FFF6     	movff	indf2,tblptrl
  3366  002EB8                     	if	1	;There is more than 1 active tblptr byte
  3367  002EB8  0E20               	movlw	high __smallconst
  3368  002EBA  6EF7               	movwf	tblptrh,c
  3369  002EBC                     	endif
  3370  002EBC                     	if	0	;tblptru may be non-zero
  3371  002EBC                     	endif
  3372  002EBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3373  002EBC  0E00               	movlw	low (__smallconst shr (0+16))
  3374  002EBE  6EF8               	movwf	tblptru,c
  3375  002EC0                     	endif
  3376  002EC0  0008               	tblrd		*
  3377  002EC2  50F5               	movf	tablat,w,c
  3378  002EC4  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3379  002EC6  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3380  002EC8  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3381  002ECA  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3382  002ECC  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3383  002ECE  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3384  002ED0  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3385  002ED2  E102               	bnz	l10255
  3386  002ED4  0E1A               	movlw	26
  3387  002ED6  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3388  002ED8                     l10255:
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3392  002ED8  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3393  002EDE  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3394  002EE4  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3395  002EEA  0E04               	movlw	4
  3396  002EEC  26DE               	addwf	postinc2,f,c
  3397  002EEE  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3398  002EF4  0E00               	movlw	0
  3399  002EF6  22DD               	addwfc	postdec2,f,c
  3400  002EF8  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3401  002EFE  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3402  002F04  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3403  002F0A  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3404  002F10  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3405  002F16  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  3409  002F1C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3410  002F1E  6ED9               	movwf	fsr2l,c
  3411  002F20  6ADA               	clrf	fsr2h,c
  3412  002F22  0E02               	movlw	2
  3413  002F24  26DF               	addwf	indf2,f,c
  3414  002F26  D783               	goto	l10241
  3415  002F28                     l10263:
  3416                           
  3417                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  3418  002F28  0100               	movlb	0	; () banked
  3419  002F2A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3420  002F2C  6ED9               	movwf	fsr2l,c
  3421  002F2E  6ADA               	clrf	fsr2h,c
  3422  002F30  006F FF7F FFF6     	movff	indf2,tblptrl
  3423  002F36                     	if	1	;There is more than 1 active tblptr byte
  3424  002F36  0E20               	movlw	high __smallconst
  3425  002F38  6EF7               	movwf	tblptrh,c
  3426  002F3A                     	endif
  3427  002F3A                     	if	0	;tblptru may be non-zero
  3428  002F3A                     	endif
  3429  002F3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3430  002F3A  0E00               	movlw	low (__smallconst shr (0+16))
  3431  002F3C  6EF8               	movwf	tblptru,c
  3432  002F3E                     	endif
  3433  002F3E  0008               	tblrd		*
  3434  002F40  50F5               	movf	tablat,w,c
  3435  002F42  0A73               	xorlw	115
  3436  002F44  B4D8               	btfsc	status,2,c
  3437  002F46  D01B               	goto	u11980
  3438                           
  3439                           ; BSR set to: 0
  3440  002F48  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3441  002F4A  6ED9               	movwf	fsr2l,c
  3442  002F4C  6ADA               	clrf	fsr2h,c
  3443  002F4E  50DF               	movf	indf2,w,c
  3444  002F50  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3445  002F52  C0B4  F019         	movff	??_vfpfcnvrt,strncmp@_l
  3446  002F56  5019               	movf	strncmp@_l^0,w,c
  3447  002F58  A4D8               	btfss	status,2,c
  3448  002F5A  0E20               	movlw	high __smallconst
  3449  002F5C  6E1A               	movwf	(strncmp@_l+1)^0,c
  3450  002F5E  0EEE               	movlw	low STR_25
  3451  002F60  6E1B               	movwf	strncmp@_r^0,c
  3452  002F62  501B               	movf	strncmp@_r^0,w,c
  3453  002F64  A4D8               	btfss	status,2,c
  3454  002F66  0E20               	movlw	high __smallconst
  3455  002F68  6E1C               	movwf	(strncmp@_r+1)^0,c
  3456  002F6A  0E00               	movlw	0
  3457  002F6C  6E1E               	movwf	(strncmp@n+1)^0,c
  3458  002F6E  0E03               	movlw	3
  3459  002F70  6E1D               	movwf	strncmp@n^0,c
  3460  002F72  ECCF  F020         	call	_strncmp	;wreg free
  3461  002F76  5019               	movf	?_strncmp^0,w,c
  3462  002F78  101A               	iorwf	(?_strncmp+1)^0,w,c
  3463  002F7A  A4D8               	btfss	status,2,c
  3464  002F7C  D048               	goto	l10281
  3465  002F7E                     u11980:
  3466                           
  3467                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  3468  002F7E  0100               	movlb	0	; () banked
  3469  002F80  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3470  002F82  6ED9               	movwf	fsr2l,c
  3471  002F84  6ADA               	clrf	fsr2h,c
  3472  002F86  006F FF7F FFF6     	movff	indf2,tblptrl
  3473  002F8C                     	if	1	;There is more than 1 active tblptr byte
  3474  002F8C  0E20               	movlw	high __smallconst
  3475  002F8E  6EF7               	movwf	tblptrh,c
  3476  002F90                     	endif
  3477  002F90                     	if	0	;tblptru may be non-zero
  3478  002F90                     	endif
  3479  002F90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3480  002F90  0E00               	movlw	low (__smallconst shr (0+16))
  3481  002F92  6EF8               	movwf	tblptru,c
  3482  002F94                     	endif
  3483  002F94  0008               	tblrd		*
  3484  002F96  50F5               	movf	tablat,w,c
  3485  002F98  0A73               	xorlw	115
  3486  002F9A  B4D8               	btfsc	status,2,c
  3487  002F9C  D004               	goto	l10271
  3488                           
  3489                           ; BSR set to: 0
  3490  002F9E  0E00               	movlw	0
  3491  002FA0  6FC5               	movwf	(_vfpfcnvrt$3119+1)& (0+255),b
  3492  002FA2  0E03               	movlw	3
  3493  002FA4  D003               	goto	L2
  3494  002FA6                     l10271:
  3495                           
  3496                           ; BSR set to: 0
  3497  002FA6  0E00               	movlw	0
  3498  002FA8  6FC5               	movwf	(_vfpfcnvrt$3119+1)& (0+255),b
  3499  002FAA  0E01               	movlw	1
  3500  002FAC                     L2:
  3501  002FAC  6FC4               	movwf	_vfpfcnvrt$3119& (0+255),b
  3502                           
  3503                           ; BSR set to: 0
  3504  002FAE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3505  002FB0  6ED9               	movwf	fsr2l,c
  3506  002FB2  6ADA               	clrf	fsr2h,c
  3507  002FB4  51C4               	movf	_vfpfcnvrt$3119& (0+255),w,b
  3508  002FB6  26DF               	addwf	indf2,f,c
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3512  002FB8  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3513  002FBE  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3514  002FC4  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3515  002FCA  0E02               	movlw	2
  3516  002FCC  26DE               	addwf	postinc2,f,c
  3517  002FCE  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3518  002FD4  0E00               	movlw	0
  3519  002FD6  22DD               	addwfc	postdec2,f,c
  3520  002FD8  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3521  002FDE  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3522  002FE4  006F FF78  F0C0    	movff	postinc2,vfpfcnvrt@cp
  3523  002FEA  006F FF74  F0C1    	movff	postdec2,vfpfcnvrt@cp+1
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  3527  002FF0  C0AF  F020         	movff	vfpfcnvrt@fp,stoa@fp
  3528  002FF4  C0B0  F021         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3529  002FF8  C0C0  F022         	movff	vfpfcnvrt@cp,stoa@s
  3530  002FFC  C0C1  F023         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3531  003000  ECD1  F022         	call	_stoa	;wreg free
  3532  003004  C020  F0AF         	movff	?_stoa,?_vfpfcnvrt
  3533  003008  C021  F0B0         	movff	?_stoa+1,?_vfpfcnvrt+1
  3534  00300C  0012               	return	
  3535  00300E                     l10281:
  3536                           
  3537                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  3538  00300E  0100               	movlb	0	; () banked
  3539  003010  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3540  003012  6ED9               	movwf	fsr2l,c
  3541  003014  6ADA               	clrf	fsr2h,c
  3542  003016  006F FF7F FFF6     	movff	indf2,tblptrl
  3543  00301C                     	if	1	;There is more than 1 active tblptr byte
  3544  00301C  0E20               	movlw	high __smallconst
  3545  00301E  6EF7               	movwf	tblptrh,c
  3546  003020                     	endif
  3547  003020                     	if	0	;tblptru may be non-zero
  3548  003020                     	endif
  3549  003020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3550  003020  0E00               	movlw	low (__smallconst shr (0+16))
  3551  003022  6EF8               	movwf	tblptru,c
  3552  003024                     	endif
  3553  003024  0008               	tblrd		*
  3554  003026  50F5               	movf	tablat,w,c
  3555  003028  0A75               	xorlw	117
  3556  00302A  A4D8               	btfss	status,2,c
  3557  00302C  D045               	goto	l10289
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  3561  00302E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3562  003030  6ED9               	movwf	fsr2l,c
  3563  003032  6ADA               	clrf	fsr2h,c
  3564  003034  2ADF               	incf	indf2,f,c
  3565                           
  3566                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  3567  003036  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3568  00303C  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3569  003042  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3570  003048  0E02               	movlw	2
  3571  00304A  26DE               	addwf	postinc2,f,c
  3572  00304C  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3573  003052  0E00               	movlw	0
  3574  003054  22DD               	addwfc	postdec2,f,c
  3575  003056  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3576  00305C  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3577  003062  006F FF78  F0B6    	movff	postinc2,??_vfpfcnvrt+2
  3578  003068  006F FF74  F0B7    	movff	postdec2,??_vfpfcnvrt+3
  3579  00306E  C0B6  F0B8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3580  003072  C0B7  F0B9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3581  003076  6BBA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3582  003078  6BBB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3583  00307A  6BBC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3584  00307C  6BBD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3585  00307E  6BBE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3586  003080  6BBF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  3590  003082  C0AF  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3591  003086  C0B0  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3592  00308A  C0B8  F062         	movff	vfpfcnvrt@llu,utoa@d
  3593  00308E  C0B9  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3594  003092  C0BA  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3595  003096  C0BB  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3596  00309A  C0BC  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3597  00309E  C0BD  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3598  0030A2  C0BE  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3599  0030A6  C0BF  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3600  0030AA  EC22  F01F         	call	_utoa	;wreg free
  3601  0030AE  C060  F0AF         	movff	?_utoa,?_vfpfcnvrt
  3602  0030B2  C061  F0B0         	movff	?_utoa+1,?_vfpfcnvrt+1
  3603  0030B6  0012               	return	
  3604  0030B8                     l10289:
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3608  0030B8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3609  0030BA  6ED9               	movwf	fsr2l,c
  3610  0030BC  6ADA               	clrf	fsr2h,c
  3611  0030BE  006F FF7F FFF6     	movff	indf2,tblptrl
  3612  0030C4                     	if	1	;There is more than 1 active tblptr byte
  3613  0030C4  0E20               	movlw	high __smallconst
  3614  0030C6  6EF7               	movwf	tblptrh,c
  3615  0030C8                     	endif
  3616  0030C8                     	if	0	;tblptru may be non-zero
  3617  0030C8                     	endif
  3618  0030C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3619  0030C8  0E00               	movlw	low (__smallconst shr (0+16))
  3620  0030CA  6EF8               	movwf	tblptru,c
  3621  0030CC                     	endif
  3622  0030CC  0008               	tblrd		*
  3623  0030CE  50F5               	movf	tablat,w,c
  3624  0030D0  0A25               	xorlw	37
  3625  0030D2  A4D8               	btfss	status,2,c
  3626  0030D4  D014               	goto	l10299
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3630  0030D6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3631  0030D8  6ED9               	movwf	fsr2l,c
  3632  0030DA  6ADA               	clrf	fsr2h,c
  3633  0030DC  2ADF               	incf	indf2,f,c
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3637  0030DE  0E00               	movlw	0
  3638  0030E0  6E18               	movwf	(fputc@c+1)^0,c
  3639  0030E2  0E25               	movlw	37
  3640  0030E4  6E17               	movwf	fputc@c^0,c
  3641  0030E6  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3642  0030EA  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3643  0030EE  EC03  F027         	call	_fputc	;wreg free
  3644  0030F2                     l10295:
  3645                           
  3646                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3647  0030F2  0E00               	movlw	0
  3648  0030F4  0100               	movlb	0	; () banked
  3649  0030F6  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3650  0030F8  0E01               	movlw	1
  3651  0030FA  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3652  0030FC  0012               	return	
  3653  0030FE                     l10299:
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3657  0030FE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3658  003100  6ED9               	movwf	fsr2l,c
  3659  003102  6ADA               	clrf	fsr2h,c
  3660  003104  2ADF               	incf	indf2,f,c
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3664  003106  0E00               	movlw	0
  3665  003108  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3666  00310A  0E00               	movlw	0
  3667  00310C  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3668  00310E  0012               	return	
  3669  003110                     l10305:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3673  003110  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3674  003112  6ED9               	movwf	fsr2l,c
  3675  003114  6ADA               	clrf	fsr2h,c
  3676  003116  006F FF7F FFF6     	movff	indf2,tblptrl
  3677  00311C                     	if	1	;There is more than 1 active tblptr byte
  3678  00311C  0E20               	movlw	high __smallconst
  3679  00311E  6EF7               	movwf	tblptrh,c
  3680  003120                     	endif
  3681  003120                     	if	0	;tblptru may be non-zero
  3682  003120                     	endif
  3683  003120                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3684  003120  0E00               	movlw	low (__smallconst shr (0+16))
  3685  003122  6EF8               	movwf	tblptru,c
  3686  003124                     	endif
  3687  003124  0008               	tblrd		*
  3688  003126  50F5               	movf	tablat,w,c
  3689  003128  6E17               	movwf	fputc@c^0,c
  3690  00312A  6A18               	clrf	(fputc@c+1)^0,c
  3691  00312C  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3692  003130  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3693  003134  EC03  F027         	call	_fputc	;wreg free
  3694                           
  3695                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3696  003138  0100               	movlb	0	; () banked
  3697  00313A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3698  00313C  6ED9               	movwf	fsr2l,c
  3699  00313E  6ADA               	clrf	fsr2h,c
  3700  003140  2ADF               	incf	indf2,f,c
  3701  003142  D7D7               	goto	l10295
  3702  003144                     __end_of_vfpfcnvrt:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function _utoa *****************
  3706 ;; Defined at:
  3707 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3710 ;;		 -> sprintf@f(11), NULL(0), 
  3711 ;;  d               8    2[BANK0 ] unsigned long long 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  n               8   22[BANK0 ] unsigned long long 
  3714 ;;  i               2   30[BANK0 ] int 
  3715 ;;  w               2   20[BANK0 ] int 
  3716 ;;  p               2   18[BANK0 ] int 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  2    0[BANK0 ] int 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 3F/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3726 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3727 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3728 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3729 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3730 ;;Total ram usage:       32 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; Hardware stack levels required when called: 9
  3733 ;; This function calls:
  3734 ;;		___lodiv
  3735 ;;		___lomod
  3736 ;;		_pad
  3737 ;; This function is called by:
  3738 ;;		_vfpfcnvrt
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text7
  3743  003E44                     __ptext7:
  3744                           	callstack 0
  3745  003E44                     _utoa:
  3746                           	callstack 16
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  3750                           
  3751                           ;incstack = 0
  3752  003E44  AFFA               	btfss	(_prec+1)& (0+255),7,b
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  3756  003E46  923D               	bcf	_flags^0,1,c
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  3760  003E48  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3761  003E4A  D005               	goto	u11730
  3762  003E4C  51FA               	movf	(_prec+1)& (0+255),w,b
  3763  003E4E  E108               	bnz	l2093
  3764  003E50  05F9               	decf	_prec& (0+255),w,b
  3765  003E52  B0D8               	btfsc	status,0,c
  3766  003E54  D005               	goto	l2093
  3767  003E56                     u11730:
  3768                           
  3769                           ; BSR set to: 0
  3770  003E56  0E00               	movlw	0
  3771  003E58  6F73               	movwf	(utoa@p+1)& (0+255),b
  3772  003E5A  0E01               	movlw	1
  3773  003E5C  6F72               	movwf	utoa@p& (0+255),b
  3774  003E5E  D004               	goto	l2095
  3775  003E60                     l2093:
  3776                           
  3777                           ; BSR set to: 0
  3778  003E60  C0F9  F072         	movff	_prec,utoa@p
  3779  003E64  C0FA  F073         	movff	_prec+1,utoa@p+1
  3780  003E68                     l2095:
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  3784  003E68  C0F7  F074         	movff	_width,utoa@w
  3785  003E6C  C0F8  F075         	movff	_width+1,utoa@w+1
  3786                           
  3787                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  3788  003E70  C062  F076         	movff	utoa@d,utoa@n
  3789  003E74  C063  F077         	movff	utoa@d+1,utoa@n+1
  3790  003E78  C064  F078         	movff	utoa@d+2,utoa@n+2
  3791  003E7C  C065  F079         	movff	utoa@d+3,utoa@n+3
  3792  003E80  C066  F07A         	movff	utoa@d+4,utoa@n+4
  3793  003E84  C067  F07B         	movff	utoa@d+5,utoa@n+5
  3794  003E88  C068  F07C         	movff	utoa@d+6,utoa@n+6
  3795  003E8C  C069  F07D         	movff	utoa@d+7,utoa@n+7
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  3799  003E90  0E00               	movlw	0
  3800  003E92  6F7F               	movwf	(utoa@i+1)& (0+255),b
  3801  003E94  0E4F               	movlw	79
  3802  003E96  6F7E               	movwf	utoa@i& (0+255),b
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  3806  003E98  0E00               	movlw	0
  3807  003E9A  0101               	movlb	1	; () banked
  3808  003E9C  6FE7               	movwf	(_dbuf+79)& (0+255),b
  3809                           
  3810                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3811  003E9E  D076               	goto	l10101
  3812  003EA0                     l10091:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  3816  003EA0  077E               	decf	utoa@i& (0+255),f,b
  3817  003EA2  A0D8               	btfss	status,0,c
  3818  003EA4  077F               	decf	(utoa@i+1)& (0+255),f,b
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  3822  003EA6  0E98               	movlw	low _dbuf
  3823  003EA8  257E               	addwf	utoa@i& (0+255),w,b
  3824  003EAA  6ED9               	movwf	fsr2l,c
  3825  003EAC  0E01               	movlw	high _dbuf
  3826  003EAE  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3827  003EB0  6EDA               	movwf	fsr2h,c
  3828  003EB2  C076  F015         	movff	utoa@n,___lomod@dividend
  3829  003EB6  C077  F016         	movff	utoa@n+1,___lomod@dividend+1
  3830  003EBA  C078  F017         	movff	utoa@n+2,___lomod@dividend+2
  3831  003EBE  C079  F018         	movff	utoa@n+3,___lomod@dividend+3
  3832  003EC2  C07A  F019         	movff	utoa@n+4,___lomod@dividend+4
  3833  003EC6  C07B  F01A         	movff	utoa@n+5,___lomod@dividend+5
  3834  003ECA  C07C  F01B         	movff	utoa@n+6,___lomod@dividend+6
  3835  003ECE  C07D  F01C         	movff	utoa@n+7,___lomod@dividend+7
  3836  003ED2  0E0A               	movlw	10
  3837  003ED4  6E1D               	movwf	___lomod@divisor^0,c
  3838  003ED6  0E00               	movlw	0
  3839  003ED8  6E1E               	movwf	(___lomod@divisor+1)^0,c
  3840  003EDA  0E00               	movlw	0
  3841  003EDC  6E1F               	movwf	(___lomod@divisor+2)^0,c
  3842  003EDE  0E00               	movlw	0
  3843  003EE0  6E20               	movwf	(___lomod@divisor+3)^0,c
  3844  003EE2  0E00               	movlw	0
  3845  003EE4  6E21               	movwf	(___lomod@divisor+4)^0,c
  3846  003EE6  0E00               	movlw	0
  3847  003EE8  6E22               	movwf	(___lomod@divisor+5)^0,c
  3848  003EEA  0E00               	movlw	0
  3849  003EEC  6E23               	movwf	(___lomod@divisor+6)^0,c
  3850  003EEE  0E00               	movlw	0
  3851  003EF0  6E24               	movwf	(___lomod@divisor+7)^0,c
  3852  003EF2  ECB7  F027         	call	___lomod	;wreg free
  3853  003EF6  C015  F06A         	movff	?___lomod,??_utoa
  3854  003EFA  C016  F06B         	movff	?___lomod+1,??_utoa+1
  3855  003EFE  C017  F06C         	movff	?___lomod+2,??_utoa+2
  3856  003F02  C018  F06D         	movff	?___lomod+3,??_utoa+3
  3857  003F06  C019  F06E         	movff	?___lomod+4,??_utoa+4
  3858  003F0A  C01A  F06F         	movff	?___lomod+5,??_utoa+5
  3859  003F0E  C01B  F070         	movff	?___lomod+6,??_utoa+6
  3860  003F12  C01C  F071         	movff	?___lomod+7,??_utoa+7
  3861  003F16  516A               	movf	??_utoa& (0+255),w,b
  3862  003F18  0F30               	addlw	48
  3863  003F1A  6EDF               	movwf	indf2,c
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  3867  003F1C  0772               	decf	utoa@p& (0+255),f,b
  3868  003F1E  A0D8               	btfss	status,0,c
  3869  003F20  0773               	decf	(utoa@p+1)& (0+255),f,b
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  3873  003F22  0774               	decf	utoa@w& (0+255),f,b
  3874  003F24  A0D8               	btfss	status,0,c
  3875  003F26  0775               	decf	(utoa@w+1)& (0+255),f,b
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  3879  003F28  C076  F015         	movff	utoa@n,___lodiv@dividend
  3880  003F2C  C077  F016         	movff	utoa@n+1,___lodiv@dividend+1
  3881  003F30  C078  F017         	movff	utoa@n+2,___lodiv@dividend+2
  3882  003F34  C079  F018         	movff	utoa@n+3,___lodiv@dividend+3
  3883  003F38  C07A  F019         	movff	utoa@n+4,___lodiv@dividend+4
  3884  003F3C  C07B  F01A         	movff	utoa@n+5,___lodiv@dividend+5
  3885  003F40  C07C  F01B         	movff	utoa@n+6,___lodiv@dividend+6
  3886  003F44  C07D  F01C         	movff	utoa@n+7,___lodiv@dividend+7
  3887  003F48  0E0A               	movlw	10
  3888  003F4A  6E1D               	movwf	___lodiv@divisor^0,c
  3889  003F4C  0E00               	movlw	0
  3890  003F4E  6E1E               	movwf	(___lodiv@divisor+1)^0,c
  3891  003F50  0E00               	movlw	0
  3892  003F52  6E1F               	movwf	(___lodiv@divisor+2)^0,c
  3893  003F54  0E00               	movlw	0
  3894  003F56  6E20               	movwf	(___lodiv@divisor+3)^0,c
  3895  003F58  0E00               	movlw	0
  3896  003F5A  6E21               	movwf	(___lodiv@divisor+4)^0,c
  3897  003F5C  0E00               	movlw	0
  3898  003F5E  6E22               	movwf	(___lodiv@divisor+5)^0,c
  3899  003F60  0E00               	movlw	0
  3900  003F62  6E23               	movwf	(___lodiv@divisor+6)^0,c
  3901  003F64  0E00               	movlw	0
  3902  003F66  6E24               	movwf	(___lodiv@divisor+7)^0,c
  3903  003F68  EC16  F025         	call	___lodiv	;wreg free
  3904  003F6C  C015  F076         	movff	?___lodiv,utoa@n
  3905  003F70  C016  F077         	movff	?___lodiv+1,utoa@n+1
  3906  003F74  C017  F078         	movff	?___lodiv+2,utoa@n+2
  3907  003F78  C018  F079         	movff	?___lodiv+3,utoa@n+3
  3908  003F7C  C019  F07A         	movff	?___lodiv+4,utoa@n+4
  3909  003F80  C01A  F07B         	movff	?___lodiv+5,utoa@n+5
  3910  003F84  C01B  F07C         	movff	?___lodiv+6,utoa@n+6
  3911  003F88  C01C  F07D         	movff	?___lodiv+7,utoa@n+7
  3912  003F8C                     l10101:
  3913                           
  3914                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3915  003F8C  0100               	movlb	0	; () banked
  3916  003F8E  517E               	movf	utoa@i& (0+255),w,b
  3917  003F90  117F               	iorwf	(utoa@i+1)& (0+255),w,b
  3918  003F92  B4D8               	btfsc	status,2,c
  3919  003F94  D01A               	goto	u11780
  3920                           
  3921                           ; BSR set to: 0
  3922  003F96  5176               	movf	utoa@n& (0+255),w,b
  3923  003F98  1177               	iorwf	(utoa@n+1)& (0+255),w,b
  3924  003F9A  1178               	iorwf	(utoa@n+2)& (0+255),w,b
  3925  003F9C  1179               	iorwf	(utoa@n+3)& (0+255),w,b
  3926  003F9E  117A               	iorwf	(utoa@n+4)& (0+255),w,b
  3927  003FA0  117B               	iorwf	(utoa@n+5)& (0+255),w,b
  3928  003FA2  117C               	iorwf	(utoa@n+6)& (0+255),w,b
  3929  003FA4  117D               	iorwf	(utoa@n+7)& (0+255),w,b
  3930  003FA6  A4D8               	btfss	status,2,c
  3931  003FA8  D77B               	goto	l10091
  3932                           
  3933                           ; BSR set to: 0
  3934  003FAA  BF73               	btfsc	(utoa@p+1)& (0+255),7,b
  3935  003FAC  D005               	goto	u11760
  3936  003FAE  5173               	movf	(utoa@p+1)& (0+255),w,b
  3937  003FB0  E102               	bnz	u11761
  3938  003FB2  0572               	decf	utoa@p& (0+255),w,b
  3939  003FB4  B0D8               	btfsc	status,0,c
  3940  003FB6                     u11761:
  3941  003FB6  D774               	goto	l10091
  3942  003FB8                     u11760:
  3943                           
  3944                           ; BSR set to: 0
  3945  003FB8  BF75               	btfsc	(utoa@w+1)& (0+255),7,b
  3946  003FBA  D007               	goto	u11780
  3947  003FBC  5175               	movf	(utoa@w+1)& (0+255),w,b
  3948  003FBE  E103               	bnz	u11770
  3949  003FC0  0574               	decf	utoa@w& (0+255),w,b
  3950  003FC2  A0D8               	btfss	status,0,c
  3951  003FC4  D002               	goto	u11780
  3952  003FC6                     u11770:
  3953                           
  3954                           ; BSR set to: 0
  3955  003FC6  B23D               	btfsc	_flags^0,1,c
  3956  003FC8  D76B               	goto	l10091
  3957  003FCA                     u11780:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  3961  003FCA  C060  F029         	movff	utoa@fp,pad@fp
  3962  003FCE  C061  F02A         	movff	utoa@fp+1,pad@fp+1
  3963  003FD2  0E98               	movlw	low _dbuf
  3964  003FD4  257E               	addwf	utoa@i& (0+255),w,b
  3965  003FD6  6E2B               	movwf	pad@buf^0,c
  3966  003FD8  0E01               	movlw	high _dbuf
  3967  003FDA  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3968  003FDC  6E2C               	movwf	(pad@buf+1)^0,c
  3969  003FDE  C074  F02D         	movff	utoa@w,pad@p
  3970  003FE2  C075  F02E         	movff	utoa@w+1,pad@p+1
  3971  003FE6  EC5F  F028         	call	_pad	;wreg free
  3972  003FEA  C029  F060         	movff	?_pad,?_utoa
  3973  003FEE  C02A  F061         	movff	?_pad+1,?_utoa+1
  3974  003FF2  0012               	return		;funcret
  3975  003FF4                     __end_of_utoa:
  3976                           	callstack 0
  3977                           
  3978 ;; *************** function ___lomod *****************
  3979 ;; Defined at:
  3980 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  dividend        8   20[COMRAM] unsigned long long 
  3983 ;;  divisor         8   28[COMRAM] unsigned long long 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  counter         1   36[COMRAM] unsigned char 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  8   20[COMRAM] unsigned long long 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 3F/0
  3992 ;;		On exit  : 3F/0
  3993 ;;		Unchanged: 3F/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3995 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3998 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3999 ;;Total ram usage:       17 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; Hardware stack levels required when called: 4
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_utoa
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text8
  4010  004F6E                     __ptext8:
  4011                           	callstack 0
  4012  004F6E                     ___lomod:
  4013                           	callstack 20
  4014                           
  4015                           ; BSR set to: 0
  4016                           
  4017                           ;incstack = 0
  4018  004F6E  501D               	movf	___lomod@divisor^0,w,c
  4019  004F70  101E               	iorwf	(___lomod@divisor+1)^0,w,c
  4020  004F72  101F               	iorwf	(___lomod@divisor+2)^0,w,c
  4021  004F74  1020               	iorwf	(___lomod@divisor+3)^0,w,c
  4022  004F76  1021               	iorwf	(___lomod@divisor+4)^0,w,c
  4023  004F78  1022               	iorwf	(___lomod@divisor+5)^0,w,c
  4024  004F7A  1023               	iorwf	(___lomod@divisor+6)^0,w,c
  4025  004F7C  1024               	iorwf	(___lomod@divisor+7)^0,w,c
  4026  004F7E  B4D8               	btfsc	status,2,c
  4027  004F80  D03C               	goto	l1692
  4028                           
  4029                           ; BSR set to: 0
  4030  004F82  0E01               	movlw	1
  4031  004F84  6E25               	movwf	___lomod@counter^0,c
  4032  004F86  D00A               	goto	l9599
  4033  004F88                     l9597:
  4034                           
  4035                           ; BSR set to: 0
  4036  004F88  90D8               	bcf	status,0,c
  4037  004F8A  361D               	rlcf	___lomod@divisor^0,f,c
  4038  004F8C  361E               	rlcf	(___lomod@divisor+1)^0,f,c
  4039  004F8E  361F               	rlcf	(___lomod@divisor+2)^0,f,c
  4040  004F90  3620               	rlcf	(___lomod@divisor+3)^0,f,c
  4041  004F92  3621               	rlcf	(___lomod@divisor+4)^0,f,c
  4042  004F94  3622               	rlcf	(___lomod@divisor+5)^0,f,c
  4043  004F96  3623               	rlcf	(___lomod@divisor+6)^0,f,c
  4044  004F98  3624               	rlcf	(___lomod@divisor+7)^0,f,c
  4045  004F9A  2A25               	incf	___lomod@counter^0,f,c
  4046  004F9C                     l9599:
  4047                           
  4048                           ; BSR set to: 0
  4049  004F9C  AE24               	btfss	(___lomod@divisor+7)^0,7,c
  4050  004F9E  D7F4               	goto	l9597
  4051  004FA0                     u10740:
  4052                           
  4053                           ; BSR set to: 0
  4054  004FA0  501D               	movf	___lomod@divisor^0,w,c
  4055  004FA2  5C15               	subwf	___lomod@dividend^0,w,c
  4056  004FA4  501E               	movf	(___lomod@divisor+1)^0,w,c
  4057  004FA6  5816               	subwfb	(___lomod@dividend+1)^0,w,c
  4058  004FA8  501F               	movf	(___lomod@divisor+2)^0,w,c
  4059  004FAA  5817               	subwfb	(___lomod@dividend+2)^0,w,c
  4060  004FAC  5020               	movf	(___lomod@divisor+3)^0,w,c
  4061  004FAE  5818               	subwfb	(___lomod@dividend+3)^0,w,c
  4062  004FB0  5021               	movf	(___lomod@divisor+4)^0,w,c
  4063  004FB2  5819               	subwfb	(___lomod@dividend+4)^0,w,c
  4064  004FB4  5022               	movf	(___lomod@divisor+5)^0,w,c
  4065  004FB6  581A               	subwfb	(___lomod@dividend+5)^0,w,c
  4066  004FB8  5023               	movf	(___lomod@divisor+6)^0,w,c
  4067  004FBA  581B               	subwfb	(___lomod@dividend+6)^0,w,c
  4068  004FBC  5024               	movf	(___lomod@divisor+7)^0,w,c
  4069  004FBE  581C               	subwfb	(___lomod@dividend+7)^0,w,c
  4070  004FC0  A0D8               	btfss	status,0,c
  4071  004FC2  D010               	goto	l9605
  4072                           
  4073                           ; BSR set to: 0
  4074  004FC4  501D               	movf	___lomod@divisor^0,w,c
  4075  004FC6  5E15               	subwf	___lomod@dividend^0,f,c
  4076  004FC8  501E               	movf	(___lomod@divisor+1)^0,w,c
  4077  004FCA  5A16               	subwfb	(___lomod@dividend+1)^0,f,c
  4078  004FCC  501F               	movf	(___lomod@divisor+2)^0,w,c
  4079  004FCE  5A17               	subwfb	(___lomod@dividend+2)^0,f,c
  4080  004FD0  5020               	movf	(___lomod@divisor+3)^0,w,c
  4081  004FD2  5A18               	subwfb	(___lomod@dividend+3)^0,f,c
  4082  004FD4  5021               	movf	(___lomod@divisor+4)^0,w,c
  4083  004FD6  5A19               	subwfb	(___lomod@dividend+4)^0,f,c
  4084  004FD8  5022               	movf	(___lomod@divisor+5)^0,w,c
  4085  004FDA  5A1A               	subwfb	(___lomod@dividend+5)^0,f,c
  4086  004FDC  5023               	movf	(___lomod@divisor+6)^0,w,c
  4087  004FDE  5A1B               	subwfb	(___lomod@dividend+6)^0,f,c
  4088  004FE0  5024               	movf	(___lomod@divisor+7)^0,w,c
  4089  004FE2  5A1C               	subwfb	(___lomod@dividend+7)^0,f,c
  4090  004FE4                     l9605:
  4091                           
  4092                           ; BSR set to: 0
  4093  004FE4  90D8               	bcf	status,0,c
  4094  004FE6  3224               	rrcf	(___lomod@divisor+7)^0,f,c
  4095  004FE8  3223               	rrcf	(___lomod@divisor+6)^0,f,c
  4096  004FEA  3222               	rrcf	(___lomod@divisor+5)^0,f,c
  4097  004FEC  3221               	rrcf	(___lomod@divisor+4)^0,f,c
  4098  004FEE  3220               	rrcf	(___lomod@divisor+3)^0,f,c
  4099  004FF0  321F               	rrcf	(___lomod@divisor+2)^0,f,c
  4100  004FF2  321E               	rrcf	(___lomod@divisor+1)^0,f,c
  4101  004FF4  321D               	rrcf	___lomod@divisor^0,f,c
  4102                           
  4103                           ; BSR set to: 0
  4104  004FF6  2E25               	decfsz	___lomod@counter^0,f,c
  4105  004FF8  D7D3               	goto	u10740
  4106  004FFA                     l1692:
  4107                           
  4108                           ; BSR set to: 0
  4109  004FFA  C015  F015         	movff	___lomod@dividend,?___lomod
  4110  004FFE  C016  F016         	movff	___lomod@dividend+1,?___lomod+1
  4111  005002  C017  F017         	movff	___lomod@dividend+2,?___lomod+2
  4112  005006  C018  F018         	movff	___lomod@dividend+3,?___lomod+3
  4113  00500A  C019  F019         	movff	___lomod@dividend+4,?___lomod+4
  4114  00500E  C01A  F01A         	movff	___lomod@dividend+5,?___lomod+5
  4115  005012  C01B  F01B         	movff	___lomod@dividend+6,?___lomod+6
  4116  005016  C01C  F01C         	movff	___lomod@dividend+7,?___lomod+7
  4117                           
  4118                           ; BSR set to: 0
  4119  00501A  0012               	return		;funcret
  4120  00501C                     __end_of___lomod:
  4121                           	callstack 0
  4122                           
  4123 ;; *************** function ___lodiv *****************
  4124 ;; Defined at:
  4125 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  dividend        8   20[COMRAM] unsigned long long 
  4128 ;;  divisor         8   28[COMRAM] unsigned long long 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  quotient        8   36[COMRAM] unsigned long long 
  4131 ;;  counter         1   44[COMRAM] unsigned char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  8   20[COMRAM] unsigned long long 
  4134 ;; Registers used:
  4135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4136 ;; Tracked objects:
  4137 ;;		On entry : 3F/0
  4138 ;;		On exit  : 3F/0
  4139 ;;		Unchanged: 3F/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4141 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4142 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4144 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4145 ;;Total ram usage:       25 bytes
  4146 ;; Hardware stack levels used: 1
  4147 ;; Hardware stack levels required when called: 4
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_utoa
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text9
  4156  004A2C                     __ptext9:
  4157                           	callstack 0
  4158  004A2C                     ___lodiv:
  4159                           	callstack 20
  4160                           
  4161                           ; BSR set to: 0
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;incstack = 0
  4165  004A2C  EE20  F025         	lfsr	2,___lodiv@quotient
  4166  004A30  0E07               	movlw	7
  4167  004A32                     u10691:
  4168  004A32  6ADE               	clrf	postinc2,c
  4169  004A34  06E8               	decf	wreg,f,c
  4170  004A36  E2FD               	bc	u10691
  4171                           
  4172                           ; BSR set to: 0
  4173  004A38  501D               	movf	___lodiv@divisor^0,w,c
  4174  004A3A  101E               	iorwf	(___lodiv@divisor+1)^0,w,c
  4175  004A3C  101F               	iorwf	(___lodiv@divisor+2)^0,w,c
  4176  004A3E  1020               	iorwf	(___lodiv@divisor+3)^0,w,c
  4177  004A40  1021               	iorwf	(___lodiv@divisor+4)^0,w,c
  4178  004A42  1022               	iorwf	(___lodiv@divisor+5)^0,w,c
  4179  004A44  1023               	iorwf	(___lodiv@divisor+6)^0,w,c
  4180  004A46  1024               	iorwf	(___lodiv@divisor+7)^0,w,c
  4181  004A48  B4D8               	btfsc	status,2,c
  4182  004A4A  D046               	goto	l1682
  4183                           
  4184                           ; BSR set to: 0
  4185  004A4C  0E01               	movlw	1
  4186  004A4E  6E2D               	movwf	___lodiv@counter^0,c
  4187  004A50  D00A               	goto	l9579
  4188  004A52                     l9577:
  4189                           
  4190                           ; BSR set to: 0
  4191  004A52  90D8               	bcf	status,0,c
  4192  004A54  361D               	rlcf	___lodiv@divisor^0,f,c
  4193  004A56  361E               	rlcf	(___lodiv@divisor+1)^0,f,c
  4194  004A58  361F               	rlcf	(___lodiv@divisor+2)^0,f,c
  4195  004A5A  3620               	rlcf	(___lodiv@divisor+3)^0,f,c
  4196  004A5C  3621               	rlcf	(___lodiv@divisor+4)^0,f,c
  4197  004A5E  3622               	rlcf	(___lodiv@divisor+5)^0,f,c
  4198  004A60  3623               	rlcf	(___lodiv@divisor+6)^0,f,c
  4199  004A62  3624               	rlcf	(___lodiv@divisor+7)^0,f,c
  4200  004A64  2A2D               	incf	___lodiv@counter^0,f,c
  4201  004A66                     l9579:
  4202                           
  4203                           ; BSR set to: 0
  4204  004A66  AE24               	btfss	(___lodiv@divisor+7)^0,7,c
  4205  004A68  D7F4               	goto	l9577
  4206  004A6A                     u10710:
  4207                           
  4208                           ; BSR set to: 0
  4209  004A6A  90D8               	bcf	status,0,c
  4210  004A6C  3625               	rlcf	___lodiv@quotient^0,f,c
  4211  004A6E  3626               	rlcf	(___lodiv@quotient+1)^0,f,c
  4212  004A70  3627               	rlcf	(___lodiv@quotient+2)^0,f,c
  4213  004A72  3628               	rlcf	(___lodiv@quotient+3)^0,f,c
  4214  004A74  3629               	rlcf	(___lodiv@quotient+4)^0,f,c
  4215  004A76  362A               	rlcf	(___lodiv@quotient+5)^0,f,c
  4216  004A78  362B               	rlcf	(___lodiv@quotient+6)^0,f,c
  4217  004A7A  362C               	rlcf	(___lodiv@quotient+7)^0,f,c
  4218                           
  4219                           ; BSR set to: 0
  4220  004A7C  501D               	movf	___lodiv@divisor^0,w,c
  4221  004A7E  5C15               	subwf	___lodiv@dividend^0,w,c
  4222  004A80  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4223  004A82  5816               	subwfb	(___lodiv@dividend+1)^0,w,c
  4224  004A84  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4225  004A86  5817               	subwfb	(___lodiv@dividend+2)^0,w,c
  4226  004A88  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4227  004A8A  5818               	subwfb	(___lodiv@dividend+3)^0,w,c
  4228  004A8C  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4229  004A8E  5819               	subwfb	(___lodiv@dividend+4)^0,w,c
  4230  004A90  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4231  004A92  581A               	subwfb	(___lodiv@dividend+5)^0,w,c
  4232  004A94  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4233  004A96  581B               	subwfb	(___lodiv@dividend+6)^0,w,c
  4234  004A98  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4235  004A9A  581C               	subwfb	(___lodiv@dividend+7)^0,w,c
  4236  004A9C  A0D8               	btfss	status,0,c
  4237  004A9E  D011               	goto	l9589
  4238                           
  4239                           ; BSR set to: 0
  4240  004AA0  501D               	movf	___lodiv@divisor^0,w,c
  4241  004AA2  5E15               	subwf	___lodiv@dividend^0,f,c
  4242  004AA4  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4243  004AA6  5A16               	subwfb	(___lodiv@dividend+1)^0,f,c
  4244  004AA8  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4245  004AAA  5A17               	subwfb	(___lodiv@dividend+2)^0,f,c
  4246  004AAC  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4247  004AAE  5A18               	subwfb	(___lodiv@dividend+3)^0,f,c
  4248  004AB0  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4249  004AB2  5A19               	subwfb	(___lodiv@dividend+4)^0,f,c
  4250  004AB4  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4251  004AB6  5A1A               	subwfb	(___lodiv@dividend+5)^0,f,c
  4252  004AB8  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4253  004ABA  5A1B               	subwfb	(___lodiv@dividend+6)^0,f,c
  4254  004ABC  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4255  004ABE  5A1C               	subwfb	(___lodiv@dividend+7)^0,f,c
  4256                           
  4257                           ; BSR set to: 0
  4258  004AC0  8025               	bsf	___lodiv@quotient^0,0,c
  4259  004AC2                     l9589:
  4260                           
  4261                           ; BSR set to: 0
  4262  004AC2  90D8               	bcf	status,0,c
  4263  004AC4  3224               	rrcf	(___lodiv@divisor+7)^0,f,c
  4264  004AC6  3223               	rrcf	(___lodiv@divisor+6)^0,f,c
  4265  004AC8  3222               	rrcf	(___lodiv@divisor+5)^0,f,c
  4266  004ACA  3221               	rrcf	(___lodiv@divisor+4)^0,f,c
  4267  004ACC  3220               	rrcf	(___lodiv@divisor+3)^0,f,c
  4268  004ACE  321F               	rrcf	(___lodiv@divisor+2)^0,f,c
  4269  004AD0  321E               	rrcf	(___lodiv@divisor+1)^0,f,c
  4270  004AD2  321D               	rrcf	___lodiv@divisor^0,f,c
  4271                           
  4272                           ; BSR set to: 0
  4273  004AD4  2E2D               	decfsz	___lodiv@counter^0,f,c
  4274  004AD6  D7C9               	goto	u10710
  4275  004AD8                     l1682:
  4276                           
  4277                           ; BSR set to: 0
  4278  004AD8  C025  F015         	movff	___lodiv@quotient,?___lodiv
  4279  004ADC  C026  F016         	movff	___lodiv@quotient+1,?___lodiv+1
  4280  004AE0  C027  F017         	movff	___lodiv@quotient+2,?___lodiv+2
  4281  004AE4  C028  F018         	movff	___lodiv@quotient+3,?___lodiv+3
  4282  004AE8  C029  F019         	movff	___lodiv@quotient+4,?___lodiv+4
  4283  004AEC  C02A  F01A         	movff	___lodiv@quotient+5,?___lodiv+5
  4284  004AF0  C02B  F01B         	movff	___lodiv@quotient+6,?___lodiv+6
  4285  004AF4  C02C  F01C         	movff	___lodiv@quotient+7,?___lodiv+7
  4286                           
  4287                           ; BSR set to: 0
  4288  004AF8  0012               	return		;funcret
  4289  004AFA                     __end_of___lodiv:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _stoa *****************
  4293 ;; Defined at:
  4294 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4297 ;;		 -> sprintf@f(11), NULL(0), 
  4298 ;;  s               2   33[COMRAM] PTR unsigned char 
  4299 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  nuls            7   36[COMRAM] unsigned char [7]
  4302 ;;  l               2   51[COMRAM] int 
  4303 ;;  p               2   49[COMRAM] int 
  4304 ;;  cp              2   47[COMRAM] PTR unsigned char 
  4305 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_2(9), 
  4306 ;;		 -> STR_1(12), 
  4307 ;;  w               2   45[COMRAM] int 
  4308 ;;  i               2   43[COMRAM] int 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  2   31[COMRAM] int 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 3F/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4319 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4321 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4322 ;;Total ram usage:       22 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 7
  4325 ;; This function calls:
  4326 ;;		_fputc
  4327 ;;		_strlen
  4328 ;; This function is called by:
  4329 ;;		_vfpfcnvrt
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text10
  4334  0045A2                     __ptext10:
  4335                           	callstack 0
  4336  0045A2                     _stoa:
  4337                           	callstack 18
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;incstack = 0
  4344  0045A2  EE20  F1E8         	lfsr	2,stoa@F1164
  4345  0045A6  EE10  F025         	lfsr	1,stoa@nuls
  4346  0045AA  0E06               	movlw	6
  4347  0045AC                     u11621:
  4348  0045AC  006F FF6F FFE3     	movff	plusw2,plusw1
  4349  0045B2  06E8               	decf	wreg,f,c
  4350  0045B4  E2FB               	bc	u11621
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  4354  0045B6  C022  F030         	movff	stoa@s,stoa@cp
  4355  0045BA  C023  F031         	movff	stoa@s+1,stoa@cp+1
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  4359  0045BE  5030               	movf	stoa@cp^0,w,c
  4360  0045C0  1031               	iorwf	(stoa@cp+1)^0,w,c
  4361  0045C2  A4D8               	btfss	status,2,c
  4362  0045C4  D003               	goto	l10045
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  4366  0045C6  0E25               	movlw	low stoa@nuls
  4367  0045C8  6E30               	movwf	stoa@cp^0,c
  4368  0045CA  6A31               	clrf	(stoa@cp+1)^0,c
  4369  0045CC                     l10045:
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  4373  0045CC  C030  F015         	movff	stoa@cp,strlen@s
  4374  0045D0  C031  F016         	movff	stoa@cp+1,strlen@s+1
  4375  0045D4  EC33  F02B         	call	_strlen	;wreg free
  4376  0045D8  C015  F034         	movff	?_strlen,stoa@l
  4377  0045DC  C016  F035         	movff	?_strlen+1,stoa@l+1
  4378                           
  4379                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  4380  0045E0  C0F9  F032         	movff	_prec,stoa@p
  4381  0045E4  C0FA  F033         	movff	_prec+1,stoa@p+1
  4382                           
  4383                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  4384  0045E8  BE33               	btfsc	(stoa@p+1)^0,7,c
  4385  0045EA  D00E               	goto	l2074
  4386  0045EC  5034               	movf	stoa@l^0,w,c
  4387  0045EE  5C32               	subwf	stoa@p^0,w,c
  4388  0045F0  5033               	movf	(stoa@p+1)^0,w,c
  4389  0045F2  0A80               	xorlw	128
  4390  0045F4  6E24               	movwf	??_stoa^0,c
  4391  0045F6  5035               	movf	(stoa@l+1)^0,w,c
  4392  0045F8  0A80               	xorlw	128
  4393  0045FA  5824               	subwfb	??_stoa^0,w,c
  4394  0045FC  B0D8               	btfsc	status,0,c
  4395  0045FE  D004               	goto	l2074
  4396  004600  C032  F034         	movff	stoa@p,stoa@l
  4397  004604  C033  F035         	movff	stoa@p+1,stoa@l+1
  4398  004608                     l2074:
  4399                           
  4400                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  4401  004608  C034  F032         	movff	stoa@l,stoa@p
  4402  00460C  C035  F033         	movff	stoa@l+1,stoa@p+1
  4403                           
  4404                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  4405  004610  C0F7  F02E         	movff	_width,stoa@w
  4406  004614  C0F8  F02F         	movff	_width+1,stoa@w+1
  4407                           
  4408                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  4409  004618  A03D               	btfss	_flags^0,0,c
  4410  00461A  D00D               	goto	l10059
  4411  00461C  D016               	goto	u11670
  4412  00461E                     l10055:
  4413                           
  4414                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  4415  00461E  0E00               	movlw	0
  4416  004620  6E18               	movwf	(fputc@c+1)^0,c
  4417  004622  0E20               	movlw	32
  4418  004624  6E17               	movwf	fputc@c^0,c
  4419  004626  C020  F019         	movff	stoa@fp,fputc@fp
  4420  00462A  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4421  00462E  EC03  F027         	call	_fputc	;wreg free
  4422                           
  4423                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  4424  004632  4A34               	infsnz	stoa@l^0,f,c
  4425  004634  2A35               	incf	(stoa@l+1)^0,f,c
  4426  004636                     l10059:
  4427                           
  4428                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  4429  004636  502E               	movf	stoa@w^0,w,c
  4430  004638  5C34               	subwf	stoa@l^0,w,c
  4431  00463A  5035               	movf	(stoa@l+1)^0,w,c
  4432  00463C  0A80               	xorlw	128
  4433  00463E  6E24               	movwf	??_stoa^0,c
  4434  004640  502F               	movf	(stoa@w+1)^0,w,c
  4435  004642  0A80               	xorlw	128
  4436  004644  5824               	subwfb	??_stoa^0,w,c
  4437  004646  A0D8               	btfss	status,0,c
  4438  004648  D7EA               	goto	l10055
  4439  00464A                     u11670:
  4440                           
  4441                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  4442  00464A  0E00               	movlw	0
  4443  00464C  6E2D               	movwf	(stoa@i+1)^0,c
  4444  00464E  0E00               	movlw	0
  4445  004650  6E2C               	movwf	stoa@i^0,c
  4446                           
  4447                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4448  004652  D023               	goto	l10069
  4449  004654                     l10063:
  4450                           
  4451                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  4452  004654  0060  F0C3  FFF6   	movff	stoa@cp,tblptrl
  4453  00465A  0060  F0C7  FFF7   	movff	stoa@cp+1,tblptrh
  4454  004660  0E00               	movlw	low (__smallconst shr (0+16))
  4455  004662  6EF8               	movwf	tblptru,c
  4456  004664  0E1F               	movlw	(high __ramtop+-1)
  4457  004666  64F7               	cpfsgt	tblptrh,c
  4458  004668  D003               	bra	u11687
  4459  00466A  0008               	tblrd		*
  4460  00466C  50F5               	movf	tablat,w,c
  4461  00466E  D007               	bra	u11680
  4462  004670                     u11687:
  4463  004670  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4464  004676  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4465  00467C  50E7               	movf	indf1,w,c
  4466  00467E                     u11680:
  4467  00467E  6E24               	movwf	??_stoa^0,c
  4468  004680  5024               	movf	??_stoa^0,w,c
  4469  004682  6E17               	movwf	fputc@c^0,c
  4470  004684  6A18               	clrf	(fputc@c+1)^0,c
  4471  004686  C020  F019         	movff	stoa@fp,fputc@fp
  4472  00468A  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4473  00468E  EC03  F027         	call	_fputc	;wreg free
  4474                           
  4475                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  4476  004692  4A30               	infsnz	stoa@cp^0,f,c
  4477  004694  2A31               	incf	(stoa@cp+1)^0,f,c
  4478                           
  4479                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  4480  004696  4A2C               	infsnz	stoa@i^0,f,c
  4481  004698  2A2D               	incf	(stoa@i+1)^0,f,c
  4482  00469A                     l10069:
  4483                           
  4484                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4485  00469A  5032               	movf	stoa@p^0,w,c
  4486  00469C  5C2C               	subwf	stoa@i^0,w,c
  4487  00469E  502D               	movf	(stoa@i+1)^0,w,c
  4488  0046A0  0A80               	xorlw	128
  4489  0046A2  6E24               	movwf	??_stoa^0,c
  4490  0046A4  5033               	movf	(stoa@p+1)^0,w,c
  4491  0046A6  0A80               	xorlw	128
  4492  0046A8  5824               	subwfb	??_stoa^0,w,c
  4493  0046AA  A0D8               	btfss	status,0,c
  4494  0046AC  D7D3               	goto	l10063
  4495                           
  4496                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  4497  0046AE  B03D               	btfsc	_flags^0,0,c
  4498  0046B0  D00D               	goto	l10077
  4499  0046B2  D016               	goto	u11710
  4500  0046B4                     l10073:
  4501                           
  4502                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  4503  0046B4  0E00               	movlw	0
  4504  0046B6  6E18               	movwf	(fputc@c+1)^0,c
  4505  0046B8  0E20               	movlw	32
  4506  0046BA  6E17               	movwf	fputc@c^0,c
  4507  0046BC  C020  F019         	movff	stoa@fp,fputc@fp
  4508  0046C0  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4509  0046C4  EC03  F027         	call	_fputc	;wreg free
  4510                           
  4511                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  4512  0046C8  4A34               	infsnz	stoa@l^0,f,c
  4513  0046CA  2A35               	incf	(stoa@l+1)^0,f,c
  4514  0046CC                     l10077:
  4515                           
  4516                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  4517  0046CC  502E               	movf	stoa@w^0,w,c
  4518  0046CE  5C34               	subwf	stoa@l^0,w,c
  4519  0046D0  5035               	movf	(stoa@l+1)^0,w,c
  4520  0046D2  0A80               	xorlw	128
  4521  0046D4  6E24               	movwf	??_stoa^0,c
  4522  0046D6  502F               	movf	(stoa@w+1)^0,w,c
  4523  0046D8  0A80               	xorlw	128
  4524  0046DA  5824               	subwfb	??_stoa^0,w,c
  4525  0046DC  A0D8               	btfss	status,0,c
  4526  0046DE  D7EA               	goto	l10073
  4527  0046E0                     u11710:
  4528                           
  4529                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  4530                           
  4531                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  4532  0046E0  C034  F020         	movff	stoa@l,?_stoa
  4533  0046E4  C035  F021         	movff	stoa@l+1,?_stoa+1
  4534  0046E8  0012               	return		;funcret
  4535  0046EA                     __end_of_stoa:
  4536                           	callstack 0
  4537                           
  4538 ;; *************** function _efgtoa *****************
  4539 ;; Defined at:
  4540 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  4543 ;;		 -> sprintf@f(11), NULL(0), 
  4544 ;;  f               4   19[BANK0 ] PTR struct _IO_FILE
  4545 ;;  c               1   23[BANK0 ] unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  u               4   75[BANK0 ] unsigned char 
  4548 ;;  g               4   65[BANK0 ] unsigned char 
  4549 ;;  l               4   61[BANK0 ] unsigned char 
  4550 ;;  h               4   57[BANK0 ] unsigned char 
  4551 ;;  ou              4   43[BANK0 ] unsigned char 
  4552 ;;  n               2   73[BANK0 ] int 
  4553 ;;  e               2   71[BANK0 ] int 
  4554 ;;  i               2   69[BANK0 ] int 
  4555 ;;  w               2   54[BANK0 ] int 
  4556 ;;  p               2   51[BANK0 ] int 
  4557 ;;  sign            2   49[BANK0 ] int 
  4558 ;;  d               2   47[BANK0 ] int 
  4559 ;;  m               2   41[BANK0 ] int 
  4560 ;;  ne              2   39[BANK0 ] int 
  4561 ;;  pp              2   37[BANK0 ] int 
  4562 ;;  t               2   35[BANK0 ] int 
  4563 ;;  mode            1   56[BANK0 ] unsigned char 
  4564 ;;  nmode           1   53[BANK0 ] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  2   17[BANK0 ] int 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 3F/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4574 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4575 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4576 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4577 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4578 ;;Total ram usage:       62 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 9
  4581 ;; This function calls:
  4582 ;;		___awdiv
  4583 ;;		___awmod
  4584 ;;		___fladd
  4585 ;;		___fldiv
  4586 ;;		___fleq
  4587 ;;		___flge
  4588 ;;		___flmul
  4589 ;;		___flneg
  4590 ;;		___flsub
  4591 ;;		___fltol
  4592 ;;		___fpclassifyf
  4593 ;;		_floorf
  4594 ;;		_isupper
  4595 ;;		_pad
  4596 ;;		_strcpy
  4597 ;;		_tolower
  4598 ;; This function is called by:
  4599 ;;		_vfpfcnvrt
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text11
  4604  002100                     __ptext11:
  4605                           	callstack 0
  4606  002100                     _efgtoa:
  4607                           	callstack 16
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  4611                           
  4612                           ;incstack = 0
  4613  002100  0E00               	movlw	0
  4614  002102  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4615  002104  0E00               	movlw	0
  4616  002106  6F91               	movwf	efgtoa@sign& (0+255),b
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  4620  002108  C073  F0A1         	movff	efgtoa@f,efgtoa@g
  4621  00210C  C074  F0A2         	movff	efgtoa@f+1,efgtoa@g+1
  4622  002110  C075  F0A3         	movff	efgtoa@f+2,efgtoa@g+2
  4623  002114  C076  F0A4         	movff	efgtoa@f+3,efgtoa@g+3
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  4627  002118  AFA4               	btfss	(efgtoa@g+3)& (0+255),7,b
  4628  00211A  D016               	goto	l9741
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  4632  00211C  0E00               	movlw	0
  4633  00211E  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4634  002120  0E01               	movlw	1
  4635  002122  6F91               	movwf	efgtoa@sign& (0+255),b
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  4639  002124  C0A1  F015         	movff	efgtoa@g,___flneg@f1
  4640  002128  C0A2  F016         	movff	efgtoa@g+1,___flneg@f1+1
  4641  00212C  C0A3  F017         	movff	efgtoa@g+2,___flneg@f1+2
  4642  002130  C0A4  F018         	movff	efgtoa@g+3,___flneg@f1+3
  4643  002134  EC3E  F02D         	call	___flneg	;wreg free
  4644  002138  C015  F0A1         	movff	?___flneg,efgtoa@g
  4645  00213C  C016  F0A2         	movff	?___flneg+1,efgtoa@g+1
  4646  002140  C017  F0A3         	movff	?___flneg+2,efgtoa@g+2
  4647  002144  C018  F0A4         	movff	?___flneg+3,efgtoa@g+3
  4648  002148                     l9741:
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  4652  002148  0E00               	movlw	0
  4653  00214A  6FAA               	movwf	(efgtoa@n+1)& (0+255),b
  4654  00214C  0E00               	movlw	0
  4655  00214E  6FA9               	movwf	efgtoa@n& (0+255),b
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  4659  002150  C0F7  F096         	movff	_width,efgtoa@w
  4660  002154  C0F8  F097         	movff	_width+1,efgtoa@w+1
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  4664  002158  5191               	movf	efgtoa@sign& (0+255),w,b
  4665  00215A  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4666  00215C  A4D8               	btfss	status,2,c
  4667  00215E  D002               	goto	u11160
  4668                           
  4669                           ; BSR set to: 0
  4670  002160  A43D               	btfss	_flags^0,2,c
  4671  002162  D013               	goto	l9761
  4672  002164                     u11160:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  4676  002164  5191               	movf	efgtoa@sign& (0+255),w,b
  4677  002166  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4678  002168  A4D8               	btfss	status,2,c
  4679  00216A  D004               	goto	l9753
  4680                           
  4681                           ; BSR set to: 0
  4682  00216C  0E00               	movlw	0
  4683  00216E  6F7E               	movwf	(_efgtoa$3072+1)& (0+255),b
  4684  002170  0E2B               	movlw	43
  4685  002172  D003               	goto	L3
  4686  002174                     l9753:
  4687                           
  4688                           ; BSR set to: 0
  4689  002174  0E00               	movlw	0
  4690  002176  6F7E               	movwf	(_efgtoa$3072+1)& (0+255),b
  4691  002178  0E2D               	movlw	45
  4692  00217A                     L3:
  4693  00217A  6F7D               	movwf	_efgtoa$3072& (0+255),b
  4694                           
  4695                           ; BSR set to: 0
  4696  00217C  C07D  F198         	movff	_efgtoa$3072,_dbuf
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  4700  002180  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  4701  002182  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  4705  002184  0796               	decf	efgtoa@w& (0+255),f,b
  4706  002186  A0D8               	btfss	status,0,c
  4707  002188  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  4708  00218A                     l9761:
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  4712  00218A  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4713  00218E  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4714  002192  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4715  002196  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4716  00219A  ECE4  F025         	call	___fpclassifyf	;wreg free
  4717  00219E  0415               	decf	?___fpclassifyf^0,w,c
  4718  0021A0  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4719  0021A2  A4D8               	btfss	status,2,c
  4720  0021A4  D047               	goto	l9779
  4721  0021A6  0EBF               	movlw	191
  4722  0021A8  0100               	movlb	0	; () banked
  4723  0021AA  6F78               	movwf	??_efgtoa& (0+255),b
  4724  0021AC  0EFF               	movlw	255
  4725  0021AE  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4726  0021B0  5177               	movf	efgtoa@c& (0+255),w,b
  4727  0021B2  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4728  0021B4  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4729  0021B6  5178               	movf	??_efgtoa& (0+255),w,b
  4730  0021B8  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4731  0021BA  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4732  0021BC  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4733  0021BE  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4734  0021C0  E113               	bnz	l9771
  4735  0021C2  0E1A               	movlw	26
  4736  0021C4  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4737  0021C6  B0D8               	btfsc	status,0,c
  4738  0021C8  D00F               	goto	l9771
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  4742  0021CA  0E98               	movlw	low _dbuf
  4743  0021CC  25A9               	addwf	efgtoa@n& (0+255),w,b
  4744  0021CE  6E15               	movwf	strcpy@dest^0,c
  4745  0021D0  0E01               	movlw	high _dbuf
  4746  0021D2  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4747  0021D4  6E16               	movwf	(strcpy@dest+1)^0,c
  4748  0021D6  0EDE               	movlw	low STR_12
  4749  0021D8  6E17               	movwf	strcpy@src^0,c
  4750  0021DA  5017               	movf	strcpy@src^0,w,c
  4751  0021DC  A4D8               	btfss	status,2,c
  4752  0021DE  0E20               	movlw	high __smallconst
  4753  0021E0  6E18               	movwf	(strcpy@src+1)^0,c
  4754  0021E2  EC62  F02A         	call	_strcpy	;wreg free
  4755                           
  4756                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  4757  0021E6  D00E               	goto	l9773
  4758  0021E8                     l9771:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  4762  0021E8  0E98               	movlw	low _dbuf
  4763  0021EA  25A9               	addwf	efgtoa@n& (0+255),w,b
  4764  0021EC  6E15               	movwf	strcpy@dest^0,c
  4765  0021EE  0E01               	movlw	high _dbuf
  4766  0021F0  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4767  0021F2  6E16               	movwf	(strcpy@dest+1)^0,c
  4768  0021F4  0EE6               	movlw	low STR_13
  4769  0021F6  6E17               	movwf	strcpy@src^0,c
  4770  0021F8  5017               	movf	strcpy@src^0,w,c
  4771  0021FA  A4D8               	btfss	status,2,c
  4772  0021FC  0E20               	movlw	high __smallconst
  4773  0021FE  6E18               	movwf	(strcpy@src+1)^0,c
  4774  002200  EC62  F02A         	call	_strcpy	;wreg free
  4775  002204                     l9773:
  4776                           
  4777                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  4778  002204  0100               	movlb	0	; () banked
  4779  002206  0EFD               	movlw	253
  4780  002208  2796               	addwf	efgtoa@w& (0+255),f,b
  4781  00220A  0EFF               	movlw	255
  4782  00220C  2397               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4783  00220E                     l9775:
  4784                           
  4785                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  4786  00220E  C071  F029         	movff	efgtoa@fp,pad@fp
  4787  002212  C072  F02A         	movff	efgtoa@fp+1,pad@fp+1
  4788  002216  0E98               	movlw	low _dbuf
  4789  002218  6E2B               	movwf	pad@buf^0,c
  4790  00221A  0E01               	movlw	high _dbuf
  4791  00221C  6E2C               	movwf	(pad@buf+1)^0,c
  4792  00221E  C096  F02D         	movff	efgtoa@w,pad@p
  4793  002222  C097  F02E         	movff	efgtoa@w+1,pad@p+1
  4794  002226  EC5F  F028         	call	_pad	;wreg free
  4795  00222A  C029  F071         	movff	?_pad,?_efgtoa
  4796  00222E  C02A  F072         	movff	?_pad+1,?_efgtoa+1
  4797  002232  0012               	return	
  4798  002234                     l9779:
  4799                           
  4800                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  4801  002234  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4802  002238  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4803  00223C  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4804  002240  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4805  002244  ECE4  F025         	call	___fpclassifyf	;wreg free
  4806  002248  5015               	movf	?___fpclassifyf^0,w,c
  4807  00224A  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4808  00224C  A4D8               	btfss	status,2,c
  4809  00224E  D030               	goto	l9797
  4810  002250  0EBF               	movlw	191
  4811  002252  0100               	movlb	0	; () banked
  4812  002254  6F78               	movwf	??_efgtoa& (0+255),b
  4813  002256  0EFF               	movlw	255
  4814  002258  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4815  00225A  5177               	movf	efgtoa@c& (0+255),w,b
  4816  00225C  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4817  00225E  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4818  002260  5178               	movf	??_efgtoa& (0+255),w,b
  4819  002262  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4820  002264  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4821  002266  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4822  002268  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4823  00226A  E113               	bnz	l9789
  4824  00226C  0E1A               	movlw	26
  4825  00226E  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4826  002270  B0D8               	btfsc	status,0,c
  4827  002272  D00F               	goto	l9789
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  4831  002274  0E98               	movlw	low _dbuf
  4832  002276  25A9               	addwf	efgtoa@n& (0+255),w,b
  4833  002278  6E15               	movwf	strcpy@dest^0,c
  4834  00227A  0E01               	movlw	high _dbuf
  4835  00227C  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4836  00227E  6E16               	movwf	(strcpy@dest+1)^0,c
  4837  002280  0EE2               	movlw	low STR_16
  4838  002282  6E17               	movwf	strcpy@src^0,c
  4839  002284  5017               	movf	strcpy@src^0,w,c
  4840  002286  A4D8               	btfss	status,2,c
  4841  002288  0E20               	movlw	high __smallconst
  4842  00228A  6E18               	movwf	(strcpy@src+1)^0,c
  4843  00228C  EC62  F02A         	call	_strcpy	;wreg free
  4844                           
  4845                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  4846  002290  D7B9               	goto	l9773
  4847  002292                     l9789:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  4851  002292  0E98               	movlw	low _dbuf
  4852  002294  25A9               	addwf	efgtoa@n& (0+255),w,b
  4853  002296  6E15               	movwf	strcpy@dest^0,c
  4854  002298  0E01               	movlw	high _dbuf
  4855  00229A  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4856  00229C  6E16               	movwf	(strcpy@dest+1)^0,c
  4857  00229E  0EEA               	movlw	low STR_17
  4858  0022A0  6E17               	movwf	strcpy@src^0,c
  4859  0022A2  5017               	movf	strcpy@src^0,w,c
  4860  0022A4  A4D8               	btfss	status,2,c
  4861  0022A6  0E20               	movlw	high __smallconst
  4862  0022A8  6E18               	movwf	(strcpy@src+1)^0,c
  4863  0022AA  EC62  F02A         	call	_strcpy	;wreg free
  4864  0022AE  D7AA               	goto	l9773
  4865  0022B0                     l9797:
  4866                           
  4867                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  4868  0022B0  0E00               	movlw	0
  4869  0022B2  0100               	movlb	0	; () banked
  4870  0022B4  6FAB               	movwf	efgtoa@u& (0+255),b
  4871  0022B6  0E00               	movlw	0
  4872  0022B8  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  4873  0022BA  0E80               	movlw	128
  4874  0022BC  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  4875  0022BE  0E3F               	movlw	63
  4876  0022C0  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  4877                           
  4878                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  4879  0022C2  0E00               	movlw	0
  4880  0022C4  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  4881  0022C6  0E00               	movlw	0
  4882  0022C8  6FA7               	movwf	efgtoa@e& (0+255),b
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  4886  0022CA  C0A1  F015         	movff	efgtoa@g,___fleq@ff1
  4887  0022CE  C0A2  F016         	movff	efgtoa@g+1,___fleq@ff1+1
  4888  0022D2  C0A3  F017         	movff	efgtoa@g+2,___fleq@ff1+2
  4889  0022D6  C0A4  F018         	movff	efgtoa@g+3,___fleq@ff1+3
  4890  0022DA  0E00               	movlw	0
  4891  0022DC  6E19               	movwf	___fleq@ff2^0,c
  4892  0022DE  0E00               	movlw	0
  4893  0022E0  6E1A               	movwf	(___fleq@ff2+1)^0,c
  4894  0022E2  0E00               	movlw	0
  4895  0022E4  6E1B               	movwf	(___fleq@ff2+2)^0,c
  4896  0022E6  0E00               	movlw	0
  4897  0022E8  6E1C               	movwf	(___fleq@ff2+3)^0,c
  4898  0022EA  ECF4  F028         	call	___fleq	;wreg free
  4899  0022EE  A0D8               	btfss	status,0,c
  4900  0022F0  D01D               	goto	l9807
  4901  0022F2  D074               	goto	u11240
  4902  0022F4                     l9803:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  4906  0022F4  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4907  0022F8  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4908  0022FC  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4909  002300  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4910  002304  0E00               	movlw	0
  4911  002306  6E27               	movwf	___flmul@a^0,c
  4912  002308  0E00               	movlw	0
  4913  00230A  6E28               	movwf	(___flmul@a+1)^0,c
  4914  00230C  0E20               	movlw	32
  4915  00230E  6E29               	movwf	(___flmul@a+2)^0,c
  4916  002310  0E41               	movlw	65
  4917  002312  6E2A               	movwf	(___flmul@a+3)^0,c
  4918  002314  ECA2  F018         	call	___flmul	;wreg free
  4919  002318  C023  F0AB         	movff	?___flmul,efgtoa@u
  4920  00231C  C024  F0AC         	movff	?___flmul+1,efgtoa@u+1
  4921  002320  C025  F0AD         	movff	?___flmul+2,efgtoa@u+2
  4922  002324  C026  F0AE         	movff	?___flmul+3,efgtoa@u+3
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  4926  002328  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  4927  00232A  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  4928  00232C                     l9807:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  4932  00232C  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4933  002330  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4934  002334  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4935  002338  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4936  00233C  0E00               	movlw	0
  4937  00233E  6E27               	movwf	___flmul@a^0,c
  4938  002340  0E00               	movlw	0
  4939  002342  6E28               	movwf	(___flmul@a+1)^0,c
  4940  002344  0E20               	movlw	32
  4941  002346  6E29               	movwf	(___flmul@a+2)^0,c
  4942  002348  0E41               	movlw	65
  4943  00234A  6E2A               	movwf	(___flmul@a+3)^0,c
  4944  00234C  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4945  002350  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4946  002354  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4947  002358  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4948  00235C  ECA2  F018         	call	___flmul	;wreg free
  4949  002360  C023  F033         	movff	?___flmul,___flge@ff2
  4950  002364  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  4951  002368  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  4952  00236C  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  4953  002370  ECAE  F024         	call	___flge	;wreg free
  4954  002374  A0D8               	btfss	status,0,c
  4955  002376  D01E               	goto	l9813
  4956  002378  D7BD               	goto	l9803
  4957  00237A                     l9809:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  4961  00237A  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  4962  00237E  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  4963  002382  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  4964  002386  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  4965  00238A  0E00               	movlw	0
  4966  00238C  6E19               	movwf	___fldiv@a^0,c
  4967  00238E  0E00               	movlw	0
  4968  002390  6E1A               	movwf	(___fldiv@a+1)^0,c
  4969  002392  0E20               	movlw	32
  4970  002394  6E1B               	movwf	(___fldiv@a+2)^0,c
  4971  002396  0E41               	movlw	65
  4972  002398  6E1C               	movwf	(___fldiv@a+3)^0,c
  4973  00239A  ECD1  F01B         	call	___fldiv	;wreg free
  4974  00239E  C015  F0AB         	movff	?___fldiv,efgtoa@u
  4975  0023A2  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  4976  0023A6  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  4977  0023AA  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  4981  0023AE  07A7               	decf	efgtoa@e& (0+255),f,b
  4982  0023B0  A0D8               	btfss	status,0,c
  4983  0023B2  07A8               	decf	(efgtoa@e+1)& (0+255),f,b
  4984  0023B4                     l9813:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  4988  0023B4  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4989  0023B8  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4990  0023BC  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4991  0023C0  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4992  0023C4  C0AB  F033         	movff	efgtoa@u,___flge@ff2
  4993  0023C8  C0AC  F034         	movff	efgtoa@u+1,___flge@ff2+1
  4994  0023CC  C0AD  F035         	movff	efgtoa@u+2,___flge@ff2+2
  4995  0023D0  C0AE  F036         	movff	efgtoa@u+3,___flge@ff2+3
  4996  0023D4  ECAE  F024         	call	___flge	;wreg free
  4997  0023D8  A0D8               	btfss	status,0,c
  4998  0023DA  D7CF               	goto	l9809
  4999  0023DC                     u11240:
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  5003  0023DC  C077  F01B         	movff	efgtoa@c,tolower@c
  5004  0023E0  6A1C               	clrf	(tolower@c+1)^0,c
  5005  0023E2  EC7F  F02C         	call	_tolower	;wreg free
  5006  0023E6  501B               	movf	?_tolower^0,w,c
  5007  0023E8  6F98               	movwf	efgtoa@mode& (0+255),b
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  5011  0023EA  C098  F095         	movff	efgtoa@mode,efgtoa@nmode
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  5015  0023EE  0E67               	movlw	103
  5016  0023F0  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5017  0023F2  A4D8               	btfss	status,2,c
  5018  0023F4  D019               	goto	l9829
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  5022  0023F6  51F9               	movf	_prec& (0+255),w,b
  5023  0023F8  11FA               	iorwf	(_prec+1)& (0+255),w,b
  5024  0023FA  A4D8               	btfss	status,2,c
  5025  0023FC  D004               	goto	l9825
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  5029  0023FE  0E00               	movlw	0
  5030  002400  6FFA               	movwf	(_prec+1)& (0+255),b
  5031  002402  0E01               	movlw	1
  5032  002404  6FF9               	movwf	_prec& (0+255),b
  5033  002406                     l9825:
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  5037  002406  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  5038  002408  D005               	goto	u11270
  5039  00240A  51FA               	movf	(_prec+1)& (0+255),w,b
  5040  00240C  E108               	bnz	l2010
  5041  00240E  05F9               	decf	_prec& (0+255),w,b
  5042  002410  B0D8               	btfsc	status,0,c
  5043  002412  D005               	goto	l2010
  5044  002414                     u11270:
  5045                           
  5046                           ; BSR set to: 0
  5047  002414  0E00               	movlw	0
  5048  002416  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5049  002418  0E06               	movlw	6
  5050  00241A  6F93               	movwf	efgtoa@p& (0+255),b
  5051  00241C  D008               	goto	l9835
  5052  00241E                     l2010:
  5053                           
  5054                           ; BSR set to: 0
  5055  00241E  C0F9  F093         	movff	_prec,efgtoa@p
  5056  002422  C0FA  F094         	movff	_prec+1,efgtoa@p+1
  5057  002426  D003               	goto	l9835
  5058  002428                     l9829:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  5062  002428  AFFA               	btfss	(_prec+1)& (0+255),7,b
  5063  00242A  D7F9               	goto	l2010
  5064  00242C  D7F3               	goto	u11270
  5065  00242E                     l9835:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  5069  00242E  0E67               	movlw	103
  5070  002430  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5071  002432  A4D8               	btfss	status,2,c
  5072  002434  D022               	goto	l9845
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  5076  002436  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5077  002438  D006               	goto	u11300
  5078  00243A  0EFC               	movlw	252
  5079  00243C  5DA7               	subwf	efgtoa@e& (0+255),w,b
  5080  00243E  0EFF               	movlw	255
  5081  002440  59A8               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5082  002442  A0D8               	btfss	status,0,c
  5083  002444  D018               	goto	l9843
  5084  002446                     u11300:
  5085                           
  5086                           ; BSR set to: 0
  5087  002446  0EFF               	movlw	255
  5088  002448  6F78               	movwf	??_efgtoa& (0+255),b
  5089  00244A  0EFF               	movlw	255
  5090  00244C  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5091  00244E  C093  F07A         	movff	efgtoa@p,??_efgtoa+2
  5092  002452  C094  F07B         	movff	efgtoa@p+1,??_efgtoa+3
  5093  002456  5178               	movf	??_efgtoa& (0+255),w,b
  5094  002458  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5095  00245A  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5096  00245C  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5097  00245E  51A7               	movf	efgtoa@e& (0+255),w,b
  5098  002460  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5099  002462  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5100  002464  0A80               	xorlw	128
  5101  002466  6F7C               	movwf	(??_efgtoa+4)& (0+255),b
  5102  002468  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5103  00246A  0A80               	xorlw	128
  5104  00246C  597C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5105  00246E  A0D8               	btfss	status,0,c
  5106  002470  D002               	goto	l9843
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  5110  002472  0E66               	movlw	102
  5111  002474  D001               	goto	L4
  5112  002476                     l9843:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  5116  002476  0E65               	movlw	101
  5117  002478                     L4:
  5118  002478  6F95               	movwf	efgtoa@nmode& (0+255),b
  5119  00247A                     l9845:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  5123  00247A  C093  F089         	movff	efgtoa@p,efgtoa@m
  5124  00247E  C094  F08A         	movff	efgtoa@p+1,efgtoa@m+1
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  5128  002482  0E67               	movlw	103
  5129  002484  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5130  002486  A4D8               	btfss	status,2,c
  5131  002488  D005               	goto	u11340
  5132                           
  5133                           ; BSR set to: 0
  5134  00248A  0E66               	movlw	102
  5135  00248C  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5136  00248E  B4D8               	btfsc	status,2,c
  5137                           
  5138                           ; BSR set to: 0
  5139  002490  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5140  002492  D002               	goto	l9855
  5141  002494                     u11340:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  5145  002494  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5146  002496  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5147  002498                     l9855:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  5151  002498  0E66               	movlw	102
  5152  00249A  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5153  00249C  A4D8               	btfss	status,2,c
  5154  00249E  D016               	goto	l9865
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  5158  0024A0  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5159  0024A2  D00C               	goto	l9861
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  5163  0024A4  0E00               	movlw	0
  5164  0024A6  6FAB               	movwf	efgtoa@u& (0+255),b
  5165  0024A8  0E00               	movlw	0
  5166  0024AA  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  5167  0024AC  0E80               	movlw	128
  5168  0024AE  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  5169  0024B0  0E3F               	movlw	63
  5170  0024B2  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  5171                           
  5172                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  5173  0024B4  0E00               	movlw	0
  5174  0024B6  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  5175  0024B8  0E00               	movlw	0
  5176  0024BA  6FA7               	movwf	efgtoa@e& (0+255),b
  5177  0024BC                     l9861:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  5181  0024BC  0E67               	movlw	103
  5182  0024BE  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5183  0024C0  B4D8               	btfsc	status,2,c
  5184  0024C2  D004               	goto	l9865
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  5188  0024C4  51A7               	movf	efgtoa@e& (0+255),w,b
  5189  0024C6  2789               	addwf	efgtoa@m& (0+255),f,b
  5190  0024C8  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5191  0024CA  238A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5192  0024CC                     l9865:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  5196  0024CC  0E00               	movlw	0
  5197  0024CE  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5198  0024D0  0E00               	movlw	0
  5199  0024D2  6FA5               	movwf	efgtoa@i& (0+255),b
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  5203  0024D4  C0A1  F099         	movff	efgtoa@g,efgtoa@h
  5204  0024D8  C0A2  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  5205  0024DC  C0A3  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  5206  0024E0  C0A4  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  5210  0024E4  C0AB  F08B         	movff	efgtoa@u,efgtoa@ou
  5211  0024E8  C0AC  F08C         	movff	efgtoa@u+1,efgtoa@ou+1
  5212  0024EC  C0AD  F08D         	movff	efgtoa@u+2,efgtoa@ou+2
  5213  0024F0  C0AE  F08E         	movff	efgtoa@u+3,efgtoa@ou+3
  5214                           
  5215                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5216  0024F4  D07A               	goto	l9879
  5217  0024F6                     l9871:
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  5221  0024F6  C099  F015         	movff	efgtoa@h,___fldiv@b
  5222  0024FA  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5223  0024FE  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5224  002502  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5225  002506  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5226  00250A  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5227  00250E  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5228  002512  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5229  002516  ECD1  F01B         	call	___fldiv	;wreg free
  5230  00251A  C015  F02E         	movff	?___fldiv,floorf@x
  5231  00251E  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5232  002522  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5233  002526  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5234  00252A  ECFA  F01F         	call	_floorf	;wreg free
  5235  00252E  C02E  F09D         	movff	?_floorf,efgtoa@l
  5236  002532  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5237  002536  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5238  00253A  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5239                           
  5240                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  5241  00253E  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5242  002542  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5243  002546  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5244  00254A  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5245  00254E  EC4A  F026         	call	___fltol	;wreg free
  5246  002552  C015  F08F         	movff	?___fltol,efgtoa@d
  5247  002556  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  5251  00255A  C099  F02F         	movff	efgtoa@h,___flsub@b
  5252  00255E  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5253  002562  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5254  002566  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5255  00256A  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5256  00256E  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5257  002572  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5258  002576  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5259  00257A  C09D  F023         	movff	efgtoa@l,___flmul@b
  5260  00257E  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5261  002582  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5262  002586  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5263  00258A  ECA2  F018         	call	___flmul	;wreg free
  5264  00258E  C023  F033         	movff	?___flmul,___flsub@a
  5265  002592  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5266  002596  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5267  00259A  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5268  00259E  EC7D  F02B         	call	___flsub	;wreg free
  5269  0025A2  C02F  F099         	movff	?___flsub,efgtoa@h
  5270  0025A6  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5271  0025AA  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5272  0025AE  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  5276  0025B2  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5277  0025B6  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5278  0025BA  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5279  0025BE  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5280  0025C2  0E00               	movlw	0
  5281  0025C4  6E19               	movwf	___fldiv@a^0,c
  5282  0025C6  0E00               	movlw	0
  5283  0025C8  6E1A               	movwf	(___fldiv@a+1)^0,c
  5284  0025CA  0E20               	movlw	32
  5285  0025CC  6E1B               	movwf	(___fldiv@a+2)^0,c
  5286  0025CE  0E41               	movlw	65
  5287  0025D0  6E1C               	movwf	(___fldiv@a+3)^0,c
  5288  0025D2  ECD1  F01B         	call	___fldiv	;wreg free
  5289  0025D6  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5290  0025DA  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5291  0025DE  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5292  0025E2  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  5296  0025E6  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5297  0025E8  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5298  0025EA                     l9879:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5302  0025EA  5189               	movf	efgtoa@m& (0+255),w,b
  5303  0025EC  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5304  0025EE  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5305  0025F0  0A80               	xorlw	128
  5306  0025F2  6F78               	movwf	??_efgtoa& (0+255),b
  5307  0025F4  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5308  0025F6  0A80               	xorlw	128
  5309  0025F8  5978               	subwfb	??_efgtoa& (0+255),w,b
  5310  0025FA  A0D8               	btfss	status,0,c
  5311  0025FC  D77C               	goto	l9871
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  5315  0025FE  C0AB  F023         	movff	efgtoa@u,___flmul@b
  5316  002602  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  5317  002606  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  5318  00260A  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  5319  00260E  0E00               	movlw	0
  5320  002610  6E27               	movwf	___flmul@a^0,c
  5321  002612  0E00               	movlw	0
  5322  002614  6E28               	movwf	(___flmul@a+1)^0,c
  5323  002616  0EA0               	movlw	160
  5324  002618  6E29               	movwf	(___flmul@a+2)^0,c
  5325  00261A  0E40               	movlw	64
  5326  00261C  6E2A               	movwf	(___flmul@a+3)^0,c
  5327  00261E  ECA2  F018         	call	___flmul	;wreg free
  5328  002622  C023  F09D         	movff	?___flmul,efgtoa@l
  5329  002626  C024  F09E         	movff	?___flmul+1,efgtoa@l+1
  5330  00262A  C025  F09F         	movff	?___flmul+2,efgtoa@l+2
  5331  00262E  C026  F0A0         	movff	?___flmul+3,efgtoa@l+3
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  5335  002632  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5336  002636  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5337  00263A  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5338  00263E  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5339  002642  C09D  F033         	movff	efgtoa@l,___flge@ff2
  5340  002646  C09E  F034         	movff	efgtoa@l+1,___flge@ff2+1
  5341  00264A  C09F  F035         	movff	efgtoa@l+2,___flge@ff2+2
  5342  00264E  C0A0  F036         	movff	efgtoa@l+3,___flge@ff2+3
  5343  002652  ECAE  F024         	call	___flge	;wreg free
  5344  002656  A0D8               	btfss	status,0,c
  5345  002658  D015               	goto	u11410
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  5349                           
  5350                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  5354  00265A  C099  F015         	movff	efgtoa@h,___fleq@ff1
  5355  00265E  C09A  F016         	movff	efgtoa@h+1,___fleq@ff1+1
  5356  002662  C09B  F017         	movff	efgtoa@h+2,___fleq@ff1+2
  5357  002666  C09C  F018         	movff	efgtoa@h+3,___fleq@ff1+3
  5358  00266A  C09D  F019         	movff	efgtoa@l,___fleq@ff2
  5359  00266E  C09E  F01A         	movff	efgtoa@l+1,___fleq@ff2+1
  5360  002672  C09F  F01B         	movff	efgtoa@l+2,___fleq@ff2+2
  5361  002676  C0A0  F01C         	movff	efgtoa@l+3,___fleq@ff2+3
  5362  00267A  ECF4  F028         	call	___fleq	;wreg free
  5363  00267E  B0D8               	btfsc	status,0,c
  5364                           
  5365                           ; BSR set to: 0
  5366  002680  B18F               	btfsc	efgtoa@d& (0+255),0,b
  5367  002682  D008               	goto	l9893
  5368  002684                     u11410:
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  5372  002684  0E00               	movlw	0
  5373  002686  6F9D               	movwf	efgtoa@l& (0+255),b
  5374  002688  0E00               	movlw	0
  5375  00268A  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  5376  00268C  0E00               	movlw	0
  5377  00268E  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  5378  002690  0E00               	movlw	0
  5379  002692  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  5380  002694                     l9893:
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  5384  002694  C0A1  F015         	movff	efgtoa@g,___fladd@b
  5385  002698  C0A2  F016         	movff	efgtoa@g+1,___fladd@b+1
  5386  00269C  C0A3  F017         	movff	efgtoa@g+2,___fladd@b+2
  5387  0026A0  C0A4  F018         	movff	efgtoa@g+3,___fladd@b+3
  5388  0026A4  C09D  F019         	movff	efgtoa@l,___fladd@a
  5389  0026A8  C09E  F01A         	movff	efgtoa@l+1,___fladd@a+1
  5390  0026AC  C09F  F01B         	movff	efgtoa@l+2,___fladd@a+2
  5391  0026B0  C0A0  F01C         	movff	efgtoa@l+3,___fladd@a+3
  5392  0026B4  EC4B  F01A         	call	___fladd	;wreg free
  5393  0026B8  C015  F099         	movff	?___fladd,efgtoa@h
  5394  0026BC  C016  F09A         	movff	?___fladd+1,efgtoa@h+1
  5395  0026C0  C017  F09B         	movff	?___fladd+2,efgtoa@h+2
  5396  0026C4  C018  F09C         	movff	?___fladd+3,efgtoa@h+3
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  5400  0026C8  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5401  0026CC  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5402  0026D0  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5403  0026D4  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5404  0026D8  0E00               	movlw	0
  5405  0026DA  6E27               	movwf	___flmul@a^0,c
  5406  0026DC  0E00               	movlw	0
  5407  0026DE  6E28               	movwf	(___flmul@a+1)^0,c
  5408  0026E0  0E20               	movlw	32
  5409  0026E2  6E29               	movwf	(___flmul@a+2)^0,c
  5410  0026E4  0E41               	movlw	65
  5411  0026E6  6E2A               	movwf	(___flmul@a+3)^0,c
  5412  0026E8  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5413  0026EC  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5414  0026F0  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5415  0026F4  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5416  0026F8  ECA2  F018         	call	___flmul	;wreg free
  5417  0026FC  C023  F033         	movff	?___flmul,___flge@ff2
  5418  002700  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  5419  002704  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  5420  002708  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  5421  00270C  ECAE  F024         	call	___flge	;wreg free
  5422  002710  A0D8               	btfss	status,0,c
  5423  002712  D022               	goto	l9905
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  5427  002714  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  5428  002716  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  5432  002718  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5433  00271C  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5434  002720  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5435  002724  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5436  002728  0E00               	movlw	0
  5437  00272A  6E27               	movwf	___flmul@a^0,c
  5438  00272C  0E00               	movlw	0
  5439  00272E  6E28               	movwf	(___flmul@a+1)^0,c
  5440  002730  0E20               	movlw	32
  5441  002732  6E29               	movwf	(___flmul@a+2)^0,c
  5442  002734  0E41               	movlw	65
  5443  002736  6E2A               	movwf	(___flmul@a+3)^0,c
  5444  002738  ECA2  F018         	call	___flmul	;wreg free
  5445  00273C  C023  F08B         	movff	?___flmul,efgtoa@ou
  5446  002740  C024  F08C         	movff	?___flmul+1,efgtoa@ou+1
  5447  002744  C025  F08D         	movff	?___flmul+2,efgtoa@ou+2
  5448  002748  C026  F08E         	movff	?___flmul+3,efgtoa@ou+3
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  5452  00274C  0E66               	movlw	102
  5453  00274E  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5454  002750  A4D8               	btfss	status,2,c
  5455  002752  D002               	goto	l9905
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  5459  002754  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5460  002756  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5461  002758                     l9905:
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  5465  002758  C08B  F0AB         	movff	efgtoa@ou,efgtoa@u
  5466  00275C  C08C  F0AC         	movff	efgtoa@ou+1,efgtoa@u+1
  5467  002760  C08D  F0AD         	movff	efgtoa@ou+2,efgtoa@u+2
  5468  002764  C08E  F0AE         	movff	efgtoa@ou+3,efgtoa@u+3
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  5472  002768  0E65               	movlw	101
  5473  00276A  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5474  00276C  B4D8               	btfsc	status,2,c
  5475  00276E  D005               	goto	l9911
  5476                           
  5477                           ; BSR set to: 0
  5478  002770  C0A7  F087         	movff	efgtoa@e,efgtoa@ne
  5479  002774  C0A8  F088         	movff	efgtoa@e+1,efgtoa@ne+1
  5480  002778  D004               	goto	l2038
  5481  00277A                     l9911:
  5482                           
  5483                           ; BSR set to: 0
  5484  00277A  0E00               	movlw	0
  5485  00277C  6F88               	movwf	(efgtoa@ne+1)& (0+255),b
  5486  00277E  0E00               	movlw	0
  5487  002780  6F87               	movwf	efgtoa@ne& (0+255),b
  5488  002782                     l2038:
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  5492  002782  0E00               	movlw	0
  5493  002784  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5494  002786  0E00               	movlw	0
  5495  002788  6F85               	movwf	efgtoa@pp& (0+255),b
  5496                           
  5497                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  5498  00278A  0E00               	movlw	0
  5499  00278C  6F84               	movwf	(efgtoa@t+1)& (0+255),b
  5500  00278E  0E00               	movlw	0
  5501  002790  6F83               	movwf	efgtoa@t& (0+255),b
  5502                           
  5503                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  5504  002792  0E00               	movlw	0
  5505  002794  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5506  002796  0E00               	movlw	0
  5507  002798  6FA5               	movwf	efgtoa@i& (0+255),b
  5508                           
  5509                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5510  00279A  D0C4               	goto	l9961
  5511  00279C                     l9913:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  5515  00279C  C099  F015         	movff	efgtoa@h,___fldiv@b
  5516  0027A0  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5517  0027A4  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5518  0027A8  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5519  0027AC  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5520  0027B0  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5521  0027B4  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5522  0027B8  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5523  0027BC  ECD1  F01B         	call	___fldiv	;wreg free
  5524  0027C0  C015  F02E         	movff	?___fldiv,floorf@x
  5525  0027C4  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5526  0027C8  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5527  0027CC  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5528  0027D0  ECFA  F01F         	call	_floorf	;wreg free
  5529  0027D4  C02E  F09D         	movff	?_floorf,efgtoa@l
  5530  0027D8  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5531  0027DC  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5532  0027E0  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5533                           
  5534                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  5535  0027E4  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5536  0027E8  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5537  0027EC  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5538  0027F0  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5539  0027F4  EC4A  F026         	call	___fltol	;wreg free
  5540  0027F8  C015  F08F         	movff	?___fltol,efgtoa@d
  5541  0027FC  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5545  002800  B83D               	btfsc	_flags^0,4,c
  5546  002802  D00C               	goto	l9925
  5547                           
  5548                           ; BSR set to: 0
  5549  002804  518F               	movf	efgtoa@d& (0+255),w,b
  5550  002806  1190               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5551  002808  A4D8               	btfss	status,2,c
  5552  00280A  D008               	goto	l9925
  5553                           
  5554                           ; BSR set to: 0
  5555  00280C  0E67               	movlw	103
  5556  00280E  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5557  002810  B4D8               	btfsc	status,2,c
  5558                           
  5559                           ; BSR set to: 0
  5560  002812  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5561  002814  D003               	goto	l9925
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  5565  002816  4B83               	infsnz	efgtoa@t& (0+255),f,b
  5566  002818  2B84               	incf	(efgtoa@t+1)& (0+255),f,b
  5567                           
  5568                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  5569  00281A  D039               	goto	l9953
  5570  00281C                     l9925:
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  5574  00281C  5185               	movf	efgtoa@pp& (0+255),w,b
  5575  00281E  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5576  002820  B4D8               	btfsc	status,2,c
  5577                           
  5578                           ; BSR set to: 0
  5579  002822  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5580  002824  D022               	goto	l9945
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  5584  002826  0E98               	movlw	low _dbuf
  5585  002828  25A9               	addwf	efgtoa@n& (0+255),w,b
  5586  00282A  6ED9               	movwf	fsr2l,c
  5587  00282C  0E01               	movlw	high _dbuf
  5588  00282E  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5589  002830  6EDA               	movwf	fsr2h,c
  5590  002832  0E2E               	movlw	46
  5591  002834  6EDF               	movwf	indf2,c
  5592                           
  5593                           ; BSR set to: 0
  5594  002836  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5595  002838  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  5599  00283A  0796               	decf	efgtoa@w& (0+255),f,b
  5600  00283C  A0D8               	btfss	status,0,c
  5601  00283E  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  5605  002840  0E00               	movlw	0
  5606  002842  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5607  002844  0E01               	movlw	1
  5608  002846  6F85               	movwf	efgtoa@pp& (0+255),b
  5609  002848  D010               	goto	l9945
  5610  00284A                     l9937:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  5614  00284A  0E98               	movlw	low _dbuf
  5615  00284C  25A9               	addwf	efgtoa@n& (0+255),w,b
  5616  00284E  6ED9               	movwf	fsr2l,c
  5617  002850  0E01               	movlw	high _dbuf
  5618  002852  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5619  002854  6EDA               	movwf	fsr2h,c
  5620  002856  0E30               	movlw	48
  5621  002858  6EDF               	movwf	indf2,c
  5622                           
  5623                           ; BSR set to: 0
  5624  00285A  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5625  00285C  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  5629  00285E  0796               	decf	efgtoa@w& (0+255),f,b
  5630  002860  A0D8               	btfss	status,0,c
  5631  002862  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  5635  002864  0783               	decf	efgtoa@t& (0+255),f,b
  5636  002866  A0D8               	btfss	status,0,c
  5637  002868  0784               	decf	(efgtoa@t+1)& (0+255),f,b
  5638  00286A                     l9945:
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  5642  00286A  5183               	movf	efgtoa@t& (0+255),w,b
  5643  00286C  1184               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5644  00286E  A4D8               	btfss	status,2,c
  5645  002870  D7EC               	goto	l9937
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  5649  002872  0E98               	movlw	low _dbuf
  5650  002874  25A9               	addwf	efgtoa@n& (0+255),w,b
  5651  002876  6ED9               	movwf	fsr2l,c
  5652  002878  0E01               	movlw	high _dbuf
  5653  00287A  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5654  00287C  6EDA               	movwf	fsr2h,c
  5655  00287E  518F               	movf	efgtoa@d& (0+255),w,b
  5656  002880  0F30               	addlw	48
  5657  002882  6EDF               	movwf	indf2,c
  5658                           
  5659                           ; BSR set to: 0
  5660  002884  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5661  002886  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  5665  002888  0796               	decf	efgtoa@w& (0+255),f,b
  5666  00288A  A0D8               	btfss	status,0,c
  5667  00288C  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5668  00288E                     l9953:
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  5672  00288E  C099  F02F         	movff	efgtoa@h,___flsub@b
  5673  002892  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5674  002896  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5675  00289A  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5676  00289E  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5677  0028A2  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5678  0028A6  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5679  0028AA  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5680  0028AE  C09D  F023         	movff	efgtoa@l,___flmul@b
  5681  0028B2  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5682  0028B6  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5683  0028BA  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5684  0028BE  ECA2  F018         	call	___flmul	;wreg free
  5685  0028C2  C023  F033         	movff	?___flmul,___flsub@a
  5686  0028C6  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5687  0028CA  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5688  0028CE  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5689  0028D2  EC7D  F02B         	call	___flsub	;wreg free
  5690  0028D6  C02F  F099         	movff	?___flsub,efgtoa@h
  5691  0028DA  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5692  0028DE  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5693  0028E2  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  5697  0028E6  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5698  0028EA  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5699  0028EE  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5700  0028F2  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5701  0028F6  0E00               	movlw	0
  5702  0028F8  6E19               	movwf	___fldiv@a^0,c
  5703  0028FA  0E00               	movlw	0
  5704  0028FC  6E1A               	movwf	(___fldiv@a+1)^0,c
  5705  0028FE  0E20               	movlw	32
  5706  002900  6E1B               	movwf	(___fldiv@a+2)^0,c
  5707  002902  0E41               	movlw	65
  5708  002904  6E1C               	movwf	(___fldiv@a+3)^0,c
  5709  002906  ECD1  F01B         	call	___fldiv	;wreg free
  5710  00290A  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5711  00290E  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5712  002912  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5713  002916  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  5717  00291A  0787               	decf	efgtoa@ne& (0+255),f,b
  5718  00291C  A0D8               	btfss	status,0,c
  5719  00291E  0788               	decf	(efgtoa@ne+1)& (0+255),f,b
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  5723  002920  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5724  002922  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5725  002924                     l9961:
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5729  002924  5189               	movf	efgtoa@m& (0+255),w,b
  5730  002926  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5731  002928  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5732  00292A  0A80               	xorlw	128
  5733  00292C  6F78               	movwf	??_efgtoa& (0+255),b
  5734  00292E  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5735  002930  0A80               	xorlw	128
  5736  002932  5978               	subwfb	??_efgtoa& (0+255),w,b
  5737  002934  B0D8               	btfsc	status,0,c
  5738  002936  D008               	goto	u11530
  5739                           
  5740                           ; BSR set to: 0
  5741  002938  BFAA               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5742  00293A  D730               	goto	l9913
  5743  00293C  51AA               	movf	(efgtoa@n+1)& (0+255),w,b
  5744  00293E  E104               	bnz	u11530
  5745  002940  0E4B               	movlw	75
  5746  002942  5DA9               	subwf	efgtoa@n& (0+255),w,b
  5747  002944  A0D8               	btfss	status,0,c
  5748  002946  D72A               	goto	l9913
  5749  002948                     u11530:
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  5753  002948  5185               	movf	efgtoa@pp& (0+255),w,b
  5754  00294A  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5755  00294C  B4D8               	btfsc	status,2,c
  5756                           
  5757                           ; BSR set to: 0
  5758  00294E  A83D               	btfss	_flags^0,4,c
  5759  002950  D00A               	goto	l9973
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  5763  002952  0E98               	movlw	low _dbuf
  5764  002954  25A9               	addwf	efgtoa@n& (0+255),w,b
  5765  002956  6ED9               	movwf	fsr2l,c
  5766  002958  0E01               	movlw	high _dbuf
  5767  00295A  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5768  00295C  6EDA               	movwf	fsr2h,c
  5769  00295E  0E2E               	movlw	46
  5770  002960  6EDF               	movwf	indf2,c
  5771                           
  5772                           ; BSR set to: 0
  5773  002962  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5774  002964  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5775  002966                     l9973:
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  5779  002966  0E98               	movlw	low _dbuf
  5780  002968  25A9               	addwf	efgtoa@n& (0+255),w,b
  5781  00296A  6ED9               	movwf	fsr2l,c
  5782  00296C  0E01               	movlw	high _dbuf
  5783  00296E  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5784  002970  6EDA               	movwf	fsr2h,c
  5785  002972  0E00               	movlw	0
  5786  002974  6EDF               	movwf	indf2,c
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  5790  002976  0E65               	movlw	101
  5791  002978  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5792  00297A  A4D8               	btfss	status,2,c
  5793  00297C  D448               	goto	l9775
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  5797  00297E  0E00               	movlw	0
  5798  002980  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5799  002982  0E4F               	movlw	79
  5800  002984  6FA5               	movwf	efgtoa@i& (0+255),b
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  5804  002986  0E98               	movlw	low _dbuf
  5805  002988  25A5               	addwf	efgtoa@i& (0+255),w,b
  5806  00298A  6ED9               	movwf	fsr2l,c
  5807  00298C  0E01               	movlw	high _dbuf
  5808  00298E  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5809  002990  6EDA               	movwf	fsr2h,c
  5810  002992  0E00               	movlw	0
  5811  002994  6EDF               	movwf	indf2,c
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  5815  002996  0E00               	movlw	0
  5816  002998  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5817  00299A  0E00               	movlw	0
  5818  00299C  6F91               	movwf	efgtoa@sign& (0+255),b
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  5822  00299E  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5823  0029A0  D008               	goto	l9989
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  5827  0029A2  0E00               	movlw	0
  5828  0029A4  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5829  0029A6  0E01               	movlw	1
  5830  0029A8  6F91               	movwf	efgtoa@sign& (0+255),b
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  5834  0029AA  6DA7               	negf	efgtoa@e& (0+255),b
  5835  0029AC  1FA8               	comf	(efgtoa@e+1)& (0+255),f,b
  5836  0029AE  B0D8               	btfsc	status,0,c
  5837  0029B0  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5838  0029B2                     l9989:
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  5842  0029B2  0E00               	movlw	0
  5843  0029B4  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5844  0029B6  0E02               	movlw	2
  5845  0029B8  6F93               	movwf	efgtoa@p& (0+255),b
  5846                           
  5847                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5848  0029BA  D02A               	goto	l10001
  5849  0029BC                     l9991:
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  5853  0029BC  07A5               	decf	efgtoa@i& (0+255),f,b
  5854  0029BE  A0D8               	btfss	status,0,c
  5855  0029C0  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  5859  0029C2  0E98               	movlw	low _dbuf
  5860  0029C4  25A5               	addwf	efgtoa@i& (0+255),w,b
  5861  0029C6  6ED9               	movwf	fsr2l,c
  5862  0029C8  0E01               	movlw	high _dbuf
  5863  0029CA  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5864  0029CC  6EDA               	movwf	fsr2h,c
  5865  0029CE  C0A7  F015         	movff	efgtoa@e,___awmod@dividend
  5866  0029D2  C0A8  F016         	movff	efgtoa@e+1,___awmod@dividend+1
  5867  0029D6  0E00               	movlw	0
  5868  0029D8  6E18               	movwf	(___awmod@divisor+1)^0,c
  5869  0029DA  0E0A               	movlw	10
  5870  0029DC  6E17               	movwf	___awmod@divisor^0,c
  5871  0029DE  ECF6  F029         	call	___awmod	;wreg free
  5872  0029E2  5015               	movf	?___awmod^0,w,c
  5873  0029E4  0F30               	addlw	48
  5874  0029E6  6EDF               	movwf	indf2,c
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  5878  0029E8  C0A7  F015         	movff	efgtoa@e,___awdiv@dividend
  5879  0029EC  C0A8  F016         	movff	efgtoa@e+1,___awdiv@dividend+1
  5880  0029F0  0E00               	movlw	0
  5881  0029F2  6E18               	movwf	(___awdiv@divisor+1)^0,c
  5882  0029F4  0E0A               	movlw	10
  5883  0029F6  6E17               	movwf	___awdiv@divisor^0,c
  5884  0029F8  EC7B  F029         	call	___awdiv	;wreg free
  5885  0029FC  C015  F0A7         	movff	?___awdiv,efgtoa@e
  5886  002A00  C016  F0A8         	movff	?___awdiv+1,efgtoa@e+1
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  5890  002A04  0793               	decf	efgtoa@p& (0+255),f,b
  5891  002A06  A0D8               	btfss	status,0,c
  5892  002A08  0794               	decf	(efgtoa@p+1)& (0+255),f,b
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  5896  002A0A  0796               	decf	efgtoa@w& (0+255),f,b
  5897  002A0C  A0D8               	btfss	status,0,c
  5898  002A0E  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5899  002A10                     l10001:
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5903  002A10  51A7               	movf	efgtoa@e& (0+255),w,b
  5904  002A12  11A8               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5905  002A14  A4D8               	btfss	status,2,c
  5906  002A16  D7D2               	goto	l9991
  5907                           
  5908                           ; BSR set to: 0
  5909  002A18  BF94               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5910  002A1A  D005               	goto	u11590
  5911  002A1C  5194               	movf	(efgtoa@p+1)& (0+255),w,b
  5912  002A1E  E1CE               	bnz	l9991
  5913  002A20  0593               	decf	efgtoa@p& (0+255),w,b
  5914  002A22  B0D8               	btfsc	status,0,c
  5915  002A24  D7CB               	goto	l9991
  5916  002A26                     u11590:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  5920  002A26  07A5               	decf	efgtoa@i& (0+255),f,b
  5921  002A28  A0D8               	btfss	status,0,c
  5922  002A2A  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  5926  002A2C  5191               	movf	efgtoa@sign& (0+255),w,b
  5927  002A2E  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5928  002A30  A4D8               	btfss	status,2,c
  5929  002A32  D004               	goto	l10011
  5930                           
  5931                           ; BSR set to: 0
  5932  002A34  0E00               	movlw	0
  5933  002A36  6F80               	movwf	(_efgtoa$3080+1)& (0+255),b
  5934  002A38  0E2B               	movlw	43
  5935  002A3A  D003               	goto	L5
  5936  002A3C                     l10011:
  5937                           
  5938                           ; BSR set to: 0
  5939  002A3C  0E00               	movlw	0
  5940  002A3E  6F80               	movwf	(_efgtoa$3080+1)& (0+255),b
  5941  002A40  0E2D               	movlw	45
  5942  002A42                     L5:
  5943  002A42  6F7F               	movwf	_efgtoa$3080& (0+255),b
  5944                           
  5945                           ; BSR set to: 0
  5946  002A44  0E98               	movlw	low _dbuf
  5947  002A46  25A5               	addwf	efgtoa@i& (0+255),w,b
  5948  002A48  6ED9               	movwf	fsr2l,c
  5949  002A4A  0E01               	movlw	high _dbuf
  5950  002A4C  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5951  002A4E  6EDA               	movwf	fsr2h,c
  5952  002A50  0060  F1FF  FFDF   	movff	_efgtoa$3080,indf2
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  5956  002A56  0796               	decf	efgtoa@w& (0+255),f,b
  5957  002A58  A0D8               	btfss	status,0,c
  5958  002A5A  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  5962  002A5C  07A5               	decf	efgtoa@i& (0+255),f,b
  5963  002A5E  A0D8               	btfss	status,0,c
  5964  002A60  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5965                           
  5966                           ; BSR set to: 0
  5967                           
  5968                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5969  002A62  0EBF               	movlw	191
  5970  002A64  6F78               	movwf	??_efgtoa& (0+255),b
  5971  002A66  0EFF               	movlw	255
  5972  002A68  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5973  002A6A  5177               	movf	efgtoa@c& (0+255),w,b
  5974  002A6C  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  5975  002A6E  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  5976  002A70  5178               	movf	??_efgtoa& (0+255),w,b
  5977  002A72  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5978  002A74  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5979  002A76  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5980  002A78  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5981  002A7A  E104               	bnz	u11610
  5982  002A7C  0E1A               	movlw	26
  5983  002A7E  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5984  002A80  A0D8               	btfss	status,0,c
  5985  002A82  D004               	goto	l10025
  5986  002A84                     u11610:
  5987                           
  5988                           ; BSR set to: 0
  5989  002A84  0E00               	movlw	0
  5990  002A86  6F82               	movwf	(_efgtoa$3081+1)& (0+255),b
  5991  002A88  0E65               	movlw	101
  5992  002A8A  D003               	goto	L6
  5993  002A8C                     l10025:
  5994                           
  5995                           ; BSR set to: 0
  5996  002A8C  0E00               	movlw	0
  5997  002A8E  6F82               	movwf	(_efgtoa$3081+1)& (0+255),b
  5998  002A90  0E45               	movlw	69
  5999  002A92                     L6:
  6000  002A92  6F81               	movwf	_efgtoa$3081& (0+255),b
  6001                           
  6002                           ; BSR set to: 0
  6003  002A94  0E98               	movlw	low _dbuf
  6004  002A96  25A5               	addwf	efgtoa@i& (0+255),w,b
  6005  002A98  6ED9               	movwf	fsr2l,c
  6006  002A9A  0E01               	movlw	high _dbuf
  6007  002A9C  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6008  002A9E  6EDA               	movwf	fsr2h,c
  6009  002AA0  0060  F207  FFDF   	movff	_efgtoa$3081,indf2
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  6013  002AA6  0796               	decf	efgtoa@w& (0+255),f,b
  6014  002AA8  A0D8               	btfss	status,0,c
  6015  002AAA  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  6019  002AAC  0E98               	movlw	low _dbuf
  6020  002AAE  25A9               	addwf	efgtoa@n& (0+255),w,b
  6021  002AB0  6E15               	movwf	strcpy@dest^0,c
  6022  002AB2  0E01               	movlw	high _dbuf
  6023  002AB4  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6024  002AB6  6E16               	movwf	(strcpy@dest+1)^0,c
  6025  002AB8  0E98               	movlw	low _dbuf
  6026  002ABA  25A5               	addwf	efgtoa@i& (0+255),w,b
  6027  002ABC  6E17               	movwf	strcpy@src^0,c
  6028  002ABE  0E01               	movlw	high _dbuf
  6029  002AC0  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6030  002AC2  6E18               	movwf	(strcpy@src+1)^0,c
  6031  002AC4  EC62  F02A         	call	_strcpy	;wreg free
  6032  002AC8  EF07  F011         	goto	l9775
  6033  002ACC                     __end_of_efgtoa:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _tolower *****************
  6037 ;; Defined at:
  6038 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  c               2   26[COMRAM] int 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  2   26[COMRAM] int 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 3F/0
  6049 ;;		On exit  : 3F/0
  6050 ;;		Unchanged: 3F/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6055 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6056 ;;Total ram usage:        6 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 5
  6059 ;; This function calls:
  6060 ;;		_isupper
  6061 ;; This function is called by:
  6062 ;;		_efgtoa
  6063 ;;		_vfpfcnvrt
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text12
  6068  0058FE                     __ptext12:
  6069                           	callstack 0
  6070  0058FE                     _tolower:
  6071                           	callstack 20
  6072                           
  6073                           ; BSR set to: 0
  6074                           
  6075                           ; BSR set to: 0
  6076                           
  6077                           ;incstack = 0
  6078  0058FE  0EBF               	movlw	191
  6079  005900  6E1D               	movwf	??_tolower^0,c
  6080  005902  0EFF               	movlw	255
  6081  005904  6E1E               	movwf	(??_tolower+1)^0,c
  6082  005906  C01B  F01F         	movff	tolower@c,??_tolower+2
  6083  00590A  C01C  F020         	movff	tolower@c+1,??_tolower+3
  6084  00590E  501D               	movf	??_tolower^0,w,c
  6085  005910  261F               	addwf	(??_tolower+2)^0,f,c
  6086  005912  501E               	movf	(??_tolower+1)^0,w,c
  6087  005914  2220               	addwfc	(??_tolower+3)^0,f,c
  6088  005916  5020               	movf	(??_tolower+3)^0,w,c
  6089  005918  E10A               	bnz	l2289
  6090  00591A  0E1A               	movlw	26
  6091  00591C  5C1F               	subwf	(??_tolower+2)^0,w,c
  6092  00591E  B0D8               	btfsc	status,0,c
  6093  005920  D006               	goto	l2289
  6094                           
  6095                           ; BSR set to: 0
  6096  005922  0E20               	movlw	32
  6097  005924  101B               	iorwf	tolower@c^0,w,c
  6098  005926  6E1B               	movwf	?_tolower^0,c
  6099  005928  501C               	movf	(tolower@c+1)^0,w,c
  6100  00592A  6E1C               	movwf	(?_tolower+1)^0,c
  6101  00592C  0012               	return	
  6102  00592E                     l2289:
  6103                           
  6104                           ; BSR set to: 0
  6105  00592E  C01B  F01B         	movff	tolower@c,?_tolower
  6106  005932  C01C  F01C         	movff	tolower@c+1,?_tolower+1
  6107                           
  6108                           ; BSR set to: 0
  6109  005936  0012               	return		;funcret
  6110  005938                     __end_of_tolower:
  6111                           	callstack 0
  6112                           
  6113 ;; *************** function _isupper *****************
  6114 ;; Defined at:
  6115 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  c               2   20[COMRAM] int 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  2   20[COMRAM] int 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6131 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6133 ;;Total ram usage:        6 bytes
  6134 ;; Hardware stack levels used: 1
  6135 ;; Hardware stack levels required when called: 4
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_efgtoa
  6140 ;;		_vfpfcnvrt
  6141 ;;		_tolower
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text13
  6146  005A1C                     __ptext13:
  6147                           	callstack 0
  6148  005A1C                     _isupper:
  6149                           	callstack 20
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;incstack = 0
  6153  005A1C  0EBF               	movlw	191
  6154  005A1E  6E17               	movwf	??_isupper^0,c
  6155  005A20  0EFF               	movlw	255
  6156  005A22  6E18               	movwf	(??_isupper+1)^0,c
  6157  005A24  C015  F019         	movff	isupper@c,??_isupper+2
  6158  005A28  C016  F01A         	movff	isupper@c+1,??_isupper+3
  6159  005A2C  5017               	movf	??_isupper^0,w,c
  6160  005A2E  2619               	addwf	(??_isupper+2)^0,f,c
  6161  005A30  5018               	movf	(??_isupper+1)^0,w,c
  6162  005A32  221A               	addwfc	(??_isupper+3)^0,f,c
  6163  005A34  501A               	movf	(??_isupper+3)^0,w,c
  6164  005A36  E106               	bnz	u9980
  6165  005A38  0E1A               	movlw	26
  6166  005A3A  5C19               	subwf	(??_isupper+2)^0,w,c
  6167  005A3C  B0D8               	btfsc	status,0,c
  6168  005A3E  D002               	goto	u9980
  6169  005A40  0E01               	movlw	1
  6170  005A42  D001               	goto	u9990
  6171  005A44                     u9980:
  6172  005A44  0E00               	movlw	0
  6173  005A46                     u9990:
  6174  005A46  6E15               	movwf	?_isupper^0,c
  6175  005A48  6A16               	clrf	(?_isupper+1)^0,c
  6176  005A4A  0012               	return		;funcret
  6177  005A4C                     __end_of_isupper:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _strcpy *****************
  6181 ;; Defined at:
  6182 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  dest            2   20[COMRAM] PTR unsigned char 
  6185 ;;		 -> dbuf(80), 
  6186 ;;  src             2   22[COMRAM] PTR const unsigned char 
  6187 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  6188 ;;		 -> dbuf(80), 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  d               2   28[COMRAM] PTR unsigned char 
  6191 ;;		 -> dbuf(80), 
  6192 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6193 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  6194 ;;		 -> dbuf(80), 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  2   20[COMRAM] PTR unsigned char 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6199 ;; Tracked objects:
  6200 ;;		On entry : 3F/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6207 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6208 ;;Total ram usage:       10 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 4
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_efgtoa
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text14
  6219  0054C4                     __ptext14:
  6220                           	callstack 0
  6221  0054C4                     _strcpy:
  6222                           	callstack 20
  6223                           
  6224                           ; BSR set to: 0
  6225                           
  6226                           ;incstack = 0
  6227  0054C4  C017  F01B         	movff	strcpy@src,strcpy@s
  6228  0054C8  C018  F01C         	movff	strcpy@src+1,strcpy@s+1
  6229  0054CC  C015  F01D         	movff	strcpy@dest,strcpy@d
  6230  0054D0  C016  F01E         	movff	strcpy@dest+1,strcpy@d+1
  6231  0054D4                     l9655:
  6232  0054D4  501B               	movf	strcpy@s^0,w,c
  6233  0054D6  6E19               	movwf	??_strcpy^0,c
  6234  0054D8  501C               	movf	(strcpy@s+1)^0,w,c
  6235  0054DA  6E1A               	movwf	(??_strcpy+1)^0,c
  6236  0054DC  4A1B               	infsnz	strcpy@s^0,f,c
  6237  0054DE  2A1C               	incf	(strcpy@s+1)^0,f,c
  6238  0054E0  0060  F067  FFF6   	movff	??_strcpy,tblptrl
  6239  0054E6  0060  F06B  FFF7   	movff	??_strcpy+1,tblptrh
  6240  0054EC  0E00               	movlw	low (__smallconst shr (0+16))
  6241  0054EE  6EF8               	movwf	tblptru,c
  6242  0054F0  0060  F077  FFD9   	movff	strcpy@d,fsr2l
  6243  0054F6  0060  F07B  FFDA   	movff	strcpy@d+1,fsr2h
  6244  0054FC  4A1D               	infsnz	strcpy@d^0,f,c
  6245  0054FE  2A1E               	incf	(strcpy@d+1)^0,f,c
  6246  005500  0E1F               	movlw	(high __ramtop+-1)
  6247  005502  64F7               	cpfsgt	tblptrh,c
  6248  005504  D003               	bra	u10877
  6249  005506  0008               	tblrd		*
  6250  005508  50F5               	movf	tablat,w,c
  6251  00550A  D007               	bra	u10870
  6252  00550C                     u10877:
  6253  00550C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6254  005512  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6255  005518  50E7               	movf	indf1,w,c
  6256  00551A                     u10870:
  6257  00551A  6EDF               	movwf	indf2,c
  6258  00551C  50DF               	movf	indf2,w,c
  6259  00551E  B4D8               	btfsc	status,2,c
  6260  005520  0012               	return	
  6261  005522  D7D8               	goto	l9655
  6262  005524                     __end_of_strcpy:
  6263                           	callstack 0
  6264                           
  6265 ;; *************** function _pad *****************
  6266 ;; Defined at:
  6267 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  6270 ;;		 -> sprintf@f(11), NULL(0), 
  6271 ;;  buf             2   42[COMRAM] PTR unsigned char 
  6272 ;;		 -> dbuf(80), 
  6273 ;;  p               2   44[COMRAM] int 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  w               2   49[COMRAM] int 
  6276 ;;  i               2   47[COMRAM] int 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  2   40[COMRAM] int 
  6279 ;; Registers used:
  6280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6286 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6287 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6289 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6290 ;;Total ram usage:       11 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 8
  6293 ;; This function calls:
  6294 ;;		_fputc
  6295 ;;		_fputs
  6296 ;;		_strlen
  6297 ;; This function is called by:
  6298 ;;		_efgtoa
  6299 ;;		_utoa
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text15
  6304  0050BE                     __ptext15:
  6305                           	callstack 0
  6306  0050BE                     _pad:
  6307                           	callstack 16
  6308                           
  6309                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6310                           
  6311                           ;incstack = 0
  6312  0050BE  A03D               	btfss	_flags^0,0,c
  6313  0050C0  D00A               	goto	l9613
  6314                           
  6315                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6316  0050C2  C02B  F020         	movff	pad@buf,fputs@s
  6317  0050C6  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6318  0050CA  C029  F022         	movff	pad@fp,fputs@fp
  6319  0050CE  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6320  0050D2  EC2E  F02A         	call	_fputs	;wreg free
  6321  0050D6                     l9613:
  6322                           
  6323                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6324  0050D6  BE2E               	btfsc	(pad@p+1)^0,7,c
  6325  0050D8  D005               	goto	l9617
  6326  0050DA  C02D  F032         	movff	pad@p,pad@w
  6327  0050DE  C02E  F033         	movff	pad@p+1,pad@w+1
  6328  0050E2  D004               	goto	l1973
  6329  0050E4                     l9617:
  6330  0050E4  0E00               	movlw	0
  6331  0050E6  6E33               	movwf	(pad@w+1)^0,c
  6332  0050E8  0E00               	movlw	0
  6333  0050EA  6E32               	movwf	pad@w^0,c
  6334  0050EC                     l1973:
  6335                           
  6336                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6337  0050EC  0E00               	movlw	0
  6338  0050EE  6E31               	movwf	(pad@i+1)^0,c
  6339  0050F0  0E00               	movlw	0
  6340  0050F2  6E30               	movwf	pad@i^0,c
  6341                           
  6342                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6343  0050F4  D00C               	goto	l9623
  6344  0050F6                     l9619:
  6345                           
  6346                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6347  0050F6  0E00               	movlw	0
  6348  0050F8  6E18               	movwf	(fputc@c+1)^0,c
  6349  0050FA  0E20               	movlw	32
  6350  0050FC  6E17               	movwf	fputc@c^0,c
  6351  0050FE  C029  F019         	movff	pad@fp,fputc@fp
  6352  005102  C02A  F01A         	movff	pad@fp+1,fputc@fp+1
  6353  005106  EC03  F027         	call	_fputc	;wreg free
  6354                           
  6355                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6356  00510A  4A30               	infsnz	pad@i^0,f,c
  6357  00510C  2A31               	incf	(pad@i+1)^0,f,c
  6358  00510E                     l9623:
  6359                           
  6360                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6361  00510E  5032               	movf	pad@w^0,w,c
  6362  005110  5C30               	subwf	pad@i^0,w,c
  6363  005112  5031               	movf	(pad@i+1)^0,w,c
  6364  005114  0A80               	xorlw	128
  6365  005116  6E2F               	movwf	??_pad^0,c
  6366  005118  5033               	movf	(pad@w+1)^0,w,c
  6367  00511A  0A80               	xorlw	128
  6368  00511C  582F               	subwfb	??_pad^0,w,c
  6369  00511E  A0D8               	btfss	status,0,c
  6370  005120  D7EA               	goto	l9619
  6371                           
  6372                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6373  005122  B03D               	btfsc	_flags^0,0,c
  6374  005124  D00A               	goto	l9627
  6375                           
  6376                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6377  005126  C02B  F020         	movff	pad@buf,fputs@s
  6378  00512A  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6379  00512E  C029  F022         	movff	pad@fp,fputs@fp
  6380  005132  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6381  005136  EC2E  F02A         	call	_fputs	;wreg free
  6382  00513A                     l9627:
  6383                           
  6384                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  6385  00513A  C02B  F015         	movff	pad@buf,strlen@s
  6386  00513E  C02C  F016         	movff	pad@buf+1,strlen@s+1
  6387  005142  EC33  F02B         	call	_strlen	;wreg free
  6388  005146  5032               	movf	pad@w^0,w,c
  6389  005148  2415               	addwf	?_strlen^0,w,c
  6390  00514A  6E29               	movwf	?_pad^0,c
  6391  00514C  5033               	movf	(pad@w+1)^0,w,c
  6392  00514E  2016               	addwfc	(?_strlen+1)^0,w,c
  6393  005150  6E2A               	movwf	(?_pad+1)^0,c
  6394  005152  0012               	return		;funcret
  6395  005154                     __end_of_pad:
  6396                           	callstack 0
  6397                           
  6398 ;; *************** function _floorf *****************
  6399 ;; Defined at:
  6400 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  x               4   45[COMRAM] float 
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;  u               4    6[BANK0 ] struct .
  6405 ;;  m               4    0[BANK0 ] unsigned long 
  6406 ;;  e               2    4[BANK0 ] int 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  4   45[COMRAM] float 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2, status,0
  6411 ;; Tracked objects:
  6412 ;;		On entry : 3F/0
  6413 ;;		On exit  : 3F/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6417 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6418 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6419 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6420 ;;Total ram usage:       20 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; Hardware stack levels required when called: 4
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_efgtoa
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text16
  6431  003FF4                     __ptext16:
  6432                           	callstack 0
  6433  003FF4                     _floorf:
  6434                           	callstack 20
  6435                           
  6436                           ; BSR set to: 0
  6437                           
  6438                           ;incstack = 0
  6439  003FF4  C18C  F066         	movff	floorf@F526,floorf@u
  6440  003FF8  C18D  F067         	movff	floorf@F526+1,floorf@u+1
  6441  003FFC  C18E  F068         	movff	floorf@F526+2,floorf@u+2
  6442  004000  C18F  F069         	movff	floorf@F526+3,floorf@u+3
  6443  004004  C02E  F066         	movff	floorf@x,floorf@u
  6444  004008  C02F  F067         	movff	floorf@x+1,floorf@u+1
  6445  00400C  C030  F068         	movff	floorf@x+2,floorf@u+2
  6446  004010  C031  F069         	movff	floorf@x+3,floorf@u+3
  6447                           
  6448                           ; BSR set to: 0
  6449  004014  0E81               	movlw	129
  6450  004016  6E32               	movwf	??_floorf^0,c
  6451  004018  0EFF               	movlw	255
  6452  00401A  6E33               	movwf	(??_floorf+1)^0,c
  6453  00401C  C066  F034         	movff	floorf@u,??_floorf+2
  6454  004020  C067  F035         	movff	floorf@u+1,??_floorf+3
  6455  004024  C068  F036         	movff	floorf@u+2,??_floorf+4
  6456  004028  C069  F037         	movff	floorf@u+3,??_floorf+5
  6457  00402C  0E18               	movlw	24
  6458  00402E  D005               	goto	u10900
  6459  004030                     u10905:
  6460  004030  90D8               	bcf	status,0,c
  6461  004032  3237               	rrcf	(??_floorf+5)^0,f,c
  6462  004034  3236               	rrcf	(??_floorf+4)^0,f,c
  6463  004036  3235               	rrcf	(??_floorf+3)^0,f,c
  6464  004038  3234               	rrcf	(??_floorf+2)^0,f,c
  6465  00403A                     u10900:
  6466  00403A  2EE8               	decfsz	wreg,f,c
  6467  00403C  D7F9               	goto	u10905
  6468  00403E  5034               	movf	(??_floorf+2)^0,w,c
  6469  004040  2432               	addwf	??_floorf^0,w,c
  6470  004042  6F64               	movwf	floorf@e& (0+255),b
  6471  004044  0E00               	movlw	0
  6472  004046  2033               	addwfc	(??_floorf+1)^0,w,c
  6473  004048  6F65               	movwf	(floorf@e+1)& (0+255),b
  6474  00404A  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6475  00404C  D00F               	goto	l9673
  6476  00404E  5165               	movf	(floorf@e+1)& (0+255),w,b
  6477  004050  E104               	bnz	u10910
  6478  004052  0E17               	movlw	23
  6479  004054  5D64               	subwf	floorf@e& (0+255),w,b
  6480  004056  A0D8               	btfss	status,0,c
  6481  004058  D009               	goto	l9673
  6482  00405A                     u10910:
  6483                           
  6484                           ; BSR set to: 0
  6485  00405A  C02E  F02E         	movff	floorf@x,?_floorf
  6486  00405E  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  6487  004062  C030  F030         	movff	floorf@x+2,?_floorf+2
  6488  004066  C031  F031         	movff	floorf@x+3,?_floorf+3
  6489  00406A  0012               	return	
  6490  00406C                     l9673:
  6491                           
  6492                           ; BSR set to: 0
  6493  00406C  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6494  00406E  D05C               	goto	l9683
  6495                           
  6496                           ; BSR set to: 0
  6497  004070  C064  F032         	movff	floorf@e,??_floorf
  6498  004074  0EFF               	movlw	255
  6499  004076  6E33               	movwf	(??_floorf+1)^0,c
  6500  004078  0EFF               	movlw	255
  6501  00407A  6E34               	movwf	(??_floorf+2)^0,c
  6502  00407C  0E7F               	movlw	127
  6503  00407E  6E35               	movwf	(??_floorf+3)^0,c
  6504  004080  0E00               	movlw	0
  6505  004082  6E36               	movwf	(??_floorf+4)^0,c
  6506  004084                     u10935:
  6507  004084  6632               	tstfsz	??_floorf^0,c
  6508  004086  D001               	goto	u10936
  6509  004088  D007               	goto	u10937
  6510  00408A                     u10936:
  6511  00408A  3436               	rlcf	(??_floorf+4)^0,w,c
  6512  00408C  3236               	rrcf	(??_floorf+4)^0,f,c
  6513  00408E  3235               	rrcf	(??_floorf+3)^0,f,c
  6514  004090  3234               	rrcf	(??_floorf+2)^0,f,c
  6515  004092  3233               	rrcf	(??_floorf+1)^0,f,c
  6516  004094  2E32               	decfsz	??_floorf^0,f,c
  6517  004096  D7F6               	goto	u10935
  6518  004098                     u10937:
  6519  004098  C033  F060         	movff	??_floorf+1,floorf@m
  6520  00409C  C034  F061         	movff	??_floorf+2,floorf@m+1
  6521  0040A0  C035  F062         	movff	??_floorf+3,floorf@m+2
  6522  0040A4  C036  F063         	movff	??_floorf+4,floorf@m+3
  6523  0040A8  0100               	movlb	0	; () banked
  6524  0040AA  5160               	movf	floorf@m& (0+255),w,b
  6525  0040AC  1566               	andwf	floorf@u& (0+255),w,b
  6526  0040AE  6E32               	movwf	??_floorf^0,c
  6527  0040B0  5161               	movf	(floorf@m+1)& (0+255),w,b
  6528  0040B2  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6529  0040B4  6E33               	movwf	(??_floorf+1)^0,c
  6530  0040B6  5162               	movf	(floorf@m+2)& (0+255),w,b
  6531  0040B8  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6532  0040BA  6E34               	movwf	(??_floorf+2)^0,c
  6533  0040BC  5163               	movf	(floorf@m+3)& (0+255),w,b
  6534  0040BE  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6535  0040C0  6E35               	movwf	(??_floorf+3)^0,c
  6536  0040C2  5032               	movf	??_floorf^0,w,c
  6537  0040C4  1033               	iorwf	(??_floorf+1)^0,w,c
  6538  0040C6  1034               	iorwf	(??_floorf+2)^0,w,c
  6539  0040C8  1035               	iorwf	(??_floorf+3)^0,w,c
  6540  0040CA  B4D8               	btfsc	status,2,c
  6541  0040CC  D7C6               	goto	u10910
  6542                           
  6543                           ; BSR set to: 0
  6544  0040CE  C066  F032         	movff	floorf@u,??_floorf
  6545  0040D2  C067  F033         	movff	floorf@u+1,??_floorf+1
  6546  0040D6  C068  F034         	movff	floorf@u+2,??_floorf+2
  6547  0040DA  C069  F035         	movff	floorf@u+3,??_floorf+3
  6548  0040DE  0E20               	movlw	32
  6549  0040E0  D005               	goto	u10950
  6550  0040E2                     u10955:
  6551  0040E2  90D8               	bcf	status,0,c
  6552  0040E4  3235               	rrcf	(??_floorf+3)^0,f,c
  6553  0040E6  3234               	rrcf	(??_floorf+2)^0,f,c
  6554  0040E8  3233               	rrcf	(??_floorf+1)^0,f,c
  6555  0040EA  3232               	rrcf	??_floorf^0,f,c
  6556  0040EC                     u10950:
  6557  0040EC  2EE8               	decfsz	wreg,f,c
  6558  0040EE  D7F9               	goto	u10955
  6559  0040F0  5032               	movf	??_floorf^0,w,c
  6560  0040F2  B4D8               	btfsc	status,2,c
  6561  0040F4  D008               	goto	l2203
  6562                           
  6563                           ; BSR set to: 0
  6564  0040F6  5160               	movf	floorf@m& (0+255),w,b
  6565  0040F8  2766               	addwf	floorf@u& (0+255),f,b
  6566  0040FA  5161               	movf	(floorf@m+1)& (0+255),w,b
  6567  0040FC  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6568  0040FE  5162               	movf	(floorf@m+2)& (0+255),w,b
  6569  004100  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6570  004102  5163               	movf	(floorf@m+3)& (0+255),w,b
  6571  004104  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6572  004106                     l2203:
  6573                           
  6574                           ; BSR set to: 0
  6575  004106  1D60               	comf	floorf@m& (0+255),w,b
  6576  004108  6E32               	movwf	??_floorf^0,c
  6577  00410A  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6578  00410C  6E33               	movwf	(??_floorf+1)^0,c
  6579  00410E  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6580  004110  6E34               	movwf	(??_floorf+2)^0,c
  6581  004112  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6582  004114  6E35               	movwf	(??_floorf+3)^0,c
  6583  004116  5032               	movf	??_floorf^0,w,c
  6584  004118  1766               	andwf	floorf@u& (0+255),f,b
  6585  00411A  5033               	movf	(??_floorf+1)^0,w,c
  6586  00411C  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6587  00411E  5034               	movf	(??_floorf+2)^0,w,c
  6588  004120  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6589  004122  5035               	movf	(??_floorf+3)^0,w,c
  6590  004124  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6591  004126  D032               	goto	l9691
  6592  004128                     l9683:
  6593                           
  6594                           ; BSR set to: 0
  6595  004128  C066  F032         	movff	floorf@u,??_floorf
  6596  00412C  C067  F033         	movff	floorf@u+1,??_floorf+1
  6597  004130  C068  F034         	movff	floorf@u+2,??_floorf+2
  6598  004134  C069  F035         	movff	floorf@u+3,??_floorf+3
  6599  004138  0E20               	movlw	32
  6600  00413A  D005               	goto	u10970
  6601  00413C                     u10975:
  6602  00413C  90D8               	bcf	status,0,c
  6603  00413E  3235               	rrcf	(??_floorf+3)^0,f,c
  6604  004140  3234               	rrcf	(??_floorf+2)^0,f,c
  6605  004142  3233               	rrcf	(??_floorf+1)^0,f,c
  6606  004144  3232               	rrcf	??_floorf^0,f,c
  6607  004146                     u10970:
  6608  004146  2EE8               	decfsz	wreg,f,c
  6609  004148  D7F9               	goto	u10975
  6610  00414A  6632               	tstfsz	??_floorf^0,c
  6611  00414C  D008               	goto	l9687
  6612                           
  6613                           ; BSR set to: 0
  6614  00414E  0E00               	movlw	0
  6615  004150  6F66               	movwf	floorf@u& (0+255),b
  6616  004152  0E00               	movlw	0
  6617  004154  6F67               	movwf	(floorf@u+1)& (0+255),b
  6618  004156  0E00               	movlw	0
  6619  004158  6F68               	movwf	(floorf@u+2)& (0+255),b
  6620  00415A  0E00               	movlw	0
  6621  00415C  D016               	goto	L7
  6622  00415E                     l9687:
  6623                           
  6624                           ; BSR set to: 0
  6625  00415E  90D8               	bcf	status,0,c
  6626  004160  3566               	rlcf	floorf@u& (0+255),w,b
  6627  004162  6E32               	movwf	??_floorf^0,c
  6628  004164  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6629  004166  6E33               	movwf	(??_floorf+1)^0,c
  6630  004168  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6631  00416A  6E34               	movwf	(??_floorf+2)^0,c
  6632  00416C  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6633  00416E  6E35               	movwf	(??_floorf+3)^0,c
  6634  004170  5032               	movf	??_floorf^0,w,c
  6635  004172  1033               	iorwf	(??_floorf+1)^0,w,c
  6636  004174  1034               	iorwf	(??_floorf+2)^0,w,c
  6637  004176  1035               	iorwf	(??_floorf+3)^0,w,c
  6638  004178  B4D8               	btfsc	status,2,c
  6639  00417A  D008               	goto	l9691
  6640                           
  6641                           ; BSR set to: 0
  6642  00417C  0E00               	movlw	0
  6643  00417E  6F66               	movwf	floorf@u& (0+255),b
  6644  004180  0E00               	movlw	0
  6645  004182  6F67               	movwf	(floorf@u+1)& (0+255),b
  6646  004184  0E80               	movlw	128
  6647  004186  6F68               	movwf	(floorf@u+2)& (0+255),b
  6648  004188  0EBF               	movlw	191
  6649  00418A                     L7:
  6650  00418A  6F69               	movwf	(floorf@u+3)& (0+255),b
  6651  00418C                     l9691:
  6652                           
  6653                           ; BSR set to: 0
  6654  00418C  C066  F02E         	movff	floorf@u,?_floorf
  6655  004190  C067  F02F         	movff	floorf@u+1,?_floorf+1
  6656  004194  C068  F030         	movff	floorf@u+2,?_floorf+2
  6657  004198  C069  F031         	movff	floorf@u+3,?_floorf+3
  6658                           
  6659                           ; BSR set to: 0
  6660  00419C  0012               	return		;funcret
  6661  00419E                     __end_of_floorf:
  6662                           	callstack 0
  6663                           
  6664 ;; *************** function ___fpclassifyf *****************
  6665 ;; Defined at:
  6666 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  x               4   20[COMRAM] float 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  u               4   30[COMRAM] struct .
  6671 ;;  e               2   28[COMRAM] int 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  2   20[COMRAM] int 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6682 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6684 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6685 ;;Total ram usage:       14 bytes
  6686 ;; Hardware stack levels used: 1
  6687 ;; Hardware stack levels required when called: 4
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_efgtoa
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text17
  6696  004BC8                     __ptext17:
  6697                           	callstack 0
  6698  004BC8                     ___fpclassifyf:
  6699                           	callstack 20
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;incstack = 0
  6703  004BC8  C190  F01F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6704  004BCC  C191  F020         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6705  004BD0  C192  F021         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6706  004BD4  C193  F022         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6707  004BD8  C015  F01F         	movff	___fpclassifyf@x,___fpclassifyf@u
  6708  004BDC  C016  F020         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6709  004BE0  C017  F021         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6710  004BE4  C018  F022         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6711  004BE8  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6712  004BEC  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6713  004BF0  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6714  004BF4  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6715  004BF8  0E18               	movlw	24
  6716  004BFA  D005               	goto	u10800
  6717  004BFC                     u10805:
  6718  004BFC  90D8               	bcf	status,0,c
  6719  004BFE  321C               	rrcf	(??___fpclassifyf+3)^0,f,c
  6720  004C00  321B               	rrcf	(??___fpclassifyf+2)^0,f,c
  6721  004C02  321A               	rrcf	(??___fpclassifyf+1)^0,f,c
  6722  004C04  3219               	rrcf	??___fpclassifyf^0,f,c
  6723  004C06                     u10800:
  6724  004C06  2EE8               	decfsz	wreg,f,c
  6725  004C08  D7F9               	goto	u10805
  6726  004C0A  5019               	movf	??___fpclassifyf^0,w,c
  6727  004C0C  6E1D               	movwf	___fpclassifyf@e^0,c
  6728  004C0E  6A1E               	clrf	(___fpclassifyf@e+1)^0,c
  6729  004C10  501D               	movf	___fpclassifyf@e^0,w,c
  6730  004C12  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6731  004C14  A4D8               	btfss	status,2,c
  6732  004C16  D019               	goto	l9643
  6733  004C18  90D8               	bcf	status,0,c
  6734  004C1A  341F               	rlcf	___fpclassifyf@u^0,w,c
  6735  004C1C  6E19               	movwf	??___fpclassifyf^0,c
  6736  004C1E  3420               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6737  004C20  6E1A               	movwf	(??___fpclassifyf+1)^0,c
  6738  004C22  3421               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6739  004C24  6E1B               	movwf	(??___fpclassifyf+2)^0,c
  6740  004C26  3422               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6741  004C28  6E1C               	movwf	(??___fpclassifyf+3)^0,c
  6742  004C2A  5019               	movf	??___fpclassifyf^0,w,c
  6743  004C2C  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6744  004C2E  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6745  004C30  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6746  004C32  A4D8               	btfss	status,2,c
  6747  004C34  D005               	goto	l9639
  6748  004C36  0E00               	movlw	0
  6749  004C38  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6750  004C3A  0E02               	movlw	2
  6751  004C3C  6E15               	movwf	?___fpclassifyf^0,c
  6752  004C3E  0012               	return	
  6753  004C40                     l9639:
  6754  004C40  0E00               	movlw	0
  6755  004C42  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6756  004C44  0E03               	movlw	3
  6757  004C46  6E15               	movwf	?___fpclassifyf^0,c
  6758  004C48  0012               	return	
  6759  004C4A                     l9643:
  6760  004C4A  281D               	incf	___fpclassifyf@e^0,w,c
  6761  004C4C  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6762  004C4E  A4D8               	btfss	status,2,c
  6763  004C50  D01C               	goto	l9649
  6764  004C52  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6765  004C56  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6766  004C5A  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6767  004C5E  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6768  004C62  0E09               	movlw	9
  6769  004C64                     u10845:
  6770  004C64  90D8               	bcf	status,0,c
  6771  004C66  3619               	rlcf	??___fpclassifyf^0,f,c
  6772  004C68  361A               	rlcf	(??___fpclassifyf+1)^0,f,c
  6773  004C6A  361B               	rlcf	(??___fpclassifyf+2)^0,f,c
  6774  004C6C  361C               	rlcf	(??___fpclassifyf+3)^0,f,c
  6775  004C6E  2EE8               	decfsz	wreg,f,c
  6776  004C70  D7F9               	goto	u10845
  6777  004C72  5019               	movf	??___fpclassifyf^0,w,c
  6778  004C74  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6779  004C76  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6780  004C78  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6781  004C7A  A4D8               	btfss	status,2,c
  6782  004C7C  D002               	goto	u10850
  6783  004C7E  0E01               	movlw	1
  6784  004C80  D001               	goto	u10860
  6785  004C82                     u10850:
  6786  004C82  0E00               	movlw	0
  6787  004C84                     u10860:
  6788  004C84  6E15               	movwf	?___fpclassifyf^0,c
  6789  004C86  6A16               	clrf	(?___fpclassifyf+1)^0,c
  6790  004C88  0012               	return	
  6791  004C8A                     l9649:
  6792  004C8A  0E00               	movlw	0
  6793  004C8C  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6794  004C8E  0E04               	movlw	4
  6795  004C90  6E15               	movwf	?___fpclassifyf^0,c
  6796  004C92  0012               	return		;funcret
  6797  004C94                     __end_of___fpclassifyf:
  6798                           	callstack 0
  6799                           
  6800 ;; *************** function ___fltol *****************
  6801 ;; Defined at:
  6802 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  f1              4   20[COMRAM] int 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  exp1            1   29[COMRAM] unsigned char 
  6807 ;;  sign1           1   28[COMRAM] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  4   20[COMRAM] long 
  6810 ;; Registers used:
  6811 ;;		wreg, status,2, status,0
  6812 ;; Tracked objects:
  6813 ;;		On entry : 3F/0
  6814 ;;		On exit  : 3F/0
  6815 ;;		Unchanged: 3F/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6819 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6820 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6821 ;;Total ram usage:       10 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 4
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_efgtoa
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text18
  6832  004C94                     __ptext18:
  6833                           	callstack 0
  6834  004C94                     ___fltol:
  6835                           	callstack 20
  6836                           
  6837                           ; BSR set to: 0
  6838                           
  6839                           ;incstack = 0
  6840  004C94  3417               	rlcf	(___fltol@f1+2)^0,w,c
  6841  004C96  3418               	rlcf	(___fltol@f1+3)^0,w,c
  6842  004C98  6E1E               	movwf	___fltol@exp1^0,c
  6843  004C9A  501E               	movf	___fltol@exp1^0,w,c
  6844  004C9C  A4D8               	btfss	status,2,c
  6845  004C9E  D009               	goto	l9533
  6846  004CA0                     u10620:
  6847                           
  6848                           ; BSR set to: 0
  6849  004CA0  0E00               	movlw	0
  6850  004CA2  6E15               	movwf	?___fltol^0,c
  6851  004CA4  0E00               	movlw	0
  6852  004CA6  6E16               	movwf	(?___fltol+1)^0,c
  6853  004CA8  0E00               	movlw	0
  6854  004CAA  6E17               	movwf	(?___fltol+2)^0,c
  6855  004CAC  0E00               	movlw	0
  6856  004CAE  6E18               	movwf	(?___fltol+3)^0,c
  6857  004CB0  0012               	return	
  6858  004CB2                     l9533:
  6859                           
  6860                           ; BSR set to: 0
  6861  004CB2  C015  F019         	movff	___fltol@f1,??___fltol
  6862  004CB6  C016  F01A         	movff	___fltol@f1+1,??___fltol+1
  6863  004CBA  C017  F01B         	movff	___fltol@f1+2,??___fltol+2
  6864  004CBE  C018  F01C         	movff	___fltol@f1+3,??___fltol+3
  6865  004CC2  0E20               	movlw	32
  6866  004CC4  D005               	goto	u10630
  6867  004CC6                     u10635:
  6868  004CC6  90D8               	bcf	status,0,c
  6869  004CC8  321C               	rrcf	(??___fltol+3)^0,f,c
  6870  004CCA  321B               	rrcf	(??___fltol+2)^0,f,c
  6871  004CCC  321A               	rrcf	(??___fltol+1)^0,f,c
  6872  004CCE  3219               	rrcf	??___fltol^0,f,c
  6873  004CD0                     u10630:
  6874  004CD0  2EE8               	decfsz	wreg,f,c
  6875  004CD2  D7F9               	goto	u10635
  6876  004CD4  5019               	movf	??___fltol^0,w,c
  6877  004CD6  6E1D               	movwf	___fltol@sign1^0,c
  6878                           
  6879                           ; BSR set to: 0
  6880  004CD8  8E17               	bsf	(___fltol@f1+2)^0,7,c
  6881                           
  6882                           ; BSR set to: 0
  6883  004CDA  0EFF               	movlw	255
  6884  004CDC  1615               	andwf	___fltol@f1^0,f,c
  6885  004CDE  0EFF               	movlw	255
  6886  004CE0  1616               	andwf	(___fltol@f1+1)^0,f,c
  6887  004CE2  0EFF               	movlw	255
  6888  004CE4  1617               	andwf	(___fltol@f1+2)^0,f,c
  6889  004CE6  0E00               	movlw	0
  6890  004CE8  1618               	andwf	(___fltol@f1+3)^0,f,c
  6891                           
  6892                           ; BSR set to: 0
  6893  004CEA  0E96               	movlw	150
  6894  004CEC  5E1E               	subwf	___fltol@exp1^0,f,c
  6895                           
  6896                           ; BSR set to: 0
  6897  004CEE  AE1E               	btfss	___fltol@exp1^0,7,c
  6898  004CF0  D00D               	goto	l9553
  6899                           
  6900                           ; BSR set to: 0
  6901  004CF2  501E               	movf	___fltol@exp1^0,w,c
  6902  004CF4  0A80               	xorlw	128
  6903  004CF6  0F97               	addlw	151
  6904  004CF8  A0D8               	btfss	status,0,c
  6905  004CFA  D7D2               	goto	u10620
  6906  004CFC                     l9549:
  6907                           
  6908                           ; BSR set to: 0
  6909  004CFC  90D8               	bcf	status,0,c
  6910  004CFE  3218               	rrcf	(___fltol@f1+3)^0,f,c
  6911  004D00  3217               	rrcf	(___fltol@f1+2)^0,f,c
  6912  004D02  3216               	rrcf	(___fltol@f1+1)^0,f,c
  6913  004D04  3215               	rrcf	___fltol@f1^0,f,c
  6914                           
  6915                           ; BSR set to: 0
  6916  004D06  3E1E               	incfsz	___fltol@exp1^0,f,c
  6917  004D08  D7F9               	goto	l9549
  6918  004D0A  D00D               	goto	u10670
  6919  004D0C                     l9553:
  6920                           
  6921                           ; BSR set to: 0
  6922  004D0C  0E1F               	movlw	31
  6923  004D0E  641E               	cpfsgt	___fltol@exp1^0,c
  6924  004D10  D007               	goto	l9561
  6925  004D12  D7C6               	goto	u10620
  6926  004D14                     l9559:
  6927                           
  6928                           ; BSR set to: 0
  6929  004D14  90D8               	bcf	status,0,c
  6930  004D16  3615               	rlcf	___fltol@f1^0,f,c
  6931  004D18  3616               	rlcf	(___fltol@f1+1)^0,f,c
  6932  004D1A  3617               	rlcf	(___fltol@f1+2)^0,f,c
  6933  004D1C  3618               	rlcf	(___fltol@f1+3)^0,f,c
  6934  004D1E  061E               	decf	___fltol@exp1^0,f,c
  6935  004D20                     l9561:
  6936                           
  6937                           ; BSR set to: 0
  6938  004D20  501E               	movf	___fltol@exp1^0,w,c
  6939  004D22  A4D8               	btfss	status,2,c
  6940  004D24  D7F7               	goto	l9559
  6941  004D26                     u10670:
  6942                           
  6943                           ; BSR set to: 0
  6944  004D26  501D               	movf	___fltol@sign1^0,w,c
  6945  004D28  B4D8               	btfsc	status,2,c
  6946  004D2A  D008               	goto	l9567
  6947                           
  6948                           ; BSR set to: 0
  6949  004D2C  1E18               	comf	(___fltol@f1+3)^0,f,c
  6950  004D2E  1E17               	comf	(___fltol@f1+2)^0,f,c
  6951  004D30  1E16               	comf	(___fltol@f1+1)^0,f,c
  6952  004D32  6C15               	negf	___fltol@f1^0,c
  6953  004D34  0E00               	movlw	0
  6954  004D36  2216               	addwfc	(___fltol@f1+1)^0,f,c
  6955  004D38  2217               	addwfc	(___fltol@f1+2)^0,f,c
  6956  004D3A  2218               	addwfc	(___fltol@f1+3)^0,f,c
  6957  004D3C                     l9567:
  6958                           
  6959                           ; BSR set to: 0
  6960  004D3C  C015  F015         	movff	___fltol@f1,?___fltol
  6961  004D40  C016  F016         	movff	___fltol@f1+1,?___fltol+1
  6962  004D44  C017  F017         	movff	___fltol@f1+2,?___fltol+2
  6963  004D48  C018  F018         	movff	___fltol@f1+3,?___fltol+3
  6964                           
  6965                           ; BSR set to: 0
  6966  004D4C  0012               	return		;funcret
  6967  004D4E                     __end_of___fltol:
  6968                           	callstack 0
  6969                           
  6970 ;; *************** function ___flsub *****************
  6971 ;; Defined at:
  6972 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  b               4   46[COMRAM] long 
  6975 ;;  a               4   50[COMRAM] long 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  4   46[COMRAM] long 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0, cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 3F/0
  6984 ;;		On exit  : 3F/0
  6985 ;;		Unchanged: 3F/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6987 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6990 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6991 ;;Total ram usage:        8 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 5
  6994 ;; This function calls:
  6995 ;;		___fladd
  6996 ;; This function is called by:
  6997 ;;		_efgtoa
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text19
  7002  0056FA                     __ptext19:
  7003                           	callstack 0
  7004  0056FA                     ___flsub:
  7005                           	callstack 19
  7006                           
  7007                           ; BSR set to: 0
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;incstack = 0
  7011  0056FA  0E00               	movlw	0
  7012  0056FC  1A33               	xorwf	___flsub@a^0,f,c
  7013  0056FE  0E00               	movlw	0
  7014  005700  1A34               	xorwf	(___flsub@a+1)^0,f,c
  7015  005702  0E00               	movlw	0
  7016  005704  1A35               	xorwf	(___flsub@a+2)^0,f,c
  7017  005706  0E80               	movlw	128
  7018  005708  1A36               	xorwf	(___flsub@a+3)^0,f,c
  7019                           
  7020                           ; BSR set to: 0
  7021  00570A  C02F  F015         	movff	___flsub@b,___fladd@b
  7022  00570E  C030  F016         	movff	___flsub@b+1,___fladd@b+1
  7023  005712  C031  F017         	movff	___flsub@b+2,___fladd@b+2
  7024  005716  C032  F018         	movff	___flsub@b+3,___fladd@b+3
  7025  00571A  C033  F019         	movff	___flsub@a,___fladd@a
  7026  00571E  C034  F01A         	movff	___flsub@a+1,___fladd@a+1
  7027  005722  C035  F01B         	movff	___flsub@a+2,___fladd@a+2
  7028  005726  C036  F01C         	movff	___flsub@a+3,___fladd@a+3
  7029  00572A  EC4B  F01A         	call	___fladd	;wreg free
  7030  00572E  C015  F02F         	movff	?___fladd,?___flsub
  7031  005732  C016  F030         	movff	?___fladd+1,?___flsub+1
  7032  005736  C017  F031         	movff	?___fladd+2,?___flsub+2
  7033  00573A  C018  F032         	movff	?___fladd+3,?___flsub+3
  7034                           
  7035                           ; BSR set to: 0
  7036  00573E  0012               	return		;funcret
  7037  005740                     __end_of___flsub:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function ___fladd *****************
  7041 ;; Defined at:
  7042 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  b               4   20[COMRAM] long 
  7045 ;;  a               4   24[COMRAM] long 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  grs             1   35[COMRAM] unsigned char 
  7048 ;;  bexp            1   34[COMRAM] unsigned char 
  7049 ;;  aexp            1   33[COMRAM] unsigned char 
  7050 ;;  signs           1   32[COMRAM] unsigned char 
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  4   20[COMRAM] unsigned char 
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0
  7055 ;; Tracked objects:
  7056 ;;		On entry : 3F/0
  7057 ;;		On exit  : 3F/0
  7058 ;;		Unchanged: 3F/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7060 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7061 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7062 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7063 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7064 ;;Total ram usage:       16 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 4
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		___flsub
  7071 ;;		_efgtoa
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text20
  7076  003496                     __ptext20:
  7077                           	callstack 0
  7078  003496                     ___fladd:
  7079                           	callstack 19
  7080                           
  7081                           ; BSR set to: 0
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;incstack = 0
  7085  003496  5018               	movf	(___fladd@b+3)^0,w,c
  7086  003498  0B80               	andlw	128
  7087  00349A  6E21               	movwf	___fladd@signs^0,c
  7088  00349C  5018               	movf	(___fladd@b+3)^0,w,c
  7089  00349E  2418               	addwf	(___fladd@b+3)^0,w,c
  7090  0034A0  6E23               	movwf	___fladd@bexp^0,c
  7091                           
  7092                           ; BSR set to: 0
  7093  0034A2  BE17               	btfsc	(___fladd@b+2)^0,7,c
  7094                           
  7095                           ; BSR set to: 0
  7096  0034A4  8023               	bsf	___fladd@bexp^0,0,c
  7097                           
  7098                           ; BSR set to: 0
  7099  0034A6  5023               	movf	___fladd@bexp^0,w,c
  7100  0034A8  B4D8               	btfsc	status,2,c
  7101  0034AA  D00D               	goto	l8923
  7102                           
  7103                           ; BSR set to: 0
  7104  0034AC  2823               	incf	___fladd@bexp^0,w,c
  7105  0034AE  A4D8               	btfss	status,2,c
  7106  0034B0  D008               	goto	l8919
  7107                           
  7108                           ; BSR set to: 0
  7109  0034B2  0E00               	movlw	0
  7110  0034B4  6E15               	movwf	___fladd@b^0,c
  7111  0034B6  0E00               	movlw	0
  7112  0034B8  6E16               	movwf	(___fladd@b+1)^0,c
  7113  0034BA  0E00               	movlw	0
  7114  0034BC  6E17               	movwf	(___fladd@b+2)^0,c
  7115  0034BE  0E00               	movlw	0
  7116  0034C0  6E18               	movwf	(___fladd@b+3)^0,c
  7117  0034C2                     l8919:
  7118                           
  7119                           ; BSR set to: 0
  7120  0034C2  8E17               	bsf	(___fladd@b+2)^0,7,c
  7121  0034C4  D006               	goto	L8
  7122  0034C6                     l8923:
  7123                           
  7124                           ; BSR set to: 0
  7125  0034C6  0E00               	movlw	0
  7126  0034C8  6E15               	movwf	___fladd@b^0,c
  7127  0034CA  0E00               	movlw	0
  7128  0034CC  6E16               	movwf	(___fladd@b+1)^0,c
  7129  0034CE  0E00               	movlw	0
  7130  0034D0  6E17               	movwf	(___fladd@b+2)^0,c
  7131  0034D2                     L8:
  7132  0034D2  0E00               	movlw	0
  7133  0034D4  6E18               	movwf	(___fladd@b+3)^0,c
  7134                           
  7135                           ; BSR set to: 0
  7136  0034D6  501C               	movf	(___fladd@a+3)^0,w,c
  7137  0034D8  0B80               	andlw	128
  7138  0034DA  6E22               	movwf	___fladd@aexp^0,c
  7139                           
  7140                           ; BSR set to: 0
  7141  0034DC  5021               	movf	___fladd@signs^0,w,c
  7142  0034DE  1822               	xorwf	___fladd@aexp^0,w,c
  7143  0034E0  A4D8               	btfss	status,2,c
  7144                           
  7145                           ; BSR set to: 0
  7146  0034E2  8C21               	bsf	___fladd@signs^0,6,c
  7147                           
  7148                           ; BSR set to: 0
  7149  0034E4  501C               	movf	(___fladd@a+3)^0,w,c
  7150  0034E6  241C               	addwf	(___fladd@a+3)^0,w,c
  7151  0034E8  6E22               	movwf	___fladd@aexp^0,c
  7152                           
  7153                           ; BSR set to: 0
  7154  0034EA  BE1B               	btfsc	(___fladd@a+2)^0,7,c
  7155                           
  7156                           ; BSR set to: 0
  7157  0034EC  8022               	bsf	___fladd@aexp^0,0,c
  7158                           
  7159                           ; BSR set to: 0
  7160  0034EE  5022               	movf	___fladd@aexp^0,w,c
  7161  0034F0  B4D8               	btfsc	status,2,c
  7162  0034F2  D00D               	goto	l8947
  7163                           
  7164                           ; BSR set to: 0
  7165  0034F4  2822               	incf	___fladd@aexp^0,w,c
  7166  0034F6  A4D8               	btfss	status,2,c
  7167  0034F8  D008               	goto	l8943
  7168                           
  7169                           ; BSR set to: 0
  7170  0034FA  0E00               	movlw	0
  7171  0034FC  6E19               	movwf	___fladd@a^0,c
  7172  0034FE  0E00               	movlw	0
  7173  003500  6E1A               	movwf	(___fladd@a+1)^0,c
  7174  003502  0E00               	movlw	0
  7175  003504  6E1B               	movwf	(___fladd@a+2)^0,c
  7176  003506  0E00               	movlw	0
  7177  003508  6E1C               	movwf	(___fladd@a+3)^0,c
  7178  00350A                     l8943:
  7179                           
  7180                           ; BSR set to: 0
  7181  00350A  8E1B               	bsf	(___fladd@a+2)^0,7,c
  7182  00350C  D006               	goto	L9
  7183  00350E                     l8947:
  7184                           
  7185                           ; BSR set to: 0
  7186  00350E  0E00               	movlw	0
  7187  003510  6E19               	movwf	___fladd@a^0,c
  7188  003512  0E00               	movlw	0
  7189  003514  6E1A               	movwf	(___fladd@a+1)^0,c
  7190  003516  0E00               	movlw	0
  7191  003518  6E1B               	movwf	(___fladd@a+2)^0,c
  7192  00351A                     L9:
  7193  00351A  0E00               	movlw	0
  7194  00351C  6E1C               	movwf	(___fladd@a+3)^0,c
  7195                           
  7196                           ; BSR set to: 0
  7197  00351E  5023               	movf	___fladd@bexp^0,w,c
  7198  003520  5C22               	subwf	___fladd@aexp^0,w,c
  7199  003522  B0D8               	btfsc	status,0,c
  7200  003524  D022               	goto	l8985
  7201                           
  7202                           ; BSR set to: 0
  7203  003526  AC21               	btfss	___fladd@signs^0,6,c
  7204  003528  D002               	goto	l8955
  7205                           
  7206                           ; BSR set to: 0
  7207  00352A  0E80               	movlw	128
  7208  00352C  1A21               	xorwf	___fladd@signs^0,f,c
  7209  00352E                     l8955:
  7210                           
  7211                           ; BSR set to: 0
  7212  00352E  C023  F024         	movff	___fladd@bexp,___fladd@grs
  7213                           
  7214                           ; BSR set to: 0
  7215  003532  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7216                           
  7217                           ; BSR set to: 0
  7218  003536  C024  F022         	movff	___fladd@grs,___fladd@aexp
  7219                           
  7220                           ; BSR set to: 0
  7221  00353A  C015  F024         	movff	___fladd@b,___fladd@grs
  7222                           
  7223                           ; BSR set to: 0
  7224  00353E  C019  F015         	movff	___fladd@a,___fladd@b
  7225                           
  7226                           ; BSR set to: 0
  7227  003542  C024  F019         	movff	___fladd@grs,___fladd@a
  7228                           
  7229                           ; BSR set to: 0
  7230  003546  C016  F024         	movff	___fladd@b+1,___fladd@grs
  7231                           
  7232                           ; BSR set to: 0
  7233  00354A  C01A  F016         	movff	___fladd@a+1,___fladd@b+1
  7234                           
  7235                           ; BSR set to: 0
  7236  00354E  C024  F01A         	movff	___fladd@grs,___fladd@a+1
  7237                           
  7238                           ; BSR set to: 0
  7239  003552  C017  F024         	movff	___fladd@b+2,___fladd@grs
  7240                           
  7241                           ; BSR set to: 0
  7242  003556  C01B  F017         	movff	___fladd@a+2,___fladd@b+2
  7243                           
  7244                           ; BSR set to: 0
  7245  00355A  C024  F01B         	movff	___fladd@grs,___fladd@a+2
  7246                           
  7247                           ; BSR set to: 0
  7248  00355E  C018  F024         	movff	___fladd@b+3,___fladd@grs
  7249                           
  7250                           ; BSR set to: 0
  7251  003562  C01C  F018         	movff	___fladd@a+3,___fladd@b+3
  7252                           
  7253                           ; BSR set to: 0
  7254  003566  C024  F01C         	movff	___fladd@grs,___fladd@a+3
  7255  00356A                     l8985:
  7256                           
  7257                           ; BSR set to: 0
  7258  00356A  0E00               	movlw	0
  7259  00356C  6E24               	movwf	___fladd@grs^0,c
  7260                           
  7261                           ; BSR set to: 0
  7262  00356E  5023               	movf	___fladd@bexp^0,w,c
  7263  003570  C022  F01D         	movff	___fladd@aexp,??___fladd
  7264  003574  6A1E               	clrf	(??___fladd+1)^0,c
  7265  003576  5E1D               	subwf	??___fladd^0,f,c
  7266  003578  0E00               	movlw	0
  7267  00357A  5A1E               	subwfb	(??___fladd+1)^0,f,c
  7268  00357C  BE1E               	btfsc	(??___fladd+1)^0,7,c
  7269  00357E  D02C               	goto	l1773
  7270  003580  501E               	movf	(??___fladd+1)^0,w,c
  7271  003582  E104               	bnz	u9660
  7272  003584  0E1A               	movlw	26
  7273  003586  5C1D               	subwf	??___fladd^0,w,c
  7274  003588  A0D8               	btfss	status,0,c
  7275  00358A  D026               	goto	l1773
  7276  00358C                     u9660:
  7277                           
  7278                           ; BSR set to: 0
  7279  00358C  5015               	movf	___fladd@b^0,w,c
  7280  00358E  1016               	iorwf	(___fladd@b+1)^0,w,c
  7281  003590  1017               	iorwf	(___fladd@b+2)^0,w,c
  7282  003592  1018               	iorwf	(___fladd@b+3)^0,w,c
  7283  003594  B4D8               	btfsc	status,2,c
  7284  003596  D002               	goto	u9670
  7285  003598  0E01               	movlw	1
  7286  00359A  D001               	goto	u9680
  7287  00359C                     u9670:
  7288  00359C  0E00               	movlw	0
  7289  00359E                     u9680:
  7290  00359E  6E24               	movwf	___fladd@grs^0,c
  7291                           
  7292                           ; BSR set to: 0
  7293  0035A0  0E00               	movlw	0
  7294  0035A2  6E15               	movwf	___fladd@b^0,c
  7295  0035A4  0E00               	movlw	0
  7296  0035A6  6E16               	movwf	(___fladd@b+1)^0,c
  7297  0035A8  0E00               	movlw	0
  7298  0035AA  6E17               	movwf	(___fladd@b+2)^0,c
  7299  0035AC  0E00               	movlw	0
  7300  0035AE  6E18               	movwf	(___fladd@b+3)^0,c
  7301                           
  7302                           ; BSR set to: 0
  7303  0035B0  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7304  0035B4  D015               	goto	u9710
  7305  0035B6                     l1774:
  7306                           
  7307                           ; BSR set to: 0
  7308  0035B6  A024               	btfss	___fladd@grs^0,0,c
  7309  0035B8  D005               	goto	l8997
  7310                           
  7311                           ; BSR set to: 0
  7312  0035BA  90D8               	bcf	status,0,c
  7313  0035BC  3024               	rrcf	___fladd@grs^0,w,c
  7314  0035BE  0901               	iorlw	1
  7315  0035C0  6E24               	movwf	___fladd@grs^0,c
  7316  0035C2  D002               	goto	l8999
  7317  0035C4                     l8997:
  7318                           
  7319                           ; BSR set to: 0
  7320  0035C4  90D8               	bcf	status,0,c
  7321  0035C6  3224               	rrcf	___fladd@grs^0,f,c
  7322  0035C8                     l8999:
  7323                           
  7324                           ; BSR set to: 0
  7325  0035C8  B015               	btfsc	___fladd@b^0,0,c
  7326                           
  7327                           ; BSR set to: 0
  7328  0035CA  8E24               	bsf	___fladd@grs^0,7,c
  7329                           
  7330                           ; BSR set to: 0
  7331  0035CC  3418               	rlcf	(___fladd@b+3)^0,w,c
  7332  0035CE  3218               	rrcf	(___fladd@b+3)^0,f,c
  7333  0035D0  3217               	rrcf	(___fladd@b+2)^0,f,c
  7334  0035D2  3216               	rrcf	(___fladd@b+1)^0,f,c
  7335  0035D4  3215               	rrcf	___fladd@b^0,f,c
  7336                           
  7337                           ; BSR set to: 0
  7338  0035D6  2A23               	incf	___fladd@bexp^0,f,c
  7339  0035D8                     l1773:
  7340                           
  7341                           ; BSR set to: 0
  7342  0035D8  5022               	movf	___fladd@aexp^0,w,c
  7343  0035DA  5C23               	subwf	___fladd@bexp^0,w,c
  7344  0035DC  A0D8               	btfss	status,0,c
  7345  0035DE  D7EB               	goto	l1774
  7346  0035E0                     u9710:
  7347                           
  7348                           ; BSR set to: 0
  7349  0035E0  BC21               	btfsc	___fladd@signs^0,6,c
  7350  0035E2  D028               	goto	l9031
  7351                           
  7352                           ; BSR set to: 0
  7353  0035E4  5023               	movf	___fladd@bexp^0,w,c
  7354  0035E6  A4D8               	btfss	status,2,c
  7355  0035E8  D009               	goto	l9013
  7356                           
  7357                           ; BSR set to: 0
  7358  0035EA  0E00               	movlw	0
  7359  0035EC  6E15               	movwf	?___fladd^0,c
  7360  0035EE  0E00               	movlw	0
  7361  0035F0  6E16               	movwf	(?___fladd+1)^0,c
  7362  0035F2  0E00               	movlw	0
  7363  0035F4  6E17               	movwf	(?___fladd+2)^0,c
  7364  0035F6  0E00               	movlw	0
  7365  0035F8  6E18               	movwf	(?___fladd+3)^0,c
  7366  0035FA  0012               	return	
  7367  0035FC                     l9013:
  7368                           
  7369                           ; BSR set to: 0
  7370  0035FC  5019               	movf	___fladd@a^0,w,c
  7371  0035FE  2615               	addwf	___fladd@b^0,f,c
  7372  003600  501A               	movf	(___fladd@a+1)^0,w,c
  7373  003602  2216               	addwfc	(___fladd@b+1)^0,f,c
  7374  003604  501B               	movf	(___fladd@a+2)^0,w,c
  7375  003606  2217               	addwfc	(___fladd@b+2)^0,f,c
  7376  003608  501C               	movf	(___fladd@a+3)^0,w,c
  7377  00360A  2218               	addwfc	(___fladd@b+3)^0,f,c
  7378                           
  7379                           ; BSR set to: 0
  7380  00360C  A018               	btfss	(___fladd@b+3)^0,0,c
  7381  00360E  D071               	goto	u9840
  7382                           
  7383                           ; BSR set to: 0
  7384  003610  A024               	btfss	___fladd@grs^0,0,c
  7385  003612  D005               	goto	l9021
  7386                           
  7387                           ; BSR set to: 0
  7388  003614  90D8               	bcf	status,0,c
  7389  003616  3024               	rrcf	___fladd@grs^0,w,c
  7390  003618  0901               	iorlw	1
  7391  00361A  6E24               	movwf	___fladd@grs^0,c
  7392  00361C  D002               	goto	l9023
  7393  00361E                     l9021:
  7394                           
  7395                           ; BSR set to: 0
  7396  00361E  90D8               	bcf	status,0,c
  7397  003620  3224               	rrcf	___fladd@grs^0,f,c
  7398  003622                     l9023:
  7399                           
  7400                           ; BSR set to: 0
  7401  003622  B015               	btfsc	___fladd@b^0,0,c
  7402                           
  7403                           ; BSR set to: 0
  7404  003624  8E24               	bsf	___fladd@grs^0,7,c
  7405                           
  7406                           ; BSR set to: 0
  7407  003626  3418               	rlcf	(___fladd@b+3)^0,w,c
  7408  003628  3218               	rrcf	(___fladd@b+3)^0,f,c
  7409  00362A  3217               	rrcf	(___fladd@b+2)^0,f,c
  7410  00362C  3216               	rrcf	(___fladd@b+1)^0,f,c
  7411  00362E  3215               	rrcf	___fladd@b^0,f,c
  7412                           
  7413                           ; BSR set to: 0
  7414  003630  2A23               	incf	___fladd@bexp^0,f,c
  7415  003632  D05F               	goto	u9840
  7416  003634                     l9031:
  7417                           
  7418                           ; BSR set to: 0
  7419  003634  5019               	movf	___fladd@a^0,w,c
  7420  003636  5C15               	subwf	___fladd@b^0,w,c
  7421  003638  501A               	movf	(___fladd@a+1)^0,w,c
  7422  00363A  5816               	subwfb	(___fladd@b+1)^0,w,c
  7423  00363C  501B               	movf	(___fladd@a+2)^0,w,c
  7424  00363E  5817               	subwfb	(___fladd@b+2)^0,w,c
  7425  003640  5018               	movf	(___fladd@b+3)^0,w,c
  7426  003642  0A80               	xorlw	128
  7427  003644  6E1D               	movwf	??___fladd^0,c
  7428  003646  501C               	movf	(___fladd@a+3)^0,w,c
  7429  003648  0A80               	xorlw	128
  7430  00364A  581D               	subwfb	??___fladd^0,w,c
  7431  00364C  B0D8               	btfsc	status,0,c
  7432  00364E  D025               	goto	l9041
  7433                           
  7434                           ; BSR set to: 0
  7435  003650  5015               	movf	___fladd@b^0,w,c
  7436  003652  5C19               	subwf	___fladd@a^0,w,c
  7437  003654  6E1D               	movwf	??___fladd^0,c
  7438  003656  5016               	movf	(___fladd@b+1)^0,w,c
  7439  003658  581A               	subwfb	(___fladd@a+1)^0,w,c
  7440  00365A  6E1E               	movwf	(??___fladd+1)^0,c
  7441  00365C  5017               	movf	(___fladd@b+2)^0,w,c
  7442  00365E  581B               	subwfb	(___fladd@a+2)^0,w,c
  7443  003660  6E1F               	movwf	(??___fladd+2)^0,c
  7444  003662  5018               	movf	(___fladd@b+3)^0,w,c
  7445  003664  581C               	subwfb	(___fladd@a+3)^0,w,c
  7446  003666  6E20               	movwf	(??___fladd+3)^0,c
  7447  003668  0EFF               	movlw	255
  7448  00366A  241D               	addwf	??___fladd^0,w,c
  7449  00366C  6E15               	movwf	___fladd@b^0,c
  7450  00366E  0EFF               	movlw	255
  7451  003670  201E               	addwfc	(??___fladd+1)^0,w,c
  7452  003672  6E16               	movwf	(___fladd@b+1)^0,c
  7453  003674  0EFF               	movlw	255
  7454  003676  201F               	addwfc	(??___fladd+2)^0,w,c
  7455  003678  6E17               	movwf	(___fladd@b+2)^0,c
  7456  00367A  0EFF               	movlw	255
  7457  00367C  2020               	addwfc	(??___fladd+3)^0,w,c
  7458  00367E  6E18               	movwf	(___fladd@b+3)^0,c
  7459  003680  0E80               	movlw	128
  7460  003682  1A21               	xorwf	___fladd@signs^0,f,c
  7461                           
  7462                           ; BSR set to: 0
  7463  003684  6C24               	negf	___fladd@grs^0,c
  7464                           
  7465                           ; BSR set to: 0
  7466  003686  5024               	movf	___fladd@grs^0,w,c
  7467  003688  A4D8               	btfss	status,2,c
  7468  00368A  D00F               	goto	l1789
  7469                           
  7470                           ; BSR set to: 0
  7471  00368C  0E01               	movlw	1
  7472  00368E  2615               	addwf	___fladd@b^0,f,c
  7473  003690  0E00               	movlw	0
  7474  003692  2216               	addwfc	(___fladd@b+1)^0,f,c
  7475  003694  2217               	addwfc	(___fladd@b+2)^0,f,c
  7476  003696  2218               	addwfc	(___fladd@b+3)^0,f,c
  7477  003698  D008               	goto	l1789
  7478  00369A                     l9041:
  7479                           
  7480                           ; BSR set to: 0
  7481  00369A  5019               	movf	___fladd@a^0,w,c
  7482  00369C  5E15               	subwf	___fladd@b^0,f,c
  7483  00369E  501A               	movf	(___fladd@a+1)^0,w,c
  7484  0036A0  5A16               	subwfb	(___fladd@b+1)^0,f,c
  7485  0036A2  501B               	movf	(___fladd@a+2)^0,w,c
  7486  0036A4  5A17               	subwfb	(___fladd@b+2)^0,f,c
  7487  0036A6  501C               	movf	(___fladd@a+3)^0,w,c
  7488  0036A8  5A18               	subwfb	(___fladd@b+3)^0,f,c
  7489  0036AA                     l1789:
  7490                           
  7491                           ; BSR set to: 0
  7492  0036AA  5015               	movf	___fladd@b^0,w,c
  7493  0036AC  1016               	iorwf	(___fladd@b+1)^0,w,c
  7494  0036AE  1017               	iorwf	(___fladd@b+2)^0,w,c
  7495  0036B0  1018               	iorwf	(___fladd@b+3)^0,w,c
  7496  0036B2  A4D8               	btfss	status,2,c
  7497  0036B4  D01C               	goto	l9065
  7498                           
  7499                           ; BSR set to: 0
  7500  0036B6  5024               	movf	___fladd@grs^0,w,c
  7501  0036B8  A4D8               	btfss	status,2,c
  7502  0036BA  D019               	goto	l9065
  7503                           
  7504                           ; BSR set to: 0
  7505  0036BC  0E00               	movlw	0
  7506  0036BE  6E15               	movwf	?___fladd^0,c
  7507  0036C0  0E00               	movlw	0
  7508  0036C2  6E16               	movwf	(?___fladd+1)^0,c
  7509  0036C4  0E00               	movlw	0
  7510  0036C6  6E17               	movwf	(?___fladd+2)^0,c
  7511  0036C8  0E00               	movlw	0
  7512  0036CA  6E18               	movwf	(?___fladd+3)^0,c
  7513  0036CC  0012               	return	
  7514  0036CE                     l9049:
  7515                           
  7516                           ; BSR set to: 0
  7517  0036CE  90D8               	bcf	status,0,c
  7518  0036D0  3615               	rlcf	___fladd@b^0,f,c
  7519  0036D2  3616               	rlcf	(___fladd@b+1)^0,f,c
  7520  0036D4  3617               	rlcf	(___fladd@b+2)^0,f,c
  7521  0036D6  3618               	rlcf	(___fladd@b+3)^0,f,c
  7522                           
  7523                           ; BSR set to: 0
  7524  0036D8  BE24               	btfsc	___fladd@grs^0,7,c
  7525                           
  7526                           ; BSR set to: 0
  7527  0036DA  8015               	bsf	___fladd@b^0,0,c
  7528                           
  7529                           ; BSR set to: 0
  7530  0036DC  A024               	btfss	___fladd@grs^0,0,c
  7531  0036DE  D002               	goto	l9059
  7532                           
  7533                           ; BSR set to: 0
  7534  0036E0  80D8               	bsf	status,0,c
  7535  0036E2  D001               	goto	L10
  7536  0036E4                     l9059:
  7537                           
  7538                           ; BSR set to: 0
  7539  0036E4  90D8               	bcf	status,0,c
  7540  0036E6                     L10:
  7541  0036E6  3624               	rlcf	___fladd@grs^0,f,c
  7542                           
  7543                           ; BSR set to: 0
  7544  0036E8  5023               	movf	___fladd@bexp^0,w,c
  7545  0036EA  A4D8               	btfss	status,2,c
  7546                           
  7547                           ; BSR set to: 0
  7548  0036EC  0623               	decf	___fladd@bexp^0,f,c
  7549  0036EE                     l9065:
  7550                           
  7551                           ; BSR set to: 0
  7552  0036EE  AE17               	btfss	(___fladd@b+2)^0,7,c
  7553  0036F0  D7EE               	goto	l9049
  7554  0036F2                     u9840:
  7555                           
  7556                           ; BSR set to: 0
  7557  0036F2  0E00               	movlw	0
  7558  0036F4  6E22               	movwf	___fladd@aexp^0,c
  7559                           
  7560                           ; BSR set to: 0
  7561  0036F6  AE24               	btfss	___fladd@grs^0,7,c
  7562  0036F8  D00B               	goto	l1798
  7563                           
  7564                           ; BSR set to: 0
  7565  0036FA  C024  F01D         	movff	___fladd@grs,??___fladd
  7566  0036FE  0E7F               	movlw	127
  7567  003700  161D               	andwf	??___fladd^0,f,c
  7568  003702  B4D8               	btfsc	status,2,c
  7569  003704  D003               	goto	l1799
  7570  003706                     u9860:
  7571                           
  7572                           ; BSR set to: 0
  7573  003706  0E01               	movlw	1
  7574  003708  6E22               	movwf	___fladd@aexp^0,c
  7575  00370A  D002               	goto	l1798
  7576  00370C                     l1799:
  7577                           
  7578                           ; BSR set to: 0
  7579  00370C  B015               	btfsc	___fladd@b^0,0,c
  7580  00370E  D7FB               	goto	u9860
  7581  003710                     l1798:
  7582                           
  7583                           ; BSR set to: 0
  7584  003710  5022               	movf	___fladd@aexp^0,w,c
  7585  003712  B4D8               	btfsc	status,2,c
  7586  003714  D020               	goto	l9085
  7587                           
  7588                           ; BSR set to: 0
  7589  003716  0E01               	movlw	1
  7590  003718  2615               	addwf	___fladd@b^0,f,c
  7591  00371A  0E00               	movlw	0
  7592  00371C  2216               	addwfc	(___fladd@b+1)^0,f,c
  7593  00371E  2217               	addwfc	(___fladd@b+2)^0,f,c
  7594  003720  2218               	addwfc	(___fladd@b+3)^0,f,c
  7595                           
  7596                           ; BSR set to: 0
  7597  003722  A018               	btfss	(___fladd@b+3)^0,0,c
  7598  003724  D018               	goto	l9085
  7599                           
  7600                           ; BSR set to: 0
  7601  003726  C015  F01D         	movff	___fladd@b,??___fladd
  7602  00372A  C016  F01E         	movff	___fladd@b+1,??___fladd+1
  7603  00372E  C017  F01F         	movff	___fladd@b+2,??___fladd+2
  7604  003732  C018  F020         	movff	___fladd@b+3,??___fladd+3
  7605  003736  3420               	rlcf	(??___fladd+3)^0,w,c
  7606  003738  3220               	rrcf	(??___fladd+3)^0,f,c
  7607  00373A  321F               	rrcf	(??___fladd+2)^0,f,c
  7608  00373C  321E               	rrcf	(??___fladd+1)^0,f,c
  7609  00373E  321D               	rrcf	??___fladd^0,f,c
  7610  003740  C01D  F015         	movff	??___fladd,___fladd@b
  7611  003744  C01E  F016         	movff	??___fladd+1,___fladd@b+1
  7612  003748  C01F  F017         	movff	??___fladd+2,___fladd@b+2
  7613  00374C  C020  F018         	movff	??___fladd+3,___fladd@b+3
  7614  003750  2823               	incf	___fladd@bexp^0,w,c
  7615  003752  A4D8               	btfss	status,2,c
  7616                           
  7617                           ; BSR set to: 0
  7618  003754  2A23               	incf	___fladd@bexp^0,f,c
  7619  003756                     l9085:
  7620                           
  7621                           ; BSR set to: 0
  7622  003756  2823               	incf	___fladd@bexp^0,w,c
  7623  003758  B4D8               	btfsc	status,2,c
  7624  00375A  D003               	goto	u9920
  7625                           
  7626                           ; BSR set to: 0
  7627  00375C  5023               	movf	___fladd@bexp^0,w,c
  7628  00375E  A4D8               	btfss	status,2,c
  7629  003760  D00D               	goto	l9093
  7630  003762                     u9920:
  7631                           
  7632                           ; BSR set to: 0
  7633  003762  0E00               	movlw	0
  7634  003764  6E15               	movwf	___fladd@b^0,c
  7635  003766  0E00               	movlw	0
  7636  003768  6E16               	movwf	(___fladd@b+1)^0,c
  7637  00376A  0E00               	movlw	0
  7638  00376C  6E17               	movwf	(___fladd@b+2)^0,c
  7639  00376E  0E00               	movlw	0
  7640  003770  6E18               	movwf	(___fladd@b+3)^0,c
  7641  003772  5023               	movf	___fladd@bexp^0,w,c
  7642  003774  A4D8               	btfss	status,2,c
  7643  003776  D002               	goto	l9093
  7644                           
  7645                           ; BSR set to: 0
  7646  003778  0E00               	movlw	0
  7647  00377A  6E21               	movwf	___fladd@signs^0,c
  7648  00377C                     l9093:
  7649                           
  7650                           ; BSR set to: 0
  7651  00377C  A023               	btfss	___fladd@bexp^0,0,c
  7652  00377E  D002               	goto	l9097
  7653                           
  7654                           ; BSR set to: 0
  7655  003780  8E17               	bsf	(___fladd@b+2)^0,7,c
  7656  003782  D001               	goto	l9099
  7657  003784                     l9097:
  7658                           
  7659                           ; BSR set to: 0
  7660  003784  9E17               	bcf	(___fladd@b+2)^0,7,c
  7661  003786                     l9099:
  7662                           
  7663                           ; BSR set to: 0
  7664  003786  90D8               	bcf	status,0,c
  7665  003788  3023               	rrcf	___fladd@bexp^0,w,c
  7666  00378A  6E18               	movwf	(___fladd@b+3)^0,c
  7667                           
  7668                           ; BSR set to: 0
  7669  00378C  BE21               	btfsc	___fladd@signs^0,7,c
  7670                           
  7671                           ; BSR set to: 0
  7672  00378E  8E18               	bsf	(___fladd@b+3)^0,7,c
  7673                           
  7674                           ; BSR set to: 0
  7675  003790  C015  F015         	movff	___fladd@b,?___fladd
  7676  003794  C016  F016         	movff	___fladd@b+1,?___fladd+1
  7677  003798  C017  F017         	movff	___fladd@b+2,?___fladd+2
  7678  00379C  C018  F018         	movff	___fladd@b+3,?___fladd+3
  7679                           
  7680                           ; BSR set to: 0
  7681  0037A0  0012               	return		;funcret
  7682  0037A2                     __end_of___fladd:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function ___flneg *****************
  7686 ;; Defined at:
  7687 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  f1              4   20[COMRAM] unsigned char 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  4   20[COMRAM] unsigned char 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0
  7696 ;; Tracked objects:
  7697 ;;		On entry : 3F/0
  7698 ;;		On exit  : 3F/0
  7699 ;;		Unchanged: 3F/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7701 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7704 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7705 ;;Total ram usage:        4 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 4
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_efgtoa
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text21
  7716  005A7C                     __ptext21:
  7717                           	callstack 0
  7718  005A7C                     ___flneg:
  7719                           	callstack 20
  7720                           
  7721                           ; BSR set to: 0
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;incstack = 0
  7725  005A7C  5015               	movf	___flneg@f1^0,w,c
  7726  005A7E  1016               	iorwf	(___flneg@f1+1)^0,w,c
  7727  005A80  1017               	iorwf	(___flneg@f1+2)^0,w,c
  7728  005A82  1018               	iorwf	(___flneg@f1+3)^0,w,c
  7729  005A84  B4D8               	btfsc	status,2,c
  7730  005A86  D008               	goto	l9523
  7731                           
  7732                           ; BSR set to: 0
  7733  005A88  0E00               	movlw	0
  7734  005A8A  1A15               	xorwf	___flneg@f1^0,f,c
  7735  005A8C  0E00               	movlw	0
  7736  005A8E  1A16               	xorwf	(___flneg@f1+1)^0,f,c
  7737  005A90  0E00               	movlw	0
  7738  005A92  1A17               	xorwf	(___flneg@f1+2)^0,f,c
  7739  005A94  0E80               	movlw	128
  7740  005A96  1A18               	xorwf	(___flneg@f1+3)^0,f,c
  7741  005A98                     l9523:
  7742                           
  7743                           ; BSR set to: 0
  7744  005A98  C015  F015         	movff	___flneg@f1,?___flneg
  7745  005A9C  C016  F016         	movff	___flneg@f1+1,?___flneg+1
  7746  005AA0  C017  F017         	movff	___flneg@f1+2,?___flneg+2
  7747  005AA4  C018  F018         	movff	___flneg@f1+3,?___flneg+3
  7748                           
  7749                           ; BSR set to: 0
  7750  005AA8  0012               	return		;funcret
  7751  005AAA                     __end_of___flneg:
  7752                           	callstack 0
  7753                           
  7754 ;; *************** function ___flmul *****************
  7755 ;; Defined at:
  7756 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  b               4   34[COMRAM] unsigned char 
  7759 ;;  a               4   38[COMRAM] unsigned char 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;  prod            4    7[BANK0 ] struct .
  7762 ;;  grs             4    3[BANK0 ] unsigned long 
  7763 ;;  temp            2   11[BANK0 ] struct .
  7764 ;;  bexp            1    2[BANK0 ] unsigned char 
  7765 ;;  aexp            1    1[BANK0 ] unsigned char 
  7766 ;;  sign            1    0[BANK0 ] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  4   34[COMRAM] unsigned char 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0, prodl, prodh
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 3F/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7776 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7777 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7778 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7779 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7780 ;;Total ram usage:       25 bytes
  7781 ;; Hardware stack levels used: 1
  7782 ;; Hardware stack levels required when called: 4
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		_main
  7787 ;;		_efgtoa
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	text22
  7792  003144                     __ptext22:
  7793                           	callstack 0
  7794  003144                     ___flmul:
  7795                           	callstack 20
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;incstack = 0
  7799  003144  5026               	movf	(___flmul@b+3)^0,w,c
  7800  003146  0B80               	andlw	128
  7801  003148  0100               	movlb	0	; () banked
  7802  00314A  6F60               	movwf	___flmul@sign& (0+255),b
  7803  00314C  5026               	movf	(___flmul@b+3)^0,w,c
  7804  00314E  2426               	addwf	(___flmul@b+3)^0,w,c
  7805  003150  6F62               	movwf	___flmul@bexp& (0+255),b
  7806                           
  7807                           ; BSR set to: 0
  7808  003152  BE25               	btfsc	(___flmul@b+2)^0,7,c
  7809                           
  7810                           ; BSR set to: 0
  7811  003154  8162               	bsf	___flmul@bexp& (0+255),0,b
  7812                           
  7813                           ; BSR set to: 0
  7814  003156  5162               	movf	___flmul@bexp& (0+255),w,b
  7815  003158  B4D8               	btfsc	status,2,c
  7816  00315A  D00D               	goto	l9279
  7817                           
  7818                           ; BSR set to: 0
  7819  00315C  2962               	incf	___flmul@bexp& (0+255),w,b
  7820  00315E  A4D8               	btfss	status,2,c
  7821  003160  D008               	goto	l9277
  7822                           
  7823                           ; BSR set to: 0
  7824  003162  0E00               	movlw	0
  7825  003164  6E23               	movwf	___flmul@b^0,c
  7826  003166  0E00               	movlw	0
  7827  003168  6E24               	movwf	(___flmul@b+1)^0,c
  7828  00316A  0E00               	movlw	0
  7829  00316C  6E25               	movwf	(___flmul@b+2)^0,c
  7830  00316E  0E00               	movlw	0
  7831  003170  6E26               	movwf	(___flmul@b+3)^0,c
  7832  003172                     l9277:
  7833                           
  7834                           ; BSR set to: 0
  7835  003172  8E25               	bsf	(___flmul@b+2)^0,7,c
  7836  003174  D008               	goto	l9281
  7837  003176                     l9279:
  7838                           
  7839                           ; BSR set to: 0
  7840  003176  0E00               	movlw	0
  7841  003178  6E23               	movwf	___flmul@b^0,c
  7842  00317A  0E00               	movlw	0
  7843  00317C  6E24               	movwf	(___flmul@b+1)^0,c
  7844  00317E  0E00               	movlw	0
  7845  003180  6E25               	movwf	(___flmul@b+2)^0,c
  7846  003182  0E00               	movlw	0
  7847  003184  6E26               	movwf	(___flmul@b+3)^0,c
  7848  003186                     l9281:
  7849                           
  7850                           ; BSR set to: 0
  7851  003186  502A               	movf	(___flmul@a+3)^0,w,c
  7852  003188  0B80               	andlw	128
  7853  00318A  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7854                           
  7855                           ; BSR set to: 0
  7856  00318C  502A               	movf	(___flmul@a+3)^0,w,c
  7857  00318E  242A               	addwf	(___flmul@a+3)^0,w,c
  7858  003190  6F61               	movwf	___flmul@aexp& (0+255),b
  7859                           
  7860                           ; BSR set to: 0
  7861  003192  BE29               	btfsc	(___flmul@a+2)^0,7,c
  7862                           
  7863                           ; BSR set to: 0
  7864  003194  8161               	bsf	___flmul@aexp& (0+255),0,b
  7865                           
  7866                           ; BSR set to: 0
  7867  003196  5161               	movf	___flmul@aexp& (0+255),w,b
  7868  003198  B4D8               	btfsc	status,2,c
  7869  00319A  D00D               	goto	l9297
  7870                           
  7871                           ; BSR set to: 0
  7872  00319C  2961               	incf	___flmul@aexp& (0+255),w,b
  7873  00319E  A4D8               	btfss	status,2,c
  7874  0031A0  D008               	goto	l9295
  7875                           
  7876                           ; BSR set to: 0
  7877  0031A2  0E00               	movlw	0
  7878  0031A4  6E27               	movwf	___flmul@a^0,c
  7879  0031A6  0E00               	movlw	0
  7880  0031A8  6E28               	movwf	(___flmul@a+1)^0,c
  7881  0031AA  0E00               	movlw	0
  7882  0031AC  6E29               	movwf	(___flmul@a+2)^0,c
  7883  0031AE  0E00               	movlw	0
  7884  0031B0  6E2A               	movwf	(___flmul@a+3)^0,c
  7885  0031B2                     l9295:
  7886                           
  7887                           ; BSR set to: 0
  7888  0031B2  8E29               	bsf	(___flmul@a+2)^0,7,c
  7889  0031B4  D008               	goto	l1858
  7890  0031B6                     l9297:
  7891                           
  7892                           ; BSR set to: 0
  7893  0031B6  0E00               	movlw	0
  7894  0031B8  6E27               	movwf	___flmul@a^0,c
  7895  0031BA  0E00               	movlw	0
  7896  0031BC  6E28               	movwf	(___flmul@a+1)^0,c
  7897  0031BE  0E00               	movlw	0
  7898  0031C0  6E29               	movwf	(___flmul@a+2)^0,c
  7899  0031C2  0E00               	movlw	0
  7900  0031C4  6E2A               	movwf	(___flmul@a+3)^0,c
  7901  0031C6                     l1858:
  7902                           
  7903                           ; BSR set to: 0
  7904  0031C6  5161               	movf	___flmul@aexp& (0+255),w,b
  7905  0031C8  B4D8               	btfsc	status,2,c
  7906  0031CA  D003               	goto	u10300
  7907                           
  7908                           ; BSR set to: 0
  7909  0031CC  5162               	movf	___flmul@bexp& (0+255),w,b
  7910  0031CE  A4D8               	btfss	status,2,c
  7911  0031D0  D009               	goto	l9305
  7912  0031D2                     u10300:
  7913                           
  7914                           ; BSR set to: 0
  7915  0031D2  0E00               	movlw	0
  7916  0031D4  6E23               	movwf	?___flmul^0,c
  7917  0031D6  0E00               	movlw	0
  7918  0031D8  6E24               	movwf	(?___flmul+1)^0,c
  7919  0031DA  0E00               	movlw	0
  7920  0031DC  6E25               	movwf	(?___flmul+2)^0,c
  7921  0031DE  0E00               	movlw	0
  7922  0031E0  6E26               	movwf	(?___flmul+3)^0,c
  7923  0031E2  0012               	return	
  7924  0031E4                     l9305:
  7925                           
  7926                           ; BSR set to: 0
  7927  0031E4  5029               	movf	(___flmul@a+2)^0,w,c
  7928  0031E6  0223               	mulwf	___flmul@b^0,c
  7929  0031E8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7930  0031EE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7931                           
  7932                           ; BSR set to: 0
  7933  0031F4  516B               	movf	___flmul@temp& (0+255),w,b
  7934  0031F6  6F63               	movwf	___flmul@grs& (0+255),b
  7935  0031F8  6B64               	clrf	(___flmul@grs+1)& (0+255),b
  7936  0031FA  6B65               	clrf	(___flmul@grs+2)& (0+255),b
  7937  0031FC  6B66               	clrf	(___flmul@grs+3)& (0+255),b
  7938                           
  7939                           ; BSR set to: 0
  7940  0031FE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7941  003200  6F67               	movwf	___flmul@prod& (0+255),b
  7942  003202  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7943  003204  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7944  003206  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7945  003208  5028               	movf	(___flmul@a+1)^0,w,c
  7946  00320A  0224               	mulwf	(___flmul@b+1)^0,c
  7947  00320C  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7948  003212  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7949                           
  7950                           ; BSR set to: 0
  7951  003218  516B               	movf	___flmul@temp& (0+255),w,b
  7952  00321A  2763               	addwf	___flmul@grs& (0+255),f,b
  7953  00321C  0E00               	movlw	0
  7954  00321E  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7955  003220  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7956  003222  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7957                           
  7958                           ; BSR set to: 0
  7959  003224  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7960  003226  2767               	addwf	___flmul@prod& (0+255),f,b
  7961  003228  0E00               	movlw	0
  7962  00322A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7963  00322C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7964  00322E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7965  003230  5027               	movf	___flmul@a^0,w,c
  7966  003232  0225               	mulwf	(___flmul@b+2)^0,c
  7967  003234  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7968  00323A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7969                           
  7970                           ; BSR set to: 0
  7971  003240  516B               	movf	___flmul@temp& (0+255),w,b
  7972  003242  2763               	addwf	___flmul@grs& (0+255),f,b
  7973  003244  0E00               	movlw	0
  7974  003246  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7975  003248  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7976  00324A  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7977                           
  7978                           ; BSR set to: 0
  7979  00324C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7980  00324E  2767               	addwf	___flmul@prod& (0+255),f,b
  7981  003250  0E00               	movlw	0
  7982  003252  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7983  003254  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7984  003256  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7985                           
  7986                           ; BSR set to: 0
  7987  003258  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  7988  00325C  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  7989  003260  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  7990  003264  6B63               	clrf	___flmul@grs& (0+255),b
  7991                           
  7992                           ; BSR set to: 0
  7993  003266  5027               	movf	___flmul@a^0,w,c
  7994  003268  0224               	mulwf	(___flmul@b+1)^0,c
  7995  00326A  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7996  003270  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7997                           
  7998                           ; BSR set to: 0
  7999  003276  516B               	movf	___flmul@temp& (0+255),w,b
  8000  003278  2763               	addwf	___flmul@grs& (0+255),f,b
  8001  00327A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8002  00327C  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8003  00327E  0E00               	movlw	0
  8004  003280  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8005  003282  0E00               	movlw	0
  8006  003284  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8007                           
  8008                           ; BSR set to: 0
  8009  003286  5028               	movf	(___flmul@a+1)^0,w,c
  8010  003288  0223               	mulwf	___flmul@b^0,c
  8011  00328A  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8012  003290  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8013                           
  8014                           ; BSR set to: 0
  8015  003296  516B               	movf	___flmul@temp& (0+255),w,b
  8016  003298  2763               	addwf	___flmul@grs& (0+255),f,b
  8017  00329A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8018  00329C  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8019  00329E  0E00               	movlw	0
  8020  0032A0  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8021  0032A2  0E00               	movlw	0
  8022  0032A4  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8023                           
  8024                           ; BSR set to: 0
  8025  0032A6  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8026  0032AA  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8027  0032AE  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8028  0032B2  6B63               	clrf	___flmul@grs& (0+255),b
  8029  0032B4  5027               	movf	___flmul@a^0,w,c
  8030  0032B6  0223               	mulwf	___flmul@b^0,c
  8031  0032B8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8032  0032BE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8033                           
  8034                           ; BSR set to: 0
  8035  0032C4  516B               	movf	___flmul@temp& (0+255),w,b
  8036  0032C6  2763               	addwf	___flmul@grs& (0+255),f,b
  8037  0032C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8038  0032CA  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8039  0032CC  0E00               	movlw	0
  8040  0032CE  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8041  0032D0  0E00               	movlw	0
  8042  0032D2  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8043                           
  8044                           ; BSR set to: 0
  8045  0032D4  5029               	movf	(___flmul@a+2)^0,w,c
  8046  0032D6  0224               	mulwf	(___flmul@b+1)^0,c
  8047  0032D8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8048  0032DE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8049  0032E4  516B               	movf	___flmul@temp& (0+255),w,b
  8050  0032E6  2767               	addwf	___flmul@prod& (0+255),f,b
  8051  0032E8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8052  0032EA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8053  0032EC  0E00               	movlw	0
  8054  0032EE  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8055  0032F0  0E00               	movlw	0
  8056  0032F2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8057                           
  8058                           ; BSR set to: 0
  8059  0032F4  5028               	movf	(___flmul@a+1)^0,w,c
  8060  0032F6  0225               	mulwf	(___flmul@b+2)^0,c
  8061  0032F8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8062  0032FE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8063                           
  8064                           ; BSR set to: 0
  8065  003304  516B               	movf	___flmul@temp& (0+255),w,b
  8066  003306  2767               	addwf	___flmul@prod& (0+255),f,b
  8067  003308  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8068  00330A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8069  00330C  0E00               	movlw	0
  8070  00330E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8071  003310  0E00               	movlw	0
  8072  003312  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8073  003314  5029               	movf	(___flmul@a+2)^0,w,c
  8074  003316  0225               	mulwf	(___flmul@b+2)^0,c
  8075  003318  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8076  00331E  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8077                           
  8078                           ; BSR set to: 0
  8079  003324  516B               	movf	___flmul@temp& (0+255),w,b
  8080  003326  6E2B               	movwf	??___flmul^0,c
  8081  003328  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8082  00332A  6E2C               	movwf	(??___flmul+1)^0,c
  8083  00332C  6A2D               	clrf	(??___flmul+2)^0,c
  8084  00332E  6A2E               	clrf	(??___flmul+3)^0,c
  8085  003330  C02D  F02E         	movff	??___flmul+2,??___flmul+3
  8086  003334  C02C  F02D         	movff	??___flmul+1,??___flmul+2
  8087  003338  C02B  F02C         	movff	??___flmul,??___flmul+1
  8088  00333C  6A2B               	clrf	??___flmul^0,c
  8089  00333E  502B               	movf	??___flmul^0,w,c
  8090  003340  2767               	addwf	___flmul@prod& (0+255),f,b
  8091  003342  502C               	movf	(??___flmul+1)^0,w,c
  8092  003344  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8093  003346  502D               	movf	(??___flmul+2)^0,w,c
  8094  003348  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8095  00334A  502E               	movf	(??___flmul+3)^0,w,c
  8096  00334C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8097                           
  8098                           ; BSR set to: 0
  8099  00334E  5166               	movf	(___flmul@grs+3)& (0+255),w,b
  8100  003350  2767               	addwf	___flmul@prod& (0+255),f,b
  8101  003352  0E00               	movlw	0
  8102  003354  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8103  003356  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8104  003358  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8105                           
  8106                           ; BSR set to: 0
  8107  00335A  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8108  00335E  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8109  003362  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8110  003366  6B63               	clrf	___flmul@grs& (0+255),b
  8111                           
  8112                           ; BSR set to: 0
  8113  003368  5161               	movf	___flmul@aexp& (0+255),w,b
  8114  00336A  C062  F02B         	movff	___flmul@bexp,??___flmul
  8115  00336E  6A2C               	clrf	(??___flmul+1)^0,c
  8116  003370  262B               	addwf	??___flmul^0,f,c
  8117  003372  0E00               	movlw	0
  8118  003374  222C               	addwfc	(??___flmul+1)^0,f,c
  8119  003376  0E82               	movlw	130
  8120  003378  242B               	addwf	??___flmul^0,w,c
  8121  00337A  6F6B               	movwf	___flmul@temp& (0+255),b
  8122  00337C  0EFF               	movlw	255
  8123  00337E  202C               	addwfc	(??___flmul+1)^0,w,c
  8124  003380  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  8125  003382  D00F               	goto	l9353
  8126  003384                     l9347:
  8127                           
  8128                           ; BSR set to: 0
  8129  003384  90D8               	bcf	status,0,c
  8130  003386  3767               	rlcf	___flmul@prod& (0+255),f,b
  8131  003388  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8132  00338A  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8133  00338C  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8134                           
  8135                           ; BSR set to: 0
  8136  00338E  BF66               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8137                           
  8138                           ; BSR set to: 0
  8139  003390  8167               	bsf	___flmul@prod& (0+255),0,b
  8140                           
  8141                           ; BSR set to: 0
  8142  003392  90D8               	bcf	status,0,c
  8143  003394  3763               	rlcf	___flmul@grs& (0+255),f,b
  8144  003396  3764               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8145  003398  3765               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8146  00339A  3766               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8147  00339C  076B               	decf	___flmul@temp& (0+255),f,b
  8148  00339E  A0D8               	btfss	status,0,c
  8149  0033A0  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  8150  0033A2                     l9353:
  8151                           
  8152                           ; BSR set to: 0
  8153  0033A2  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  8154  0033A4  D7EF               	goto	l9347
  8155                           
  8156                           ; BSR set to: 0
  8157  0033A6  0E00               	movlw	0
  8158  0033A8  6F61               	movwf	___flmul@aexp& (0+255),b
  8159                           
  8160                           ; BSR set to: 0
  8161  0033AA  AF66               	btfss	(___flmul@grs+3)& (0+255),7,b
  8162  0033AC  D017               	goto	l1867
  8163                           
  8164                           ; BSR set to: 0
  8165  0033AE  0EFF               	movlw	255
  8166  0033B0  1563               	andwf	___flmul@grs& (0+255),w,b
  8167  0033B2  6E2B               	movwf	??___flmul^0,c
  8168  0033B4  0EFF               	movlw	255
  8169  0033B6  1564               	andwf	(___flmul@grs+1)& (0+255),w,b
  8170  0033B8  6E2C               	movwf	(??___flmul+1)^0,c
  8171  0033BA  0EFF               	movlw	255
  8172  0033BC  1565               	andwf	(___flmul@grs+2)& (0+255),w,b
  8173  0033BE  6E2D               	movwf	(??___flmul+2)^0,c
  8174  0033C0  0E7F               	movlw	127
  8175  0033C2  1566               	andwf	(___flmul@grs+3)& (0+255),w,b
  8176  0033C4  6E2E               	movwf	(??___flmul+3)^0,c
  8177  0033C6  502B               	movf	??___flmul^0,w,c
  8178  0033C8  102C               	iorwf	(??___flmul+1)^0,w,c
  8179  0033CA  102D               	iorwf	(??___flmul+2)^0,w,c
  8180  0033CC  102E               	iorwf	(??___flmul+3)^0,w,c
  8181  0033CE  B4D8               	btfsc	status,2,c
  8182  0033D0  D003               	goto	l1868
  8183  0033D2                     u10340:
  8184                           
  8185                           ; BSR set to: 0
  8186  0033D2  0E01               	movlw	1
  8187  0033D4  6F61               	movwf	___flmul@aexp& (0+255),b
  8188  0033D6  D002               	goto	l1867
  8189  0033D8                     l1868:
  8190                           
  8191                           ; BSR set to: 0
  8192  0033D8  B167               	btfsc	___flmul@prod& (0+255),0,b
  8193  0033DA  D7FB               	goto	u10340
  8194  0033DC                     l1867:
  8195                           
  8196                           ; BSR set to: 0
  8197  0033DC  5161               	movf	___flmul@aexp& (0+255),w,b
  8198  0033DE  B4D8               	btfsc	status,2,c
  8199  0033E0  D01F               	goto	l9373
  8200                           
  8201                           ; BSR set to: 0
  8202  0033E2  0E01               	movlw	1
  8203  0033E4  2767               	addwf	___flmul@prod& (0+255),f,b
  8204  0033E6  0E00               	movlw	0
  8205  0033E8  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8206  0033EA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8207  0033EC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8208                           
  8209                           ; BSR set to: 0
  8210  0033EE  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  8211  0033F0  D017               	goto	l9373
  8212                           
  8213                           ; BSR set to: 0
  8214  0033F2  C067  F02B         	movff	___flmul@prod,??___flmul
  8215  0033F6  C068  F02C         	movff	___flmul@prod+1,??___flmul+1
  8216  0033FA  C069  F02D         	movff	___flmul@prod+2,??___flmul+2
  8217  0033FE  C06A  F02E         	movff	___flmul@prod+3,??___flmul+3
  8218  003402  342E               	rlcf	(??___flmul+3)^0,w,c
  8219  003404  322E               	rrcf	(??___flmul+3)^0,f,c
  8220  003406  322D               	rrcf	(??___flmul+2)^0,f,c
  8221  003408  322C               	rrcf	(??___flmul+1)^0,f,c
  8222  00340A  322B               	rrcf	??___flmul^0,f,c
  8223  00340C  C02B  F067         	movff	??___flmul,___flmul@prod
  8224  003410  C02C  F068         	movff	??___flmul+1,___flmul@prod+1
  8225  003414  C02D  F069         	movff	??___flmul+2,___flmul@prod+2
  8226  003418  C02E  F06A         	movff	??___flmul+3,___flmul@prod+3
  8227                           
  8228                           ; BSR set to: 0
  8229  00341C  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  8230  00341E  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  8231  003420                     l9373:
  8232                           
  8233                           ; BSR set to: 0
  8234  003420  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8235  003422  D00D               	goto	l9377
  8236  003424  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8237  003426  E103               	bnz	u10380
  8238  003428  296B               	incf	___flmul@temp& (0+255),w,b
  8239  00342A  A0D8               	btfss	status,0,c
  8240  00342C  D008               	goto	l9377
  8241  00342E                     u10380:
  8242                           
  8243                           ; BSR set to: 0
  8244  00342E  0E00               	movlw	0
  8245  003430  6F67               	movwf	___flmul@prod& (0+255),b
  8246  003432  0E00               	movlw	0
  8247  003434  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8248  003436  0E80               	movlw	128
  8249  003438  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8250  00343A  0E7F               	movlw	127
  8251  00343C  D020               	goto	L11
  8252  00343E                     l9377:
  8253                           
  8254                           ; BSR set to: 0
  8255  00343E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8256  003440  D005               	goto	u10390
  8257  003442  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8258  003444  E10E               	bnz	l1875
  8259  003446  056B               	decf	___flmul@temp& (0+255),w,b
  8260  003448  B0D8               	btfsc	status,0,c
  8261  00344A  D00B               	goto	l1875
  8262  00344C                     u10390:
  8263                           
  8264                           ; BSR set to: 0
  8265  00344C  0E00               	movlw	0
  8266  00344E  6F67               	movwf	___flmul@prod& (0+255),b
  8267  003450  0E00               	movlw	0
  8268  003452  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8269  003454  0E00               	movlw	0
  8270  003456  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8271  003458  0E00               	movlw	0
  8272  00345A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8273  00345C  0E00               	movlw	0
  8274  00345E  6F60               	movwf	___flmul@sign& (0+255),b
  8275  003460  D00F               	goto	l9389
  8276  003462                     l1875:
  8277                           
  8278                           ; BSR set to: 0
  8279  003462  C06B  F062         	movff	___flmul@temp,___flmul@bexp
  8280                           
  8281                           ; BSR set to: 0
  8282  003466  0EFF               	movlw	255
  8283  003468  1767               	andwf	___flmul@prod& (0+255),f,b
  8284  00346A  0EFF               	movlw	255
  8285  00346C  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  8286  00346E  0E7F               	movlw	127
  8287  003470  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  8288  003472  0E00               	movlw	0
  8289  003474  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  8290                           
  8291                           ; BSR set to: 0
  8292  003476  B162               	btfsc	___flmul@bexp& (0+255),0,b
  8293                           
  8294                           ; BSR set to: 0
  8295  003478  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  8296                           
  8297                           ; BSR set to: 0
  8298  00347A  90D8               	bcf	status,0,c
  8299  00347C  3162               	rrcf	___flmul@bexp& (0+255),w,b
  8300  00347E                     L11:
  8301  00347E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8302  003480                     l9389:
  8303                           
  8304                           ; BSR set to: 0
  8305  003480  5160               	movf	___flmul@sign& (0+255),w,b
  8306  003482  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8307                           
  8308                           ; BSR set to: 0
  8309  003484  C067  F023         	movff	___flmul@prod,?___flmul
  8310  003488  C068  F024         	movff	___flmul@prod+1,?___flmul+1
  8311  00348C  C069  F025         	movff	___flmul@prod+2,?___flmul+2
  8312  003490  C06A  F026         	movff	___flmul@prod+3,?___flmul+3
  8313                           
  8314                           ; BSR set to: 0
  8315  003494  0012               	return		;funcret
  8316  003496                     __end_of___flmul:
  8317                           	callstack 0
  8318                           
  8319 ;; *************** function ___flge *****************
  8320 ;; Defined at:
  8321 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  ff1             4   46[COMRAM] unsigned char 
  8324 ;;  ff2             4   50[COMRAM] unsigned char 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;		None
  8327 ;; Return value:  Size  Location     Type
  8328 ;;		None               void
  8329 ;; Registers used:
  8330 ;;		wreg, status,2, status,0
  8331 ;; Tracked objects:
  8332 ;;		On entry : 3F/0
  8333 ;;		On exit  : 3F/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8336 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8338 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8339 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8340 ;;Total ram usage:       12 bytes
  8341 ;; Hardware stack levels used: 1
  8342 ;; Hardware stack levels required when called: 4
  8343 ;; This function calls:
  8344 ;;		Nothing
  8345 ;; This function is called by:
  8346 ;;		_efgtoa
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text23
  8351  00495C                     __ptext23:
  8352                           	callstack 0
  8353  00495C                     ___flge:
  8354                           	callstack 20
  8355                           
  8356                           ; BSR set to: 0
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;incstack = 0
  8360  00495C  0E00               	movlw	0
  8361  00495E  142F               	andwf	___flge@ff1^0,w,c
  8362  004960  6F6D               	movwf	??___flge& (0+255),b
  8363  004962  0E00               	movlw	0
  8364  004964  1430               	andwf	(___flge@ff1+1)^0,w,c
  8365  004966  6F6E               	movwf	(??___flge+1)& (0+255),b
  8366  004968  0E80               	movlw	128
  8367  00496A  1431               	andwf	(___flge@ff1+2)^0,w,c
  8368  00496C  6F6F               	movwf	(??___flge+2)& (0+255),b
  8369  00496E  0E7F               	movlw	127
  8370  004970  1432               	andwf	(___flge@ff1+3)^0,w,c
  8371  004972  6F70               	movwf	(??___flge+3)& (0+255),b
  8372  004974  516D               	movf	??___flge& (0+255),w,b
  8373  004976  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8374  004978  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8375  00497A  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8376  00497C  A4D8               	btfss	status,2,c
  8377  00497E  D008               	goto	l9501
  8378                           
  8379                           ; BSR set to: 0
  8380  004980  0E00               	movlw	0
  8381  004982  6E2F               	movwf	___flge@ff1^0,c
  8382  004984  0E00               	movlw	0
  8383  004986  6E30               	movwf	(___flge@ff1+1)^0,c
  8384  004988  0E00               	movlw	0
  8385  00498A  6E31               	movwf	(___flge@ff1+2)^0,c
  8386  00498C  0E00               	movlw	0
  8387  00498E  6E32               	movwf	(___flge@ff1+3)^0,c
  8388  004990                     l9501:
  8389                           
  8390                           ; BSR set to: 0
  8391  004990  0E00               	movlw	0
  8392  004992  1433               	andwf	___flge@ff2^0,w,c
  8393  004994  6F6D               	movwf	??___flge& (0+255),b
  8394  004996  0E00               	movlw	0
  8395  004998  1434               	andwf	(___flge@ff2+1)^0,w,c
  8396  00499A  6F6E               	movwf	(??___flge+1)& (0+255),b
  8397  00499C  0E80               	movlw	128
  8398  00499E  1435               	andwf	(___flge@ff2+2)^0,w,c
  8399  0049A0  6F6F               	movwf	(??___flge+2)& (0+255),b
  8400  0049A2  0E7F               	movlw	127
  8401  0049A4  1436               	andwf	(___flge@ff2+3)^0,w,c
  8402  0049A6  6F70               	movwf	(??___flge+3)& (0+255),b
  8403  0049A8  516D               	movf	??___flge& (0+255),w,b
  8404  0049AA  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8405  0049AC  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8406  0049AE  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8407  0049B0  A4D8               	btfss	status,2,c
  8408  0049B2  D008               	goto	l9505
  8409                           
  8410                           ; BSR set to: 0
  8411  0049B4  0E00               	movlw	0
  8412  0049B6  6E33               	movwf	___flge@ff2^0,c
  8413  0049B8  0E00               	movlw	0
  8414  0049BA  6E34               	movwf	(___flge@ff2+1)^0,c
  8415  0049BC  0E00               	movlw	0
  8416  0049BE  6E35               	movwf	(___flge@ff2+2)^0,c
  8417  0049C0  0E00               	movlw	0
  8418  0049C2  6E36               	movwf	(___flge@ff2+3)^0,c
  8419  0049C4                     l9505:
  8420                           
  8421                           ; BSR set to: 0
  8422  0049C4  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8423  0049C6  D009               	goto	l9509
  8424                           
  8425                           ; BSR set to: 0
  8426  0049C8  6C2F               	negf	___flge@ff1^0,c
  8427  0049CA  1E30               	comf	(___flge@ff1+1)^0,f,c
  8428  0049CC  B0D8               	btfsc	status,0,c
  8429  0049CE  2A30               	incf	(___flge@ff1+1)^0,f,c
  8430  0049D0  1E31               	comf	(___flge@ff1+2)^0,f,c
  8431  0049D2  B0D8               	btfsc	status,0,c
  8432  0049D4  2A31               	incf	(___flge@ff1+2)^0,f,c
  8433  0049D6  0E80               	movlw	128
  8434  0049D8  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8435  0049DA                     l9509:
  8436                           
  8437                           ; BSR set to: 0
  8438  0049DA  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8439  0049DC  D009               	goto	l1509
  8440                           
  8441                           ; BSR set to: 0
  8442  0049DE  6C33               	negf	___flge@ff2^0,c
  8443  0049E0  1E34               	comf	(___flge@ff2+1)^0,f,c
  8444  0049E2  B0D8               	btfsc	status,0,c
  8445  0049E4  2A34               	incf	(___flge@ff2+1)^0,f,c
  8446  0049E6  1E35               	comf	(___flge@ff2+2)^0,f,c
  8447  0049E8  B0D8               	btfsc	status,0,c
  8448  0049EA  2A35               	incf	(___flge@ff2+2)^0,f,c
  8449  0049EC  0E80               	movlw	128
  8450  0049EE  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8451  0049F0                     l1509:
  8452                           
  8453                           ; BSR set to: 0
  8454  0049F0  0E00               	movlw	0
  8455  0049F2  1A2F               	xorwf	___flge@ff1^0,f,c
  8456  0049F4  0E00               	movlw	0
  8457  0049F6  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8458  0049F8  0E00               	movlw	0
  8459  0049FA  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8460  0049FC  0E80               	movlw	128
  8461  0049FE  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8462  004A00  0E00               	movlw	0
  8463  004A02  1A33               	xorwf	___flge@ff2^0,f,c
  8464  004A04  0E00               	movlw	0
  8465  004A06  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8466  004A08  0E00               	movlw	0
  8467  004A0A  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8468  004A0C  0E80               	movlw	128
  8469  004A0E  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8470  004A10  5033               	movf	___flge@ff2^0,w,c
  8471  004A12  5C2F               	subwf	___flge@ff1^0,w,c
  8472  004A14  5034               	movf	(___flge@ff2+1)^0,w,c
  8473  004A16  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8474  004A18  5035               	movf	(___flge@ff2+2)^0,w,c
  8475  004A1A  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8476  004A1C  5036               	movf	(___flge@ff2+3)^0,w,c
  8477  004A1E  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8478  004A20  B0D8               	btfsc	status,0,c
  8479  004A22  D002               	goto	l9515
  8480                           
  8481                           ; BSR set to: 0
  8482  004A24  90D8               	bcf	status,0,c
  8483  004A26  0012               	return	
  8484  004A28                     l9515:
  8485                           
  8486                           ; BSR set to: 0
  8487  004A28  80D8               	bsf	status,0,c
  8488                           
  8489                           ; BSR set to: 0
  8490  004A2A  0012               	return		;funcret
  8491  004A2C                     __end_of___flge:
  8492                           	callstack 0
  8493                           
  8494 ;; *************** function ___fleq *****************
  8495 ;; Defined at:
  8496 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;  ff1             4   20[COMRAM] unsigned char 
  8499 ;;  ff2             4   24[COMRAM] unsigned char 
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;		None
  8502 ;; Return value:  Size  Location     Type
  8503 ;;		None               void
  8504 ;; Registers used:
  8505 ;;		wreg, status,2, status,0
  8506 ;; Tracked objects:
  8507 ;;		On entry : 3F/0
  8508 ;;		On exit  : 3F/0
  8509 ;;		Unchanged: 3F/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8511 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8513 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8514 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8515 ;;Total ram usage:       12 bytes
  8516 ;; Hardware stack levels used: 1
  8517 ;; Hardware stack levels required when called: 4
  8518 ;; This function calls:
  8519 ;;		Nothing
  8520 ;; This function is called by:
  8521 ;;		_efgtoa
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text24
  8526  0051E8                     __ptext24:
  8527                           	callstack 0
  8528  0051E8                     ___fleq:
  8529                           	callstack 20
  8530                           
  8531                           ; BSR set to: 0
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;incstack = 0
  8535  0051E8  0E00               	movlw	0
  8536  0051EA  1415               	andwf	___fleq@ff1^0,w,c
  8537  0051EC  6E1D               	movwf	??___fleq^0,c
  8538  0051EE  0E00               	movlw	0
  8539  0051F0  1416               	andwf	(___fleq@ff1+1)^0,w,c
  8540  0051F2  6E1E               	movwf	(??___fleq+1)^0,c
  8541  0051F4  0E80               	movlw	128
  8542  0051F6  1417               	andwf	(___fleq@ff1+2)^0,w,c
  8543  0051F8  6E1F               	movwf	(??___fleq+2)^0,c
  8544  0051FA  0E7F               	movlw	127
  8545  0051FC  1418               	andwf	(___fleq@ff1+3)^0,w,c
  8546  0051FE  6E20               	movwf	(??___fleq+3)^0,c
  8547  005200  501D               	movf	??___fleq^0,w,c
  8548  005202  101E               	iorwf	(??___fleq+1)^0,w,c
  8549  005204  101F               	iorwf	(??___fleq+2)^0,w,c
  8550  005206  1020               	iorwf	(??___fleq+3)^0,w,c
  8551  005208  A4D8               	btfss	status,2,c
  8552  00520A  D008               	goto	l9485
  8553                           
  8554                           ; BSR set to: 0
  8555  00520C  0E00               	movlw	0
  8556  00520E  6E15               	movwf	___fleq@ff1^0,c
  8557  005210  0E00               	movlw	0
  8558  005212  6E16               	movwf	(___fleq@ff1+1)^0,c
  8559  005214  0E00               	movlw	0
  8560  005216  6E17               	movwf	(___fleq@ff1+2)^0,c
  8561  005218  0E00               	movlw	0
  8562  00521A  6E18               	movwf	(___fleq@ff1+3)^0,c
  8563  00521C                     l9485:
  8564                           
  8565                           ; BSR set to: 0
  8566  00521C  0E00               	movlw	0
  8567  00521E  1419               	andwf	___fleq@ff2^0,w,c
  8568  005220  6E1D               	movwf	??___fleq^0,c
  8569  005222  0E00               	movlw	0
  8570  005224  141A               	andwf	(___fleq@ff2+1)^0,w,c
  8571  005226  6E1E               	movwf	(??___fleq+1)^0,c
  8572  005228  0E80               	movlw	128
  8573  00522A  141B               	andwf	(___fleq@ff2+2)^0,w,c
  8574  00522C  6E1F               	movwf	(??___fleq+2)^0,c
  8575  00522E  0E7F               	movlw	127
  8576  005230  141C               	andwf	(___fleq@ff2+3)^0,w,c
  8577  005232  6E20               	movwf	(??___fleq+3)^0,c
  8578  005234  501D               	movf	??___fleq^0,w,c
  8579  005236  101E               	iorwf	(??___fleq+1)^0,w,c
  8580  005238  101F               	iorwf	(??___fleq+2)^0,w,c
  8581  00523A  1020               	iorwf	(??___fleq+3)^0,w,c
  8582  00523C  A4D8               	btfss	status,2,c
  8583  00523E  D008               	goto	l9489
  8584                           
  8585                           ; BSR set to: 0
  8586  005240  0E00               	movlw	0
  8587  005242  6E19               	movwf	___fleq@ff2^0,c
  8588  005244  0E00               	movlw	0
  8589  005246  6E1A               	movwf	(___fleq@ff2+1)^0,c
  8590  005248  0E00               	movlw	0
  8591  00524A  6E1B               	movwf	(___fleq@ff2+2)^0,c
  8592  00524C  0E00               	movlw	0
  8593  00524E  6E1C               	movwf	(___fleq@ff2+3)^0,c
  8594  005250                     l9489:
  8595                           
  8596                           ; BSR set to: 0
  8597  005250  5019               	movf	___fleq@ff2^0,w,c
  8598  005252  1815               	xorwf	___fleq@ff1^0,w,c
  8599  005254  E10A               	bnz	u10550
  8600  005256  501A               	movf	(___fleq@ff2+1)^0,w,c
  8601  005258  1816               	xorwf	(___fleq@ff1+1)^0,w,c
  8602  00525A  E107               	bnz	u10550
  8603  00525C  501B               	movf	(___fleq@ff2+2)^0,w,c
  8604  00525E  1817               	xorwf	(___fleq@ff1+2)^0,w,c
  8605  005260  E104               	bnz	u10550
  8606  005262  501C               	movf	(___fleq@ff2+3)^0,w,c
  8607  005264  1818               	xorwf	(___fleq@ff1+3)^0,w,c
  8608  005266  B4D8               	btfsc	status,2,c
  8609  005268  D002               	goto	l9493
  8610  00526A                     u10550:
  8611                           
  8612                           ; BSR set to: 0
  8613  00526A  90D8               	bcf	status,0,c
  8614  00526C  0012               	return	
  8615  00526E                     l9493:
  8616                           
  8617                           ; BSR set to: 0
  8618  00526E  80D8               	bsf	status,0,c
  8619                           
  8620                           ; BSR set to: 0
  8621  005270  0012               	return		;funcret
  8622  005272                     __end_of___fleq:
  8623                           	callstack 0
  8624                           
  8625 ;; *************** function ___fldiv *****************
  8626 ;; Defined at:
  8627 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;  b               4   20[COMRAM] unsigned char 
  8630 ;;  a               4   24[COMRAM] unsigned char 
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;  grs             4   39[COMRAM] unsigned long 
  8633 ;;  rem             4   32[COMRAM] unsigned long 
  8634 ;;  new_exp         2   37[COMRAM] short 
  8635 ;;  aexp            1   44[COMRAM] unsigned char 
  8636 ;;  bexp            1   43[COMRAM] unsigned char 
  8637 ;;  sign            1   36[COMRAM] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  4   20[COMRAM] unsigned char 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2, status,0
  8642 ;; Tracked objects:
  8643 ;;		On entry : 3F/0
  8644 ;;		On exit  : 3F/0
  8645 ;;		Unchanged: 3F/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8647 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8648 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8649 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8650 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8651 ;;Total ram usage:       25 bytes
  8652 ;; Hardware stack levels used: 1
  8653 ;; Hardware stack levels required when called: 4
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_efgtoa
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text25
  8662  0037A2                     __ptext25:
  8663                           	callstack 0
  8664  0037A2                     ___fldiv:
  8665                           	callstack 20
  8666                           
  8667                           ; BSR set to: 0
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;incstack = 0
  8671  0037A2  5018               	movf	(___fldiv@b+3)^0,w,c
  8672  0037A4  0B80               	andlw	128
  8673  0037A6  6E25               	movwf	___fldiv@sign^0,c
  8674  0037A8  5018               	movf	(___fldiv@b+3)^0,w,c
  8675  0037AA  2418               	addwf	(___fldiv@b+3)^0,w,c
  8676  0037AC  6E2C               	movwf	___fldiv@bexp^0,c
  8677                           
  8678                           ; BSR set to: 0
  8679  0037AE  BE17               	btfsc	(___fldiv@b+2)^0,7,c
  8680                           
  8681                           ; BSR set to: 0
  8682  0037B0  802C               	bsf	___fldiv@bexp^0,0,c
  8683                           
  8684                           ; BSR set to: 0
  8685  0037B2  502C               	movf	___fldiv@bexp^0,w,c
  8686  0037B4  B4D8               	btfsc	status,2,c
  8687  0037B6  D00D               	goto	l9143
  8688                           
  8689                           ; BSR set to: 0
  8690  0037B8  282C               	incf	___fldiv@bexp^0,w,c
  8691  0037BA  A4D8               	btfss	status,2,c
  8692  0037BC  D008               	goto	l9139
  8693                           
  8694                           ; BSR set to: 0
  8695  0037BE  0E00               	movlw	0
  8696  0037C0  6E15               	movwf	___fldiv@b^0,c
  8697  0037C2  0E00               	movlw	0
  8698  0037C4  6E16               	movwf	(___fldiv@b+1)^0,c
  8699  0037C6  0E00               	movlw	0
  8700  0037C8  6E17               	movwf	(___fldiv@b+2)^0,c
  8701  0037CA  0E00               	movlw	0
  8702  0037CC  6E18               	movwf	(___fldiv@b+3)^0,c
  8703  0037CE                     l9139:
  8704                           
  8705                           ; BSR set to: 0
  8706  0037CE  8E17               	bsf	(___fldiv@b+2)^0,7,c
  8707  0037D0  D006               	goto	L12
  8708  0037D2                     l9143:
  8709                           
  8710                           ; BSR set to: 0
  8711  0037D2  0E00               	movlw	0
  8712  0037D4  6E15               	movwf	___fldiv@b^0,c
  8713  0037D6  0E00               	movlw	0
  8714  0037D8  6E16               	movwf	(___fldiv@b+1)^0,c
  8715  0037DA  0E00               	movlw	0
  8716  0037DC  6E17               	movwf	(___fldiv@b+2)^0,c
  8717  0037DE                     L12:
  8718  0037DE  0E00               	movlw	0
  8719  0037E0  6E18               	movwf	(___fldiv@b+3)^0,c
  8720                           
  8721                           ; BSR set to: 0
  8722  0037E2  501C               	movf	(___fldiv@a+3)^0,w,c
  8723  0037E4  0B80               	andlw	128
  8724  0037E6  1A25               	xorwf	___fldiv@sign^0,f,c
  8725                           
  8726                           ; BSR set to: 0
  8727  0037E8  501C               	movf	(___fldiv@a+3)^0,w,c
  8728  0037EA  241C               	addwf	(___fldiv@a+3)^0,w,c
  8729  0037EC  6E2D               	movwf	___fldiv@aexp^0,c
  8730                           
  8731                           ; BSR set to: 0
  8732  0037EE  BE1B               	btfsc	(___fldiv@a+2)^0,7,c
  8733                           
  8734                           ; BSR set to: 0
  8735  0037F0  802D               	bsf	___fldiv@aexp^0,0,c
  8736                           
  8737                           ; BSR set to: 0
  8738  0037F2  502D               	movf	___fldiv@aexp^0,w,c
  8739  0037F4  B4D8               	btfsc	status,2,c
  8740  0037F6  D00D               	goto	l9163
  8741                           
  8742                           ; BSR set to: 0
  8743  0037F8  282D               	incf	___fldiv@aexp^0,w,c
  8744  0037FA  A4D8               	btfss	status,2,c
  8745  0037FC  D008               	goto	l9159
  8746                           
  8747                           ; BSR set to: 0
  8748  0037FE  0E00               	movlw	0
  8749  003800  6E19               	movwf	___fldiv@a^0,c
  8750  003802  0E00               	movlw	0
  8751  003804  6E1A               	movwf	(___fldiv@a+1)^0,c
  8752  003806  0E00               	movlw	0
  8753  003808  6E1B               	movwf	(___fldiv@a+2)^0,c
  8754  00380A  0E00               	movlw	0
  8755  00380C  6E1C               	movwf	(___fldiv@a+3)^0,c
  8756  00380E                     l9159:
  8757                           
  8758                           ; BSR set to: 0
  8759  00380E  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  8760  003810  D006               	goto	L13
  8761  003812                     l9163:
  8762                           
  8763                           ; BSR set to: 0
  8764  003812  0E00               	movlw	0
  8765  003814  6E19               	movwf	___fldiv@a^0,c
  8766  003816  0E00               	movlw	0
  8767  003818  6E1A               	movwf	(___fldiv@a+1)^0,c
  8768  00381A  0E00               	movlw	0
  8769  00381C  6E1B               	movwf	(___fldiv@a+2)^0,c
  8770  00381E                     L13:
  8771  00381E  0E00               	movlw	0
  8772  003820  6E1C               	movwf	(___fldiv@a+3)^0,c
  8773                           
  8774                           ; BSR set to: 0
  8775  003822  5019               	movf	___fldiv@a^0,w,c
  8776  003824  101A               	iorwf	(___fldiv@a+1)^0,w,c
  8777  003826  101B               	iorwf	(___fldiv@a+2)^0,w,c
  8778  003828  101C               	iorwf	(___fldiv@a+3)^0,w,c
  8779  00382A  A4D8               	btfss	status,2,c
  8780  00382C  D017               	goto	l9177
  8781                           
  8782                           ; BSR set to: 0
  8783  00382E  0E00               	movlw	0
  8784  003830  6E15               	movwf	___fldiv@b^0,c
  8785  003832  0E00               	movlw	0
  8786  003834  6E16               	movwf	(___fldiv@b+1)^0,c
  8787  003836  0E00               	movlw	0
  8788  003838  6E17               	movwf	(___fldiv@b+2)^0,c
  8789  00383A  0E00               	movlw	0
  8790  00383C  6E18               	movwf	(___fldiv@b+3)^0,c
  8791                           
  8792                           ; BSR set to: 0
  8793  00383E  0E80               	movlw	128
  8794  003840  1217               	iorwf	(___fldiv@b+2)^0,f,c
  8795  003842  0E7F               	movlw	127
  8796  003844  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8797  003846                     l9171:
  8798                           
  8799                           ; BSR set to: 0
  8800  003846  5025               	movf	___fldiv@sign^0,w,c
  8801  003848  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8802                           
  8803                           ; BSR set to: 0
  8804  00384A  C015  F015         	movff	___fldiv@b,?___fldiv
  8805  00384E  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  8806  003852  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  8807  003856  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  8808  00385A  0012               	return	
  8809  00385C                     l9177:
  8810                           
  8811                           ; BSR set to: 0
  8812  00385C  502C               	movf	___fldiv@bexp^0,w,c
  8813  00385E  A4D8               	btfss	status,2,c
  8814  003860  D009               	goto	l9185
  8815                           
  8816                           ; BSR set to: 0
  8817                           
  8818                           ; BSR set to: 0
  8819  003862  0E00               	movlw	0
  8820  003864  6E15               	movwf	?___fldiv^0,c
  8821  003866  0E00               	movlw	0
  8822  003868  6E16               	movwf	(?___fldiv+1)^0,c
  8823  00386A  0E00               	movlw	0
  8824  00386C  6E17               	movwf	(?___fldiv+2)^0,c
  8825  00386E  0E00               	movlw	0
  8826  003870  6E18               	movwf	(?___fldiv+3)^0,c
  8827  003872  0012               	return	
  8828  003874                     l9185:
  8829                           
  8830                           ; BSR set to: 0
  8831  003874  502D               	movf	___fldiv@aexp^0,w,c
  8832  003876  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  8833  00387A  6A1E               	clrf	(??___fldiv+1)^0,c
  8834  00387C  5E1D               	subwf	??___fldiv^0,f,c
  8835  00387E  0E00               	movlw	0
  8836  003880  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  8837  003882  0E7F               	movlw	127
  8838  003884  241D               	addwf	??___fldiv^0,w,c
  8839  003886  6E26               	movwf	___fldiv@new_exp^0,c
  8840  003888  0E00               	movlw	0
  8841  00388A  201E               	addwfc	(??___fldiv+1)^0,w,c
  8842  00388C  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  8843                           
  8844                           ; BSR set to: 0
  8845  00388E  C015  F021         	movff	___fldiv@b,___fldiv@rem
  8846  003892  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  8847  003896  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  8848  00389A  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  8849                           
  8850                           ; BSR set to: 0
  8851  00389E  0E00               	movlw	0
  8852  0038A0  6E15               	movwf	___fldiv@b^0,c
  8853  0038A2  0E00               	movlw	0
  8854  0038A4  6E16               	movwf	(___fldiv@b+1)^0,c
  8855  0038A6  0E00               	movlw	0
  8856  0038A8  6E17               	movwf	(___fldiv@b+2)^0,c
  8857  0038AA  0E00               	movlw	0
  8858  0038AC  6E18               	movwf	(___fldiv@b+3)^0,c
  8859                           
  8860                           ; BSR set to: 0
  8861  0038AE  0E00               	movlw	0
  8862  0038B0  6E28               	movwf	___fldiv@grs^0,c
  8863  0038B2  0E00               	movlw	0
  8864  0038B4  6E29               	movwf	(___fldiv@grs+1)^0,c
  8865  0038B6  0E00               	movlw	0
  8866  0038B8  6E2A               	movwf	(___fldiv@grs+2)^0,c
  8867  0038BA  0E00               	movlw	0
  8868  0038BC  6E2B               	movwf	(___fldiv@grs+3)^0,c
  8869                           
  8870                           ; BSR set to: 0
  8871  0038BE  0E00               	movlw	0
  8872  0038C0  6E2D               	movwf	___fldiv@aexp^0,c
  8873  0038C2  D028               	goto	l1828
  8874  0038C4                     l9195:
  8875                           
  8876                           ; BSR set to: 0
  8877  0038C4  502D               	movf	___fldiv@aexp^0,w,c
  8878  0038C6  B4D8               	btfsc	status,2,c
  8879  0038C8  D011               	goto	l9203
  8880                           
  8881                           ; BSR set to: 0
  8882  0038CA  90D8               	bcf	status,0,c
  8883  0038CC  3621               	rlcf	___fldiv@rem^0,f,c
  8884  0038CE  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  8885  0038D0  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  8886  0038D2  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  8887  0038D4  90D8               	bcf	status,0,c
  8888  0038D6  3615               	rlcf	___fldiv@b^0,f,c
  8889  0038D8  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8890  0038DA  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8891  0038DC  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8892                           
  8893                           ; BSR set to: 0
  8894  0038DE  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8895                           
  8896                           ; BSR set to: 0
  8897  0038E0  8015               	bsf	___fldiv@b^0,0,c
  8898                           
  8899                           ; BSR set to: 0
  8900  0038E2  90D8               	bcf	status,0,c
  8901  0038E4  3628               	rlcf	___fldiv@grs^0,f,c
  8902  0038E6  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8903  0038E8  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8904  0038EA  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8905  0038EC                     l9203:
  8906                           
  8907                           ; BSR set to: 0
  8908  0038EC  5019               	movf	___fldiv@a^0,w,c
  8909  0038EE  5C21               	subwf	___fldiv@rem^0,w,c
  8910  0038F0  501A               	movf	(___fldiv@a+1)^0,w,c
  8911  0038F2  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  8912  0038F4  501B               	movf	(___fldiv@a+2)^0,w,c
  8913  0038F6  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  8914  0038F8  501C               	movf	(___fldiv@a+3)^0,w,c
  8915  0038FA  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  8916  0038FC  A0D8               	btfss	status,0,c
  8917  0038FE  D009               	goto	l9209
  8918                           
  8919                           ; BSR set to: 0
  8920  003900  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  8921                           
  8922                           ; BSR set to: 0
  8923  003902  5019               	movf	___fldiv@a^0,w,c
  8924  003904  5E21               	subwf	___fldiv@rem^0,f,c
  8925  003906  501A               	movf	(___fldiv@a+1)^0,w,c
  8926  003908  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  8927  00390A  501B               	movf	(___fldiv@a+2)^0,w,c
  8928  00390C  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  8929  00390E  501C               	movf	(___fldiv@a+3)^0,w,c
  8930  003910  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  8931  003912                     l9209:
  8932                           
  8933                           ; BSR set to: 0
  8934  003912  2A2D               	incf	___fldiv@aexp^0,f,c
  8935  003914                     l1828:
  8936                           
  8937                           ; BSR set to: 0
  8938  003914  0E19               	movlw	25
  8939  003916  642D               	cpfsgt	___fldiv@aexp^0,c
  8940  003918  D7D5               	goto	l9195
  8941                           
  8942                           ; BSR set to: 0
  8943  00391A  5021               	movf	___fldiv@rem^0,w,c
  8944  00391C  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  8945  00391E  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  8946  003920  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  8947  003922  B4D8               	btfsc	status,2,c
  8948  003924  D011               	goto	l9221
  8949                           
  8950                           ; BSR set to: 0
  8951  003926  8028               	bsf	___fldiv@grs^0,0,c
  8952  003928  D00F               	goto	l9221
  8953  00392A                     l9215:
  8954                           
  8955                           ; BSR set to: 0
  8956  00392A  90D8               	bcf	status,0,c
  8957  00392C  3615               	rlcf	___fldiv@b^0,f,c
  8958  00392E  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8959  003930  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8960  003932  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8961                           
  8962                           ; BSR set to: 0
  8963  003934  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8964                           
  8965                           ; BSR set to: 0
  8966  003936  8015               	bsf	___fldiv@b^0,0,c
  8967                           
  8968                           ; BSR set to: 0
  8969  003938  90D8               	bcf	status,0,c
  8970  00393A  3628               	rlcf	___fldiv@grs^0,f,c
  8971  00393C  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8972  00393E  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8973  003940  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8974  003942  0626               	decf	___fldiv@new_exp^0,f,c
  8975  003944  A0D8               	btfss	status,0,c
  8976  003946  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  8977  003948                     l9221:
  8978                           
  8979                           ; BSR set to: 0
  8980  003948  AE17               	btfss	(___fldiv@b+2)^0,7,c
  8981  00394A  D7EF               	goto	l9215
  8982                           
  8983                           ; BSR set to: 0
  8984  00394C  0E00               	movlw	0
  8985  00394E  6E2D               	movwf	___fldiv@aexp^0,c
  8986                           
  8987                           ; BSR set to: 0
  8988  003950  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  8989  003952  D017               	goto	l1839
  8990                           
  8991                           ; BSR set to: 0
  8992  003954  0EFF               	movlw	255
  8993  003956  1428               	andwf	___fldiv@grs^0,w,c
  8994  003958  6E1D               	movwf	??___fldiv^0,c
  8995  00395A  0EFF               	movlw	255
  8996  00395C  1429               	andwf	(___fldiv@grs+1)^0,w,c
  8997  00395E  6E1E               	movwf	(??___fldiv+1)^0,c
  8998  003960  0EFF               	movlw	255
  8999  003962  142A               	andwf	(___fldiv@grs+2)^0,w,c
  9000  003964  6E1F               	movwf	(??___fldiv+2)^0,c
  9001  003966  0E7F               	movlw	127
  9002  003968  142B               	andwf	(___fldiv@grs+3)^0,w,c
  9003  00396A  6E20               	movwf	(??___fldiv+3)^0,c
  9004  00396C  501D               	movf	??___fldiv^0,w,c
  9005  00396E  101E               	iorwf	(??___fldiv+1)^0,w,c
  9006  003970  101F               	iorwf	(??___fldiv+2)^0,w,c
  9007  003972  1020               	iorwf	(??___fldiv+3)^0,w,c
  9008  003974  B4D8               	btfsc	status,2,c
  9009  003976  D003               	goto	l1840
  9010  003978                     u10160:
  9011                           
  9012                           ; BSR set to: 0
  9013  003978  0E01               	movlw	1
  9014  00397A  6E2D               	movwf	___fldiv@aexp^0,c
  9015  00397C  D002               	goto	l1839
  9016  00397E                     l1840:
  9017                           
  9018                           ; BSR set to: 0
  9019  00397E  B015               	btfsc	___fldiv@b^0,0,c
  9020  003980  D7FB               	goto	u10160
  9021  003982                     l1839:
  9022                           
  9023                           ; BSR set to: 0
  9024  003982  502D               	movf	___fldiv@aexp^0,w,c
  9025  003984  B4D8               	btfsc	status,2,c
  9026  003986  D01F               	goto	l9241
  9027                           
  9028                           ; BSR set to: 0
  9029  003988  0E01               	movlw	1
  9030  00398A  2615               	addwf	___fldiv@b^0,f,c
  9031  00398C  0E00               	movlw	0
  9032  00398E  2216               	addwfc	(___fldiv@b+1)^0,f,c
  9033  003990  2217               	addwfc	(___fldiv@b+2)^0,f,c
  9034  003992  2218               	addwfc	(___fldiv@b+3)^0,f,c
  9035                           
  9036                           ; BSR set to: 0
  9037  003994  A018               	btfss	(___fldiv@b+3)^0,0,c
  9038  003996  D017               	goto	l9241
  9039                           
  9040                           ; BSR set to: 0
  9041  003998  C015  F01D         	movff	___fldiv@b,??___fldiv
  9042  00399C  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  9043  0039A0  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  9044  0039A4  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  9045  0039A8  3420               	rlcf	(??___fldiv+3)^0,w,c
  9046  0039AA  3220               	rrcf	(??___fldiv+3)^0,f,c
  9047  0039AC  321F               	rrcf	(??___fldiv+2)^0,f,c
  9048  0039AE  321E               	rrcf	(??___fldiv+1)^0,f,c
  9049  0039B0  321D               	rrcf	??___fldiv^0,f,c
  9050  0039B2  C01D  F015         	movff	??___fldiv,___fldiv@b
  9051  0039B6  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  9052  0039BA  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  9053  0039BE  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  9054                           
  9055                           ; BSR set to: 0
  9056  0039C2  4A26               	infsnz	___fldiv@new_exp^0,f,c
  9057  0039C4  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  9058  0039C6                     l9241:
  9059                           
  9060                           ; BSR set to: 0
  9061  0039C6  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9062  0039C8  D010               	goto	l9245
  9063  0039CA  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9064  0039CC  E103               	bnz	u10200
  9065  0039CE  2826               	incf	___fldiv@new_exp^0,w,c
  9066  0039D0  A0D8               	btfss	status,0,c
  9067  0039D2  D00B               	goto	l9245
  9068  0039D4                     u10200:
  9069                           
  9070                           ; BSR set to: 0
  9071  0039D4  0E00               	movlw	0
  9072  0039D6  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9073  0039D8  6826               	setf	___fldiv@new_exp^0,c
  9074  0039DA  0E00               	movlw	0
  9075  0039DC  6E15               	movwf	___fldiv@b^0,c
  9076  0039DE  0E00               	movlw	0
  9077  0039E0  6E16               	movwf	(___fldiv@b+1)^0,c
  9078  0039E2  0E00               	movlw	0
  9079  0039E4  6E17               	movwf	(___fldiv@b+2)^0,c
  9080  0039E6  0E00               	movlw	0
  9081  0039E8  6E18               	movwf	(___fldiv@b+3)^0,c
  9082  0039EA                     l9245:
  9083                           
  9084                           ; BSR set to: 0
  9085  0039EA  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9086  0039EC  D005               	goto	u10210
  9087  0039EE  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9088  0039F0  E111               	bnz	l9249
  9089  0039F2  0426               	decf	___fldiv@new_exp^0,w,c
  9090  0039F4  B0D8               	btfsc	status,0,c
  9091  0039F6  D00E               	goto	l9249
  9092  0039F8                     u10210:
  9093                           
  9094                           ; BSR set to: 0
  9095  0039F8  0E00               	movlw	0
  9096  0039FA  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9097  0039FC  0E00               	movlw	0
  9098  0039FE  6E26               	movwf	___fldiv@new_exp^0,c
  9099  003A00  0E00               	movlw	0
  9100  003A02  6E15               	movwf	___fldiv@b^0,c
  9101  003A04  0E00               	movlw	0
  9102  003A06  6E16               	movwf	(___fldiv@b+1)^0,c
  9103  003A08  0E00               	movlw	0
  9104  003A0A  6E17               	movwf	(___fldiv@b+2)^0,c
  9105  003A0C  0E00               	movlw	0
  9106  003A0E  6E18               	movwf	(___fldiv@b+3)^0,c
  9107  003A10  0E00               	movlw	0
  9108  003A12  6E25               	movwf	___fldiv@sign^0,c
  9109  003A14                     l9249:
  9110                           
  9111                           ; BSR set to: 0
  9112  003A14  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  9113                           
  9114                           ; BSR set to: 0
  9115  003A18  A02C               	btfss	___fldiv@bexp^0,0,c
  9116  003A1A  D002               	goto	l9255
  9117                           
  9118                           ; BSR set to: 0
  9119  003A1C  8E17               	bsf	(___fldiv@b+2)^0,7,c
  9120  003A1E  D001               	goto	l9257
  9121  003A20                     l9255:
  9122                           
  9123                           ; BSR set to: 0
  9124  003A20  9E17               	bcf	(___fldiv@b+2)^0,7,c
  9125  003A22                     l9257:
  9126                           
  9127                           ; BSR set to: 0
  9128  003A22  90D8               	bcf	status,0,c
  9129  003A24  302C               	rrcf	___fldiv@bexp^0,w,c
  9130  003A26  6E18               	movwf	(___fldiv@b+3)^0,c
  9131  003A28  D70E               	goto	l9171
  9132  003A2A                     __end_of___fldiv:
  9133                           	callstack 0
  9134                           
  9135 ;; *************** function ___awmod *****************
  9136 ;; Defined at:
  9137 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  dividend        2   20[COMRAM] int 
  9140 ;;  divisor         2   22[COMRAM] int 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  sign            1   25[COMRAM] unsigned char 
  9143 ;;  counter         1   24[COMRAM] unsigned char 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  2   20[COMRAM] int 
  9146 ;; Registers used:
  9147 ;;		wreg, status,2, status,0
  9148 ;; Tracked objects:
  9149 ;;		On entry : 3F/0
  9150 ;;		On exit  : 3F/0
  9151 ;;		Unchanged: 3F/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9156 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9157 ;;Total ram usage:        6 bytes
  9158 ;; Hardware stack levels used: 1
  9159 ;; Hardware stack levels required when called: 4
  9160 ;; This function calls:
  9161 ;;		Nothing
  9162 ;; This function is called by:
  9163 ;;		_efgtoa
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text26
  9168  0053EC                     __ptext26:
  9169                           	callstack 0
  9170  0053EC                     ___awmod:
  9171                           	callstack 20
  9172                           
  9173                           ; BSR set to: 0
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;incstack = 0
  9177  0053EC  0E00               	movlw	0
  9178  0053EE  6E1A               	movwf	___awmod@sign^0,c
  9179                           
  9180                           ; BSR set to: 0
  9181  0053F0  AE16               	btfss	(___awmod@dividend+1)^0,7,c
  9182  0053F2  D006               	goto	l9453
  9183                           
  9184                           ; BSR set to: 0
  9185  0053F4  6C15               	negf	___awmod@dividend^0,c
  9186  0053F6  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9187  0053F8  B0D8               	btfsc	status,0,c
  9188  0053FA  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9189                           
  9190                           ; BSR set to: 0
  9191  0053FC  0E01               	movlw	1
  9192  0053FE  6E1A               	movwf	___awmod@sign^0,c
  9193  005400                     l9453:
  9194                           
  9195                           ; BSR set to: 0
  9196  005400  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9197  005402  D004               	goto	l9457
  9198                           
  9199                           ; BSR set to: 0
  9200  005404  6C17               	negf	___awmod@divisor^0,c
  9201  005406  1E18               	comf	(___awmod@divisor+1)^0,f,c
  9202  005408  B0D8               	btfsc	status,0,c
  9203  00540A  2A18               	incf	(___awmod@divisor+1)^0,f,c
  9204  00540C                     l9457:
  9205                           
  9206                           ; BSR set to: 0
  9207  00540C  5017               	movf	___awmod@divisor^0,w,c
  9208  00540E  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  9209  005410  B4D8               	btfsc	status,2,c
  9210  005412  D018               	goto	l9473
  9211                           
  9212                           ; BSR set to: 0
  9213  005414  0E01               	movlw	1
  9214  005416  6E19               	movwf	___awmod@counter^0,c
  9215  005418  D004               	goto	l9463
  9216  00541A                     l9461:
  9217                           
  9218                           ; BSR set to: 0
  9219  00541A  90D8               	bcf	status,0,c
  9220  00541C  3617               	rlcf	___awmod@divisor^0,f,c
  9221  00541E  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  9222  005420  2A19               	incf	___awmod@counter^0,f,c
  9223  005422                     l9463:
  9224                           
  9225                           ; BSR set to: 0
  9226  005422  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9227  005424  D7FA               	goto	l9461
  9228  005426                     u10500:
  9229                           
  9230                           ; BSR set to: 0
  9231  005426  5017               	movf	___awmod@divisor^0,w,c
  9232  005428  5C15               	subwf	___awmod@dividend^0,w,c
  9233  00542A  5018               	movf	(___awmod@divisor+1)^0,w,c
  9234  00542C  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  9235  00542E  A0D8               	btfss	status,0,c
  9236  005430  D004               	goto	l9469
  9237                           
  9238                           ; BSR set to: 0
  9239  005432  5017               	movf	___awmod@divisor^0,w,c
  9240  005434  5E15               	subwf	___awmod@dividend^0,f,c
  9241  005436  5018               	movf	(___awmod@divisor+1)^0,w,c
  9242  005438  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  9243  00543A                     l9469:
  9244                           
  9245                           ; BSR set to: 0
  9246  00543A  90D8               	bcf	status,0,c
  9247  00543C  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  9248  00543E  3217               	rrcf	___awmod@divisor^0,f,c
  9249                           
  9250                           ; BSR set to: 0
  9251  005440  2E19               	decfsz	___awmod@counter^0,f,c
  9252  005442  D7F1               	goto	u10500
  9253  005444                     l9473:
  9254                           
  9255                           ; BSR set to: 0
  9256  005444  501A               	movf	___awmod@sign^0,w,c
  9257  005446  B4D8               	btfsc	status,2,c
  9258  005448  D004               	goto	l9477
  9259                           
  9260                           ; BSR set to: 0
  9261  00544A  6C15               	negf	___awmod@dividend^0,c
  9262  00544C  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9263  00544E  B0D8               	btfsc	status,0,c
  9264  005450  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9265  005452                     l9477:
  9266                           
  9267                           ; BSR set to: 0
  9268  005452  C015  F015         	movff	___awmod@dividend,?___awmod
  9269  005456  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  9270                           
  9271                           ; BSR set to: 0
  9272  00545A  0012               	return		;funcret
  9273  00545C                     __end_of___awmod:
  9274                           	callstack 0
  9275                           
  9276 ;; *************** function ___awdiv *****************
  9277 ;; Defined at:
  9278 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;  dividend        2   20[COMRAM] int 
  9281 ;;  divisor         2   22[COMRAM] int 
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;  quotient        2   26[COMRAM] int 
  9284 ;;  sign            1   25[COMRAM] unsigned char 
  9285 ;;  counter         1   24[COMRAM] unsigned char 
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  2   20[COMRAM] int 
  9288 ;; Registers used:
  9289 ;;		wreg, status,2, status,0
  9290 ;; Tracked objects:
  9291 ;;		On entry : 3F/0
  9292 ;;		On exit  : 3F/0
  9293 ;;		Unchanged: 3F/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9296 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9298 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9299 ;;Total ram usage:        8 bytes
  9300 ;; Hardware stack levels used: 1
  9301 ;; Hardware stack levels required when called: 4
  9302 ;; This function calls:
  9303 ;;		Nothing
  9304 ;; This function is called by:
  9305 ;;		_efgtoa
  9306 ;; This function uses a non-reentrant model
  9307 ;;
  9308                           
  9309                           	psect	text27
  9310  0052F6                     __ptext27:
  9311                           	callstack 0
  9312  0052F6                     ___awdiv:
  9313                           	callstack 20
  9314                           
  9315                           ; BSR set to: 0
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;incstack = 0
  9319  0052F6  0E00               	movlw	0
  9320  0052F8  6E1A               	movwf	___awdiv@sign^0,c
  9321                           
  9322                           ; BSR set to: 0
  9323  0052FA  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9324  0052FC  D006               	goto	l9409
  9325                           
  9326                           ; BSR set to: 0
  9327  0052FE  6C17               	negf	___awdiv@divisor^0,c
  9328  005300  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  9329  005302  B0D8               	btfsc	status,0,c
  9330  005304  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  9331                           
  9332                           ; BSR set to: 0
  9333  005306  0E01               	movlw	1
  9334  005308  6E1A               	movwf	___awdiv@sign^0,c
  9335  00530A                     l9409:
  9336                           
  9337                           ; BSR set to: 0
  9338  00530A  AE16               	btfss	(___awdiv@dividend+1)^0,7,c
  9339  00530C  D006               	goto	l9415
  9340                           
  9341                           ; BSR set to: 0
  9342  00530E  6C15               	negf	___awdiv@dividend^0,c
  9343  005310  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  9344  005312  B0D8               	btfsc	status,0,c
  9345  005314  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  9346                           
  9347                           ; BSR set to: 0
  9348  005316  0E01               	movlw	1
  9349  005318  1A1A               	xorwf	___awdiv@sign^0,f,c
  9350  00531A                     l9415:
  9351                           
  9352                           ; BSR set to: 0
  9353  00531A  0E00               	movlw	0
  9354  00531C  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  9355  00531E  0E00               	movlw	0
  9356  005320  6E1B               	movwf	___awdiv@quotient^0,c
  9357                           
  9358                           ; BSR set to: 0
  9359  005322  5017               	movf	___awdiv@divisor^0,w,c
  9360  005324  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  9361  005326  B4D8               	btfsc	status,2,c
  9362  005328  D01C               	goto	l9437
  9363                           
  9364                           ; BSR set to: 0
  9365  00532A  0E01               	movlw	1
  9366  00532C  6E19               	movwf	___awdiv@counter^0,c
  9367  00532E  D004               	goto	l9423
  9368  005330                     l9421:
  9369                           
  9370                           ; BSR set to: 0
  9371  005330  90D8               	bcf	status,0,c
  9372  005332  3617               	rlcf	___awdiv@divisor^0,f,c
  9373  005334  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  9374  005336  2A19               	incf	___awdiv@counter^0,f,c
  9375  005338                     l9423:
  9376                           
  9377                           ; BSR set to: 0
  9378  005338  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9379  00533A  D7FA               	goto	l9421
  9380  00533C                     u10440:
  9381                           
  9382                           ; BSR set to: 0
  9383  00533C  90D8               	bcf	status,0,c
  9384  00533E  361B               	rlcf	___awdiv@quotient^0,f,c
  9385  005340  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  9386                           
  9387                           ; BSR set to: 0
  9388  005342  5017               	movf	___awdiv@divisor^0,w,c
  9389  005344  5C15               	subwf	___awdiv@dividend^0,w,c
  9390  005346  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9391  005348  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  9392  00534A  A0D8               	btfss	status,0,c
  9393  00534C  D005               	goto	l9433
  9394                           
  9395                           ; BSR set to: 0
  9396  00534E  5017               	movf	___awdiv@divisor^0,w,c
  9397  005350  5E15               	subwf	___awdiv@dividend^0,f,c
  9398  005352  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9399  005354  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  9400                           
  9401                           ; BSR set to: 0
  9402  005356  801B               	bsf	___awdiv@quotient^0,0,c
  9403  005358                     l9433:
  9404                           
  9405                           ; BSR set to: 0
  9406  005358  90D8               	bcf	status,0,c
  9407  00535A  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  9408  00535C  3217               	rrcf	___awdiv@divisor^0,f,c
  9409                           
  9410                           ; BSR set to: 0
  9411  00535E  2E19               	decfsz	___awdiv@counter^0,f,c
  9412  005360  D7ED               	goto	u10440
  9413  005362                     l9437:
  9414                           
  9415                           ; BSR set to: 0
  9416  005362  501A               	movf	___awdiv@sign^0,w,c
  9417  005364  B4D8               	btfsc	status,2,c
  9418  005366  D004               	goto	l9441
  9419                           
  9420                           ; BSR set to: 0
  9421  005368  6C1B               	negf	___awdiv@quotient^0,c
  9422  00536A  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  9423  00536C  B0D8               	btfsc	status,0,c
  9424  00536E  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  9425  005370                     l9441:
  9426                           
  9427                           ; BSR set to: 0
  9428  005370  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  9429  005374  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  9430                           
  9431                           ; BSR set to: 0
  9432  005378  0012               	return		;funcret
  9433  00537A                     __end_of___awdiv:
  9434                           	callstack 0
  9435                           
  9436 ;; *************** function _atoi *****************
  9437 ;; Defined at:
  9438 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;  s               1   27[COMRAM] PTR const unsigned char 
  9441 ;;		 -> STR_10(21), STR_6(79), 
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;  n               2   35[COMRAM] int 
  9444 ;;  neg             2   33[COMRAM] int 
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  2   27[COMRAM] int 
  9447 ;; Registers used:
  9448 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 3F/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9455 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9456 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9457 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9458 ;;Total ram usage:       10 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 5
  9461 ;; This function calls:
  9462 ;;		___wmul
  9463 ;;		_isdigit
  9464 ;;		_isspace
  9465 ;; This function is called by:
  9466 ;;		_vfpfcnvrt
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           	psect	text28
  9471  00482A                     __ptext28:
  9472                           	callstack 0
  9473  00482A                     _atoi:
  9474                           	callstack 20
  9475                           
  9476                           ; BSR set to: 0
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;incstack = 0
  9480  00482A  0E00               	movlw	0
  9481  00482C  6E25               	movwf	(atoi@n+1)^0,c
  9482  00482E  0E00               	movlw	0
  9483  004830  6E24               	movwf	atoi@n^0,c
  9484  004832  0E00               	movlw	0
  9485  004834  6E23               	movwf	(atoi@neg+1)^0,c
  9486  004836  0E00               	movlw	0
  9487  004838  6E22               	movwf	atoi@neg^0,c
  9488  00483A  D001               	goto	l10121
  9489  00483C                     l10117:
  9490                           
  9491                           ; BSR set to: 0
  9492  00483C  2A1C               	incf	atoi@s^0,f,c
  9493  00483E                     l10121:
  9494                           
  9495                           ; BSR set to: 0
  9496  00483E  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9497  004844                     	if	1	;There is more than 1 active tblptr byte
  9498  004844  0E20               	movlw	high __smallconst
  9499  004846  6EF7               	movwf	tblptrh,c
  9500  004848                     	endif
  9501  004848                     	if	0	;tblptru may be non-zero
  9502  004848                     	endif
  9503  004848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9504  004848  0E00               	movlw	low (__smallconst shr (0+16))
  9505  00484A  6EF8               	movwf	tblptru,c
  9506  00484C                     	endif
  9507  00484C  0008               	tblrd		*
  9508  00484E  50F5               	movf	tablat,w,c
  9509  004850  0A20               	xorlw	32
  9510  004852  B4D8               	btfsc	status,2,c
  9511  004854  D7F3               	goto	l10117
  9512                           
  9513                           ; BSR set to: 0
  9514  004856  0EF7               	movlw	247
  9515  004858  6E1E               	movwf	??_atoi^0,c
  9516  00485A  0EFF               	movlw	255
  9517  00485C  6E1F               	movwf	(??_atoi+1)^0,c
  9518  00485E  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9519  004864                     	if	1	;There is more than 1 active tblptr byte
  9520  004864  0E20               	movlw	high __smallconst
  9521  004866  6EF7               	movwf	tblptrh,c
  9522  004868                     	endif
  9523  004868                     	if	0	;tblptru may be non-zero
  9524  004868                     	endif
  9525  004868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9526  004868  0E00               	movlw	low (__smallconst shr (0+16))
  9527  00486A  6EF8               	movwf	tblptru,c
  9528  00486C                     	endif
  9529  00486C  0008               	tblrd		*
  9530  00486E  50F5               	movf	tablat,w,c
  9531  004870  6E20               	movwf	(??_atoi+2)^0,c
  9532  004872  6A21               	clrf	(??_atoi+3)^0,c
  9533  004874  501E               	movf	??_atoi^0,w,c
  9534  004876  2620               	addwf	(??_atoi+2)^0,f,c
  9535  004878  501F               	movf	(??_atoi+1)^0,w,c
  9536  00487A  2221               	addwfc	(??_atoi+3)^0,f,c
  9537  00487C  5021               	movf	(??_atoi+3)^0,w,c
  9538  00487E  E10B               	bnz	l10129
  9539  004880  0E05               	movlw	5
  9540  004882  5C20               	subwf	(??_atoi+2)^0,w,c
  9541  004884  B0D8               	btfsc	status,0,c
  9542  004886  D007               	goto	l10129
  9543  004888  D7D9               	goto	l10117
  9544  00488A                     l10125:
  9545                           
  9546                           ; BSR set to: 0
  9547  00488A  0E00               	movlw	0
  9548  00488C  6E23               	movwf	(atoi@neg+1)^0,c
  9549  00488E  0E01               	movlw	1
  9550  004890  6E22               	movwf	atoi@neg^0,c
  9551  004892                     l10127:
  9552  004892  2A1C               	incf	atoi@s^0,f,c
  9553  004894  D034               	goto	l10137
  9554  004896                     l10129:
  9555                           
  9556                           ; BSR set to: 0
  9557  004896  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9558  00489C                     	if	1	;There is more than 1 active tblptr byte
  9559  00489C  0E20               	movlw	high __smallconst
  9560  00489E  6EF7               	movwf	tblptrh,c
  9561  0048A0                     	endif
  9562  0048A0                     	if	0	;tblptru may be non-zero
  9563  0048A0                     	endif
  9564  0048A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9565  0048A0  0E00               	movlw	low (__smallconst shr (0+16))
  9566  0048A2  6EF8               	movwf	tblptru,c
  9567  0048A4                     	endif
  9568  0048A4  0008               	tblrd		*
  9569  0048A6  50F5               	movf	tablat,w,c
  9570  0048A8  6E1E               	movwf	??_atoi^0,c
  9571  0048AA  6A1F               	clrf	(??_atoi+1)^0,c
  9572                           
  9573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9574                           ; Switch size 1, requested type "simple"
  9575                           ; Number of cases is 1, Range of values is 0 to 0
  9576                           ; switch strategies available:
  9577                           ; Name         Instructions Cycles
  9578                           ; simple_byte            4     3 (average)
  9579                           ;	Chosen strategy is simple_byte
  9580  0048AC  501F               	movf	(??_atoi+1)^0,w,c
  9581  0048AE  0A00               	xorlw	0	; case 0
  9582  0048B0  A4D8               	btfss	status,2,c
  9583  0048B2  D025               	goto	l10137
  9584                           
  9585                           ; BSR set to: 0
  9586                           ; Switch size 1, requested type "simple"
  9587                           ; Number of cases is 2, Range of values is 43 to 45
  9588                           ; switch strategies available:
  9589                           ; Name         Instructions Cycles
  9590                           ; simple_byte            7     4 (average)
  9591                           ;	Chosen strategy is simple_byte
  9592  0048B4  501E               	movf	??_atoi^0,w,c
  9593  0048B6  0A2B               	xorlw	43	; case 43
  9594  0048B8  B4D8               	btfsc	status,2,c
  9595  0048BA  D7EB               	goto	l10127
  9596  0048BC  0A06               	xorlw	6	; case 45
  9597  0048BE  B4D8               	btfsc	status,2,c
  9598  0048C0  D7E4               	goto	l10125
  9599  0048C2  D01D               	goto	l10137
  9600  0048C4                     l10131:
  9601  0048C4  C024  F015         	movff	atoi@n,___wmul@multiplier
  9602  0048C8  C025  F016         	movff	atoi@n+1,___wmul@multiplier+1
  9603  0048CC  0E00               	movlw	0
  9604  0048CE  6E18               	movwf	(___wmul@multiplicand+1)^0,c
  9605  0048D0  0E0A               	movlw	10
  9606  0048D2  6E17               	movwf	___wmul@multiplicand^0,c
  9607  0048D4  EC83  F02D         	call	___wmul	;wreg free
  9608  0048D8  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9609  0048DE                     	if	1	;There is more than 1 active tblptr byte
  9610  0048DE  0E20               	movlw	high __smallconst
  9611  0048E0  6EF7               	movwf	tblptrh,c
  9612  0048E2                     	endif
  9613  0048E2                     	if	0	;tblptru may be non-zero
  9614  0048E2                     	endif
  9615  0048E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9616  0048E2  0E00               	movlw	low (__smallconst shr (0+16))
  9617  0048E4  6EF8               	movwf	tblptru,c
  9618  0048E6                     	endif
  9619  0048E6  0008               	tblrd		*
  9620  0048E8  50F5               	movf	tablat,w,c
  9621  0048EA  5E15               	subwf	?___wmul^0,f,c
  9622  0048EC  0E00               	movlw	0
  9623  0048EE  5A16               	subwfb	(?___wmul+1)^0,f,c
  9624  0048F0  0E30               	movlw	48
  9625  0048F2  2415               	addwf	?___wmul^0,w,c
  9626  0048F4  6E24               	movwf	atoi@n^0,c
  9627  0048F6  0E00               	movlw	0
  9628  0048F8  2016               	addwfc	(?___wmul+1)^0,w,c
  9629  0048FA  6E25               	movwf	(atoi@n+1)^0,c
  9630  0048FC  D7CA               	goto	l10127
  9631  0048FE                     l10137:
  9632  0048FE  0ED0               	movlw	208
  9633  004900  6E1E               	movwf	??_atoi^0,c
  9634  004902  0EFF               	movlw	255
  9635  004904  6E1F               	movwf	(??_atoi+1)^0,c
  9636  004906  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9637  00490C                     	if	1	;There is more than 1 active tblptr byte
  9638  00490C  0E20               	movlw	high __smallconst
  9639  00490E  6EF7               	movwf	tblptrh,c
  9640  004910                     	endif
  9641  004910                     	if	0	;tblptru may be non-zero
  9642  004910                     	endif
  9643  004910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9644  004910  0E00               	movlw	low (__smallconst shr (0+16))
  9645  004912  6EF8               	movwf	tblptru,c
  9646  004914                     	endif
  9647  004914  0008               	tblrd		*
  9648  004916  50F5               	movf	tablat,w,c
  9649  004918  6E20               	movwf	(??_atoi+2)^0,c
  9650  00491A  6A21               	clrf	(??_atoi+3)^0,c
  9651  00491C  501E               	movf	??_atoi^0,w,c
  9652  00491E  2620               	addwf	(??_atoi+2)^0,f,c
  9653  004920  501F               	movf	(??_atoi+1)^0,w,c
  9654  004922  2221               	addwfc	(??_atoi+3)^0,f,c
  9655  004924  5021               	movf	(??_atoi+3)^0,w,c
  9656  004926  E104               	bnz	u11810
  9657  004928  0E0A               	movlw	10
  9658  00492A  5C20               	subwf	(??_atoi+2)^0,w,c
  9659  00492C  A0D8               	btfss	status,0,c
  9660  00492E  D7CA               	goto	l10131
  9661  004930                     u11810:
  9662  004930  5022               	movf	atoi@neg^0,w,c
  9663  004932  1023               	iorwf	(atoi@neg+1)^0,w,c
  9664  004934  A4D8               	btfss	status,2,c
  9665  004936  D00D               	goto	l2191
  9666  004938  C024  F01E         	movff	atoi@n,??_atoi
  9667  00493C  C025  F01F         	movff	atoi@n+1,??_atoi+1
  9668  004940  1E1E               	comf	??_atoi^0,f,c
  9669  004942  1E1F               	comf	(??_atoi+1)^0,f,c
  9670  004944  4A1E               	infsnz	??_atoi^0,f,c
  9671  004946  2A1F               	incf	(??_atoi+1)^0,f,c
  9672  004948  C01E  F01C         	movff	??_atoi,?_atoi
  9673  00494C  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9674  004950  0012               	return	
  9675  004952                     l2191:
  9676  004952  C024  F01C         	movff	atoi@n,?_atoi
  9677  004956  C025  F01D         	movff	atoi@n+1,?_atoi+1
  9678  00495A  0012               	return		;funcret
  9679  00495C                     __end_of_atoi:
  9680                           	callstack 0
  9681                           
  9682 ;; *************** function _isspace *****************
  9683 ;; Defined at:
  9684 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  c               2   20[COMRAM] int 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  2   20[COMRAM] int 
  9691 ;; Registers used:
  9692 ;;		wreg, status,2, status,0
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9700 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9702 ;;Total ram usage:        7 bytes
  9703 ;; Hardware stack levels used: 1
  9704 ;; Hardware stack levels required when called: 4
  9705 ;; This function calls:
  9706 ;;		Nothing
  9707 ;; This function is called by:
  9708 ;;		_atoi
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712                           	psect	text29
  9713  0057C6                     __ptext29:
  9714                           	callstack 0
  9715  0057C6                     _isspace:
  9716                           	callstack 20
  9717                           
  9718                           ;incstack = 0
  9719  0057C6  0E01               	movlw	1
  9720  0057C8  6E1B               	movwf	_isspace$3184^0,c
  9721  0057CA  0E20               	movlw	32
  9722  0057CC  1815               	xorwf	isspace@c^0,w,c
  9723  0057CE  1016               	iorwf	(isspace@c+1)^0,w,c
  9724  0057D0  B4D8               	btfsc	status,2,c
  9725  0057D2  D014               	goto	l9707
  9726  0057D4  0EF7               	movlw	247
  9727  0057D6  6E17               	movwf	??_isspace^0,c
  9728  0057D8  0EFF               	movlw	255
  9729  0057DA  6E18               	movwf	(??_isspace+1)^0,c
  9730  0057DC  C015  F019         	movff	isspace@c,??_isspace+2
  9731  0057E0  C016  F01A         	movff	isspace@c+1,??_isspace+3
  9732  0057E4  5017               	movf	??_isspace^0,w,c
  9733  0057E6  2619               	addwf	(??_isspace+2)^0,f,c
  9734  0057E8  5018               	movf	(??_isspace+1)^0,w,c
  9735  0057EA  221A               	addwfc	(??_isspace+3)^0,f,c
  9736  0057EC  501A               	movf	(??_isspace+3)^0,w,c
  9737  0057EE  E104               	bnz	u11030
  9738  0057F0  0E05               	movlw	5
  9739  0057F2  5C19               	subwf	(??_isspace+2)^0,w,c
  9740  0057F4  A0D8               	btfss	status,0,c
  9741  0057F6  D002               	goto	l9707
  9742  0057F8                     u11030:
  9743  0057F8  0E00               	movlw	0
  9744  0057FA  6E1B               	movwf	_isspace$3184^0,c
  9745  0057FC                     l9707:
  9746  0057FC  C01B  F015         	movff	_isspace$3184,?_isspace
  9747  005800  6A16               	clrf	(?_isspace+1)^0,c
  9748  005802  0012               	return		;funcret
  9749  005804                     __end_of_isspace:
  9750                           	callstack 0
  9751                           
  9752 ;; *************** function _isdigit *****************
  9753 ;; Defined at:
  9754 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;  c               2   20[COMRAM] int 
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;		None
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  2   20[COMRAM] int 
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9770 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9772 ;;Total ram usage:        6 bytes
  9773 ;; Hardware stack levels used: 1
  9774 ;; Hardware stack levels required when called: 4
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		_vfpfcnvrt
  9779 ;;		_atoi
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text30
  9784  005A4C                     __ptext30:
  9785                           	callstack 0
  9786  005A4C                     _isdigit:
  9787                           	callstack 21
  9788                           
  9789                           ;incstack = 0
  9790  005A4C  0ED0               	movlw	208
  9791  005A4E  6E17               	movwf	??_isdigit^0,c
  9792  005A50  0EFF               	movlw	255
  9793  005A52  6E18               	movwf	(??_isdigit+1)^0,c
  9794  005A54  C015  F019         	movff	isdigit@c,??_isdigit+2
  9795  005A58  C016  F01A         	movff	isdigit@c+1,??_isdigit+3
  9796  005A5C  5017               	movf	??_isdigit^0,w,c
  9797  005A5E  2619               	addwf	(??_isdigit+2)^0,f,c
  9798  005A60  5018               	movf	(??_isdigit+1)^0,w,c
  9799  005A62  221A               	addwfc	(??_isdigit+3)^0,f,c
  9800  005A64  501A               	movf	(??_isdigit+3)^0,w,c
  9801  005A66  E106               	bnz	u11000
  9802  005A68  0E0A               	movlw	10
  9803  005A6A  5C19               	subwf	(??_isdigit+2)^0,w,c
  9804  005A6C  B0D8               	btfsc	status,0,c
  9805  005A6E  D002               	goto	u11000
  9806  005A70  0E01               	movlw	1
  9807  005A72  D001               	goto	u11010
  9808  005A74                     u11000:
  9809  005A74  0E00               	movlw	0
  9810  005A76                     u11010:
  9811  005A76  6E15               	movwf	?_isdigit^0,c
  9812  005A78  6A16               	clrf	(?_isdigit+1)^0,c
  9813  005A7A  0012               	return		;funcret
  9814  005A7C                     __end_of_isdigit:
  9815                           	callstack 0
  9816                           
  9817 ;; *************** function ___wmul *****************
  9818 ;; Defined at:
  9819 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  multiplier      2   20[COMRAM] unsigned int 
  9822 ;;  multiplicand    2   22[COMRAM] unsigned int 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  product         2   24[COMRAM] unsigned int 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  2   20[COMRAM] unsigned int 
  9827 ;; Registers used:
  9828 ;;		wreg, status,2, status,0, prodl, prodh
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9838 ;;Total ram usage:        6 bytes
  9839 ;; Hardware stack levels used: 1
  9840 ;; Hardware stack levels required when called: 4
  9841 ;; This function calls:
  9842 ;;		Nothing
  9843 ;; This function is called by:
  9844 ;;		_atoi
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text31
  9849  005B06                     __ptext31:
  9850                           	callstack 0
  9851  005B06                     ___wmul:
  9852                           	callstack 20
  9853                           
  9854                           ;incstack = 0
  9855  005B06  5015               	movf	___wmul@multiplier^0,w,c
  9856  005B08  0217               	mulwf	___wmul@multiplicand^0,c
  9857  005B0A  006F FFCC  F019    	movff	prodl,___wmul@product
  9858  005B10  006F FFD0  F01A    	movff	prodh,___wmul@product+1
  9859  005B16  5015               	movf	___wmul@multiplier^0,w,c
  9860  005B18  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  9861  005B1A  50F3               	movf	243,w,c
  9862  005B1C  261A               	addwf	(___wmul@product+1)^0,f,c
  9863  005B1E  5016               	movf	(___wmul@multiplier+1)^0,w,c
  9864  005B20  0217               	mulwf	___wmul@multiplicand^0,c
  9865  005B22  50F3               	movf	243,w,c
  9866  005B24  261A               	addwf	(___wmul@product+1)^0,f,c
  9867  005B26  C019  F015         	movff	___wmul@product,?___wmul
  9868  005B2A  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  9869  005B2E  0012               	return		;funcret
  9870  005B30                     __end_of___wmul:
  9871                           	callstack 0
  9872                           
  9873 ;; *************** function _display_led *****************
  9874 ;; Defined at:
  9875 ;;		line 3 in file "disp_led.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  led             1    wreg     enum E17197
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;  led             1   22[COMRAM] enum E17197
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      void 
  9882 ;; Registers used:
  9883 ;;		wreg, status,2, status,0
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9892 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9893 ;;Total ram usage:        3 bytes
  9894 ;; Hardware stack levels used: 1
  9895 ;; Hardware stack levels required when called: 4
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_main
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text32
  9904  004D4E                     __ptext32:
  9905                           	callstack 0
  9906  004D4E                     _display_led:
  9907                           	callstack 26
  9908                           
  9909                           ;incstack = 0
  9910                           ;display_led@led stored from wreg
  9911  004D4E  6E17               	movwf	display_led@led^0,c
  9912                           
  9913                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
  9914  004D50  D02D               	goto	l10653
  9915  004D52                     l993:
  9916  004D52  98BD               	bcf	189,4,c	;volatile
  9917                           
  9918                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
  9919  004D54  9ABD               	bcf	189,5,c	;volatile
  9920  004D56  0012               	return	
  9921  004D58                     l999:
  9922  004D58  98BD               	bcf	189,4,c	;volatile
  9923                           
  9924                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
  9925  004D5A  8ABD               	bsf	189,5,c	;volatile
  9926  004D5C  0012               	return	
  9927  004D5E                     l1004:
  9928  004D5E  88BD               	bsf	189,4,c	;volatile
  9929                           
  9930                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
  9931  004D60  9ABD               	bcf	189,5,c	;volatile
  9932  004D62  0012               	return	
  9933  004D64                     l1009:
  9934  004D64  9CBD               	bcf	189,6,c	;volatile
  9935                           
  9936                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
  9937  004D66  9EBD               	bcf	189,7,c	;volatile
  9938  004D68  0012               	return	
  9939  004D6A                     l1014:
  9940  004D6A  9CBD               	bcf	189,6,c	;volatile
  9941                           
  9942                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
  9943  004D6C  8EBD               	bsf	189,7,c	;volatile
  9944  004D6E  0012               	return	
  9945  004D70                     l1019:
  9946  004D70  8CBD               	bsf	189,6,c	;volatile
  9947                           
  9948                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
  9949  004D72  9EBD               	bcf	189,7,c	;volatile
  9950  004D74  0012               	return	
  9951  004D76                     l1024:
  9952  004D76  98BF               	bcf	191,4,c	;volatile
  9953                           
  9954                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
  9955  004D78  9ABF               	bcf	191,5,c	;volatile
  9956  004D7A  0012               	return	
  9957  004D7C                     l1029:
  9958  004D7C  98BF               	bcf	191,4,c	;volatile
  9959                           
  9960                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
  9961  004D7E  8ABF               	bsf	191,5,c	;volatile
  9962  004D80  0012               	return	
  9963  004D82                     l1034:
  9964  004D82  88BF               	bsf	191,4,c	;volatile
  9965                           
  9966                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
  9967  004D84  9ABF               	bcf	191,5,c	;volatile
  9968  004D86  0012               	return	
  9969  004D88                     l1039:
  9970  004D88  9CBF               	bcf	191,6,c	;volatile
  9971                           
  9972                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
  9973  004D8A  9EBF               	bcf	191,7,c	;volatile
  9974  004D8C  0012               	return	
  9975  004D8E                     l1044:
  9976  004D8E  9CBF               	bcf	191,6,c	;volatile
  9977                           
  9978                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
  9979  004D90  8EBF               	bsf	191,7,c	;volatile
  9980  004D92  0012               	return	
  9981  004D94                     l1049:
  9982  004D94  8CBF               	bsf	191,6,c	;volatile
  9983                           
  9984                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
  9985  004D96  9EBF               	bcf	191,7,c	;volatile
  9986  004D98  0012               	return	
  9987  004D9A                     l1054:
  9988  004D9A  98BD               	bcf	189,4,c	;volatile
  9989                           
  9990                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
  9991  004D9C  9ABD               	bcf	189,5,c	;volatile
  9992                           
  9993                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
  9994  004D9E  9CBD               	bcf	189,6,c	;volatile
  9995                           
  9996                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
  9997  004DA0  9EBD               	bcf	189,7,c	;volatile
  9998                           
  9999                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
 10000  004DA2  98BF               	bcf	191,4,c	;volatile
 10001                           
 10002                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
 10003  004DA4  9ABF               	bcf	191,5,c	;volatile
 10004                           
 10005                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
 10006  004DA6  9CBF               	bcf	191,6,c	;volatile
 10007                           
 10008                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
 10009  004DA8  9EBF               	bcf	191,7,c	;volatile
 10010  004DAA  0012               	return	
 10011  004DAC                     l10653:
 10012  004DAC  5017               	movf	display_led@led^0,w,c
 10013  004DAE  6E15               	movwf	??_display_led^0,c
 10014  004DB0  6A16               	clrf	(??_display_led+1)^0,c
 10015                           
 10016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10017                           ; Switch size 1, requested type "simple"
 10018                           ; Number of cases is 1, Range of values is 0 to 0
 10019                           ; switch strategies available:
 10020                           ; Name         Instructions Cycles
 10021                           ; simple_byte            4     3 (average)
 10022                           ;	Chosen strategy is simple_byte
 10023  004DB2  5016               	movf	(??_display_led+1)^0,w,c
 10024  004DB4  0A00               	xorlw	0	; case 0
 10025  004DB6  A4D8               	btfss	status,2,c
 10026  004DB8  D7F0               	goto	l1054
 10027                           
 10028                           ; Switch size 1, requested type "simple"
 10029                           ; Number of cases is 12, Range of values is 0 to 11
 10030                           ; switch strategies available:
 10031                           ; Name         Instructions Cycles
 10032                           ; simple_byte           37    19 (average)
 10033                           ;	Chosen strategy is simple_byte
 10034  004DBA  5015               	movf	??_display_led^0,w,c
 10035  004DBC  0A00               	xorlw	0	; case 0
 10036  004DBE  B4D8               	btfsc	status,2,c
 10037  004DC0  D7C8               	goto	l993
 10038  004DC2  0A01               	xorlw	1	; case 1
 10039  004DC4  B4D8               	btfsc	status,2,c
 10040  004DC6  D7CB               	goto	l1004
 10041  004DC8  0A03               	xorlw	3	; case 2
 10042  004DCA  B4D8               	btfsc	status,2,c
 10043  004DCC  D7C5               	goto	l999
 10044  004DCE  0A01               	xorlw	1	; case 3
 10045  004DD0  B4D8               	btfsc	status,2,c
 10046  004DD2  D7C8               	goto	l1009
 10047  004DD4  0A07               	xorlw	7	; case 4
 10048  004DD6  B4D8               	btfsc	status,2,c
 10049  004DD8  D7CB               	goto	l1019
 10050  004DDA  0A01               	xorlw	1	; case 5
 10051  004DDC  B4D8               	btfsc	status,2,c
 10052  004DDE  D7C5               	goto	l1014
 10053  004DE0  0A03               	xorlw	3	; case 6
 10054  004DE2  B4D8               	btfsc	status,2,c
 10055  004DE4  D7C8               	goto	l1024
 10056  004DE6  0A01               	xorlw	1	; case 7
 10057  004DE8  B4D8               	btfsc	status,2,c
 10058  004DEA  D7CB               	goto	l1034
 10059  004DEC  0A0F               	xorlw	15	; case 8
 10060  004DEE  B4D8               	btfsc	status,2,c
 10061  004DF0  D7C5               	goto	l1029
 10062  004DF2  0A01               	xorlw	1	; case 9
 10063  004DF4  B4D8               	btfsc	status,2,c
 10064  004DF6  D7C8               	goto	l1039
 10065  004DF8  0A03               	xorlw	3	; case 10
 10066  004DFA  B4D8               	btfsc	status,2,c
 10067  004DFC  D7CB               	goto	l1049
 10068  004DFE  0A01               	xorlw	1	; case 11
 10069  004E00  B4D8               	btfsc	status,2,c
 10070  004E02  D7C5               	goto	l1044
 10071  004E04  D7CA               	goto	l1054
 10072  004E06                     __end_of_display_led:
 10073                           	callstack 0
 10074                           
 10075 ;; *************** function _cli_read *****************
 10076 ;; Defined at:
 10077 ;;		line 82 in file "scdm.c"
 10078 ;; Parameters:    Size  Location     Type
 10079 ;;  a_ctx           2   49[COMRAM] PTR struct _t_cli_ctx
 10080 ;;		 -> cli_ctx(131), 
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;  i               1   12[BANK0 ] unsigned char 
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      void 
 10085 ;; Registers used:
 10086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10093 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10094 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10095 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10096 ;;Total ram usage:        8 bytes
 10097 ;; Hardware stack levels used: 1
 10098 ;; Hardware stack levels required when called: 11
 10099 ;; This function calls:
 10100 ;;		__cli_interpret_cmd
 10101 ;;		_linux_getc
 10102 ;;		_linux_putc
 10103 ;;		_memset
 10104 ;; This function is called by:
 10105 ;;		_main
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           
 10109                           	psect	text33
 10110  004300                     __ptext33:
 10111                           	callstack 0
 10112  004300                     _cli_read:
 10113                           	callstack 19
 10114                           
 10115                           ;scdm.c: 82: void cli_read(t_cli_ctx *a_ctx);scdm.c: 83: {;scdm.c: 84:  uint8_t i = 0x00
      +                          ;
 10116                           
 10117                           ;incstack = 0
 10118  004300  0E00               	movlw	0
 10119  004302  0100               	movlb	0	; () banked
 10120  004304  6F6C               	movwf	cli_read@i& (0+255),b
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;scdm.c: 87:  if (!linux_getc(&i)) {
 10124  004306  0E6C               	movlw	low cli_read@i
 10125  004308  6E16               	movwf	linux_getc@a_data^0,c
 10126  00430A  EC98  F02D         	call	_linux_getc	;wreg free
 10127  00430E  0900               	iorlw	0
 10128  004310  B4D8               	btfsc	status,2,c
 10129  004312  0012               	return	
 10130  004314  D08A               	goto	l10693
 10131  004316                     l10671:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;scdm.c: 99:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cpo
      +                          s))] = '\0';
 10135  004316  EE20 F082          	lfsr	2,130
 10136  00431A  5032               	movf	cli_read@a_ctx^0,w,c
 10137  00431C  26D9               	addwf	fsr2l,f,c
 10138  00431E  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10139  004320  22DA               	addwfc	fsr2h,f,c
 10140  004322  0E7E               	movlw	126
 10141  004324  64DF               	cpfsgt	indf2,c
 10142  004326  D00C               	goto	l10675
 10143                           
 10144                           ; BSR set to: 0
 10145  004328  EE20 F082          	lfsr	2,130
 10146  00432C  5032               	movf	cli_read@a_ctx^0,w,c
 10147  00432E  26D9               	addwf	fsr2l,f,c
 10148  004330  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10149  004332  22DA               	addwfc	fsr2h,f,c
 10150  004334  50DF               	movf	indf2,w,c
 10151  004336  6E34               	movwf	??_cli_read^0,c
 10152  004338  5034               	movf	??_cli_read^0,w,c
 10153  00433A  6F6A               	movwf	_cli_read$2165& (0+255),b
 10154  00433C  6B6B               	clrf	(_cli_read$2165+1)& (0+255),b
 10155  00433E  D00E               	goto	l1144
 10156  004340                     l10675:
 10157                           
 10158                           ; BSR set to: 0
 10159  004340  EE20 F082          	lfsr	2,130
 10160  004344  5032               	movf	cli_read@a_ctx^0,w,c
 10161  004346  26D9               	addwf	fsr2l,f,c
 10162  004348  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10163  00434A  22DA               	addwfc	fsr2h,f,c
 10164  00434C  50DF               	movf	indf2,w,c
 10165  00434E  6E34               	movwf	??_cli_read^0,c
 10166  004350  0E01               	movlw	1
 10167  004352  2434               	addwf	??_cli_read^0,w,c
 10168  004354  6F6A               	movwf	_cli_read$2165& (0+255),b
 10169  004356  6B6B               	clrf	(_cli_read$2165+1)& (0+255),b
 10170  004358  0E00               	movlw	0
 10171  00435A  236B               	addwfc	(_cli_read$2165+1)& (0+255),f,b
 10172  00435C                     l1144:
 10173                           
 10174                           ; BSR set to: 0
 10175  00435C  516A               	movf	_cli_read$2165& (0+255),w,b
 10176  00435E  2432               	addwf	cli_read@a_ctx^0,w,c
 10177  004360  6E34               	movwf	??_cli_read^0,c
 10178  004362  516B               	movf	(_cli_read$2165+1)& (0+255),w,b
 10179  004364  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10180  004366  6E35               	movwf	(??_cli_read+1)^0,c
 10181  004368  0E02               	movlw	2
 10182  00436A  2434               	addwf	??_cli_read^0,w,c
 10183  00436C  6ED9               	movwf	fsr2l,c
 10184  00436E  0E00               	movlw	0
 10185  004370  2035               	addwfc	(??_cli_read+1)^0,w,c
 10186  004372  6EDA               	movwf	fsr2h,c
 10187  004374  0E00               	movlw	0
 10188  004376  6EDF               	movwf	indf2,c
 10189                           
 10190                           ; BSR set to: 0
 10191                           ;scdm.c: 100:   linux_putc((unsigned char *) "\r\n", 2);
 10192  004378  0EC6               	movlw	low (STR_5+15)
 10193  00437A  6E2C               	movwf	linux_putc@data^0,c
 10194  00437C  502C               	movf	linux_putc@data^0,w,c
 10195  00437E  A4D8               	btfss	status,2,c
 10196  004380  0E20               	movlw	high __smallconst
 10197  004382  6E2D               	movwf	(linux_putc@data+1)^0,c
 10198  004384  0E02               	movlw	2
 10199  004386  6E2E               	movwf	linux_putc@a_len^0,c
 10200  004388  EC9F  F02E         	call	_linux_putc	;wreg free
 10201                           
 10202                           ;scdm.c: 101:   res = _cli_interpret_cmd(a_ctx);
 10203  00438C  C032  F02E         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 10204  004390  C033  F02F         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 10205  004394  EC40  F01E         	call	__cli_interpret_cmd	;wreg free
 10206  004398  6E43               	movwf	_res^0,c
 10207                           
 10208                           ;scdm.c: 102:   a_ctx->cpos = 0;
 10209  00439A  EE20 F082          	lfsr	2,130
 10210  00439E  5032               	movf	cli_read@a_ctx^0,w,c
 10211  0043A0  26D9               	addwf	fsr2l,f,c
 10212  0043A2  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10213  0043A4  22DA               	addwfc	fsr2h,f,c
 10214  0043A6  0E00               	movlw	0
 10215  0043A8  6EDF               	movwf	indf2,c
 10216                           
 10217                           ;scdm.c: 103:   memset(a_ctx->cmd, 0x00, 128);
 10218  0043AA  0E02               	movlw	2
 10219  0043AC  2432               	addwf	cli_read@a_ctx^0,w,c
 10220  0043AE  6E15               	movwf	memset@dest^0,c
 10221  0043B0  0E00               	movlw	0
 10222  0043B2  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10223  0043B4  6E16               	movwf	(memset@dest+1)^0,c
 10224  0043B6  0E00               	movlw	0
 10225  0043B8  6E18               	movwf	(memset@c+1)^0,c
 10226  0043BA  0E00               	movlw	0
 10227  0043BC  6E17               	movwf	memset@c^0,c
 10228  0043BE  0E00               	movlw	0
 10229  0043C0  6E1A               	movwf	(memset@n+1)^0,c
 10230  0043C2  0E80               	movlw	128
 10231  0043C4  6E19               	movwf	memset@n^0,c
 10232  0043C6  EC2B  F022         	call	_memset	;wreg free
 10233                           
 10234                           ;scdm.c: 104:   break;
 10235  0043CA  0012               	return	
 10236  0043CC                     l10685:
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;scdm.c: 107:   if (a_ctx->cpos < (128 - 1)) {
 10240  0043CC  EE20 F082          	lfsr	2,130
 10241  0043D0  5032               	movf	cli_read@a_ctx^0,w,c
 10242  0043D2  26D9               	addwf	fsr2l,f,c
 10243  0043D4  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10244  0043D6  22DA               	addwfc	fsr2h,f,c
 10245  0043D8  0E7F               	movlw	127
 10246  0043DA  60DF               	cpfslt	indf2,c
 10247  0043DC  0012               	return	
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;scdm.c: 108:    a_ctx->cmd[a_ctx->cpos++] = i;
 10251  0043DE  EE20 F082          	lfsr	2,130
 10252  0043E2  5032               	movf	cli_read@a_ctx^0,w,c
 10253  0043E4  26D9               	addwf	fsr2l,f,c
 10254  0043E6  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10255  0043E8  22DA               	addwfc	fsr2h,f,c
 10256  0043EA  50DF               	movf	indf2,w,c
 10257  0043EC  6E34               	movwf	??_cli_read^0,c
 10258  0043EE  5034               	movf	??_cli_read^0,w,c
 10259  0043F0  2432               	addwf	cli_read@a_ctx^0,w,c
 10260  0043F2  6E35               	movwf	(??_cli_read+1)^0,c
 10261  0043F4  0E00               	movlw	0
 10262  0043F6  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10263  0043F8  6E36               	movwf	(??_cli_read+2)^0,c
 10264  0043FA  0E02               	movlw	2
 10265  0043FC  2435               	addwf	(??_cli_read+1)^0,w,c
 10266  0043FE  6ED9               	movwf	fsr2l,c
 10267  004400  0E00               	movlw	0
 10268  004402  2036               	addwfc	(??_cli_read+2)^0,w,c
 10269  004404  6EDA               	movwf	fsr2h,c
 10270  004406  0060  F1B3  FFDF   	movff	cli_read@i,indf2
 10271  00440C  EE20 F082          	lfsr	2,130
 10272  004410  5032               	movf	cli_read@a_ctx^0,w,c
 10273  004412  26D9               	addwf	fsr2l,f,c
 10274  004414  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10275  004416  22DA               	addwfc	fsr2h,f,c
 10276  004418  2ADF               	incf	indf2,f,c
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;scdm.c: 109:    linux_putc(&i, 1);
 10280  00441A  0E6C               	movlw	low cli_read@i
 10281  00441C  6E2C               	movwf	linux_putc@data^0,c
 10282  00441E  6A2D               	clrf	(linux_putc@data+1)^0,c
 10283  004420  0E01               	movlw	1
 10284  004422  6E2E               	movwf	linux_putc@a_len^0,c
 10285  004424  EC9F  F02E         	call	_linux_putc	;wreg free
 10286  004428  0012               	return	
 10287  00442A                     l10693:
 10288  00442A  0100               	movlb	0	; () banked
 10289  00442C  516C               	movf	cli_read@i& (0+255),w,b
 10290  00442E  6E34               	movwf	??_cli_read^0,c
 10291  004430  6A35               	clrf	(??_cli_read+1)^0,c
 10292                           
 10293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10294                           ; Switch size 1, requested type "simple"
 10295                           ; Number of cases is 1, Range of values is 0 to 0
 10296                           ; switch strategies available:
 10297                           ; Name         Instructions Cycles
 10298                           ; simple_byte            4     3 (average)
 10299                           ;	Chosen strategy is simple_byte
 10300  004432  5035               	movf	(??_cli_read+1)^0,w,c
 10301  004434  0A00               	xorlw	0	; case 0
 10302  004436  A4D8               	btfss	status,2,c
 10303  004438  D7C9               	goto	l10685
 10304                           
 10305                           ; BSR set to: 0
 10306                           ; Switch size 1, requested type "simple"
 10307                           ; Number of cases is 4, Range of values is 13 to 127
 10308                           ; switch strategies available:
 10309                           ; Name         Instructions Cycles
 10310                           ; simple_byte           13     7 (average)
 10311                           ;	Chosen strategy is simple_byte
 10312  00443A  5034               	movf	??_cli_read^0,w,c
 10313  00443C  0A0D               	xorlw	13	; case 13
 10314  00443E  B4D8               	btfsc	status,2,c
 10315  004440  D76A               	goto	l10671
 10316  004442  0A16               	xorlw	22	; case 27
 10317  004444  B4D8               	btfsc	status,2,c
 10318  004446  0012               	return	
 10319  004448  0A65               	xorlw	101	; case 126
 10320  00444A  B4D8               	btfsc	status,2,c
 10321  00444C  0012               	return	
 10322  00444E  0A01               	xorlw	1	; case 127
 10323  004450  B4D8               	btfsc	status,2,c
 10324  004452  0012               	return		;funcret
 10325  004454  D7BB               	goto	l10685
 10326  004456                     __end_of_cli_read:
 10327                           	callstack 0
 10328                           
 10329 ;; *************** function _memset *****************
 10330 ;; Defined at:
 10331 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;  dest            2   20[COMRAM] PTR void 
 10334 ;;		 -> cli_ctx(131), 
 10335 ;;  c               2   22[COMRAM] int 
 10336 ;;  n               2   24[COMRAM] unsigned int 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  s               2   30[COMRAM] PTR unsigned char 
 10339 ;;		 -> cli_ctx(131), 
 10340 ;;  k               2   28[COMRAM] unsigned int 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  2   20[COMRAM] PTR void 
 10343 ;; Registers used:
 10344 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/2
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10350 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10351 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10353 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10354 ;;Total ram usage:       12 bytes
 10355 ;; Hardware stack levels used: 1
 10356 ;; Hardware stack levels required when called: 4
 10357 ;; This function calls:
 10358 ;;		Nothing
 10359 ;; This function is called by:
 10360 ;;		_cli_init
 10361 ;;		_cli_read
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           	psect	text34
 10366  004456                     __ptext34:
 10367                           	callstack 0
 10368  004456                     _memset:
 10369                           	callstack 24
 10370                           
 10371                           ;incstack = 0
 10372  004456  C015  F01F         	movff	memset@dest,memset@s
 10373  00445A  C016  F020         	movff	memset@dest+1,memset@s+1
 10374  00445E  5019               	movf	memset@n^0,w,c
 10375  004460  101A               	iorwf	(memset@n+1)^0,w,c
 10376  004462  B4D8               	btfsc	status,2,c
 10377  004464  0012               	return	
 10378  004466  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10379  00446C  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10380  004472  0060  F05F  FFDF   	movff	memset@c,indf2
 10381  004478  5019               	movf	memset@n^0,w,c
 10382  00447A  241F               	addwf	memset@s^0,w,c
 10383  00447C  6E1B               	movwf	??_memset^0,c
 10384  00447E  501A               	movf	(memset@n+1)^0,w,c
 10385  004480  2020               	addwfc	(memset@s+1)^0,w,c
 10386  004482  6E1C               	movwf	(??_memset+1)^0,c
 10387  004484  0EFF               	movlw	255
 10388  004486  241B               	addwf	??_memset^0,w,c
 10389  004488  6ED9               	movwf	fsr2l,c
 10390  00448A  0EFF               	movlw	255
 10391  00448C  201C               	addwfc	(??_memset+1)^0,w,c
 10392  00448E  6EDA               	movwf	fsr2h,c
 10393  004490  0060  F05F  FFDF   	movff	memset@c,indf2
 10394  004496  501A               	movf	(memset@n+1)^0,w,c
 10395  004498  E104               	bnz	l10399
 10396  00449A  0E03               	movlw	3
 10397  00449C  5C19               	subwf	memset@n^0,w,c
 10398  00449E  A0D8               	btfss	status,0,c
 10399  0044A0  0012               	return	
 10400  0044A2                     l10399:
 10401  0044A2  EE20 F001          	lfsr	2,1
 10402  0044A6  501F               	movf	memset@s^0,w,c
 10403  0044A8  26D9               	addwf	fsr2l,f,c
 10404  0044AA  5020               	movf	(memset@s+1)^0,w,c
 10405  0044AC  22DA               	addwfc	fsr2h,f,c
 10406  0044AE  0060  F05F  FFDF   	movff	memset@c,indf2
 10407  0044B4  EE20 F002          	lfsr	2,2
 10408  0044B8  501F               	movf	memset@s^0,w,c
 10409  0044BA  26D9               	addwf	fsr2l,f,c
 10410  0044BC  5020               	movf	(memset@s+1)^0,w,c
 10411  0044BE  22DA               	addwfc	fsr2h,f,c
 10412  0044C0  0060  F05F  FFDF   	movff	memset@c,indf2
 10413  0044C6  5019               	movf	memset@n^0,w,c
 10414  0044C8  241F               	addwf	memset@s^0,w,c
 10415  0044CA  6E1B               	movwf	??_memset^0,c
 10416  0044CC  501A               	movf	(memset@n+1)^0,w,c
 10417  0044CE  2020               	addwfc	(memset@s+1)^0,w,c
 10418  0044D0  6E1C               	movwf	(??_memset+1)^0,c
 10419  0044D2  0EFE               	movlw	254
 10420  0044D4  241B               	addwf	??_memset^0,w,c
 10421  0044D6  6ED9               	movwf	fsr2l,c
 10422  0044D8  0EFF               	movlw	255
 10423  0044DA  201C               	addwfc	(??_memset+1)^0,w,c
 10424  0044DC  6EDA               	movwf	fsr2h,c
 10425  0044DE  0060  F05F  FFDF   	movff	memset@c,indf2
 10426  0044E4  5019               	movf	memset@n^0,w,c
 10427  0044E6  241F               	addwf	memset@s^0,w,c
 10428  0044E8  6E1B               	movwf	??_memset^0,c
 10429  0044EA  501A               	movf	(memset@n+1)^0,w,c
 10430  0044EC  2020               	addwfc	(memset@s+1)^0,w,c
 10431  0044EE  6E1C               	movwf	(??_memset+1)^0,c
 10432  0044F0  0EFD               	movlw	253
 10433  0044F2  241B               	addwf	??_memset^0,w,c
 10434  0044F4  6ED9               	movwf	fsr2l,c
 10435  0044F6  0EFF               	movlw	255
 10436  0044F8  201C               	addwfc	(??_memset+1)^0,w,c
 10437  0044FA  6EDA               	movwf	fsr2h,c
 10438  0044FC  0060  F05F  FFDF   	movff	memset@c,indf2
 10439  004502  501A               	movf	(memset@n+1)^0,w,c
 10440  004504  E104               	bnz	l10405
 10441  004506  0E07               	movlw	7
 10442  004508  5C19               	subwf	memset@n^0,w,c
 10443  00450A  A0D8               	btfss	status,0,c
 10444  00450C  0012               	return	
 10445  00450E                     l10405:
 10446  00450E  EE20 F003          	lfsr	2,3
 10447  004512  501F               	movf	memset@s^0,w,c
 10448  004514  26D9               	addwf	fsr2l,f,c
 10449  004516  5020               	movf	(memset@s+1)^0,w,c
 10450  004518  22DA               	addwfc	fsr2h,f,c
 10451  00451A  0060  F05F  FFDF   	movff	memset@c,indf2
 10452  004520  5019               	movf	memset@n^0,w,c
 10453  004522  241F               	addwf	memset@s^0,w,c
 10454  004524  6E1B               	movwf	??_memset^0,c
 10455  004526  501A               	movf	(memset@n+1)^0,w,c
 10456  004528  2020               	addwfc	(memset@s+1)^0,w,c
 10457  00452A  6E1C               	movwf	(??_memset+1)^0,c
 10458  00452C  0EFC               	movlw	252
 10459  00452E  241B               	addwf	??_memset^0,w,c
 10460  004530  6ED9               	movwf	fsr2l,c
 10461  004532  0EFF               	movlw	255
 10462  004534  201C               	addwfc	(??_memset+1)^0,w,c
 10463  004536  6EDA               	movwf	fsr2h,c
 10464  004538  0060  F05F  FFDF   	movff	memset@c,indf2
 10465  00453E  501A               	movf	(memset@n+1)^0,w,c
 10466  004540  E104               	bnz	l10411
 10467  004542  0E09               	movlw	9
 10468  004544  5C19               	subwf	memset@n^0,w,c
 10469  004546  A0D8               	btfss	status,0,c
 10470  004548  0012               	return	
 10471  00454A                     l10411:
 10472  00454A  C01F  F01B         	movff	memset@s,??_memset
 10473  00454E  C020  F01C         	movff	memset@s+1,??_memset+1
 10474  004552  1E1B               	comf	??_memset^0,f,c
 10475  004554  1E1C               	comf	(??_memset+1)^0,f,c
 10476  004556  4A1B               	infsnz	??_memset^0,f,c
 10477  004558  2A1C               	incf	(??_memset+1)^0,f,c
 10478  00455A  0E03               	movlw	3
 10479  00455C  141B               	andwf	??_memset^0,w,c
 10480  00455E  6E1D               	movwf	memset@k^0,c
 10481  004560  6A1E               	clrf	(memset@k+1)^0,c
 10482  004562  501D               	movf	memset@k^0,w,c
 10483  004564  261F               	addwf	memset@s^0,f,c
 10484  004566  501E               	movf	(memset@k+1)^0,w,c
 10485  004568  2220               	addwfc	(memset@s+1)^0,f,c
 10486  00456A  501D               	movf	memset@k^0,w,c
 10487  00456C  5E19               	subwf	memset@n^0,f,c
 10488  00456E  501E               	movf	(memset@k+1)^0,w,c
 10489  004570  5A1A               	subwfb	(memset@n+1)^0,f,c
 10490  004572  0EFC               	movlw	252
 10491  004574  1619               	andwf	memset@n^0,f,c
 10492  004576  0EFF               	movlw	255
 10493  004578  161A               	andwf	(memset@n+1)^0,f,c
 10494  00457A  D00E               	goto	l10419
 10495  00457C                     l10413:
 10496  00457C  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10497  004582  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10498  004588  0060  F05F  FFDF   	movff	memset@c,indf2
 10499  00458E  0619               	decf	memset@n^0,f,c
 10500  004590  A0D8               	btfss	status,0,c
 10501  004592  061A               	decf	(memset@n+1)^0,f,c
 10502  004594  4A1F               	infsnz	memset@s^0,f,c
 10503  004596  2A20               	incf	(memset@s+1)^0,f,c
 10504  004598                     l10419:
 10505  004598  5019               	movf	memset@n^0,w,c
 10506  00459A  101A               	iorwf	(memset@n+1)^0,w,c
 10507  00459C  B4D8               	btfsc	status,2,c
 10508  00459E  0012               	return	
 10509  0045A0  D7ED               	goto	l10413
 10510  0045A2                     __end_of_memset:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function _linux_putc *****************
 10514 ;; Defined at:
 10515 ;;		line 47 in file "scdm.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  data            2   43[COMRAM] PTR unsigned char 
 10518 ;;		 -> STR_11(3), cli_read@i(1), 
 10519 ;;  a_len           1   45[COMRAM] unsigned char 
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      unsigned char 
 10524 ;; Registers used:
 10525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10531 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10534 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10535 ;;Total ram usage:        3 bytes
 10536 ;; Hardware stack levels used: 1
 10537 ;; Hardware stack levels required when called: 9
 10538 ;; This function calls:
 10539 ;;		_puts
 10540 ;; This function is called by:
 10541 ;;		_cli_read
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text35
 10546  005D3E                     __ptext35:
 10547                           	callstack 0
 10548  005D3E                     _linux_putc:
 10549                           	callstack 20
 10550                           
 10551                           ;scdm.c: 47: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 48: {;scdm.c: 49: 
      +                           puts((const char *) data);
 10552                           
 10553                           ;incstack = 0
 10554  005D3E  C02C  F029         	movff	linux_putc@data,puts@s
 10555  005D42  C02D  F02A         	movff	linux_putc@data+1,puts@s+1
 10556  005D46  EC9C  F02C         	call	_puts	;wreg free
 10557  005D4A  0012               	return		;funcret
 10558  005D4C                     __end_of_linux_putc:
 10559                           	callstack 0
 10560                           
 10561 ;; *************** function _linux_getc *****************
 10562 ;; Defined at:
 10563 ;;		line 37 in file "scdm.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  a_data          1   21[COMRAM] PTR unsigned char 
 10566 ;;		 -> cli_read@i(1), 
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;		None
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  1    wreg      unsigned char 
 10571 ;; Registers used:
 10572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10573 ;; Tracked objects:
 10574 ;;		On entry : 3F/0
 10575 ;;		On exit  : 6/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10578 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10580 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10582 ;;Total ram usage:        2 bytes
 10583 ;; Hardware stack levels used: 1
 10584 ;; Hardware stack levels required when called: 5
 10585 ;; This function calls:
 10586 ;;		_UART1_Read
 10587 ;;		_UART1_is_rx_ready
 10588 ;; This function is called by:
 10589 ;;		_cli_read
 10590 ;; This function uses a non-reentrant model
 10591 ;;
 10592                           
 10593                           	psect	text36
 10594  005B30                     __ptext36:
 10595                           	callstack 0
 10596  005B30                     _linux_getc:
 10597                           	callstack 24
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;scdm.c: 37: uint8_t linux_getc(uint8_t *a_data);scdm.c: 38: {;scdm.c: 39:  if (UART1_is
      +                          _rx_ready()) {
 10601                           
 10602                           ;incstack = 0
 10603  005B30  ECA6  F02E         	call	_UART1_is_rx_ready	;wreg free
 10604  005B34  0900               	iorlw	0
 10605  005B36  B4D8               	btfsc	status,2,c
 10606  005B38  D00B               	goto	l10591
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;scdm.c: 40:   a_data[0] = UART1_Read();
 10610  005B3A  EC02  F02C         	call	_UART1_Read	;wreg free
 10611  005B3E  6E17               	movwf	??_linux_getc^0,c
 10612  005B40  5016               	movf	linux_getc@a_data^0,w,c
 10613  005B42  6ED9               	movwf	fsr2l,c
 10614  005B44  6ADA               	clrf	fsr2h,c
 10615  005B46  0060  F05F  FFDF   	movff	??_linux_getc,indf2
 10616                           
 10617                           ; BSR set to: 57
 10618                           ;scdm.c: 41:   return 1;
 10619  005B4C  0E01               	movlw	1
 10620  005B4E  0012               	return	
 10621  005B50                     l10591:
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;scdm.c: 43:   return 0;
 10625  005B50  0E00               	movlw	0
 10626  005B52  0012               	return		;funcret
 10627  005B54                     __end_of_linux_getc:
 10628                           	callstack 0
 10629                           
 10630 ;; *************** function _UART1_is_rx_ready *****************
 10631 ;; Defined at:
 10632 ;;		line 161 in file "mcc_generated_files/uart1.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;		None
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;		None
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  1    wreg      _Bool 
 10639 ;; Registers used:
 10640 ;;		wreg, status,2
 10641 ;; Tracked objects:
 10642 ;;		On entry : 3F/0
 10643 ;;		On exit  : 3F/0
 10644 ;;		Unchanged: 3F/0
 10645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10650 ;;Total ram usage:        0 bytes
 10651 ;; Hardware stack levels used: 1
 10652 ;; Hardware stack levels required when called: 4
 10653 ;; This function calls:
 10654 ;;		Nothing
 10655 ;; This function is called by:
 10656 ;;		_linux_getc
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660                           	psect	text37
 10661  005D4C                     __ptext37:
 10662                           	callstack 0
 10663  005D4C                     _UART1_is_rx_ready:
 10664                           	callstack 24
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;mcc_generated_files/uart1.c: 163:     return (uart1RxCount ? 1 : 0);
 10668                           
 10669                           ;incstack = 0
 10670  005D4C  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10671  005D4E  B4D8               	btfsc	status,2,c
 10672  005D50  D002               	goto	u12050
 10673  005D52  0E01               	movlw	1
 10674  005D54  0012               	return	
 10675  005D56                     u12050:
 10676  005D56  0E00               	movlw	0
 10677                           
 10678                           ; BSR set to: 0
 10679  005D58  0012               	return		;funcret
 10680  005D5A                     __end_of_UART1_is_rx_ready:
 10681                           	callstack 0
 10682                           
 10683 ;; *************** function _UART1_Read *****************
 10684 ;; Defined at:
 10685 ;;		line 180 in file "mcc_generated_files/uart1.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;		None
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;  readValue       1   20[COMRAM] unsigned char 
 10690 ;; Return value:  Size  Location     Type
 10691 ;;                  1    wreg      unsigned char 
 10692 ;; Registers used:
 10693 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10694 ;; Tracked objects:
 10695 ;;		On entry : 3F/0
 10696 ;;		On exit  : 3F/39
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10703 ;;Total ram usage:        1 bytes
 10704 ;; Hardware stack levels used: 1
 10705 ;; Hardware stack levels required when called: 4
 10706 ;; This function calls:
 10707 ;;		Nothing
 10708 ;; This function is called by:
 10709 ;;		_linux_getc
 10710 ;; This function uses a non-reentrant model
 10711 ;;
 10712                           
 10713                           	psect	text38
 10714  005804                     __ptext38:
 10715                           	callstack 0
 10716  005804                     _UART1_Read:
 10717                           	callstack 24
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10721                           
 10722                           ; BSR set to: 0
 10723                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10724                           
 10725                           ; BSR set to: 0
 10726                           ;incstack = 0
 10727  005804  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10728  005806  B4D8               	btfsc	status,2,c
 10729  005808  D7FD               	goto	__ptext38
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;mcc_generated_files/uart1.c: 188:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10733  00580A  0E00               	movlw	low _uart1RxStatusBuffer
 10734  00580C  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10735  00580E  6ED9               	movwf	fsr2l,c
 10736  005810  6ADA               	clrf	fsr2h,c
 10737  005812  0E01               	movlw	high _uart1RxStatusBuffer
 10738  005814  22DA               	addwfc	fsr2h,f,c
 10739  005816  50DF               	movf	indf2,w,c
 10740  005818  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 10741                           
 10742                           ;mcc_generated_files/uart1.c: 190:     readValue = uart1RxBuffer[uart1RxTail++];
 10743  00581A  0E00               	movlw	low _uart1RxBuffer
 10744  00581C  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10745  00581E  6ED9               	movwf	fsr2l,c
 10746  005820  6ADA               	clrf	fsr2h,c
 10747  005822  0E02               	movlw	high _uart1RxBuffer
 10748  005824  22DA               	addwfc	fsr2h,f,c
 10749  005826  50DF               	movf	indf2,w,c
 10750  005828  6E15               	movwf	UART1_Read@readValue^0,c
 10751                           
 10752                           ; BSR set to: 0
 10753  00582A  2A47               	incf	_uart1RxTail^0,f,c	;volatile
 10754                           
 10755                           ; BSR set to: 0
 10756                           ;mcc_generated_files/uart1.c: 191:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10757  00582C  0E3F               	movlw	63
 10758  00582E  6447               	cpfsgt	_uart1RxTail^0,c
 10759  005830  D002               	goto	l10365
 10760                           
 10761                           ; BSR set to: 0
 10762                           ;mcc_generated_files/uart1.c: 192:     {;mcc_generated_files/uart1.c: 193:         uart1
      +                          RxTail = 0;
 10763  005832  0E00               	movlw	0
 10764  005834  6E47               	movwf	_uart1RxTail^0,c	;volatile
 10765  005836                     l10365:
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;mcc_generated_files/uart1.c: 195:     PIE3bits.U1RXIE = 0;
 10769  005836  0139               	movlb	57	; () banked
 10770  005838  9793               	bcf	147,3,b	;volatile
 10771                           
 10772                           ; BSR set to: 57
 10773                           ;mcc_generated_files/uart1.c: 196:     uart1RxCount--;
 10774  00583A  0646               	decf	_uart1RxCount^0,f,c	;volatile
 10775                           
 10776                           ; BSR set to: 57
 10777                           ;mcc_generated_files/uart1.c: 197:     PIE3bits.U1RXIE = 1;
 10778  00583C  8793               	bsf	147,3,b	;volatile
 10779                           
 10780                           ; BSR set to: 57
 10781                           ;mcc_generated_files/uart1.c: 199:     return readValue;
 10782  00583E  5015               	movf	UART1_Read@readValue^0,w,c
 10783                           
 10784                           ; BSR set to: 57
 10785  005840  0012               	return		;funcret
 10786  005842                     __end_of_UART1_Read:
 10787                           	callstack 0
 10788                           
 10789 ;; *************** function __cli_interpret_cmd *****************
 10790 ;; Defined at:
 10791 ;;		line 53 in file "scdm.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  a_ctx           2   45[COMRAM] PTR struct _t_cli_ctx
 10794 ;;		 -> cli_ctx(131), 
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;  i               1   48[COMRAM] unsigned char 
 10797 ;;  ret             1   47[COMRAM] unsigned char 
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  1    wreg      unsigned char 
 10800 ;; Registers used:
 10801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10809 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10810 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10811 ;;Total ram usage:       14 bytes
 10812 ;; Hardware stack levels used: 1
 10813 ;; Hardware stack levels required when called: 10
 10814 ;; This function calls:
 10815 ;;		Absolute function
 10816 ;;		_fh_po
 10817 ;;		_fh_pr
 10818 ;;		_fh_ps
 10819 ;;		_strlen
 10820 ;;		_strncmp
 10821 ;; This function is called by:
 10822 ;;		_cli_read
 10823 ;; This function uses a non-reentrant model
 10824 ;;
 10825                           
 10826                           	psect	text39
 10827  003C80                     __ptext39:
 10828                           	callstack 0
 10829  003C80                     __cli_interpret_cmd:
 10830                           	callstack 19
 10831                           
 10832                           ;scdm.c: 53: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 54: {;scdm.c: 5
      +                          5:  uint8_t i = 0;
 10833                           
 10834                           ; BSR set to: 57
 10835                           ;incstack = 0
 10836  003C80  0E00               	movlw	0
 10837  003C82  6E31               	movwf	__cli_interpret_cmd@i^0,c
 10838                           
 10839                           ;scdm.c: 56:  uint8_t ret = E_CMD_OK;
 10840  003C84  0E00               	movlw	0
 10841  003C86  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 10842                           
 10843                           ;scdm.c: 58:  if (!strlen(a_ctx->cmd)) {
 10844  003C88  0E02               	movlw	2
 10845  003C8A  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10846  003C8C  6E15               	movwf	strlen@s^0,c
 10847  003C8E  0E00               	movlw	0
 10848  003C90  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10849  003C92  6E16               	movwf	(strlen@s+1)^0,c
 10850  003C94  EC33  F02B         	call	_strlen	;wreg free
 10851  003C98  5015               	movf	?_strlen^0,w,c
 10852  003C9A  1016               	iorwf	(?_strlen+1)^0,w,c
 10853  003C9C  A4D8               	btfss	status,2,c
 10854  003C9E  D002               	goto	l10607
 10855                           
 10856                           ;scdm.c: 59:   return E_CMD_EMPTY;
 10857  003CA0  0E03               	movlw	3
 10858  003CA2  0012               	return	
 10859  003CA4                     l10607:
 10860                           
 10861                           ;scdm.c: 62:  if (strlen(a_ctx->cmd) < 2) {
 10862  003CA4  0E02               	movlw	2
 10863  003CA6  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10864  003CA8  6E15               	movwf	strlen@s^0,c
 10865  003CAA  0E00               	movlw	0
 10866  003CAC  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10867  003CAE  6E16               	movwf	(strlen@s+1)^0,c
 10868  003CB0  EC33  F02B         	call	_strlen	;wreg free
 10869  003CB4  5016               	movf	(?_strlen+1)^0,w,c
 10870  003CB6  E103               	bnz	u12181
 10871  003CB8  0E02               	movlw	2
 10872  003CBA  5C15               	subwf	?_strlen^0,w,c
 10873  003CBC  B0D8               	btfsc	status,0,c
 10874  003CBE                     u12181:
 10875  003CBE  D082               	goto	l10619
 10876                           
 10877                           ;scdm.c: 63:   return E_CMD_TOO_SHORT;
 10878  003CC0  0E02               	movlw	2
 10879  003CC2  0012               	return	
 10880  003CC4                     l10613:
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;scdm.c: 67:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 10884  003CC4  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10885  003CC6  0D04               	mullw	4
 10886  003CC8  006F FFCC  F060    	movff	prodl,??__cli_interpret_cmd
 10887  003CCE  006F FFD0  F061    	movff	prodh,??__cli_interpret_cmd+1
 10888  003CD4  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10889  003CDA  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10890  003CE0  006F FF78  F062    	movff	postinc2,??__cli_interpret_cmd+2
 10891  003CE6  006F FF74  F063    	movff	postdec2,??__cli_interpret_cmd+3
 10892  003CEC  5160               	movf	??__cli_interpret_cmd& (0+255),w,b
 10893  003CEE  2562               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 10894  003CF0  6ED9               	movwf	fsr2l,c
 10895  003CF2  5161               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 10896  003CF4  2163               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 10897  003CF6  6EDA               	movwf	fsr2h,c
 10898  003CF8  50DF               	movf	indf2,w,c
 10899  003CFA  6F64               	movwf	(??__cli_interpret_cmd+4)& (0+255),b
 10900  003CFC  C064  F019         	movff	??__cli_interpret_cmd+4,strncmp@_l
 10901  003D00  5019               	movf	strncmp@_l^0,w,c
 10902  003D02  A4D8               	btfss	status,2,c
 10903  003D04  0E20               	movlw	high __smallconst
 10904  003D06  6E1A               	movwf	(strncmp@_l+1)^0,c
 10905  003D08  0E02               	movlw	2
 10906  003D0A  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10907  003D0C  6E1B               	movwf	strncmp@_r^0,c
 10908  003D0E  0E00               	movlw	0
 10909  003D10  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10910  003D12  6E1C               	movwf	(strncmp@_r+1)^0,c
 10911  003D14  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10912  003D16  0D04               	mullw	4
 10913  003D18  006F FFCC  F065    	movff	prodl,??__cli_interpret_cmd+5
 10914  003D1E  006F FFD0  F066    	movff	prodh,??__cli_interpret_cmd+6
 10915  003D24  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10916  003D2A  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10917  003D30  006F FF78  F067    	movff	postinc2,??__cli_interpret_cmd+7
 10918  003D36  006F FF74  F068    	movff	postdec2,??__cli_interpret_cmd+8
 10919  003D3C  5165               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 10920  003D3E  2567               	addwf	(??__cli_interpret_cmd+7)& (0+255),w,b
 10921  003D40  6ED9               	movwf	fsr2l,c
 10922  003D42  5166               	movf	(??__cli_interpret_cmd+6)& (0+255),w,b
 10923  003D44  2168               	addwfc	(??__cli_interpret_cmd+8)& (0+255),w,b
 10924  003D46  6EDA               	movwf	fsr2h,c
 10925  003D48  50DF               	movf	indf2,w,c
 10926  003D4A  6F69               	movwf	(??__cli_interpret_cmd+9)& (0+255),b
 10927  003D4C  C069  F015         	movff	??__cli_interpret_cmd+9,strlen@s
 10928  003D50  5015               	movf	strlen@s^0,w,c
 10929  003D52  A4D8               	btfss	status,2,c
 10930  003D54  0E20               	movlw	high __smallconst
 10931  003D56  6E16               	movwf	(strlen@s+1)^0,c
 10932  003D58  EC33  F02B         	call	_strlen	;wreg free
 10933  003D5C  C015  F01D         	movff	?_strlen,strncmp@n
 10934  003D60  C016  F01E         	movff	?_strlen+1,strncmp@n+1
 10935  003D64  ECCF  F020         	call	_strncmp	;wreg free
 10936  003D68  5019               	movf	?_strncmp^0,w,c
 10937  003D6A  101A               	iorwf	(?_strncmp+1)^0,w,c
 10938  003D6C  A4D8               	btfss	status,2,c
 10939  003D6E  D029               	goto	l10617
 10940                           
 10941                           ;scdm.c: 69:    a_ctx->cmds[i].fh((void *) a_ctx);
 10942  003D70  C02E  F02C         	movff	__cli_interpret_cmd@a_ctx,fh_po@a_data
 10943  003D74  C02F  F02D         	movff	__cli_interpret_cmd@a_ctx+1,fh_po@a_data+1
 10944  003D78  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10945  003D7A  0D04               	mullw	4
 10946  003D7C  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10947  003D82  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10948  003D88  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10949  003D8E  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10950  003D94  50F3               	movf	243,w,c
 10951  003D96  0100               	movlb	0	; () banked
 10952  003D98  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10953  003D9A  50F4               	movf	244,w,c
 10954  003D9C  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10955  003D9E  0E01               	movlw	1
 10956  003DA0  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10957  003DA2  6ED9               	movwf	fsr2l,c
 10958  003DA4  0E00               	movlw	0
 10959  003DA6  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10960  003DA8  6EDA               	movwf	fsr2h,c
 10961  003DAA  D801               	call	u12208
 10962  003DAC  D029               	goto	u12210
 10963  003DAE                     u12208:
 10964  003DAE  0005               	push	
 10965  003DB0  6EFA               	movwf	pclath,c
 10966  003DB2  50DE               	movf	postinc2,w,c
 10967  003DB4  6EFD               	movwf	tosl,c
 10968  003DB6  50DE               	movf	postinc2,w,c
 10969  003DB8  6EFE               	movwf	tosh,c
 10970  003DBA  50DE               	movf	postinc2,w,c
 10971  003DBC  6EFF               	movwf	tosu,c
 10972  003DBE  50FA               	movf	pclath,w,c
 10973  003DC0  0012               	return		;indir
 10974  003DC2                     l10617:
 10975                           
 10976                           ;scdm.c: 72:   i++;
 10977  003DC2  2A31               	incf	__cli_interpret_cmd@i^0,f,c
 10978  003DC4                     l10619:
 10979                           
 10980                           ;scdm.c: 66:  while (a_ctx->cmds[i].fh) {
 10981  003DC4  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10982  003DC6  0D04               	mullw	4
 10983  003DC8  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10984  003DCE  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10985  003DD4  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10986  003DDA  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10987  003DE0  50F3               	movf	243,w,c
 10988  003DE2  0100               	movlb	0	; () banked
 10989  003DE4  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10990  003DE6  50F4               	movf	244,w,c
 10991  003DE8  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10992  003DEA  0E01               	movlw	1
 10993  003DEC  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10994  003DEE  6ED9               	movwf	fsr2l,c
 10995  003DF0  0E00               	movlw	0
 10996  003DF2  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10997  003DF4  6EDA               	movwf	fsr2h,c
 10998  003DF6  50DE               	movf	postinc2,w,c
 10999  003DF8  10DE               	iorwf	postinc2,w,c
 11000  003DFA  10DE               	iorwf	postinc2,w,c
 11001  003DFC  A4D8               	btfss	status,2,c
 11002  003DFE  D762               	goto	l10613
 11003  003E00                     u12210:
 11004                           
 11005                           ;scdm.c: 75:  if (!a_ctx->cmds[i].fh) {
 11006  003E00  5031               	movf	__cli_interpret_cmd@i^0,w,c
 11007  003E02  0D04               	mullw	4
 11008  003E04  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 11009  003E0A  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 11010  003E10  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 11011  003E16  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 11012  003E1C  50F3               	movf	243,w,c
 11013  003E1E  0100               	movlb	0	; () banked
 11014  003E20  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 11015  003E22  50F4               	movf	244,w,c
 11016  003E24  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 11017  003E26  0E01               	movlw	1
 11018  003E28  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 11019  003E2A  6ED9               	movwf	fsr2l,c
 11020  003E2C  0E00               	movlw	0
 11021  003E2E  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 11022  003E30  6EDA               	movwf	fsr2h,c
 11023  003E32  50DE               	movf	postinc2,w,c
 11024  003E34  10DE               	iorwf	postinc2,w,c
 11025  003E36  10DE               	iorwf	postinc2,w,c
 11026  003E38  A4D8               	btfss	status,2,c
 11027  003E3A  D002               	goto	l1130
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;scdm.c: 76:   ret = E_CMD_NOT_FOUND;
 11031  003E3C  0E01               	movlw	1
 11032  003E3E  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 11033  003E40                     l1130:
 11034                           
 11035                           ; BSR set to: 0
 11036                           ;scdm.c: 79:  return ret;
 11037  003E40  5030               	movf	__cli_interpret_cmd@ret^0,w,c
 11038  003E42  0012               	return		;funcret
 11039  003E44                     __end_of__cli_interpret_cmd:
 11040                           	callstack 0
 11041                           
 11042 ;; *************** function _strncmp *****************
 11043 ;; Defined at:
 11044 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  _l              2   24[COMRAM] PTR const unsigned char 
 11047 ;;		 -> vfpfcnvrt@ct(3), STR_10(21), NULL(0), STR_9(3), 
 11048 ;;		 -> STR_8(3), STR_7(3), STR_6(79), 
 11049 ;;  _r              2   26[COMRAM] PTR const unsigned char 
 11050 ;;		 -> cli_ctx.cmd(128), STR_27(4), STR_22(3), cli_ctx(131), 
 11051 ;;  n               2   28[COMRAM] unsigned int 
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;  r               2   34[COMRAM] PTR const unsigned char 
 11054 ;;		 -> cli_ctx.cmd(128), STR_27(4), STR_22(3), cli_ctx(131), 
 11055 ;;  l               2   32[COMRAM] PTR const unsigned char 
 11056 ;;		 -> vfpfcnvrt@ct(3), STR_10(21), NULL(0), STR_9(3), 
 11057 ;;		 -> STR_8(3), STR_7(3), STR_6(79), 
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  2   24[COMRAM] int 
 11060 ;; Registers used:
 11061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11067 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11068 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11070 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11071 ;;Total ram usage:       12 bytes
 11072 ;; Hardware stack levels used: 1
 11073 ;; Hardware stack levels required when called: 4
 11074 ;; This function calls:
 11075 ;;		Nothing
 11076 ;; This function is called by:
 11077 ;;		__cli_interpret_cmd
 11078 ;;		_vfpfcnvrt
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           	psect	text40
 11083  00419E                     __ptext40:
 11084                           	callstack 0
 11085  00419E                     _strncmp:
 11086                           	callstack 21
 11087                           
 11088                           ;incstack = 0
 11089  00419E  C019  F021         	movff	strncmp@_l,strncmp@l
 11090  0041A2  C01A  F022         	movff	strncmp@_l+1,strncmp@l+1
 11091  0041A6  C01B  F023         	movff	strncmp@_r,strncmp@r
 11092  0041AA  C01C  F024         	movff	strncmp@_r+1,strncmp@r+1
 11093  0041AE  061D               	decf	strncmp@n^0,f,c
 11094  0041B0  A0D8               	btfss	status,0,c
 11095  0041B2  061E               	decf	(strncmp@n+1)^0,f,c
 11096  0041B4  281D               	incf	strncmp@n^0,w,c
 11097  0041B6  E10F               	bnz	l9719
 11098  0041B8  281E               	incf	(strncmp@n+1)^0,w,c
 11099  0041BA  A4D8               	btfss	status,2,c
 11100  0041BC  D00C               	goto	l9719
 11101  0041BE  0E00               	movlw	0
 11102  0041C0  6E1A               	movwf	(?_strncmp+1)^0,c
 11103  0041C2  0E00               	movlw	0
 11104  0041C4  6E19               	movwf	?_strncmp^0,c
 11105  0041C6  0012               	return	
 11106  0041C8                     l9717:
 11107  0041C8  4A21               	infsnz	strncmp@l^0,f,c
 11108  0041CA  2A22               	incf	(strncmp@l+1)^0,f,c
 11109  0041CC  4A23               	infsnz	strncmp@r^0,f,c
 11110  0041CE  2A24               	incf	(strncmp@r+1)^0,f,c
 11111  0041D0  061D               	decf	strncmp@n^0,f,c
 11112  0041D2  A0D8               	btfss	status,0,c
 11113  0041D4  061E               	decf	(strncmp@n+1)^0,f,c
 11114  0041D6                     l9719:
 11115  0041D6  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11116  0041DC  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11117  0041E2  0E00               	movlw	low (__smallconst shr (0+16))
 11118  0041E4  6EF8               	movwf	tblptru,c
 11119  0041E6  0E1F               	movlw	(high __ramtop+-1)
 11120  0041E8  64F7               	cpfsgt	tblptrh,c
 11121  0041EA  D003               	bra	u11057
 11122  0041EC  0008               	tblrd		*
 11123  0041EE  50F5               	movf	tablat,w,c
 11124  0041F0  D007               	bra	u11050
 11125  0041F2                     u11057:
 11126  0041F2  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11127  0041F8  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11128  0041FE  50E7               	movf	indf1,w,c
 11129  004200                     u11050:
 11130  004200  0900               	iorlw	0
 11131  004202  B4D8               	btfsc	status,2,c
 11132  004204  D04A               	goto	u11110
 11133  004206  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11134  00420C  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11135  004212  0E00               	movlw	low (__smallconst shr (0+16))
 11136  004214  6EF8               	movwf	tblptru,c
 11137  004216  0E1F               	movlw	(high __ramtop+-1)
 11138  004218  64F7               	cpfsgt	tblptrh,c
 11139  00421A  D003               	bra	u11077
 11140  00421C  0008               	tblrd		*
 11141  00421E  50F5               	movf	tablat,w,c
 11142  004220  D007               	bra	u11070
 11143  004222                     u11077:
 11144  004222  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11145  004228  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11146  00422E  50E7               	movf	indf1,w,c
 11147  004230                     u11070:
 11148  004230  0900               	iorlw	0
 11149  004232  B4D8               	btfsc	status,2,c
 11150  004234  D032               	goto	u11110
 11151  004236  501D               	movf	strncmp@n^0,w,c
 11152  004238  101E               	iorwf	(strncmp@n+1)^0,w,c
 11153  00423A  B4D8               	btfsc	status,2,c
 11154  00423C  D02E               	goto	u11110
 11155  00423E  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11156  004244  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11157  00424A  0E00               	movlw	low (__smallconst shr (0+16))
 11158  00424C  6EF8               	movwf	tblptru,c
 11159  00424E  0E1F               	movlw	(high __ramtop+-1)
 11160  004250  64F7               	cpfsgt	tblptrh,c
 11161  004252  D003               	bra	u11107
 11162  004254  0008               	tblrd		*
 11163  004256  50F5               	movf	tablat,w,c
 11164  004258  D007               	bra	u11100
 11165  00425A                     u11107:
 11166  00425A  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11167  004260  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11168  004266  50E7               	movf	indf1,w,c
 11169  004268                     u11100:
 11170  004268  6E1F               	movwf	??_strncmp^0,c
 11171  00426A  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11172  004270  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11173  004276  0E00               	movlw	low (__smallconst shr (0+16))
 11174  004278  6EF8               	movwf	tblptru,c
 11175  00427A  0E1F               	movlw	(high __ramtop+-1)
 11176  00427C  64F7               	cpfsgt	tblptrh,c
 11177  00427E  D003               	bra	u11117
 11178  004280  0008               	tblrd		*
 11179  004282  50F5               	movf	tablat,w,c
 11180  004284  D007               	bra	u11115
 11181  004286                     u11117:
 11182  004286  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11183  00428C  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11184  004292  50E7               	movf	indf1,w,c
 11185  004294                     u11115:
 11186  004294  181F               	xorwf	??_strncmp^0,w,c
 11187  004296  B4D8               	btfsc	status,2,c
 11188  004298  D797               	goto	l9717
 11189  00429A                     u11110:
 11190  00429A  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11191  0042A0  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11192  0042A6  0E00               	movlw	low (__smallconst shr (0+16))
 11193  0042A8  6EF8               	movwf	tblptru,c
 11194  0042AA  0E1F               	movlw	(high __ramtop+-1)
 11195  0042AC  64F7               	cpfsgt	tblptrh,c
 11196  0042AE  D003               	bra	u11127
 11197  0042B0  0008               	tblrd		*
 11198  0042B2  50F5               	movf	tablat,w,c
 11199  0042B4  D007               	bra	u11120
 11200  0042B6                     u11127:
 11201  0042B6  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11202  0042BC  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11203  0042C2  50E7               	movf	indf1,w,c
 11204  0042C4                     u11120:
 11205  0042C4  6E1F               	movwf	??_strncmp^0,c
 11206  0042C6  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11207  0042CC  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11208  0042D2  0E00               	movlw	low (__smallconst shr (0+16))
 11209  0042D4  6EF8               	movwf	tblptru,c
 11210  0042D6  0E1F               	movlw	(high __ramtop+-1)
 11211  0042D8  64F7               	cpfsgt	tblptrh,c
 11212  0042DA  D003               	bra	u11137
 11213  0042DC  0008               	tblrd		*
 11214  0042DE  50F5               	movf	tablat,w,c
 11215  0042E0  D007               	bra	u11130
 11216  0042E2                     u11137:
 11217  0042E2  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11218  0042E8  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11219  0042EE  50E7               	movf	indf1,w,c
 11220  0042F0                     u11130:
 11221  0042F0  6E20               	movwf	(??_strncmp+1)^0,c
 11222  0042F2  5020               	movf	(??_strncmp+1)^0,w,c
 11223  0042F4  5C1F               	subwf	??_strncmp^0,w,c
 11224  0042F6  6E19               	movwf	?_strncmp^0,c
 11225  0042F8  6A1A               	clrf	(?_strncmp+1)^0,c
 11226  0042FA  A0D8               	btfss	status,0,c
 11227  0042FC  061A               	decf	(?_strncmp+1)^0,f,c
 11228  0042FE  0012               	return		;funcret
 11229  004300                     __end_of_strncmp:
 11230                           	callstack 0
 11231                           
 11232 ;; *************** function _strlen *****************
 11233 ;; Defined at:
 11234 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;  s               2   20[COMRAM] PTR const unsigned char 
 11237 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11238 ;;		 -> ?_sprintf(2), NULL(0), STR_9(3), STR_8(3), 
 11239 ;;		 -> STR_7(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  a               2   22[COMRAM] PTR const unsigned char 
 11242 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11243 ;;		 -> ?_sprintf(2), NULL(0), STR_9(3), STR_8(3), 
 11244 ;;		 -> STR_7(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  2   20[COMRAM] unsigned int 
 11247 ;; Registers used:
 11248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/0
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11257 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11258 ;;Total ram usage:        4 bytes
 11259 ;; Hardware stack levels used: 1
 11260 ;; Hardware stack levels required when called: 4
 11261 ;; This function calls:
 11262 ;;		Nothing
 11263 ;; This function is called by:
 11264 ;;		__cli_interpret_cmd
 11265 ;;		_pad
 11266 ;;		_stoa
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text41
 11271  005666                     __ptext41:
 11272                           	callstack 0
 11273  005666                     _strlen:
 11274                           	callstack 19
 11275                           
 11276                           ;incstack = 0
 11277  005666  C015  F017         	movff	strlen@s,strlen@a
 11278  00566A  C016  F018         	movff	strlen@s+1,strlen@a+1
 11279  00566E  D002               	goto	l8901
 11280  005670                     l8899:
 11281  005670  4A15               	infsnz	strlen@s^0,f,c
 11282  005672  2A16               	incf	(strlen@s+1)^0,f,c
 11283  005674                     l8901:
 11284  005674  0060  F057  FFF6   	movff	strlen@s,tblptrl
 11285  00567A  0060  F05B  FFF7   	movff	strlen@s+1,tblptrh
 11286  005680  0E00               	movlw	low (__smallconst shr (0+16))
 11287  005682  6EF8               	movwf	tblptru,c
 11288  005684  0E1F               	movlw	(high __ramtop+-1)
 11289  005686  64F7               	cpfsgt	tblptrh,c
 11290  005688  D003               	bra	u9557
 11291  00568A  0008               	tblrd		*
 11292  00568C  50F5               	movf	tablat,w,c
 11293  00568E  D007               	bra	u9550
 11294  005690                     u9557:
 11295  005690  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11296  005696  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11297  00569C  50E7               	movf	indf1,w,c
 11298  00569E                     u9550:
 11299  00569E  0900               	iorlw	0
 11300  0056A0  A4D8               	btfss	status,2,c
 11301  0056A2  D7E6               	goto	l8899
 11302  0056A4  5017               	movf	strlen@a^0,w,c
 11303  0056A6  5C15               	subwf	strlen@s^0,w,c
 11304  0056A8  6E15               	movwf	?_strlen^0,c
 11305  0056AA  5018               	movf	(strlen@a+1)^0,w,c
 11306  0056AC  5816               	subwfb	(strlen@s+1)^0,w,c
 11307  0056AE  6E16               	movwf	(?_strlen+1)^0,c
 11308  0056B0  0012               	return		;funcret
 11309  0056B2                     __end_of_strlen:
 11310                           	callstack 0
 11311                           
 11312 ;; *************** function _fh_po *****************
 11313 ;; Defined at:
 11314 ;;		line 112 in file "main.c"
 11315 ;; Parameters:    Size  Location     Type
 11316 ;;  a_data          2   43[COMRAM] PTR void 
 11317 ;;		 -> cli_ctx(131), 
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;		None
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  1    wreg      void 
 11322 ;; Registers used:
 11323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11324 ;; Tracked objects:
 11325 ;;		On entry : 3F/0
 11326 ;;		On exit  : 3F/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11332 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11333 ;;Total ram usage:        2 bytes
 11334 ;; Hardware stack levels used: 1
 11335 ;; Hardware stack levels required when called: 9
 11336 ;; This function calls:
 11337 ;;		_puts
 11338 ;; This function is called by:
 11339 ;;		__cli_interpret_cmd
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           	psect	text42
 11344  005CB0                     __ptext42:
 11345                           	callstack 0
 11346  005CB0                     _fh_po:
 11347                           	callstack 19
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;main.c: 112: void fh_po(void *a_data);main.c: 113: {;main.c: 114:  puts("\r\n Voltage O
      +                          FF \r\n");
 11351                           
 11352                           ;incstack = 0
 11353  005CB0  0EB7               	movlw	low STR_5
 11354  005CB2  6E29               	movwf	puts@s^0,c
 11355  005CB4  5029               	movf	puts@s^0,w,c
 11356  005CB6  A4D8               	btfss	status,2,c
 11357  005CB8  0E20               	movlw	high __smallconst
 11358  005CBA  6E2A               	movwf	(puts@s+1)^0,c
 11359  005CBC  EC9C  F02C         	call	_puts	;wreg free
 11360                           
 11361                           ;main.c: 115:  mode = off_mode;
 11362  005CC0  0E00               	movlw	0
 11363  005CC2  0100               	movlb	0	; () banked
 11364  005CC4  6FFB               	movwf	_mode& (0+255),b
 11365                           
 11366                           ; BSR set to: 0
 11367  005CC6  0012               	return		;funcret
 11368  005CC8                     __end_of_fh_po:
 11369                           	callstack 0
 11370                           
 11371 ;; *************** function _fh_pr *****************
 11372 ;; Defined at:
 11373 ;;		line 99 in file "main.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  a_data          2   43[COMRAM] PTR void 
 11376 ;;		 -> cli_ctx(131), 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      void 
 11381 ;; Registers used:
 11382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11383 ;; Tracked objects:
 11384 ;;		On entry : 3F/0
 11385 ;;		On exit  : 3F/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11392 ;;Total ram usage:        2 bytes
 11393 ;; Hardware stack levels used: 1
 11394 ;; Hardware stack levels required when called: 9
 11395 ;; This function calls:
 11396 ;;		_puts
 11397 ;; This function is called by:
 11398 ;;		__cli_interpret_cmd
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text43
 11403  005B54                     __ptext43:
 11404                           	callstack 0
 11405  005B54                     _fh_pr:
 11406                           	callstack 19
 11407                           
 11408                           ; BSR set to: 0
 11409                           ;main.c: 99: void fh_pr(void *a_data);main.c: 100: {;main.c: 101:  puts((const char *) a
      +                          _data);
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;incstack = 0
 11413  005B54  C02C  F029         	movff	fh_pr@a_data,puts@s
 11414  005B58  C02D  F02A         	movff	fh_pr@a_data+1,puts@s+1
 11415  005B5C  EC9C  F02C         	call	_puts	;wreg free
 11416                           
 11417                           ;main.c: 102:  puts("\r\n Ramp to 1000VDC ON \r\n");
 11418  005B60  0E71               	movlw	low STR_3
 11419  005B62  6E29               	movwf	puts@s^0,c
 11420  005B64  5029               	movf	puts@s^0,w,c
 11421  005B66  A4D8               	btfss	status,2,c
 11422  005B68  0E20               	movlw	high __smallconst
 11423  005B6A  6E2A               	movwf	(puts@s+1)^0,c
 11424  005B6C  EC9C  F02C         	call	_puts	;wreg free
 11425                           
 11426                           ;main.c: 103:  mode = roll_mode;
 11427  005B70  0E01               	movlw	1
 11428  005B72  0100               	movlb	0	; () banked
 11429  005B74  6FFB               	movwf	_mode& (0+255),b
 11430                           
 11431                           ; BSR set to: 0
 11432  005B76  0012               	return		;funcret
 11433  005B78                     __end_of_fh_pr:
 11434                           	callstack 0
 11435                           
 11436 ;; *************** function _fh_ps *****************
 11437 ;; Defined at:
 11438 ;;		line 106 in file "main.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;  a_data          2   43[COMRAM] PTR void 
 11441 ;;		 -> cli_ctx(131), 
 11442 ;; Auto vars:     Size  Location     Type
 11443 ;;		None
 11444 ;; Return value:  Size  Location     Type
 11445 ;;                  1    wreg      void 
 11446 ;; Registers used:
 11447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11448 ;; Tracked objects:
 11449 ;;		On entry : 3F/0
 11450 ;;		On exit  : 3F/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11457 ;;Total ram usage:        2 bytes
 11458 ;; Hardware stack levels used: 1
 11459 ;; Hardware stack levels required when called: 9
 11460 ;; This function calls:
 11461 ;;		_puts
 11462 ;; This function is called by:
 11463 ;;		__cli_interpret_cmd
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467                           	psect	text44
 11468  005CC8                     __ptext44:
 11469                           	callstack 0
 11470  005CC8                     _fh_ps:
 11471                           	callstack 19
 11472                           
 11473                           ; BSR set to: 0
 11474                           ;main.c: 106: void fh_ps(void *a_data);main.c: 107: {;main.c: 108:  puts("\r\n Steady 10
      +                          00VDC ON \r\n");
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;incstack = 0
 11478  005CC8  0E8A               	movlw	low STR_4
 11479  005CCA  6E29               	movwf	puts@s^0,c
 11480  005CCC  5029               	movf	puts@s^0,w,c
 11481  005CCE  A4D8               	btfss	status,2,c
 11482  005CD0  0E20               	movlw	high __smallconst
 11483  005CD2  6E2A               	movwf	(puts@s+1)^0,c
 11484  005CD4  EC9C  F02C         	call	_puts	;wreg free
 11485                           
 11486                           ;main.c: 109:  mode = static_mode;
 11487  005CD8  0E02               	movlw	2
 11488  005CDA  0100               	movlb	0	; () banked
 11489  005CDC  6FFB               	movwf	_mode& (0+255),b
 11490                           
 11491                           ; BSR set to: 0
 11492  005CDE  0012               	return		;funcret
 11493  005CE0                     __end_of_fh_ps:
 11494                           	callstack 0
 11495                           
 11496 ;; *************** function _puts *****************
 11497 ;; Defined at:
 11498 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;  s               2   40[COMRAM] PTR const unsigned char 
 11501 ;;		 -> cli_ctx.cmd(128), STR_11(3), cli_read@i(1), cmdm(28), 
 11502 ;;		 -> cli_ctx(131), STR_5(18), STR_4(24), STR_3(25), 
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;  r               2    0        int 
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  2   40[COMRAM] int 
 11507 ;; Registers used:
 11508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11509 ;; Tracked objects:
 11510 ;;		On entry : 0/2
 11511 ;;		On exit  : 0/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11517 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11518 ;;Total ram usage:        3 bytes
 11519 ;; Hardware stack levels used: 1
 11520 ;; Hardware stack levels required when called: 8
 11521 ;; This function calls:
 11522 ;;		_fputc
 11523 ;;		_fputs
 11524 ;; This function is called by:
 11525 ;;		_fh_pr
 11526 ;;		_fh_ps
 11527 ;;		_fh_po
 11528 ;;		_cli_init
 11529 ;;		_linux_putc
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text45
 11534  005938                     __ptext45:
 11535                           	callstack 0
 11536  005938                     _puts:
 11537                           	callstack 20
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;incstack = 0
 11541  005938  0E01               	movlw	1
 11542  00593A  6E2B               	movwf	_puts$3263^0,c
 11543  00593C  C029  F020         	movff	puts@s,fputs@s
 11544  005940  C02A  F021         	movff	puts@s+1,fputs@s+1
 11545  005944  0E00               	movlw	0
 11546  005946  6E22               	movwf	fputs@fp^0,c
 11547  005948  0E00               	movlw	0
 11548  00594A  6E23               	movwf	(fputs@fp+1)^0,c
 11549  00594C  EC2E  F02A         	call	_fputs	;wreg free
 11550  005950  BE21               	btfsc	(?_fputs+1)^0,7,c
 11551  005952  0012               	return	
 11552  005954  0E00               	movlw	0
 11553  005956  6E18               	movwf	(fputc@c+1)^0,c
 11554  005958  0E0A               	movlw	10
 11555  00595A  6E17               	movwf	fputc@c^0,c
 11556  00595C  0E00               	movlw	0
 11557  00595E  6E19               	movwf	fputc@fp^0,c
 11558  005960  0E00               	movlw	0
 11559  005962  6E1A               	movwf	(fputc@fp+1)^0,c
 11560  005964  EC03  F027         	call	_fputc	;wreg free
 11561  005968  BE18               	btfsc	(?_fputc+1)^0,7,c
 11562  00596A  0012               	return	
 11563  00596C  0E00               	movlw	0
 11564  00596E  6E2B               	movwf	_puts$3263^0,c
 11565  005970  0012               	return		;funcret
 11566  005972                     __end_of_puts:
 11567                           	callstack 0
 11568                           
 11569 ;; *************** function _fputs *****************
 11570 ;; Defined at:
 11571 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;  s               2   31[COMRAM] PTR const unsigned char 
 11574 ;;		 -> cli_ctx.cmd(128), dbuf(80), STR_11(3), cli_read@i(1), 
 11575 ;;		 -> cmdm(28), cli_ctx(131), STR_5(18), STR_4(24), 
 11576 ;;		 -> STR_3(25), 
 11577 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11578 ;;		 -> sprintf@f(11), NULL(0), 
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;  i               2   38[COMRAM] int 
 11581 ;;  c               1   37[COMRAM] unsigned char 
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  2   31[COMRAM] int 
 11584 ;; Registers used:
 11585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11592 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11594 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11595 ;;Total ram usage:        9 bytes
 11596 ;; Hardware stack levels used: 1
 11597 ;; Hardware stack levels required when called: 7
 11598 ;; This function calls:
 11599 ;;		_fputc
 11600 ;; This function is called by:
 11601 ;;		_pad
 11602 ;;		_puts
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           	psect	text46
 11607  00545C                     __ptext46:
 11608                           	callstack 0
 11609  00545C                     _fputs:
 11610                           	callstack 16
 11611                           
 11612                           ;incstack = 0
 11613  00545C  0E00               	movlw	0
 11614  00545E  6E28               	movwf	(fputs@i+1)^0,c
 11615  005460  0E00               	movlw	0
 11616  005462  6E27               	movwf	fputs@i^0,c
 11617  005464  D00B               	goto	l9115
 11618  005466                     l9111:
 11619  005466  C026  F017         	movff	fputs@c,fputc@c
 11620  00546A  6A18               	clrf	(fputc@c+1)^0,c
 11621  00546C  C022  F019         	movff	fputs@fp,fputc@fp
 11622  005470  C023  F01A         	movff	fputs@fp+1,fputc@fp+1
 11623  005474  EC03  F027         	call	_fputc	;wreg free
 11624  005478  4A27               	infsnz	fputs@i^0,f,c
 11625  00547A  2A28               	incf	(fputs@i+1)^0,f,c
 11626  00547C                     l9115:
 11627  00547C  5027               	movf	fputs@i^0,w,c
 11628  00547E  2420               	addwf	fputs@s^0,w,c
 11629  005480  6E24               	movwf	??_fputs^0,c
 11630  005482  5028               	movf	(fputs@i+1)^0,w,c
 11631  005484  2021               	addwfc	(fputs@s+1)^0,w,c
 11632  005486  6E25               	movwf	(??_fputs+1)^0,c
 11633  005488  0060  F093  FFF6   	movff	??_fputs,tblptrl
 11634  00548E  0060  F097  FFF7   	movff	??_fputs+1,tblptrh
 11635  005494  0E00               	movlw	low (__smallconst shr (0+16))
 11636  005496  6EF8               	movwf	tblptru,c
 11637  005498  0E1F               	movlw	(high __ramtop+-1)
 11638  00549A  64F7               	cpfsgt	tblptrh,c
 11639  00549C  D003               	bra	u9967
 11640  00549E  0008               	tblrd		*
 11641  0054A0  50F5               	movf	tablat,w,c
 11642  0054A2  D007               	bra	u9960
 11643  0054A4                     u9967:
 11644  0054A4  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11645  0054AA  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11646  0054B0  50E7               	movf	indf1,w,c
 11647  0054B2                     u9960:
 11648  0054B2  6E26               	movwf	fputs@c^0,c
 11649  0054B4  5026               	movf	fputs@c^0,w,c
 11650  0054B6  A4D8               	btfss	status,2,c
 11651  0054B8  D7D6               	goto	l9111
 11652  0054BA  C027  F020         	movff	fputs@i,?_fputs
 11653  0054BE  C028  F021         	movff	fputs@i+1,?_fputs+1
 11654  0054C2  0012               	return		;funcret
 11655  0054C4                     __end_of_fputs:
 11656                           	callstack 0
 11657                           
 11658 ;; *************** function _fputc *****************
 11659 ;; Defined at:
 11660 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 11661 ;; Parameters:    Size  Location     Type
 11662 ;;  c               2   22[COMRAM] int 
 11663 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
 11664 ;;		 -> sprintf@f(11), NULL(0), 
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;		None
 11667 ;; Return value:  Size  Location     Type
 11668 ;;                  2   22[COMRAM] int 
 11669 ;; Registers used:
 11670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11678 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11679 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11680 ;;Total ram usage:        9 bytes
 11681 ;; Hardware stack levels used: 1
 11682 ;; Hardware stack levels required when called: 6
 11683 ;; This function calls:
 11684 ;;		_putch
 11685 ;; This function is called by:
 11686 ;;		_pad
 11687 ;;		_stoa
 11688 ;;		_vfpfcnvrt
 11689 ;;		_fputs
 11690 ;;		_puts
 11691 ;; This function uses a non-reentrant model
 11692 ;;
 11693                           
 11694                           	psect	text47
 11695  004E06                     __ptext47:
 11696                           	callstack 0
 11697  004E06                     _fputc:
 11698                           	callstack 16
 11699                           
 11700                           ;incstack = 0
 11701  004E06  5019               	movf	fputc@fp^0,w,c
 11702  004E08  101A               	iorwf	(fputc@fp+1)^0,w,c
 11703  004E0A  B4D8               	btfsc	status,2,c
 11704  004E0C  D004               	goto	u9520
 11705  004E0E  5019               	movf	fputc@fp^0,w,c
 11706  004E10  101A               	iorwf	(fputc@fp+1)^0,w,c
 11707  004E12  A4D8               	btfss	status,2,c
 11708  004E14  D004               	goto	l8887
 11709  004E16                     u9520:
 11710  004E16  5017               	movf	fputc@c^0,w,c
 11711  004E18  ECEB  F02E         	call	_putch
 11712  004E1C  D04A               	goto	l8893
 11713  004E1E                     l8887:
 11714  004E1E  EE20 F009          	lfsr	2,9
 11715  004E22  5019               	movf	fputc@fp^0,w,c
 11716  004E24  26D9               	addwf	fsr2l,f,c
 11717  004E26  501A               	movf	(fputc@fp+1)^0,w,c
 11718  004E28  22DA               	addwfc	fsr2h,f,c
 11719  004E2A  50DE               	movf	postinc2,w,c
 11720  004E2C  10DE               	iorwf	postinc2,w,c
 11721  004E2E  B4D8               	btfsc	status,2,c
 11722  004E30  D016               	goto	u9540
 11723  004E32  EE20 F009          	lfsr	2,9
 11724  004E36  5019               	movf	fputc@fp^0,w,c
 11725  004E38  26D9               	addwf	fsr2l,f,c
 11726  004E3A  501A               	movf	(fputc@fp+1)^0,w,c
 11727  004E3C  22DA               	addwfc	fsr2h,f,c
 11728  004E3E  EE10 F003          	lfsr	1,3
 11729  004E42  5019               	movf	fputc@fp^0,w,c
 11730  004E44  26E1               	addwf	fsr1l,f,c
 11731  004E46  501A               	movf	(fputc@fp+1)^0,w,c
 11732  004E48  22E2               	addwfc	fsr1h,f,c
 11733  004E4A  50DE               	movf	postinc2,w,c
 11734  004E4C  5CE6               	subwf	postinc1,w,c
 11735  004E4E  50E6               	movf	postinc1,w,c
 11736  004E50  0A80               	xorlw	128
 11737  004E52  6E1F               	movwf	(??_fputc+4)^0,c
 11738  004E54  50DE               	movf	postinc2,w,c
 11739  004E56  0A80               	xorlw	128
 11740  004E58  581F               	subwfb	(??_fputc+4)^0,w,c
 11741  004E5A  B0D8               	btfsc	status,0,c
 11742  004E5C  D02A               	goto	l8893
 11743  004E5E                     u9540:
 11744  004E5E  EE20 F003          	lfsr	2,3
 11745  004E62  5019               	movf	fputc@fp^0,w,c
 11746  004E64  26D9               	addwf	fsr2l,f,c
 11747  004E66  501A               	movf	(fputc@fp+1)^0,w,c
 11748  004E68  22DA               	addwfc	fsr2h,f,c
 11749  004E6A  006F FF78  F01B    	movff	postinc2,??_fputc
 11750  004E70  006F FF74  F01C    	movff	postdec2,??_fputc+1
 11751  004E76  0060  F067  FFD9   	movff	fputc@fp,fsr2l
 11752  004E7C  0060  F06B  FFDA   	movff	fputc@fp+1,fsr2h
 11753  004E82  006F FF78  F01D    	movff	postinc2,??_fputc+2
 11754  004E88  006F FF74  F01E    	movff	postdec2,??_fputc+3
 11755  004E8E  501B               	movf	??_fputc^0,w,c
 11756  004E90  241D               	addwf	(??_fputc+2)^0,w,c
 11757  004E92  6ED9               	movwf	fsr2l,c
 11758  004E94  501C               	movf	(??_fputc+1)^0,w,c
 11759  004E96  201E               	addwfc	(??_fputc+3)^0,w,c
 11760  004E98  6EDA               	movwf	fsr2h,c
 11761  004E9A  0060  F05F  FFDF   	movff	fputc@c,indf2
 11762  004EA0  EE20 F003          	lfsr	2,3
 11763  004EA4  5019               	movf	fputc@fp^0,w,c
 11764  004EA6  26D9               	addwf	fsr2l,f,c
 11765  004EA8  501A               	movf	(fputc@fp+1)^0,w,c
 11766  004EAA  22DA               	addwfc	fsr2h,f,c
 11767  004EAC  2ADE               	incf	postinc2,f,c
 11768  004EAE  0E00               	movlw	0
 11769  004EB0  22DD               	addwfc	postdec2,f,c
 11770  004EB2                     l8893:
 11771  004EB2  C017  F017         	movff	fputc@c,?_fputc
 11772  004EB6  6A18               	clrf	(?_fputc+1)^0,c
 11773  004EB8  0012               	return		;funcret
 11774  004EBA                     __end_of_fputc:
 11775                           	callstack 0
 11776                           
 11777 ;; *************** function _putch *****************
 11778 ;; Defined at:
 11779 ;;		line 230 in file "mcc_generated_files/uart1.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;  txData          1    wreg     unsigned char 
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  txData          1   21[COMRAM] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  1    wreg      void 
 11786 ;; Registers used:
 11787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 3F/39
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11797 ;;Total ram usage:        1 bytes
 11798 ;; Hardware stack levels used: 1
 11799 ;; Hardware stack levels required when called: 5
 11800 ;; This function calls:
 11801 ;;		_UART1_Write
 11802 ;; This function is called by:
 11803 ;;		_fputc
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           	psect	text48
 11808  005DD6                     __ptext48:
 11809                           	callstack 0
 11810  005DD6                     _putch:
 11811                           	callstack 16
 11812                           
 11813                           ;incstack = 0
 11814                           ;putch@txData stored from wreg
 11815  005DD6  6E16               	movwf	putch@txData^0,c
 11816                           
 11817                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
 11818  005DD8  5016               	movf	putch@txData^0,w,c
 11819  005DDA  EC61  F02C         	call	_UART1_Write
 11820                           
 11821                           ; BSR set to: 57
 11822  005DDE  0012               	return		;funcret
 11823  005DE0                     __end_of_putch:
 11824                           	callstack 0
 11825                           
 11826 ;; *************** function _UART1_Write *****************
 11827 ;; Defined at:
 11828 ;;		line 202 in file "mcc_generated_files/uart1.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;  txData          1    wreg     unsigned char 
 11831 ;; Auto vars:     Size  Location     Type
 11832 ;;  txData          1   20[COMRAM] unsigned char 
 11833 ;; Return value:  Size  Location     Type
 11834 ;;                  1    wreg      void 
 11835 ;; Registers used:
 11836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11837 ;; Tracked objects:
 11838 ;;		On entry : 0/0
 11839 ;;		On exit  : 3F/39
 11840 ;;		Unchanged: 0/0
 11841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11846 ;;Total ram usage:        1 bytes
 11847 ;; Hardware stack levels used: 1
 11848 ;; Hardware stack levels required when called: 4
 11849 ;; This function calls:
 11850 ;;		Nothing
 11851 ;; This function is called by:
 11852 ;;		_putch
 11853 ;; This function uses a non-reentrant model
 11854 ;;
 11855                           
 11856                           	psect	text49
 11857  0058C2                     __ptext49:
 11858                           	callstack 0
 11859  0058C2                     _UART1_Write:
 11860                           	callstack 16
 11861                           
 11862                           ; BSR set to: 57
 11863                           ;incstack = 0
 11864                           ;UART1_Write@txData stored from wreg
 11865  0058C2  6E15               	movwf	UART1_Write@txData^0,c
 11866  0058C4                     
 11867                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11868                           
 11869                           ;mcc_generated_files/uart1.c: 202: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 203: {;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11870  0058C4  5049               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 11871  0058C6  B4D8               	btfsc	status,2,c
 11872  0058C8  D7FD               	goto	l8861
 11873                           
 11874                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
 11875  0058CA  0139               	movlb	57	; () banked
 11876  0058CC  B993               	btfsc	147,4,b	;volatile
 11877  0058CE  D004               	goto	l626
 11878                           
 11879                           ; BSR set to: 57
 11880                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
 11881  0058D0  0060  F057  FDEA   	movff	UART1_Write@txData,15850	;volatile
 11882                           
 11883                           ;mcc_generated_files/uart1.c: 211:     }
 11884  0058D6  D011               	goto	l8877
 11885  0058D8                     l626:
 11886                           
 11887                           ; BSR set to: 57
 11888                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
 11889  0058D8  9993               	bcf	147,4,b	;volatile
 11890                           
 11891                           ; BSR set to: 57
 11892                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
 11893  0058DA  0E40               	movlw	low _uart1TxBuffer
 11894  0058DC  244B               	addwf	_uart1TxHead^0,w,c	;volatile
 11895  0058DE  6ED9               	movwf	fsr2l,c
 11896  0058E0  6ADA               	clrf	fsr2h,c
 11897  0058E2  0E01               	movlw	high _uart1TxBuffer
 11898  0058E4  22DA               	addwfc	fsr2h,f,c
 11899  0058E6  0060  F057  FFDF   	movff	UART1_Write@txData,indf2
 11900                           
 11901                           ; BSR set to: 57
 11902  0058EC  2A4B               	incf	_uart1TxHead^0,f,c	;volatile
 11903                           
 11904                           ; BSR set to: 57
 11905                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 11906  0058EE  0E3F               	movlw	63
 11907  0058F0  644B               	cpfsgt	_uart1TxHead^0,c
 11908  0058F2  D002               	goto	l8875
 11909                           
 11910                           ; BSR set to: 57
 11911                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
 11912  0058F4  0E00               	movlw	0
 11913  0058F6  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 11914  0058F8                     l8875:
 11915                           
 11916                           ; BSR set to: 57
 11917                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
 11918  0058F8  0649               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 11919  0058FA                     l8877:
 11920                           
 11921                           ; BSR set to: 57
 11922                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
 11923  0058FA  8993               	bsf	147,4,b	;volatile
 11924                           
 11925                           ; BSR set to: 57
 11926  0058FC  0012               	return		;funcret
 11927  0058FE                     __end_of_UART1_Write:
 11928                           	callstack 0
 11929                           
 11930 ;; *************** function ___xxtofl *****************
 11931 ;; Defined at:
 11932 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 11933 ;; Parameters:    Size  Location     Type
 11934 ;;  sign            1    wreg     unsigned char 
 11935 ;;  val             4   20[COMRAM] long 
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;  sign            1   28[COMRAM] unsigned char 
 11938 ;;  arg             4   30[COMRAM] unsigned long 
 11939 ;;  exp             1   29[COMRAM] unsigned char 
 11940 ;; Return value:  Size  Location     Type
 11941 ;;                  4   20[COMRAM] unsigned char 
 11942 ;; Registers used:
 11943 ;;		wreg, status,2, status,0
 11944 ;; Tracked objects:
 11945 ;;		On entry : 3F/0
 11946 ;;		On exit  : 0/0
 11947 ;;		Unchanged: 0/0
 11948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11950 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11951 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11952 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11953 ;;Total ram usage:       14 bytes
 11954 ;; Hardware stack levels used: 1
 11955 ;; Hardware stack levels required when called: 4
 11956 ;; This function calls:
 11957 ;;		Nothing
 11958 ;; This function is called by:
 11959 ;;		_main
 11960 ;; This function uses a non-reentrant model
 11961 ;;
 11962                           
 11963                           	psect	text50
 11964  0046EA                     __ptext50:
 11965                           	callstack 0
 11966  0046EA                     ___xxtofl:
 11967                           	callstack 26
 11968                           
 11969                           ; BSR set to: 57
 11970                           ;incstack = 0
 11971                           ;___xxtofl@sign stored from wreg
 11972  0046EA  6E1D               	movwf	___xxtofl@sign^0,c
 11973  0046EC  501D               	movf	___xxtofl@sign^0,w,c
 11974  0046EE  A4D8               	btfss	status,2,c
 11975  0046F0  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 11976  0046F2  D01A               	goto	l1899
 11977  0046F4  C015  F019         	movff	___xxtofl@val,??___xxtofl
 11978  0046F8  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
 11979  0046FC  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
 11980  004700  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
 11981  004704  1E19               	comf	??___xxtofl^0,f,c
 11982  004706  1E1A               	comf	(??___xxtofl+1)^0,f,c
 11983  004708  1E1B               	comf	(??___xxtofl+2)^0,f,c
 11984  00470A  1E1C               	comf	(??___xxtofl+3)^0,f,c
 11985  00470C  2A19               	incf	??___xxtofl^0,f,c
 11986  00470E  0E00               	movlw	0
 11987  004710  221A               	addwfc	(??___xxtofl+1)^0,f,c
 11988  004712  221B               	addwfc	(??___xxtofl+2)^0,f,c
 11989  004714  221C               	addwfc	(??___xxtofl+3)^0,f,c
 11990  004716  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
 11991  00471A  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
 11992  00471E  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
 11993  004722  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
 11994  004726  D008               	goto	l10707
 11995  004728                     l1899:
 11996  004728  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
 11997  00472C  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11998  004730  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11999  004734  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12000  004738                     l10707:
 12001  004738  5015               	movf	___xxtofl@val^0,w,c
 12002  00473A  1016               	iorwf	(___xxtofl@val+1)^0,w,c
 12003  00473C  1017               	iorwf	(___xxtofl@val+2)^0,w,c
 12004  00473E  1018               	iorwf	(___xxtofl@val+3)^0,w,c
 12005  004740  A4D8               	btfss	status,2,c
 12006  004742  D009               	goto	l10713
 12007  004744  0E00               	movlw	0
 12008  004746  6E15               	movwf	?___xxtofl^0,c
 12009  004748  0E00               	movlw	0
 12010  00474A  6E16               	movwf	(?___xxtofl+1)^0,c
 12011  00474C  0E00               	movlw	0
 12012  00474E  6E17               	movwf	(?___xxtofl+2)^0,c
 12013  004750  0E00               	movlw	0
 12014  004752  6E18               	movwf	(?___xxtofl+3)^0,c
 12015  004754  0012               	return	
 12016  004756                     l10713:
 12017  004756  0E96               	movlw	150
 12018  004758  6E1E               	movwf	___xxtofl@exp^0,c
 12019  00475A  D006               	goto	l10717
 12020  00475C                     l10715:
 12021  00475C  2A1E               	incf	___xxtofl@exp^0,f,c
 12022  00475E  90D8               	bcf	status,0,c
 12023  004760  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 12024  004762  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 12025  004764  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 12026  004766  321F               	rrcf	___xxtofl@arg^0,f,c
 12027  004768                     l10717:
 12028  004768  0E00               	movlw	0
 12029  00476A  141F               	andwf	___xxtofl@arg^0,w,c
 12030  00476C  6E19               	movwf	??___xxtofl^0,c
 12031  00476E  0E00               	movlw	0
 12032  004770  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 12033  004772  6E1A               	movwf	(??___xxtofl+1)^0,c
 12034  004774  0E00               	movlw	0
 12035  004776  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 12036  004778  6E1B               	movwf	(??___xxtofl+2)^0,c
 12037  00477A  0EFE               	movlw	254
 12038  00477C  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 12039  00477E  6E1C               	movwf	(??___xxtofl+3)^0,c
 12040  004780  5019               	movf	??___xxtofl^0,w,c
 12041  004782  101A               	iorwf	(??___xxtofl+1)^0,w,c
 12042  004784  101B               	iorwf	(??___xxtofl+2)^0,w,c
 12043  004786  101C               	iorwf	(??___xxtofl+3)^0,w,c
 12044  004788  B4D8               	btfsc	status,2,c
 12045  00478A  D00D               	goto	l1906
 12046  00478C  D7E7               	goto	l10715
 12047  00478E                     l10719:
 12048  00478E  2A1E               	incf	___xxtofl@exp^0,f,c
 12049  004790  0E01               	movlw	1
 12050  004792  261F               	addwf	___xxtofl@arg^0,f,c
 12051  004794  0E00               	movlw	0
 12052  004796  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
 12053  004798  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
 12054  00479A  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
 12055  00479C  90D8               	bcf	status,0,c
 12056  00479E  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 12057  0047A0  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 12058  0047A2  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 12059  0047A4  321F               	rrcf	___xxtofl@arg^0,f,c
 12060  0047A6                     l1906:
 12061  0047A6  0E00               	movlw	0
 12062  0047A8  141F               	andwf	___xxtofl@arg^0,w,c
 12063  0047AA  6E19               	movwf	??___xxtofl^0,c
 12064  0047AC  0E00               	movlw	0
 12065  0047AE  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 12066  0047B0  6E1A               	movwf	(??___xxtofl+1)^0,c
 12067  0047B2  0E00               	movlw	0
 12068  0047B4  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 12069  0047B6  6E1B               	movwf	(??___xxtofl+2)^0,c
 12070  0047B8  0EFF               	movlw	255
 12071  0047BA  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 12072  0047BC  6E1C               	movwf	(??___xxtofl+3)^0,c
 12073  0047BE  5019               	movf	??___xxtofl^0,w,c
 12074  0047C0  101A               	iorwf	(??___xxtofl+1)^0,w,c
 12075  0047C2  101B               	iorwf	(??___xxtofl+2)^0,w,c
 12076  0047C4  101C               	iorwf	(??___xxtofl+3)^0,w,c
 12077  0047C6  B4D8               	btfsc	status,2,c
 12078  0047C8  D007               	goto	l10727
 12079  0047CA  D7E1               	goto	l10719
 12080  0047CC                     l10725:
 12081  0047CC  061E               	decf	___xxtofl@exp^0,f,c
 12082  0047CE  90D8               	bcf	status,0,c
 12083  0047D0  361F               	rlcf	___xxtofl@arg^0,f,c
 12084  0047D2  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
 12085  0047D4  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
 12086  0047D6  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
 12087  0047D8                     l10727:
 12088  0047D8  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
 12089  0047DA  D003               	goto	u12320
 12090  0047DC  0E02               	movlw	2
 12091  0047DE  601E               	cpfslt	___xxtofl@exp^0,c
 12092  0047E0  D7F5               	goto	l10725
 12093  0047E2                     u12320:
 12094  0047E2  A01E               	btfss	___xxtofl@exp^0,0,c
 12095  0047E4  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
 12096  0047E6  90D8               	bcf	status,0,c
 12097  0047E8  321E               	rrcf	___xxtofl@exp^0,f,c
 12098  0047EA  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
 12099  0047EE  6A1A               	clrf	(??___xxtofl+1)^0,c
 12100  0047F0  6A1B               	clrf	(??___xxtofl+2)^0,c
 12101  0047F2  6A1C               	clrf	(??___xxtofl+3)^0,c
 12102  0047F4  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
 12103  0047F8  6A1B               	clrf	(??___xxtofl+2)^0,c
 12104  0047FA  6A1A               	clrf	(??___xxtofl+1)^0,c
 12105  0047FC  6A19               	clrf	??___xxtofl^0,c
 12106  0047FE  5019               	movf	??___xxtofl^0,w,c
 12107  004800  121F               	iorwf	___xxtofl@arg^0,f,c
 12108  004802  501A               	movf	(??___xxtofl+1)^0,w,c
 12109  004804  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
 12110  004806  501B               	movf	(??___xxtofl+2)^0,w,c
 12111  004808  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
 12112  00480A  501C               	movf	(??___xxtofl+3)^0,w,c
 12113  00480C  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
 12114  00480E  501D               	movf	___xxtofl@sign^0,w,c
 12115  004810  A4D8               	btfss	status,2,c
 12116  004812  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 12117  004814  D001               	goto	l10743
 12118  004816  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
 12119  004818                     l10743:
 12120  004818  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
 12121  00481C  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
 12122  004820  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
 12123  004824  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
 12124  004828  0012               	return		;funcret
 12125  00482A                     __end_of___xxtofl:
 12126                           	callstack 0
 12127                           
 12128 ;; *************** function _SYSTEM_Initialize *****************
 12129 ;; Defined at:
 12130 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12131 ;; Parameters:    Size  Location     Type
 12132 ;;		None
 12133 ;; Auto vars:     Size  Location     Type
 12134 ;;		None
 12135 ;; Return value:  Size  Location     Type
 12136 ;;                  1    wreg      void 
 12137 ;; Registers used:
 12138 ;;		wreg, status,2, status,0, cstack
 12139 ;; Tracked objects:
 12140 ;;		On entry : 3F/0
 12141 ;;		On exit  : 3F/3D
 12142 ;;		Unchanged: 0/0
 12143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12148 ;;Total ram usage:        0 bytes
 12149 ;; Hardware stack levels used: 1
 12150 ;; Hardware stack levels required when called: 6
 12151 ;; This function calls:
 12152 ;;		_ADCC_Initialize
 12153 ;;		_DAC1_Initialize
 12154 ;;		_INTERRUPT_Initialize
 12155 ;;		_OSCILLATOR_Initialize
 12156 ;;		_PIN_MANAGER_Initialize
 12157 ;;		_PMD_Initialize
 12158 ;;		_PWM5_Initialize
 12159 ;;		_PWM6_Initialize
 12160 ;;		_SPI1_Initialize
 12161 ;;		_TMR2_Initialize
 12162 ;;		_TMR5_Initialize
 12163 ;;		_TMR6_Initialize
 12164 ;;		_UART1_Initialize
 12165 ;; This function is called by:
 12166 ;;		_main
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170                           	psect	text51
 12171  0059E6                     __ptext51:
 12172                           	callstack 0
 12173  0059E6                     _SYSTEM_Initialize:
 12174                           	callstack 24
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12178                           
 12179                           ;incstack = 0
 12180  0059E6  ECA0  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12181                           
 12182                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12183  0059EA  ECF1  F02D         	call	_PMD_Initialize	;wreg free
 12184                           
 12185                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12186  0059EE  EC7D  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 12187                           
 12188                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12189  0059F2  EC31  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 12190                           
 12191                           ;mcc_generated_files/mcc.c: 56:     PWM6_Initialize();
 12192  0059F6  EC70  F02E         	call	_PWM6_Initialize	;wreg free
 12193                           
 12194                           ; BSR set to: 63
 12195                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
 12196  0059FA  EC55  F02D         	call	_TMR6_Initialize	;wreg free
 12197                           
 12198                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 12199  0059FE  ECBD  F029         	call	_ADCC_Initialize	;wreg free
 12200                           
 12201                           ;mcc_generated_files/mcc.c: 59:     DAC1_Initialize();
 12202  005A02  ECE5  F02E         	call	_DAC1_Initialize	;wreg free
 12203                           
 12204                           ; BSR set to: 62
 12205                           ;mcc_generated_files/mcc.c: 60:     TMR5_Initialize();
 12206  005A06  EC59  F02B         	call	_TMR5_Initialize	;wreg free
 12207                           
 12208                           ;mcc_generated_files/mcc.c: 61:     PWM5_Initialize();
 12209  005A0A  EC7C  F02E         	call	_PWM5_Initialize	;wreg free
 12210                           
 12211                           ; BSR set to: 63
 12212                           ;mcc_generated_files/mcc.c: 62:     TMR2_Initialize();
 12213  005A0E  EC13  F02E         	call	_TMR2_Initialize	;wreg free
 12214                           
 12215                           ; BSR set to: 57
 12216                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 12217  005A12  EC5D  F027         	call	_UART1_Initialize	;wreg free
 12218                           
 12219                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
 12220  005A16  EC3F  F02E         	call	_SPI1_Initialize	;wreg free
 12221                           
 12222                           ; BSR set to: 61
 12223  005A1A  0012               	return		;funcret
 12224  005A1C                     __end_of_SYSTEM_Initialize:
 12225                           	callstack 0
 12226                           
 12227 ;; *************** function _UART1_Initialize *****************
 12228 ;; Defined at:
 12229 ;;		line 87 in file "mcc_generated_files/uart1.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;		None
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;		None
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1    wreg      void 
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0, cstack
 12238 ;; Tracked objects:
 12239 ;;		On entry : 3F/39
 12240 ;;		On exit  : 3F/39
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12247 ;;Total ram usage:        0 bytes
 12248 ;; Hardware stack levels used: 1
 12249 ;; Hardware stack levels required when called: 5
 12250 ;; This function calls:
 12251 ;;		_UART1_SetErrorHandler
 12252 ;;		_UART1_SetFramingErrorHandler
 12253 ;;		_UART1_SetOverrunErrorHandler
 12254 ;;		_UART1_SetRxInterruptHandler
 12255 ;;		_UART1_SetTxInterruptHandler
 12256 ;; This function is called by:
 12257 ;;		_SYSTEM_Initialize
 12258 ;; This function uses a non-reentrant model
 12259 ;;
 12260                           
 12261                           	psect	text52
 12262  004EBA                     __ptext52:
 12263                           	callstack 0
 12264  004EBA                     _UART1_Initialize:
 12265                           	callstack 24
 12266                           
 12267                           ; BSR set to: 57
 12268                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 12269                           
 12270                           ; BSR set to: 61
 12271                           ;incstack = 0
 12272  004EBA  9793               	bcf	147,3,b	;volatile
 12273                           
 12274                           ; BSR set to: 57
 12275                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12276  004EBC  0E1C               	movlw	low _UART1_Receive_ISR
 12277  004EBE  6E15               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 12278  004EC0  0E50               	movlw	high _UART1_Receive_ISR
 12279  004EC2  6E16               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 12280  004EC4  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12281  004EC6  6E17               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
 12282  004EC8  ECB4  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12283                           
 12284                           ; BSR set to: 57
 12285                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 12286  004ECC  9993               	bcf	147,4,b	;volatile
 12287                           
 12288                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12289  004ECE  0ED8               	movlw	low _UART1_Transmit_ISR
 12290  004ED0  6E15               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 12291  004ED2  0E5A               	movlw	high _UART1_Transmit_ISR
 12292  004ED4  6E16               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 12293  004ED6  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12294  004ED8  6E17               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
 12295  004EDA  ECAD  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12296                           
 12297                           ; BSR set to: 57
 12298                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 12299  004EDE  0E00               	movlw	0
 12300  004EE0  013D               	movlb	61	; () banked
 12301  004EE2  6FEC               	movwf	236,b	;volatile
 12302                           
 12303                           ; BSR set to: 61
 12304                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 12305  004EE4  0E00               	movlw	0
 12306  004EE6  6FED               	movwf	237,b	;volatile
 12307                           
 12308                           ; BSR set to: 61
 12309                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 12310  004EE8  0E00               	movlw	0
 12311  004EEA  6FEE               	movwf	238,b	;volatile
 12312                           
 12313                           ; BSR set to: 61
 12314                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 12315  004EEC  0E00               	movlw	0
 12316  004EEE  6FEF               	movwf	239,b	;volatile
 12317                           
 12318                           ; BSR set to: 61
 12319                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 12320  004EF0  0E00               	movlw	0
 12321  004EF2  6FF0               	movwf	240,b	;volatile
 12322                           
 12323                           ; BSR set to: 61
 12324                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 12325  004EF4  0E00               	movlw	0
 12326  004EF6  6FF1               	movwf	241,b	;volatile
 12327                           
 12328                           ; BSR set to: 61
 12329                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 12330  004EF8  0EB0               	movlw	176
 12331  004EFA  6FF2               	movwf	242,b	;volatile
 12332                           
 12333                           ; BSR set to: 61
 12334                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 12335  004EFC  0E80               	movlw	128
 12336  004EFE  6FF3               	movwf	243,b	;volatile
 12337                           
 12338                           ; BSR set to: 61
 12339                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 12340  004F00  0E00               	movlw	0
 12341  004F02  6FF4               	movwf	244,b	;volatile
 12342                           
 12343                           ; BSR set to: 61
 12344                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 12345  004F04  0E8A               	movlw	138
 12346  004F06  6FF5               	movwf	245,b	;volatile
 12347                           
 12348                           ; BSR set to: 61
 12349                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 12350  004F08  0E00               	movlw	0
 12351  004F0A  6FF6               	movwf	246,b	;volatile
 12352                           
 12353                           ; BSR set to: 61
 12354                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 12355  004F0C  0E00               	movlw	0
 12356  004F0E  6FF7               	movwf	247,b	;volatile
 12357                           
 12358                           ; BSR set to: 61
 12359                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 12360  004F10  0E00               	movlw	0
 12361  004F12  6FF8               	movwf	248,b	;volatile
 12362                           
 12363                           ; BSR set to: 61
 12364                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 12365  004F14  0E00               	movlw	0
 12366  004F16  6FF9               	movwf	249,b	;volatile
 12367                           
 12368                           ; BSR set to: 61
 12369                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 12370  004F18  0E00               	movlw	0
 12371  004F1A  6FFA               	movwf	250,b	;volatile
 12372                           
 12373                           ; BSR set to: 61
 12374                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 12375  004F1C  0E00               	movlw	low _UART1_DefaultFramingErrorHandler
 12376  004F1E  6E15               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 12377  004F20  0E5E               	movlw	high _UART1_DefaultFramingErrorHandler
 12378  004F22  6E16               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 12379  004F24  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 12380  004F26  6E17               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
 12381  004F28  ECC2  F02E         	call	_UART1_SetFramingErrorHandler	;wreg free
 12382                           
 12383                           ; BSR set to: 61
 12384                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 12385  004F2C  0EFE               	movlw	low _UART1_DefaultOverrunErrorHandler
 12386  004F2E  6E15               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 12387  004F30  0E5D               	movlw	high _UART1_DefaultOverrunErrorHandler
 12388  004F32  6E16               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 12389  004F34  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 12390  004F36  6E17               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
 12391  004F38  ECBB  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 12392                           
 12393                           ; BSR set to: 61
 12394                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 12395  004F3C  0EF0               	movlw	low _UART1_DefaultErrorHandler
 12396  004F3E  6E15               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 12397  004F40  0E5D               	movlw	high _UART1_DefaultErrorHandler
 12398  004F42  6E16               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 12399  004F44  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 12400  004F46  6E17               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
 12401  004F48  ECC9  F02E         	call	_UART1_SetErrorHandler	;wreg free
 12402                           
 12403                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 12404  004F4C  0E00               	movlw	0
 12405  004F4E  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 12406                           
 12407                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 12408  004F50  0E00               	movlw	0
 12409  004F52  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 12410                           
 12411                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 12412  004F54  0E00               	movlw	0
 12413  004F56  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 12414                           
 12415                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12416  004F58  0E40               	movlw	64
 12417  004F5A  6E49               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 12418                           
 12419                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 12420  004F5C  0E00               	movlw	0
 12421  004F5E  6E48               	movwf	_uart1RxHead^0,c	;volatile
 12422                           
 12423                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 12424  004F60  0E00               	movlw	0
 12425  004F62  6E47               	movwf	_uart1RxTail^0,c	;volatile
 12426                           
 12427                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 12428  004F64  0E00               	movlw	0
 12429  004F66  6E46               	movwf	_uart1RxCount^0,c	;volatile
 12430                           
 12431                           ; BSR set to: 61
 12432                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 12433  004F68  0139               	movlb	57	; () banked
 12434  004F6A  8793               	bsf	147,3,b	;volatile
 12435                           
 12436                           ; BSR set to: 57
 12437  004F6C  0012               	return		;funcret
 12438  004F6E                     __end_of_UART1_Initialize:
 12439                           	callstack 0
 12440                           
 12441 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12442 ;; Defined at:
 12443 ;;		line 333 in file "mcc_generated_files/uart1.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12446 ;;		 -> UART1_Transmit_ISR(1), 
 12447 ;; Auto vars:     Size  Location     Type
 12448 ;;		None
 12449 ;; Return value:  Size  Location     Type
 12450 ;;                  1    wreg      void 
 12451 ;; Registers used:
 12452 ;;		wreg, status,2, status,0
 12453 ;; Tracked objects:
 12454 ;;		On entry : 3F/39
 12455 ;;		On exit  : 3F/39
 12456 ;;		Unchanged: 3E/0
 12457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12458 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12461 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12462 ;;Total ram usage:        3 bytes
 12463 ;; Hardware stack levels used: 1
 12464 ;; Hardware stack levels required when called: 4
 12465 ;; This function calls:
 12466 ;;		Nothing
 12467 ;; This function is called by:
 12468 ;;		_UART1_Initialize
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text53
 12473  005D5A                     __ptext53:
 12474                           	callstack 0
 12475  005D5A                     _UART1_SetTxInterruptHandler:
 12476                           	callstack 24
 12477                           
 12478                           ; BSR set to: 57
 12479                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 12480                           
 12481                           ; BSR set to: 57
 12482                           ;incstack = 0
 12483  005D5A  C015  F0EF         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 12484  005D5E  C016  F0F0         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 12485  005D62  C017  F0F1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 12486                           
 12487                           ; BSR set to: 57
 12488  005D66  0012               	return		;funcret
 12489  005D68                     __end_of_UART1_SetTxInterruptHandler:
 12490                           	callstack 0
 12491                           
 12492 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12493 ;; Defined at:
 12494 ;;		line 329 in file "mcc_generated_files/uart1.c"
 12495 ;; Parameters:    Size  Location     Type
 12496 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12497 ;;		 -> UART1_Receive_ISR(1), 
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;		None
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  1    wreg      void 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2, status,0
 12504 ;; Tracked objects:
 12505 ;;		On entry : 3F/39
 12506 ;;		On exit  : 3F/39
 12507 ;;		Unchanged: 3E/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12509 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12512 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12513 ;;Total ram usage:        3 bytes
 12514 ;; Hardware stack levels used: 1
 12515 ;; Hardware stack levels required when called: 4
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_UART1_Initialize
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text54
 12524  005D68                     __ptext54:
 12525                           	callstack 0
 12526  005D68                     _UART1_SetRxInterruptHandler:
 12527                           	callstack 24
 12528                           
 12529                           ; BSR set to: 57
 12530                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 12531                           
 12532                           ; BSR set to: 57
 12533                           ;incstack = 0
 12534  005D68  C015  F0F2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 12535  005D6C  C016  F0F3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 12536  005D70  C017  F0F4         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 12537                           
 12538                           ; BSR set to: 57
 12539  005D74  0012               	return		;funcret
 12540  005D76                     __end_of_UART1_SetRxInterruptHandler:
 12541                           	callstack 0
 12542                           
 12543 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 12544 ;; Defined at:
 12545 ;;		line 319 in file "mcc_generated_files/uart1.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12548 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;		None
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  1    wreg      void 
 12553 ;; Registers used:
 12554 ;;		wreg, status,2, status,0
 12555 ;; Tracked objects:
 12556 ;;		On entry : 3F/3D
 12557 ;;		On exit  : 3F/3D
 12558 ;;		Unchanged: 3E/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12560 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12563 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12564 ;;Total ram usage:        3 bytes
 12565 ;; Hardware stack levels used: 1
 12566 ;; Hardware stack levels required when called: 4
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_UART1_Initialize
 12571 ;; This function uses a non-reentrant model
 12572 ;;
 12573                           
 12574                           	psect	text55
 12575  005D76                     __ptext55:
 12576                           	callstack 0
 12577  005D76                     _UART1_SetOverrunErrorHandler:
 12578                           	callstack 24
 12579                           
 12580                           ; BSR set to: 61
 12581                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 12582                           
 12583                           ; BSR set to: 57
 12584                           ;incstack = 0
 12585  005D76  C015  F0E3         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 12586  005D7A  C016  F0E4         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 12587  005D7E  C017  F0E5         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 12588                           
 12589                           ; BSR set to: 61
 12590  005D82  0012               	return		;funcret
 12591  005D84                     __end_of_UART1_SetOverrunErrorHandler:
 12592                           	callstack 0
 12593                           
 12594 ;; *************** function _UART1_SetFramingErrorHandler *****************
 12595 ;; Defined at:
 12596 ;;		line 315 in file "mcc_generated_files/uart1.c"
 12597 ;; Parameters:    Size  Location     Type
 12598 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12599 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 12600 ;; Auto vars:     Size  Location     Type
 12601 ;;		None
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  1    wreg      void 
 12604 ;; Registers used:
 12605 ;;		wreg, status,2, status,0
 12606 ;; Tracked objects:
 12607 ;;		On entry : 3F/3D
 12608 ;;		On exit  : 3F/3D
 12609 ;;		Unchanged: 3E/0
 12610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12611 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12614 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12615 ;;Total ram usage:        3 bytes
 12616 ;; Hardware stack levels used: 1
 12617 ;; Hardware stack levels required when called: 4
 12618 ;; This function calls:
 12619 ;;		Nothing
 12620 ;; This function is called by:
 12621 ;;		_UART1_Initialize
 12622 ;; This function uses a non-reentrant model
 12623 ;;
 12624                           
 12625                           	psect	text56
 12626  005D84                     __ptext56:
 12627                           	callstack 0
 12628  005D84                     _UART1_SetFramingErrorHandler:
 12629                           	callstack 24
 12630                           
 12631                           ; BSR set to: 61
 12632                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 12633                           
 12634                           ; BSR set to: 61
 12635                           ;incstack = 0
 12636  005D84  C015  F0E6         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 12637  005D88  C016  F0E7         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 12638  005D8C  C017  F0E8         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 12639                           
 12640                           ; BSR set to: 61
 12641  005D90  0012               	return		;funcret
 12642  005D92                     __end_of_UART1_SetFramingErrorHandler:
 12643                           	callstack 0
 12644                           
 12645 ;; *************** function _UART1_SetErrorHandler *****************
 12646 ;; Defined at:
 12647 ;;		line 323 in file "mcc_generated_files/uart1.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12650 ;;		 -> UART1_DefaultErrorHandler(1), 
 12651 ;; Auto vars:     Size  Location     Type
 12652 ;;		None
 12653 ;; Return value:  Size  Location     Type
 12654 ;;                  1    wreg      void 
 12655 ;; Registers used:
 12656 ;;		wreg, status,2, status,0
 12657 ;; Tracked objects:
 12658 ;;		On entry : 3F/3D
 12659 ;;		On exit  : 3F/3D
 12660 ;;		Unchanged: 3E/0
 12661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12662 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12665 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12666 ;;Total ram usage:        3 bytes
 12667 ;; Hardware stack levels used: 1
 12668 ;; Hardware stack levels required when called: 4
 12669 ;; This function calls:
 12670 ;;		Nothing
 12671 ;; This function is called by:
 12672 ;;		_UART1_Initialize
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           	psect	text57
 12677  005D92                     __ptext57:
 12678                           	callstack 0
 12679  005D92                     _UART1_SetErrorHandler:
 12680                           	callstack 24
 12681                           
 12682                           ; BSR set to: 61
 12683                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 12684                           
 12685                           ; BSR set to: 61
 12686                           ;incstack = 0
 12687  005D92  C015  F0E0         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 12688  005D96  C016  F0E1         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 12689  005D9A  C017  F0E2         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 12690                           
 12691                           ; BSR set to: 61
 12692  005D9E  0012               	return		;funcret
 12693  005DA0                     __end_of_UART1_SetErrorHandler:
 12694                           	callstack 0
 12695                           
 12696 ;; *************** function _TMR6_Initialize *****************
 12697 ;; Defined at:
 12698 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 12699 ;; Parameters:    Size  Location     Type
 12700 ;;		None
 12701 ;; Auto vars:     Size  Location     Type
 12702 ;;		None
 12703 ;; Return value:  Size  Location     Type
 12704 ;;                  1    wreg      void 
 12705 ;; Registers used:
 12706 ;;		wreg, status,2, status,0, cstack
 12707 ;; Tracked objects:
 12708 ;;		On entry : 3F/3F
 12709 ;;		On exit  : 3B/39
 12710 ;;		Unchanged: 0/0
 12711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12716 ;;Total ram usage:        0 bytes
 12717 ;; Hardware stack levels used: 1
 12718 ;; Hardware stack levels required when called: 5
 12719 ;; This function calls:
 12720 ;;		_TMR6_SetInterruptHandler
 12721 ;; This function is called by:
 12722 ;;		_SYSTEM_Initialize
 12723 ;; This function uses a non-reentrant model
 12724 ;;
 12725                           
 12726                           	psect	text58
 12727  005AAA                     __ptext58:
 12728                           	callstack 0
 12729  005AAA                     _TMR6_Initialize:
 12730                           	callstack 24
 12731                           
 12732                           ; BSR set to: 63
 12733                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 12734                           
 12735                           ; BSR set to: 61
 12736                           ;incstack = 0
 12737  005AAA  0E01               	movlw	1
 12738  005AAC  6E96               	movwf	150,c	;volatile
 12739                           
 12740                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 12741  005AAE  0E20               	movlw	32
 12742  005AB0  6E95               	movwf	149,c	;volatile
 12743                           
 12744                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 12745  005AB2  0E00               	movlw	0
 12746  005AB4  6E97               	movwf	151,c	;volatile
 12747                           
 12748                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 12749  005AB6  0E4D               	movlw	77
 12750  005AB8  6E93               	movwf	147,c	;volatile
 12751                           
 12752                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 12753  005ABA  0E00               	movlw	0
 12754  005ABC  6E92               	movwf	146,c	;volatile
 12755                           
 12756                           ; BSR set to: 63
 12757                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 12758  005ABE  0139               	movlb	57	; () banked
 12759  005AC0  91A9               	bcf	169,0,b	;volatile
 12760                           
 12761                           ; BSR set to: 57
 12762                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 12763  005AC2  8199               	bsf	153,0,b	;volatile
 12764                           
 12765                           ; BSR set to: 57
 12766                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 12767  005AC4  0EFA               	movlw	low _TMR6_DefaultInterruptHandler
 12768  005AC6  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
 12769  005AC8  0E5D               	movlw	high _TMR6_DefaultInterruptHandler
 12770  005ACA  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
 12771  005ACC  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12772  005ACE  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
 12773  005AD0  ECD0  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12774                           
 12775                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 12776  005AD4  6894               	setf	148,c	;volatile
 12777  005AD6  0012               	return		;funcret
 12778  005AD8                     __end_of_TMR6_Initialize:
 12779                           	callstack 0
 12780                           
 12781 ;; *************** function _TMR6_SetInterruptHandler *****************
 12782 ;; Defined at:
 12783 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 12784 ;; Parameters:    Size  Location     Type
 12785 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12786 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;		None
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  1    wreg      void 
 12791 ;; Registers used:
 12792 ;;		wreg, status,2, status,0
 12793 ;; Tracked objects:
 12794 ;;		On entry : 3B/3D
 12795 ;;		On exit  : 3B/39
 12796 ;;		Unchanged: 3A/0
 12797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12798 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12802 ;;Total ram usage:        3 bytes
 12803 ;; Hardware stack levels used: 1
 12804 ;; Hardware stack levels required when called: 4
 12805 ;; This function calls:
 12806 ;;		Nothing
 12807 ;; This function is called by:
 12808 ;;		_TMR6_Initialize
 12809 ;;		_main
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           	psect	text59
 12814  005DA0                     __ptext59:
 12815                           	callstack 0
 12816  005DA0                     _TMR6_SetInterruptHandler:
 12817                           	callstack 26
 12818                           
 12819                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 12820                           
 12821                           ;incstack = 0
 12822  005DA0  C015  F0E9         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 12823  005DA4  C016  F0EA         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 12824  005DA8  C017  F0EB         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 12825  005DAC  0012               	return		;funcret
 12826  005DAE                     __end_of_TMR6_SetInterruptHandler:
 12827                           	callstack 0
 12828                           
 12829 ;; *************** function _TMR5_Initialize *****************
 12830 ;; Defined at:
 12831 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 12832 ;; Parameters:    Size  Location     Type
 12833 ;;		None
 12834 ;; Auto vars:     Size  Location     Type
 12835 ;;		None
 12836 ;; Return value:  Size  Location     Type
 12837 ;;                  1    wreg      void 
 12838 ;; Registers used:
 12839 ;;		wreg, status,2, status,0, cstack
 12840 ;; Tracked objects:
 12841 ;;		On entry : 3F/3E
 12842 ;;		On exit  : 3B/39
 12843 ;;		Unchanged: 0/0
 12844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12849 ;;Total ram usage:        2 bytes
 12850 ;; Hardware stack levels used: 1
 12851 ;; Hardware stack levels required when called: 5
 12852 ;; This function calls:
 12853 ;;		_TMR5_SetInterruptHandler
 12854 ;; This function is called by:
 12855 ;;		_SYSTEM_Initialize
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           	psect	text60
 12860  0056B2                     __ptext60:
 12861                           	callstack 0
 12862  0056B2                     _TMR5_Initialize:
 12863                           	callstack 24
 12864                           
 12865                           ; BSR set to: 62
 12866                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 12867                           
 12868                           ;incstack = 0
 12869  0056B2  0E00               	movlw	0
 12870  0056B4  6E9B               	movwf	155,c	;volatile
 12871                           
 12872                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 12873  0056B6  0E00               	movlw	0
 12874  0056B8  6E9C               	movwf	156,c	;volatile
 12875                           
 12876                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 12877  0056BA  0E02               	movlw	2
 12878  0056BC  6E9D               	movwf	157,c	;volatile
 12879                           
 12880                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 12881  0056BE  0E83               	movlw	131
 12882  0056C0  6E99               	movwf	153,c	;volatile
 12883                           
 12884                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 12885  0056C2  0E00               	movlw	0
 12886  0056C4  6E98               	movwf	152,c	;volatile
 12887                           
 12888                           ; BSR set to: 62
 12889                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 12890  0056C6  0139               	movlb	57	; () banked
 12891  0056C8  9DA8               	bcf	168,6,b	;volatile
 12892                           
 12893                           ; BSR set to: 57
 12894                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 12895  0056CA  5098               	movf	152,w,c	;volatile
 12896  0056CC  006F FE64  F018    	movff	16281,??_TMR5_Initialize	;volatile
 12897  0056D2  6A19               	clrf	(??_TMR5_Initialize+1)^0,c
 12898  0056D4  C018  F019         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 12899  0056D8  6A18               	clrf	??_TMR5_Initialize^0,c
 12900  0056DA  1018               	iorwf	??_TMR5_Initialize^0,w,c
 12901  0056DC  6E3F               	movwf	_timer5ReloadVal^0,c	;volatile
 12902  0056DE  5019               	movf	(??_TMR5_Initialize+1)^0,w,c
 12903  0056E0  6E40               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 12904                           
 12905                           ; BSR set to: 57
 12906                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 12907  0056E2  8D98               	bsf	152,6,b	;volatile
 12908                           
 12909                           ; BSR set to: 57
 12910                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 12911  0056E4  0E02               	movlw	low _TMR5_DefaultInterruptHandler
 12912  0056E6  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
 12913  0056E8  0E5E               	movlw	high _TMR5_DefaultInterruptHandler
 12914  0056EA  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
 12915  0056EC  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12916  0056EE  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
 12917  0056F0  ECD7  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 12918                           
 12919                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 12920  0056F4  0E01               	movlw	1
 12921  0056F6  6E9A               	movwf	154,c	;volatile
 12922  0056F8  0012               	return		;funcret
 12923  0056FA                     __end_of_TMR5_Initialize:
 12924                           	callstack 0
 12925                           
 12926 ;; *************** function _TMR5_SetInterruptHandler *****************
 12927 ;; Defined at:
 12928 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12931 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 12932 ;; Auto vars:     Size  Location     Type
 12933 ;;		None
 12934 ;; Return value:  Size  Location     Type
 12935 ;;                  1    wreg      void 
 12936 ;; Registers used:
 12937 ;;		wreg, status,2, status,0
 12938 ;; Tracked objects:
 12939 ;;		On entry : 3B/3D
 12940 ;;		On exit  : 3B/39
 12941 ;;		Unchanged: 3A/0
 12942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12943 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12946 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12947 ;;Total ram usage:        3 bytes
 12948 ;; Hardware stack levels used: 1
 12949 ;; Hardware stack levels required when called: 4
 12950 ;; This function calls:
 12951 ;;		Nothing
 12952 ;; This function is called by:
 12953 ;;		_TMR5_Initialize
 12954 ;;		_main
 12955 ;; This function uses a non-reentrant model
 12956 ;;
 12957                           
 12958                           	psect	text61
 12959  005DAE                     __ptext61:
 12960                           	callstack 0
 12961  005DAE                     _TMR5_SetInterruptHandler:
 12962                           	callstack 26
 12963                           
 12964                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 12965                           
 12966                           ;incstack = 0
 12967  005DAE  C015  F0DD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 12968  005DB2  C016  F0DE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 12969  005DB6  C017  F0DF         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 12970  005DBA  0012               	return		;funcret
 12971  005DBC                     __end_of_TMR5_SetInterruptHandler:
 12972                           	callstack 0
 12973                           
 12974 ;; *************** function _TMR2_Initialize *****************
 12975 ;; Defined at:
 12976 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;		None
 12979 ;; Auto vars:     Size  Location     Type
 12980 ;;		None
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  1    wreg      void 
 12983 ;; Registers used:
 12984 ;;		wreg, status,2
 12985 ;; Tracked objects:
 12986 ;;		On entry : 3F/3F
 12987 ;;		On exit  : 3F/39
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12994 ;;Total ram usage:        0 bytes
 12995 ;; Hardware stack levels used: 1
 12996 ;; Hardware stack levels required when called: 4
 12997 ;; This function calls:
 12998 ;;		Nothing
 12999 ;; This function is called by:
 13000 ;;		_SYSTEM_Initialize
 13001 ;; This function uses a non-reentrant model
 13002 ;;
 13003                           
 13004                           	psect	text62
 13005  005C26                     __ptext62:
 13006                           	callstack 0
 13007  005C26                     _TMR2_Initialize:
 13008                           	callstack 25
 13009                           
 13010                           ; BSR set to: 63
 13011                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 13012                           
 13013                           ;incstack = 0
 13014  005C26  0E01               	movlw	1
 13015  005C28  6EAE               	movwf	174,c	;volatile
 13016                           
 13017                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 13018  005C2A  0E00               	movlw	0
 13019  005C2C  6EAD               	movwf	173,c	;volatile
 13020                           
 13021                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13022  005C2E  0E00               	movlw	0
 13023  005C30  6EAF               	movwf	175,c	;volatile
 13024                           
 13025                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x9F;
 13026  005C32  0E9F               	movlw	159
 13027  005C34  6EAB               	movwf	171,c	;volatile
 13028                           
 13029                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13030  005C36  0E00               	movlw	0
 13031  005C38  6EAA               	movwf	170,c	;volatile
 13032                           
 13033                           ; BSR set to: 63
 13034                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13035  005C3A  0139               	movlb	57	; () banked
 13036  005C3C  95A4               	bcf	164,2,b	;volatile
 13037                           
 13038                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 13039  005C3E  0E80               	movlw	128
 13040  005C40  6EAC               	movwf	172,c	;volatile
 13041                           
 13042                           ; BSR set to: 57
 13043  005C42  0012               	return		;funcret
 13044  005C44                     __end_of_TMR2_Initialize:
 13045                           	callstack 0
 13046                           
 13047 ;; *************** function _SPI1_Initialize *****************
 13048 ;; Defined at:
 13049 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13050 ;; Parameters:    Size  Location     Type
 13051 ;;		None
 13052 ;; Auto vars:     Size  Location     Type
 13053 ;;		None
 13054 ;; Return value:  Size  Location     Type
 13055 ;;                  1    wreg      void 
 13056 ;; Registers used:
 13057 ;;		wreg, status,2
 13058 ;; Tracked objects:
 13059 ;;		On entry : 3F/39
 13060 ;;		On exit  : 3F/3D
 13061 ;;		Unchanged: 0/0
 13062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13067 ;;Total ram usage:        0 bytes
 13068 ;; Hardware stack levels used: 1
 13069 ;; Hardware stack levels required when called: 4
 13070 ;; This function calls:
 13071 ;;		Nothing
 13072 ;; This function is called by:
 13073 ;;		_SYSTEM_Initialize
 13074 ;; This function uses a non-reentrant model
 13075 ;;
 13076                           
 13077                           	psect	text63
 13078  005C7E                     __ptext63:
 13079                           	callstack 0
 13080  005C7E                     _SPI1_Initialize:
 13081                           	callstack 25
 13082                           
 13083                           ; BSR set to: 57
 13084                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 13085                           
 13086                           ; BSR set to: 57
 13087                           ;incstack = 0
 13088  005C7E  0E02               	movlw	2
 13089  005C80  013D               	movlb	61	; () banked
 13090  005C82  6F14               	movwf	20,b	;volatile
 13091                           
 13092                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 13093  005C84  0E40               	movlw	64
 13094  005C86  6F15               	movwf	21,b	;volatile
 13095                           
 13096                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 13097  005C88  0E00               	movlw	0
 13098  005C8A  6F16               	movwf	22,b	;volatile
 13099                           
 13100                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 13101  005C8C  0E00               	movlw	0
 13102  005C8E  6F1C               	movwf	28,b	;volatile
 13103                           
 13104                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x08;
 13105  005C90  0E08               	movlw	8
 13106  005C92  6F19               	movwf	25,b	;volatile
 13107                           
 13108                           ; BSR set to: 61
 13109                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 13110  005C94  96C4               	bcf	196,3,c	;volatile
 13111                           
 13112                           ; BSR set to: 61
 13113  005C96  0012               	return		;funcret
 13114  005C98                     __end_of_SPI1_Initialize:
 13115                           	callstack 0
 13116                           
 13117 ;; *************** function _PWM6_Initialize *****************
 13118 ;; Defined at:
 13119 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 13120 ;; Parameters:    Size  Location     Type
 13121 ;;		None
 13122 ;; Auto vars:     Size  Location     Type
 13123 ;;		None
 13124 ;; Return value:  Size  Location     Type
 13125 ;;                  1    wreg      void 
 13126 ;; Registers used:
 13127 ;;		wreg, status,2
 13128 ;; Tracked objects:
 13129 ;;		On entry : 3F/39
 13130 ;;		On exit  : 3F/3F
 13131 ;;		Unchanged: 0/0
 13132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13137 ;;Total ram usage:        0 bytes
 13138 ;; Hardware stack levels used: 1
 13139 ;; Hardware stack levels required when called: 4
 13140 ;; This function calls:
 13141 ;;		Nothing
 13142 ;; This function is called by:
 13143 ;;		_SYSTEM_Initialize
 13144 ;; This function uses a non-reentrant model
 13145 ;;
 13146                           
 13147                           	psect	text64
 13148  005CE0                     __ptext64:
 13149                           	callstack 0
 13150  005CE0                     _PWM6_Initialize:
 13151                           	callstack 25
 13152                           
 13153                           ; BSR set to: 57
 13154                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 13155                           
 13156                           ; BSR set to: 61
 13157                           ;incstack = 0
 13158  005CE0  0E80               	movlw	128
 13159  005CE2  6E6A               	movwf	106,c	;volatile
 13160                           
 13161                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x4F;
 13162  005CE4  0E4F               	movlw	79
 13163  005CE6  6E69               	movwf	105,c	;volatile
 13164                           
 13165                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 13166  005CE8  0EC0               	movlw	192
 13167  005CEA  6E68               	movwf	104,c	;volatile
 13168                           
 13169                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 13170  005CEC  013F               	movlb	63	; () banked
 13171  005CEE  515F               	movf	95,w,b	;volatile
 13172  005CF0  0BF3               	andlw	-13
 13173  005CF2  0904               	iorlw	4
 13174  005CF4  6F5F               	movwf	95,b	;volatile
 13175                           
 13176                           ; BSR set to: 63
 13177  005CF6  0012               	return		;funcret
 13178  005CF8                     __end_of_PWM6_Initialize:
 13179                           	callstack 0
 13180                           
 13181 ;; *************** function _PWM5_Initialize *****************
 13182 ;; Defined at:
 13183 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;		None
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;		None
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  1    wreg      void 
 13190 ;; Registers used:
 13191 ;;		wreg, status,2
 13192 ;; Tracked objects:
 13193 ;;		On entry : 3B/3D
 13194 ;;		On exit  : 3F/3F
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13201 ;;Total ram usage:        0 bytes
 13202 ;; Hardware stack levels used: 1
 13203 ;; Hardware stack levels required when called: 4
 13204 ;; This function calls:
 13205 ;;		Nothing
 13206 ;; This function is called by:
 13207 ;;		_SYSTEM_Initialize
 13208 ;; This function uses a non-reentrant model
 13209 ;;
 13210                           
 13211                           	psect	text65
 13212  005CF8                     __ptext65:
 13213                           	callstack 0
 13214  005CF8                     _PWM5_Initialize:
 13215                           	callstack 25
 13216                           
 13217                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 13218                           
 13219                           ; BSR set to: 63
 13220                           ;incstack = 0
 13221  005CF8  0E80               	movlw	128
 13222  005CFA  6E6E               	movwf	110,c	;volatile
 13223                           
 13224                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x4F;
 13225  005CFC  0E4F               	movlw	79
 13226  005CFE  6E6D               	movwf	109,c	;volatile
 13227                           
 13228                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 13229  005D00  0EC0               	movlw	192
 13230  005D02  6E6C               	movwf	108,c	;volatile
 13231                           
 13232                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 13233  005D04  013F               	movlb	63	; () banked
 13234  005D06  515F               	movf	95,w,b	;volatile
 13235  005D08  0BFC               	andlw	-4
 13236  005D0A  0901               	iorlw	1
 13237  005D0C  6F5F               	movwf	95,b	;volatile
 13238                           
 13239                           ; BSR set to: 63
 13240  005D0E  0012               	return		;funcret
 13241  005D10                     __end_of_PWM5_Initialize:
 13242                           	callstack 0
 13243                           
 13244 ;; *************** function _PMD_Initialize *****************
 13245 ;; Defined at:
 13246 ;;		line 85 in file "mcc_generated_files/mcc.c"
 13247 ;; Parameters:    Size  Location     Type
 13248 ;;		None
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;		None
 13251 ;; Return value:  Size  Location     Type
 13252 ;;                  1    wreg      void 
 13253 ;; Registers used:
 13254 ;;		wreg, status,2
 13255 ;; Tracked objects:
 13256 ;;		On entry : 3F/39
 13257 ;;		On exit  : 3F/39
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13264 ;;Total ram usage:        0 bytes
 13265 ;; Hardware stack levels used: 1
 13266 ;; Hardware stack levels required when called: 4
 13267 ;; This function calls:
 13268 ;;		Nothing
 13269 ;; This function is called by:
 13270 ;;		_SYSTEM_Initialize
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           	psect	text66
 13275  005BE2                     __ptext66:
 13276                           	callstack 0
 13277  005BE2                     _PMD_Initialize:
 13278                           	callstack 25
 13279                           
 13280                           ; BSR set to: 57
 13281                           ;mcc_generated_files/mcc.c: 88:     PMD0 = 0x00;
 13282                           
 13283                           ; BSR set to: 63
 13284                           ;incstack = 0
 13285  005BE2  0E00               	movlw	0
 13286  005BE4  6FC0               	movwf	192,b	;volatile
 13287                           
 13288                           ;mcc_generated_files/mcc.c: 90:     PMD1 = 0x00;
 13289  005BE6  0E00               	movlw	0
 13290  005BE8  6FC1               	movwf	193,b	;volatile
 13291                           
 13292                           ;mcc_generated_files/mcc.c: 92:     PMD2 = 0x00;
 13293  005BEA  0E00               	movlw	0
 13294  005BEC  6FC2               	movwf	194,b	;volatile
 13295                           
 13296                           ;mcc_generated_files/mcc.c: 94:     PMD3 = 0x00;
 13297  005BEE  0E00               	movlw	0
 13298  005BF0  6FC3               	movwf	195,b	;volatile
 13299                           
 13300                           ;mcc_generated_files/mcc.c: 96:     PMD4 = 0x00;
 13301  005BF2  0E00               	movlw	0
 13302  005BF4  6FC4               	movwf	196,b	;volatile
 13303                           
 13304                           ;mcc_generated_files/mcc.c: 98:     PMD5 = 0x00;
 13305  005BF6  0E00               	movlw	0
 13306  005BF8  6FC5               	movwf	197,b	;volatile
 13307                           
 13308                           ;mcc_generated_files/mcc.c: 100:     PMD6 = 0x00;
 13309  005BFA  0E00               	movlw	0
 13310  005BFC  6FC6               	movwf	198,b	;volatile
 13311                           
 13312                           ;mcc_generated_files/mcc.c: 102:     PMD7 = 0x00;
 13313  005BFE  0E00               	movlw	0
 13314  005C00  6FC7               	movwf	199,b	;volatile
 13315                           
 13316                           ; BSR set to: 57
 13317  005C02  0012               	return		;funcret
 13318  005C04                     __end_of_PMD_Initialize:
 13319                           	callstack 0
 13320                           
 13321 ;; *************** function _PIN_MANAGER_Initialize *****************
 13322 ;; Defined at:
 13323 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;		None
 13326 ;; Auto vars:     Size  Location     Type
 13327 ;;		None
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  1    wreg      void 
 13330 ;; Registers used:
 13331 ;;		wreg, status,2
 13332 ;; Tracked objects:
 13333 ;;		On entry : 3F/39
 13334 ;;		On exit  : 3F/3A
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13341 ;;Total ram usage:        0 bytes
 13342 ;; Hardware stack levels used: 1
 13343 ;; Hardware stack levels required when called: 4
 13344 ;; This function calls:
 13345 ;;		Nothing
 13346 ;; This function is called by:
 13347 ;;		_SYSTEM_Initialize
 13348 ;; This function uses a non-reentrant model
 13349 ;;
 13350                           
 13351                           	psect	text67
 13352  004AFA                     __ptext67:
 13353                           	callstack 0
 13354  004AFA                     _PIN_MANAGER_Initialize:
 13355                           	callstack 25
 13356                           
 13357                           ; BSR set to: 57
 13358                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13359                           
 13360                           ; BSR set to: 57
 13361                           ;incstack = 0
 13362  004AFA  0E00               	movlw	0
 13363  004AFC  6EBE               	movwf	190,c	;volatile
 13364                           
 13365                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 13366  004AFE  0E11               	movlw	17
 13367  004B00  6EBD               	movwf	189,c	;volatile
 13368                           
 13369                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 13370  004B02  0E20               	movlw	32
 13371  004B04  6EBA               	movwf	186,c	;volatile
 13372                           
 13373                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 13374  004B06  0E00               	movlw	0
 13375  004B08  6EBF               	movwf	191,c	;volatile
 13376                           
 13377                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 13378  004B0A  0E00               	movlw	0
 13379  004B0C  6EBB               	movwf	187,c	;volatile
 13380                           
 13381                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
 13382  004B0E  0E00               	movlw	0
 13383  004B10  6EBC               	movwf	188,c	;volatile
 13384                           
 13385                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 13386  004B12  0E02               	movlw	2
 13387  004B14  6EC6               	movwf	198,c	;volatile
 13388                           
 13389                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0B;
 13390  004B16  0E0B               	movlw	11
 13391  004B18  6EC7               	movwf	199,c	;volatile
 13392                           
 13393                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 13394  004B1A  0EDF               	movlw	223
 13395  004B1C  6EC2               	movwf	194,c	;volatile
 13396                           
 13397                           ; BSR set to: 57
 13398                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 13399  004B1E  68C3               	setf	195,c	;volatile
 13400                           
 13401                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 13402  004B20  0E90               	movlw	144
 13403  004B22  6EC4               	movwf	196,c	;volatile
 13404                           
 13405                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x08;
 13406  004B24  0E08               	movlw	8
 13407  004B26  6EC5               	movwf	197,c	;volatile
 13408                           
 13409                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x0C;
 13410  004B28  0E0C               	movlw	12
 13411  004B2A  013A               	movlb	58	; () banked
 13412  004B2C  6F70               	movwf	112,b	;volatile
 13413                           
 13414                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x60;
 13415  004B2E  0E60               	movlw	96
 13416  004B30  6F60               	movwf	96,b	;volatile
 13417                           
 13418                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 13419  004B32  0EFE               	movlw	254
 13420  004B34  6F50               	movwf	80,b	;volatile
 13421                           
 13422                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 13423  004B36  0E02               	movlw	2
 13424  004B38  6F80               	movwf	128,b	;volatile
 13425                           
 13426                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0F;
 13427  004B3A  0E0F               	movlw	15
 13428  004B3C  6F90               	movwf	144,b	;volatile
 13429                           
 13430                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 13431  004B3E  0E8F               	movlw	143
 13432  004B40  6F40               	movwf	64,b	;volatile
 13433                           
 13434                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 13435  004B42  0E00               	movlw	0
 13436  004B44  6F71               	movwf	113,b	;volatile
 13437                           
 13438                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 13439  004B46  0E00               	movlw	0
 13440  004B48  6F91               	movwf	145,b	;volatile
 13441                           
 13442                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 13443  004B4A  0E00               	movlw	0
 13444  004B4C  6F81               	movwf	129,b	;volatile
 13445                           
 13446                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 13447  004B4E  0E01               	movlw	1
 13448  004B50  6F51               	movwf	81,b	;volatile
 13449                           
 13450                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 13451  004B52  0E50               	movlw	80
 13452  004B54  6F41               	movwf	65,b	;volatile
 13453                           
 13454                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 13455  004B56  0E00               	movlw	0
 13456  004B58  6F61               	movwf	97,b	;volatile
 13457                           
 13458                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 13459  004B5A  0E00               	movlw	0
 13460  004B5C  6F5A               	movwf	90,b	;volatile
 13461                           
 13462                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 13463  004B5E  0E00               	movlw	0
 13464  004B60  6F5B               	movwf	91,b	;volatile
 13465                           
 13466                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 13467  004B62  0E00               	movlw	0
 13468  004B64  6F6A               	movwf	106,b	;volatile
 13469                           
 13470                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 13471  004B66  0E00               	movlw	0
 13472  004B68  6F6B               	movwf	107,b	;volatile
 13473                           
 13474                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 13475  004B6A  0E00               	movlw	0
 13476  004B6C  6F7A               	movwf	122,b	;volatile
 13477                           
 13478                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 13479  004B6E  0E00               	movlw	0
 13480  004B70  6F7B               	movwf	123,b	;volatile
 13481                           
 13482                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 13483  004B72  0E00               	movlw	0
 13484  004B74  6F82               	movwf	130,b	;volatile
 13485                           
 13486                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 13487  004B76  0E00               	movlw	0
 13488  004B78  6F92               	movwf	146,b	;volatile
 13489                           
 13490                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 13491  004B7A  0E00               	movlw	0
 13492  004B7C  6F42               	movwf	66,b	;volatile
 13493                           
 13494                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 13495  004B7E  0E00               	movlw	0
 13496  004B80  6F52               	movwf	82,b	;volatile
 13497                           
 13498                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 13499  004B82  0E00               	movlw	0
 13500  004B84  6F62               	movwf	98,b	;volatile
 13501                           
 13502                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 13503  004B86  0E00               	movlw	0
 13504  004B88  6F72               	movwf	114,b	;volatile
 13505                           
 13506                           ; BSR set to: 58
 13507                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 13508  004B8A  6943               	setf	67,b	;volatile
 13509                           
 13510                           ; BSR set to: 58
 13511                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 13512  004B8C  6953               	setf	83,b	;volatile
 13513                           
 13514                           ; BSR set to: 58
 13515                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 13516  004B8E  6963               	setf	99,b	;volatile
 13517                           
 13518                           ; BSR set to: 58
 13519                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 13520  004B90  6973               	setf	115,b	;volatile
 13521                           
 13522                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 13523  004B92  0E07               	movlw	7
 13524  004B94  6F83               	movwf	131,b	;volatile
 13525                           
 13526                           ; BSR set to: 58
 13527                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 13528  004B96  6993               	setf	147,b	;volatile
 13529                           
 13530                           ; BSR set to: 58
 13531                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 13532  004B98  6944               	setf	68,b	;volatile
 13533                           
 13534                           ; BSR set to: 58
 13535                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 13536  004B9A  6954               	setf	84,b	;volatile
 13537                           
 13538                           ; BSR set to: 58
 13539                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 13540  004B9C  6964               	setf	100,b	;volatile
 13541                           
 13542                           ; BSR set to: 58
 13543                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 13544  004B9E  6974               	setf	116,b	;volatile
 13545                           
 13546                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 13547  004BA0  0E0F               	movlw	15
 13548  004BA2  6F84               	movwf	132,b	;volatile
 13549                           
 13550                           ; BSR set to: 58
 13551                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 13552  004BA4  6994               	setf	148,b	;volatile
 13553                           
 13554                           ;mcc_generated_files/pin_manager.c: 144:     RD2PPS = 0x0E;
 13555  004BA6  0E0E               	movlw	14
 13556  004BA8  6F1A               	movwf	26,b	;volatile
 13557                           
 13558                           ;mcc_generated_files/pin_manager.c: 145:     SPI1SCKPPS = 0x13;
 13559  004BAA  0E13               	movlw	19
 13560  004BAC  6FDE               	movwf	222,b	;volatile
 13561                           
 13562                           ;mcc_generated_files/pin_manager.c: 146:     RC3PPS = 0x1E;
 13563  004BAE  0E1E               	movlw	30
 13564  004BB0  6F13               	movwf	19,b	;volatile
 13565                           
 13566                           ;mcc_generated_files/pin_manager.c: 147:     RC5PPS = 0x1F;
 13567  004BB2  0E1F               	movlw	31
 13568  004BB4  6F15               	movwf	21,b	;volatile
 13569                           
 13570                           ;mcc_generated_files/pin_manager.c: 148:     RC6PPS = 0x13;
 13571  004BB6  0E13               	movlw	19
 13572  004BB8  6F16               	movwf	22,b	;volatile
 13573                           
 13574                           ;mcc_generated_files/pin_manager.c: 149:     U1RXPPS = 0x17;
 13575  004BBA  0E17               	movlw	23
 13576  004BBC  6FE5               	movwf	229,b	;volatile
 13577                           
 13578                           ;mcc_generated_files/pin_manager.c: 150:     RF2PPS = 0x0D;
 13579  004BBE  0E0D               	movlw	13
 13580  004BC0  6F2A               	movwf	42,b	;volatile
 13581                           
 13582                           ;mcc_generated_files/pin_manager.c: 151:     SPI1SDIPPS = 0x14;
 13583  004BC2  0E14               	movlw	20
 13584  004BC4  6FDF               	movwf	223,b	;volatile
 13585                           
 13586                           ; BSR set to: 58
 13587  004BC6  0012               	return		;funcret
 13588  004BC8                     __end_of_PIN_MANAGER_Initialize:
 13589                           	callstack 0
 13590                           
 13591 ;; *************** function _OSCILLATOR_Initialize *****************
 13592 ;; Defined at:
 13593 ;;		line 67 in file "mcc_generated_files/mcc.c"
 13594 ;; Parameters:    Size  Location     Type
 13595 ;;		None
 13596 ;; Auto vars:     Size  Location     Type
 13597 ;;		None
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  1    wreg      void 
 13600 ;; Registers used:
 13601 ;;		wreg, status,2
 13602 ;; Tracked objects:
 13603 ;;		On entry : 3F/3A
 13604 ;;		On exit  : 3F/39
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13611 ;;Total ram usage:        0 bytes
 13612 ;; Hardware stack levels used: 1
 13613 ;; Hardware stack levels required when called: 4
 13614 ;; This function calls:
 13615 ;;		Nothing
 13616 ;; This function is called by:
 13617 ;;		_SYSTEM_Initialize
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text68
 13622  005C62                     __ptext68:
 13623                           	callstack 0
 13624  005C62                     _OSCILLATOR_Initialize:
 13625                           	callstack 25
 13626                           
 13627                           ; BSR set to: 58
 13628                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x20;
 13629                           
 13630                           ; BSR set to: 58
 13631                           ;incstack = 0
 13632  005C62  0E20               	movlw	32
 13633  005C64  0139               	movlb	57	; () banked
 13634  005C66  6FD9               	movwf	217,b	;volatile
 13635                           
 13636                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
 13637  005C68  0E00               	movlw	0
 13638  005C6A  6FDB               	movwf	219,b	;volatile
 13639                           
 13640                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
 13641  005C6C  0E00               	movlw	0
 13642  005C6E  6FDD               	movwf	221,b	;volatile
 13643                           
 13644                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x05;
 13645  005C70  0E05               	movlw	5
 13646  005C72  6FDF               	movwf	223,b	;volatile
 13647                           
 13648                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
 13649  005C74  0E00               	movlw	0
 13650  005C76  6FDE               	movwf	222,b	;volatile
 13651  005C78                     l195:
 13652                           
 13653                           ; BSR set to: 57
 13654                           ;mcc_generated_files/mcc.c: 80:     while(PLLR == 0)
 13655  005C78  B1DC               	btfsc	220,0,b	;volatile
 13656  005C7A  0012               	return	
 13657  005C7C  D7FD               	goto	l195
 13658  005C7E                     __end_of_OSCILLATOR_Initialize:
 13659                           	callstack 0
 13660                           
 13661 ;; *************** function _INTERRUPT_Initialize *****************
 13662 ;; Defined at:
 13663 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;		None
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;  state           1   20[COMRAM] _Bool 
 13668 ;; Return value:  Size  Location     Type
 13669 ;;                  1    wreg      void 
 13670 ;; Registers used:
 13671 ;;		wreg, status,2
 13672 ;; Tracked objects:
 13673 ;;		On entry : 3F/0
 13674 ;;		On exit  : 3F/39
 13675 ;;		Unchanged: 0/0
 13676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13681 ;;Total ram usage:        1 bytes
 13682 ;; Hardware stack levels used: 1
 13683 ;; Hardware stack levels required when called: 4
 13684 ;; This function calls:
 13685 ;;		Nothing
 13686 ;; This function is called by:
 13687 ;;		_SYSTEM_Initialize
 13688 ;; This function uses a non-reentrant model
 13689 ;;
 13690                           
 13691                           	psect	text69
 13692  005740                     __ptext69:
 13693                           	callstack 0
 13694  005740                     _INTERRUPT_Initialize:
 13695                           	callstack 25
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13699                           
 13700                           ; BSR set to: 57
 13701                           ;incstack = 0
 13702  005740  8AD2               	bsf	210,5,c	;volatile
 13703                           
 13704                           ; BSR set to: 0
 13705                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13706  005742  0E00               	movlw	0
 13707  005744  BED2               	btfsc	16338,7,c	;volatile
 13708  005746  0E01               	movlw	1
 13709  005748  6E15               	movwf	INTERRUPT_Initialize@state^0,c
 13710                           
 13711                           ; BSR set to: 0
 13712                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13713  00574A  9ED2               	bcf	16338,7,c	;volatile
 13714                           
 13715                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13716  00574C  0E55               	movlw	85
 13717  00574E  6ED4               	movwf	212,c	;volatile
 13718                           
 13719                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13720  005750  0EAA               	movlw	170
 13721  005752  6ED4               	movwf	212,c	;volatile
 13722                           
 13723                           ; BSR set to: 0
 13724                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13725  005754  90D4               	bcf	212,0,c	;volatile
 13726                           
 13727                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 13728  005756  0E00               	movlw	0
 13729  005758  6ED7               	movwf	215,c	;volatile
 13730                           
 13731                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 13732  00575A  0E00               	movlw	0
 13733  00575C  6ED6               	movwf	214,c	;volatile
 13734                           
 13735                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 13736  00575E  0E08               	movlw	8
 13737  005760  6ED5               	movwf	213,c	;volatile
 13738                           
 13739                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13740  005762  0E55               	movlw	85
 13741  005764  6ED4               	movwf	212,c	;volatile
 13742                           
 13743                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13744  005766  0EAA               	movlw	170
 13745  005768  6ED4               	movwf	212,c	;volatile
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13749  00576A  80D4               	bsf	212,0,c	;volatile
 13750                           
 13751                           ; BSR set to: 0
 13752                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13753  00576C  B015               	btfsc	INTERRUPT_Initialize@state^0,0,c
 13754  00576E  D002               	bra	u12145
 13755  005770  9ED2               	bcf	16338,7,c	;volatile
 13756  005772  D001               	bra	u12146
 13757  005774                     u12145:
 13758  005774  8ED2               	bsf	16338,7,c	;volatile
 13759  005776                     u12146:
 13760                           
 13761                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 13762  005776  0139               	movlb	57	; () banked
 13763  005778  8983               	bsf	131,4,b	;volatile
 13764                           
 13765                           ; BSR set to: 57
 13766                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 13767  00577A  8783               	bsf	131,3,b	;volatile
 13768                           
 13769                           ; BSR set to: 57
 13770                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR9bits.TMR6IP = 1;
 13771  00577C  8189               	bsf	137,0,b	;volatile
 13772                           
 13773                           ; BSR set to: 57
 13774                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR8bits.TMR5IP = 1;
 13775  00577E  8D88               	bsf	136,6,b	;volatile
 13776                           
 13777                           ; BSR set to: 57
 13778                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.ADIP = 1;
 13779  005780  8581               	bsf	129,2,b	;volatile
 13780                           
 13781                           ; BSR set to: 57
 13782  005782  0012               	return		;funcret
 13783  005784                     __end_of_INTERRUPT_Initialize:
 13784                           	callstack 0
 13785                           
 13786 ;; *************** function _DAC1_Initialize *****************
 13787 ;; Defined at:
 13788 ;;		line 58 in file "mcc_generated_files/dac1.c"
 13789 ;; Parameters:    Size  Location     Type
 13790 ;;		None
 13791 ;; Auto vars:     Size  Location     Type
 13792 ;;		None
 13793 ;; Return value:  Size  Location     Type
 13794 ;;                  1    wreg      void 
 13795 ;; Registers used:
 13796 ;;		wreg, status,2
 13797 ;; Tracked objects:
 13798 ;;		On entry : 3B/3D
 13799 ;;		On exit  : 3F/3E
 13800 ;;		Unchanged: 0/0
 13801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13806 ;;Total ram usage:        0 bytes
 13807 ;; Hardware stack levels used: 1
 13808 ;; Hardware stack levels required when called: 4
 13809 ;; This function calls:
 13810 ;;		Nothing
 13811 ;; This function is called by:
 13812 ;;		_SYSTEM_Initialize
 13813 ;; This function uses a non-reentrant model
 13814 ;;
 13815                           
 13816                           	psect	text70
 13817  005DCA                     __ptext70:
 13818                           	callstack 0
 13819  005DCA                     _DAC1_Initialize:
 13820                           	callstack 25
 13821                           
 13822                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 13823                           
 13824                           ; BSR set to: 57
 13825                           ;incstack = 0
 13826  005DCA  0EA4               	movlw	164
 13827  005DCC  013E               	movlb	62	; () banked
 13828  005DCE  6F9E               	movwf	158,b	;volatile
 13829                           
 13830                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 13831  005DD0  0E1F               	movlw	31
 13832  005DD2  6F9C               	movwf	156,b	;volatile
 13833                           
 13834                           ; BSR set to: 62
 13835  005DD4  0012               	return		;funcret
 13836  005DD6                     __end_of_DAC1_Initialize:
 13837                           	callstack 0
 13838                           
 13839 ;; *************** function _ADCC_Initialize *****************
 13840 ;; Defined at:
 13841 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13842 ;; Parameters:    Size  Location     Type
 13843 ;;		None
 13844 ;; Auto vars:     Size  Location     Type
 13845 ;;		None
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  1    wreg      void 
 13848 ;; Registers used:
 13849 ;;		wreg, status,2, status,0, cstack
 13850 ;; Tracked objects:
 13851 ;;		On entry : 3B/3D
 13852 ;;		On exit  : 3B/39
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13859 ;;Total ram usage:        0 bytes
 13860 ;; Hardware stack levels used: 1
 13861 ;; Hardware stack levels required when called: 5
 13862 ;; This function calls:
 13863 ;;		_ADCC_SetADIInterruptHandler
 13864 ;; This function is called by:
 13865 ;;		_SYSTEM_Initialize
 13866 ;; This function uses a non-reentrant model
 13867 ;;
 13868                           
 13869                           	psect	text71
 13870  00537A                     __ptext71:
 13871                           	callstack 0
 13872  00537A                     _ADCC_Initialize:
 13873                           	callstack 24
 13874                           
 13875                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13876                           
 13877                           ; BSR set to: 62
 13878                           ;incstack = 0
 13879  00537A  0E00               	movlw	0
 13880  00537C  013E               	movlb	62	; () banked
 13881  00537E  6FDE               	movwf	222,b	;volatile
 13882                           
 13883                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13884  005380  0E00               	movlw	0
 13885  005382  6FDF               	movwf	223,b	;volatile
 13886                           
 13887                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13888  005384  0E00               	movlw	0
 13889  005386  6FE0               	movwf	224,b	;volatile
 13890                           
 13891                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13892  005388  0E00               	movlw	0
 13893  00538A  6FE1               	movwf	225,b	;volatile
 13894                           
 13895                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13896  00538C  0E00               	movlw	0
 13897  00538E  6FE4               	movwf	228,b	;volatile
 13898                           
 13899                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13900  005390  0E00               	movlw	0
 13901  005392  6FE5               	movwf	229,b	;volatile
 13902                           
 13903                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13904  005394  0E00               	movlw	0
 13905  005396  6FEA               	movwf	234,b	;volatile
 13906                           
 13907                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13908  005398  0E00               	movlw	0
 13909  00539A  6FEC               	movwf	236,b	;volatile
 13910                           
 13911                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13912  00539C  0E00               	movlw	0
 13913  00539E  6FF1               	movwf	241,b	;volatile
 13914                           
 13915                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 13916  0053A0  0E10               	movlw	16
 13917  0053A2  6FF3               	movwf	243,b	;volatile
 13918                           
 13919                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13920  0053A4  0E00               	movlw	0
 13921  0053A6  6FF4               	movwf	244,b	;volatile
 13922                           
 13923                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13924  0053A8  0E00               	movlw	0
 13925  0053AA  6FF5               	movwf	245,b	;volatile
 13926                           
 13927                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13928  0053AC  0E00               	movlw	0
 13929  0053AE  6FF6               	movwf	246,b	;volatile
 13930                           
 13931                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13932  0053B0  0E00               	movlw	0
 13933  0053B2  6FF7               	movwf	247,b	;volatile
 13934                           
 13935                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13936  0053B4  0E00               	movlw	0
 13937  0053B6  6FF9               	movwf	249,b	;volatile
 13938                           
 13939                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13940  0053B8  0E00               	movlw	0
 13941  0053BA  6FFA               	movwf	250,b	;volatile
 13942                           
 13943                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 13944  0053BC  0E00               	movlw	0
 13945  0053BE  6FFB               	movwf	251,b	;volatile
 13946                           
 13947                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13948  0053C0  0E00               	movlw	0
 13949  0053C2  6FFC               	movwf	252,b	;volatile
 13950                           
 13951                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13952  0053C4  0E02               	movlw	2
 13953  0053C6  6FFD               	movwf	253,b	;volatile
 13954                           
 13955                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 13956  0053C8  0E07               	movlw	7
 13957  0053CA  6FFE               	movwf	254,b	;volatile
 13958                           
 13959                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13960  0053CC  0E00               	movlw	0
 13961  0053CE  6FFF               	movwf	255,b	;volatile
 13962                           
 13963                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 13964  0053D0  0E94               	movlw	148
 13965  0053D2  6FF8               	movwf	248,b	;volatile
 13966                           
 13967                           ; BSR set to: 62
 13968                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 13969  0053D4  0139               	movlb	57	; () banked
 13970  0053D6  95A1               	bcf	161,2,b	;volatile
 13971                           
 13972                           ; BSR set to: 57
 13973                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 13974  0053D8  8591               	bsf	145,2,b	;volatile
 13975                           
 13976                           ; BSR set to: 57
 13977                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 13978  0053DA  0EF8               	movlw	low _ADCC_DefaultInterruptHandler
 13979  0053DC  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
 13980  0053DE  0E5D               	movlw	high _ADCC_DefaultInterruptHandler
 13981  0053E0  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
 13982  0053E2  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 13983  0053E4  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
 13984  0053E6  ECDE  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 13985  0053EA  0012               	return		;funcret
 13986  0053EC                     __end_of_ADCC_Initialize:
 13987                           	callstack 0
 13988                           
 13989 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 13990 ;; Defined at:
 13991 ;;		line 316 in file "mcc_generated_files/adcc.c"
 13992 ;; Parameters:    Size  Location     Type
 13993 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 13994 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 13995 ;; Auto vars:     Size  Location     Type
 13996 ;;		None
 13997 ;; Return value:  Size  Location     Type
 13998 ;;                  1    wreg      void 
 13999 ;; Registers used:
 14000 ;;		wreg, status,2, status,0
 14001 ;; Tracked objects:
 14002 ;;		On entry : 3B/3D
 14003 ;;		On exit  : 3B/39
 14004 ;;		Unchanged: 3A/0
 14005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14006 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14009 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14010 ;;Total ram usage:        3 bytes
 14011 ;; Hardware stack levels used: 1
 14012 ;; Hardware stack levels required when called: 4
 14013 ;; This function calls:
 14014 ;;		Nothing
 14015 ;; This function is called by:
 14016 ;;		_ADCC_Initialize
 14017 ;;		_main
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           	psect	text72
 14022  005DBC                     __ptext72:
 14023                           	callstack 0
 14024  005DBC                     _ADCC_SetADIInterruptHandler:
 14025                           	callstack 24
 14026                           
 14027                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14028                           
 14029                           ;incstack = 0
 14030  005DBC  C015  F0EC         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 14031  005DC0  C016  F0ED         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 14032  005DC4  C017  F0EE         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 14033  005DC8  0012               	return		;funcret
 14034  005DCA                     __end_of_ADCC_SetADIInterruptHandler:
 14035                           	callstack 0
 14036                           
 14037 ;; *************** function _DAC1_SetOutput *****************
 14038 ;; Defined at:
 14039 ;;		line 66 in file "mcc_generated_files/dac1.c"
 14040 ;; Parameters:    Size  Location     Type
 14041 ;;  inputData       1    wreg     unsigned char 
 14042 ;; Auto vars:     Size  Location     Type
 14043 ;;  inputData       1   20[COMRAM] unsigned char 
 14044 ;; Return value:  Size  Location     Type
 14045 ;;                  1    wreg      void 
 14046 ;; Registers used:
 14047 ;;		wreg
 14048 ;; Tracked objects:
 14049 ;;		On entry : 0/3D
 14050 ;;		On exit  : 0/0
 14051 ;;		Unchanged: 0/0
 14052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14057 ;;Total ram usage:        1 bytes
 14058 ;; Hardware stack levels used: 1
 14059 ;; Hardware stack levels required when called: 4
 14060 ;; This function calls:
 14061 ;;		Nothing
 14062 ;; This function is called by:
 14063 ;;		_main
 14064 ;; This function uses a non-reentrant model
 14065 ;;
 14066                           
 14067                           	psect	text73
 14068  005DE0                     __ptext73:
 14069                           	callstack 0
 14070  005DE0                     _DAC1_SetOutput:
 14071                           	callstack 26
 14072                           
 14073                           ;incstack = 0
 14074                           ;DAC1_SetOutput@inputData stored from wreg
 14075  005DE0  6E15               	movwf	DAC1_SetOutput@inputData^0,c
 14076                           
 14077                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 14078  005DE2  0060  F057  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 14079  005DE8  0012               	return		;funcret
 14080  005DEA                     __end_of_DAC1_SetOutput:
 14081                           	callstack 0
 14082                           
 14083 ;; *************** function _DAC1_GetOutput *****************
 14084 ;; Defined at:
 14085 ;;		line 71 in file "mcc_generated_files/dac1.c"
 14086 ;; Parameters:    Size  Location     Type
 14087 ;;		None
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;		None
 14090 ;; Return value:  Size  Location     Type
 14091 ;;                  1    wreg      unsigned char 
 14092 ;; Registers used:
 14093 ;;		wreg, status,2
 14094 ;; Tracked objects:
 14095 ;;		On entry : 3F/2
 14096 ;;		On exit  : 3F/3E
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;Total ram usage:        0 bytes
 14104 ;; Hardware stack levels used: 1
 14105 ;; Hardware stack levels required when called: 4
 14106 ;; This function calls:
 14107 ;;		Nothing
 14108 ;; This function is called by:
 14109 ;;		_main
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text74
 14114  005DEA                     __ptext74:
 14115                           	callstack 0
 14116  005DEA                     _DAC1_GetOutput:
 14117                           	callstack 26
 14118                           
 14119                           ; BSR set to: 2
 14120                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 14121                           
 14122                           ;incstack = 0
 14123  005DEA  013E               	movlb	62	; () banked
 14124  005DEC  519C               	movf	156,w,b	;volatile
 14125                           
 14126                           ; BSR set to: 62
 14127  005DEE  0012               	return		;funcret
 14128  005DF0                     __end_of_DAC1_GetOutput:
 14129                           	callstack 0
 14130                           
 14131 ;; *************** function _ADCC_ISR *****************
 14132 ;; Defined at:
 14133 ;;		line 307 in file "mcc_generated_files/adcc.c"
 14134 ;; Parameters:    Size  Location     Type
 14135 ;;		None
 14136 ;; Auto vars:     Size  Location     Type
 14137 ;;		None
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  1    wreg      void 
 14140 ;; Registers used:
 14141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/0
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14151 ;;Total ram usage:        2 bytes
 14152 ;; Hardware stack levels used: 1
 14153 ;; Hardware stack levels required when called: 2
 14154 ;; This function calls:
 14155 ;;		Absolute function
 14156 ;;		_ADCC_DefaultInterruptHandler
 14157 ;;		_Adc_Isr
 14158 ;; This function is called by:
 14159 ;;		Interrupt level 2
 14160 ;; This function uses a non-reentrant model
 14161 ;;
 14162                           
 14163                           	psect	text75
 14164  005784                     __ptext75:
 14165                           	callstack 0
 14166  005784                     _ADCC_ISR:
 14167                           	callstack 17
 14168                           
 14169                           ; BSR set to: 62
 14170                           ;incstack = 0
 14171  005784  006F FFE8  F006    	movff	pclath,??_ADCC_ISR
 14172  00578A  006F FFEC  F007    	movff	pclatu,??_ADCC_ISR+1
 14173                           
 14174                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 14175  005790  0139               	movlb	57	; () banked
 14176  005792  95A1               	bcf	161,2,b	;volatile
 14177                           
 14178                           ; BSR set to: 57
 14179                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 14180  005794  0100               	movlb	0	; () banked
 14181  005796  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 14182  005798  11ED               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 14183  00579A  11EE               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 14184  00579C  B4D8               	btfsc	status,2,c
 14185  00579E  D00C               	goto	i2u630_49
 14186                           
 14187                           ; BSR set to: 0
 14188                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 14189  0057A0  D801               	call	i2u630_48
 14190  0057A2  D00A               	goto	i2u630_49
 14191  0057A4                     i2u630_48:
 14192  0057A4  0005               	push	
 14193  0057A6  6EFA               	movwf	pclath,c
 14194  0057A8  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 14195  0057AA  6EFD               	movwf	tosl,c
 14196  0057AC  51ED               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 14197  0057AE  6EFE               	movwf	tosh,c
 14198  0057B0  51EE               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 14199  0057B2  6EFF               	movwf	tosu,c
 14200  0057B4  50FA               	movf	pclath,w,c
 14201  0057B6  0012               	return		;indir
 14202  0057B8                     i2u630_49:
 14203  0057B8  0060  F01F  FFFB   	movff	??_ADCC_ISR+1,pclatu
 14204  0057BE  0060  F01B  FFFA   	movff	??_ADCC_ISR,pclath
 14205  0057C4  0011               	retfie		f
 14206  0057C6                     __end_of_ADCC_ISR:
 14207                           	callstack 0
 14208                           
 14209 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 14210 ;; Defined at:
 14211 ;;		line 320 in file "mcc_generated_files/adcc.c"
 14212 ;; Parameters:    Size  Location     Type
 14213 ;;		None
 14214 ;; Auto vars:     Size  Location     Type
 14215 ;;		None
 14216 ;; Return value:  Size  Location     Type
 14217 ;;                  1    wreg      void 
 14218 ;; Registers used:
 14219 ;;		None
 14220 ;; Tracked objects:
 14221 ;;		On entry : 3F/0
 14222 ;;		On exit  : 3F/0
 14223 ;;		Unchanged: 3F/0
 14224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14229 ;;Total ram usage:        0 bytes
 14230 ;; Hardware stack levels used: 1
 14231 ;; This function calls:
 14232 ;;		Nothing
 14233 ;; This function is called by:
 14234 ;;		_ADCC_Initialize
 14235 ;;		_ADCC_ISR
 14236 ;; This function uses a non-reentrant model
 14237 ;;
 14238                           
 14239                           	psect	text76
 14240  005DF8                     __ptext76:
 14241                           	callstack 0
 14242  005DF8                     _ADCC_DefaultInterruptHandler:
 14243                           	callstack 18
 14244                           
 14245                           ; BSR set to: 0
 14246                           
 14247                           ;incstack = 0
 14248  005DF8  0012               	return		;funcret
 14249  005DFA                     __end_of_ADCC_DefaultInterruptHandler:
 14250                           	callstack 0
 14251                           
 14252 ;; *************** function _Adc_Isr *****************
 14253 ;; Defined at:
 14254 ;;		line 83 in file "main.c"
 14255 ;; Parameters:    Size  Location     Type
 14256 ;;		None
 14257 ;; Auto vars:     Size  Location     Type
 14258 ;;		None
 14259 ;; Return value:  Size  Location     Type
 14260 ;;                  1    wreg      void 
 14261 ;; Registers used:
 14262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14263 ;; Tracked objects:
 14264 ;;		On entry : 3F/0
 14265 ;;		On exit  : 3F/0
 14266 ;;		Unchanged: 0/0
 14267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14272 ;;Total ram usage:        1 bytes
 14273 ;; Hardware stack levels used: 1
 14274 ;; Hardware stack levels required when called: 1
 14275 ;; This function calls:
 14276 ;;		_ADCC_GetConversionResult
 14277 ;; This function is called by:
 14278 ;;		_main
 14279 ;;		_ADCC_ISR
 14280 ;; This function uses a non-reentrant model
 14281 ;;
 14282                           
 14283                           	psect	text77
 14284  005972                     __ptext77:
 14285                           	callstack 0
 14286  005972                     _Adc_Isr:
 14287                           	callstack 17
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;main.c: 85:  ana[adc_chan] = ADCC_GetConversionResult();
 14291                           
 14292                           ; BSR set to: 0
 14293                           ;incstack = 0
 14294  005972  EC94  F02E         	call	_ADCC_GetConversionResult	;wreg free
 14295  005976  5044               	movf	_adc_chan^0,w,c
 14296  005978  0D02               	mullw	2
 14297  00597A  50F3               	movf	243,w,c
 14298  00597C  0F39               	addlw	low _ana
 14299  00597E  6ED9               	movwf	fsr2l,c
 14300  005980  6ADA               	clrf	fsr2h,c
 14301  005982  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 14302  005988  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 14303                           
 14304                           ; BSR set to: 62
 14305                           ;main.c: 86:  if (adc_chan++ >= 2) {
 14306  00598E  2A44               	incf	_adc_chan^0,f,c	;volatile
 14307  005990  0444               	decf	_adc_chan^0,w,c	;volatile
 14308  005992  6E05               	movwf	??_Adc_Isr^0,c
 14309  005994  0E01               	movlw	1
 14310  005996  6405               	cpfsgt	??_Adc_Isr^0,c
 14311  005998  D002               	goto	i2l6369
 14312                           
 14313                           ; BSR set to: 62
 14314                           ;main.c: 87:   adc_chan = 0;
 14315  00599A  0E00               	movlw	0
 14316  00599C  6E44               	movwf	_adc_chan^0,c	;volatile
 14317  00599E                     i2l6369:
 14318                           
 14319                           ; BSR set to: 62
 14320                           ;main.c: 89:  ADPCH = adc_chan;
 14321  00599E  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
 14322                           
 14323                           ;main.c: 93:  adc_tick = 1;
 14324  0059A4  0E01               	movlw	1
 14325  0059A6  0100               	movlb	0	; () banked
 14326  0059A8  6FFC               	movwf	_adc_tick& (0+255),b	;volatile
 14327                           
 14328                           ; BSR set to: 0
 14329  0059AA  0012               	return		;funcret
 14330  0059AC                     __end_of_Adc_Isr:
 14331                           	callstack 0
 14332                           
 14333 ;; *************** function _ADCC_GetConversionResult *****************
 14334 ;; Defined at:
 14335 ;;		line 139 in file "mcc_generated_files/adcc.c"
 14336 ;; Parameters:    Size  Location     Type
 14337 ;;		None
 14338 ;; Auto vars:     Size  Location     Type
 14339 ;;		None
 14340 ;; Return value:  Size  Location     Type
 14341 ;;                  2    0[COMRAM] unsigned short 
 14342 ;; Registers used:
 14343 ;;		wreg, status,2, status,0
 14344 ;; Tracked objects:
 14345 ;;		On entry : 3F/0
 14346 ;;		On exit  : 3F/3E
 14347 ;;		Unchanged: 0/0
 14348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14353 ;;Total ram usage:        4 bytes
 14354 ;; Hardware stack levels used: 1
 14355 ;; This function calls:
 14356 ;;		Nothing
 14357 ;; This function is called by:
 14358 ;;		_Adc_Isr
 14359 ;; This function uses a non-reentrant model
 14360 ;;
 14361                           
 14362                           	psect	text78
 14363  005D28                     __ptext78:
 14364                           	callstack 0
 14365  005D28                     _ADCC_GetConversionResult:
 14366                           	callstack 17
 14367                           
 14368                           ; BSR set to: 0
 14369                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14370                           
 14371                           ; BSR set to: 0
 14372                           ;incstack = 0
 14373  005D28  013E               	movlb	62	; () banked
 14374  005D2A  51F0               	movf	240,w,b	;volatile
 14375  005D2C  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 14376  005D2E  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 14377  005D30  51EF               	movf	239,w,b	;volatile
 14378  005D32  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 14379  005D34  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 14380  005D36  0E00               	movlw	0
 14381  005D38  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 14382  005D3A  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 14383                           
 14384                           ; BSR set to: 62
 14385  005D3C  0012               	return		;funcret
 14386  005D3E                     __end_of_ADCC_GetConversionResult:
 14387                           	callstack 0
 14388                           
 14389 ;; *************** function _TMR6_ISR *****************
 14390 ;; Defined at:
 14391 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 14392 ;; Parameters:    Size  Location     Type
 14393 ;;		None
 14394 ;; Auto vars:     Size  Location     Type
 14395 ;;		None
 14396 ;; Return value:  Size  Location     Type
 14397 ;;                  1    wreg      void 
 14398 ;; Registers used:
 14399 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14400 ;; Tracked objects:
 14401 ;;		On entry : 0/0
 14402 ;;		On exit  : 0/0
 14403 ;;		Unchanged: 0/0
 14404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14409 ;;Total ram usage:        2 bytes
 14410 ;; Hardware stack levels used: 1
 14411 ;; Hardware stack levels required when called: 2
 14412 ;; This function calls:
 14413 ;;		_TMR6_CallBack
 14414 ;; This function is called by:
 14415 ;;		Interrupt level 2
 14416 ;; This function uses a non-reentrant model
 14417 ;;
 14418                           
 14419                           	psect	text79
 14420  0059AC                     __ptext79:
 14421                           	callstack 0
 14422  0059AC                     _TMR6_ISR:
 14423                           	callstack 17
 14424                           
 14425                           ; BSR set to: 62
 14426                           ;incstack = 0
 14427  0059AC  006F FFE8  F009    	movff	pclath,??_TMR6_ISR
 14428  0059B2  006F FFEC  F00A    	movff	pclatu,??_TMR6_ISR+1
 14429                           
 14430                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 14431  0059B8  0139               	movlb	57	; () banked
 14432  0059BA  91A9               	bcf	169,0,b	;volatile
 14433                           
 14434                           ; BSR set to: 57
 14435                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 14436  0059BC  4A41               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 14437  0059BE  2A42               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 14438  0059C0  5042               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 14439  0059C2  E104               	bnz	i2u631_40
 14440  0059C4  0E17               	movlw	23
 14441  0059C6  5C41               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 14442  0059C8  A0D8               	btfss	status,0,c
 14443  0059CA  D006               	goto	i2l464
 14444  0059CC                     i2u631_40:
 14445                           
 14446                           ; BSR set to: 57
 14447                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 14448  0059CC  ECBC  F02D         	call	_TMR6_CallBack	;wreg free
 14449                           
 14450                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 14451  0059D0  0E00               	movlw	0
 14452  0059D2  6E42               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 14453  0059D4  0E00               	movlw	0
 14454  0059D6  6E41               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 14455  0059D8                     i2l464:
 14456  0059D8  0060  F02B  FFFB   	movff	??_TMR6_ISR+1,pclatu
 14457  0059DE  0060  F027  FFFA   	movff	??_TMR6_ISR,pclath
 14458  0059E4  0011               	retfie		f
 14459  0059E6                     __end_of_TMR6_ISR:
 14460                           	callstack 0
 14461                           
 14462 ;; *************** function _TMR6_CallBack *****************
 14463 ;; Defined at:
 14464 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;		None
 14467 ;; Auto vars:     Size  Location     Type
 14468 ;;		None
 14469 ;; Return value:  Size  Location     Type
 14470 ;;                  1    wreg      void 
 14471 ;; Registers used:
 14472 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14473 ;; Tracked objects:
 14474 ;;		On entry : 3F/39
 14475 ;;		On exit  : 0/0
 14476 ;;		Unchanged: 0/0
 14477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14482 ;;Total ram usage:        0 bytes
 14483 ;; Hardware stack levels used: 1
 14484 ;; Hardware stack levels required when called: 1
 14485 ;; This function calls:
 14486 ;;		Absolute function
 14487 ;;		_Led_Blink
 14488 ;;		_TMR6_DefaultInterruptHandler
 14489 ;; This function is called by:
 14490 ;;		_TMR6_ISR
 14491 ;; This function uses a non-reentrant model
 14492 ;;
 14493                           
 14494                           	psect	text80
 14495  005B78                     __ptext80:
 14496                           	callstack 0
 14497  005B78                     _TMR6_CallBack:
 14498                           	callstack 17
 14499                           
 14500                           ; BSR set to: 57
 14501                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 14502                           
 14503                           ;incstack = 0
 14504  005B78  0100               	movlb	0	; () banked
 14505  005B7A  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14506  005B7C  11EA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14507  005B7E  11EB               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14508  005B80  B4D8               	btfsc	status,2,c
 14509  005B82  0012               	return	
 14510                           
 14511                           ; BSR set to: 0
 14512                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 14513  005B84  D801               	call	i2u603_48
 14514  005B86  0012               	return	
 14515  005B88                     i2u603_48:
 14516  005B88  0005               	push	
 14517  005B8A  6EFA               	movwf	pclath,c
 14518  005B8C  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14519  005B8E  6EFD               	movwf	tosl,c
 14520  005B90  51EA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14521  005B92  6EFE               	movwf	tosh,c
 14522  005B94  51EB               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14523  005B96  6EFF               	movwf	tosu,c
 14524  005B98  50FA               	movf	pclath,w,c
 14525  005B9A  0012               	return		;indir
 14526  005B9C                     __end_of_TMR6_CallBack:
 14527                           	callstack 0
 14528                           
 14529 ;; *************** function _Led_Blink *****************
 14530 ;; Defined at:
 14531 ;;		line 67 in file "main.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;		None
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;		None
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  1    wreg      void 
 14538 ;; Registers used:
 14539 ;;		wreg, status,2, status,0
 14540 ;; Tracked objects:
 14541 ;;		On entry : 3F/0
 14542 ;;		On exit  : 3F/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14548 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14549 ;;Total ram usage:        1 bytes
 14550 ;; Hardware stack levels used: 1
 14551 ;; This function calls:
 14552 ;;		Nothing
 14553 ;; This function is called by:
 14554 ;;		_main
 14555 ;;		_TMR6_CallBack
 14556 ;; This function uses a non-reentrant model
 14557 ;;
 14558                           
 14559                           	psect	text81
 14560  005C44                     __ptext81:
 14561                           	callstack 0
 14562  005C44                     _Led_Blink:
 14563                           	callstack 17
 14564                           
 14565                           ; BSR set to: 0
 14566                           
 14567                           ; BSR set to: 0
 14568                           
 14569                           ;incstack = 0
 14570                           ;main.c: 69:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 14571  005C44  A0BE               	btfss	190,0,c	;volatile
 14572  005C46  D002               	goto	i2u594_40
 14573  005C48  0E01               	movlw	1
 14574  005C4A  D001               	goto	i2u594_46
 14575  005C4C                     i2u594_40:
 14576  005C4C  0E00               	movlw	0
 14577  005C4E                     i2u594_46:
 14578  005C4E  0AFF               	xorlw	255
 14579  005C50  6E08               	movwf	??_Led_Blink^0,c
 14580  005C52  50BE               	movf	190,w,c	;volatile
 14581  005C54  1808               	xorwf	??_Led_Blink^0,w,c
 14582  005C56  0BFE               	andlw	-2
 14583  005C58  1808               	xorwf	??_Led_Blink^0,w,c
 14584  005C5A  6EBE               	movwf	190,c	;volatile
 14585                           
 14586                           ; BSR set to: 0
 14587                           ;main.c: 73:  disp_tick = 1;
 14588  005C5C  0E01               	movlw	1
 14589  005C5E  6FFD               	movwf	_disp_tick& (0+255),b	;volatile
 14590                           
 14591                           ; BSR set to: 0
 14592  005C60  0012               	return		;funcret
 14593  005C62                     __end_of_Led_Blink:
 14594                           	callstack 0
 14595                           
 14596 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14597 ;; Defined at:
 14598 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 14599 ;; Parameters:    Size  Location     Type
 14600 ;;		None
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;		None
 14603 ;; Return value:  Size  Location     Type
 14604 ;;                  1    wreg      void 
 14605 ;; Registers used:
 14606 ;;		None
 14607 ;; Tracked objects:
 14608 ;;		On entry : 3F/0
 14609 ;;		On exit  : 3F/0
 14610 ;;		Unchanged: 3F/0
 14611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14616 ;;Total ram usage:        0 bytes
 14617 ;; Hardware stack levels used: 1
 14618 ;; This function calls:
 14619 ;;		Nothing
 14620 ;; This function is called by:
 14621 ;;		_TMR6_Initialize
 14622 ;;		_TMR6_CallBack
 14623 ;; This function uses a non-reentrant model
 14624 ;;
 14625                           
 14626                           	psect	text82
 14627  005DFA                     __ptext82:
 14628                           	callstack 0
 14629  005DFA                     _TMR6_DefaultInterruptHandler:
 14630                           	callstack 17
 14631                           
 14632                           ; BSR set to: 0
 14633                           
 14634                           ; BSR set to: 0
 14635                           ;incstack = 0
 14636  005DFA  0012               	return		;funcret
 14637  005DFC                     __end_of_TMR6_DefaultInterruptHandler:
 14638                           	callstack 0
 14639                           
 14640 ;; *************** function _Default_ISR *****************
 14641 ;; Defined at:
 14642 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;		None
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;		None
 14647 ;; Return value:  Size  Location     Type
 14648 ;;                  1    wreg      void 
 14649 ;; Registers used:
 14650 ;;		None
 14651 ;; Tracked objects:
 14652 ;;		On entry : 0/0
 14653 ;;		On exit  : 0/0
 14654 ;;		Unchanged: 0/0
 14655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14660 ;;Total ram usage:        0 bytes
 14661 ;; Hardware stack levels used: 1
 14662 ;; This function calls:
 14663 ;;		Nothing
 14664 ;; This function is called by:
 14665 ;;		Interrupt level 2
 14666 ;; This function uses a non-reentrant model
 14667 ;;
 14668                           
 14669                           	psect	text83
 14670  005DFC                     __ptext83:
 14671                           	callstack 0
 14672  005DFC                     _Default_ISR:
 14673                           	callstack 19
 14674                           
 14675                           ; BSR set to: 0
 14676                           ;incstack = 0
 14677  005DFC  0011               	retfie		f
 14678  005DFE                     __end_of_Default_ISR:
 14679                           	callstack 0
 14680                           
 14681 ;; *************** function _UART1_tx_vect_isr *****************
 14682 ;; Defined at:
 14683 ;;		line 235 in file "mcc_generated_files/uart1.c"
 14684 ;; Parameters:    Size  Location     Type
 14685 ;;		None
 14686 ;; Auto vars:     Size  Location     Type
 14687 ;;		None
 14688 ;; Return value:  Size  Location     Type
 14689 ;;                  1    wreg      void 
 14690 ;; Registers used:
 14691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14692 ;; Tracked objects:
 14693 ;;		On entry : 0/0
 14694 ;;		On exit  : 0/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14701 ;;Total ram usage:        2 bytes
 14702 ;; Hardware stack levels used: 1
 14703 ;; Hardware stack levels required when called: 1
 14704 ;; This function calls:
 14705 ;;		Absolute function
 14706 ;;		_UART1_Transmit_ISR
 14707 ;; This function is called by:
 14708 ;;		Interrupt level 2
 14709 ;; This function uses a non-reentrant model
 14710 ;;
 14711                           
 14712                           	psect	text84
 14713  005844                     __ptext84:
 14714                           	callstack 0
 14715  005844                     _UART1_tx_vect_isr:
 14716                           	callstack 18
 14717                           
 14718                           ;incstack = 0
 14719  005844  006F FFE8  F00B    	movff	pclath,??_UART1_tx_vect_isr
 14720  00584A  006F FFEC  F00C    	movff	pclatu,??_UART1_tx_vect_isr+1
 14721                           
 14722                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 14723  005850  0100               	movlb	0	; () banked
 14724  005852  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14725  005854  11F0               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14726  005856  11F1               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14727  005858  B4D8               	btfsc	status,2,c
 14728  00585A  D00C               	goto	i2u633_49
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 14732  00585C  D801               	call	i2u633_48
 14733  00585E  D00A               	goto	i2u633_49
 14734  005860                     i2u633_48:
 14735  005860  0005               	push	
 14736  005862  6EFA               	movwf	pclath,c
 14737  005864  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14738  005866  6EFD               	movwf	tosl,c
 14739  005868  51F0               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14740  00586A  6EFE               	movwf	tosh,c
 14741  00586C  51F1               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14742  00586E  6EFF               	movwf	tosu,c
 14743  005870  50FA               	movf	pclath,w,c
 14744  005872  0012               	return		;indir
 14745  005874                     i2u633_49:
 14746  005874  0060  F033  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 14747  00587A  0060  F02F  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 14748  005880  0011               	retfie		f
 14749  005882                     __end_of_UART1_tx_vect_isr:
 14750                           	callstack 0
 14751                           
 14752 ;; *************** function _UART1_Transmit_ISR *****************
 14753 ;; Defined at:
 14754 ;;		line 253 in file "mcc_generated_files/uart1.c"
 14755 ;; Parameters:    Size  Location     Type
 14756 ;;		None
 14757 ;; Auto vars:     Size  Location     Type
 14758 ;;		None
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  1    wreg      void 
 14761 ;; Registers used:
 14762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14763 ;; Tracked objects:
 14764 ;;		On entry : 3F/0
 14765 ;;		On exit  : 3B/39
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14772 ;;Total ram usage:        0 bytes
 14773 ;; Hardware stack levels used: 1
 14774 ;; This function calls:
 14775 ;;		Nothing
 14776 ;; This function is called by:
 14777 ;;		_UART1_Initialize
 14778 ;;		_UART1_tx_vect_isr
 14779 ;; This function uses a non-reentrant model
 14780 ;;
 14781                           
 14782                           	psect	text85
 14783  005AD8                     __ptext85:
 14784                           	callstack 0
 14785  005AD8                     _UART1_Transmit_ISR:
 14786                           	callstack 18
 14787                           
 14788                           ; BSR set to: 0
 14789                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 14790                           
 14791                           ;incstack = 0
 14792  005AD8  0E40               	movlw	64
 14793  005ADA  6049               	cpfslt	_uart1TxBufferRemaining^0,c
 14794  005ADC  D011               	goto	i2l650
 14795                           
 14796                           ; BSR set to: 0
 14797                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 14798  005ADE  0E40               	movlw	low _uart1TxBuffer
 14799  005AE0  244A               	addwf	_uart1TxTail^0,w,c	;volatile
 14800  005AE2  6ED9               	movwf	fsr2l,c
 14801  005AE4  6ADA               	clrf	fsr2h,c
 14802  005AE6  0E01               	movlw	high _uart1TxBuffer
 14803  005AE8  22DA               	addwfc	fsr2h,f,c
 14804  005AEA  50DF               	movf	indf2,w,c
 14805  005AEC  013D               	movlb	61	; () banked
 14806  005AEE  6FEA               	movwf	234,b	;volatile
 14807                           
 14808                           ; BSR set to: 61
 14809  005AF0  2A4A               	incf	_uart1TxTail^0,f,c	;volatile
 14810                           
 14811                           ; BSR set to: 61
 14812                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 14813  005AF2  0E3F               	movlw	63
 14814  005AF4  644A               	cpfsgt	_uart1TxTail^0,c
 14815  005AF6  D002               	goto	i2l6337
 14816                           
 14817                           ; BSR set to: 61
 14818                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 14819  005AF8  0E00               	movlw	0
 14820  005AFA  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 14821  005AFC                     i2l6337:
 14822                           
 14823                           ; BSR set to: 61
 14824                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 14825  005AFC  2A49               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 14826                           
 14827                           ;mcc_generated_files/uart1.c: 264:     }
 14828  005AFE  0012               	return	
 14829  005B00                     i2l650:
 14830                           
 14831                           ; BSR set to: 0
 14832                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 14833  005B00  0139               	movlb	57	; () banked
 14834  005B02  9993               	bcf	147,4,b	;volatile
 14835  005B04  0012               	return		;funcret
 14836  005B06                     __end_of_UART1_Transmit_ISR:
 14837                           	callstack 0
 14838                           
 14839 ;; *************** function _UART1_rx_vect_isr *****************
 14840 ;; Defined at:
 14841 ;;		line 243 in file "mcc_generated_files/uart1.c"
 14842 ;; Parameters:    Size  Location     Type
 14843 ;;		None
 14844 ;; Auto vars:     Size  Location     Type
 14845 ;;		None
 14846 ;; Return value:  Size  Location     Type
 14847 ;;                  1    wreg      void 
 14848 ;; Registers used:
 14849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14850 ;; Tracked objects:
 14851 ;;		On entry : 0/0
 14852 ;;		On exit  : 0/0
 14853 ;;		Unchanged: 0/0
 14854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14859 ;;Total ram usage:        2 bytes
 14860 ;; Hardware stack levels used: 1
 14861 ;; Hardware stack levels required when called: 3
 14862 ;; This function calls:
 14863 ;;		Absolute function
 14864 ;;		_UART1_Receive_ISR
 14865 ;; This function is called by:
 14866 ;;		Interrupt level 2
 14867 ;; This function uses a non-reentrant model
 14868 ;;
 14869                           
 14870                           	psect	text86
 14871  005884                     __ptext86:
 14872                           	callstack 0
 14873  005884                     _UART1_rx_vect_isr:
 14874                           	callstack 16
 14875                           
 14876                           ;incstack = 0
 14877  005884  006F FFE8  F00D    	movff	pclath,??_UART1_rx_vect_isr
 14878  00588A  006F FFEC  F00E    	movff	pclatu,??_UART1_rx_vect_isr+1
 14879                           
 14880                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 14881  005890  0100               	movlb	0	; () banked
 14882  005892  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14883  005894  11F3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14884  005896  11F4               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14885  005898  B4D8               	btfsc	status,2,c
 14886  00589A  D00C               	goto	i2u635_49
 14887                           
 14888                           ; BSR set to: 0
 14889                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 14890  00589C  D801               	call	i2u635_48
 14891  00589E  D00A               	goto	i2u635_49
 14892  0058A0                     i2u635_48:
 14893  0058A0  0005               	push	
 14894  0058A2  6EFA               	movwf	pclath,c
 14895  0058A4  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14896  0058A6  6EFD               	movwf	tosl,c
 14897  0058A8  51F3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14898  0058AA  6EFE               	movwf	tosh,c
 14899  0058AC  51F4               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14900  0058AE  6EFF               	movwf	tosu,c
 14901  0058B0  50FA               	movf	pclath,w,c
 14902  0058B2  0012               	return		;indir
 14903  0058B4                     i2u635_49:
 14904  0058B4  0060  F03B  FFFB   	movff	??_UART1_rx_vect_isr+1,pclatu
 14905  0058BA  0060  F037  FFFA   	movff	??_UART1_rx_vect_isr,pclath
 14906  0058C0  0011               	retfie		f
 14907  0058C2                     __end_of_UART1_rx_vect_isr:
 14908                           	callstack 0
 14909                           
 14910 ;; *************** function _UART1_Receive_ISR *****************
 14911 ;; Defined at:
 14912 ;;		line 273 in file "mcc_generated_files/uart1.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;		None
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;		None
 14917 ;; Return value:  Size  Location     Type
 14918 ;;                  1    wreg      void 
 14919 ;; Registers used:
 14920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14921 ;; Tracked objects:
 14922 ;;		On entry : 3F/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14930 ;;Total ram usage:        0 bytes
 14931 ;; Hardware stack levels used: 1
 14932 ;; Hardware stack levels required when called: 2
 14933 ;; This function calls:
 14934 ;;		Absolute function
 14935 ;;		_UART1_DefaultErrorHandler
 14936 ;;		_UART1_DefaultFramingErrorHandler
 14937 ;;		_UART1_DefaultOverrunErrorHandler
 14938 ;;		_UART1_RxDataHandler
 14939 ;; This function is called by:
 14940 ;;		_UART1_Initialize
 14941 ;;		_UART1_rx_vect_isr
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           	psect	text87
 14946  00501C                     __ptext87:
 14947                           	callstack 0
 14948  00501C                     _UART1_Receive_ISR:
 14949                           	callstack 16
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 14953                           
 14954                           ;incstack = 0
 14955  00501C  0E00               	movlw	low _uart1RxStatusBuffer
 14956  00501E  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14957  005020  6ED9               	movwf	fsr2l,c
 14958  005022  6ADA               	clrf	fsr2h,c
 14959  005024  0E01               	movlw	high _uart1RxStatusBuffer
 14960  005026  22DA               	addwfc	fsr2h,f,c
 14961  005028  0E00               	movlw	0
 14962  00502A  6EDF               	movwf	indf2,c
 14963                           
 14964                           ; BSR set to: 0
 14965                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 14966  00502C  013D               	movlb	61	; () banked
 14967  00502E  A7F9               	btfss	249,3,b	;volatile
 14968  005030  D015               	goto	i2u607_49
 14969                           
 14970                           ; BSR set to: 61
 14971                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 14972  005032  0E00               	movlw	low _uart1RxStatusBuffer
 14973  005034  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14974  005036  6ED9               	movwf	fsr2l,c
 14975  005038  6ADA               	clrf	fsr2h,c
 14976  00503A  0E01               	movlw	high _uart1RxStatusBuffer
 14977  00503C  22DA               	addwfc	fsr2h,f,c
 14978  00503E  0101               	movlb	1	; () banked
 14979  005040  82DF               	bsf	indf2,1,c
 14980                           
 14981                           ; BSR set to: 1
 14982                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 14983  005042  D801               	call	i2u607_48
 14984  005044  D00B               	goto	i2u607_49
 14985  005046                     i2u607_48:
 14986  005046  0005               	push	
 14987  005048  6EFA               	movwf	pclath,c
 14988  00504A  0100               	movlb	0	; () banked
 14989  00504C  51E6               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 14990  00504E  6EFD               	movwf	tosl,c
 14991  005050  51E7               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 14992  005052  6EFE               	movwf	tosh,c
 14993  005054  51E8               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 14994  005056  6EFF               	movwf	tosu,c
 14995  005058  50FA               	movf	pclath,w,c
 14996  00505A  0012               	return		;indir
 14997  00505C                     i2u607_49:
 14998                           
 14999                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15000  00505C  013D               	movlb	61	; () banked
 15001  00505E  A3F9               	btfss	249,1,b	;volatile
 15002  005060  D015               	goto	i2u609_49
 15003                           
 15004                           ; BSR set to: 61
 15005                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15006  005062  0E00               	movlw	low _uart1RxStatusBuffer
 15007  005064  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 15008  005066  6ED9               	movwf	fsr2l,c
 15009  005068  6ADA               	clrf	fsr2h,c
 15010  00506A  0E01               	movlw	high _uart1RxStatusBuffer
 15011  00506C  22DA               	addwfc	fsr2h,f,c
 15012  00506E  0101               	movlb	1	; () banked
 15013  005070  84DF               	bsf	indf2,2,c
 15014                           
 15015                           ; BSR set to: 1
 15016                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15017  005072  D801               	call	i2u609_48
 15018  005074  D00B               	goto	i2u609_49
 15019  005076                     i2u609_48:
 15020  005076  0005               	push	
 15021  005078  6EFA               	movwf	pclath,c
 15022  00507A  0100               	movlb	0	; () banked
 15023  00507C  51E3               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15024  00507E  6EFD               	movwf	tosl,c
 15025  005080  51E4               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15026  005082  6EFE               	movwf	tosh,c
 15027  005084  51E5               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 15028  005086  6EFF               	movwf	tosu,c
 15029  005088  50FA               	movf	pclath,w,c
 15030  00508A  0012               	return		;indir
 15031  00508C                     i2u609_49:
 15032                           
 15033                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15034  00508C  0E00               	movlw	low _uart1RxStatusBuffer
 15035  00508E  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 15036  005090  6ED9               	movwf	fsr2l,c
 15037  005092  6ADA               	clrf	fsr2h,c
 15038  005094  0E01               	movlw	high _uart1RxStatusBuffer
 15039  005096  22DA               	addwfc	fsr2h,f,c
 15040  005098  50DF               	movf	indf2,w,c
 15041  00509A  B4D8               	btfsc	status,2,c
 15042  00509C  D00D               	goto	i2l6357
 15043                           
 15044                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15045  00509E  D801               	call	i2u611_48
 15046  0050A0  0012               	return	
 15047  0050A2                     i2u611_48:
 15048  0050A2  0005               	push	
 15049  0050A4  6EFA               	movwf	pclath,c
 15050  0050A6  0100               	movlb	0	; () banked
 15051  0050A8  51E0               	movf	_UART1_ErrorHandler& (0+255),w,b
 15052  0050AA  6EFD               	movwf	tosl,c
 15053  0050AC  51E1               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15054  0050AE  6EFE               	movwf	tosh,c
 15055  0050B0  51E2               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 15056  0050B2  6EFF               	movwf	tosu,c
 15057  0050B4  50FA               	movf	pclath,w,c
 15058  0050B6  0012               	return		;indir
 15059  0050B8                     i2l6357:
 15060                           
 15061                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15062  0050B8  EC02  F02E         	call	_UART1_RxDataHandler	;wreg free
 15063  0050BC  0012               	return		;funcret
 15064  0050BE                     __end_of_UART1_Receive_ISR:
 15065                           	callstack 0
 15066                           
 15067 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15068 ;; Defined at:
 15069 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;		None
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;		None
 15074 ;; Return value:  Size  Location     Type
 15075 ;;                  1    wreg      void 
 15076 ;; Registers used:
 15077 ;;		None
 15078 ;; Tracked objects:
 15079 ;;		On entry : 3F/0
 15080 ;;		On exit  : 3F/0
 15081 ;;		Unchanged: 3F/0
 15082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15087 ;;Total ram usage:        0 bytes
 15088 ;; Hardware stack levels used: 1
 15089 ;; This function calls:
 15090 ;;		Nothing
 15091 ;; This function is called by:
 15092 ;;		_UART1_Initialize
 15093 ;;		_UART1_Receive_ISR
 15094 ;; This function uses a non-reentrant model
 15095 ;;
 15096                           
 15097                           	psect	text88
 15098  005DFE                     __ptext88:
 15099                           	callstack 0
 15100  005DFE                     _UART1_DefaultOverrunErrorHandler:
 15101                           	callstack 17
 15102                           
 15103                           ; BSR set to: 0
 15104                           
 15105                           ;incstack = 0
 15106  005DFE  0012               	return		;funcret
 15107  005E00                     __end_of_UART1_DefaultOverrunErrorHandler:
 15108                           	callstack 0
 15109                           
 15110 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15111 ;; Defined at:
 15112 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15113 ;; Parameters:    Size  Location     Type
 15114 ;;		None
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;		None
 15117 ;; Return value:  Size  Location     Type
 15118 ;;                  1    wreg      void 
 15119 ;; Registers used:
 15120 ;;		None
 15121 ;; Tracked objects:
 15122 ;;		On entry : 3F/0
 15123 ;;		On exit  : 3F/0
 15124 ;;		Unchanged: 3F/0
 15125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15130 ;;Total ram usage:        0 bytes
 15131 ;; Hardware stack levels used: 1
 15132 ;; This function calls:
 15133 ;;		Nothing
 15134 ;; This function is called by:
 15135 ;;		_UART1_Initialize
 15136 ;;		_UART1_Receive_ISR
 15137 ;; This function uses a non-reentrant model
 15138 ;;
 15139                           
 15140                           	psect	text89
 15141  005E00                     __ptext89:
 15142                           	callstack 0
 15143  005E00                     _UART1_DefaultFramingErrorHandler:
 15144                           	callstack 17
 15145                           
 15146                           ; BSR set to: 0
 15147                           
 15148                           ; BSR set to: 0
 15149                           ;incstack = 0
 15150  005E00  0012               	return		;funcret
 15151  005E02                     __end_of_UART1_DefaultFramingErrorHandler:
 15152                           	callstack 0
 15153                           
 15154 ;; *************** function _UART1_DefaultErrorHandler *****************
 15155 ;; Defined at:
 15156 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15157 ;; Parameters:    Size  Location     Type
 15158 ;;		None
 15159 ;; Auto vars:     Size  Location     Type
 15160 ;;		None
 15161 ;; Return value:  Size  Location     Type
 15162 ;;                  1    wreg      void 
 15163 ;; Registers used:
 15164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15165 ;; Tracked objects:
 15166 ;;		On entry : 3F/0
 15167 ;;		On exit  : 0/0
 15168 ;;		Unchanged: 0/0
 15169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15174 ;;Total ram usage:        0 bytes
 15175 ;; Hardware stack levels used: 1
 15176 ;; Hardware stack levels required when called: 1
 15177 ;; This function calls:
 15178 ;;		_UART1_RxDataHandler
 15179 ;; This function is called by:
 15180 ;;		_UART1_Initialize
 15181 ;;		_UART1_Receive_ISR
 15182 ;; This function uses a non-reentrant model
 15183 ;;
 15184                           
 15185                           	psect	text90
 15186  005DF0                     __ptext90:
 15187                           	callstack 0
 15188  005DF0                     _UART1_DefaultErrorHandler:
 15189                           	callstack 16
 15190                           
 15191                           ; BSR set to: 0
 15192                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15193                           
 15194                           ; BSR set to: 0
 15195                           ;incstack = 0
 15196  005DF0  EC02  F02E         	call	_UART1_RxDataHandler	;wreg free
 15197  005DF4  0012               	return		;funcret
 15198  005DF6                     __end_of_UART1_DefaultErrorHandler:
 15199                           	callstack 0
 15200                           
 15201 ;; *************** function _UART1_RxDataHandler *****************
 15202 ;; Defined at:
 15203 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15204 ;; Parameters:    Size  Location     Type
 15205 ;;		None
 15206 ;; Auto vars:     Size  Location     Type
 15207 ;;		None
 15208 ;; Return value:  Size  Location     Type
 15209 ;;                  1    wreg      void 
 15210 ;; Registers used:
 15211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15212 ;; Tracked objects:
 15213 ;;		On entry : 0/3D
 15214 ;;		On exit  : 0/0
 15215 ;;		Unchanged: 0/0
 15216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15221 ;;Total ram usage:        0 bytes
 15222 ;; Hardware stack levels used: 1
 15223 ;; This function calls:
 15224 ;;		Nothing
 15225 ;; This function is called by:
 15226 ;;		_UART1_Receive_ISR
 15227 ;;		_UART1_DefaultErrorHandler
 15228 ;; This function uses a non-reentrant model
 15229 ;;
 15230                           
 15231                           	psect	text91
 15232  005C04                     __ptext91:
 15233                           	callstack 0
 15234  005C04                     _UART1_RxDataHandler:
 15235                           	callstack 17
 15236                           
 15237                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15238                           
 15239                           ;incstack = 0
 15240  005C04  0E00               	movlw	low _uart1RxBuffer
 15241  005C06  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 15242  005C08  6ED9               	movwf	fsr2l,c
 15243  005C0A  6ADA               	clrf	fsr2h,c
 15244  005C0C  0E02               	movlw	high _uart1RxBuffer
 15245  005C0E  22DA               	addwfc	fsr2h,f,c
 15246  005C10  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15247  005C16  2A48               	incf	_uart1RxHead^0,f,c	;volatile
 15248                           
 15249                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15250  005C18  0E3F               	movlw	63
 15251  005C1A  6448               	cpfsgt	_uart1RxHead^0,c
 15252  005C1C  D002               	goto	i2l6039
 15253                           
 15254                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15255  005C1E  0E00               	movlw	0
 15256  005C20  6E48               	movwf	_uart1RxHead^0,c	;volatile
 15257  005C22                     i2l6039:
 15258                           
 15259                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15260  005C22  2A46               	incf	_uart1RxCount^0,f,c	;volatile
 15261  005C24  0012               	return		;funcret
 15262  005C26                     __end_of_UART1_RxDataHandler:
 15263                           	callstack 0
 15264                           
 15265 ;; *************** function _TMR5_ISR *****************
 15266 ;; Defined at:
 15267 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 15268 ;; Parameters:    Size  Location     Type
 15269 ;;		None
 15270 ;; Auto vars:     Size  Location     Type
 15271 ;;		None
 15272 ;; Return value:  Size  Location     Type
 15273 ;;                  1    wreg      void 
 15274 ;; Registers used:
 15275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15276 ;; Tracked objects:
 15277 ;;		On entry : 0/0
 15278 ;;		On exit  : 0/0
 15279 ;;		Unchanged: 0/0
 15280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15284 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15285 ;;Total ram usage:        2 bytes
 15286 ;; Hardware stack levels used: 1
 15287 ;; Hardware stack levels required when called: 1
 15288 ;; This function calls:
 15289 ;;		Absolute function
 15290 ;;		_TMR5_DefaultInterruptHandler
 15291 ;;		_TMR5_WriteTimer
 15292 ;;		_Timers_Isr
 15293 ;; This function is called by:
 15294 ;;		Interrupt level 2
 15295 ;; This function uses a non-reentrant model
 15296 ;;
 15297                           
 15298                           	psect	text92
 15299  005618                     __ptext92:
 15300                           	callstack 0
 15301  005618                     _TMR5_ISR:
 15302                           	callstack 18
 15303                           
 15304                           ;incstack = 0
 15305  005618  006F FFE8  F013    	movff	pclath,??_TMR5_ISR
 15306  00561E  006F FFEC  F014    	movff	pclatu,??_TMR5_ISR+1
 15307                           
 15308                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 15309  005624  0139               	movlb	57	; () banked
 15310  005626  9DA8               	bcf	168,6,b	;volatile
 15311                           
 15312                           ; BSR set to: 57
 15313                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 15314  005628  C03F  F00F         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 15315  00562C  C040  F010         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 15316  005630  ECCE  F02D         	call	_TMR5_WriteTimer	;wreg free
 15317                           
 15318                           ; BSR set to: 57
 15319                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 15320  005634  0100               	movlb	0	; () banked
 15321  005636  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 15322  005638  11DE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 15323  00563A  11DF               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 15324  00563C  B4D8               	btfsc	status,2,c
 15325  00563E  D00C               	goto	i2u637_49
 15326                           
 15327                           ; BSR set to: 0
 15328                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 15329  005640  D801               	call	i2u637_48
 15330  005642  D00A               	goto	i2u637_49
 15331  005644                     i2u637_48:
 15332  005644  0005               	push	
 15333  005646  6EFA               	movwf	pclath,c
 15334  005648  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 15335  00564A  6EFD               	movwf	tosl,c
 15336  00564C  51DE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 15337  00564E  6EFE               	movwf	tosh,c
 15338  005650  51DF               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 15339  005652  6EFF               	movwf	tosu,c
 15340  005654  50FA               	movf	pclath,w,c
 15341  005656  0012               	return		;indir
 15342  005658                     i2u637_49:
 15343  005658  0060  F053  FFFB   	movff	??_TMR5_ISR+1,pclatu
 15344  00565E  0060  F04F  FFFA   	movff	??_TMR5_ISR,pclath
 15345  005664  0011               	retfie		f
 15346  005666                     __end_of_TMR5_ISR:
 15347                           	callstack 0
 15348                           
 15349 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15350 ;; Defined at:
 15351 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;		None
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;		None
 15356 ;; Return value:  Size  Location     Type
 15357 ;;                  1    wreg      void 
 15358 ;; Registers used:
 15359 ;;		None
 15360 ;; Tracked objects:
 15361 ;;		On entry : 3F/0
 15362 ;;		On exit  : 3F/0
 15363 ;;		Unchanged: 3F/0
 15364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15369 ;;Total ram usage:        0 bytes
 15370 ;; Hardware stack levels used: 1
 15371 ;; This function calls:
 15372 ;;		Nothing
 15373 ;; This function is called by:
 15374 ;;		_TMR5_Initialize
 15375 ;;		_TMR5_ISR
 15376 ;; This function uses a non-reentrant model
 15377 ;;
 15378                           
 15379                           	psect	text93
 15380  005E02                     __ptext93:
 15381                           	callstack 0
 15382  005E02                     _TMR5_DefaultInterruptHandler:
 15383                           	callstack 18
 15384                           
 15385                           ; BSR set to: 0
 15386                           
 15387                           ;incstack = 0
 15388  005E02  0012               	return		;funcret
 15389  005E04                     __end_of_TMR5_DefaultInterruptHandler:
 15390                           	callstack 0
 15391                           
 15392 ;; *************** function _Timers_Isr *****************
 15393 ;; Defined at:
 15394 ;;		line 48 in file "timers.c"
 15395 ;; Parameters:    Size  Location     Type
 15396 ;;		None
 15397 ;; Auto vars:     Size  Location     Type
 15398 ;;  i               2   16[COMRAM] int 
 15399 ;; Return value:  Size  Location     Type
 15400 ;;                  1    wreg      void 
 15401 ;; Registers used:
 15402 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15403 ;; Tracked objects:
 15404 ;;		On entry : 3F/0
 15405 ;;		On exit  : 3F/0
 15406 ;;		Unchanged: 3F/0
 15407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15412 ;;Total ram usage:        4 bytes
 15413 ;; Hardware stack levels used: 1
 15414 ;; This function calls:
 15415 ;;		Nothing
 15416 ;; This function is called by:
 15417 ;;		_main
 15418 ;;		_TMR5_ISR
 15419 ;; This function uses a non-reentrant model
 15420 ;;
 15421                           
 15422                           	psect	text94
 15423  005576                     __ptext94:
 15424                           	callstack 0
 15425  005576                     _Timers_Isr:
 15426                           	callstack 18
 15427                           
 15428                           ; BSR set to: 0
 15429                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 15430                           
 15431                           ; BSR set to: 0
 15432                           ;incstack = 0
 15433  005576  0E00               	movlw	0
 15434  005578  6E12               	movwf	(Timers_Isr@i+1)^0,c
 15435  00557A  0E00               	movlw	0
 15436  00557C  6E11               	movwf	Timers_Isr@i^0,c
 15437  00557E                     i2l6429:
 15438                           
 15439                           ; BSR set to: 0
 15440                           ;timers.c: 52:   if (tickCount[i] != 0) {
 15441  00557E  90D8               	bcf	status,0,c
 15442  005580  3411               	rlcf	Timers_Isr@i^0,w,c
 15443  005582  6ED9               	movwf	fsr2l,c
 15444  005584  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15445  005586  6EDA               	movwf	fsr2h,c
 15446  005588  0E80               	movlw	low _tickCount
 15447  00558A  26D9               	addwf	fsr2l,f,c
 15448  00558C  0E01               	movlw	high _tickCount
 15449  00558E  22DA               	addwfc	fsr2h,f,c
 15450  005590  50DE               	movf	postinc2,w,c
 15451  005592  10DE               	iorwf	postinc2,w,c
 15452  005594  B4D8               	btfsc	status,2,c
 15453  005596  D00C               	goto	i2l6433
 15454                           
 15455                           ; BSR set to: 0
 15456                           ;timers.c: 53:    tickCount[i]--;
 15457  005598  90D8               	bcf	status,0,c
 15458  00559A  3411               	rlcf	Timers_Isr@i^0,w,c
 15459  00559C  6ED9               	movwf	fsr2l,c
 15460  00559E  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15461  0055A0  6EDA               	movwf	fsr2h,c
 15462  0055A2  0E80               	movlw	low _tickCount
 15463  0055A4  26D9               	addwf	fsr2l,f,c
 15464  0055A6  0E01               	movlw	high _tickCount
 15465  0055A8  22DA               	addwfc	fsr2h,f,c
 15466  0055AA  06DE               	decf	postinc2,f,c
 15467  0055AC  0E00               	movlw	0
 15468  0055AE  5ADD               	subwfb	postdec2,f,c
 15469  0055B0                     i2l6433:
 15470                           
 15471                           ; BSR set to: 0
 15472                           ;timers.c: 55:  }
 15473  0055B0  4A11               	infsnz	Timers_Isr@i^0,f,c
 15474  0055B2  2A12               	incf	(Timers_Isr@i+1)^0,f,c
 15475                           
 15476                           ; BSR set to: 0
 15477  0055B4  BE12               	btfsc	(Timers_Isr@i+1)^0,7,c
 15478  0055B6  D7E3               	goto	i2l6429
 15479  0055B8  5012               	movf	(Timers_Isr@i+1)^0,w,c
 15480  0055BA  E105               	bnz	i2u618_40
 15481  0055BC  0E06               	movlw	6
 15482  0055BE  5C11               	subwf	Timers_Isr@i^0,w,c
 15483  0055C0  B0D8               	btfsc	status,0,c
 15484  0055C2  0012               	return	
 15485  0055C4  D7DC               	goto	i2l6429
 15486  0055C6                     i2u618_40:
 15487                           
 15488                           ; BSR set to: 0
 15489  0055C6  0012               	return		;funcret
 15490  0055C8                     __end_of_Timers_Isr:
 15491                           	callstack 0
 15492                           
 15493 ;; *************** function _TMR5_WriteTimer *****************
 15494 ;; Defined at:
 15495 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 15496 ;; Parameters:    Size  Location     Type
 15497 ;;  timerVal        2   14[COMRAM] unsigned short 
 15498 ;; Auto vars:     Size  Location     Type
 15499 ;;		None
 15500 ;; Return value:  Size  Location     Type
 15501 ;;                  1    wreg      void 
 15502 ;; Registers used:
 15503 ;;		None
 15504 ;; Tracked objects:
 15505 ;;		On entry : 3F/39
 15506 ;;		On exit  : 3F/39
 15507 ;;		Unchanged: 3E/0
 15508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15513 ;;Total ram usage:        2 bytes
 15514 ;; Hardware stack levels used: 1
 15515 ;; This function calls:
 15516 ;;		Nothing
 15517 ;; This function is called by:
 15518 ;;		_TMR5_ISR
 15519 ;; This function uses a non-reentrant model
 15520 ;;
 15521                           
 15522                           	psect	text95
 15523  005B9C                     __ptext95:
 15524                           	callstack 0
 15525  005B9C                     _TMR5_WriteTimer:
 15526                           	callstack 18
 15527                           
 15528                           ; BSR set to: 57
 15529                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 15530                           
 15531                           ; BSR set to: 0
 15532                           ;incstack = 0
 15533  005B9C  A49A               	btfss	154,2,c	;volatile
 15534  005B9E  D009               	goto	i2l731
 15535                           
 15536                           ; BSR set to: 57
 15537                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 15538  005BA0  909A               	bcf	154,0,c	;volatile
 15539                           
 15540                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 15541  005BA2  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15542                           
 15543                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 15544  005BA8  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15545                           
 15546                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 15547  005BAE  809A               	bsf	154,0,c	;volatile
 15548                           
 15549                           ;mcc_generated_files/tmr5.c: 141:     }
 15550  005BB0  0012               	return	
 15551  005BB2                     i2l731:
 15552                           
 15553                           ; BSR set to: 57
 15554                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 15555  005BB2  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15556                           
 15557                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 15558  005BB8  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15559                           
 15560                           ; BSR set to: 57
 15561  005BBE  0012               	return		;funcret
 15562  005BC0                     __end_of_TMR5_WriteTimer:
 15563                           	callstack 0
 15564                           
 15565                           ;
 15566                           ; Interrupt Vector Table @ 0x8
 15567                           ;
 15568                           
 15569                           	psect	ivt0x8
 15570  000008                     __pivt0x8:
 15571                           	callstack 0
 15572  000008                     ivt0x8_base:
 15573                           	callstack 0
 15574                           
 15575                           ; Vector 0 : SWINT
 15576  000008  177F               	dw	_Default_ISR shr (0+2)
 15577                           
 15578                           ; Vector 1 : HLVD
 15579  00000A  177F               	dw	_Default_ISR shr (0+2)
 15580                           
 15581                           ; Vector 2 : OSF
 15582  00000C  177F               	dw	_Default_ISR shr (0+2)
 15583                           
 15584                           ; Vector 3 : CSW
 15585  00000E  177F               	dw	_Default_ISR shr (0+2)
 15586                           
 15587                           ; Vector 4 : NVM
 15588  000010  177F               	dw	_Default_ISR shr (0+2)
 15589                           
 15590                           ; Vector 5 : SCAN
 15591  000012  177F               	dw	_Default_ISR shr (0+2)
 15592                           
 15593                           ; Vector 6 : CRC
 15594  000014  177F               	dw	_Default_ISR shr (0+2)
 15595                           
 15596                           ; Vector 7 : IOC
 15597  000016  177F               	dw	_Default_ISR shr (0+2)
 15598                           
 15599                           ; Vector 8 : INT0
 15600  000018  177F               	dw	_Default_ISR shr (0+2)
 15601                           
 15602                           ; Vector 9 : ZCD
 15603  00001A  177F               	dw	_Default_ISR shr (0+2)
 15604                           
 15605                           ; Vector 10 : AD
 15606  00001C  15E1               	dw	_ADCC_ISR shr (0+2)
 15607                           
 15608                           ; Vector 11 : ADT
 15609  00001E  177F               	dw	_Default_ISR shr (0+2)
 15610                           
 15611                           ; Vector 12 : CMP1
 15612  000020  177F               	dw	_Default_ISR shr (0+2)
 15613                           
 15614                           ; Vector 13 : SMT1
 15615  000022  177F               	dw	_Default_ISR shr (0+2)
 15616                           
 15617                           ; Vector 14 : SMT1PRA
 15618  000024  177F               	dw	_Default_ISR shr (0+2)
 15619                           
 15620                           ; Vector 15 : SMT1PRW
 15621  000026  177F               	dw	_Default_ISR shr (0+2)
 15622                           
 15623                           ; Vector 16 : DMA1SCNT
 15624  000028  177F               	dw	_Default_ISR shr (0+2)
 15625                           
 15626                           ; Vector 17 : DMA1DCNT
 15627  00002A  177F               	dw	_Default_ISR shr (0+2)
 15628                           
 15629                           ; Vector 18 : DMA1OR
 15630  00002C  177F               	dw	_Default_ISR shr (0+2)
 15631                           
 15632                           ; Vector 19 : DMA1A
 15633  00002E  177F               	dw	_Default_ISR shr (0+2)
 15634                           
 15635                           ; Vector 20 : SPI1RX
 15636  000030  177F               	dw	_Default_ISR shr (0+2)
 15637                           
 15638                           ; Vector 21 : SPI1TX
 15639  000032  177F               	dw	_Default_ISR shr (0+2)
 15640                           
 15641                           ; Vector 22 : SPI1
 15642  000034  177F               	dw	_Default_ISR shr (0+2)
 15643                           
 15644                           ; Vector 23 : I2C1RX
 15645  000036  177F               	dw	_Default_ISR shr (0+2)
 15646                           
 15647                           ; Vector 24 : I2C1TX
 15648  000038  177F               	dw	_Default_ISR shr (0+2)
 15649                           
 15650                           ; Vector 25 : I2C1
 15651  00003A  177F               	dw	_Default_ISR shr (0+2)
 15652                           
 15653                           ; Vector 26 : I2C1E
 15654  00003C  177F               	dw	_Default_ISR shr (0+2)
 15655                           
 15656                           ; Vector 27 : U1RX
 15657  00003E  1621               	dw	_UART1_rx_vect_isr shr (0+2)
 15658                           
 15659                           ; Vector 28 : U1TX
 15660  000040  1611               	dw	_UART1_tx_vect_isr shr (0+2)
 15661                           
 15662                           ; Vector 29 : U1E
 15663  000042  177F               	dw	_Default_ISR shr (0+2)
 15664                           
 15665                           ; Vector 30 : U1
 15666  000044  177F               	dw	_Default_ISR shr (0+2)
 15667                           
 15668                           ; Vector 31 : TMR0
 15669  000046  177F               	dw	_Default_ISR shr (0+2)
 15670                           
 15671                           ; Vector 32 : TMR1
 15672  000048  177F               	dw	_Default_ISR shr (0+2)
 15673                           
 15674                           ; Vector 33 : TMR1G
 15675  00004A  177F               	dw	_Default_ISR shr (0+2)
 15676                           
 15677                           ; Vector 34 : TMR2
 15678  00004C  177F               	dw	_Default_ISR shr (0+2)
 15679                           
 15680                           ; Vector 35 : CCP1
 15681  00004E  177F               	dw	_Default_ISR shr (0+2)
 15682                           
 15683                           ; Vector 36 : Undefined
 15684  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15685                           
 15686                           ; Vector 37 : NCO1
 15687  000052  177F               	dw	_Default_ISR shr (0+2)
 15688                           
 15689                           ; Vector 38 : CWG1
 15690  000054  177F               	dw	_Default_ISR shr (0+2)
 15691                           
 15692                           ; Vector 39 : CLC1
 15693  000056  177F               	dw	_Default_ISR shr (0+2)
 15694                           
 15695                           ; Vector 40 : INT1
 15696  000058  177F               	dw	_Default_ISR shr (0+2)
 15697                           
 15698                           ; Vector 41 : CMP2
 15699  00005A  177F               	dw	_Default_ISR shr (0+2)
 15700                           
 15701                           ; Vector 42 : DMA2SCNT
 15702  00005C  177F               	dw	_Default_ISR shr (0+2)
 15703                           
 15704                           ; Vector 43 : DMA2DCNT
 15705  00005E  177F               	dw	_Default_ISR shr (0+2)
 15706                           
 15707                           ; Vector 44 : DMA2OR
 15708  000060  177F               	dw	_Default_ISR shr (0+2)
 15709                           
 15710                           ; Vector 45 : DMA2A
 15711  000062  177F               	dw	_Default_ISR shr (0+2)
 15712                           
 15713                           ; Vector 46 : I2C2RX
 15714  000064  177F               	dw	_Default_ISR shr (0+2)
 15715                           
 15716                           ; Vector 47 : I2C2TX
 15717  000066  177F               	dw	_Default_ISR shr (0+2)
 15718                           
 15719                           ; Vector 48 : I2C2
 15720  000068  177F               	dw	_Default_ISR shr (0+2)
 15721                           
 15722                           ; Vector 49 : I2C2E
 15723  00006A  177F               	dw	_Default_ISR shr (0+2)
 15724                           
 15725                           ; Vector 50 : U2RX
 15726  00006C  177F               	dw	_Default_ISR shr (0+2)
 15727                           
 15728                           ; Vector 51 : U2TX
 15729  00006E  177F               	dw	_Default_ISR shr (0+2)
 15730                           
 15731                           ; Vector 52 : U2E
 15732  000070  177F               	dw	_Default_ISR shr (0+2)
 15733                           
 15734                           ; Vector 53 : U2
 15735  000072  177F               	dw	_Default_ISR shr (0+2)
 15736                           
 15737                           ; Vector 54 : TMR3
 15738  000074  177F               	dw	_Default_ISR shr (0+2)
 15739                           
 15740                           ; Vector 55 : TMR3G
 15741  000076  177F               	dw	_Default_ISR shr (0+2)
 15742                           
 15743                           ; Vector 56 : TMR4
 15744  000078  177F               	dw	_Default_ISR shr (0+2)
 15745                           
 15746                           ; Vector 57 : CCP2
 15747  00007A  177F               	dw	_Default_ISR shr (0+2)
 15748                           
 15749                           ; Vector 58 : Undefined
 15750  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15751                           
 15752                           ; Vector 59 : CWG2
 15753  00007E  177F               	dw	_Default_ISR shr (0+2)
 15754                           
 15755                           ; Vector 60 : CLC2
 15756  000080  177F               	dw	_Default_ISR shr (0+2)
 15757                           
 15758                           ; Vector 61 : INT2
 15759  000082  177F               	dw	_Default_ISR shr (0+2)
 15760                           
 15761                           ; Vector 62 : Undefined
 15762  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15763                           
 15764                           ; Vector 63 : Undefined
 15765  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15766                           
 15767                           ; Vector 64 : Undefined
 15768  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15769                           
 15770                           ; Vector 65 : Undefined
 15771  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15772                           
 15773                           ; Vector 66 : Undefined
 15774  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15775                           
 15776                           ; Vector 67 : Undefined
 15777  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15778                           
 15779                           ; Vector 68 : Undefined
 15780  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15781                           
 15782                           ; Vector 69 : Undefined
 15783  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15784                           
 15785                           ; Vector 70 : TMR5
 15786  000094  1586               	dw	_TMR5_ISR shr (0+2)
 15787                           
 15788                           ; Vector 71 : TMR5G
 15789  000096  177F               	dw	_Default_ISR shr (0+2)
 15790                           
 15791                           ; Vector 72 : TMR6
 15792  000098  166B               	dw	_TMR6_ISR shr (0+2)
 15793                           
 15794                           ; Vector 73 : CCP3
 15795  00009A  177F               	dw	_Default_ISR shr (0+2)
 15796                           
 15797                           ; Vector 74 : CWG3
 15798  00009C  177F               	dw	_Default_ISR shr (0+2)
 15799                           
 15800                           ; Vector 75 : CLC3
 15801  00009E  177F               	dw	_Default_ISR shr (0+2)
 15802                           
 15803                           ; Vector 76 : Undefined
 15804  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15805                           
 15806                           ; Vector 77 : Undefined
 15807  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15808                           
 15809                           ; Vector 78 : Undefined
 15810  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15811                           
 15812                           ; Vector 79 : Undefined
 15813  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15814                           
 15815                           ; Vector 80 : CCP4
 15816  0000A8  177F               	dw	_Default_ISR shr (0+2)
 15817                           
 15818                           ; Vector 81 : CLC4
 15819  0000AA  177F               	dw	_Default_ISR shr (0+2)
 15820  0000AC                     ivt0x8_undefint:
 15821                           	callstack 0
 15822  0000AC  00FF               	reset	
 15823                           
 15824                           	psect	text96
 15825  000000                     __ptext96:
 15826                           	callstack 0
 15827                           
 15828                           	psect	rparam
 15829  0000                     
 15830                           	psect	idloc
 15831                           
 15832                           ;Config register IDLOC0 @ 0x200000
 15833                           ;	unspecified, using default values
 15834  200000                     	org	2097152
 15835  200000  0FFF               	dw	4095
 15836                           
 15837                           ;Config register IDLOC1 @ 0x200002
 15838                           ;	unspecified, using default values
 15839  200002                     	org	2097154
 15840  200002  0FFF               	dw	4095
 15841                           
 15842                           ;Config register IDLOC2 @ 0x200004
 15843                           ;	unspecified, using default values
 15844  200004                     	org	2097156
 15845  200004  0FFF               	dw	4095
 15846                           
 15847                           ;Config register IDLOC3 @ 0x200006
 15848                           ;	unspecified, using default values
 15849  200006                     	org	2097158
 15850  200006  0FFF               	dw	4095
 15851                           
 15852                           ;Config register IDLOC4 @ 0x200008
 15853                           ;	unspecified, using default values
 15854  200008                     	org	2097160
 15855  200008  0FFF               	dw	4095
 15856                           
 15857                           ;Config register IDLOC5 @ 0x20000A
 15858                           ;	unspecified, using default values
 15859  20000A                     	org	2097162
 15860  20000A  0FFF               	dw	4095
 15861                           
 15862                           ;Config register IDLOC6 @ 0x20000C
 15863                           ;	unspecified, using default values
 15864  20000C                     	org	2097164
 15865  20000C  0FFF               	dw	4095
 15866                           
 15867                           ;Config register IDLOC7 @ 0x20000E
 15868                           ;	unspecified, using default values
 15869  20000E                     	org	2097166
 15870  20000E  0FFF               	dw	4095
 15871                           
 15872                           	psect	config
 15873                           
 15874                           ;Config register CONFIG1L @ 0x300000
 15875                           ;	External Oscillator Selection
 15876                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 15877                           ;	Reset Oscillator Selection
 15878                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15879  300000                     	org	3145728
 15880  300000  AF                 	db	175
 15881                           
 15882                           ;Config register CONFIG1H @ 0x300001
 15883                           ;	Clock out Enable bit
 15884                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 15885                           ;	PRLOCKED One-Way Set Enable bit
 15886                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 15887                           ;	Clock Switch Enable bit
 15888                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15889                           ;	Fail-Safe Clock Monitor Enable bit
 15890                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 15891  300001                     	org	3145729
 15892  300001  FF                 	db	255
 15893                           
 15894                           ;Config register CONFIG2L @ 0x300002
 15895                           ;	MCLR Enable bit
 15896                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 15897                           ;	Power-up timer selection bits
 15898                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 15899                           ;	Multi-vector enable bit
 15900                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 15901                           ;	IVTLOCK bit One-way set enable bit
 15902                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 15903                           ;	Low Power BOR Enable bit
 15904                           ;	LPBOREN = OFF, ULPBOR disabled
 15905                           ;	Brown-out Reset Enable bits
 15906                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 15907  300002                     	org	3145730
 15908  300002  FF                 	db	255
 15909                           
 15910                           ;Config register CONFIG2H @ 0x300003
 15911                           ;	Brown-out Reset Voltage Selection bits
 15912                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 15913                           ;	ZCD Disable bit
 15914                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 15915                           ;	PPSLOCK bit One-Way Set Enable bit
 15916                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 15917                           ;	Stack Full/Underflow Reset Enable bit
 15918                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15919                           ;	Debugger Enable bit
 15920                           ;	DEBUG = OFF, Background debugger disabled
 15921                           ;	Extended Instruction Set Enable bit
 15922                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 15923  300003                     	org	3145731
 15924  300003  FF                 	db	255
 15925                           
 15926                           ;Config register CONFIG3L @ 0x300004
 15927                           ;	WDT Period selection bits
 15928                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15929                           ;	WDT operating mode
 15930                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 15931  300004                     	org	3145732
 15932  300004  9F                 	db	159
 15933                           
 15934                           ;Config register CONFIG3H @ 0x300005
 15935                           ;	WDT Window Select bits
 15936                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15937                           ;	WDT input clock selector
 15938                           ;	WDTCCS = SC, Software Control
 15939  300005                     	org	3145733
 15940  300005  FF                 	db	255
 15941                           
 15942                           ;Config register CONFIG4L @ 0x300006
 15943                           ;	Boot Block Size selection bits
 15944                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 15945                           ;	Boot Block enable bit
 15946                           ;	BBEN = OFF, Boot block disabled
 15947                           ;	Storage Area Flash enable bit
 15948                           ;	SAFEN = OFF, SAF disabled
 15949                           ;	Application Block write protection bit
 15950                           ;	WRTAPP = OFF, Application Block not write protected
 15951  300006                     	org	3145734
 15952  300006  FF                 	db	255
 15953                           
 15954                           ;Config register CONFIG4H @ 0x300007
 15955                           ;	Boot Block Write Protection bit
 15956                           ;	WRTB = OFF, Boot Block not write-protected
 15957                           ;	Configuration Register Write Protection bit
 15958                           ;	WRTC = OFF, Configuration registers not write-protected
 15959                           ;	Data EEPROM Write Protection bit
 15960                           ;	WRTD = OFF, Data EEPROM not write-protected
 15961                           ;	SAF Write protection bit
 15962                           ;	WRTSAF = OFF, SAF not Write Protected
 15963                           ;	Low Voltage Programming Enable bit
 15964                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 15965  300007                     	org	3145735
 15966  300007  DF                 	db	223
 15967                           
 15968                           ;Config register CONFIG5L @ 0x300008
 15969                           ;	PFM and Data EEPROM Code Protection bit
 15970                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 15971  300008                     	org	3145736
 15972  300008  FF                 	db	255
 15973                           
 15974                           ;Config register CONFIG5H @ 0x300009
 15975                           ;	unspecified, using default values
 15976  300009                     	org	3145737
 15977  300009  FF                 	db	255
 15978                           tosu	equ	0x3FFF
 15979                           tosh	equ	0x3FFE
 15980                           tosl	equ	0x3FFD
 15981                           stkptr	equ	0x3FFC
 15982                           pclatu	equ	0x3FFB
 15983                           pclath	equ	0x3FFA
 15984                           pcl	equ	0x3FF9
 15985                           tblptru	equ	0x3FF8
 15986                           tblptrh	equ	0x3FF7
 15987                           tblptrl	equ	0x3FF6
 15988                           tablat	equ	0x3FF5
 15989                           prodh	equ	0x3FF4
 15990                           prodl	equ	0x3FF3
 15991                           indf0	equ	0x3FEF
 15992                           postinc0	equ	0x3FEE
 15993                           postdec0	equ	0x3FED
 15994                           preinc0	equ	0x3FEC
 15995                           plusw0	equ	0x3FEB
 15996                           fsr0h	equ	0x3FEA
 15997                           fsr0l	equ	0x3FE9
 15998                           wreg	equ	0x3FE8
 15999                           indf1	equ	0x3FE7
 16000                           postinc1	equ	0x3FE6
 16001                           postdec1	equ	0x3FE5
 16002                           preinc1	equ	0x3FE4
 16003                           plusw1	equ	0x3FE3
 16004                           fsr1h	equ	0x3FE2
 16005                           fsr1l	equ	0x3FE1
 16006                           bsr	equ	0x3FE0
 16007                           indf2	equ	0x3FDF
 16008                           postinc2	equ	0x3FDE
 16009                           postdec2	equ	0x3FDD
 16010                           preinc2	equ	0x3FDC
 16011                           plusw2	equ	0x3FDB
 16012                           fsr2h	equ	0x3FDA
 16013                           fsr2l	equ	0x3FD9
 16014                           status	equ	0x3FD8

Data Sizes:
    Strings     220
    Constant    33
    Data        25
    BSS         738
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     56      75
    BANK0           160    121     160
    BANK1           256      0     255
    BANK2           256     24     219
    BANK3           256      0     255
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    fh_ps@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_po@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1836$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_27(CODE[4]), STR_22(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_27(CODE[4]), STR_22(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 79
		 -> vfpfcnvrt@ct(BANK0[3]), STR_10(CODE[21]), NULL(NULL[0]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[79]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 79
		 -> vfpfcnvrt@ct(BANK0[3]), STR_10(CODE[21]), NULL(NULL[0]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[79]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_11(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK2[131]), STR_5(CODE[18]), STR_4(CODE[24]), STR_3(CODE[25]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 79
		 -> STR_6(CODE[79]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), dbuf(BANK1[80]), STR_11(CODE[3]), cli_read@i(BANK0[1]), 
		 -> cmdm(CODE[28]), cli_ctx(BANK2[131]), STR_5(CODE[18]), STR_4(CODE[24]), 
		 -> STR_3(CODE[25]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 79
		 -> STR_10(CODE[21]), STR_6(CODE[79]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 79
		 -> STR_10(CODE[21]), STR_6(CODE[79]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 79
		 -> STR_10(CODE[21]), STR_6(CODE[79]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_10(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    S2948$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2948$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(1) Largest target is 1
		 -> cli_read@i(BANK0[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1836_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    S1836_t_cmd$cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    fh_pr@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    build_time	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    S1843_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _printf->_vfprintf
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    _linux_getc->_UART1_Read
    __cli_interpret_cmd->_fh_po
    __cli_interpret_cmd->_fh_pr
    __cli_interpret_cmd->_fh_ps
    _strncmp->_strlen
    _fh_ps->_puts
    _fh_pr->_puts
    _fh_po->_puts
    _puts->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _cli_read->__cli_interpret_cmd

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _scmd_init->_cli_init
    _cli_init->_sprintf

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  187537
                                            117 BANK0      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                             _printf
                          _scmd_init
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0   78149
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4   78149
                                             20 BANK2      4     0      4
                             _memset
                               _puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7   69423
                                              0 BANK2     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21     4     17   68987
                                            115 BANK0      2     2      0
                                              0 BANK2     17     0     17
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     1      5   68693
                                             55 COMRAM     1     1      0
                                            110 BANK0      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           44    39      5   67481
                                             79 BANK0     31    26      5
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    9760
                                              0 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     536
                                             20 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     554
                                             20 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    4144
                                             31 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              62    55      7   41977
                                             17 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              6     4      2    1318
                                             26 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     649
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1248
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    7900
                                             40 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     890
                                             45 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     482
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     686
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    5410
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    4742
                                             20 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     196
                                             20 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    5194
                                             34 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1220
                                             46 COMRAM     8     0      8
                                             13 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     912
                                             20 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3620
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     818
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     842
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                10     8      2    2172
                                             27 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     321
                                             20 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     437
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     698
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      42
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   31633
                                             49 COMRAM     5     3      2
                                             10 BANK0      3     3      0
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2020
                                             20 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    6750
                                             43 COMRAM     3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (2) _linux_getc                                           2     1      1     202
                                             21 COMRAM     2     1      1
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Read                                           1     1      0      54
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  14    12      2   21847
                                             45 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                   Absolute function *
                              _fh_po *
                              _fh_pr *
                              _fh_ps *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             12     6      6    1404
                                             24 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     710
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _fh_ps                                                2     0      2    6284
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pr                                                2     0      2    6326
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_po                                                2     0      2    6363
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    6284
                                             40 COMRAM     3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                9     5      4    3148
                                             31 COMRAM     9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    2284
                                             22 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0     126
                                             21 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      84
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     884
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1550
                    _ADCC_Initialize
                    _DAC1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     740
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     254
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     254
                                             23 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      48
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     254
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      42
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            2     2      0       0
                                              5 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (13) _Adc_Isr                                             1     1      0       0
                                              4 COMRAM     1     1      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (14) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Led_Blink                                           1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   2     2      0       0
                                             12 COMRAM     2     2      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            2     2      0     319
                                             18 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (13) _Timers_Isr                                          4     4      0      90
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     229
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_po *
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_pr *
         _puts
       _fh_ps *
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _scmd_init
     _cli_init
       _memset
       _puts
       _sprintf
         _vfprintf

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0     118        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhh    22A      0       0      89        0.0%
BITBIGSFRllllll    181      0       0     116        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     18      DB       9       85.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBIGSFRllhhhh     CB      0       0      85        0.0%
BITBIGSFRllhhhh     A1      0       0      82        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     79      A0       5      100.0%
BITBIGSFRllhhhh     5F      0       0      78        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     38      4B       1       78.9%
BITBIGSFRllhhhl     49      0       0      91        0.0%
BITBIGSFRllhhhh     3F      0       0      80        0.0%
BITBIGSFRllllll     33      0       0     104        0.0%
BITBIGSFRhhhhh      28      0       0      68        0.0%
BITBIGSFRllhhhh     23      0       0      75        0.0%
BITBIGSFRllllll     16      0       0     107        0.0%
BITBIGSFRllllll     15      0       0     100        0.0%
BITBIGSFRllllll     11      0       0     106        0.0%
BITBIGSFRllllll      F      0       0     101        0.0%
BITBIGSFRllhhhh      C      0       0      74        0.0%
BITBIGSFRlllllh      B      0       0      99        0.0%
BITBIGSFRllhhl       B      0       0      92        0.0%
BITBIGSFRllhhhh      A      0       0      73        0.0%
BITBIGSFRllhhhh      8      0       0      77        0.0%
BITBIGSFRllllll      7      0       0     113        0.0%
BITBIGSFRllllll      7      0       0     110        0.0%
BITBIGSFRhhlh        6      0       0      70        0.0%
BITBIGSFRllhhhh      5      0       0      90        0.0%
BITBIGSFRllllhl      5      0       0      98        0.0%
BITBIGSFRlllhl       5      0       0      96        0.0%
BITBIGSFRllhll       5      0       0      94        0.0%
BITBIGSFRllllll      4      0       0     111        0.0%
BITBIGSFRllllll      4      0       0     114        0.0%
BITBIGSFRllhlh       4      0       0      93        0.0%
BITBIGSFRlllhh       4      0       0      95        0.0%
BITBIGSFRllllhh      4      0       0      97        0.0%
BITBIGSFRllllll      3      0       0     108        0.0%
BITBIGSFRllllll      3      0       0     102        0.0%
BITBIGSFRllhhhh      2      0       0      86        0.0%
BITBIGSFRllhhhh      2      0       0      87        0.0%
BITBIGSFRhhll        2      0       0      71        0.0%
BITBIGSFRhll         2      0       0      72        0.0%
BITBIGSFRllhhhh      1      0       0      76        0.0%
BITBIGSFRllhhhh      1      0       0      88        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      83        0.0%
BITBIGSFRllllll      1      0       0     115        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRllllll      1      0       0     112        0.0%
BITBIGSFRllllll      1      0       0     109        0.0%
BITBIGSFRllhhhh      1      0       0      79        0.0%
BITBIGSFRllllll      1      0       0     105        0.0%
BITBIGSFRllhhhh      1      0       0      81        0.0%
BITBIGSFRllllll      1      0       0     103        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C4     117        0.0%
DATA                 0      0     3C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 10 09:42:04 2022

                                ___fldiv@aexp 002D                                  ___fldiv@bexp 002C  
            __end_of_TMR5_SetInterruptHandler 5DBC                                  ___fldiv@sign 0025  
                                ?_display_led 0001                                  ___awdiv@sign 001A  
                         ___wmul@multiplicand 0017                             ??_TMR5_WriteTimer 0011  
                             _DAC1_Initialize 5DCA                                           l195 5C78  
                                         l626 58D8                                           l993 4D52  
                                         _GIE 01FE97                                           l999 4D58  
                                         _ana 0039                                           _pad 50BE  
                                         _res 0043                                  ___awmod@sign 001A  
                             _TMR2_Initialize 5C26                                           tosl 003FFD  
                                         wreg 003FE8                                _DAC1_SetOutput 5DE0  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0062  
                ?_ADCC_SetADIInterruptHandler 0015                            _UART1_Transmit_ISR 5AD8  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                        __end_of_DAC1_GetOutput 5DF0  
                                ___fltol@exp1 001E                                          l1004 4D5E  
                                        l1014 4D6A                                          l1024 4D76  
                                        l1009 4D64                                          l1130 3E40  
                                        l1034 4D82                                          l2010 241E  
                                        l1019 4D70                                          l1044 4D8E  
                                        l1029 4D7C                                          l1054 4D9A  
                                        l1039 4D88                                          l1144 435C  
                                        l1049 4D94                                          l2203 4106  
                                        l2038 2782                                          l2074 4608  
                                        l1509 49F0                                          l2093 3E60  
                                        l2191 4952                                          l2095 3E68  
                                        l1840 397E                                          l2289 592E  
                                        l1906 47A6                                          l1682 4AD8  
                                        l1828 3914                                          l1692 4FFA  
                                        l1773 35D8                                          l1774 35B6  
                                        l1839 3982                                          l1858 31C6  
                                        l1875 3462                                          l1867 33DC  
                                        l1868 33D8                                          l1789 36AA  
                                        l1973 50EC                                          l1798 3710  
                                        ?_pad 0029                                          l1799 370C  
                                        l1899 4728                                          l9021 361E  
                                        l9013 35FC                                          l9111 5466  
                                        l9023 3622                                          l9031 3634  
                                        l9041 369A                                          l9115 547C  
                                        l9203 38EC                                          l9221 3948  
                                        l9215 392A                                          l9143 37D2  
                                        l9241 39C6                                          l9209 3912  
                                        l9305 31E4                                          l9049 36CE  
                                        l9065 36EE                                          l9171 3846  
                                        l9163 3812                                          l9139 37CE  
                                        l9059 36E4                                          l9421 5330  
                                        l9245 39EA                                          l9501 4990  
                                        l9093 377C                                          l9085 3756  
                                        l9423 5338                                          l9415 531A  
                                        l9255 3A20                                          l9159 380E  
                                        l9441 5370                                          l9433 5358  
                                        l9409 530A                                          l9257 3A22  
                                        l9249 3A14                                          l9185 3874  
                                        l9177 385C                                          l9505 49C4  
                                        l9353 33A2                                          l9281 3186  
                                        l9097 3784                                          l9195 38C4  
                                        l9515 4A28                                          l9347 3384  
                                        l9523 5A98                                          l9099 3786  
                                        l8901 5674                                          l9437 5362  
                                        l9461 541A                                          l9453 5400  
                                        l9509 49DA                                          l9373 3420  
                                        l9277 3172                                          l9533 4CB2  
                                        l9613 50D6                                          l9605 4FE4  
                                        l9463 5422                                          l9295 31B2  
                                        l9279 3176                                          l9623 510E  
                                        l9473 5444                                          l9457 540C  
                                        l9377 343E                                          l9297 31B6  
                                        l9561 4D20                                          l9553 4D0C  
                                        l9617 50E4                                          l9707 57FC  
                                        l8923 34C6                                          l9643 4C4A  
                                        l9627 513A                                          l9619 50F6  
                                        l9803 22F4                                          l8861 58C4  
                                        l9717 41C8                                          l9477 5452  
                                        l9469 543A                                          l9493 526E  
                                        l9485 521C                                          l9389 3480  
                                        l9549 4CFC                                          l9813 23B4  
                                        l9741 2148                                          l9719 41D6  
                                        l8943 350A                                          l8919 34C2  
                                        l9567 4D3C                                          l9559 4D14  
                                        l9639 4C40                                          l9655 54D4  
                                        l9911 277A                                          l9807 232C  
                                        l9489 5250                                          l9649 4C8A  
                                        l9673 406C                                          l9913 279C  
                                        l9905 2758                                          l9825 2406  
                                        l9809 237A                                          l9753 2174  
                                        l9761 218A                                          l9577 4A52  
                                        l8875 58F8                                          l8955 352E  
                                        l8947 350E                                          l9691 418C  
                                        l9683 4128                                          l9843 2476  
                                        l9835 242E                                          l9771 21E8  
                                        l9579 4A66                                          l8877 58FA  
                                        l8893 4EB2                                          l9925 281C  
                                        l9861 24BC                                          l9845 247A  
                                        l9829 2428                                          l9773 2204  
                                        l9589 4AC2                                          l9597 4F88  
                                        l8887 4E1E                                          l9687 415E  
                                        l9871 24F6                                          l9855 2498  
                                        l9775 220E                                          l9599 4F9C  
                                        STR_1 20C9                                          STR_2 20D5  
                                        l8985 356A                                          l9937 284A  
                                        l9945 286A                                          l9953 288E  
                                        l9961 2924                                          l9865 24CC  
                                        STR_3 2071                                          STR_4 208A  
                                        l8899 5670                                          l9779 2234  
                                        STR_5 20B7                                          STR_6 2022  
                                        l8997 35C4                                          l9973 2966  
                                        l9893 2694                                          l9789 2292  
                                        l9797 22B0                                          STR_7 20F8  
                                        STR_8 20FB                                          l8999 35C8  
                                        l9991 29BC                                          l9879 25EA  
                                        STR_9 20F5                                          l9989 29B2  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _LATF 003FBF  
                                        _T2PR 003FAB                                          _T6PR 003F93  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        u9520 4E16                                          u9540 4E5E  
                                        u9550 569E                                          u9710 35E0  
                                        _PLLR 01CEE0                                          u9660 358C  
                                        u9557 5690                                          u9670 359C  
                                        u9920 3762                                          u9840 36F2  
                                        u9680 359E                                          u9860 3706  
                                        u9960 54B2                                          u9980 5A44  
                                        u9990 5A46                                          u9967 54A4  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                          _WPUF 003A91  
                            __end_of_ADCC_ISR 57C6                                   main@mode_sw 00D7  
                         ?_UART1_Transmit_ISR 0001                                          _dbuf 0198  
                                        _cmdm 2006                                          _atoi 482A  
                                        _main 3A2A                                          _ival 0194  
                                        _mode 00FB                               __end_of_Adc_Isr 59AC  
                                        _prec 00F9                                          _nout 00F5  
                                        pad@i 0030                                          pad@p 002D  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0032  
                                        fsr2l 003FD9                                          _stoa 45A2  
                                        _puts 5938                                          _vval 00D9  
                                        _utoa 3E44                                 ___fpclassifyf 4BC8  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 003F  
                             ___fldiv@new_exp 0026                               _PWM5_Initialize 5CF8  
               ??_UART1_SetTxInterruptHandler 0018                             _UART1_rx_vect_isr 5884  
                                ___param_bank 000000                                   ?_UART1_Read 0001  
                          ?_UART1_rx_vect_isr 0001                                         ??_pad 002F  
                        ??_UART1_Transmit_ISR 000B                 __end_of_OSCILLATOR_Initialize 5C7E  
                                       l10001 2A10                                         l10011 2A3C  
                                       l10101 3F8C                                         l10121 483E  
                                       l10025 2A8C                                         l10131 48C4  
                                       l10203 2C14                                         l10125 488A  
                                       l10117 483C                                         l10045 45CC  
                                       l10221 2CFC                                         l10127 4892  
                                       l10063 4654                                         l10055 461E  
                                       l10215 2CDC                                         l10137 48FE  
                                       l10129 4896                                         l10073 46B4  
                                       l10241 2E2E                                         l10233 2DBE  
                                       l10217 2CF4                                         l10161 2B10  
                                       l10305 3110                                         l10411 454A  
                                       l10059 4636                                         l10091 3EA0  
                                       l10171 2B22                                         l10163 2B1A  
                                       l10331 5532                                         l10413 457C  
                                       l10405 450E                                         l10077 46CC  
                                       l10069 469A                                         l10245 2E58  
                                       l10333 5554                                         l10271 2FA6  
                                       l10255 2ED8                                         l10263 2F28  
                                       l10183 2B34                                         l10175 2B26  
                                       l10167 2B1E                                         l10159 2B0E  
                                       l10281 300E                                         l10185 2B7A  
                                       l10419 4598                                         l10179 2B2A  
                                       l10613 3CC4                                         l10365 5836  
                                       l10197 2BF4                                         l10607 3CA4  
                                       l10295 30F2                                         l10199 2C0C  
                                       l10713 4756                                         l10617 3DC2  
                                       l10289 30B8                                         l10715 475C  
                                       l10707 4738                                         l10619 3DC4  
                                       l10299 30FE                                         l10811 3BF2  
                                       l10803 3B06                                         l10725 47CC  
                                       l10717 4768                                         l10653 4DAC  
                                       l10821 3C0A                                         l10805 3B0C  
                                       l10743 4818                                         l10727 47D8  
                                       l10719 478E                                         l10591 5B50  
                                       l10399 44A2                                         l10671 4316  
                                       l10815 3BFC                                         l10825 3C14  
                                       l10841 3C50                                         l10675 4340  
                                       l10819 3C06                                         l10685 43CC  
                                       l10693 442A                                         l10829 3C18  
                                       l10781 3AB4                                         l10855 3C78  
                                       l10839 3C2C                                         l10791 3AE2  
                                       l10775 3A9A                                         l10785 3AC8  
                                       l10769 3A7E                                         l10779 3AAE  
                                       l10797 3AF4                                         l10789 3ADC  
                                       l10799 3AFA                                 ___fltol@sign1 001D  
                                       _ADACT 003EFE                                         _ADCAP 003EF5  
                                       ?_atoi 001C                               __end_of___fladd 37A2  
                                       ?_main 0001                                         _ADCLK 003EFF  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 3A2A                                         _ADREF 003EFD  
                             __end_of___awdiv 537A                               __end_of___flneg 5AAA  
                                       STR_10 20A2                                         STR_11 20C6  
                                       STR_20 20F2                                         STR_12 20DE  
                                       STR_13 20E6                                         STR_22 20F2  
                                       STR_16 20E2                                         STR_25 20EE  
                                       STR_17 20EA                                         STR_27 20EE  
                             __end_of___awmod 545C                                         _ADRPT 003EEC  
                             __end_of___flmul 3496                               __end_of___flsub 5740  
                             __end_of___fltol 4D4E                                         ?_stoa 0020  
                                       ?_puts 0029                                         ?_utoa 0060  
                                       u11000 5A74                                         u10200 39D4  
                                       u11010 5A76                                         u10210 39F8  
                                       u11100 4268                                         u10300 31D2  
                                       u11110 429A                                         u11030 57F8  
                                       u11120 42C4                                         u10160 3978  
                                       u11130 42F0                                         u11050 4200  
                                       u11115 4294                                         u11107 425A  
                                       u10500 5426                                         u10340 33D2  
                                       u11300 2446                                         u11117 4286  
                                       u11070 4230                                         u11127 42B6  
                                       u10440 533C                                         u11240 23DC  
                                       u11160 2164                                         u11137 42E2  
                                       u11057 41F2                                         u12210 3E00  
                                       u12050 5D56                                         u11410 2684  
                             __end_of___lodiv 4AFA                                         u10380 342E  
                                       u10620 4CA0                                         u11340 2494  
                             ___awdiv@divisor 0017                                         u11077 4222  
                                       u10550 526A                                         u10390 344C  
                                       u10630 4CD0                                         u11270 2414  
                                       u10710 4A6A                                         u12320 47E2  
                                       u12208 3DAE                                         u10800 4C06  
                                       u12400 3AD4                                         u12145 5774  
                                       u12146 5776                                         u11610 2A84  
                                       u11530 2948                                         _U1P1H 003DED  
                                       u10635 4CC6                                         u10900 403A  
                                       u10740 4FA0                                         _U1P2H 003DEF  
                                       u12181 3CBE                                         u10805 4BFC  
                                       u11621 45AC                                         u10670 4D26  
                                       u10910 405A                                         u11710 46E0  
                                       _U1P3H 003DF1                                         _U1P1L 003DEC  
                                       _U1P2L 003DEE                                         _T2CON 003FAC  
                                       u10905 4030                                         u11810 4930  
                                       u10850 4C82                                         u11730 3E56  
                                       _U1P3L 003DF0                                         u10691 4A32  
                                       u10860 4C84                                         u10845 4C64  
                                       u10950 40EC                                         u10870 551A  
                                       u11590 2A26                                         u11670 464A  
                                       u11910 2D36                                         u10935 4084  
                                       u10936 408A                                         u11680 467E  
                                       u11760 3FB8                                         u10937 4098  
                                       u11761 3FB6                                         u10970 4146  
                                       u11770 3FC6                                         u10955 40E2  
                                       u11780 3FCA                                         u10877 550C  
                                       u10975 413C                                         u11687 4670  
                                       _T5CLK 003F9D                                         u11880 2C4E  
                             __end_of___lomod 501C                                         u11980 2F7E  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T6CON 003F94                                         _T6HLT 003F95  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       _U1TXB 003DEA                        __end_of_DAC1_SetOutput 5DEA  
                                       _T6TMR 003F92                                         i2l464 59D8  
                                       i2l650 5B00                                         _T6RST 003F97  
                                       i2l731 5BB2                           ??_UART1_rx_vect_isr 000D  
                             ___awdiv@counter 0019                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00B1                                  vfpfcnvrt@llu 00B8  
                                       _TMR5H 003F99                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                         _TRISF 003FC7  
                                 _Default_ISR 5DFC                               _PWM6_Initialize 5CE0  
                   ?_TMR6_SetInterruptHandler 0015                             _UART1_tx_vect_isr 5844  
                            __end_of_TMR5_ISR 5666                              __end_of_TMR6_ISR 59E6  
                                       _buff1 0300                                         _fh_po 5CB0  
                                       _fh_pr 5B54                                         _fh_ps 5CC8  
                                       _flags 003D                                         _fputc 4E06  
                                       _fputs 545C                               __end_of_isdigit 5A7C  
                             ?_DAC1_GetOutput 0001                            ?_UART1_tx_vect_isr 0001  
                                       atoi@n 0024                                         pad@fp 0029  
                                       atoi@s 001C                                         _width 00F7  
                                       _putch 5DD6                               __end_of_isspace 5804  
                             __end_of_isupper 5A4C                                         pclath 003FFA  
                                       pclatu 003FFB                                         tablat 003FF5  
                                       plusw1 003FE3                                         plusw2 003FDB  
                                       stoa@i 002C                                         stoa@l 0034  
                                       stoa@p 0032                                         stoa@s 0022  
                                       stoa@w 002E                                         puts@s 0029  
                                       utoa@d 0062                                         utoa@i 007E  
                                       utoa@n 0076                                         utoa@p 0072  
                                       utoa@w 0074                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 5D76                   _UART1_SetRxInterruptHandler 5D68  
                             __end_of_sprintf 5616                                ?___fpclassifyf 0015  
                             __end_of_tolower 5938                               __end_of_strncmp 4300  
                            ___lodiv@dividend 0015      __end_of_UART1_DefaultFramingErrorHandler 5E02  
          ??_UART1_DefaultFramingErrorHandler 000D             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5E00                           ??_UART1_tx_vect_isr 000B  
                   __end_of_UART1_rx_vect_isr 58C2                ??_TMR6_DefaultInterruptHandler 0008  
                             _TMR5_Initialize 56B2                               __initialization 5154  
                                __end_of_cmdm 2022                                  __end_of_atoi 495C  
                                __end_of_main 3C80                       __end_of_DAC1_Initialize 5DD6  
                                __end_of_stoa 46EA                                  __end_of_puts 5972  
                                __end_of_utoa 3FF4                   ??_UART1_DefaultErrorHandler 000D  
                     __end_of_TMR2_Initialize 5C44                                  ?_UART1_Write 0001  
                                      ??_atoi 001E                                        ??_main 00D5  
                    _TMR5_SetInterruptHandler 5DAE                                        ??_stoa 0024  
                                      ??_puts 002B                                        ??_utoa 006A  
                               __activetblptr 000003                               ?_DAC1_SetOutput 0001  
                   __end_of_UART1_tx_vect_isr 5882                              ___lodiv@quotient 0025  
                             _TMR6_Initialize 5AAA                              _UART1_Initialize 4EBA  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      ?_fh_po 002C                                        ?_fh_pr 002C  
                                      ?_fh_ps 002C                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                   ??_Adc_Isr 0005                                        ?_fputc 0017  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0020                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0015  
                                      _ADUTHL 003EE0                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _ANSELF 003A90  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                          __cli_interpret_cmd 3C80                                        _RC3PPS 003A13  
                                      _RD2PPS 003A1A                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _RC6PPS 003A16                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      _ODCONF 003A92                                        _RF2PPS 003A2A  
                     __end_of_PWM5_Initialize 5D10                                        i2l6039 5C22  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        _INLVLF 003A94  
                                      i2l6433 55B0                                        i2l6337 5AFC  
                                      i2l6429 557E                                        i2l6357 50B8  
                                      i2l6369 599E                                        _OSCFRQ 0039DF  
                               vfpfcnvrt@done 00C2                         _UART1_SetErrorHandler 5D92  
                            __end_of___xxtofl 482A                    ??_ADCC_GetConversionResult 0003  
                         ?__cli_interpret_cmd 002E                              __end_of_cli_init 52F6  
                            __end_of_cli_read 4456                       DAC1_SetOutput@inputData 0015  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 0038  
                                      ___flge 495C                                        ___fleq 51E8  
                                   ??___fladd 001D                                        ___wmul 5B06  
                                   ??___fldiv 001D                                     ??___awdiv 0019  
                                   ??___flneg 0019                                     ??___awmod 0019  
                                      _g_cmds 01EF                                     ??___flmul 002B  
                                   ??___flsub 0037                                     ??___fltol 0019  
                                   ??___lodiv 0025                                     ??___lomod 0025  
                                      _efgtoa 2100                                        _floorf 3FF4  
                                      _memset 4456                       __end_of_PWM6_Initialize 5CF8  
                                      clear_0 519A                                        clear_1 51AC  
                                      clear_2 51B8                                        clear_3 51C4  
                                      clear_4 51D0                              ___awdiv@quotient 001B  
                             ___awmod@divisor 0017                                    _Timers_Isr 5576  
                                      isa$std 000001                               ___awmod@counter 0019  
                                      _printf 5BC0                                        pad@buf 002B  
                                      _strcpy 54C4                                     ?_ADCC_ISR 0001  
                                      _strlen 5666                               _ADCC_Initialize 537A  
                                      fputc@c 0017                                _PMD_Initialize 5BE2  
                        ??__cli_interpret_cmd 0060                                        fputs@c 0026  
                                      fputs@i 0027                                        fputs@s 0020  
                                   ??_isdigit 0017                               ___fpclassifyf@e 001D  
                             ___fpclassifyf@u 001F                               ___fpclassifyf@x 0015  
                                __mediumconst 0000                                     ??_isspace 0017  
                                      tblptrh 003FF7                                     ??_isupper 0017  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                                      stoa@cp 0030                                        stoa@fp 0020  
                            __end_of_vfprintf 5576                                        utoa@fp 0060  
    TMR5_SetInterruptHandler@InterruptHandler 0015   UART1_SetTxInterruptHandler@InterruptHandler 0015  
 UART1_SetRxInterruptHandler@InterruptHandler 0015      TMR6_SetInterruptHandler@InterruptHandler 0015  
 ADCC_SetADIInterruptHandler@InterruptHandler 0015          __end_of_UART1_SetOverrunErrorHandler 5D84  
                _UART1_SetOverrunErrorHandler 5D76                     _UART1_DefaultErrorHandler 5DF0  
                                   ??_sprintf 0039                                     ??_tolower 001D  
                                   ??_strncmp 001F                                    ___flge@ff1 002F  
                                  ___flge@ff2 0033                               ??___fpclassifyf 0019  
                     __end_of_TMR5_Initialize 56FA                                  ___xxtofl@arg 001F  
                                ___xxtofl@exp 001E                             _SYSTEM_Initialize 59E6  
                                ___xxtofl@val 0015                                    ___fleq@ff1 0015  
                                  ___fleq@ff2 0019                                    __accesstop 0060  
                     __end_of__initialization 51E2                                    ___flneg@f1 0015  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                                  ___fltol@f1 0015                               _TMR5_WriteTimer 5B9C  
                           __end_of_Led_Blink 5C62                                __pcstackCOMRAM 0001  
                                __pidataBANK0 5DF6                                  __pidataBANK1 5D10  
                         ??_SYSTEM_Initialize 001A                              ?_DAC1_Initialize 0001  
                               __end_of_fh_po 5CC8                                 __end_of_fh_pr 5B78  
                               __end_of_fh_ps 5CE0                                     ?_TMR5_ISR 0001  
                                   ?_TMR6_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 4EBA                                 __end_of_fputs 54C4  
                           ??_SPI1_Initialize 0015                                 __end_of_putch 5DE0  
                            ?_TMR2_Initialize 0001                       __end_of_TMR6_Initialize 5AD8  
                      __end_of_PMD_Initialize 5C04                                    ??_ADCC_ISR 0006  
                       __end_of_TMR6_CallBack 5B9C                            _spi1_configuration 2001  
                       TMR6_ISR@CountCallBack 0041                     _UART1_FramingErrorHandler 00E6  
                                     ??_fh_po 002E                                       ??_fh_pr 002E  
                                     ??_fh_ps 002E                                       ??_fputc 001B  
                   __end_of_SYSTEM_Initialize 5A1C                                       ??_fputs 0024  
                             linux_putc@a_len 002E                                       ??_putch 0016  
                                  __pbssBANK0 00D9                                    __pbssBANK1 0100  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
               ?_UART1_SetOverrunErrorHandler 0015                        ?_UART1_SetErrorHandler 0015  
                            ?_PWM5_Initialize 0001                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                            linux_getc@a_data 0016                                cli_init@a_cmds 02D9  
                                     ?___flge 002F                                       ?___fleq 0015  
                                ??_UART1_Read 0015                                       ?___wmul 0015  
            __end_of_TMR6_SetInterruptHandler 5DAE                       __end_of_ADCC_Initialize 53EC  
                                  ??_TMR5_ISR 0013                                    ??_TMR6_ISR 0009  
                                     ?_efgtoa 0071                                       _ADFLTRH 003EE7  
                                     ?_floorf 002E                                       _ADFLTRL 003EE6  
                                     ?_memset 0015                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                                 ?_Timers_Isr 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 02C3  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 501C  
                                     ?_strcpy 0015                                       ?_strlen 0015  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                            ??_DAC1_GetOutput 0015                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0015                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _IVTLOCK 003FD4  
                                     _SPI1CLK 003D1C                                     ?_cli_init 02D7  
                                   ?_cli_read 0032                                       _SPI1RXB 003D10  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM5CON 003F6E                                       _PWM6CON 003F6A  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                                       _SLRCONF 003A93  
                                     _Adc_Isr 5972                                    _build_date 00FF  
                         ??_UART1_Receive_ISR 000D                                    _build_time 00FE  
                            ___lomod@dividend 0015                       __end_of_TMR5_WriteTimer 5BC0  
                          __end_of_UART1_Read 5842                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0015                                       __Hparam 0000  
                                     __Lparam 0000                      __end_of_UART1_Initialize 4F6E  
                  ??_TMR5_SetInterruptHandler 0018                      __cli_interpret_cmd@a_ctx 002E  
                                     ___fladd 3496                                       ___fldiv 37A2  
                                     ___awdiv 52F6                                       ___flneg 5A7C  
                                     ___awmod 53EC                                       ___flmul 3144  
                                     ___flsub 56FA                                       ___fltol 4C94  
                                     ___lodiv 4A2C                                       ___lomod 4F6E  
                            ??_DAC1_SetOutput 0015                     __end_of_UART1_Receive_ISR 50BE  
                                   ?_vfprintf 00CE                                  __psmallconst 2000  
                                     __pcinit 5154                              ?_TMR6_Initialize 0001  
                                     __ramtop 2000                                       _cli_ctx 0240  
                                     __ptext0 3A2A                                       __ptext1 5C98  
                                     __ptext2 5272                                       __ptext3 55C8  
                                     __ptext4 5BC0                                       __ptext5 5524  
                                     __ptext6 2ACC                                       __ptext7 3E44  
                                     __ptext8 4F6E                                       __ptext9 4A2C  
                       _OSCILLATOR_Initialize 5C62                                       _isdigit 5A4C  
                                  ??___xxtofl 0019                              ___awmod@dividend 0015  
                    ??_PIN_MANAGER_Initialize 0015                                       _isspace 57C6  
                                 Timers_Isr@i 0011                                     _T5CONbits 003F9A  
                                     _isupper 5A1C                                       efgtoa@c 0077  
                                     efgtoa@d 008F                                       efgtoa@e 00A7  
                                     efgtoa@f 0073                                       efgtoa@g 00A1  
                                     efgtoa@h 0099                                       efgtoa@i 00A5  
                                     efgtoa@l 009D                                       efgtoa@m 0089  
                                     efgtoa@n 00A9                                       efgtoa@p 0093  
                                     efgtoa@t 0083                                       efgtoa@u 00AB  
                                     efgtoa@w 0096                                    ??_cli_init 0039  
                                  ??_cli_read 0034                                       atoi@neg 0022  
                                  _linux_getc 5B30                                       _sprintf 55C8  
                                     _tolower 58FE                                    _linux_putc 5D3E  
                           __end_of_scmd_init 5CB0                                       _strncmp 419E  
                        end_of_initialization 51E2                                       floorf@e 0064  
                                     floorf@m 0060                                       floorf@u 0066  
                                     floorf@x 002E                                       fputc@fp 0019  
                                     memset@c 0017                                       memset@k 001D  
                                     memset@n 0019                                       memset@s 001F  
         __end_of_UART1_SetTxInterruptHandler 5D68                   _UART1_SetTxInterruptHandler 5D5A  
                                     fputs@fp 0022                                display_led@led 0017  
              ??_UART1_SetOverrunErrorHandler 0018                             __end_of_vfpfcnvrt 3144  
                                  efgtoa@mode 0098                                    efgtoa@sign 0091  
                                   _SPI1TCNTL 003D12                                       postdec1 003FE5  
                                     postdec2 003FDD                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                                    ??_vfprintf 0038  
                           UART1_Write@txData 0015                           _UART1_RxDataHandler 5C04  
                                     strcpy@d 001D                                       strlen@a 0017  
                                     strcpy@s 001B                                       strlen@s 0015  
                                   _PORTAbits 003FCA                                     _PORTBbits 003FCB  
                    _TMR6_SetInterruptHandler 5DA0                         _TMR5_InterruptHandler 00DD  
                                 ___fladd@grs 0024           __end_of_ADCC_SetADIInterruptHandler 5DCA  
                 _ADCC_SetADIInterruptHandler 5DBC                                 ___xxtofl@sign 001D  
                                   _TRISCbits 003FC4                                   ___fldiv@grs 0028  
                                 ___fldiv@rem 0021                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 000F                       TMR5_WriteTimer@timerVal 000F  
                                 ___flmul@grs 0063                 ??_ADCC_SetADIInterruptHandler 0018  
                             _SPI1_Initialize 5C7E                  __end_of_INTERRUPT_Initialize 5784  
                                   _Led_Blink 5C44                                 ??_display_led 0015  
              ??_ADCC_DefaultInterruptHandler 0001                                __end_of___flge 4A2C  
                              __end_of___fleq 5272                                   vfpfcnvrt@ap 00B2  
                                 vfpfcnvrt@cp 00C0                                   vfpfcnvrt@ct 00CB  
                                 vfpfcnvrt@fp 00AF                                __end_of___wmul 5B30  
                              __end_of_efgtoa 2ACC                                __end_of_floorf 419E  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F526 018C  
                              __end_of_memset 45A2                     ?_ADCC_GetConversionResult 0001  
                              __end_of_printf 5BE2                                __end_of_strcpy 5524  
                              __end_of_strlen 56B2                           start_initialization 5154  
                             ___lodiv@divisor 001D                               ___lodiv@counter 002D  
        __end_of_TMR5_DefaultInterruptHandler 5E04                  _TMR5_DefaultInterruptHandler 5E02  
                                 __end_of_pad 5154                       ??_UART1_SetErrorHandler 0018  
                                 ?_linux_getc 0016                                   ?_linux_putc 002C  
                       ??_UART1_RxDataHandler 000D                                   putch@txData 0016  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0200  
                       __end_of___fpclassifyf 4C94                                 _uart1TxBuffer 0140  
                                 vfprintf@fmt 00D0                                      ??___flge 006D  
                                    ??___fleq 001D                              ??_PMD_Initialize 0015  
                                    ??___wmul 0019                                    ?_Led_Blink 0001  
                                    ??_efgtoa 0078                                   __pdataBANK0 00FE  
                                 __pdataBANK1 01E8                                      ??_floorf 0032  
                                    ??_memset 001B                                  ??_Timers_Isr 000F  
                                  memset@dest 0015                                      ??_printf 0039  
                                    ??_strcpy 0019                                      ??_strlen 0017  
                                   ___fladd@a 0019                                     ___fladd@b 0015  
                                   ___fldiv@a 0019                                     ___fldiv@b 0015  
                         __end_of_display_led 4E06                                     ___flmul@a 0027  
                                   ___flmul@b 0023                                   __pbssCOMRAM 0039  
                                   ___flsub@a 0033                                     ___flsub@b 002F  
                          _UART1_ErrorHandler 00E0                                 __pcstackBANK0 0060  
                               __pcstackBANK2 02C3                       __end_of_SPI1_Initialize 5C98  
                    _UART1_RxInterruptHandler 00F2                 ?_TMR5_DefaultInterruptHandler 0001  
                                    ?_Adc_Isr 0001                                linux_putc@data 002C  
                ?_UART1_SetRxInterruptHandler 0015                            __end_of_Timers_Isr 55C8  
                       _TMR6_InterruptHandler 00E9                                   _efgtoa$3080 007F  
                                 _efgtoa$3072 007D                                   _efgtoa$3081 0081  
                      _PIN_MANAGER_Initialize 4AFA                                 cli_init@a_ctx 02D7  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5D92  
                _UART1_SetFramingErrorHandler 5D84                                 cli_read@a_ctx 0032  
                                    ?___fladd 0015                           UART1_Read@readValue 0015  
                                    ?___fldiv 0015                                      ?___awdiv 0015  
                                    ?___flneg 0015                                      ?___awmod 0015  
                                    ?___flmul 0023                                      ?___flsub 002F  
                                    ?___fltol 0015                                      ?___lodiv 0015  
                                    ?___lomod 0015                            ??_UART1_Initialize 0018  
                            _uart1RxLastError 0045                                 _cli_read$2165 006A  
                               ??_UART1_Write 0015                                      _DAC1CON0 003E9E  
                                    _DAC1CON1 003E9C                                     _disp_tick 00FD  
                                    _ADCC_ISR 5784                               ___lomod@divisor 001D  
                                 __smallconst 2000                               ___lomod@counter 0025  
    __end_of_UART1_DefaultOverrunErrorHandler 5E00            ??_UART1_DefaultOverrunErrorHandler 000D  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 5DFE  
                                    ?_isdigit 0015                                      ?_isspace 0015  
                                    ?_isupper 0015                                      ?_sprintf 02C3  
                                    ?_tolower 001B                                      _T2CLKCON 003FAE  
                                    ?_strncmp 0019                                   _U1ERRIRbits 003DF9  
                        _INTERRUPT_Initialize 5740                                      _T6CLKCON 003F96  
                        __cli_interpret_cmd@i 0031                                ___wmul@product 0019  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0015  
                                    _LATDbits 003FBD                                      _LATEbits 003FBE  
                                   _scmd_init 5C98                                      _LATFbits 003FBF  
                                    _IPR1bits 003981                                      _PIE1bits 003991  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                   _tickCount 0180                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                   cli_read@i 006C                 ??_UART1_SetRxInterruptHandler 0018  
                                    _PIR1bits 0039A1                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      i2u611_48 50A2  
                                    i2u603_48 5B88                                      i2u631_40 59CC  
                                    i2u630_48 57A4                                      i2u630_49 57B8  
                                    _PIR4bits 0039A4                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                     _puts$3263 002B  
                                    _SPI1CON2 003D16                                      i2u607_48 5046  
                                    i2u607_49 505C                                      i2u618_40 55C6  
                                    i2u609_48 5076                                      i2u633_48 5860  
                                    i2u609_49 508C                                      i2u633_49 5874  
                                    i2u635_48 58A0                                      i2u635_49 58B4  
                                    i2u637_48 5644                                      i2u637_49 5658  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    i2u594_40 5C4C                                      i2u594_46 5C4E  
                  ??_TMR6_SetInterruptHandler 0018                                   ??_Led_Blink 0008  
                  __end_of_UART1_Transmit_ISR 5B06                                      _TMR5_ISR 5618  
                                    _TMR6_ISR 59AC                 ?_UART1_SetFramingErrorHandler 0015  
                                 _display_led 4D4E                                     _vfpfcnvrt 2ACC  
                           ___wmul@multiplier 0015                                     main@dac_v 00D8  
                               _TMR6_CallBack 5B78                     ?_TMR5_SetInterruptHandler 0015  
                         __end_of_UART1_Write 58FE                                  _isspace$3184 001B  
                                  vfpfcnvrt@c 00C6                                    vfpfcnvrt@f 00C7  
                            ?_SPI1_Initialize 0001                                   _INTCON0bits 003FD2  
                                   copy_data0 5168                         ?_INTERRUPT_Initialize 0001  
                           ??_DAC1_Initialize 0015                        _uart1TxBufferRemaining 0049  
                           ??_TMR2_Initialize 0015                ??_TMR5_DefaultInterruptHandler 000F  
                                  ?_scmd_init 0001                                  _uart1RxCount 0046  
                                    __Hrparam 0000              __end_of_ADCC_GetConversionResult 5D3E  
                                  vfprintf@ap 00D1                                      __Lrparam 0000  
                                  vfprintf@fp 00CE                       ??_OSCILLATOR_Initialize 0015  
                                  ?_vfpfcnvrt 00AF                                      _adc_chan 0044  
                           ??_PWM5_Initialize 0015                                      _adc_tick 00FC  
                              ?_TMR6_CallBack 0001                            ___fpclassifyf@F465 0190  
                                  sprintf@fmt 02C5                                      ___xxtofl 46EA  
                                    __pivt0x8 0008                                      _cli_init 5272  
                                    _cli_read 4300                                      __ptext10 45A2  
                                    __ptext11 2100                                      __ptext20 3496  
                                    __ptext12 58FE                                      __ptext21 5A7C  
                                    __ptext13 5A1C                                      __ptext30 5A4C  
                                    __ptext22 3144                                      __ptext14 54C4  
                                    __ptext31 5B06                                      __ptext23 495C  
                                    __ptext15 50BE                                      __ptext40 419E  
                                    __ptext32 4D4E                                      __ptext24 51E8  
                                    __ptext16 3FF4                                      __ptext41 5666  
                                    __ptext33 4300                                      __ptext25 37A2  
                                    __ptext17 4BC8                                      __ptext50 46EA  
                                    __ptext42 5CB0                                      __ptext34 4456  
                                    __ptext26 53EC                                      __ptext18 4C94  
                                    __ptext51 59E6                                      __ptext43 5B54  
                                    __ptext35 5D3E                                      __ptext27 52F6  
                                    __ptext19 56FA                                      __ptext60 56B2  
                                    __ptext52 4EBA                                      __ptext44 5CC8  
                                    __ptext36 5B30                                      __ptext28 482A  
                                    __ptext61 5DAE                                      __ptext53 5D5A  
                                    __ptext45 5938                                      __ptext37 5D4C  
                                    __ptext29 57C6                                      __ptext70 5DCA  
                                    __ptext62 5C26                                      __ptext54 5D68  
                                    __ptext46 545C                                      __ptext38 5804  
                                    __ptext71 537A                                      __ptext63 5C7E  
                                    __ptext55 5D76                                      __ptext47 4E06  
                                    __ptext39 3C80                                      __ptext80 5B78  
                                    __ptext72 5DBC                                      __ptext64 5CE0  
                                    __ptext56 5D84                                      __ptext48 5DD6  
                                    __ptext81 5C44                                      __ptext73 5DE0  
                                    __ptext65 5CF8                                      __ptext57 5D92  
                                    __ptext49 58C2                                      __ptext90 5DF0  
                                    __ptext82 5DFA                                      __ptext74 5DEA  
                                    __ptext66 5BE2                                      __ptext58 5AAA  
                                    __ptext91 5C04                                      __ptext83 5DFC  
                                    __ptext75 5784                                      __ptext67 4AFA  
                                    __ptext59 5DA0                                      __ptext92 5618  
                                    __ptext84 5844                                      __ptext76 5DF8  
                                    __ptext68 5C62                                      __ptext93 5E02  
                                    __ptext85 5AD8                                      __ptext77 5972  
                                    __ptext69 5740                                      __ptext94 5576  
                                    __ptext86 5884                                      __ptext78 5D28  
                                    __ptext95 5B9C                                      __ptext87 501C  
                                    __ptext79 59AC                                      __ptext96 0000  
                                    __ptext88 5DFE                                      __ptext89 5E00  
                                ??_linux_getc 0017                                  ??_linux_putc 002F  
               __end_of_UART1_SetErrorHandler 5DA0                                    strcpy@dest 0015  
                      __cli_interpret_cmd@ret 0030                             ??_PWM6_Initialize 0015  
                                 _IVTLOCKbits 003FD4                                      efgtoa@fp 0071  
                                    efgtoa@ne 0087                                      efgtoa@pp 0085  
                                    efgtoa@ou 008B                     _UART1_OverrunErrorHandler 00E3  
                   _ADCC_ADI_InterruptHandler 00EC                                     stoa@F1164 01E8  
UART1_SetOverrunErrorHandler@interruptHandler 0015                                      isa$xinst 000000  
                  ?_UART1_DefaultErrorHandler 0001                                      _vfprintf 5524  
                                   printf@fmt 02C3                            __end_of_linux_getc 5B54  
                           _UART1_is_rx_ready 5D4C                            __end_of_linux_putc 5D4C  
                                 _UART1_Write 58C2                    __end_of__cli_interpret_cmd 3E44  
                           ??_TMR5_Initialize 0018                            ?_UART1_is_rx_ready 0001  
                               ??_Default_ISR 000B                ??_UART1_SetFramingErrorHandler 0018  
                              _vfpfcnvrt$3119 00C4                   __end_of_UART1_RxDataHandler 5C26  
                                 _uart1RxHead 0048                                   _uart1TxHead 004B  
                                 _uart1RxTail 0047                                   fh_po@a_data 002C  
                                 _uart1TxTail 004A                                      isdigit@c 0015  
                      ??_INTERRUPT_Initialize 0015                                   fh_pr@a_data 002C  
                         ??_UART1_is_rx_ready 0015                                   fh_ps@a_data 002C  
        __end_of_TMR6_DefaultInterruptHandler 5DFC                  _TMR6_DefaultInterruptHandler 5DFA  
        __end_of_ADCC_DefaultInterruptHandler 5DFA                  _ADCC_DefaultInterruptHandler 5DF8  
                                    intlevel2 0000                                     sprintf@ap 02CA  
                                    isspace@c 0015                       ?_PIN_MANAGER_Initialize 0001  
                           ??_TMR6_Initialize 0018                                   ??_scmd_init 0039  
                                   strcpy@src 0017                                      isupper@c 0015  
                                   strncmp@_l 0019                                     strncmp@_r 001B  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 0095  
                                  _SPI1SDIPPS 003ADF                                    _SPI1SCKPPS 003ADE  
                                    printf@ap 00D3                     __end_of_UART1_is_rx_ready 5D5A  
                                  _UART1_Read 5804  UART1_SetFramingErrorHandler@interruptHandler 0015  
                    _ADCC_GetConversionResult 5D28             __end_of_UART1_DefaultErrorHandler 5DF6  
                                 ??_vfpfcnvrt 00B4                                      stoa@nuls 0025  
                             ??_TMR6_CallBack 0009                                      sprintf@f 02CC  
                                    tolower@c 001B                                      sprintf@s 02C3  
                                    strncmp@l 0021                                      strncmp@n 001D  
                                    strncmp@r 0023                      _UART1_TxInterruptHandler 00EF  
                               ___fladd@signs 0021                           __end_of_Default_ISR 5DFE  
              __end_of_PIN_MANAGER_Initialize 4BC8                             ??_ADCC_Initialize 0018  
                              _DAC1_GetOutput 5DEA                 ?_TMR6_DefaultInterruptHandler 0001  
                                ___fladd@aexp 0022                                  ___fladd@bexp 0023  
               ?_ADCC_DefaultInterruptHandler 0001                  ?_UART1_SetTxInterruptHandler 0015  
                  __end_of_spi1_configuration 2006  
