

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Apr 24 17:48:01 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=3
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=3
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=3
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=4,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=4,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=4,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=4,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=4,class=CODE,delta=1
   159                           	psect	text133,global,reloc=4,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=4,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=4,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=4,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   171                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   172                           	psect	text144,global,reloc=2,class=CODE,delta=1
   173                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   174                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   175                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   176  0000                     
   177                           ; Version 2.40
   178                           ; Generated 17/11/2021 GMT
   179                           ; 
   180                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   181                           ; All rights reserved.
   182                           ; 
   183                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   184                           ; 
   185                           ; Redistribution and use in source and binary forms, with or without modification, are
   186                           ; permitted provided that the following conditions are met:
   187                           ; 
   188                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   189                           ;        conditions and the following disclaimer.
   190                           ; 
   191                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   192                           ;        of conditions and the following disclaimer in the documentation and/or other
   193                           ;        materials provided with the distribution. Publication is not required when
   194                           ;        this file is used in an embedded application.
   195                           ; 
   196                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   197                           ;        software without specific prior written permission.
   198                           ; 
   199                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   200                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   201                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   202                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   203                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   204                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   205                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   206                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   207                           ; 
   208                           ; 
   209                           ; Code-generator required, PIC18F57K42 Definitions
   210                           ; 
   211                           ; SFR Addresses
   212  0000                     
   213                           	psect	idataBIGRAM
   214  011BE2                     __pidataBIGRAM:
   215                           	callstack 0
   216                           
   217                           ;initializer for _port_data
   218  011BE2  FF                 	db	255
   219  011BE3  00                 	db	0
   220  011BE4  FF                 	db	255
   221  011BE5  00                 	db	0
   222  011BE6  FF                 	db	255
   223  011BE7  00                 	db	0
   224  011BE8  FF                 	db	255
   225  011BE9  00                 	db	0
   226  011BEA  FF                 	db	255
   227  011BEB  00                 	db	0
   228  011BEC  FF                 	db	255
   229  011BED  00                 	db	0
   230  011BEE  FF                 	db	255
   231  011BEF  00                 	db	0
   232  011BF0  FF                 	db	255
   233  011BF1  00                 	db	0
   234  011BF2  00                 	db	0
   235  011BF3  00                 	db	0
   236  011BF4  00                 	db	0
   237  011BF5  00                 	db	0
   238  011BF6  00                 	db	0
   239  011BF7  00                 	db	0
   240  011BF8  00                 	db	0
   241  011BF9  00                 	db	0
   242  011BFA  00                 	db	0
   243  011BFB  00                 	db	0
   244  011BFC  00                 	db	0
   245  011BFD  00                 	db	0
   246  011BFE  00                 	db	0
   247  011BFF  00                 	db	0
   248  011C00  00                 	db	0
   249  011C01  00                 	db	0
   250  011C02  00                 	db	0
   251  011C03  00                 	db	0
   252  011C04  00                 	db	0
   253  011C05  00                 	db	0
   254  011C06  00                 	db	0
   255  011C07  00                 	db	0
   256  011C08  00                 	db	0
   257  011C09  00                 	db	0
   258  011C0A  00                 	db	0
   259  011C0B  00                 	db	0
   260  011C0C  00                 	db	0
   261  011C0D  00                 	db	0
   262  011C0E  00                 	db	0
   263  011C0F  00                 	db	0
   264  011C10  00                 	db	0
   265  011C11  00                 	db	0
   266  011C12  00                 	db	0
   267  011C13  00                 	db	0
   268  011C14  00                 	db	0
   269  011C15  00                 	db	0
   270  011C16  00                 	db	0
   271  011C17  00                 	db	0
   272  011C18  00                 	db	0
   273  011C19  00                 	db	0
   274  011C1A  00                 	db	0
   275  011C1B  00                 	db	0
   276  011C1C  00                 	db	0
   277  011C1D  00                 	db	0
   278  011C1E  00                 	db	0
   279  011C1F  00                 	db	0
   280  011C20  00                 	db	0
   281  011C21  00                 	db	0
   282  011C22  00                 	db	0
   283  011C23  00                 	db	0
   284  011C24  00                 	db	0
   285  011C25  00                 	db	0
   286  011C26  00                 	db	0
   287  011C27  00                 	db	0
   288  011C28  00                 	db	0
   289  011C29  00                 	db	0
   290  011C2A  00                 	db	0
   291  011C2B  00                 	db	0
   292  011C2C  00                 	db	0
   293  011C2D  00                 	db	0
   294  011C2E  00                 	db	0
   295  011C2F  00                 	db	0
   296  011C30  00                 	db	0
   297  011C31  00                 	db	0
   298  011C32  00                 	db	0
   299  011C33  00                 	db	0
   300  011C34  00                 	db	0
   301  011C35  00                 	db	0
   302  011C36  00                 	db	0
   303  011C37  00                 	db	0
   304  011C38  00                 	db	0
   305  011C39  00                 	db	0
   306  011C3A  00                 	db	0
   307  011C3B  00                 	db	0
   308  011C3C  00                 	db	0
   309  011C3D  00                 	db	0
   310  011C3E  00                 	db	0
   311  011C3F  00                 	db	0
   312  011C40  00                 	db	0
   313  011C41  00                 	db	0
   314  011C42  00                 	db	0
   315  011C43  00                 	db	0
   316  011C44  00                 	db	0
   317  011C45  00                 	db	0
   318  011C46  00                 	db	0
   319  011C47  00                 	db	0
   320  011C48  00                 	db	0
   321  011C49  00                 	db	0
   322  011C4A  00                 	db	0
   323  011C4B  00                 	db	0
   324  011C4C  00                 	db	0
   325  011C4D  00                 	db	0
   326  011C4E  00                 	db	0
   327  011C4F  00                 	db	0
   328  011C50  00                 	db	0
   329  011C51  00                 	db	0
   330  011C52  00                 	db	0
   331  011C53  00                 	db	0
   332  011C54  00                 	db	0
   333  011C55  00                 	db	0
   334  011C56  00                 	db	0
   335  011C57  00                 	db	0
   336  011C58  00                 	db	0
   337  011C59  00                 	db	0
   338  011C5A  00                 	db	0
   339  011C5B  00                 	db	0
   340  011C5C  00                 	db	0
   341  011C5D  00                 	db	0
   342  011C5E  00                 	db	0
   343  011C5F  00                 	db	0
   344  011C60  00                 	db	0
   345  011C61  00                 	db	0
   346  011C62  00                 	db	0
   347  011C63  00                 	db	0
   348  011C64  00                 	db	0
   349  011C65  00                 	db	0
   350  011C66  00                 	db	0
   351  011C67  00                 	db	0
   352  011C68  00                 	db	0
   353  011C69  00                 	db	0
   354  011C6A  00                 	db	0
   355  011C6B  00                 	db	0
   356  011C6C  00                 	db	0
   357  011C6D  00                 	db	0
   358  011C6E  00                 	db	0
   359  011C6F  00                 	db	0
   360  011C70  00                 	db	0
   361  011C71  00                 	db	0
   362  011C72  00                 	db	0
   363  011C73  00                 	db	0
   364  011C74  00                 	db	0
   365  011C75  00                 	db	0
   366  011C76  00                 	db	0
   367  011C77  00                 	db	0
   368  011C78  00                 	db	0
   369  011C79  00                 	db	0
   370  011C7A  00                 	db	0
   371  011C7B  00                 	db	0
   372  011C7C  00                 	db	0
   373  011C7D  00                 	db	0
   374  011C7E  00                 	db	0
   375  011C7F  00                 	db	0
   376  011C80  00                 	db	0
   377  011C81  00                 	db	0
   378  011C82  00                 	db	0
   379  011C83  00                 	db	0
   380  011C84  00                 	db	0
   381  011C85  00                 	db	0
   382  011C86  00                 	db	0
   383  011C87  00                 	db	0
   384  011C88  00                 	db	0
   385  011C89  00                 	db	0
   386  011C8A  00                 	db	0
   387  011C8B  00                 	db	0
   388  011C8C  00                 	db	0
   389  011C8D  00                 	db	0
   390  011C8E  00                 	db	0
   391  011C8F  00                 	db	0
   392  011C90  00                 	db	0
   393  011C91  00                 	db	0
   394  011C92  00                 	db	0
   395  011C93  00                 	db	0
   396  011C94  00                 	db	0
   397  011C95  00                 	db	0
   398  011C96  00                 	db	0
   399  011C97  00                 	db	0
   400  011C98  00                 	db	0
   401  011C99  00                 	db	0
   402  011C9A  00                 	db	0
   403  011C9B  00                 	db	0
   404  011C9C  00                 	db	0
   405  011C9D  00                 	db	0
   406  011C9E  00                 	db	0
   407  011C9F  00                 	db	0
   408  011CA0  00                 	db	0
   409  011CA1  00                 	db	0
   410  011CA2  00                 	db	0
   411  011CA3  00                 	db	0
   412  011CA4  00                 	db	0
   413  011CA5  00                 	db	0
   414  011CA6  00                 	db	0
   415  011CA7  00                 	db	0
   416  011CA8  00                 	db	0
   417  011CA9  00                 	db	0
   418  011CAA  00                 	db	0
   419  011CAB  00                 	db	0
   420  011CAC  00                 	db	0
   421  011CAD  00                 	db	0
   422  011CAE  00                 	db	0
   423  011CAF  00                 	db	0
   424  011CB0  00                 	db	0
   425  011CB1  00                 	db	0
   426  011CB2  00                 	db	0
   427  011CB3  00                 	db	0
   428  011CB4  00                 	db	0
   429  011CB5  00                 	db	0
   430  011CB6  00                 	db	0
   431  011CB7  00                 	db	0
   432  011CB8  00                 	db	0
   433  011CB9  00                 	db	0
   434  011CBA  00                 	db	0
   435  011CBB  00                 	db	0
   436  011CBC  00                 	db	0
   437  011CBD  00                 	db	0
   438  011CBE  00                 	db	0
   439  011CBF  00                 	db	0
   440  011CC0  00                 	db	0
   441  011CC1  00                 	db	0
   442  011CC2  00                 	db	0
   443  011CC3  00                 	db	0
   444  011CC4  00                 	db	0
   445  011CC5  00                 	db	0
   446  011CC6  00                 	db	0
   447  011CC7  00                 	db	0
   448  011CC8  00                 	db	0
   449  011CC9  00                 	db	0
   450  011CCA  00                 	db	0
   451  011CCB  00                 	db	0
   452  011CCC  00                 	db	0
   453  011CCD  00                 	db	0
   454  011CCE  00                 	db	0
   455  011CCF  00                 	db	0
   456  011CD0  00                 	db	0
   457  011CD1  00                 	db	0
   458  011CD2  00                 	db	0
   459  011CD3  00                 	db	0
   460  011CD4  00                 	db	0
   461  011CD5  00                 	db	0
   462  011CD6  00                 	db	0
   463  011CD7  00                 	db	0
   464  011CD8  00                 	db	0
   465  011CD9  00                 	db	0
   466  011CDA  00                 	db	0
   467  011CDB  00                 	db	0
   468  011CDC  00                 	db	0
   469  011CDD  00                 	db	0
   470  011CDE  00                 	db	0
   471  011CDF  00                 	db	0
   472  011CE0  00                 	db	0
   473  011CE1  00                 	db	0
   474  011CE2  00                 	db	0
   475  011CE3  00                 	db	0
   476  011CE4  00                 	db	0
   477  011CE5  00                 	db	0
   478  011CE6  00                 	db	0
   479  011CE7  00                 	db	0
   480  011CE8  00                 	db	0
   481  011CE9  00                 	db	0
   482  011CEA  00                 	db	0
   483  011CEB  00                 	db	0
   484  011CEC  00                 	db	0
   485  011CED  00                 	db	0
   486  011CEE  00                 	db	0
   487  011CEF  00                 	db	0
   488  011CF0  00                 	db	0
   489  011CF1  00                 	db	0
   490  011CF2  00                 	db	0
   491  011CF3  00                 	db	0
   492  011CF4  00                 	db	0
   493  011CF5  00                 	db	0
   494  011CF6  00                 	db	0
   495  011CF7  00                 	db	0
   496  011CF8  00                 	db	0
   497  011CF9  00                 	db	0
   498  011CFA  00                 	db	0
   499  011CFB  00                 	db	0
   500  011CFC  00                 	db	0
   501  011CFD  00                 	db	0
   502  011CFE  00                 	db	0
   503  011CFF  00                 	db	0
   504  011D00  00                 	db	0
   505  011D01  00                 	db	0
   506  011D02  00                 	db	0
   507  011D03  00                 	db	0
   508  011D04  00                 	db	0
   509  011D05  00                 	db	0
   510  011D06  00                 	db	0
   511  011D07  00                 	db	0
   512  011D08  00                 	db	0
   513  011D09  00                 	db	0
   514  011D0A  00                 	db	0
   515  011D0B  00                 	db	0
   516  011D0C  00                 	db	0
   517  011D0D  00                 	db	0
   518  011D0E  00                 	db	0
   519  011D0F  00                 	db	0
   520  011D10  00                 	db	0
   521  011D11  00                 	db	0
   522  011D12  00                 	db	0
   523  011D13  00                 	db	0
   524  011D14  00                 	db	0
   525  011D15  00                 	db	0
   526  011D16  00                 	db	0
   527  011D17  00                 	db	0
   528  011D18  00                 	db	0
   529  011D19  00                 	db	0
   530  011D1A  00                 	db	0
   531  011D1B  00                 	db	0
   532  011D1C  00                 	db	0
   533  011D1D  00                 	db	0
   534  011D1E  00                 	db	0
   535  011D1F  00                 	db	0
   536  011D20  00                 	db	0
   537  011D21  00                 	db	0
   538  011D22  00                 	db	0
   539  011D23  00                 	db	0
   540  011D24  00                 	db	0
   541  011D25  00                 	db	0
   542  011D26  00                 	db	0
   543  011D27  00                 	db	0
   544  011D28  00                 	db	0
   545  011D29  00                 	db	0
   546  011D2A  00                 	db	0
   547  011D2B  00                 	db	0
   548  011D2C  00                 	db	0
   549  011D2D  00                 	db	0
   550  011D2E  00                 	db	0
   551  011D2F  00                 	db	0
   552  011D30  00                 	db	0
   553  011D31  00                 	db	0
   554  011D32  00                 	db	0
   555  011D33  00                 	db	0
   556  011D34  00                 	db	0
   557  011D35  00                 	db	0
   558  011D36  00                 	db	0
   559  011D37  00                 	db	0
   560  011D38  00                 	db	0
   561  011D39  00                 	db	0
   562  011D3A  00                 	db	0
   563  011D3B  00                 	db	0
   564  011D3C  00                 	db	0
   565  011D3D  00                 	db	0
   566  011D3E  00                 	db	0
   567  011D3F  00                 	db	0
   568  011D40  00                 	db	0
   569  011D41  00                 	db	0
   570  011D42  00                 	db	0
   571  011D43  00                 	db	0
   572  011D44  00                 	db	0
   573  011D45  00                 	db	0
   574  011D46  00                 	db	0
   575  011D47  00                 	db	0
   576  011D48  00                 	db	0
   577  011D49  00                 	db	0
   578  011D4A  00                 	db	0
   579  011D4B  00                 	db	0
   580  011D4C  00                 	db	0
   581  011D4D  00                 	db	0
   582  011D4E  00                 	db	0
   583  011D4F  00                 	db	0
   584  011D50  00                 	db	0
   585  011D51  00                 	db	0
   586  011D52  00                 	db	0
   587  011D53  00                 	db	0
   588  011D54  00                 	db	0
   589  011D55  00                 	db	0
   590  011D56  00                 	db	0
   591  011D57  00                 	db	0
   592  011D58  00                 	db	0
   593  011D59  00                 	db	0
   594  011D5A  00                 	db	0
   595  011D5B  00                 	db	0
   596  011D5C  00                 	db	0
   597  011D5D  00                 	db	0
   598  011D5E  00                 	db	0
   599  011D5F  00                 	db	0
   600  011D60  00                 	db	0
   601  011D61  00                 	db	0
   602  011D62  00                 	db	0
   603  011D63  00                 	db	0
   604  011D64  00                 	db	0
   605  011D65  00                 	db	0
   606  011D66  00                 	db	0
   607  011D67  00                 	db	0
   608  011D68  00                 	db	0
   609  011D69  00                 	db	0
   610  011D6A  00                 	db	0
   611  011D6B  00                 	db	0
   612  011D6C  00                 	db	0
   613  011D6D  00                 	db	0
   614  011D6E  00                 	db	0
   615  011D6F  00                 	db	0
   616  011D70  00                 	db	0
   617  011D71  00                 	db	0
   618  011D72  00                 	db	0
   619  011D73  00                 	db	0
   620  011D74  00                 	db	0
   621  011D75  00                 	db	0
   622  011D76  00                 	db	0
   623  011D77  00                 	db	0
   624  011D78  00                 	db	0
   625  011D79  00                 	db	0
   626  011D7A  00                 	db	0
   627  011D7B  00                 	db	0
   628  011D7C  00                 	db	0
   629  011D7D  00                 	db	0
   630  011D7E  00                 	db	0
   631  011D7F  00                 	db	0
   632  011D80  00                 	db	0
   633  011D81  00                 	db	0
   634  011D82  00                 	db	0
   635  011D83  00                 	db	0
   636  011D84  00                 	db	0
   637  011D85  00                 	db	0
   638  011D86  00                 	db	0
   639  011D87  00                 	db	0
   640  011D88  00                 	db	0
   641  011D89  00                 	db	0
   642  011D8A  00                 	db	0
   643  011D8B  00                 	db	0
   644  011D8C  00                 	db	0
   645  011D8D  00                 	db	0
   646  011D8E  00                 	db	0
   647  011D8F  00                 	db	0
   648  011D90  00                 	db	0
   649  011D91  00                 	db	0
   650  011D92  00                 	db	0
   651  011D93  00                 	db	0
   652  011D94  00                 	db	0
   653  011D95  00                 	db	0
   654  011D96  00                 	db	0
   655  011D97  00                 	db	0
   656  011D98  00                 	db	0
   657  011D99  00                 	db	0
   658  011D9A  00                 	db	0
   659  011D9B  00                 	db	0
   660  011D9C  00                 	db	0
   661  011D9D  00                 	db	0
   662  011D9E  00                 	db	0
   663  011D9F  00                 	db	0
   664  011DA0  00                 	db	0
   665  011DA1  00                 	db	0
   666  011DA2  00                 	db	0
   667  011DA3  00                 	db	0
   668  011DA4  00                 	db	0
   669  011DA5  00                 	db	0
   670  011DA6  00                 	db	0
   671  011DA7  00                 	db	0
   672  011DA8  00                 	db	0
   673  011DA9  00                 	db	0
   674  011DAA  00                 	db	0
   675  011DAB  00                 	db	0
   676  011DAC  00                 	db	0
   677  011DAD  00                 	db	0
   678  011DAE  00                 	db	0
   679  011DAF  00                 	db	0
   680  011DB0  00                 	db	0
   681  011DB1  00                 	db	0
   682  011DB2  00                 	db	0
   683  011DB3  00                 	db	0
   684  011DB4  00                 	db	0
   685  011DB5  00                 	db	0
   686  011DB6  00                 	db	0
   687  011DB7  00                 	db	0
   688  011DB8  00                 	db	0
   689  011DB9  00                 	db	0
   690  011DBA  00                 	db	0
   691  011DBB  00                 	db	0
   692  011DBC  00                 	db	0
   693  011DBD  00                 	db	0
   694  011DBE  00                 	db	0
   695  011DBF  00                 	db	0
   696  011DC0  00                 	db	0
   697  011DC1  00                 	db	0
   698  011DC2  00                 	db	0
   699  011DC3  00                 	db	0
   700  011DC4  00                 	db	0
   701  011DC5  00                 	db	0
   702  011DC6  00                 	db	0
   703  011DC7  00                 	db	0
   704  011DC8  00                 	db	0
   705  011DC9  00                 	db	0
   706  011DCA  00                 	db	0
   707  011DCB  00                 	db	0
   708  011DCC  00                 	db	0
   709  011DCD  00                 	db	0
   710  011DCE  00                 	db	0
   711  011DCF  00                 	db	0
   712  011DD0  00                 	db	0
   713  011DD1  00                 	db	0
   714  011DD2  00                 	db	0
   715  011DD3  00                 	db	0
   716  011DD4  00                 	db	0
   717  011DD5  00                 	db	0
   718  011DD6  00                 	db	0
   719  011DD7  00                 	db	0
   720  011DD8  00                 	db	0
   721  011DD9  00                 	db	0
   722  011DDA  00                 	db	0
   723  011DDB  00                 	db	0
   724  011DDC  00                 	db	0
   725  011DDD  00                 	db	0
   726  011DDE  00                 	db	0
   727  011DDF  00                 	db	0
   728  011DE0  00                 	db	0
   729  011DE1  00                 	db	0
   730  011DE2  00                 	db	0
   731  011DE3  00                 	db	0
   732  011DE4  00                 	db	0
   733  011DE5  00                 	db	0
   734  011DE6  00                 	db	0
   735  011DE7  00                 	db	0
   736  011DE8  00                 	db	0
   737  011DE9  00                 	db	0
   738  011DEA  00                 	db	0
   739  011DEB  00                 	db	0
   740  011DEC  00                 	db	0
   741  011DED  00                 	db	0
   742  011DEE  00                 	db	0
   743  011DEF  00                 	db	0
   744  011DF0  00                 	db	0
   745  011DF1  00                 	db	0
   746  011DF2  00                 	db	0
   747  011DF3  00                 	db	0
   748  011DF4  00                 	db	0
   749  011DF5  00                 	db	0
   750  011DF6  00                 	db	0
   751  011DF7  00                 	db	0
   752  011DF8  00                 	db	0
   753  011DF9  00                 	db	0
   754  011DFA  00                 	db	0
   755  011DFB  00                 	db	0
   756  011DFC  00                 	db	0
   757  011DFD  00                 	db	0
   758  011DFE  00                 	db	0
   759  011DFF  00                 	db	0
   760  011E00  00                 	db	0
   761  011E01  00                 	db	0
   762  011E02  00                 	db	0
   763  011E03  00                 	db	0
   764  011E04  00                 	db	0
   765  011E05  00                 	db	0
   766  011E06  00                 	db	0
   767  011E07  00                 	db	0
   768  011E08  00                 	db	0
   769  011E09  00                 	db	0
   770  011E0A  00                 	db	0
   771  011E0B  00                 	db	0
   772  011E0C  00                 	db	0
   773  011E0D  00                 	db	0
   774  011E0E  00                 	db	0
   775  011E0F  00                 	db	0
   776  011E10  00                 	db	0
   777  011E11  00                 	db	0
   778  011E12  00                 	db	0
   779  011E13  00                 	db	0
   780  011E14  00                 	db	0
   781  011E15  00                 	db	0
   782  011E16  00                 	db	0
   783  011E17  00                 	db	0
   784  011E18  00                 	db	0
   785  011E19  00                 	db	0
   786  011E1A  00                 	db	0
   787  011E1B  00                 	db	0
   788  011E1C  00                 	db	0
   789  011E1D  00                 	db	0
   790  011E1E  00                 	db	0
   791  011E1F  00                 	db	0
   792  011E20  00                 	db	0
   793  011E21  00                 	db	0
   794  011E22  00                 	db	0
   795  011E23  00                 	db	0
   796  011E24  00                 	db	0
   797  011E25  00                 	db	0
   798  011E26  00                 	db	0
   799  011E27  00                 	db	0
   800  011E28  00                 	db	0
   801  011E29  00                 	db	0
   802  011E2A  00                 	db	0
   803  011E2B  00                 	db	0
   804  011E2C  00                 	db	0
   805  011E2D  00                 	db	0
   806  011E2E  00                 	db	0
   807  011E2F  00                 	db	0
   808  011E30  00                 	db	0
   809  011E31  00                 	db	0
   810  011E32  00                 	db	0
   811  011E33  00                 	db	0
   812  011E34  00                 	db	0
   813  011E35  00                 	db	0
   814  011E36  00                 	db	0
   815  011E37  00                 	db	0
   816  011E38  00                 	db	0
   817  011E39  00                 	db	0
   818  011E3A  00                 	db	0
   819  011E3B  00                 	db	0
   820  011E3C  00                 	db	0
   821  011E3D  00                 	db	0
   822  011E3E  00                 	db	0
   823  011E3F  00                 	db	0
   824  011E40  00                 	db	0
   825  011E41  00                 	db	0
   826  011E42  00                 	db	0
   827  011E43  00                 	db	0
   828  011E44  00                 	db	0
   829  011E45  00                 	db	0
   830  011E46  00                 	db	0
   831  011E47  00                 	db	0
   832  011E48  00                 	db	0
   833  011E49  00                 	db	0
   834  011E4A  00                 	db	0
   835  011E4B  00                 	db	0
   836  011E4C  00                 	db	0
   837  011E4D  00                 	db	0
   838  011E4E  00                 	db	0
   839  011E4F  00                 	db	0
   840  011E50  00                 	db	0
   841  011E51  00                 	db	0
   842  011E52  00                 	db	0
   843  011E53  00                 	db	0
   844  011E54  00                 	db	0
   845  011E55  00                 	db	0
   846  011E56  00                 	db	0
   847  011E57  00                 	db	0
   848  011E58  00                 	db	0
   849  011E59  00                 	db	0
   850  011E5A  00                 	db	0
   851  011E5B  00                 	db	0
   852  011E5C  00                 	db	0
   853  011E5D  00                 	db	0
   854  011E5E  00                 	db	0
   855  011E5F  00                 	db	0
   856  011E60  00                 	db	0
   857  011E61  00                 	db	0
   858  011E62  00                 	db	0
   859  011E63  00                 	db	0
   860  011E64  00                 	db	0
   861  011E65  00                 	db	0
   862  011E66  00                 	db	0
   863  011E67  00                 	db	0
   864  011E68  00                 	db	0
   865  011E69  00                 	db	0
   866  011E6A  00                 	db	0
   867  011E6B  00                 	db	0
   868  011E6C  00                 	db	0
   869  011E6D  00                 	db	0
   870  011E6E  00                 	db	0
   871  011E6F  00                 	db	0
   872  011E70  00                 	db	0
   873  011E71  00                 	db	0
   874  011E72  00                 	db	0
   875  011E73  00                 	db	0
   876  011E74  00                 	db	0
   877  011E75  00                 	db	0
   878  011E76  00                 	db	0
   879  011E77  00                 	db	0
   880  011E78  00                 	db	0
   881  011E79  00                 	db	0
   882  011E7A  00                 	db	0
   883  011E7B  00                 	db	0
   884  011E7C  00                 	db	0
   885  011E7D  00                 	db	0
   886  011E7E  00                 	db	0
   887  011E7F  00                 	db	0
   888  011E80  00                 	db	0
   889  011E81  00                 	db	0
   890  011E82  00                 	db	0
   891  011E83  00                 	db	0
   892  011E84  00                 	db	0
   893  011E85  00                 	db	0
   894  011E86  00                 	db	0
   895  011E87  00                 	db	0
   896  011E88  00                 	db	0
   897  011E89  00                 	db	0
   898  011E8A  00                 	db	0
   899  011E8B  00                 	db	0
   900  011E8C  00                 	db	0
   901  011E8D  00                 	db	0
   902  011E8E  00                 	db	0
   903  011E8F  00                 	db	0
   904  011E90  00                 	db	0
   905  011E91  00                 	db	0
   906  011E92  00                 	db	0
   907  011E93  00                 	db	0
   908  011E94  00                 	db	0
   909  011E95  00                 	db	0
   910  011E96  00                 	db	0
   911  011E97  00                 	db	0
   912  011E98  00                 	db	0
   913  011E99  00                 	db	0
   914  011E9A  00                 	db	0
   915  011E9B  00                 	db	0
   916  011E9C  00                 	db	0
   917  011E9D  00                 	db	0
   918  011E9E  00                 	db	0
   919  011E9F  00                 	db	0
   920  011EA0  00                 	db	0
   921  011EA1  00                 	db	0
   922  011EA2  00                 	db	0
   923  011EA3  00                 	db	0
   924  011EA4  00                 	db	0
   925  011EA5  00                 	db	0
   926  011EA6  00                 	db	0
   927  011EA7  00                 	db	0
   928  011EA8  00                 	db	0
   929  011EA9  00                 	db	0
   930  011EAA  00                 	db	0
   931  011EAB  00                 	db	0
   932  011EAC  00                 	db	0
   933  011EAD  00                 	db	0
   934  011EAE  00                 	db	0
   935  011EAF  00                 	db	0
   936  011EB0  00                 	db	0
   937  011EB1  00                 	db	0
   938  011EB2  00                 	db	0
   939  011EB3  00                 	db	0
   940  011EB4  00                 	db	0
   941  011EB5  00                 	db	0
   942  011EB6  00                 	db	0
   943  011EB7  00                 	db	0
   944  011EB8  00                 	db	0
   945  011EB9  00                 	db	0
   946  011EBA  00                 	db	0
   947  011EBB  00                 	db	0
   948  011EBC  00                 	db	0
   949  011EBD  00                 	db	0
   950  011EBE  00                 	db	0
   951  011EBF  00                 	db	0
   952  011EC0  00                 	db	0
   953  011EC1  00                 	db	0
   954  011EC2  00                 	db	0
   955  011EC3  00                 	db	0
   956  011EC4  00                 	db	0
   957  011EC5  00                 	db	0
   958  011EC6  00                 	db	0
   959  011EC7  00                 	db	0
   960  011EC8  00                 	db	0
   961  011EC9  00                 	db	0
   962  011ECA  00                 	db	0
   963  011ECB  00                 	db	0
   964  011ECC  00                 	db	0
   965  011ECD  00                 	db	0
   966  011ECE  00                 	db	0
   967  011ECF  00                 	db	0
   968  011ED0  00                 	db	0
   969  011ED1  00                 	db	0
   970  011ED2  00                 	db	0
   971  011ED3  00                 	db	0
   972  011ED4  00                 	db	0
   973  011ED5  00                 	db	0
   974  011ED6  00                 	db	0
   975  011ED7  00                 	db	0
   976  011ED8  00                 	db	0
   977  011ED9  00                 	db	0
   978  011EDA  00                 	db	0
   979  011EDB  00                 	db	0
   980  011EDC  00                 	db	0
   981  011EDD  00                 	db	0
   982  011EDE  00                 	db	0
   983  011EDF  00                 	db	0
   984  011EE0  00                 	db	0
   985  011EE1  00                 	db	0
   986  011EE2  00                 	db	0
   987  011EE3  00                 	db	0
   988  011EE4  00                 	db	0
   989  011EE5  00                 	db	0
   990  011EE6  00                 	db	0
   991  011EE7  00                 	db	0
   992  011EE8  00                 	db	0
   993  011EE9  00                 	db	0
   994  011EEA  00                 	db	0
   995  011EEB  00                 	db	0
   996  011EEC  00                 	db	0
   997  011EED  00                 	db	0
   998  011EEE  00                 	db	0
   999  011EEF  00                 	db	0
  1000  011EF0  00                 	db	0
  1001  011EF1  00                 	db	0
  1002  011EF2  00                 	db	0
  1003  011EF3  00                 	db	0
  1004  011EF4  00                 	db	0
  1005  011EF5  00                 	db	0
  1006  011EF6  00                 	db	0
  1007  011EF7  00                 	db	0
  1008  011EF8  00                 	db	0
  1009  011EF9  00                 	db	0
  1010  011EFA  00                 	db	0
  1011  011EFB  00                 	db	0
  1012  011EFC  00                 	db	0
  1013  011EFD  00                 	db	0
  1014  011EFE  00                 	db	0
  1015  011EFF  00                 	db	0
  1016  011F00  00                 	db	0
  1017  011F01  00                 	db	0
  1018  011F02  00                 	db	0
  1019  011F03  00                 	db	0
  1020  011F04  00                 	db	0
  1021  011F05  00                 	db	0
  1022  011F06  00                 	db	0
  1023  011F07  00                 	db	0
  1024  011F08  00                 	db	0
  1025  011F09  00                 	db	0
  1026  011F0A  00                 	db	0
  1027  011F0B  00                 	db	0
  1028  011F0C  00                 	db	0
  1029  011F0D  00                 	db	0
  1030  011F0E  00                 	db	0
  1031  011F0F  00                 	db	0
  1032  011F10  00                 	db	0
  1033  011F11  00                 	db	0
  1034  011F12  00                 	db	0
  1035  011F13  00                 	db	0
  1036  011F14  00                 	db	0
  1037  011F15  00                 	db	0
  1038  011F16  00                 	db	0
  1039  011F17  00                 	db	0
  1040  011F18  00                 	db	0
  1041  011F19  00                 	db	0
  1042  011F1A  00                 	db	0
  1043  011F1B  00                 	db	0
  1044  011F1C  00                 	db	0
  1045  011F1D  00                 	db	0
  1046  011F1E  00                 	db	0
  1047  011F1F  00                 	db	0
  1048  011F20  00                 	db	0
  1049  011F21  00                 	db	0
  1050  011F22  00                 	db	0
  1051  011F23  00                 	db	0
  1052  011F24  00                 	db	0
  1053  011F25  00                 	db	0
  1054  011F26  00                 	db	0
  1055  011F27  00                 	db	0
  1056  011F28  00                 	db	0
  1057  011F29  00                 	db	0
  1058  011F2A  00                 	db	0
  1059  011F2B  00                 	db	0
  1060  011F2C  00                 	db	0
  1061  011F2D  00                 	db	0
  1062  011F2E  00                 	db	0
  1063  011F2F  00                 	db	0
  1064  011F30  00                 	db	0
  1065  011F31  00                 	db	0
  1066  011F32  00                 	db	0
  1067  011F33  00                 	db	0
  1068  011F34  00                 	db	0
  1069  011F35  00                 	db	0
  1070  011F36  00                 	db	0
  1071  011F37  00                 	db	0
  1072  011F38  00                 	db	0
  1073  011F39  00                 	db	0
  1074  011F3A  00                 	db	0
  1075  011F3B  00                 	db	0
  1076  011F3C  00                 	db	0
  1077  011F3D  00                 	db	0
  1078  011F3E  00                 	db	0
  1079  011F3F  00                 	db	0
  1080  011F40  00                 	db	0
  1081  011F41  00                 	db	0
  1082  011F42  00                 	db	0
  1083  011F43  00                 	db	0
  1084  011F44  00                 	db	0
  1085  011F45  00                 	db	0
  1086  011F46  00                 	db	0
  1087  011F47  00                 	db	0
  1088  011F48  00                 	db	0
  1089  011F49  00                 	db	0
  1090  011F4A  00                 	db	0
  1091  011F4B  00                 	db	0
  1092  011F4C  00                 	db	0
  1093  011F4D  00                 	db	0
  1094  011F4E  00                 	db	0
  1095  011F4F  00                 	db	0
  1096  011F50  00                 	db	0
  1097  011F51  00                 	db	0
  1098  011F52  00                 	db	0
  1099  011F53  00                 	db	0
  1100  011F54  00                 	db	0
  1101  011F55  00                 	db	0
  1102  011F56  00                 	db	0
  1103  011F57  00                 	db	0
  1104  011F58  00                 	db	0
  1105  011F59  00                 	db	0
  1106  011F5A  00                 	db	0
  1107  011F5B  00                 	db	0
  1108  011F5C  00                 	db	0
  1109  011F5D  00                 	db	0
  1110  011F5E  00                 	db	0
  1111  011F5F  00                 	db	0
  1112  011F60  00                 	db	0
  1113  011F61  00                 	db	0
  1114  011F62  00                 	db	0
  1115  011F63  00                 	db	0
  1116  011F64  00                 	db	0
  1117  011F65  00                 	db	0
  1118  011F66  00                 	db	0
  1119  011F67  00                 	db	0
  1120  011F68  00                 	db	0
  1121  011F69  00                 	db	0
  1122  011F6A  00                 	db	0
  1123  011F6B  00                 	db	0
  1124  011F6C  00                 	db	0
  1125  011F6D  00                 	db	0
  1126  011F6E  00                 	db	0
  1127  011F6F  00                 	db	0
  1128  011F70  00                 	db	0
  1129  011F71  00                 	db	0
  1130  011F72  00                 	db	0
  1131  011F73  00                 	db	0
  1132  011F74  00                 	db	0
  1133  011F75  00                 	db	0
  1134  011F76  00                 	db	0
  1135  011F77  00                 	db	0
  1136  011F78  00                 	db	0
  1137  011F79  00                 	db	0
  1138  011F7A  00                 	db	0
  1139  011F7B  00                 	db	0
  1140  011F7C  00                 	db	0
  1141  011F7D  00                 	db	0
  1142  011F7E  00                 	db	0
  1143  011F7F  00                 	db	0
  1144  011F80  00                 	db	0
  1145  011F81  00                 	db	0
  1146  011F82  00                 	db	0
  1147  011F83  00                 	db	0
  1148  011F84  00                 	db	0
  1149  011F85  00                 	db	0
  1150  011F86  00                 	db	0
  1151  011F87  00                 	db	0
  1152  011F88  00                 	db	0
  1153  011F89  00                 	db	0
  1154  011F8A  00                 	db	0
  1155  011F8B  00                 	db	0
  1156  011F8C  00                 	db	0
  1157  011F8D  00                 	db	0
  1158  011F8E  00                 	db	0
  1159  011F8F  00                 	db	0
  1160  011F90  00                 	db	0
  1161  011F91  00                 	db	0
  1162  011F92  00                 	db	0
  1163  011F93  00                 	db	0
  1164  011F94  00                 	db	0
  1165  011F95  00                 	db	0
  1166  011F96  00                 	db	0
  1167  011F97  00                 	db	0
  1168  011F98  00                 	db	0
  1169  011F99  00                 	db	0
  1170  011F9A  00                 	db	0
  1171  011F9B  00                 	db	0
  1172  011F9C  00                 	db	0
  1173  011F9D  00                 	db	0
  1174  011F9E  00                 	db	0
  1175  011F9F  00                 	db	0
  1176  011FA0  00                 	db	0
  1177  011FA1  00                 	db	0
  1178  011FA2  00                 	db	0
  1179  011FA3  00                 	db	0
  1180  011FA4  00                 	db	0
  1181  011FA5  00                 	db	0
  1182  011FA6  00                 	db	0
  1183  011FA7  00                 	db	0
  1184  011FA8  00                 	db	0
  1185  011FA9  00                 	db	0
  1186  011FAA  00                 	db	0
  1187  011FAB  00                 	db	0
  1188  011FAC  00                 	db	0
  1189  011FAD  00                 	db	0
  1190  011FAE  00                 	db	0
  1191  011FAF  00                 	db	0
  1192  011FB0  00                 	db	0
  1193  011FB1  00                 	db	0
  1194  011FB2  00                 	db	0
  1195  011FB3  00                 	db	0
  1196  011FB4  00                 	db	0
  1197  011FB5  00                 	db	0
  1198  011FB6  00                 	db	0
  1199  011FB7  00                 	db	0
  1200  011FB8  00                 	db	0
  1201  011FB9  00                 	db	0
  1202  011FBA  00                 	db	0
  1203  011FBB  00                 	db	0
  1204  011FBC  00                 	db	0
  1205  011FBD  00                 	db	0
  1206  011FBE  00                 	db	0
  1207  011FBF  00                 	db	0
  1208  011FC0  00                 	db	0
  1209  011FC1  00                 	db	0
  1210  011FC2  00                 	db	0
  1211  011FC3  00                 	db	0
  1212  011FC4  00                 	db	0
  1213  011FC5  00                 	db	0
  1214  011FC6  00                 	db	0
  1215  011FC7  00                 	db	0
  1216  011FC8  00                 	db	0
  1217  011FC9  00                 	db	0
  1218  011FCA  00                 	db	0
  1219  011FCB  00                 	db	0
  1220  011FCC  00                 	db	0
  1221  011FCD  00                 	db	0
  1222  011FCE  00                 	db	0
  1223  011FCF  00                 	db	0
  1224  011FD0  00                 	db	0
  1225  011FD1  00                 	db	0
  1226  011FD2  00                 	db	0
  1227  011FD3  00                 	db	0
  1228  011FD4  00                 	db	0
  1229  011FD5  00                 	db	0
  1230  011FD6  00                 	db	0
  1231  011FD7  00                 	db	0
  1232  011FD8  00                 	db	0
  1233  011FD9  00                 	db	0
  1234  011FDA  00                 	db	0
  1235  011FDB  00                 	db	0
  1236  011FDC  00                 	db	0
  1237  011FDD  00                 	db	0
  1238  011FDE  00                 	db	0
  1239  011FDF  00                 	db	0
  1240  011FE0  00                 	db	0
  1241  011FE1  00                 	db	0
  1242                           
  1243                           	psect	idataBANK0
  1244  01575C                     __pidataBANK0:
  1245                           	callstack 0
  1246                           
  1247                           ;initializer for _ps_type_ptr
  1248  01575C  C2                 	db	low _ps_type
  1249  01575D  02                 	db	high _ps_type
  1250                           
  1251                           	psect	idataBANK1
  1252  015704                     __pidataBANK1:
  1253                           	callstack 0
  1254                           
  1255                           ;initializer for stoa@F1164
  1256  015704  28                 	db	40
  1257  015705  6E                 	db	110
  1258  015706  75                 	db	117
  1259  015707  6C                 	db	108
  1260  015708  6C                 	db	108
  1261  015709  29                 	db	41
  1262  01570A  00                 	db	0
  1263                           
  1264                           ;initializer for _build_time
  1265  01570B  BD                 	db	low STR_2
  1266  01570C  FF                 	db	high STR_2
  1267                           
  1268                           ;initializer for _build_date
  1269  01570D  B1                 	db	low STR_1
  1270  01570E  FF                 	db	high STR_1
  1271                           
  1272                           ;initializer for _static_ps
  1273  01570F  14                 	db	20
  1274                           
  1275                           ;initializer for _roll_max
  1276  015710  13                 	db	19
  1277                           
  1278                           	psect	idataBANK2
  1279  014820                     __pidataBANK2:
  1280                           	callstack 0
  1281                           
  1282                           ;initializer for _g_cmds
  1283  014820  F5                 	db	low STR_20
  1284  014821  FF                 	db	high STR_20
  1285  014822  3E                 	db	low _fh_pr
  1286  014823  53                 	db	high _fh_pr
  1287  014824  01                 	db	low (_fh_pr shr (0+16))
  1288  014825  F8                 	db	low STR_21
  1289  014826  FF                 	db	high STR_21
  1290  014827  EE                 	db	low _fh_ps
  1291  014828  53                 	db	high _fh_ps
  1292  014829  01                 	db	low (_fh_ps shr (0+16))
  1293  01482A  EF                 	db	low STR_22
  1294  01482B  FF                 	db	high STR_22
  1295  01482C  C6                 	db	low _fh_po
  1296  01482D  55                 	db	high _fh_po
  1297  01482E  01                 	db	low (_fh_po shr (0+16))
  1298  01482F  F2                 	db	low STR_23
  1299  014830  FF                 	db	high STR_23
  1300  014831  AE                 	db	low _fh_pp
  1301  014832  55                 	db	high _fh_pp
  1302  014833  01                 	db	low (_fh_pp shr (0+16))
  1303  014834  FB                 	db	low STR_24
  1304  014835  FF                 	db	high STR_24
  1305  014836  CE                 	db	low _fh_pu
  1306  014837  54                 	db	high _fh_pu
  1307  014838  01                 	db	low (_fh_pu shr (0+16))
  1308  014839  E9                 	db	low STR_25
  1309  01483A  FF                 	db	high STR_25
  1310  01483B  B0                 	db	low _fh_pd
  1311  01483C  54                 	db	high _fh_pd
  1312  01483D  01                 	db	low (_fh_pd shr (0+16))
  1313  01483E  EC                 	db	low STR_26
  1314  01483F  FF                 	db	high STR_26
  1315  014840  92                 	db	low _fh_pl
  1316  014841  54                 	db	high _fh_pl
  1317  014842  01                 	db	low (_fh_pl shr (0+16))
  1318  014843  E3                 	db	low STR_27
  1319  014844  FF                 	db	high STR_27
  1320  014845  7A                 	db	low _fh_p0
  1321  014846  52                 	db	high _fh_p0
  1322  014847  01                 	db	low (_fh_p0 shr (0+16))
  1323  014848  E6                 	db	low STR_28
  1324  014849  FF                 	db	high STR_28
  1325  01484A  52                 	db	low _fh_p1
  1326  01484B  52                 	db	high _fh_p1
  1327  01484C  01                 	db	low (_fh_p1 shr (0+16))
  1328  01484D  00                 	db	0
  1329  01484E  00                 	db	0
  1330  01484F  00                 	db	0
  1331  014850  00                 	db	0
  1332  014851  00                 	db	0
  1333                           
  1334                           ;initializer for _ps_type
  1335                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1336  014852  7597               	dw	30103
  1337  014854  3ECF               	dw	16079
  1338                           
  1339                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1340  014856  126F               	dw	4719
  1341  014858  3B83               	dw	15235
  1342                           
  1343                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1344  01485A  5C29               	dw	23593
  1345  01485C  3F4F               	dw	16207
  1346                           
  1347                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1348  01485E  126F               	dw	4719
  1349  014860  3B83               	dw	15235
  1350                           
  1351                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1352  014862  7597               	dw	30103
  1353  014864  3ECF               	dw	16079
  1354                           
  1355                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1356  014866  126F               	dw	4719
  1357  014868  3B83               	dw	15235
  1358                           
  1359                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1360  01486A  7597               	dw	30103
  1361  01486C  3ECF               	dw	16079
  1362                           
  1363                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1364  01486E  126F               	dw	4719
  1365  014870  3B83               	dw	15235
  1366                           
  1367                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1368  014872  7597               	dw	30103
  1369  014874  3ECF               	dw	16079
  1370                           
  1371                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 24 2022", *build_time = "17:47:44";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1372  014876  126F               	dw	4719
  1373  014878  3B83               	dw	15235
  1374                           
  1375                           	psect	mediumconst
  1376  00FDBE                     __pmediumconst:
  1377                           	callstack 0
  1378  00FDBE  00                 	db	0
  1379  00FDBF  02                 	db	2
  1380  00FDC0  40                 	db	64
  1381  00FDC1  00                 	db	0
  1382  00FDC2  50                 	db	80
  1383  00FDC3  00                 	db	0
  1384  00FDC4                     __end_of_spi1_configuration:
  1385                           	callstack 0
  1386  00FDC4  4260               	dw	16992
  1387  00FDC6  0DA2               	dw	3490
  1388  00FDC8                     __end_of_tiny:
  1389                           	callstack 0
  1390  00FDC8                     _cmdm:
  1391                           	callstack 0
  1392  00FDC8  0D                 	db	13
  1393  00FDC9  0A                 	db	10
  1394  00FDCA  20                 	db	32
  1395  00FDCB  43                 	db	67
  1396  00FDCC  6F                 	db	111
  1397  00FDCD  6D                 	db	109
  1398  00FDCE  6D                 	db	109
  1399  00FDCF  61                 	db	97
  1400  00FDD0  6E                 	db	110
  1401  00FDD1  64                 	db	100
  1402  00FDD2  20                 	db	32
  1403  00FDD3  70                 	db	112
  1404  00FDD4  72                 	db	114
  1405  00FDD5  6F                 	db	111
  1406  00FDD6  63                 	db	99
  1407  00FDD7  65                 	db	101
  1408  00FDD8  73                 	db	115
  1409  00FDD9  73                 	db	115
  1410  00FDDA  6F                 	db	111
  1411  00FDDB  72                 	db	114
  1412  00FDDC  20                 	db	32
  1413  00FDDD  56                 	db	86
  1414  00FDDE  31                 	db	49
  1415  00FDDF  2E                 	db	46
  1416  00FDE0  30                 	db	48
  1417  00FDE1  0D                 	db	13
  1418  00FDE2  0A                 	db	10
  1419  00FDE3  00                 	db	0
  1420  00FDE4                     __end_of_cmdm:
  1421                           	callstack 0
  1422  00FDE4                     _build_version:
  1423                           	callstack 0
  1424  00FDE4  56                 	db	86
  1425  00FDE5  31                 	db	49
  1426  00FDE6  2E                 	db	46
  1427  00FDE7  30                 	db	48
  1428  00FDE8  32                 	db	50
  1429  00FDE9  20                 	db	32
  1430  00FDEA  50                 	db	80
  1431  00FDEB  53                 	db	83
  1432  00FDEC  20                 	db	32
  1433  00FDED  54                 	db	84
  1434  00FDEE  45                 	db	69
  1435  00FDEF  53                 	db	83
  1436  00FDF0  54                 	db	84
  1437  00FDF1  00                 	db	0
  1438  00FDF2                     __end_of_build_version:
  1439                           	callstack 0
  1440  0000                     _NVMADRL	set	14816
  1441  0000                     _NVMADRH	set	14817
  1442  0000                     _NVMCON1bits	set	14821
  1443  0000                     _DMA1CON0	set	15356
  1444  0000                     _DMA1AIRQ	set	15358
  1445  0000                     _DMA1SIRQ	set	15359
  1446  0000                     _DMA1CON1	set	15357
  1447  0000                     _T2CON	set	16300
  1448  0000                     _T5CON	set	16282
  1449  0000                     _TMR5L	set	16280
  1450  0000                     _TMR5H	set	16281
  1451  0000                     _T5GCON	set	16283
  1452  0000                     _IVTBASEL	set	16341
  1453  0000                     _IVTBASEH	set	16342
  1454  0000                     _IVTBASEU	set	16343
  1455  0000                     _T6CON	set	16276
  1456  0000                     _T6RST	set	16279
  1457  0000                     _ADERRL	set	16098
  1458  0000                     _ADERRH	set	16099
  1459  0000                     _ADPREVL	set	16109
  1460  0000                     _ADPREVH	set	16110
  1461  0000                     _ADFLTRL	set	16102
  1462  0000                     _ADFLTRH	set	16103
  1463  0000                     _ADACCL	set	16104
  1464  0000                     _ADACCH	set	16105
  1465  0000                     _ADCNT	set	16107
  1466  0000                     _ADRESL	set	16111
  1467  0000                     _ADRESH	set	16112
  1468  0000                     _ADCON0	set	16120
  1469  0000                     _ADCON1	set	16121
  1470  0000                     _ADPREH	set	16119
  1471  0000                     _ADPREL	set	16118
  1472  0000                     _ADCAP	set	16117
  1473  0000                     _ADACQH	set	16116
  1474  0000                     _ADPCH	set	16113
  1475  0000                     _ADRPT	set	16108
  1476  0000                     _ADACCU	set	16106
  1477  0000                     _ADSTPTH	set	16101
  1478  0000                     _ADSTPTL	set	16100
  1479  0000                     _ADUTHH	set	16097
  1480  0000                     _ADUTHL	set	16096
  1481  0000                     _ADLTHH	set	16095
  1482  0000                     _PRLOCK	set	14831
  1483  0000                     _OSCTUNE	set	14814
  1484  0000                     _OSCFRQ	set	14815
  1485  0000                     _OSCEN	set	14813
  1486  0000                     _TRISD	set	16325
  1487  0000                     _TRISC	set	16324
  1488  0000                     _TRISB	set	16323
  1489  0000                     _LATC	set	16316
  1490  0000                     _LATB	set	16315
  1491  0000                     _PLLR	set	118496
  1492  0000                     _PRLOCKbits	set	14831
  1493  0000                     _DMA1CON0bits	set	15356
  1494  0000                     _DMA1CON1bits	set	15357
  1495  0000                     _U1UIRbits	set	15864
  1496  0000                     _U1ERRIRbits	set	15865
  1497  0000                     _SPI1CON0bits	set	15636
  1498  0000                     _LATCbits	set	16316
  1499  0000                     _LATFbits	set	16319
  1500  0000                     _LATAbits	set	16314
  1501  0000                     _LATDbits	set	16317
  1502  0000                     _LATEbits	set	16318
  1503  0000                     _TRISCbits	set	16324
  1504  0000                     _T5CONbits	set	16282
  1505  0000                     _IVTLOCKbits	set	16340
  1506  0000                     _GIE	set	130711
  1507  0000                     _IPR1bits	set	14721
  1508  0000                     _IPR2bits	set	14722
  1509  0000                     _PIE1bits	set	14737
  1510  0000                     _PIR1bits	set	14753
  1511  0000                     _PMD0	set	14784
  1512  0000                     _OSCCON1	set	14809
  1513  0000                     _RC3PPS	set	14867
  1514  0000                     _RD2PPS	set	14874
  1515  0000                     _ANSELA	set	14912
  1516  0000                     _ANSELB	set	14928
  1517  0000                     _ANSELC	set	14944
  1518  0000                     _ANSELD	set	14960
  1519  0000                     _LATA	set	16314
  1520  0000                     _LATD	set	16317
  1521  0000                     _LATE	set	16318
  1522  0000                     _TRISA	set	16322
  1523  0000                     _TRISE	set	16326
  1524  0000                     _LATF	set	16319
  1525  0000                     _PORTAbits	set	16330
  1526  0000                     _INTCON0bits	set	16338
  1527  0000                     _TRISF	set	16327
  1528  0000                     _INLVLD	set	14964
  1529  0000                     _SLRCOND	set	14963
  1530  0000                     _ODCOND	set	14962
  1531  0000                     _RD0I2C	set	14970
  1532  0000                     _WPUD	set	14961
  1533  0000                     _ANSELE	set	14976
  1534  0000                     _INLVLC	set	14948
  1535  0000                     _SLRCONC	set	14947
  1536  0000                     _ODCONC	set	14946
  1537  0000                     _RC3I2C	set	14954
  1538  0000                     _WPUC	set	14945
  1539  0000                     _INLVLB	set	14932
  1540  0000                     _SLRCONB	set	14931
  1541  0000                     _ODCONB	set	14930
  1542  0000                     _RB1I2C	set	14938
  1543  0000                     _WPUB	set	14929
  1544  0000                     _INLVLE	set	14980
  1545  0000                     _SLRCONE	set	14979
  1546  0000                     _ODCONE	set	14978
  1547  0000                     _WPUE	set	14977
  1548  0000                     _ANSELF	set	14992
  1549  0000                     _SPI1SCKPPS	set	15070
  1550  0000                     _INLVLF	set	14996
  1551  0000                     _SLRCONF	set	14995
  1552  0000                     _ODCONF	set	14994
  1553  0000                     _WPUF	set	14993
  1554  0000                     _INLVLA	set	14916
  1555  0000                     _SLRCONA	set	14915
  1556  0000                     _ODCONA	set	14914
  1557  0000                     _WPUA	set	14913
  1558  0000                     _RB2I2C	set	14939
  1559  0000                     _RC4I2C	set	14955
  1560  0000                     _RD1I2C	set	14971
  1561  0000                     _RF2PPS	set	14890
  1562  0000                     _SPI1SDIPPS	set	15071
  1563  0000                     _U1RXPPS	set	15077
  1564  0000                     _RC5PPS	set	14869
  1565  0000                     _RC6PPS	set	14870
  1566  0000                     _DMA1SSA	set	15353
  1567  0000                     _DMA2DSZ	set	15310
  1568  0000                     _DMA2DSA	set	15312
  1569  0000                     _DMA1DPTR	set	15340
  1570  0000                     _DMA1DSZ	set	15342
  1571  0000                     _DMA1DSA	set	15344
  1572  0000                     _DMA2CON0bits	set	15324
  1573  0000                     _DMA2CON1bits	set	15325
  1574  0000                     _SPI1RXB	set	15632
  1575  0000                     _SPI1TCNTL	set	15634
  1576  0000                     _SPI1CON0	set	15636
  1577  0000                     _DAC1CON1	set	16028
  1578  0000                     _DAC1CON0	set	16030
  1579  0000                     _SPI1TXB	set	15633
  1580  0000                     _ADLTHL	set	16094
  1581  0000                     _OSCCON3	set	14811
  1582  0000                     _PMD7	set	14791
  1583  0000                     _PMD6	set	14790
  1584  0000                     _PMD5	set	14789
  1585  0000                     _PMD4	set	14788
  1586  0000                     _PMD3	set	14787
  1587  0000                     _PMD2	set	14786
  1588  0000                     _PMD1	set	14785
  1589  0000                     _DMA1PR	set	14835
  1590  0000                     _ADACQL	set	16115
  1591  0000                     _CCPTMRS1bits	set	16223
  1592  0000                     _PWM5DCL	set	16236
  1593  0000                     _PWM5DCH	set	16237
  1594  0000                     _PWM5CON	set	16238
  1595  0000                     _T6TMR	set	16274
  1596  0000                     _T6PR	set	16275
  1597  0000                     _T6HLT	set	16277
  1598  0000                     _T6CLKCON	set	16278
  1599  0000                     _ADCLK	set	16127
  1600  0000                     _ADACT	set	16126
  1601  0000                     _ADREF	set	16125
  1602  0000                     _ADSTAT	set	16124
  1603  0000                     _ADCON3	set	16123
  1604  0000                     _ADCON2	set	16122
  1605  0000                     _PIR4bits	set	14756
  1606  0000                     _PIR2bits	set	14754
  1607  0000                     _PIR8bits	set	14760
  1608  0000                     _PIR9bits	set	14761
  1609  0000                     _PIE3bits	set	14739
  1610  0000                     _PIE2bits	set	14738
  1611  0000                     _PIE8bits	set	14744
  1612  0000                     _PIE9bits	set	14745
  1613  0000                     _PIR0bits	set	14752
  1614  0000                     _IVTLOCK	set	16340
  1615  0000                     _TABLAT	set	16373
  1616  0000                     _TBLPTRL	set	16374
  1617  0000                     _TBLPTRH	set	16375
  1618  0000                     _TBLPTRU	set	16376
  1619  0000                     _IPR8bits	set	14728
  1620  0000                     _IPR9bits	set	14729
  1621  0000                     _IPR3bits	set	14723
  1622  0000                     _T2TMR	set	16298
  1623  0000                     _T2PR	set	16299
  1624  0000                     _T2HLT	set	16301
  1625  0000                     _T2CLKCON	set	16302
  1626  0000                     _T5CLK	set	16285
  1627  0000                     _T5GATE	set	16284
  1628  0000                     _SPI1STATUSbits	set	15639
  1629  0000                     _SPI1BAUD	set	15641
  1630  0000                     _SPI1CLK	set	15644
  1631  0000                     _SPI1CON2	set	15638
  1632  0000                     _SPI1CON1	set	15637
  1633  0000                     _U1RXB	set	15848
  1634  0000                     _U1TXB	set	15850
  1635  0000                     _U1P1L	set	15852
  1636  0000                     _SPI1INTFbits	set	15642
  1637  0000                     _PWM6DCL	set	16232
  1638  0000                     _PWM6DCH	set	16233
  1639  0000                     _PWM6CON	set	16234
  1640  0000                     _T2RST	set	16303
  1641  0000                     _DMA1SPTR	set	15348
  1642  0000                     _DMA1SSZ	set	15351
  1643  0000                     _U1ERRIE	set	15866
  1644  0000                     _U1ERRIR	set	15865
  1645  0000                     _U1UIR	set	15864
  1646  0000                     _U1FIFO	set	15863
  1647  0000                     _U1BRGH	set	15862
  1648  0000                     _U1BRGL	set	15861
  1649  0000                     _U1CON2	set	15860
  1650  0000                     _U1CON1	set	15859
  1651  0000                     _U1CON0	set	15858
  1652  0000                     _U1P3H	set	15857
  1653  0000                     _U1P3L	set	15856
  1654  0000                     _U1P2H	set	15855
  1655  0000                     _U1P2L	set	15854
  1656  0000                     _U1P1H	set	15853
  1657  0000                     _NVMCON2	set	14822
  1658  0000                     _NVMDAT	set	14819
  1659  0000                     _PORTBbits	set	16331
  1660  0000                     _DMA2SSA	set	15321
  1661  0000                     _DMA2SSZ	set	15319
  1662  00FDF2                     STR_15:
  1663                           
  1664                           ; BSR set to: 61
  1665  00FDF2  20                 	db	32
  1666  00FDF3  50                 	db	80	;'P'
  1667  00FDF4  53                 	db	83	;'S'
  1668  00FDF5  20                 	db	32
  1669  00FDF6  54                 	db	84	;'T'
  1670  00FDF7  59                 	db	89	;'Y'
  1671  00FDF8  50                 	db	80	;'P'
  1672  00FDF9  45                 	db	69	;'E'
  1673  00FDFA  20                 	db	32
  1674  00FDFB  25                 	db	37
  1675  00FDFC  31                 	db	49	;'1'
  1676  00FDFD  75                 	db	117	;'u'
  1677  00FDFE  3A                 	db	58	;':'
  1678  00FDFF  20                 	db	32
  1679  00FE00  50                 	db	80	;'P'
  1680  00FE01  53                 	db	83	;'S'
  1681  00FE02  20                 	db	32
  1682  00FE03  54                 	db	84	;'T'
  1683  00FE04  65                 	db	101	;'e'
  1684  00FE05  73                 	db	115	;'s'
  1685  00FE06  74                 	db	116	;'t'
  1686  00FE07  20                 	db	32
  1687  00FE08  25                 	db	37
  1688  00FE09  31                 	db	49	;'1'
  1689  00FE0A  75                 	db	117	;'u'
  1690  00FE0B  3A                 	db	58	;':'
  1691  00FE0C  20                 	db	32
  1692  00FE0D  44                 	db	68	;'D'
  1693  00FE0E  41                 	db	65	;'A'
  1694  00FE0F  43                 	db	67	;'C'
  1695  00FE10  20                 	db	32
  1696  00FE11  4F                 	db	79	;'O'
  1697  00FE12  55                 	db	85	;'U'
  1698  00FE13  54                 	db	84	;'T'
  1699  00FE14  20                 	db	32
  1700  00FE15  25                 	db	37
  1701  00FE16  34                 	db	52	;'4'
  1702  00FE17  2E                 	db	46
  1703  00FE18  34                 	db	52	;'4'
  1704  00FE19  75                 	db	117	;'u'
  1705  00FE1A  6D                 	db	109	;'m'
  1706  00FE1B  56                 	db	86	;'V'
  1707  00FE1C  20                 	db	32
  1708  00FE1D  42                 	db	66	;'B'
  1709  00FE1E  3D                 	db	61	;'='
  1710  00FE1F  25                 	db	37
  1711  00FE20  2E                 	db	46
  1712  00FE21  32                 	db	50	;'2'
  1713  00FE22  75                 	db	117	;'u'
  1714  00FE23  2C                 	db	44
  1715  00FE24  20                 	db	32
  1716  00FE25  53                 	db	83	;'S'
  1717  00FE26  75                 	db	117	;'u'
  1718  00FE27  70                 	db	112	;'p'
  1719  00FE28  70                 	db	112	;'p'
  1720  00FE29  6C                 	db	108	;'l'
  1721  00FE2A  79                 	db	121	;'y'
  1722  00FE2B  20                 	db	32
  1723  00FE2C  52                 	db	82	;'R'
  1724  00FE2D  65                 	db	101	;'e'
  1725  00FE2E  61                 	db	97	;'a'
  1726  00FE2F  64                 	db	100	;'d'
  1727  00FE30  42                 	db	66	;'B'
  1728  00FE31  61                 	db	97	;'a'
  1729  00FE32  63                 	db	99	;'c'
  1730  00FE33  6B                 	db	107	;'k'
  1731  00FE34  20                 	db	32
  1732  00FE35  25                 	db	37
  1733  00FE36  34                 	db	52	;'4'
  1734  00FE37  2E                 	db	46
  1735  00FE38  34                 	db	52	;'4'
  1736  00FE39  75                 	db	117	;'u'
  1737  00FE3A  6D                 	db	109	;'m'
  1738  00FE3B  56                 	db	86	;'V'
  1739  00FE3C  20                 	db	32
  1740  00FE3D  56                 	db	86	;'V'
  1741  00FE3E  3D                 	db	61	;'='
  1742  00FE3F  25                 	db	37
  1743  00FE40  2B                 	db	43
  1744  00FE41  36                 	db	54	;'6'
  1745  00FE42  2E                 	db	46
  1746  00FE43  31                 	db	49	;'1'
  1747  00FE44  66                 	db	102	;'f'
  1748  00FE45  56                 	db	86	;'V'
  1749  00FE46  20                 	db	32
  1750  00FE47  25                 	db	37
  1751  00FE48  34                 	db	52	;'4'
  1752  00FE49  2E                 	db	46
  1753  00FE4A  34                 	db	52	;'4'
  1754  00FE4B  75                 	db	117	;'u'
  1755  00FE4C  6D                 	db	109	;'m'
  1756  00FE4D  56                 	db	86	;'V'
  1757  00FE4E  20                 	db	32
  1758  00FE4F  49                 	db	73	;'I'
  1759  00FE50  3D                 	db	61	;'='
  1760  00FE51  25                 	db	37
  1761  00FE52  2B                 	db	43
  1762  00FE53  33                 	db	51	;'3'
  1763  00FE54  2E                 	db	46
  1764  00FE55  31                 	db	49	;'1'
  1765  00FE56  66                 	db	102	;'f'
  1766  00FE57  6D                 	db	109	;'m'
  1767  00FE58  41                 	db	65	;'A'
  1768  00FE59  20                 	db	32
  1769  00FE5A  3A                 	db	58	;':'
  1770  00FE5B  20                 	db	32
  1771  00FE5C  53                 	db	83	;'S'
  1772  00FE5D  74                 	db	116	;'t'
  1773  00FE5E  61                 	db	97	;'a'
  1774  00FE5F  74                 	db	116	;'t'
  1775  00FE60  69                 	db	105	;'i'
  1776  00FE61  73                 	db	115	;'s'
  1777  00FE62  74                 	db	116	;'t'
  1778  00FE63  69                 	db	105	;'i'
  1779  00FE64  63                 	db	99	;'c'
  1780  00FE65  73                 	db	115	;'s'
  1781  00FE66  20                 	db	32
  1782  00FE67  53                 	db	83	;'S'
  1783  00FE68  74                 	db	116	;'t'
  1784  00FE69  64                 	db	100	;'d'
  1785  00FE6A  3D                 	db	61	;'='
  1786  00FE6B  25                 	db	37
  1787  00FE6C  36                 	db	54	;'6'
  1788  00FE6D  2E                 	db	46
  1789  00FE6E  31                 	db	49	;'1'
  1790  00FE6F  66                 	db	102	;'f'
  1791  00FE70  56                 	db	86	;'V'
  1792  00FE71  20                 	db	32
  1793  00FE72  56                 	db	86	;'V'
  1794  00FE73  61                 	db	97	;'a'
  1795  00FE74  72                 	db	114	;'r'
  1796  00FE75  3D                 	db	61	;'='
  1797  00FE76  25                 	db	37
  1798  00FE77  36                 	db	54	;'6'
  1799  00FE78  2E                 	db	46
  1800  00FE79  31                 	db	49	;'1'
  1801  00FE7A  66                 	db	102	;'f'
  1802  00FE7B  56                 	db	86	;'V'
  1803  00FE7C  20                 	db	32
  1804  00FE7D  4D                 	db	77	;'M'
  1805  00FE7E  65                 	db	101	;'e'
  1806  00FE7F  61                 	db	97	;'a'
  1807  00FE80  6E                 	db	110	;'n'
  1808  00FE81  3D                 	db	61	;'='
  1809  00FE82  25                 	db	37
  1810  00FE83  36                 	db	54	;'6'
  1811  00FE84  2E                 	db	46
  1812  00FE85  31                 	db	49	;'1'
  1813  00FE86  66                 	db	102	;'f'
  1814  00FE87  56                 	db	86	;'V'
  1815  00FE88  0D                 	db	13
  1816  00FE89  0A                 	db	10
  1817  00FE8A  00                 	db	0
  1818  00FE8B                     STR_11:
  1819                           
  1820                           ; BSR set to: 61
  1821  00FE8B  0D                 	db	13
  1822  00FE8C  0A                 	db	10
  1823  00FE8D  20                 	db	32
  1824  00FE8E  41                 	db	65	;'A'
  1825  00FE8F  43                 	db	67	;'C'
  1826  00FE90  43                 	db	67	;'C'
  1827  00FE91  45                 	db	69	;'E'
  1828  00FE92  4C                 	db	76	;'L'
  1829  00FE93  20                 	db	32
  1830  00FE94  53                 	db	83	;'S'
  1831  00FE95  75                 	db	117	;'u'
  1832  00FE96  70                 	db	112	;'p'
  1833  00FE97  70                 	db	112	;'p'
  1834  00FE98  72                 	db	114	;'r'
  1835  00FE99  65                 	db	101	;'e'
  1836  00FE9A  73                 	db	115	;'s'
  1837  00FE9B  73                 	db	115	;'s'
  1838  00FE9C  69                 	db	105	;'i'
  1839  00FE9D  6F                 	db	111	;'o'
  1840  00FE9E  6E                 	db	110	;'n'
  1841  00FE9F  20                 	db	32
  1842  00FEA0  53                 	db	83	;'S'
  1843  00FEA1  75                 	db	117	;'u'
  1844  00FEA2  70                 	db	112	;'p'
  1845  00FEA3  70                 	db	112	;'p'
  1846  00FEA4  6C                 	db	108	;'l'
  1847  00FEA5  79                 	db	121	;'y'
  1848  00FEA6  20                 	db	32
  1849  00FEA7  0D                 	db	13
  1850  00FEA8  0A                 	db	10
  1851  00FEA9  00                 	db	0
  1852  00FEAA                     STR_10:
  1853                           
  1854                           ; BSR set to: 61
  1855  00FEAA  0D                 	db	13
  1856  00FEAB  0A                 	db	10
  1857  00FEAC  20                 	db	32
  1858  00FEAD  45                 	db	69	;'E'
  1859  00FEAE  58                 	db	88	;'X'
  1860  00FEAF  54                 	db	84	;'T'
  1861  00FEB0  20                 	db	32
  1862  00FEB1  53                 	db	83	;'S'
  1863  00FEB2  75                 	db	117	;'u'
  1864  00FEB3  70                 	db	112	;'p'
  1865  00FEB4  70                 	db	112	;'p'
  1866  00FEB5  72                 	db	114	;'r'
  1867  00FEB6  65                 	db	101	;'e'
  1868  00FEB7  73                 	db	115	;'s'
  1869  00FEB8  73                 	db	115	;'s'
  1870  00FEB9  69                 	db	105	;'i'
  1871  00FEBA  6F                 	db	111	;'o'
  1872  00FEBB  6E                 	db	110	;'n'
  1873  00FEBC  20                 	db	32
  1874  00FEBD  53                 	db	83	;'S'
  1875  00FEBE  75                 	db	117	;'u'
  1876  00FEBF  70                 	db	112	;'p'
  1877  00FEC0  70                 	db	112	;'p'
  1878  00FEC1  6C                 	db	108	;'l'
  1879  00FEC2  79                 	db	121	;'y'
  1880  00FEC3  20                 	db	32
  1881  00FEC4  0D                 	db	13
  1882  00FEC5  0A                 	db	10
  1883  00FEC6  00                 	db	0
  1884  00FEC7                     STR_4:
  1885                           
  1886                           ; BSR set to: 61
  1887  00FEC7  0D                 	db	13
  1888  00FEC8  0A                 	db	10
  1889  00FEC9  20                 	db	32
  1890  00FECA  53                 	db	83	;'S'
  1891  00FECB  74                 	db	116	;'t'
  1892  00FECC  65                 	db	101	;'e'
  1893  00FECD  61                 	db	97	;'a'
  1894  00FECE  64                 	db	100	;'d'
  1895  00FECF  79                 	db	121	;'y'
  1896  00FED0  20                 	db	32
  1897  00FED1  56                 	db	86	;'V'
  1898  00FED2  44                 	db	68	;'D'
  1899  00FED3  43                 	db	67	;'C'
  1900  00FED4  20                 	db	32
  1901  00FED5  4F                 	db	79	;'O'
  1902  00FED6  4E                 	db	78	;'N'
  1903  00FED7  20                 	db	32
  1904  00FED8  3A                 	db	58	;':'
  1905  00FED9  20                 	db	32
  1906  00FEDA  44                 	db	68	;'D'
  1907  00FEDB  65                 	db	101	;'e'
  1908  00FEDC  66                 	db	102	;'f'
  1909  00FEDD  61                 	db	97	;'a'
  1910  00FEDE  75                 	db	117	;'u'
  1911  00FEDF  6C                 	db	108	;'l'
  1912  00FEE0  74                 	db	116	;'t'
  1913  00FEE1  0D                 	db	13
  1914  00FEE2  0A                 	db	10
  1915  00FEE3  00                 	db	0
  1916  00FEE4                     STR_18:
  1917                           
  1918                           ; BSR set to: 61
  1919  00FEE4  4D                 	db	77	;'M'
  1920  00FEE5  25                 	db	37
  1921  00FEE6  31                 	db	49	;'1'
  1922  00FEE7  75                 	db	117	;'u'
  1923  00FEE8  2C                 	db	44
  1924  00FEE9  20                 	db	32
  1925  00FEEA  50                 	db	80	;'P'
  1926  00FEEB  25                 	db	37
  1927  00FEEC  31                 	db	49	;'1'
  1928  00FEED  75                 	db	117	;'u'
  1929  00FEEE  2C                 	db	44
  1930  00FEEF  20                 	db	32
  1931  00FEF0  44                 	db	68	;'D'
  1932  00FEF1  25                 	db	37
  1933  00FEF2  33                 	db	51	;'3'
  1934  00FEF3  2E                 	db	46
  1935  00FEF4  31                 	db	49	;'1'
  1936  00FEF5  66                 	db	102	;'f'
  1937  00FEF6  20                 	db	32
  1938  00FEF7  56                 	db	86	;'V'
  1939  00FEF8  25                 	db	37
  1940  00FEF9  33                 	db	51	;'3'
  1941  00FEFA  2E                 	db	46
  1942  00FEFB  31                 	db	49	;'1'
  1943  00FEFC  66                 	db	102	;'f'
  1944  00FEFD  20                 	db	32
  1945  00FEFE  20                 	db	32
  1946  00FEFF  20                 	db	32
  1947  00FF00  00                 	db	0
  1948  00FF01                     STR_16:
  1949                           
  1950                           ; BSR set to: 61
  1951  00FF01  25                 	db	37
  1952  00FF02  34                 	db	52	;'4'
  1953  00FF03  2E                 	db	46
  1954  00FF04  34                 	db	52	;'4'
  1955  00FF05  75                 	db	117	;'u'
  1956  00FF06  6D                 	db	109	;'m'
  1957  00FF07  56                 	db	86	;'V'
  1958  00FF08  20                 	db	32
  1959  00FF09  25                 	db	37
  1960  00FF0A  34                 	db	52	;'4'
  1961  00FF0B  2E                 	db	46
  1962  00FF0C  34                 	db	52	;'4'
  1963  00FF0D  75                 	db	117	;'u'
  1964  00FF0E  6D                 	db	109	;'m'
  1965  00FF0F  56                 	db	86	;'V'
  1966  00FF10  20                 	db	32
  1967  00FF11  25                 	db	37
  1968  00FF12  34                 	db	52	;'4'
  1969  00FF13  2E                 	db	46
  1970  00FF14  34                 	db	52	;'4'
  1971  00FF15  75                 	db	117	;'u'
  1972  00FF16  6D                 	db	109	;'m'
  1973  00FF17  56                 	db	86	;'V'
  1974  00FF18  00                 	db	0
  1975  00FF19                     STR_19:
  1976                           
  1977                           ; BSR set to: 61
  1978  00FF19  56                 	db	86	;'V'
  1979  00FF1A  3D                 	db	61	;'='
  1980  00FF1B  25                 	db	37
  1981  00FF1C  2B                 	db	43
  1982  00FF1D  36                 	db	54	;'6'
  1983  00FF1E  2E                 	db	46
  1984  00FF1F  31                 	db	49	;'1'
  1985  00FF20  66                 	db	102	;'f'
  1986  00FF21  56                 	db	86	;'V'
  1987  00FF22  20                 	db	32
  1988  00FF23  49                 	db	73	;'I'
  1989  00FF24  3D                 	db	61	;'='
  1990  00FF25  25                 	db	37
  1991  00FF26  2B                 	db	43
  1992  00FF27  33                 	db	51	;'3'
  1993  00FF28  2E                 	db	46
  1994  00FF29  31                 	db	49	;'1'
  1995  00FF2A  66                 	db	102	;'f'
  1996  00FF2B  6D                 	db	109	;'m'
  1997  00FF2C  41                 	db	65	;'A'
  1998  00FF2D  20                 	db	32
  1999  00FF2E  20                 	db	32
  2000  00FF2F  00                 	db	0
  2001  00FF30                     STR_6:
  2002                           
  2003                           ; BSR set to: 61
  2004  00FF30  0D                 	db	13
  2005  00FF31  0A                 	db	10
  2006  00FF32  20                 	db	32
  2007  00FF33  56                 	db	86	;'V'
  2008  00FF34  6F                 	db	111	;'o'
  2009  00FF35  6C                 	db	108	;'l'
  2010  00FF36  74                 	db	116	;'t'
  2011  00FF37  61                 	db	97	;'a'
  2012  00FF38  67                 	db	103	;'g'
  2013  00FF39  65                 	db	101	;'e'
  2014  00FF3A  20                 	db	32
  2015  00FF3B  4F                 	db	79	;'O'
  2016  00FF3C  4E                 	db	78	;'N'
  2017  00FF3D  20                 	db	32
  2018  00FF3E  3A                 	db	58	;':'
  2019  00FF3F  20                 	db	32
  2020  00FF40  53                 	db	83	;'S'
  2021  00FF41  65                 	db	101	;'e'
  2022  00FF42  74                 	db	116	;'t'
  2023  00FF43  0D                 	db	13
  2024  00FF44  0A                 	db	10
  2025  00FF45  00                 	db	0
  2026  00FF46                     STR_8:
  2027                           
  2028                           ; BSR set to: 61
  2029  00FF46  0D                 	db	13
  2030  00FF47  0A                 	db	10
  2031  00FF48  20                 	db	32
  2032  00FF49  56                 	db	86	;'V'
  2033  00FF4A  6F                 	db	111	;'o'
  2034  00FF4B  6C                 	db	108	;'l'
  2035  00FF4C  74                 	db	116	;'t'
  2036  00FF4D  61                 	db	97	;'a'
  2037  00FF4E  67                 	db	103	;'g'
  2038  00FF4F  65                 	db	101	;'e'
  2039  00FF50  20                 	db	32
  2040  00FF51  44                 	db	68	;'D'
  2041  00FF52  4F                 	db	79	;'O'
  2042  00FF53  57                 	db	87	;'W'
  2043  00FF54  4E                 	db	78	;'N'
  2044  00FF55  20                 	db	32
  2045  00FF56  0D                 	db	13
  2046  00FF57  0A                 	db	10
  2047  00FF58  00                 	db	0
  2048  00FF59                     STR_5:
  2049                           
  2050                           ; BSR set to: 61
  2051  00FF59  0D                 	db	13
  2052  00FF5A  0A                 	db	10
  2053  00FF5B  20                 	db	32
  2054  00FF5C  56                 	db	86	;'V'
  2055  00FF5D  6F                 	db	111	;'o'
  2056  00FF5E  6C                 	db	108	;'l'
  2057  00FF5F  74                 	db	116	;'t'
  2058  00FF60  61                 	db	97	;'a'
  2059  00FF61  67                 	db	103	;'g'
  2060  00FF62  65                 	db	101	;'e'
  2061  00FF63  20                 	db	32
  2062  00FF64  4F                 	db	79	;'O'
  2063  00FF65  46                 	db	70	;'F'
  2064  00FF66  46                 	db	70	;'F'
  2065  00FF67  20                 	db	32
  2066  00FF68  0D                 	db	13
  2067  00FF69  0A                 	db	10
  2068  00FF6A  00                 	db	0
  2069  00FF6B                     STR_3:
  2070                           
  2071                           ; BSR set to: 61
  2072  00FF6B  0D                 	db	13
  2073  00FF6C  0A                 	db	10
  2074  00FF6D  20                 	db	32
  2075  00FF6E  52                 	db	82	;'R'
  2076  00FF6F  61                 	db	97	;'a'
  2077  00FF70  6D                 	db	109	;'m'
  2078  00FF71  70                 	db	112	;'p'
  2079  00FF72  20                 	db	32
  2080  00FF73  56                 	db	86	;'V'
  2081  00FF74  44                 	db	68	;'D'
  2082  00FF75  43                 	db	67	;'C'
  2083  00FF76  20                 	db	32
  2084  00FF77  4F                 	db	79	;'O'
  2085  00FF78  4E                 	db	78	;'N'
  2086  00FF79  20                 	db	32
  2087  00FF7A  0D                 	db	13
  2088  00FF7B  0A                 	db	10
  2089  00FF7C  00                 	db	0
  2090  00FF7D                     STR_9:
  2091                           
  2092                           ; BSR set to: 61
  2093  00FF7D  0D                 	db	13
  2094  00FF7E  0A                 	db	10
  2095  00FF7F  20                 	db	32
  2096  00FF80  56                 	db	86	;'V'
  2097  00FF81  6F                 	db	111	;'o'
  2098  00FF82  6C                 	db	108	;'l'
  2099  00FF83  74                 	db	116	;'t'
  2100  00FF84  61                 	db	97	;'a'
  2101  00FF85  67                 	db	103	;'g'
  2102  00FF86  65                 	db	101	;'e'
  2103  00FF87  20                 	db	32
  2104  00FF88  4C                 	db	76	;'L'
  2105  00FF89  4F                 	db	79	;'O'
  2106  00FF8A  57                 	db	87	;'W'
  2107  00FF8B  20                 	db	32
  2108  00FF8C  0D                 	db	13
  2109  00FF8D  0A                 	db	10
  2110  00FF8E  00                 	db	0
  2111  00FF8F                     STR_7:
  2112                           
  2113                           ; BSR set to: 61
  2114  00FF8F  0D                 	db	13
  2115  00FF90  0A                 	db	10
  2116  00FF91  20                 	db	32
  2117  00FF92  56                 	db	86	;'V'
  2118  00FF93  6F                 	db	111	;'o'
  2119  00FF94  6C                 	db	108	;'l'
  2120  00FF95  74                 	db	116	;'t'
  2121  00FF96  61                 	db	97	;'a'
  2122  00FF97  67                 	db	103	;'g'
  2123  00FF98  65                 	db	101	;'e'
  2124  00FF99  20                 	db	32
  2125  00FF9A  55                 	db	85	;'U'
  2126  00FF9B  50                 	db	80	;'P'
  2127  00FF9C  20                 	db	32
  2128  00FF9D  0D                 	db	13
  2129  00FF9E  0A                 	db	10
  2130  00FF9F  00                 	db	0
  2131  00FFA0                     STR_12:
  2132                           
  2133                           ; BSR set to: 61
  2134  00FFA0  0D                 	db	13
  2135  00FFA1  0A                 	db	10
  2136  00FFA2  20                 	db	32
  2137  00FFA3  42                 	db	66	;'B'
  2138  00FFA4  75                 	db	117	;'u'
  2139  00FFA5  69                 	db	105	;'i'
  2140  00FFA6  6C                 	db	108	;'l'
  2141  00FFA7  64                 	db	100	;'d'
  2142  00FFA8  20                 	db	32
  2143  00FFA9  25                 	db	37
  2144  00FFAA  73                 	db	115	;'s'
  2145  00FFAB  20                 	db	32
  2146  00FFAC  25                 	db	37
  2147  00FFAD  73                 	db	115	;'s'
  2148  00FFAE  0D                 	db	13
  2149  00FFAF  0A                 	db	10
  2150  00FFB0  00                 	db	0
  2151  00FFB1                     STR_1:
  2152                           
  2153                           ; BSR set to: 61
  2154  00FFB1  41                 	db	65	;'A'
  2155  00FFB2  70                 	db	112	;'p'
  2156  00FFB3  72                 	db	114	;'r'
  2157  00FFB4  20                 	db	32
  2158  00FFB5  32                 	db	50	;'2'
  2159  00FFB6  34                 	db	52	;'4'
  2160  00FFB7  20                 	db	32
  2161  00FFB8  32                 	db	50	;'2'
  2162  00FFB9  30                 	db	48	;'0'
  2163  00FFBA  32                 	db	50	;'2'
  2164  00FFBB  32                 	db	50	;'2'
  2165  00FFBC  00                 	db	0
  2166  00FFBD                     STR_2:
  2167                           
  2168                           ; BSR set to: 61
  2169  00FFBD  31                 	db	49	;'1'
  2170  00FFBE  37                 	db	55	;'7'
  2171  00FFBF  3A                 	db	58	;':'
  2172  00FFC0  34                 	db	52	;'4'
  2173  00FFC1  37                 	db	55	;'7'
  2174  00FFC2  3A                 	db	58	;':'
  2175  00FFC3  34                 	db	52	;'4'
  2176  00FFC4  34                 	db	52	;'4'
  2177  00FFC5  00                 	db	0
  2178  00FFC6                     STR_13:
  2179                           
  2180                           ; BSR set to: 61
  2181  00FFC6  25                 	db	37
  2182  00FFC7  73                 	db	115	;'s'
  2183  00FFC8  20                 	db	32
  2184  00FFC9  25                 	db	37
  2185  00FFCA  73                 	db	115	;'s'
  2186  00FFCB  00                 	db	0
  2187  00FFCC                     STR_30:
  2188                           
  2189                           ; BSR set to: 61
  2190  00FFCC  49                 	db	73	;'I'
  2191  00FFCD  4E                 	db	78	;'N'
  2192  00FFCE  46                 	db	70	;'F'
  2193  00FFCF  00                 	db	0
  2194  00FFD0                     STR_34:
  2195                           
  2196                           ; BSR set to: 61
  2197  00FFD0  4E                 	db	78	;'N'
  2198  00FFD1  41                 	db	65	;'A'
  2199  00FFD2  4E                 	db	78	;'N'
  2200  00FFD3  00                 	db	0
  2201  00FFD4                     STR_31:
  2202                           
  2203                           ; BSR set to: 61
  2204  00FFD4  69                 	db	105	;'i'
  2205  00FFD5  6E                 	db	110	;'n'
  2206  00FFD6  66                 	db	102	;'f'
  2207  00FFD7  00                 	db	0
  2208  00FFD8                     STR_35:
  2209                           
  2210                           ; BSR set to: 61
  2211  00FFD8  6E                 	db	110	;'n'
  2212  00FFD9  61                 	db	97	;'a'
  2213  00FFDA  6E                 	db	110	;'n'
  2214  00FFDB  00                 	db	0
  2215  00FFDC                     STR_43:
  2216                           
  2217                           ; BSR set to: 61
  2218  00FFDC  6C                 	db	108	;'l'
  2219  00FFDD  6C                 	db	108	;'l'
  2220  00FFDE  73                 	db	115	;'s'
  2221  00FFDF  00                 	db	0
  2222  00FFE0                     STR_38:
  2223                           
  2224                           ; BSR set to: 61
  2225  00FFE0  6C                 	db	108	;'l'
  2226  00FFE1  66                 	db	102	;'f'
  2227  00FFE2  00                 	db	0
  2228  00FFE3                     STR_27:
  2229                           
  2230                           ; BSR set to: 61
  2231  00FFE3  70                 	db	112	;'p'
  2232  00FFE4  30                 	db	48	;'0'
  2233  00FFE5  00                 	db	0
  2234  00FFE6                     STR_28:
  2235                           
  2236                           ; BSR set to: 61
  2237  00FFE6  70                 	db	112	;'p'
  2238  00FFE7  31                 	db	49	;'1'
  2239  00FFE8  00                 	db	0
  2240  00FFE9                     STR_25:
  2241                           
  2242                           ; BSR set to: 61
  2243  00FFE9  70                 	db	112	;'p'
  2244  00FFEA  64                 	db	100	;'d'
  2245  00FFEB  00                 	db	0
  2246  00FFEC                     STR_26:
  2247                           
  2248                           ; BSR set to: 61
  2249  00FFEC  70                 	db	112	;'p'
  2250  00FFED  6C                 	db	108	;'l'
  2251  00FFEE  00                 	db	0
  2252  00FFEF                     STR_22:
  2253                           
  2254                           ; BSR set to: 61
  2255  00FFEF  70                 	db	112	;'p'
  2256  00FFF0  6F                 	db	111	;'o'
  2257  00FFF1  00                 	db	0
  2258  00FFF2                     STR_23:
  2259                           
  2260                           ; BSR set to: 61
  2261  00FFF2  70                 	db	112	;'p'
  2262  00FFF3  70                 	db	112	;'p'
  2263  00FFF4  00                 	db	0
  2264  00FFF5                     STR_20:
  2265                           
  2266                           ; BSR set to: 61
  2267  00FFF5  70                 	db	112	;'p'
  2268  00FFF6  72                 	db	114	;'r'
  2269  00FFF7  00                 	db	0
  2270  00FFF8                     STR_21:
  2271                           
  2272                           ; BSR set to: 61
  2273  00FFF8  70                 	db	112	;'p'
  2274  00FFF9  73                 	db	115	;'s'
  2275  00FFFA  00                 	db	0
  2276  00FFFB                     STR_24:
  2277                           
  2278                           ; BSR set to: 61
  2279  00FFFB  70                 	db	112	;'p'
  2280  00FFFC  75                 	db	117	;'u'
  2281  00FFFD  00                 	db	0
  2282  00FFFE  00                 	db	0	; dummy byte at the end
  2283  0000                     
  2284                           ; #config settings
  2285                           
  2286                           	psect	cinit
  2287  013888                     __pcinit:
  2288                           	callstack 0
  2289  013888                     start_initialization:
  2290                           	callstack 0
  2291  013888                     __initialization:
  2292                           	callstack 0
  2293                           
  2294                           ; Initialize objects allocated to BIGRAM (1024 bytes)
  2295                           ; load TBLPTR registers with __pidataBIGRAM
  2296  013888  0EE2               	movlw	low __pidataBIGRAM
  2297  01388A  6EF6               	movwf	tblptrl,c
  2298  01388C  0E1B               	movlw	high __pidataBIGRAM
  2299  01388E  6EF7               	movwf	tblptrh,c
  2300  013890  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2301  013892  6EF8               	movwf	tblptru,c
  2302  013894  EE05  F143         	lfsr	0,__pdataBIGRAM
  2303  013898  EE11 F000          	lfsr	1,1024
  2304  01389C                     copy_data0:
  2305  01389C  0009               	tblrd		*+
  2306  01389E  006F FFD7 FFEE     	movff	tablat,postinc0
  2307  0138A4  50E5               	movf	postdec1,w,c
  2308  0138A6  50E1               	movf	fsr1l,w,c
  2309  0138A8  E1F9               	bnz	copy_data0
  2310  0138AA  50E2               	movf	fsr1h,w,c
  2311  0138AC  E1F7               	bnz	copy_data0
  2312                           
  2313                           ; Initialize objects allocated to BANK2 (90 bytes)
  2314                           ; load TBLPTR registers with __pidataBANK2
  2315  0138AE  0E20               	movlw	low __pidataBANK2
  2316  0138B0  6EF6               	movwf	tblptrl,c
  2317  0138B2  0E48               	movlw	high __pidataBANK2
  2318  0138B4  6EF7               	movwf	tblptrh,c
  2319  0138B6  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2320  0138B8  6EF8               	movwf	tblptru,c
  2321  0138BA  EE00  F290         	lfsr	0,__pdataBANK2
  2322  0138BE  EE10 F05A          	lfsr	1,90
  2323  0138C2                     copy_data1:
  2324  0138C2  0009               	tblrd		*+
  2325  0138C4  006F FFD7 FFEE     	movff	tablat,postinc0
  2326  0138CA  50E5               	movf	postdec1,w,c
  2327  0138CC  50E1               	movf	fsr1l,w,c
  2328  0138CE  E1F9               	bnz	copy_data1
  2329                           
  2330                           ; Initialize objects allocated to BANK1 (13 bytes)
  2331                           ; load TBLPTR registers with __pidataBANK1
  2332  0138D0  0E04               	movlw	low __pidataBANK1
  2333  0138D2  6EF6               	movwf	tblptrl,c
  2334  0138D4  0E57               	movlw	high __pidataBANK1
  2335  0138D6  6EF7               	movwf	tblptrh,c
  2336  0138D8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2337  0138DA  6EF8               	movwf	tblptru,c
  2338  0138DC  EE00  F1A4         	lfsr	0,__pdataBANK1
  2339  0138E0  EE10 F00D          	lfsr	1,13
  2340  0138E4                     copy_data2:
  2341  0138E4  0009               	tblrd		*+
  2342  0138E6  006F FFD7 FFEE     	movff	tablat,postinc0
  2343  0138EC  50E5               	movf	postdec1,w,c
  2344  0138EE  50E1               	movf	fsr1l,w,c
  2345  0138F0  E1F9               	bnz	copy_data2
  2346                           
  2347                           ; Initialize objects allocated to BANK0 (2 bytes)
  2348                           ; load TBLPTR registers with __pidataBANK0
  2349  0138F2  0E5C               	movlw	low __pidataBANK0
  2350  0138F4  6EF6               	movwf	tblptrl,c
  2351  0138F6  0E57               	movlw	high __pidataBANK0
  2352  0138F8  6EF7               	movwf	tblptrh,c
  2353  0138FA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2354  0138FC  6EF8               	movwf	tblptru,c
  2355  0138FE  0009               	tblrd		*+	;fetch initializer
  2356  013900  006F FFD4  F0FB    	movff	tablat,__pdataBANK0
  2357  013906  0009               	tblrd		*+	;fetch initializer
  2358  013908  006F FFD4  F0FC    	movff	tablat,__pdataBANK0+1
  2359                           
  2360                           ; Clear objects allocated to BIGRAM (4032 bytes)
  2361  01390E  EE01  F183         	lfsr	0,__pbssBIGRAM
  2362  013912  EE13 F3C0          	lfsr	1,4032
  2363  013916                     clear_0:
  2364  013916  6AEE               	clrf	postinc0,c
  2365  013918  50E5               	movf	postdec1,w,c
  2366  01391A  50E1               	movf	fsr1l,w,c
  2367  01391C  E1FC               	bnz	clear_0
  2368  01391E  50E2               	movf	fsr1h,w,c
  2369  013920  E1FA               	bnz	clear_0
  2370                           
  2371                           ; Clear objects allocated to BANK5 (131 bytes)
  2372  013922  EE01  F100         	lfsr	0,__pbssBANK5
  2373  013926  0E83               	movlw	131
  2374  013928                     clear_1:
  2375  013928  6AEE               	clrf	postinc0,c
  2376  01392A  06E8               	decf	wreg,f,c
  2377  01392C  E1FD               	bnz	clear_1
  2378                           
  2379                           ; Clear objects allocated to BANK4 (255 bytes)
  2380  01392E  EE01  F000         	lfsr	0,__pbssBANK4
  2381  013932  EE10 F0FF          	lfsr	1,255
  2382  013936                     clear_2:
  2383  013936  6AEE               	clrf	postinc0,c
  2384  013938  50E5               	movf	postdec1,w,c
  2385  01393A  50E1               	movf	fsr1l,w,c
  2386  01393C  E1FC               	bnz	clear_2
  2387  01393E  50E2               	movf	fsr1h,w,c
  2388  013940  E1FA               	bnz	clear_2
  2389                           
  2390                           ; Clear objects allocated to BANK3 (195 bytes)
  2391  013942  EE00  F300         	lfsr	0,__pbssBANK3
  2392  013946  0EC3               	movlw	195
  2393  013948                     clear_3:
  2394  013948  6AEE               	clrf	postinc0,c
  2395  01394A  06E8               	decf	wreg,f,c
  2396  01394C  E1FD               	bnz	clear_3
  2397                           
  2398                           ; Clear objects allocated to BANK2 (144 bytes)
  2399  01394E  EE00  F200         	lfsr	0,__pbssBANK2
  2400  013952  0E90               	movlw	144
  2401  013954                     clear_4:
  2402  013954  6AEE               	clrf	postinc0,c
  2403  013956  06E8               	decf	wreg,f,c
  2404  013958  E1FD               	bnz	clear_4
  2405                           
  2406                           ; Clear objects allocated to BANK1 (108 bytes)
  2407  01395A  EE00  F100         	lfsr	0,__pbssBANK1
  2408  01395E  0E6C               	movlw	108
  2409  013960                     clear_5:
  2410  013960  6AEE               	clrf	postinc0,c
  2411  013962  06E8               	decf	wreg,f,c
  2412  013964  E1FD               	bnz	clear_5
  2413                           
  2414                           ; Clear objects allocated to BANK0 (3 bytes)
  2415  013966  0100               	movlb	0
  2416  013968  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
  2417  01396A  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
  2418  01396C  6BF8               	clrf	__pbssBANK0& (0+255),b
  2419                           
  2420                           ; Clear objects allocated to COMRAM (31 bytes)
  2421  01396E  EE00  F022         	lfsr	0,__pbssCOMRAM
  2422  013972  0E1F               	movlw	31
  2423  013974                     clear_6:
  2424  013974  6AEE               	clrf	postinc0,c
  2425  013976  06E8               	decf	wreg,f,c
  2426  013978  E1FD               	bnz	clear_6
  2427                           
  2428                           ;
  2429                           ; Setup IVTBASE
  2430                           ;
  2431  01397A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2432  01397C  6ED5               	movwf	213,c
  2433  01397E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2434  013980  6ED6               	movwf	214,c
  2435  013982  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2436  013984  6ED7               	movwf	215,c
  2437  013986                     end_of_initialization:
  2438                           	callstack 0
  2439  013986                     __end_of__initialization:
  2440                           	callstack 0
  2441  013986  0100               	movlb	0
  2442  013988  EF64  F088         	goto	_main	;jump to C main() function
  2443                           
  2444                           	psect	bssCOMRAM
  2445  000022                     __pbssCOMRAM:
  2446                           	callstack 0
  2447  000022                     _variance:
  2448                           	callstack 0
  2449  000022                     	ds	4
  2450  000026                     _UART1_TxInterruptHandler:
  2451                           	callstack 0
  2452  000026                     	ds	3
  2453  000029                     _UART1_RxInterruptHandler:
  2454                           	callstack 0
  2455  000029                     	ds	3
  2456  00002C                     _width:
  2457                           	callstack 0
  2458  00002C                     	ds	2
  2459  00002E                     _flags:
  2460                           	callstack 0
  2461  00002E                     	ds	2
  2462  000030                     _timer5ReloadVal:
  2463                           	callstack 0
  2464  000030                     	ds	2
  2465  000032                     TMR6_ISR@CountCallBack:
  2466                           	callstack 0
  2467  000032                     	ds	2
  2468  000034                     _res:
  2469                           	callstack 0
  2470  000034                     	ds	1
  2471  000035                     Adc_Isr@c_adc_chan:
  2472                           	callstack 0
  2473  000035                     	ds	1
  2474  000036                     _ps_type_index:
  2475                           	callstack 0
  2476  000036                     	ds	1
  2477  000037                     _mode:
  2478                           	callstack 0
  2479  000037                     	ds	1
  2480  000038                     _i_index:
  2481                           	callstack 0
  2482  000038                     	ds	1
  2483  000039                     _a_index:
  2484                           	callstack 0
  2485  000039                     	ds	1
  2486  00003A                     _uart1RxLastError:
  2487                           	callstack 0
  2488  00003A                     	ds	1
  2489  00003B                     _uart1RxCount:
  2490                           	callstack 0
  2491  00003B                     	ds	1
  2492  00003C                     _uart1RxTail:
  2493                           	callstack 0
  2494  00003C                     	ds	1
  2495  00003D                     _uart1RxHead:
  2496                           	callstack 0
  2497  00003D                     	ds	1
  2498  00003E                     _uart1TxBufferRemaining:
  2499                           	callstack 0
  2500  00003E                     	ds	1
  2501  00003F                     _uart1TxTail:
  2502                           	callstack 0
  2503  00003F                     	ds	1
  2504  000040                     _uart1TxHead:
  2505                           	callstack 0
  2506  000040                     	ds	1
  2507                           
  2508                           	psect	bssBANK0
  2509  0000F8                     __pbssBANK0:
  2510                           	callstack 0
  2511  0000F8                     _prec:
  2512                           	callstack 0
  2513  0000F8                     	ds	2
  2514  0000FA                     _dac_v:
  2515                           	callstack 0
  2516  0000FA                     	ds	1
  2517                           
  2518                           	psect	dataBANK0
  2519  0000FB                     __pdataBANK0:
  2520                           	callstack 0
  2521  0000FB                     _ps_type_ptr:
  2522                           	callstack 0
  2523  0000FB                     	ds	2
  2524                           
  2525                           	psect	bssBANK1
  2526  000100                     __pbssBANK1:
  2527                           	callstack 0
  2528  000100                     _spi_link:
  2529                           	callstack 0
  2530  000100                     	ds	12
  2531  00010C                     _tickCount:
  2532                           	callstack 0
  2533  00010C                     	ds	12
  2534  000118                     floorf@F526:
  2535                           	callstack 0
  2536  000118                     	ds	4
  2537  00011C                     ___fpclassifyf@F465:
  2538                           	callstack 0
  2539  00011C                     	ds	4
  2540  000120                     wdtdelay@dcount:
  2541                           	callstack 0
  2542  000120                     	ds	4
  2543  000124                     _stddeviation:
  2544                           	callstack 0
  2545  000124                     	ds	4
  2546  000128                     _mean:
  2547                           	callstack 0
  2548  000128                     	ds	4
  2549  00012C                     _sumsqr:
  2550                           	callstack 0
  2551  00012C                     	ds	4
  2552  000130                     _sum:
  2553                           	callstack 0
  2554  000130                     	ds	4
  2555  000134                     _deviation:
  2556                           	callstack 0
  2557  000134                     	ds	4
  2558  000138                     _ival:
  2559                           	callstack 0
  2560  000138                     	ds	4
  2561  00013C                     _vval:
  2562                           	callstack 0
  2563  00013C                     	ds	4
  2564  000140                     _UART1_ErrorHandler:
  2565                           	callstack 0
  2566  000140                     	ds	3
  2567  000143                     _UART1_OverrunErrorHandler:
  2568                           	callstack 0
  2569  000143                     	ds	3
  2570  000146                     _UART1_FramingErrorHandler:
  2571                           	callstack 0
  2572  000146                     	ds	3
  2573  000149                     _DMA1_SCNTI_InterruptHandler:
  2574                           	callstack 0
  2575  000149                     	ds	3
  2576  00014C                     _TMR5_InterruptHandler:
  2577                           	callstack 0
  2578  00014C                     	ds	3
  2579  00014F                     _TMR6_InterruptHandler:
  2580                           	callstack 0
  2581  00014F                     	ds	3
  2582  000152                     _ADCC_ADI_InterruptHandler:
  2583                           	callstack 0
  2584  000152                     	ds	3
  2585  000155                     _UART1_UARTInterruptHandler:
  2586                           	callstack 0
  2587  000155                     	ds	3
  2588  000158                     _UART1_FramingErrorInterruptHandler:
  2589                           	callstack 0
  2590  000158                     	ds	3
  2591  00015B                     _errno:
  2592                           	callstack 0
  2593  00015B                     	ds	2
  2594  00015D                     _nout:
  2595                           	callstack 0
  2596  00015D                     	ds	2
  2597  00015F                     _mode_sw:
  2598                           	callstack 0
  2599  00015F                     	ds	1
  2600  000160                     _adc_tick:
  2601                           	callstack 0
  2602  000160                     	ds	1
  2603  000161                     _disp_tick:
  2604                           	callstack 0
  2605  000161                     	ds	1
  2606  000162                     _SrcVarName0:
  2607                           	callstack 0
  2608  000162                     	ds	10
  2609                           
  2610                           	psect	dataBANK1
  2611  0001A4                     __pdataBANK1:
  2612                           	callstack 0
  2613  0001A4                     stoa@F1164:
  2614                           	callstack 0
  2615  0001A4                     	ds	7
  2616  0001AB                     _build_time:
  2617                           	callstack 0
  2618  0001AB                     	ds	2
  2619  0001AD                     _build_date:
  2620                           	callstack 0
  2621  0001AD                     	ds	2
  2622  0001AF                     _static_ps:
  2623                           	callstack 0
  2624  0001AF                     	ds	1
  2625  0001B0                     _roll_max:
  2626                           	callstack 0
  2627  0001B0                     	ds	1
  2628                           
  2629                           	psect	bssBANK2
  2630  000200                     __pbssBANK2:
  2631                           	callstack 0
  2632  000200                     _uart1RxStatusBuffer:
  2633                           	callstack 0
  2634  000200                     	ds	64
  2635  000240                     _dbuf:
  2636                           	callstack 0
  2637  000240                     	ds	80
  2638                           
  2639                           	psect	dataBANK2
  2640  000290                     __pdataBANK2:
  2641                           	callstack 0
  2642  000290                     _g_cmds:
  2643                           	callstack 0
  2644  000290                     	ds	50
  2645  0002C2                     _ps_type:
  2646                           	callstack 0
  2647  0002C2                     	ds	40
  2648                           
  2649                           	psect	bssBANK3
  2650  000300                     __pbssBANK3:
  2651                           	callstack 0
  2652  000300                     _uart1RxBuffer:
  2653                           	callstack 0
  2654  000300                     	ds	64
  2655  000340                     _uart1TxBuffer:
  2656                           	callstack 0
  2657  000340                     	ds	64
  2658  000380                     _ring_buf1:
  2659                           	callstack 0
  2660  000380                     	ds	67
  2661                           
  2662                           	psect	bssBANK4
  2663  000400                     __pbssBANK4:
  2664                           	callstack 0
  2665  000400                     _buff1:
  2666                           	callstack 0
  2667  000400                     	ds	255
  2668                           
  2669                           	psect	bssBANK5
  2670  000500                     __pbssBANK5:
  2671                           	callstack 0
  2672  000500                     _cli_ctx:
  2673                           	callstack 0
  2674  000500                     	ds	131
  2675                           
  2676                           	psect	bssBIGRAM
  2677  000583                     __pbssBIGRAM:
  2678                           	callstack 0
  2679  000583                     _a:
  2680                           	callstack 0
  2681  000583                     	ds	4032
  2682                           
  2683                           	psect	dataBIGRAM
  2684  001543                     __pdataBIGRAM:
  2685                           	callstack 0
  2686  001543                     	ds	1024
  2687                           
  2688                           	psect	cstackBANK1
  2689  00016C                     __pcstackBANK1:
  2690                           	callstack 0
  2691  00016C                     vfpfcnvrt@llu:
  2692                           	callstack 0
  2693                           
  2694                           ; 8 bytes @ 0x0
  2695  00016C                     	ds	8
  2696  000174                     vfpfcnvrt@cp:
  2697                           	callstack 0
  2698                           
  2699                           ; 2 bytes @ 0x8
  2700  000174                     	ds	2
  2701  000176                     vfpfcnvrt@done:
  2702                           	callstack 0
  2703                           
  2704                           ; 2 bytes @ 0xA
  2705  000176                     	ds	2
  2706  000178                     _vfpfcnvrt$4240:
  2707                           	callstack 0
  2708                           
  2709                           ; 2 bytes @ 0xC
  2710  000178                     	ds	2
  2711  00017A                     vfpfcnvrt@f:
  2712                           	callstack 0
  2713                           
  2714                           ; 4 bytes @ 0xE
  2715  00017A                     	ds	4
  2716  00017E                     vfpfcnvrt@ct:
  2717                           	callstack 0
  2718                           
  2719                           ; 3 bytes @ 0x12
  2720  00017E                     	ds	3
  2721  000181                     vfpfcnvrt@c:
  2722                           	callstack 0
  2723                           
  2724                           ; 1 bytes @ 0x15
  2725  000181                     	ds	1
  2726  000182                     ?_sprintf:
  2727                           	callstack 0
  2728  000182                     ?_printf:
  2729                           	callstack 0
  2730  000182                     sprintf@s:
  2731                           	callstack 0
  2732  000182                     printf@fmt:
  2733                           	callstack 0
  2734                           
  2735                           ; 2 bytes @ 0x16
  2736  000182                     	ds	2
  2737  000184                     sprintf@fmt:
  2738                           	callstack 0
  2739                           
  2740                           ; 2 bytes @ 0x18
  2741  000184                     	ds	14
  2742  000192                     sprintf@ap:
  2743                           	callstack 0
  2744                           
  2745                           ; 2 bytes @ 0x26
  2746  000192                     	ds	2
  2747  000194                     sprintf@f:
  2748                           	callstack 0
  2749                           
  2750                           ; 11 bytes @ 0x28
  2751  000194                     	ds	16
  2752                           
  2753                           	psect	cstackBANK0
  2754  000060                     __pcstackBANK0:
  2755                           	callstack 0
  2756  000060                     ??_linux_getc:
  2757  000060                     ??_isupper:
  2758  000060                     ??_isdigit:
  2759  000060                     ??_isspace:
  2760  000060                     ??_PWM5_LoadDutyValue:
  2761  000060                     ??_PWM6_LoadDutyValue:
  2762  000060                     ??_StartTimer:
  2763  000060                     ?_fputc:
  2764                           	callstack 0
  2765  000060                     ?___fpclassifyf:
  2766                           	callstack 0
  2767  000060                     ?___wmul:
  2768                           	callstack 0
  2769  000060                     ?___awdiv:
  2770                           	callstack 0
  2771  000060                     ?___awmod:
  2772                           	callstack 0
  2773  000060                     ?_nanf:
  2774                           	callstack 0
  2775  000060                     ?___flneg:
  2776                           	callstack 0
  2777  000060                     ?___fltol:
  2778                           	callstack 0
  2779  000060                     ?___lodiv:
  2780                           	callstack 0
  2781  000060                     ?___lomod:
  2782                           	callstack 0
  2783  000060                     TimerDone@timer:
  2784                           	callstack 0
  2785  000060                     display_led@led:
  2786                           	callstack 0
  2787  000060                     DATAEE_WriteByte@bAdd:
  2788                           	callstack 0
  2789  000060                     ringBufS_put_dma@_this:
  2790                           	callstack 0
  2791  000060                     ___wmul@multiplier:
  2792                           	callstack 0
  2793  000060                     ___awdiv@dividend:
  2794                           	callstack 0
  2795  000060                     ___awmod@dividend:
  2796                           	callstack 0
  2797  000060                     memcpy@d1:
  2798                           	callstack 0
  2799  000060                     memset@dest:
  2800                           	callstack 0
  2801  000060                     fputc@c:
  2802                           	callstack 0
  2803  000060                     nanf@s:
  2804                           	callstack 0
  2805  000060                     strcpy@dest:
  2806                           	callstack 0
  2807  000060                     strlen@a:
  2808                           	callstack 0
  2809  000060                     ADCC_SetADIInterruptHandler@InterruptHandler:
  2810                           	callstack 0
  2811  000060                     TMR6_SetInterruptHandler@InterruptHandler:
  2812                           	callstack 0
  2813  000060                     TMR5_SetInterruptHandler@InterruptHandler:
  2814                           	callstack 0
  2815  000060                     DMA1_SetSCNTIInterruptHandler@InterruptHandler:
  2816                           	callstack 0
  2817  000060                     UART1_SetFramingErrorHandler@interruptHandler:
  2818                           	callstack 0
  2819  000060                     UART1_SetOverrunErrorHandler@interruptHandler:
  2820                           	callstack 0
  2821  000060                     UART1_SetErrorHandler@interruptHandler:
  2822                           	callstack 0
  2823  000060                     UART1_SetRxInterruptHandler@InterruptHandler:
  2824                           	callstack 0
  2825  000060                     UART1_SetTxInterruptHandler@InterruptHandler:
  2826                           	callstack 0
  2827  000060                     UART1_SetFramingErrorInterruptHandler@InterruptHandler:
  2828                           	callstack 0
  2829  000060                     UART1_SetUartInterruptHandler@InterruptHandler:
  2830                           	callstack 0
  2831  000060                     wdtdelay@delay:
  2832                           	callstack 0
  2833  000060                     ___fleq@ff1:
  2834                           	callstack 0
  2835  000060                     ___flneg@f1:
  2836                           	callstack 0
  2837  000060                     ___fltol@f1:
  2838                           	callstack 0
  2839  000060                     ___fpclassifyf@x:
  2840                           	callstack 0
  2841  000060                     ___lodiv@dividend:
  2842                           	callstack 0
  2843  000060                     ___lomod@dividend:
  2844                           	callstack 0
  2845                           
  2846                           ; 8 bytes @ 0x0
  2847  000060                     	ds	2
  2848  000062                     ?_strncmp:
  2849                           	callstack 0
  2850  000062                     DATAEE_WriteByte@bData:
  2851                           	callstack 0
  2852  000062                     StartTimer@timer:
  2853                           	callstack 0
  2854  000062                     ringBufS_put_dma@c:
  2855                           	callstack 0
  2856  000062                     ___wmul@multiplicand:
  2857                           	callstack 0
  2858  000062                     ___awdiv@divisor:
  2859                           	callstack 0
  2860  000062                     ___awmod@divisor:
  2861                           	callstack 0
  2862  000062                     memcpy@s1:
  2863                           	callstack 0
  2864  000062                     memset@c:
  2865                           	callstack 0
  2866  000062                     fputc@fp:
  2867                           	callstack 0
  2868  000062                     strcpy@src:
  2869                           	callstack 0
  2870  000062                     strncmp@_l:
  2871                           	callstack 0
  2872                           
  2873                           ; 2 bytes @ 0x2
  2874  000062                     	ds	1
  2875  000063                     WaitMs@numMilliseconds:
  2876                           	callstack 0
  2877                           
  2878                           ; 2 bytes @ 0x3
  2879  000063                     	ds	1
  2880  000064                     ??_fputc:
  2881  000064                     ??___fpclassifyf:
  2882  000064                     ??_clear_stat_buffer:
  2883  000064                     ??___fltol:
  2884  000064                     ?_tolower:
  2885                           	callstack 0
  2886  000064                     ?___xxtofl:
  2887                           	callstack 0
  2888  000064                     ___awdiv@counter:
  2889                           	callstack 0
  2890  000064                     _isspace$4305:
  2891                           	callstack 0
  2892  000064                     memcpy@n:
  2893                           	callstack 0
  2894  000064                     memset@n:
  2895                           	callstack 0
  2896  000064                     strcpy@s:
  2897                           	callstack 0
  2898  000064                     strncmp@_r:
  2899                           	callstack 0
  2900  000064                     tolower@c:
  2901                           	callstack 0
  2902  000064                     ___fleq@ff2:
  2903                           	callstack 0
  2904  000064                     ___xxtofl@val:
  2905                           	callstack 0
  2906  000064                     nanf@u:
  2907                           	callstack 0
  2908                           
  2909                           ; 4 bytes @ 0x4
  2910  000064                     	ds	1
  2911  000065                     ?_atoi:
  2912                           	callstack 0
  2913  000065                     ___awdiv@sign:
  2914                           	callstack 0
  2915  000065                     atoi@s:
  2916                           	callstack 0
  2917                           
  2918                           ; 2 bytes @ 0x5
  2919  000065                     	ds	1
  2920  000066                     ??_tolower:
  2921  000066                     clear_stat_buffer@chan:
  2922                           	callstack 0
  2923  000066                     memcpy@tmp:
  2924                           	callstack 0
  2925  000066                     ___awdiv@quotient:
  2926                           	callstack 0
  2927  000066                     memset@k:
  2928                           	callstack 0
  2929  000066                     strcpy@d:
  2930                           	callstack 0
  2931  000066                     strncmp@n:
  2932                           	callstack 0
  2933                           
  2934                           ; 2 bytes @ 0x6
  2935  000066                     	ds	1
  2936  000067                     ??_atoi:
  2937  000067                     clear_stat_buffer@i:
  2938                           	callstack 0
  2939  000067                     memcpy@d:
  2940                           	callstack 0
  2941                           
  2942                           ; 2 bytes @ 0x7
  2943  000067                     	ds	1
  2944  000068                     ??_strncmp:
  2945  000068                     ??___fleq:
  2946  000068                     ??___xxtofl:
  2947  000068                     memset@s:
  2948                           	callstack 0
  2949  000068                     ___fpclassifyf@e:
  2950                           	callstack 0
  2951  000068                     ___lodiv@divisor:
  2952                           	callstack 0
  2953  000068                     ___lomod@divisor:
  2954                           	callstack 0
  2955                           
  2956                           ; 8 bytes @ 0x8
  2957  000068                     	ds	1
  2958  000069                     ?_fputs:
  2959                           	callstack 0
  2960  000069                     ?_stoa:
  2961                           	callstack 0
  2962  000069                     memcpy@s:
  2963                           	callstack 0
  2964  000069                     stoa@fp:
  2965                           	callstack 0
  2966  000069                     fputs@s:
  2967                           	callstack 0
  2968                           
  2969                           ; 2 bytes @ 0x9
  2970  000069                     	ds	1
  2971  00006A                     ringBufS_init@_this:
  2972                           	callstack 0
  2973  00006A                     ringBufS_flush@_this:
  2974                           	callstack 0
  2975  00006A                     strncmp@l:
  2976                           	callstack 0
  2977  00006A                     ___fpclassifyf@u:
  2978                           	callstack 0
  2979                           
  2980                           ; 4 bytes @ 0xA
  2981  00006A                     	ds	1
  2982  00006B                     ringBufS_put_dma_cpy@_this:
  2983                           	callstack 0
  2984  00006B                     stoa@s:
  2985                           	callstack 0
  2986  00006B                     atoi@neg:
  2987                           	callstack 0
  2988  00006B                     fputs@fp:
  2989                           	callstack 0
  2990                           
  2991                           ; 2 bytes @ 0xB
  2992  00006B                     	ds	1
  2993  00006C                     ringBufS_flush@clearBuffer:
  2994                           	callstack 0
  2995  00006C                     ___xxtofl@sign:
  2996                           	callstack 0
  2997  00006C                     strncmp@r:
  2998                           	callstack 0
  2999                           
  3000                           ; 2 bytes @ 0xC
  3001  00006C                     	ds	1
  3002  00006D                     ??_fputs:
  3003  00006D                     ??_stoa:
  3004  00006D                     send_lcd_data_dma@strPtr:
  3005                           	callstack 0
  3006  00006D                     ___xxtofl@exp:
  3007                           	callstack 0
  3008  00006D                     ringBufS_put_dma_cpy@ptr:
  3009                           	callstack 0
  3010  00006D                     atoi@n:
  3011                           	callstack 0
  3012                           
  3013                           ; 2 bytes @ 0xD
  3014  00006D                     	ds	1
  3015  00006E                     send_lcd_cmd_dma@strPtr:
  3016                           	callstack 0
  3017  00006E                     ___xxtofl@arg:
  3018                           	callstack 0
  3019  00006E                     stoa@nuls:
  3020                           	callstack 0
  3021                           
  3022                           ; 7 bytes @ 0xE
  3023  00006E                     	ds	1
  3024  00006F                     eaDogM_WriteCommand@cmd:
  3025                           	callstack 0
  3026  00006F                     ringBufS_put_dma_cpy@len:
  3027                           	callstack 0
  3028  00006F                     fputs@c:
  3029                           	callstack 0
  3030                           
  3031                           ; 1 bytes @ 0xF
  3032  00006F                     	ds	1
  3033  000070                     eaDogM_WriteString@strPtr:
  3034                           	callstack 0
  3035  000070                     fputs@i:
  3036                           	callstack 0
  3037  000070                     ___lodiv@quotient:
  3038                           	callstack 0
  3039                           
  3040                           ; 8 bytes @ 0x10
  3041  000070                     	ds	2
  3042  000072                     ?_pad:
  3043                           	callstack 0
  3044  000072                     ?___fldiv:
  3045                           	callstack 0
  3046  000072                     ?___flmul:
  3047                           	callstack 0
  3048  000072                     eaDogM_WriteString@len:
  3049                           	callstack 0
  3050  000072                     pad@fp:
  3051                           	callstack 0
  3052  000072                     puts@s:
  3053                           	callstack 0
  3054  000072                     ___fldiv@b:
  3055                           	callstack 0
  3056  000072                     ___flmul@b:
  3057                           	callstack 0
  3058                           
  3059                           ; 4 bytes @ 0x12
  3060  000072                     	ds	1
  3061  000073                     eaDogM_WriteStringAtPos@c:
  3062                           	callstack 0
  3063                           
  3064                           ; 1 bytes @ 0x13
  3065  000073                     	ds	1
  3066  000074                     _puts$4384:
  3067                           	callstack 0
  3068  000074                     eaDogM_WriteStringAtPos@strPtr:
  3069                           	callstack 0
  3070  000074                     pad@buf:
  3071                           	callstack 0
  3072                           
  3073                           ; 2 bytes @ 0x14
  3074  000074                     	ds	1
  3075  000075                     fh_pr@a_data:
  3076                           	callstack 0
  3077  000075                     fh_p1@a_data:
  3078                           	callstack 0
  3079  000075                     cli_init@a_ctx:
  3080                           	callstack 0
  3081  000075                     linux_putc@data:
  3082                           	callstack 0
  3083  000075                     stoa@i:
  3084                           	callstack 0
  3085                           
  3086                           ; 2 bytes @ 0x15
  3087  000075                     	ds	1
  3088  000076                     ??_eaDogM_WriteStringAtPos:
  3089  000076                     pad@p:
  3090                           	callstack 0
  3091  000076                     ___fldiv@a:
  3092                           	callstack 0
  3093  000076                     ___flmul@a:
  3094                           	callstack 0
  3095                           
  3096                           ; 4 bytes @ 0x16
  3097  000076                     	ds	1
  3098  000077                     linux_putc@a_len:
  3099                           	callstack 0
  3100  000077                     cli_init@a_cmds:
  3101                           	callstack 0
  3102  000077                     __cli_interpret_cmd@a_ctx:
  3103                           	callstack 0
  3104  000077                     stoa@w:
  3105                           	callstack 0
  3106                           
  3107                           ; 2 bytes @ 0x17
  3108  000077                     	ds	1
  3109  000078                     ??_pad:
  3110  000078                     eaDogM_WriteStringAtPos@r:
  3111                           	callstack 0
  3112  000078                     ___lodiv@counter:
  3113                           	callstack 0
  3114                           
  3115                           ; 1 bytes @ 0x18
  3116  000078                     	ds	1
  3117  000079                     ??__cli_interpret_cmd:
  3118  000079                     eaDogM_WriteStringAtPos@row:
  3119                           	callstack 0
  3120  000079                     pad@i:
  3121                           	callstack 0
  3122  000079                     stoa@cp:
  3123                           	callstack 0
  3124                           
  3125                           ; 2 bytes @ 0x19
  3126  000079                     	ds	1
  3127  00007A                     ??___fldiv:
  3128  00007A                     ??___flmul:
  3129                           
  3130                           ; 1 bytes @ 0x1A
  3131  00007A                     	ds	1
  3132  00007B                     pad@w:
  3133                           	callstack 0
  3134  00007B                     stoa@p:
  3135                           	callstack 0
  3136                           
  3137                           ; 2 bytes @ 0x1B
  3138  00007B                     	ds	2
  3139  00007D                     ?_utoa:
  3140                           	callstack 0
  3141  00007D                     stoa@l:
  3142                           	callstack 0
  3143  00007D                     utoa@fp:
  3144                           	callstack 0
  3145                           
  3146                           ; 2 bytes @ 0x1D
  3147  00007D                     	ds	1
  3148  00007E                     ___flmul@sign:
  3149                           	callstack 0
  3150  00007E                     ___fldiv@rem:
  3151                           	callstack 0
  3152                           
  3153                           ; 4 bytes @ 0x1E
  3154  00007E                     	ds	1
  3155  00007F                     ___flmul@aexp:
  3156                           	callstack 0
  3157  00007F                     utoa@d:
  3158                           	callstack 0
  3159                           
  3160                           ; 8 bytes @ 0x1F
  3161  00007F                     	ds	1
  3162  000080                     ___flmul@bexp:
  3163                           	callstack 0
  3164                           
  3165                           ; 1 bytes @ 0x20
  3166  000080                     	ds	1
  3167  000081                     __cli_interpret_cmd@ret:
  3168                           	callstack 0
  3169  000081                     ___flmul@grs:
  3170                           	callstack 0
  3171                           
  3172                           ; 4 bytes @ 0x21
  3173  000081                     	ds	1
  3174  000082                     __cli_interpret_cmd@i:
  3175                           	callstack 0
  3176  000082                     ___fldiv@sign:
  3177                           	callstack 0
  3178                           
  3179                           ; 1 bytes @ 0x22
  3180  000082                     	ds	1
  3181  000083                     cli_read@a_ctx:
  3182                           	callstack 0
  3183  000083                     ___fldiv@new_exp:
  3184                           	callstack 0
  3185                           
  3186                           ; 2 bytes @ 0x23
  3187  000083                     	ds	2
  3188  000085                     ??_cli_read:
  3189  000085                     ___fldiv@grs:
  3190                           	callstack 0
  3191  000085                     ___flmul@prod:
  3192                           	callstack 0
  3193                           
  3194                           ; 4 bytes @ 0x25
  3195  000085                     	ds	2
  3196  000087                     ??_utoa:
  3197                           
  3198                           ; 1 bytes @ 0x27
  3199  000087                     	ds	1
  3200  000088                     _cli_read$3101:
  3201                           	callstack 0
  3202                           
  3203                           ; 2 bytes @ 0x28
  3204  000088                     	ds	1
  3205  000089                     ___fldiv@bexp:
  3206                           	callstack 0
  3207  000089                     ___flmul@temp:
  3208                           	callstack 0
  3209                           
  3210                           ; 2 bytes @ 0x29
  3211  000089                     	ds	1
  3212  00008A                     cli_read@i:
  3213                           	callstack 0
  3214  00008A                     ___fldiv@aexp:
  3215                           	callstack 0
  3216                           
  3217                           ; 1 bytes @ 0x2A
  3218  00008A                     	ds	1
  3219  00008B                     ?___fladd:
  3220                           	callstack 0
  3221  00008B                     ?_floorf:
  3222                           	callstack 0
  3223  00008B                     ___flge@ff1:
  3224                           	callstack 0
  3225  00008B                     ___fladd@b:
  3226                           	callstack 0
  3227  00008B                     floorf@x:
  3228                           	callstack 0
  3229                           
  3230                           ; 4 bytes @ 0x2B
  3231  00008B                     	ds	4
  3232  00008F                     ??_floorf:
  3233  00008F                     utoa@p:
  3234                           	callstack 0
  3235  00008F                     ___flge@ff2:
  3236                           	callstack 0
  3237  00008F                     ___fladd@a:
  3238                           	callstack 0
  3239                           
  3240                           ; 4 bytes @ 0x2F
  3241  00008F                     	ds	2
  3242  000091                     utoa@w:
  3243                           	callstack 0
  3244                           
  3245                           ; 2 bytes @ 0x31
  3246  000091                     	ds	2
  3247  000093                     ??___fladd:
  3248  000093                     ??___flge:
  3249  000093                     utoa@n:
  3250                           	callstack 0
  3251                           
  3252                           ; 8 bytes @ 0x33
  3253  000093                     	ds	2
  3254  000095                     floorf@m:
  3255                           	callstack 0
  3256                           
  3257                           ; 4 bytes @ 0x35
  3258  000095                     	ds	2
  3259  000097                     ___fladd@signs:
  3260                           	callstack 0
  3261                           
  3262                           ; 1 bytes @ 0x37
  3263  000097                     	ds	1
  3264  000098                     ___fladd@aexp:
  3265                           	callstack 0
  3266                           
  3267                           ; 1 bytes @ 0x38
  3268  000098                     	ds	1
  3269  000099                     ___fladd@bexp:
  3270                           	callstack 0
  3271  000099                     floorf@e:
  3272                           	callstack 0
  3273                           
  3274                           ; 2 bytes @ 0x39
  3275  000099                     	ds	1
  3276  00009A                     ___fladd@grs:
  3277                           	callstack 0
  3278                           
  3279                           ; 1 bytes @ 0x3A
  3280  00009A                     	ds	1
  3281  00009B                     ?_sqrtf:
  3282                           	callstack 0
  3283  00009B                     ?___flsub:
  3284                           	callstack 0
  3285  00009B                     utoa@i:
  3286                           	callstack 0
  3287  00009B                     ___flsub@b:
  3288                           	callstack 0
  3289  00009B                     floorf@u:
  3290                           	callstack 0
  3291  00009B                     sqrtf@x:
  3292                           	callstack 0
  3293                           
  3294                           ; 4 bytes @ 0x3B
  3295  00009B                     	ds	4
  3296  00009F                     ??_sqrtf:
  3297  00009F                     ___flsub@a:
  3298                           	callstack 0
  3299                           
  3300                           ; 4 bytes @ 0x3F
  3301  00009F                     	ds	4
  3302  0000A3                     ?_efgtoa:
  3303                           	callstack 0
  3304  0000A3                     efgtoa@fp:
  3305                           	callstack 0
  3306                           
  3307                           ; 2 bytes @ 0x43
  3308  0000A3                     	ds	1
  3309  0000A4                     sqrtf@s:
  3310                           	callstack 0
  3311                           
  3312                           ; 4 bytes @ 0x44
  3313  0000A4                     	ds	1
  3314  0000A5                     efgtoa@f:
  3315                           	callstack 0
  3316                           
  3317                           ; 4 bytes @ 0x45
  3318  0000A5                     	ds	3
  3319  0000A8                     sqrtf@i:
  3320                           	callstack 0
  3321                           
  3322                           ; 4 bytes @ 0x48
  3323  0000A8                     	ds	1
  3324  0000A9                     efgtoa@c:
  3325                           	callstack 0
  3326                           
  3327                           ; 1 bytes @ 0x49
  3328  0000A9                     	ds	1
  3329  0000AA                     ??_efgtoa:
  3330                           
  3331                           ; 1 bytes @ 0x4A
  3332  0000AA                     	ds	2
  3333  0000AC                     sqrtf@__xc8_float_word:
  3334                           	callstack 0
  3335                           
  3336                           ; 4 bytes @ 0x4C
  3337  0000AC                     	ds	3
  3338  0000AF                     _efgtoa$4193:
  3339                           	callstack 0
  3340                           
  3341                           ; 2 bytes @ 0x4F
  3342  0000AF                     	ds	1
  3343  0000B0                     sqrtf@q:
  3344                           	callstack 0
  3345                           
  3346                           ; 4 bytes @ 0x50
  3347  0000B0                     	ds	1
  3348  0000B1                     _efgtoa$4201:
  3349                           	callstack 0
  3350                           
  3351                           ; 2 bytes @ 0x51
  3352  0000B1                     	ds	2
  3353  0000B3                     _efgtoa$4202:
  3354                           	callstack 0
  3355                           
  3356                           ; 2 bytes @ 0x53
  3357  0000B3                     	ds	1
  3358  0000B4                     sqrtf@t:
  3359                           	callstack 0
  3360                           
  3361                           ; 4 bytes @ 0x54
  3362  0000B4                     	ds	1
  3363  0000B5                     efgtoa@t:
  3364                           	callstack 0
  3365                           
  3366                           ; 2 bytes @ 0x55
  3367  0000B5                     	ds	2
  3368  0000B7                     efgtoa@pp:
  3369                           	callstack 0
  3370                           
  3371                           ; 2 bytes @ 0x57
  3372  0000B7                     	ds	1
  3373  0000B8                     sqrtf@z:
  3374                           	callstack 0
  3375                           
  3376                           ; 4 bytes @ 0x58
  3377  0000B8                     	ds	1
  3378  0000B9                     efgtoa@ne:
  3379                           	callstack 0
  3380                           
  3381                           ; 2 bytes @ 0x59
  3382  0000B9                     	ds	2
  3383  0000BB                     efgtoa@m:
  3384                           	callstack 0
  3385                           
  3386                           ; 2 bytes @ 0x5B
  3387  0000BB                     	ds	1
  3388  0000BC                     sqrtf@m:
  3389                           	callstack 0
  3390                           
  3391                           ; 4 bytes @ 0x5C
  3392  0000BC                     	ds	1
  3393  0000BD                     efgtoa@ou:
  3394                           	callstack 0
  3395                           
  3396                           ; 4 bytes @ 0x5D
  3397  0000BD                     	ds	3
  3398  0000C0                     sqrtf@r:
  3399                           	callstack 0
  3400                           
  3401                           ; 4 bytes @ 0x60
  3402  0000C0                     	ds	1
  3403  0000C1                     efgtoa@d:
  3404                           	callstack 0
  3405                           
  3406                           ; 2 bytes @ 0x61
  3407  0000C1                     	ds	2
  3408  0000C3                     efgtoa@sign:
  3409                           	callstack 0
  3410                           
  3411                           ; 2 bytes @ 0x63
  3412  0000C3                     	ds	1
  3413  0000C4                     sqrtf@ix:
  3414                           	callstack 0
  3415                           
  3416                           ; 4 bytes @ 0x64
  3417  0000C4                     	ds	1
  3418  0000C5                     efgtoa@p:
  3419                           	callstack 0
  3420                           
  3421                           ; 2 bytes @ 0x65
  3422  0000C5                     	ds	2
  3423  0000C7                     efgtoa@w:
  3424                           	callstack 0
  3425                           
  3426                           ; 2 bytes @ 0x67
  3427  0000C7                     	ds	1
  3428  0000C8                     ps_math@scale:
  3429                           	callstack 0
  3430                           
  3431                           ; 4 bytes @ 0x68
  3432  0000C8                     	ds	1
  3433  0000C9                     efgtoa@nmode:
  3434                           	callstack 0
  3435                           
  3436                           ; 1 bytes @ 0x69
  3437  0000C9                     	ds	1
  3438  0000CA                     efgtoa@mode:
  3439                           	callstack 0
  3440                           
  3441                           ; 1 bytes @ 0x6A
  3442  0000CA                     	ds	1
  3443  0000CB                     efgtoa@h:
  3444                           	callstack 0
  3445                           
  3446                           ; 4 bytes @ 0x6B
  3447  0000CB                     	ds	1
  3448  0000CC                     ps_math@chan:
  3449                           	callstack 0
  3450                           
  3451                           ; 1 bytes @ 0x6C
  3452  0000CC                     	ds	1
  3453  0000CD                     ??_ps_math:
  3454                           
  3455                           ; 1 bytes @ 0x6D
  3456  0000CD                     	ds	2
  3457  0000CF                     efgtoa@l:
  3458                           	callstack 0
  3459                           
  3460                           ; 4 bytes @ 0x6F
  3461  0000CF                     	ds	2
  3462  0000D1                     ps_math@n:
  3463                           	callstack 0
  3464                           
  3465                           ; 2 bytes @ 0x71
  3466  0000D1                     	ds	2
  3467  0000D3                     ps_math@i:
  3468                           	callstack 0
  3469  0000D3                     efgtoa@i:
  3470                           	callstack 0
  3471                           
  3472                           ; 2 bytes @ 0x73
  3473  0000D3                     	ds	2
  3474  0000D5                     efgtoa@g:
  3475                           	callstack 0
  3476                           
  3477                           ; 4 bytes @ 0x75
  3478  0000D5                     	ds	4
  3479  0000D9                     efgtoa@e:
  3480                           	callstack 0
  3481                           
  3482                           ; 2 bytes @ 0x79
  3483  0000D9                     	ds	2
  3484  0000DB                     efgtoa@n:
  3485                           	callstack 0
  3486                           
  3487                           ; 2 bytes @ 0x7B
  3488  0000DB                     	ds	2
  3489  0000DD                     efgtoa@u:
  3490                           	callstack 0
  3491                           
  3492                           ; 4 bytes @ 0x7D
  3493  0000DD                     	ds	4
  3494  0000E1                     ?_vfpfcnvrt:
  3495                           	callstack 0
  3496  0000E1                     vfpfcnvrt@fp:
  3497                           	callstack 0
  3498                           
  3499                           ; 2 bytes @ 0x81
  3500  0000E1                     	ds	2
  3501  0000E3                     vfpfcnvrt@fmt:
  3502                           	callstack 0
  3503                           
  3504                           ; 1 bytes @ 0x83
  3505  0000E3                     	ds	1
  3506  0000E4                     vfpfcnvrt@ap:
  3507                           	callstack 0
  3508                           
  3509                           ; 2 bytes @ 0x84
  3510  0000E4                     	ds	2
  3511  0000E6                     ??_vfpfcnvrt:
  3512                           
  3513                           ; 1 bytes @ 0x86
  3514  0000E6                     	ds	4
  3515  0000EA                     ?_vfprintf:
  3516                           	callstack 0
  3517  0000EA                     vfprintf@fp:
  3518                           	callstack 0
  3519                           
  3520                           ; 2 bytes @ 0x8A
  3521  0000EA                     	ds	2
  3522  0000EC                     vfprintf@fmt:
  3523                           	callstack 0
  3524                           
  3525                           ; 2 bytes @ 0x8C
  3526  0000EC                     	ds	2
  3527  0000EE                     vfprintf@ap:
  3528                           	callstack 0
  3529                           
  3530                           ; 2 bytes @ 0x8E
  3531  0000EE                     	ds	2
  3532  0000F0                     vfprintf@cfmt:
  3533                           	callstack 0
  3534                           
  3535                           ; 2 bytes @ 0x90
  3536  0000F0                     	ds	2
  3537  0000F2                     printf@ap:
  3538                           	callstack 0
  3539                           
  3540                           ; 2 bytes @ 0x92
  3541  0000F2                     	ds	2
  3542  0000F4                     ??_main:
  3543                           
  3544                           ; 1 bytes @ 0x94
  3545  0000F4                     	ds	2
  3546  0000F6                     main@lcd_update:
  3547                           	callstack 0
  3548                           
  3549                           ; 1 bytes @ 0x96
  3550  0000F6                     	ds	1
  3551  0000F7                     main@i:
  3552                           	callstack 0
  3553                           
  3554                           ; 1 bytes @ 0x97
  3555  0000F7                     	ds	1
  3556                           
  3557                           	psect	cstackCOMRAM
  3558  000001                     __pcstackCOMRAM:
  3559                           	callstack 0
  3560  000001                     ?_ADCC_GetConversionResult:
  3561                           	callstack 0
  3562                           
  3563                           ; 2 bytes @ 0x0
  3564  000001                     	ds	2
  3565  000003                     ??_ADCC_GetConversionResult:
  3566                           
  3567                           ; 1 bytes @ 0x2
  3568  000003                     	ds	2
  3569  000005                     ??_Adc_Isr:
  3570                           
  3571                           ; 1 bytes @ 0x4
  3572  000005                     	ds	4
  3573  000009                     ??_ADCC_ISR:
  3574                           
  3575                           ; 1 bytes @ 0x8
  3576  000009                     	ds	2
  3577  00000B                     ??_Led_Blink:
  3578                           
  3579                           ; 1 bytes @ 0xA
  3580  00000B                     	ds	1
  3581  00000C                     ??_TMR6_ISR:
  3582                           
  3583                           ; 1 bytes @ 0xB
  3584  00000C                     	ds	2
  3585  00000E                     TMR5_WriteTimer@timerVal:
  3586                           	callstack 0
  3587                           
  3588                           ; 2 bytes @ 0xD
  3589  00000E                     	ds	2
  3590  000010                     Timers_Isr@i:
  3591                           	callstack 0
  3592                           
  3593                           ; 2 bytes @ 0xF
  3594  000010                     	ds	2
  3595  000012                     ??_TMR5_ISR:
  3596                           
  3597                           ; 1 bytes @ 0x11
  3598  000012                     	ds	2
  3599  000014                     ??_DMA1_DMASCNTI_ISR:
  3600                           
  3601                           ; 1 bytes @ 0x13
  3602  000014                     	ds	2
  3603  000016                     ??_UART1_framing_err_vect_isr:
  3604                           
  3605                           ; 1 bytes @ 0x15
  3606  000016                     	ds	2
  3607  000018                     ??_UART1_vect_isr:
  3608                           
  3609                           ; 1 bytes @ 0x17
  3610  000018                     	ds	2
  3611  00001A                     ??_UART1_tx_vect_isr:
  3612                           
  3613                           ; 1 bytes @ 0x19
  3614  00001A                     	ds	3
  3615  00001D                     ??_UART1_rx_vect_isr:
  3616                           
  3617                           ; 1 bytes @ 0x1C
  3618  00001D                     	ds	3
  3619  000020                     ??_TMR5_Initialize:
  3620  000020                     ??_display_led:
  3621  000020                     ??_memset:
  3622  000020                     ??_ringBufS_put_dma:
  3623  000020                     ??_strcpy:
  3624  000020                     ?_strlen:
  3625                           	callstack 0
  3626  000020                     ?_isupper:
  3627                           	callstack 0
  3628  000020                     ?_isdigit:
  3629                           	callstack 0
  3630  000020                     ?_isspace:
  3631                           	callstack 0
  3632  000020                     DAC1_SetOutput@inputData:
  3633                           	callstack 0
  3634  000020                     INTERRUPT_Initialize@state:
  3635                           	callstack 0
  3636  000020                     SPI1_ExchangeByte@data:
  3637                           	callstack 0
  3638  000020                     UART1_Read@readValue:
  3639                           	callstack 0
  3640  000020                     UART1_Write@txData:
  3641                           	callstack 0
  3642  000020                     DATAEE_WriteByte@GIEBitValue:
  3643                           	callstack 0
  3644  000020                     ___awmod@counter:
  3645                           	callstack 0
  3646  000020                     ___fltol@sign1:
  3647                           	callstack 0
  3648  000020                     ___lomod@counter:
  3649                           	callstack 0
  3650  000020                     PWM5_LoadDutyValue@dutyValue:
  3651                           	callstack 0
  3652  000020                     PWM6_LoadDutyValue@dutyValue:
  3653                           	callstack 0
  3654  000020                     DATAEE_ReadByte@bAdd:
  3655                           	callstack 0
  3656  000020                     StartTimer@count:
  3657                           	callstack 0
  3658  000020                     ___wmul@product:
  3659                           	callstack 0
  3660  000020                     isdigit@c:
  3661                           	callstack 0
  3662  000020                     isspace@c:
  3663                           	callstack 0
  3664  000020                     isupper@c:
  3665                           	callstack 0
  3666  000020                     strlen@s:
  3667                           	callstack 0
  3668                           
  3669                           ; 2 bytes @ 0x1F
  3670  000020                     	ds	1
  3671  000021                     putch@txData:
  3672                           	callstack 0
  3673  000021                     linux_getc@a_data:
  3674                           	callstack 0
  3675  000021                     send_lcd_data@data:
  3676                           	callstack 0
  3677  000021                     send_lcd_cmd@cmd:
  3678                           	callstack 0
  3679  000021                     send_lcd_cmd_long@cmd:
  3680                           	callstack 0
  3681  000021                     ___awmod@sign:
  3682                           	callstack 0
  3683  000021                     ___fltol@exp1:
  3684                           	callstack 0
  3685                           
  3686                           ; 1 bytes @ 0x20
  3687  000021                     	ds	1
  3688  000022                     
  3689                           ; 1 bytes @ 0x21
  3690 ;;
  3691 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3692 ;;
  3693 ;; *************** function _main *****************
  3694 ;; Defined at:
  3695 ;;		line 257 in file "main.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  i               1  151[BANK0 ] unsigned char 
  3700 ;;  lcd_update      1  150[BANK0 ] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 3F/1
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3711 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3713 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3714 ;;Total ram usage:        4 bytes
  3715 ;; Hardware stack levels required when called: 16
  3716 ;; This function calls:
  3717 ;;		_ADCC_SetADIInterruptHandler
  3718 ;;		_DAC1_GetOutput
  3719 ;;		_DAC1_SetOutput
  3720 ;;		_DATAEE_ReadByte
  3721 ;;		_DATAEE_WriteByte
  3722 ;;		_DMA1_SetSCNTIInterruptHandler
  3723 ;;		_PWM5_LoadDutyValue
  3724 ;;		_PWM6_LoadDutyValue
  3725 ;;		_SYSTEM_Initialize
  3726 ;;		_TMR5_SetInterruptHandler
  3727 ;;		_TMR6_SetInterruptHandler
  3728 ;;		_WaitMs
  3729 ;;		___flmul
  3730 ;;		___xxtofl
  3731 ;;		_cli_read
  3732 ;;		_display_led
  3733 ;;		_eaDogM_WriteCommand
  3734 ;;		_eaDogM_WriteStringAtPos
  3735 ;;		_init_display
  3736 ;;		_linux_getc
  3737 ;;		_printf
  3738 ;;		_ps_math
  3739 ;;		_puts
  3740 ;;		_scmd_init
  3741 ;;		_sprintf
  3742 ;; This function is called by:
  3743 ;;		Startup code after reset
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text0
  3748  0110C8                     __ptext0:
  3749                           	callstack 0
  3750  0110C8                     _main:
  3751                           	callstack 15
  3752                           
  3753                           ;main.c: 259:  uint8_t lcd_update = 0, i = 0;
  3754                           
  3755                           ;incstack = 0
  3756  0110C8  0E00               	movlw	0
  3757  0110CA  0100               	movlb	0	; () banked
  3758  0110CC  6FF6               	movwf	main@lcd_update& (0+255),b
  3759  0110CE  0E00               	movlw	0
  3760  0110D0  6FF7               	movwf	main@i& (0+255),b
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;main.c: 262:  SYSTEM_Initialize();
  3764  0110D2  EC7C  F0A7         	call	_SYSTEM_Initialize	;wreg free
  3765                           
  3766                           ; BSR set to: 57
  3767  0110D6  92BD               	bcf	189,1,c	;volatile
  3768                           
  3769                           ; BSR set to: 57
  3770  0110D8  94BE               	bcf	190,2,c	;volatile
  3771                           
  3772                           ; BSR set to: 57
  3773                           ;main.c: 266:  TMR6_SetInterruptHandler(Led_Blink);
  3774  0110DA  0E28               	movlw	low _Led_Blink
  3775  0110DC  0100               	movlb	0	; () banked
  3776  0110DE  6F60               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  3777  0110E0  0E55               	movlw	high _Led_Blink
  3778  0110E2  6F61               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3779  0110E4  0E01               	movlw	low (_Led_Blink shr (0+16))
  3780  0110E6  6F62               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3781  0110E8  EC5F  F0AB         	call	_TMR6_SetInterruptHandler	;wreg free
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;main.c: 267:  TMR5_SetInterruptHandler(Timers_Isr);
  3785  0110EC  0E76               	movlw	low _Timers_Isr
  3786  0110EE  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
  3787  0110F0  0E49               	movlw	high _Timers_Isr
  3788  0110F2  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3789  0110F4  0E01               	movlw	low (_Timers_Isr shr (0+16))
  3790  0110F6  6F62               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3791  0110F8  EC66  F0AB         	call	_TMR5_SetInterruptHandler	;wreg free
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;main.c: 268:  ADCC_SetADIInterruptHandler(Adc_Isr);
  3795  0110FC  0E7A               	movlw	low _Adc_Isr
  3796  0110FE  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  3797  011100  0E3A               	movlw	high _Adc_Isr
  3798  011102  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  3799  011104  0E01               	movlw	low (_Adc_Isr shr (0+16))
  3800  011106  6F62               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  3801  011108  EC7B  F0AB         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3802                           
  3803                           ;main.c: 269:  ADPCH = PS_V_ANA;
  3804  01110C  0E00               	movlw	0
  3805  01110E  013E               	movlb	62	; () banked
  3806  011110  6FF1               	movwf	241,b	;volatile
  3807                           
  3808                           ; BSR set to: 62
  3809                           ;main.c: 270:  PWM5_LoadDutyValue(0);
  3810  011112  0E00               	movlw	0
  3811  011114  6E21               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  3812  011116  0E00               	movlw	0
  3813  011118  6E20               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  3814  01111A  EC51  F0A8         	call	_PWM5_LoadDutyValue	;wreg free
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;main.c: 271:  PWM6_LoadDutyValue(0);
  3818  01111E  0E00               	movlw	0
  3819  011120  6E21               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  3820  011122  0E00               	movlw	0
  3821  011124  6E20               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  3822  011126  EC9D  F0A8         	call	_PWM6_LoadDutyValue	;wreg free
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;main.c: 272:  DMA1_SetSCNTIInterruptHandler(source_dma_done);
  3826  01112A  0E58               	movlw	low _source_dma_done
  3827  01112C  6F60               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler& (0+255),b
  3828  01112E  0E57               	movlw	high _source_dma_done
  3829  011130  6F61               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)& (0+255),b
  3830  011132  0E01               	movlw	low (_source_dma_done shr (0+16))
  3831  011134  6F62               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)& (0+255),b
  3832  011136  EC74  F0AB         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;main.c: 275:  (INTCON0bits.GIEH = 1);
  3836  01113A  8ED2               	bsf	210,7,c	;volatile
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;main.c: 278:  (INTCON0bits.GIEL = 1);
  3840  01113C  8CD2               	bsf	210,6,c	;volatile
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;main.c: 280:  DAC1_SetOutput(dac_v);
  3844  01113E  51FA               	movf	_dac_v& (0+255),w,b
  3845  011140  EC94  F0AB         	call	_DAC1_SetOutput
  3846                           
  3847                           ;main.c: 282:  init_display();
  3848  011144  EC4D  F09F         	call	_init_display	;wreg free
  3849                           
  3850                           ; BSR set to: 61
  3851                           ;main.c: 283:  eaDogM_WriteCommand(0b00001100);
  3852  011148  0E0C               	movlw	12
  3853  01114A  EC12  F0AB         	call	_eaDogM_WriteCommand
  3854  01114E                     l11005:
  3855  01114E  0EF7               	movlw	low main@i
  3856  011150  6E21               	movwf	linux_getc@a_data^0,c
  3857  011152  EC8C  F0A9         	call	_linux_getc	;wreg free
  3858  011156  0900               	iorlw	0
  3859  011158  A4D8               	btfss	status,2,c
  3860  01115A  D7F9               	goto	l11005
  3861                           
  3862                           ;main.c: 288:  scmd_init();
  3863  01115C  ECCB  F0AA         	call	_scmd_init	;wreg free
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;main.c: 289:  sprintf(buff1, "\r\n Build %s %s\r\n", build_date, build_time);
  3867  011160  0E00               	movlw	low _buff1
  3868  011162  0101               	movlb	1	; () banked
  3869  011164  6F82               	movwf	sprintf@s& (0+255),b
  3870  011166  0E04               	movlw	high _buff1
  3871  011168  6F83               	movwf	(sprintf@s+1)& (0+255),b
  3872  01116A  0EA0               	movlw	low STR_12
  3873  01116C  6F84               	movwf	sprintf@fmt& (0+255),b
  3874  01116E  0EFF               	movlw	high STR_12
  3875  011170  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  3876  011172  0EB1               	movlw	low STR_1
  3877  011174  6F86               	movwf	(?_sprintf+4)& (0+255),b
  3878  011176  0EFF               	movlw	high STR_1
  3879  011178  6F87               	movwf	(?_sprintf+5)& (0+255),b
  3880  01117A  0EBD               	movlw	low STR_2
  3881  01117C  6F88               	movwf	(?_sprintf+6)& (0+255),b
  3882  01117E  0EFF               	movlw	high STR_2
  3883  011180  6F89               	movwf	(?_sprintf+7)& (0+255),b
  3884  011182  ECE4  F0A4         	call	_sprintf	;wreg free
  3885                           
  3886                           ; BSR set to: 1
  3887                           ;main.c: 290:  puts(buff1);
  3888  011186  0E00               	movlw	low _buff1
  3889  011188  0100               	movlb	0	; () banked
  3890  01118A  6F72               	movwf	puts@s& (0+255),b
  3891  01118C  0E04               	movlw	high _buff1
  3892  01118E  6F73               	movwf	(puts@s+1)& (0+255),b
  3893  011190  EC16  F0A8         	call	_puts	;wreg free
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;main.c: 291:  WaitMs(300);
  3897  011194  0E01               	movlw	1
  3898  011196  6F64               	movwf	(WaitMs@numMilliseconds+1)& (0+255),b
  3899  011198  0E2C               	movlw	44
  3900  01119A  6F63               	movwf	WaitMs@numMilliseconds& (0+255),b
  3901  01119C  EC51  F0A9         	call	_WaitMs	;wreg free
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;main.c: 292:  sprintf(buff1, "%s %s", build_date, build_time);
  3905  0111A0  0E00               	movlw	low _buff1
  3906  0111A2  0101               	movlb	1	; () banked
  3907  0111A4  6F82               	movwf	sprintf@s& (0+255),b
  3908  0111A6  0E04               	movlw	high _buff1
  3909  0111A8  6F83               	movwf	(sprintf@s+1)& (0+255),b
  3910  0111AA  0EC6               	movlw	low STR_13
  3911  0111AC  6F84               	movwf	sprintf@fmt& (0+255),b
  3912  0111AE  0EFF               	movlw	high STR_13
  3913  0111B0  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  3914  0111B2  0EB1               	movlw	low STR_1
  3915  0111B4  6F86               	movwf	(?_sprintf+4)& (0+255),b
  3916  0111B6  0EFF               	movlw	high STR_1
  3917  0111B8  6F87               	movwf	(?_sprintf+5)& (0+255),b
  3918  0111BA  0EBD               	movlw	low STR_2
  3919  0111BC  6F88               	movwf	(?_sprintf+6)& (0+255),b
  3920  0111BE  0EFF               	movlw	high STR_2
  3921  0111C0  6F89               	movwf	(?_sprintf+7)& (0+255),b
  3922  0111C2  ECE4  F0A4         	call	_sprintf	;wreg free
  3923                           
  3924                           ; BSR set to: 1
  3925                           ;main.c: 293:  eaDogM_WriteStringAtPos(0, 0, buff1);
  3926  0111C6  0E00               	movlw	0
  3927  0111C8  0100               	movlb	0	; () banked
  3928  0111CA  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  3929  0111CC  0E00               	movlw	low _buff1
  3930  0111CE  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  3931  0111D0  0E04               	movlw	high _buff1
  3932  0111D2  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  3933  0111D4  0E00               	movlw	0
  3934  0111D6  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  3935                           
  3936                           ; BSR set to: 59
  3937                           ;main.c: 294:  sprintf(buff1, "%s", build_version);
  3938  0111DA  0E00               	movlw	low _buff1
  3939  0111DC  0101               	movlb	1	; () banked
  3940  0111DE  6F82               	movwf	sprintf@s& (0+255),b
  3941  0111E0  0E04               	movlw	high _buff1
  3942  0111E2  6F83               	movwf	(sprintf@s+1)& (0+255),b
  3943  0111E4  0EC9               	movlw	low (STR_13+3)
  3944  0111E6  6F84               	movwf	sprintf@fmt& (0+255),b
  3945  0111E8  0EFF               	movlw	high (STR_13+3)
  3946  0111EA  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  3947  0111EC  0EE4               	movlw	low _build_version
  3948  0111EE  6F86               	movwf	(?_sprintf+4)& (0+255),b
  3949  0111F0  0EFD               	movlw	high _build_version
  3950  0111F2  6F87               	movwf	(?_sprintf+5)& (0+255),b
  3951  0111F4  ECE4  F0A4         	call	_sprintf	;wreg free
  3952                           
  3953                           ; BSR set to: 1
  3954                           ;main.c: 295:  eaDogM_WriteStringAtPos(1, 0, buff1);
  3955  0111F8  0E00               	movlw	0
  3956  0111FA  0100               	movlb	0	; () banked
  3957  0111FC  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  3958  0111FE  0E00               	movlw	low _buff1
  3959  011200  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  3960  011202  0E04               	movlw	high _buff1
  3961  011204  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  3962  011206  0E01               	movlw	1
  3963  011208  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  3964                           
  3965                           ; BSR set to: 59
  3966                           ;main.c: 298:  if (DATAEE_ReadByte(0x00) != '1') {
  3967  01120C  0E00               	movlw	0
  3968  01120E  6E21               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  3969  011210  0E00               	movlw	0
  3970  011212  6E20               	movwf	DATAEE_ReadByte@bAdd^0,c
  3971  011214  EC85  F0AA         	call	_DATAEE_ReadByte	;wreg free
  3972  011218  0A31               	xorlw	49
  3973  01121A  B4D8               	btfsc	status,2,c
  3974  01121C  D02E               	goto	l11027
  3975                           
  3976                           ; BSR set to: 57
  3977                           ;main.c: 299:   DATAEE_WriteByte(0x00, '1');
  3978  01121E  0E00               	movlw	0
  3979  011220  0100               	movlb	0	; () banked
  3980  011222  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3981  011224  0E00               	movlw	0
  3982  011226  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3983  011228  0E31               	movlw	49
  3984  01122A  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3985  01122C  ECFF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  3986                           
  3987                           ;main.c: 300:   DATAEE_WriteByte(0x00 + 1, '9');
  3988  011230  0E00               	movlw	0
  3989  011232  0100               	movlb	0	; () banked
  3990  011234  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3991  011236  0E01               	movlw	1
  3992  011238  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3993  01123A  0E39               	movlw	57
  3994  01123C  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3995  01123E  ECFF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  3996                           
  3997                           ;main.c: 301:   DATAEE_WriteByte(0x00 + 2, '5');
  3998  011242  0E00               	movlw	0
  3999  011244  0100               	movlb	0	; () banked
  4000  011246  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  4001  011248  0E02               	movlw	2
  4002  01124A  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  4003  01124C  0E35               	movlw	53
  4004  01124E  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4005  011250  ECFF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  4006                           
  4007                           ;main.c: 302:   DATAEE_WriteByte(0x00 + 3, '7');
  4008  011254  0E00               	movlw	0
  4009  011256  0100               	movlb	0	; () banked
  4010  011258  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  4011  01125A  0E03               	movlw	3
  4012  01125C  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  4013  01125E  0E37               	movlw	55
  4014  011260  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4015  011262  ECFF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  4016                           
  4017                           ;main.c: 303:   DATAEE_WriteByte(0x10, 0);
  4018  011266  0E00               	movlw	0
  4019  011268  0100               	movlb	0	; () banked
  4020  01126A  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  4021  01126C  0E10               	movlw	16
  4022  01126E  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  4023  011270  0E00               	movlw	0
  4024  011272  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4025  011274  ECFF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  4026                           
  4027                           ;main.c: 304:  } else {
  4028  011278  D007               	goto	l11029
  4029  01127A                     l11027:
  4030                           
  4031                           ; BSR set to: 57
  4032                           ;main.c: 305:   ps_type_index = DATAEE_ReadByte(0x10);
  4033  01127A  0E00               	movlw	0
  4034  01127C  6E21               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  4035  01127E  0E10               	movlw	16
  4036  011280  6E20               	movwf	DATAEE_ReadByte@bAdd^0,c
  4037  011282  EC85  F0AA         	call	_DATAEE_ReadByte	;wreg free
  4038  011286  6E36               	movwf	_ps_type_index^0,c	;volatile
  4039  011288                     l11029:
  4040                           
  4041                           ;main.c: 308:  WaitMs(2000);
  4042  011288  0E07               	movlw	7
  4043  01128A  0100               	movlb	0	; () banked
  4044  01128C  6F64               	movwf	(WaitMs@numMilliseconds+1)& (0+255),b
  4045  01128E  0ED0               	movlw	208
  4046  011290  6F63               	movwf	WaitMs@numMilliseconds& (0+255),b
  4047  011292  EC51  F0A9         	call	_WaitMs	;wreg free
  4048  011296                     l11031:
  4049                           
  4050                           ;main.c: 311:   if (adc_tick) {
  4051  011296  0101               	movlb	1	; () banked
  4052  011298  5160               	movf	_adc_tick& (0+255),w,b	;volatile
  4053  01129A  B4D8               	btfsc	status,2,c
  4054  01129C  D7FC               	goto	l11031
  4055                           
  4056                           ; BSR set to: 1
  4057                           ;main.c: 312:    if (a[a_index].ana[PS_V_ANA] < 900) {
  4058  01129E  5039               	movf	_a_index^0,w,c	;volatile
  4059  0112A0  0D7E               	mullw	126
  4060  0112A2  0E83               	movlw	low _a
  4061  0112A4  24F3               	addwf	243,w,c
  4062  0112A6  6ED9               	movwf	fsr2l,c
  4063  0112A8  0E05               	movlw	high _a
  4064  0112AA  20F4               	addwfc	prodh,w,c
  4065  0112AC  6EDA               	movwf	fsr2h,c
  4066  0112AE  0E84               	movlw	132
  4067  0112B0  5CDE               	subwf	postinc2,w,c
  4068  0112B2  0E03               	movlw	3
  4069  0112B4  58DE               	subwfb	postinc2,w,c
  4070  0112B6  B0D8               	btfsc	status,0,c
  4071  0112B8  D004               	goto	l11037
  4072                           
  4073                           ; BSR set to: 1
  4074                           ;main.c: 313:     display_led(oo00_off);
  4075  0112BA  0E00               	movlw	0
  4076  0112BC  ECAE  F09F         	call	_display_led
  4077                           
  4078                           ;main.c: 314:    } else {
  4079  0112C0  D015               	goto	l11043
  4080  0112C2                     l11037:
  4081                           
  4082                           ; BSR set to: 1
  4083                           ;main.c: 315:     if (a[a_index].ana[PS_V_ANA] > 1800) {
  4084  0112C2  5039               	movf	_a_index^0,w,c	;volatile
  4085  0112C4  0D7E               	mullw	126
  4086  0112C6  0E83               	movlw	low _a
  4087  0112C8  24F3               	addwf	243,w,c
  4088  0112CA  6ED9               	movwf	fsr2l,c
  4089  0112CC  0E05               	movlw	high _a
  4090  0112CE  20F4               	addwfc	prodh,w,c
  4091  0112D0  6EDA               	movwf	fsr2h,c
  4092  0112D2  0E09               	movlw	9
  4093  0112D4  5CDE               	subwf	postinc2,w,c
  4094  0112D6  0E07               	movlw	7
  4095  0112D8  58DE               	subwfb	postinc2,w,c
  4096  0112DA  A0D8               	btfss	status,0,c
  4097  0112DC  D004               	goto	l11041
  4098                           
  4099                           ; BSR set to: 1
  4100                           ;main.c: 316:      display_led(oo00_g);
  4101  0112DE  0E01               	movlw	1
  4102  0112E0  ECAE  F09F         	call	_display_led
  4103                           
  4104                           ;main.c: 317:     } else {
  4105  0112E4  D003               	goto	l11043
  4106  0112E6                     l11041:
  4107                           
  4108                           ; BSR set to: 1
  4109                           ;main.c: 318:      display_led(oo00_r);
  4110  0112E6  0E02               	movlw	2
  4111  0112E8  ECAE  F09F         	call	_display_led
  4112  0112EC                     l11043:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;main.c: 322:    if (a[a_index].ana[PS_I_ANA] < 50) {
  4116  0112EC  5039               	movf	_a_index^0,w,c	;volatile
  4117  0112EE  0D7E               	mullw	126
  4118  0112F0  0E85               	movlw	low (_a+2)
  4119  0112F2  24F3               	addwf	243,w,c
  4120  0112F4  6ED9               	movwf	fsr2l,c
  4121  0112F6  0E05               	movlw	high (_a+2)
  4122  0112F8  20F4               	addwfc	prodh,w,c
  4123  0112FA  6EDA               	movwf	fsr2h,c
  4124  0112FC  0E01               	movlw	1
  4125  0112FE  50DB               	movf	plusw2,w,c
  4126  011300  E108               	bnz	l11047
  4127  011302  0E32               	movlw	50
  4128  011304  5CDE               	subwf	postinc2,w,c
  4129  011306  B0D8               	btfsc	status,0,c
  4130  011308  D004               	goto	l11047
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;main.c: 323:     display_led(oo10_off);
  4134  01130A  0E03               	movlw	3
  4135  01130C  ECAE  F09F         	call	_display_led
  4136                           
  4137                           ;main.c: 324:    } else {
  4138  011310  D016               	goto	l11053
  4139  011312                     l11047:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;main.c: 325:     if (a[a_index].ana[PS_I_ANA] > 150) {
  4143  011312  5039               	movf	_a_index^0,w,c	;volatile
  4144  011314  0D7E               	mullw	126
  4145  011316  0E85               	movlw	low (_a+2)
  4146  011318  24F3               	addwf	243,w,c
  4147  01131A  6ED9               	movwf	fsr2l,c
  4148  01131C  0E05               	movlw	high (_a+2)
  4149  01131E  20F4               	addwfc	prodh,w,c
  4150  011320  6EDA               	movwf	fsr2h,c
  4151  011322  0E01               	movlw	1
  4152  011324  50DB               	movf	plusw2,w,c
  4153  011326  E104               	bnz	u10560
  4154  011328  0E97               	movlw	151
  4155  01132A  5CDE               	subwf	postinc2,w,c
  4156  01132C  A0D8               	btfss	status,0,c
  4157  01132E  D004               	goto	l11051
  4158  011330                     u10560:
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;main.c: 326:      display_led(oo10_g);
  4162  011330  0E04               	movlw	4
  4163  011332  ECAE  F09F         	call	_display_led
  4164                           
  4165                           ;main.c: 327:     } else {
  4166  011336  D003               	goto	l11053
  4167  011338                     l11051:
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;main.c: 328:      display_led(oo10_r);
  4171  011338  0E05               	movlw	5
  4172  01133A  ECAE  F09F         	call	_display_led
  4173  01133E                     l11053:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;main.c: 331:    adc_tick = 0;
  4177  01133E  0E00               	movlw	0
  4178  011340  0101               	movlb	1	; () banked
  4179  011342  6F60               	movwf	_adc_tick& (0+255),b	;volatile
  4180                           
  4181                           ; BSR set to: 1
  4182                           ;main.c: 333:    if (!PORTAbits.RA6) {
  4183  011344  BCCA               	btfsc	202,6,c	;volatile
  4184  011346  D004               	goto	l11059
  4185                           
  4186                           ; BSR set to: 1
  4187                           ;main.c: 334:     display_led(oo30_r);
  4188  011348  0E0B               	movlw	11
  4189  01134A  ECAE  F09F         	call	_display_led
  4190                           
  4191                           ;main.c: 335:    } else {
  4192  01134E  D003               	goto	l11061
  4193  011350                     l11059:
  4194                           
  4195                           ; BSR set to: 1
  4196                           ;main.c: 336:     display_led(oo30_off);
  4197  011350  0E09               	movlw	9
  4198  011352  ECAE  F09F         	call	_display_led
  4199  011356                     l11061:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;main.c: 340:    if (!PORTAbits.RA4) {
  4203  011356  B8CA               	btfsc	202,4,c	;volatile
  4204  011358  D004               	goto	l11065
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;main.c: 341:     display_led(oo20_g);
  4208  01135A  0E07               	movlw	7
  4209  01135C  ECAE  F09F         	call	_display_led
  4210                           
  4211                           ;main.c: 342:    } else {
  4212  011360  D003               	goto	l11067
  4213  011362                     l11065:
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;main.c: 343:     display_led(oo20_off);
  4217  011362  0E06               	movlw	6
  4218  011364  ECAE  F09F         	call	_display_led
  4219  011368                     l11067:
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;main.c: 346:    if (disp_tick) {
  4223  011368  0101               	movlb	1	; () banked
  4224  01136A  5161               	movf	_disp_tick& (0+255),w,b	;volatile
  4225  01136C  B4D8               	btfsc	status,2,c
  4226  01136E  D793               	goto	l11031
  4227                           
  4228                           ; BSR set to: 1
  4229                           ;main.c: 347:     ps_type_ptr = &ps_type[ps_type_index];
  4230  011370  5036               	movf	_ps_type_index^0,w,c	;volatile
  4231  011372  0D08               	mullw	8
  4232  011374  0EC2               	movlw	low _ps_type
  4233  011376  24F3               	addwf	243,w,c
  4234  011378  0100               	movlb	0	; () banked
  4235  01137A  6FFB               	movwf	_ps_type_ptr& (0+255),b
  4236  01137C  0E02               	movlw	high _ps_type
  4237  01137E  20F4               	addwfc	prodh,w,c
  4238  011380  6FFC               	movwf	(_ps_type_ptr+1)& (0+255),b
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;main.c: 348:     vval = (double) a[a_index].ana[PS_V_ANA] * ps_type_ptr->v_scale;
  4242  011382  5039               	movf	_a_index^0,w,c	;volatile
  4243  011384  0D7E               	mullw	126
  4244  011386  0E83               	movlw	low _a
  4245  011388  24F3               	addwf	243,w,c
  4246  01138A  6ED9               	movwf	fsr2l,c
  4247  01138C  0E05               	movlw	high _a
  4248  01138E  20F4               	addwfc	prodh,w,c
  4249  011390  6EDA               	movwf	fsr2h,c
  4250  011392  006F FF78  F0F4    	movff	postinc2,??_main
  4251  011398  006F FF74  F0F5    	movff	postdec2,??_main+1
  4252  01139E  C0F4  F064         	movff	??_main,___xxtofl@val
  4253  0113A2  C0F5  F065         	movff	??_main+1,___xxtofl@val+1
  4254  0113A6  6B66               	clrf	(___xxtofl@val+2)& (0+255),b
  4255  0113A8  6B67               	clrf	(___xxtofl@val+3)& (0+255),b
  4256  0113AA  0E00               	movlw	0
  4257  0113AC  EC03  F09B         	call	___xxtofl
  4258  0113B0  C064  F072         	movff	?___xxtofl,___flmul@b
  4259  0113B4  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  4260  0113B8  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  4261  0113BC  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  4262  0113C0  0060  F3EF  FFD9   	movff	_ps_type_ptr,fsr2l
  4263  0113C6  0060  F3F3  FFDA   	movff	_ps_type_ptr+1,fsr2h
  4264  0113CC  006F FF78  F076    	movff	postinc2,___flmul@a
  4265  0113D2  006F FF78  F077    	movff	postinc2,___flmul@a+1
  4266  0113D8  006F FF78  F078    	movff	postinc2,___flmul@a+2
  4267  0113DE  006F FF78  F079    	movff	postinc2,___flmul@a+3
  4268  0113E4  ECF1  F08F         	call	___flmul	;wreg free
  4269  0113E8  C072  F13C         	movff	?___flmul,_vval
  4270  0113EC  C073  F13D         	movff	?___flmul+1,_vval+1
  4271  0113F0  C074  F13E         	movff	?___flmul+2,_vval+2
  4272  0113F4  C075  F13F         	movff	?___flmul+3,_vval+3
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;main.c: 349:     ival = (double) a[a_index].ana[PS_I_ANA] * ps_type_ptr->i_scale;
  4276  0113F8  5039               	movf	_a_index^0,w,c	;volatile
  4277  0113FA  0D7E               	mullw	126
  4278  0113FC  0E85               	movlw	low (_a+2)
  4279  0113FE  24F3               	addwf	243,w,c
  4280  011400  6ED9               	movwf	fsr2l,c
  4281  011402  0E05               	movlw	high (_a+2)
  4282  011404  20F4               	addwfc	prodh,w,c
  4283  011406  6EDA               	movwf	fsr2h,c
  4284  011408  006F FF78  F0F4    	movff	postinc2,??_main
  4285  01140E  006F FF74  F0F5    	movff	postdec2,??_main+1
  4286  011414  C0F4  F064         	movff	??_main,___xxtofl@val
  4287  011418  C0F5  F065         	movff	??_main+1,___xxtofl@val+1
  4288  01141C  6B66               	clrf	(___xxtofl@val+2)& (0+255),b
  4289  01141E  6B67               	clrf	(___xxtofl@val+3)& (0+255),b
  4290  011420  0E00               	movlw	0
  4291  011422  EC03  F09B         	call	___xxtofl
  4292  011426  C064  F072         	movff	?___xxtofl,___flmul@b
  4293  01142A  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  4294  01142E  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  4295  011432  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  4296  011436  EE20 F004          	lfsr	2,4
  4297  01143A  51FB               	movf	_ps_type_ptr& (0+255),w,b
  4298  01143C  26D9               	addwf	fsr2l,f,c
  4299  01143E  51FC               	movf	(_ps_type_ptr+1)& (0+255),w,b
  4300  011440  22DA               	addwfc	fsr2h,f,c
  4301  011442  006F FF78  F076    	movff	postinc2,___flmul@a
  4302  011448  006F FF78  F077    	movff	postinc2,___flmul@a+1
  4303  01144E  006F FF78  F078    	movff	postinc2,___flmul@a+2
  4304  011454  006F FF78  F079    	movff	postinc2,___flmul@a+3
  4305  01145A  ECF1  F08F         	call	___flmul	;wreg free
  4306  01145E  C072  F138         	movff	?___flmul,_ival
  4307  011462  C073  F139         	movff	?___flmul+1,_ival+1
  4308  011466  C074  F13A         	movff	?___flmul+2,_ival+2
  4309  01146A  C075  F13B         	movff	?___flmul+3,_ival+3
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;main.c: 350:     ps_math(ps_type_ptr->v_scale, PS_V_ANA);
  4313  01146E  0060  F3EF  FFD9   	movff	_ps_type_ptr,fsr2l
  4314  011474  0060  F3F3  FFDA   	movff	_ps_type_ptr+1,fsr2h
  4315  01147A  006F FF78  F0C8    	movff	postinc2,ps_math@scale
  4316  011480  006F FF78  F0C9    	movff	postinc2,ps_math@scale+1
  4317  011486  006F FF78  F0CA    	movff	postinc2,ps_math@scale+2
  4318  01148C  006F FF78  F0CB    	movff	postinc2,ps_math@scale+3
  4319  011492  0E00               	movlw	0
  4320  011494  6FCC               	movwf	ps_math@chan& (0+255),b
  4321  011496  EC1F  F093         	call	_ps_math	;wreg free
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;main.c: 351:     printf(" PS TYPE %1u: PS Test %1u: DAC OUT %4.4umV B=%.2u, Supply Read
      +                          Back %4.4umV V=%+6.1fV %4.4umV I=%+3.1fmA : Statistics Std=%6.1fV Var=%6.1fV Mean=%6.1fV
      +                          \r\n",
  4325  01149A  0EF2               	movlw	low STR_15
  4326  01149C  0101               	movlb	1	; () banked
  4327  01149E  6F82               	movwf	printf@fmt& (0+255),b
  4328  0114A0  0EFD               	movlw	high STR_15
  4329  0114A2  6F83               	movwf	(printf@fmt+1)& (0+255),b
  4330  0114A4  C036  F184         	movff	_ps_type_index,?_printf+2	;volatile
  4331  0114A8  6B85               	clrf	(?_printf+3)& (0+255),b
  4332  0114AA  C037  F186         	movff	_mode,?_printf+4
  4333  0114AE  6B87               	clrf	(?_printf+5)& (0+255),b
  4334  0114B0  5039               	movf	_a_index^0,w,c	;volatile
  4335  0114B2  0D7E               	mullw	126
  4336  0114B4  0EFD               	movlw	low (_a+122)
  4337  0114B6  24F3               	addwf	243,w,c
  4338  0114B8  6ED9               	movwf	fsr2l,c
  4339  0114BA  0E05               	movlw	high (_a+122)
  4340  0114BC  20F4               	addwfc	prodh,w,c
  4341  0114BE  6EDA               	movwf	fsr2h,c
  4342  0114C0  006F FF78  F188    	movff	postinc2,?_printf+6
  4343  0114C6  006F FF74  F189    	movff	postdec2,?_printf+7
  4344  0114CC  ECA3  F0AB         	call	_DAC1_GetOutput	;wreg free
  4345  0114D0  0100               	movlb	0	; () banked
  4346  0114D2  6FF4               	movwf	??_main& (0+255),b
  4347  0114D4  51F4               	movf	??_main& (0+255),w,b
  4348  0114D6  0101               	movlb	1	; () banked
  4349  0114D8  6F8A               	movwf	(?_printf+8)& (0+255),b
  4350  0114DA  6B8B               	clrf	(?_printf+9)& (0+255),b
  4351  0114DC  5039               	movf	_a_index^0,w,c	;volatile
  4352  0114DE  0D7E               	mullw	126
  4353  0114E0  0E83               	movlw	low _a
  4354  0114E2  24F3               	addwf	243,w,c
  4355  0114E4  6ED9               	movwf	fsr2l,c
  4356  0114E6  0E05               	movlw	high _a
  4357  0114E8  20F4               	addwfc	prodh,w,c
  4358  0114EA  6EDA               	movwf	fsr2h,c
  4359  0114EC  006F FF78  F18C    	movff	postinc2,?_printf+10
  4360  0114F2  006F FF74  F18D    	movff	postdec2,?_printf+11
  4361  0114F8  C13C  F18E         	movff	_vval,?_printf+12
  4362  0114FC  C13D  F18F         	movff	_vval+1,?_printf+13
  4363  011500  C13E  F190         	movff	_vval+2,?_printf+14
  4364  011504  C13F  F191         	movff	_vval+3,?_printf+15
  4365  011508  5039               	movf	_a_index^0,w,c	;volatile
  4366  01150A  0D7E               	mullw	126
  4367  01150C  0E85               	movlw	low (_a+2)
  4368  01150E  24F3               	addwf	243,w,c
  4369  011510  6ED9               	movwf	fsr2l,c
  4370  011512  0E05               	movlw	high (_a+2)
  4371  011514  20F4               	addwfc	prodh,w,c
  4372  011516  6EDA               	movwf	fsr2h,c
  4373  011518  006F FF78  F192    	movff	postinc2,?_printf+16
  4374  01151E  006F FF74  F193    	movff	postdec2,?_printf+17
  4375  011524  C138  F194         	movff	_ival,?_printf+18
  4376  011528  C139  F195         	movff	_ival+1,?_printf+19
  4377  01152C  C13A  F196         	movff	_ival+2,?_printf+20
  4378  011530  C13B  F197         	movff	_ival+3,?_printf+21
  4379  011534  C124  F198         	movff	_stddeviation,?_printf+22
  4380  011538  C125  F199         	movff	_stddeviation+1,?_printf+23
  4381  01153C  C126  F19A         	movff	_stddeviation+2,?_printf+24
  4382  011540  C127  F19B         	movff	_stddeviation+3,?_printf+25
  4383  011544  C022  F19C         	movff	_variance,?_printf+26
  4384  011548  C023  F19D         	movff	_variance+1,?_printf+27
  4385  01154C  C024  F19E         	movff	_variance+2,?_printf+28
  4386  011550  C025  F19F         	movff	_variance+3,?_printf+29
  4387  011554  C128  F1A0         	movff	_mean,?_printf+30
  4388  011558  C129  F1A1         	movff	_mean+1,?_printf+31
  4389  01155C  C12A  F1A2         	movff	_mean+2,?_printf+32
  4390  011560  C12B  F1A3         	movff	_mean+3,?_printf+33
  4391  011564  EC79  F0A9         	call	_printf	;wreg free
  4392                           
  4393                           ; BSR set to: 1
  4394                           ;main.c: 354:     if (!(lcd_update++ & 0x03)) {
  4395  011568  0100               	movlb	0	; () banked
  4396  01156A  2BF6               	incf	main@lcd_update& (0+255),f,b
  4397  01156C  05F6               	decf	main@lcd_update& (0+255),w,b
  4398  01156E  6FF4               	movwf	??_main& (0+255),b
  4399  011570  0E03               	movlw	3
  4400  011572  17F4               	andwf	??_main& (0+255),f,b
  4401  011574  A4D8               	btfss	status,2,c
  4402  011576  D0F4               	goto	l11123
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;main.c: 355:      sprintf(buff1, "%4.4umV %4.4umV %4.4umV", a[a_index].ana[channel_DAC1
      +                          ], a[a_index].ana[PS_V_ANA], a[a_index].ana[PS_I_ANA]);
  4406  011578  0E00               	movlw	low _buff1
  4407  01157A  0101               	movlb	1	; () banked
  4408  01157C  6F82               	movwf	sprintf@s& (0+255),b
  4409  01157E  0E04               	movlw	high _buff1
  4410  011580  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4411  011582  0E01               	movlw	low STR_16
  4412  011584  6F84               	movwf	sprintf@fmt& (0+255),b
  4413  011586  0EFF               	movlw	high STR_16
  4414  011588  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4415  01158A  5039               	movf	_a_index^0,w,c	;volatile
  4416  01158C  0D7E               	mullw	126
  4417  01158E  0EFD               	movlw	low (_a+122)
  4418  011590  24F3               	addwf	243,w,c
  4419  011592  6ED9               	movwf	fsr2l,c
  4420  011594  0E05               	movlw	high (_a+122)
  4421  011596  20F4               	addwfc	prodh,w,c
  4422  011598  6EDA               	movwf	fsr2h,c
  4423  01159A  006F FF78  F186    	movff	postinc2,?_sprintf+4
  4424  0115A0  006F FF74  F187    	movff	postdec2,?_sprintf+5
  4425  0115A6  5039               	movf	_a_index^0,w,c	;volatile
  4426  0115A8  0D7E               	mullw	126
  4427  0115AA  0E83               	movlw	low _a
  4428  0115AC  24F3               	addwf	243,w,c
  4429  0115AE  6ED9               	movwf	fsr2l,c
  4430  0115B0  0E05               	movlw	high _a
  4431  0115B2  20F4               	addwfc	prodh,w,c
  4432  0115B4  6EDA               	movwf	fsr2h,c
  4433  0115B6  006F FF78  F188    	movff	postinc2,?_sprintf+6
  4434  0115BC  006F FF74  F189    	movff	postdec2,?_sprintf+7
  4435  0115C2  5039               	movf	_a_index^0,w,c	;volatile
  4436  0115C4  0D7E               	mullw	126
  4437  0115C6  0E85               	movlw	low (_a+2)
  4438  0115C8  24F3               	addwf	243,w,c
  4439  0115CA  6ED9               	movwf	fsr2l,c
  4440  0115CC  0E05               	movlw	high (_a+2)
  4441  0115CE  20F4               	addwfc	prodh,w,c
  4442  0115D0  6EDA               	movwf	fsr2h,c
  4443  0115D2  006F FF78  F18A    	movff	postinc2,?_sprintf+8
  4444  0115D8  006F FF74  F18B    	movff	postdec2,?_sprintf+9
  4445  0115DE  ECE4  F0A4         	call	_sprintf	;wreg free
  4446                           
  4447                           ; BSR set to: 1
  4448                           ;main.c: 356:      eaDogM_WriteStringAtPos(1, 0, buff1);
  4449  0115E2  0E00               	movlw	0
  4450  0115E4  0100               	movlb	0	; () banked
  4451  0115E6  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4452  0115E8  0E00               	movlw	low _buff1
  4453  0115EA  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4454  0115EC  0E04               	movlw	high _buff1
  4455  0115EE  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4456  0115F0  0E01               	movlw	1
  4457  0115F2  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  4458                           
  4459                           ; BSR set to: 59
  4460                           ;main.c: 357:      sprintf(buff1, "%4.4umV %4.4umV %4.4umV", a[a_index].ana[DAC_ANA], a[
      +                          a_index].ana[PWM5_ANA], a[a_index].ana[PWM6_ANA]);
  4461  0115F6  0E00               	movlw	low _buff1
  4462  0115F8  0101               	movlb	1	; () banked
  4463  0115FA  6F82               	movwf	sprintf@s& (0+255),b
  4464  0115FC  0E04               	movlw	high _buff1
  4465  0115FE  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4466  011600  0E01               	movlw	low STR_16
  4467  011602  6F84               	movwf	sprintf@fmt& (0+255),b
  4468  011604  0EFF               	movlw	high STR_16
  4469  011606  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4470  011608  5039               	movf	_a_index^0,w,c	;volatile
  4471  01160A  0D7E               	mullw	126
  4472  01160C  0EC5               	movlw	low (_a+66)
  4473  01160E  24F3               	addwf	243,w,c
  4474  011610  6ED9               	movwf	fsr2l,c
  4475  011612  0E05               	movlw	high (_a+66)
  4476  011614  20F4               	addwfc	prodh,w,c
  4477  011616  6EDA               	movwf	fsr2h,c
  4478  011618  006F FF78  F186    	movff	postinc2,?_sprintf+4
  4479  01161E  006F FF74  F187    	movff	postdec2,?_sprintf+5
  4480  011624  5039               	movf	_a_index^0,w,c	;volatile
  4481  011626  0D7E               	mullw	126
  4482  011628  0ED3               	movlw	low (_a+80)
  4483  01162A  24F3               	addwf	243,w,c
  4484  01162C  6ED9               	movwf	fsr2l,c
  4485  01162E  0E05               	movlw	high (_a+80)
  4486  011630  20F4               	addwfc	prodh,w,c
  4487  011632  6EDA               	movwf	fsr2h,c
  4488  011634  006F FF78  F188    	movff	postinc2,?_sprintf+6
  4489  01163A  006F FF74  F189    	movff	postdec2,?_sprintf+7
  4490  011640  5039               	movf	_a_index^0,w,c	;volatile
  4491  011642  0D7E               	mullw	126
  4492  011644  0ED5               	movlw	low (_a+82)
  4493  011646  24F3               	addwf	243,w,c
  4494  011648  6ED9               	movwf	fsr2l,c
  4495  01164A  0E05               	movlw	high (_a+82)
  4496  01164C  20F4               	addwfc	prodh,w,c
  4497  01164E  6EDA               	movwf	fsr2h,c
  4498  011650  006F FF78  F18A    	movff	postinc2,?_sprintf+8
  4499  011656  006F FF74  F18B    	movff	postdec2,?_sprintf+9
  4500  01165C  ECE4  F0A4         	call	_sprintf	;wreg free
  4501                           
  4502                           ;main.c: 358:      eaDogM_WriteStringAtPos(2, 0, buff1);
  4503  011660  0E00               	movlw	0
  4504  011662  0100               	movlb	0	; () banked
  4505  011664  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4506  011666  0E00               	movlw	low _buff1
  4507  011668  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4508  01166A  0E04               	movlw	high _buff1
  4509  01166C  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4510  01166E  0E02               	movlw	2
  4511  011670  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  4512                           
  4513                           ; BSR set to: 59
  4514                           ;main.c: 359:      sprintf(buff1, "M%1u, P%1u, D%3.1f V%3.1f   ", mode, ps_type_index, s
      +                          tddeviation, variance);
  4515  011674  0E00               	movlw	low _buff1
  4516  011676  0101               	movlb	1	; () banked
  4517  011678  6F82               	movwf	sprintf@s& (0+255),b
  4518  01167A  0E04               	movlw	high _buff1
  4519  01167C  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4520  01167E  0EE4               	movlw	low STR_18
  4521  011680  6F84               	movwf	sprintf@fmt& (0+255),b
  4522  011682  0EFE               	movlw	high STR_18
  4523  011684  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4524  011686  C037  F186         	movff	_mode,?_sprintf+4
  4525  01168A  6B87               	clrf	(?_sprintf+5)& (0+255),b
  4526  01168C  C036  F188         	movff	_ps_type_index,?_sprintf+6	;volatile
  4527  011690  6B89               	clrf	(?_sprintf+7)& (0+255),b
  4528  011692  C124  F18A         	movff	_stddeviation,?_sprintf+8
  4529  011696  C125  F18B         	movff	_stddeviation+1,?_sprintf+9
  4530  01169A  C126  F18C         	movff	_stddeviation+2,?_sprintf+10
  4531  01169E  C127  F18D         	movff	_stddeviation+3,?_sprintf+11
  4532  0116A2  C022  F18E         	movff	_variance,?_sprintf+12
  4533  0116A6  C023  F18F         	movff	_variance+1,?_sprintf+13
  4534  0116AA  C024  F190         	movff	_variance+2,?_sprintf+14
  4535  0116AE  C025  F191         	movff	_variance+3,?_sprintf+15
  4536  0116B2  ECE4  F0A4         	call	_sprintf	;wreg free
  4537                           
  4538                           ; BSR set to: 1
  4539                           ;main.c: 360:      eaDogM_WriteStringAtPos(3, 0, buff1);
  4540  0116B6  0E00               	movlw	0
  4541  0116B8  0100               	movlb	0	; () banked
  4542  0116BA  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4543  0116BC  0E00               	movlw	low _buff1
  4544  0116BE  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4545  0116C0  0E04               	movlw	high _buff1
  4546  0116C2  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4547  0116C4  0E03               	movlw	3
  4548  0116C6  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  4549                           
  4550                           ;main.c: 361:      sprintf(buff1, "V=%+6.1fV I=%+3.1fmA  ", vval, ival);
  4551  0116CA  0E00               	movlw	low _buff1
  4552  0116CC  0101               	movlb	1	; () banked
  4553  0116CE  6F82               	movwf	sprintf@s& (0+255),b
  4554  0116D0  0E04               	movlw	high _buff1
  4555  0116D2  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4556  0116D4  0E19               	movlw	low STR_19
  4557  0116D6  6F84               	movwf	sprintf@fmt& (0+255),b
  4558  0116D8  0EFF               	movlw	high STR_19
  4559  0116DA  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4560  0116DC  C13C  F186         	movff	_vval,?_sprintf+4
  4561  0116E0  C13D  F187         	movff	_vval+1,?_sprintf+5
  4562  0116E4  C13E  F188         	movff	_vval+2,?_sprintf+6
  4563  0116E8  C13F  F189         	movff	_vval+3,?_sprintf+7
  4564  0116EC  C138  F18A         	movff	_ival,?_sprintf+8
  4565  0116F0  C139  F18B         	movff	_ival+1,?_sprintf+9
  4566  0116F4  C13A  F18C         	movff	_ival+2,?_sprintf+10
  4567  0116F8  C13B  F18D         	movff	_ival+3,?_sprintf+11
  4568  0116FC  ECE4  F0A4         	call	_sprintf	;wreg free
  4569                           
  4570                           ; BSR set to: 1
  4571                           ;main.c: 362:      eaDogM_WriteStringAtPos(0, 0, buff1);
  4572  011700  0E00               	movlw	0
  4573  011702  0100               	movlb	0	; () banked
  4574  011704  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4575  011706  0E00               	movlw	low _buff1
  4576  011708  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4577  01170A  0E04               	movlw	high _buff1
  4578  01170C  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4579  01170E  0E00               	movlw	0
  4580  011710  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  4581  011714  D025               	goto	l11123
  4582  011716                     l11093:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;main.c: 369:      i_index++;
  4586  011716  2A38               	incf	_i_index^0,f,c	;volatile
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;main.c: 370:      if (dac_v > roll_max) {
  4590  011718  51FA               	movf	_dac_v& (0+255),w,b
  4591  01171A  0101               	movlb	1	; () banked
  4592  01171C  5DB0               	subwf	_roll_max& (0+255),w,b
  4593  01171E  B0D8               	btfsc	status,0,c
  4594  011720  D005               	goto	l11099
  4595                           
  4596                           ; BSR set to: 1
  4597                           ;main.c: 371:       dac_v = 0;
  4598  011722  0E00               	movlw	0
  4599  011724  0100               	movlb	0	; () banked
  4600  011726  6FFA               	movwf	_dac_v& (0+255),b
  4601                           
  4602                           ;main.c: 372:       i_index = 0;
  4603  011728  0E00               	movlw	0
  4604  01172A  6E38               	movwf	_i_index^0,c	;volatile
  4605  01172C                     l11099:
  4606                           
  4607                           ;main.c: 374:      DAC1_SetOutput(dac_v++);
  4608  01172C  0100               	movlb	0	; () banked
  4609  01172E  51FA               	movf	_dac_v& (0+255),w,b
  4610  011730  EC94  F0AB         	call	_DAC1_SetOutput
  4611  011734  0100               	movlb	0	; () banked
  4612  011736  2BFA               	incf	_dac_v& (0+255),f,b
  4613  011738  D007               	goto	l11109
  4614  01173A                     l11105:
  4615                           
  4616                           ; BSR set to: 0
  4617  01173A  9ABA               	bcf	186,5,c	;volatile
  4618  01173C  D024               	goto	l11125
  4619  01173E                     l1365:
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;main.c: 379:      dac_v = static_ps;
  4623  01173E  C1AF  F0FA         	movff	_static_ps,_dac_v
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;main.c: 380:      DAC1_SetOutput(dac_v);
  4627  011742  51FA               	movf	_dac_v& (0+255),w,b
  4628  011744  EC94  F0AB         	call	_DAC1_SetOutput
  4629  011748                     l11109:
  4630  011748  82BD               	bsf	189,1,c	;volatile
  4631  01174A  D7F7               	goto	l11105
  4632  01174C                     l11113:
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;main.c: 386:      mode = off_mode;
  4636  01174C  0E00               	movlw	0
  4637  01174E  6E37               	movwf	_mode^0,c
  4638                           
  4639                           ;main.c: 387:      dac_v = 0;
  4640  011750  0E00               	movlw	0
  4641  011752  6FFA               	movwf	_dac_v& (0+255),b
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;main.c: 388:      DAC1_SetOutput(dac_v);
  4645  011754  0E00               	movlw	0
  4646  011756  EC94  F0AB         	call	_DAC1_SetOutput
  4647  01175A  92BD               	bcf	189,1,c	;volatile
  4648  01175C  8ABA               	bsf	186,5,c	;volatile
  4649  01175E  D013               	goto	l11125
  4650  011760                     l11123:
  4651  011760  5037               	movf	_mode^0,w,c
  4652  011762  0100               	movlb	0	; () banked
  4653  011764  6FF4               	movwf	??_main& (0+255),b
  4654  011766  6BF5               	clrf	(??_main+1)& (0+255),b
  4655                           
  4656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4657                           ; Switch size 1, requested type "simple"
  4658                           ; Number of cases is 1, Range of values is 0 to 0
  4659                           ; switch strategies available:
  4660                           ; Name         Instructions Cycles
  4661                           ; simple_byte            4     3 (average)
  4662                           ;	Chosen strategy is simple_byte
  4663  011768  51F5               	movf	(??_main+1)& (0+255),w,b
  4664  01176A  0A00               	xorlw	0	; case 0
  4665  01176C  A4D8               	btfss	status,2,c
  4666  01176E  D7EE               	goto	l11113
  4667                           
  4668                           ; BSR set to: 0
  4669                           ; Switch size 1, requested type "simple"
  4670                           ; Number of cases is 3, Range of values is 0 to 2
  4671                           ; switch strategies available:
  4672                           ; Name         Instructions Cycles
  4673                           ; simple_byte           10     6 (average)
  4674                           ;	Chosen strategy is simple_byte
  4675  011770  51F4               	movf	??_main& (0+255),w,b
  4676  011772  0A00               	xorlw	0	; case 0
  4677  011774  B4D8               	btfsc	status,2,c
  4678  011776  D7EA               	goto	l11113
  4679  011778  0A01               	xorlw	1	; case 1
  4680  01177A  B4D8               	btfsc	status,2,c
  4681  01177C  D7CC               	goto	l11093
  4682  01177E  0A03               	xorlw	3	; case 2
  4683  011780  B4D8               	btfsc	status,2,c
  4684  011782  D7DD               	goto	l1365
  4685  011784  D7E3               	goto	l11113
  4686  011786                     l11125:
  4687                           
  4688                           ;main.c: 398:     cli_read(&cli_ctx);
  4689  011786  0E00               	movlw	low _cli_ctx
  4690  011788  0100               	movlb	0	; () banked
  4691  01178A  6F83               	movwf	cli_read@a_ctx& (0+255),b
  4692  01178C  0E05               	movlw	high _cli_ctx
  4693  01178E  6F84               	movwf	(cli_read@a_ctx+1)& (0+255),b
  4694  011790  EC0F  F099         	call	_cli_read	;wreg free
  4695                           
  4696                           ;main.c: 399:     disp_tick = 0;
  4697  011794  0E00               	movlw	0
  4698  011796  0101               	movlb	1	; () banked
  4699  011798  6F61               	movwf	_disp_tick& (0+255),b	;volatile
  4700                           
  4701                           ; BSR set to: 1
  4702                           ;main.c: 400:     if (!PORTBbits.RB0) {
  4703  01179A  B0CB               	btfsc	203,0,c	;volatile
  4704  01179C  D009               	goto	l11139
  4705                           
  4706                           ; BSR set to: 1
  4707                           ;main.c: 401:      if (++mode_sw > 4) {
  4708  01179E  2B5F               	incf	_mode_sw& (0+255),f,b
  4709  0117A0  0E04               	movlw	4
  4710  0117A2  655F               	cpfsgt	_mode_sw& (0+255),b
  4711  0117A4  D578               	goto	l11031
  4712                           
  4713                           ; BSR set to: 1
  4714                           ;main.c: 402:       mode++;
  4715  0117A6  2A37               	incf	_mode^0,f,c
  4716                           
  4717                           ; BSR set to: 1
  4718                           ;main.c: 403:       mode_sw = 0;
  4719  0117A8  0E00               	movlw	0
  4720  0117AA  6F5F               	movwf	_mode_sw& (0+255),b
  4721                           
  4722                           ; BSR set to: 1
  4723  0117AC  84BE               	bsf	190,2,c	;volatile
  4724  0117AE  D573               	goto	l11031
  4725  0117B0                     l11139:
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;main.c: 407:      mode_sw = 0;
  4729  0117B0  0E00               	movlw	0
  4730  0117B2  6F5F               	movwf	_mode_sw& (0+255),b
  4731                           
  4732                           ; BSR set to: 1
  4733  0117B4  94BE               	bcf	190,2,c	;volatile
  4734  0117B6  D56F               	goto	l11031
  4735  0117B8                     __end_of_main:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function _sprintf *****************
  4739 ;; Defined at:
  4740 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  s               2   22[BANK1 ] PTR unsigned char 
  4743 ;;		 -> buff1(255), 
  4744 ;;  fmt             2   24[BANK1 ] PTR const unsigned char 
  4745 ;;		 -> STR_19(23), STR_18(29), STR_17(24), STR_16(24), 
  4746 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  f              11   40[BANK1 ] struct _IO_FILE
  4749 ;;  ap              2   38[BANK1 ] PTR void [1]
  4750 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4751 ;;  ret             2    0        int 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  2   22[BANK1 ] int 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 3F/1
  4758 ;;		On exit  : 3F/1
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4761 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4762 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4764 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4765 ;;Total ram usage:       29 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; Hardware stack levels required when called: 15
  4768 ;; This function calls:
  4769 ;;		_vfprintf
  4770 ;; This function is called by:
  4771 ;;		_main
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text1
  4776  0149C8                     __ptext1:
  4777                           	callstack 0
  4778  0149C8                     _sprintf:
  4779                           	callstack 15
  4780                           
  4781                           ; BSR set to: 1
  4782                           
  4783                           ; BSR set to: 1
  4784                           ;incstack = 0
  4785  0149C8  0E86               	movlw	low (?_sprintf+4)
  4786  0149CA  6F92               	movwf	sprintf@ap& (0+255),b
  4787  0149CC  0E01               	movlw	high (?_sprintf+4)
  4788  0149CE  6F93               	movwf	(sprintf@ap+1)& (0+255),b
  4789  0149D0  C182  F194         	movff	sprintf@s,sprintf@f
  4790  0149D4  C183  F195         	movff	sprintf@s+1,sprintf@f+1
  4791                           
  4792                           ; BSR set to: 1
  4793  0149D8  0E00               	movlw	0
  4794  0149DA  6F98               	movwf	(sprintf@f+4)& (0+255),b
  4795  0149DC  0E00               	movlw	0
  4796  0149DE  6F97               	movwf	(sprintf@f+3)& (0+255),b
  4797                           
  4798                           ; BSR set to: 1
  4799  0149E0  0E00               	movlw	0
  4800  0149E2  6F9E               	movwf	(sprintf@f+10)& (0+255),b
  4801  0149E4  0E00               	movlw	0
  4802  0149E6  6F9D               	movwf	(sprintf@f+9)& (0+255),b
  4803                           
  4804                           ; BSR set to: 1
  4805  0149E8  0E94               	movlw	low sprintf@f
  4806  0149EA  0100               	movlb	0	; () banked
  4807  0149EC  6FEA               	movwf	vfprintf@fp& (0+255),b
  4808  0149EE  0E01               	movlw	high sprintf@f
  4809  0149F0  6FEB               	movwf	(vfprintf@fp+1)& (0+255),b
  4810  0149F2  C184  F0EC         	movff	sprintf@fmt,vfprintf@fmt
  4811  0149F6  C185  F0ED         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4812  0149FA  0E92               	movlw	low sprintf@ap
  4813  0149FC  6FEE               	movwf	vfprintf@ap& (0+255),b
  4814  0149FE  0E01               	movlw	high sprintf@ap
  4815  014A00  6FEF               	movwf	(vfprintf@ap+1)& (0+255),b
  4816  014A02  ECB0  F0A3         	call	_vfprintf	;wreg free
  4817                           
  4818                           ; BSR set to: 1
  4819  014A06  5197               	movf	(sprintf@f+3)& (0+255),w,b
  4820  014A08  2582               	addwf	sprintf@s& (0+255),w,b
  4821  014A0A  6ED9               	movwf	fsr2l,c
  4822  014A0C  5198               	movf	(sprintf@f+4)& (0+255),w,b
  4823  014A0E  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
  4824  014A10  6EDA               	movwf	fsr2h,c
  4825  014A12  0E00               	movlw	0
  4826  014A14  6EDF               	movwf	indf2,c
  4827                           
  4828                           ; BSR set to: 1
  4829  014A16  0012               	return		;funcret
  4830  014A18                     __end_of_sprintf:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _scmd_init *****************
  4834 ;; Defined at:
  4835 ;;		line 36 in file "scdm.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/3D
  4846 ;;		On exit  : 3F/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; Hardware stack levels required when called: 13
  4856 ;; This function calls:
  4857 ;;		_cli_init
  4858 ;; This function is called by:
  4859 ;;		_main
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text2
  4864  015596                     __ptext2:
  4865                           	callstack 0
  4866  015596                     _scmd_init:
  4867                           	callstack 17
  4868                           
  4869                           ;scdm.c: 38:  cli_init(&cli_ctx, g_cmds);
  4870                           
  4871                           ; BSR set to: 1
  4872                           ;incstack = 0
  4873  015596  0E00               	movlw	low _cli_ctx
  4874  015598  0100               	movlb	0	; () banked
  4875  01559A  6F75               	movwf	cli_init@a_ctx& (0+255),b
  4876  01559C  0E05               	movlw	high _cli_ctx
  4877  01559E  6F76               	movwf	(cli_init@a_ctx+1)& (0+255),b
  4878  0155A0  0E90               	movlw	low _g_cmds
  4879  0155A2  6F77               	movwf	cli_init@a_cmds& (0+255),b
  4880  0155A4  0E02               	movlw	high _g_cmds
  4881  0155A6  6F78               	movwf	(cli_init@a_cmds+1)& (0+255),b
  4882  0155A8  EC5B  F0A6         	call	_cli_init	;wreg free
  4883                           
  4884                           ; BSR set to: 0
  4885  0155AC  0012               	return		;funcret
  4886  0155AE                     __end_of_scmd_init:
  4887                           	callstack 0
  4888                           
  4889 ;; *************** function _cli_init *****************
  4890 ;; Defined at:
  4891 ;;		line 26 in file "scdm.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  a_ctx           2   21[BANK0 ] PTR struct _t_cli_ctx
  4894 ;;		 -> cli_ctx(131), 
  4895 ;;  a_cmds          2   23[BANK0 ] PTR struct _t_cmd
  4896 ;;		 -> g_cmds(50), 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 3F/0
  4905 ;;		On exit  : 3F/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4908 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4911 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4912 ;;Total ram usage:        4 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 12
  4915 ;; This function calls:
  4916 ;;		_memset
  4917 ;;		_puts
  4918 ;; This function is called by:
  4919 ;;		_scmd_init
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text3
  4924  014CB6                     __ptext3:
  4925                           	callstack 0
  4926  014CB6                     _cli_init:
  4927                           	callstack 17
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;scdm.c: 26: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 27: {;scdm.c:
      +                           28:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;incstack = 0
  4934  014CB6  C075  F060         	movff	cli_init@a_ctx,memset@dest
  4935  014CBA  C076  F061         	movff	cli_init@a_ctx+1,memset@dest+1
  4936  014CBE  0E00               	movlw	0
  4937  014CC0  6F63               	movwf	(memset@c+1)& (0+255),b
  4938  014CC2  0E00               	movlw	0
  4939  014CC4  6F62               	movwf	memset@c& (0+255),b
  4940  014CC6  0E00               	movlw	0
  4941  014CC8  6F65               	movwf	(memset@n+1)& (0+255),b
  4942  014CCA  0E83               	movlw	131
  4943  014CCC  6F64               	movwf	memset@n& (0+255),b
  4944  014CCE  EC5D  F09A         	call	_memset	;wreg free
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;scdm.c: 29:  a_ctx->cmds = a_cmds;
  4948  014CD2  0060  F1D7  FFD9   	movff	cli_init@a_ctx,fsr2l
  4949  014CD8  0060  F1DB  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  4950  014CDE  0060  F1DF  FFDE   	movff	cli_init@a_cmds,postinc2
  4951  014CE4  0060  F1E3  FFDD   	movff	cli_init@a_cmds+1,postdec2
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;scdm.c: 33:  puts(cmdm);
  4955  014CEA  0EC8               	movlw	low _cmdm
  4956  014CEC  6F72               	movwf	puts@s& (0+255),b
  4957  014CEE  0EFD               	movlw	high _cmdm
  4958  014CF0  6F73               	movwf	(puts@s+1)& (0+255),b
  4959  014CF2  EC16  F0A8         	call	_puts	;wreg free
  4960                           
  4961                           ; BSR set to: 0
  4962  014CF6  0012               	return		;funcret
  4963  014CF8                     __end_of_cli_init:
  4964                           	callstack 0
  4965                           
  4966 ;; *************** function _ps_math *****************
  4967 ;; Defined at:
  4968 ;;		line 236 in file "main.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  scale           4  104[BANK0 ] void 
  4971 ;;  chan            1  108[BANK0 ] enum E17075
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  i               2  115[BANK0 ] int 
  4974 ;;  n               2  113[BANK0 ] int 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 3F/0
  4981 ;;		On exit  : 3F/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4984 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4985 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4986 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4987 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4988 ;;Total ram usage:       13 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; Hardware stack levels required when called: 9
  4991 ;; This function calls:
  4992 ;;		___fladd
  4993 ;;		___fldiv
  4994 ;;		___flmul
  4995 ;;		___flsub
  4996 ;;		___wmul
  4997 ;;		___xxtofl
  4998 ;;		_sqrtf
  4999 ;; This function is called by:
  5000 ;;		_main
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text4
  5005  01263E                     __ptext4:
  5006                           	callstack 0
  5007  01263E                     _ps_math:
  5008                           	callstack 21
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;main.c: 236: void ps_math(double scale, adcc_channel_t chan);main.c: 237: {;main.c: 238
      +                          :  int i, n = 0;
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;incstack = 0
  5015  01263E  0E00               	movlw	0
  5016  012640  6FD2               	movwf	(ps_math@n+1)& (0+255),b
  5017  012642  0E00               	movlw	0
  5018  012644  6FD1               	movwf	ps_math@n& (0+255),b
  5019                           
  5020                           ;main.c: 240:  sum = sumsqr = 0.0;
  5021  012646  0E00               	movlw	0
  5022  012648  0101               	movlb	1	; () banked
  5023  01264A  6F2C               	movwf	_sumsqr& (0+255),b
  5024  01264C  0E00               	movlw	0
  5025  01264E  6F2D               	movwf	(_sumsqr+1)& (0+255),b
  5026  012650  0E00               	movlw	0
  5027  012652  6F2E               	movwf	(_sumsqr+2)& (0+255),b
  5028  012654  0E00               	movlw	0
  5029  012656  6F2F               	movwf	(_sumsqr+3)& (0+255),b
  5030  012658  C12C  F130         	movff	_sumsqr,_sum
  5031  01265C  C12D  F131         	movff	_sumsqr+1,_sum+1
  5032  012660  C12E  F132         	movff	_sumsqr+2,_sum+2
  5033  012664  C12F  F133         	movff	_sumsqr+3,_sum+3
  5034                           
  5035                           ;main.c: 241:  for (i = 0; i < 32; i++) {
  5036  012668  0E00               	movlw	0
  5037  01266A  0100               	movlb	0	; () banked
  5038  01266C  6FD4               	movwf	(ps_math@i+1)& (0+255),b
  5039  01266E  0E00               	movlw	0
  5040  012670  6FD3               	movwf	ps_math@i& (0+255),b
  5041  012672                     l10789:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;main.c: 242:   sum += ((double) a[i].ana[chan] * scale);
  5045  012672  C130  F08B         	movff	_sum,___fladd@b
  5046  012676  C131  F08C         	movff	_sum+1,___fladd@b+1
  5047  01267A  C132  F08D         	movff	_sum+2,___fladd@b+2
  5048  01267E  C133  F08E         	movff	_sum+3,___fladd@b+3
  5049  012682  C0C8  F076         	movff	ps_math@scale,___flmul@a
  5050  012686  C0C9  F077         	movff	ps_math@scale+1,___flmul@a+1
  5051  01268A  C0CA  F078         	movff	ps_math@scale+2,___flmul@a+2
  5052  01268E  C0CB  F079         	movff	ps_math@scale+3,___flmul@a+3
  5053  012692  C0D3  F060         	movff	ps_math@i,___wmul@multiplier
  5054  012696  C0D4  F061         	movff	ps_math@i+1,___wmul@multiplier+1
  5055  01269A  0E00               	movlw	0
  5056  01269C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5057  01269E  0E7E               	movlw	126
  5058  0126A0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5059  0126A2  EC14  F0A9         	call	___wmul	;wreg free
  5060  0126A6  51CC               	movf	ps_math@chan& (0+255),w,b
  5061  0126A8  0D02               	mullw	2
  5062  0126AA  0E83               	movlw	low _a
  5063  0126AC  6FCD               	movwf	??_ps_math& (0+255),b
  5064  0126AE  0E05               	movlw	high _a
  5065  0126B0  6FCE               	movwf	(??_ps_math+1)& (0+255),b
  5066  0126B2  50F3               	movf	243,w,c
  5067  0126B4  27CD               	addwf	??_ps_math& (0+255),f,b
  5068  0126B6  50F4               	movf	244,w,c
  5069  0126B8  23CE               	addwfc	(??_ps_math+1)& (0+255),f,b
  5070  0126BA  5160               	movf	?___wmul& (0+255),w,b
  5071  0126BC  25CD               	addwf	??_ps_math& (0+255),w,b
  5072  0126BE  6ED9               	movwf	fsr2l,c
  5073  0126C0  5161               	movf	(?___wmul+1)& (0+255),w,b
  5074  0126C2  21CE               	addwfc	(??_ps_math+1)& (0+255),w,b
  5075  0126C4  6EDA               	movwf	fsr2h,c
  5076  0126C6  006F FF78  F0CF    	movff	postinc2,??_ps_math+2
  5077  0126CC  006F FF74  F0D0    	movff	postdec2,??_ps_math+3
  5078  0126D2  C0CF  F064         	movff	??_ps_math+2,___xxtofl@val
  5079  0126D6  C0D0  F065         	movff	??_ps_math+3,___xxtofl@val+1
  5080  0126DA  6B66               	clrf	(___xxtofl@val+2)& (0+255),b
  5081  0126DC  6B67               	clrf	(___xxtofl@val+3)& (0+255),b
  5082  0126DE  0E00               	movlw	0
  5083  0126E0  EC03  F09B         	call	___xxtofl
  5084  0126E4  C064  F072         	movff	?___xxtofl,___flmul@b
  5085  0126E8  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  5086  0126EC  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  5087  0126F0  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  5088  0126F4  ECF1  F08F         	call	___flmul	;wreg free
  5089  0126F8  C072  F08F         	movff	?___flmul,___fladd@a
  5090  0126FC  C073  F090         	movff	?___flmul+1,___fladd@a+1
  5091  012700  C074  F091         	movff	?___flmul+2,___fladd@a+2
  5092  012704  C075  F092         	movff	?___flmul+3,___fladd@a+3
  5093  012708  EC99  F091         	call	___fladd	;wreg free
  5094  01270C  C08B  F130         	movff	?___fladd,_sum
  5095  012710  C08C  F131         	movff	?___fladd+1,_sum+1
  5096  012714  C08D  F132         	movff	?___fladd+2,_sum+2
  5097  012718  C08E  F133         	movff	?___fladd+3,_sum+3
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;main.c: 243:   n += 1;
  5101  01271C  4BD1               	infsnz	ps_math@n& (0+255),f,b
  5102  01271E  2BD2               	incf	(ps_math@n+1)& (0+255),f,b
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;main.c: 244:  }
  5106  012720  4BD3               	infsnz	ps_math@i& (0+255),f,b
  5107  012722  2BD4               	incf	(ps_math@i+1)& (0+255),f,b
  5108                           
  5109                           ; BSR set to: 0
  5110  012724  BFD4               	btfsc	(ps_math@i+1)& (0+255),7,b
  5111  012726  D7A5               	goto	l10789
  5112  012728  51D4               	movf	(ps_math@i+1)& (0+255),w,b
  5113  01272A  E104               	bnz	u10420
  5114  01272C  0E20               	movlw	32
  5115  01272E  5DD3               	subwf	ps_math@i& (0+255),w,b
  5116  012730  A0D8               	btfss	status,0,c
  5117  012732  D79F               	goto	l10789
  5118  012734                     u10420:
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;main.c: 245:  mean = sum / (double) n;
  5122  012734  C130  F072         	movff	_sum,___fldiv@b
  5123  012738  C131  F073         	movff	_sum+1,___fldiv@b+1
  5124  01273C  C132  F074         	movff	_sum+2,___fldiv@b+2
  5125  012740  C133  F075         	movff	_sum+3,___fldiv@b+3
  5126  012744  C0D1  F064         	movff	ps_math@n,___xxtofl@val
  5127  012748  C0D2  F065         	movff	ps_math@n+1,___xxtofl@val+1
  5128  01274C  0E00               	movlw	0
  5129  01274E  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5130  012750  0EFF               	movlw	-1
  5131  012752  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  5132  012754  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  5133  012756  0E01               	movlw	1
  5134  012758  EC03  F09B         	call	___xxtofl
  5135  01275C  C064  F076         	movff	?___xxtofl,___fldiv@a
  5136  012760  C065  F077         	movff	?___xxtofl+1,___fldiv@a+1
  5137  012764  C066  F078         	movff	?___xxtofl+2,___fldiv@a+2
  5138  012768  C067  F079         	movff	?___xxtofl+3,___fldiv@a+3
  5139  01276C  EC8B  F094         	call	___fldiv	;wreg free
  5140  012770  C072  F128         	movff	?___fldiv,_mean
  5141  012774  C073  F129         	movff	?___fldiv+1,_mean+1
  5142  012778  C074  F12A         	movff	?___fldiv+2,_mean+2
  5143  01277C  C075  F12B         	movff	?___fldiv+3,_mean+3
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;main.c: 246:  for (i = 0; i < n; i++) {
  5147  012780  0E00               	movlw	0
  5148  012782  6FD4               	movwf	(ps_math@i+1)& (0+255),b
  5149  012784  0E00               	movlw	0
  5150  012786  6FD3               	movwf	ps_math@i& (0+255),b
  5151  012788  D083               	goto	l10807
  5152  01278A                     l10801:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;main.c: 247:   deviation = ((double) a[i].ana[chan] * scale) - mean;
  5156  01278A  C0C8  F076         	movff	ps_math@scale,___flmul@a
  5157  01278E  C0C9  F077         	movff	ps_math@scale+1,___flmul@a+1
  5158  012792  C0CA  F078         	movff	ps_math@scale+2,___flmul@a+2
  5159  012796  C0CB  F079         	movff	ps_math@scale+3,___flmul@a+3
  5160  01279A  C0D3  F060         	movff	ps_math@i,___wmul@multiplier
  5161  01279E  C0D4  F061         	movff	ps_math@i+1,___wmul@multiplier+1
  5162  0127A2  0E00               	movlw	0
  5163  0127A4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5164  0127A6  0E7E               	movlw	126
  5165  0127A8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5166  0127AA  EC14  F0A9         	call	___wmul	;wreg free
  5167  0127AE  51CC               	movf	ps_math@chan& (0+255),w,b
  5168  0127B0  0D02               	mullw	2
  5169  0127B2  0E83               	movlw	low _a
  5170  0127B4  6FCD               	movwf	??_ps_math& (0+255),b
  5171  0127B6  0E05               	movlw	high _a
  5172  0127B8  6FCE               	movwf	(??_ps_math+1)& (0+255),b
  5173  0127BA  50F3               	movf	243,w,c
  5174  0127BC  27CD               	addwf	??_ps_math& (0+255),f,b
  5175  0127BE  50F4               	movf	244,w,c
  5176  0127C0  23CE               	addwfc	(??_ps_math+1)& (0+255),f,b
  5177  0127C2  5160               	movf	?___wmul& (0+255),w,b
  5178  0127C4  25CD               	addwf	??_ps_math& (0+255),w,b
  5179  0127C6  6ED9               	movwf	fsr2l,c
  5180  0127C8  5161               	movf	(?___wmul+1)& (0+255),w,b
  5181  0127CA  21CE               	addwfc	(??_ps_math+1)& (0+255),w,b
  5182  0127CC  6EDA               	movwf	fsr2h,c
  5183  0127CE  006F FF78  F0CF    	movff	postinc2,??_ps_math+2
  5184  0127D4  006F FF74  F0D0    	movff	postdec2,??_ps_math+3
  5185  0127DA  C0CF  F064         	movff	??_ps_math+2,___xxtofl@val
  5186  0127DE  C0D0  F065         	movff	??_ps_math+3,___xxtofl@val+1
  5187  0127E2  6B66               	clrf	(___xxtofl@val+2)& (0+255),b
  5188  0127E4  6B67               	clrf	(___xxtofl@val+3)& (0+255),b
  5189  0127E6  0E00               	movlw	0
  5190  0127E8  EC03  F09B         	call	___xxtofl
  5191  0127EC  C064  F072         	movff	?___xxtofl,___flmul@b
  5192  0127F0  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  5193  0127F4  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  5194  0127F8  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  5195  0127FC  ECF1  F08F         	call	___flmul	;wreg free
  5196  012800  C072  F09B         	movff	?___flmul,___flsub@b
  5197  012804  C073  F09C         	movff	?___flmul+1,___flsub@b+1
  5198  012808  C074  F09D         	movff	?___flmul+2,___flsub@b+2
  5199  01280C  C075  F09E         	movff	?___flmul+3,___flsub@b+3
  5200  012810  C128  F09F         	movff	_mean,___flsub@a
  5201  012814  C129  F0A0         	movff	_mean+1,___flsub@a+1
  5202  012818  C12A  F0A1         	movff	_mean+2,___flsub@a+2
  5203  01281C  C12B  F0A2         	movff	_mean+3,___flsub@a+3
  5204  012820  EC38  F0A6         	call	___flsub	;wreg free
  5205  012824  C09B  F134         	movff	?___flsub,_deviation
  5206  012828  C09C  F135         	movff	?___flsub+1,_deviation+1
  5207  01282C  C09D  F136         	movff	?___flsub+2,_deviation+2
  5208  012830  C09E  F137         	movff	?___flsub+3,_deviation+3
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;main.c: 248:   sumsqr += deviation * deviation;
  5212  012834  C12C  F08B         	movff	_sumsqr,___fladd@b
  5213  012838  C12D  F08C         	movff	_sumsqr+1,___fladd@b+1
  5214  01283C  C12E  F08D         	movff	_sumsqr+2,___fladd@b+2
  5215  012840  C12F  F08E         	movff	_sumsqr+3,___fladd@b+3
  5216  012844  C134  F076         	movff	_deviation,___flmul@a
  5217  012848  C135  F077         	movff	_deviation+1,___flmul@a+1
  5218  01284C  C136  F078         	movff	_deviation+2,___flmul@a+2
  5219  012850  C137  F079         	movff	_deviation+3,___flmul@a+3
  5220  012854  C134  F072         	movff	_deviation,___flmul@b
  5221  012858  C135  F073         	movff	_deviation+1,___flmul@b+1
  5222  01285C  C136  F074         	movff	_deviation+2,___flmul@b+2
  5223  012860  C137  F075         	movff	_deviation+3,___flmul@b+3
  5224  012864  ECF1  F08F         	call	___flmul	;wreg free
  5225  012868  C072  F08F         	movff	?___flmul,___fladd@a
  5226  01286C  C073  F090         	movff	?___flmul+1,___fladd@a+1
  5227  012870  C074  F091         	movff	?___flmul+2,___fladd@a+2
  5228  012874  C075  F092         	movff	?___flmul+3,___fladd@a+3
  5229  012878  EC99  F091         	call	___fladd	;wreg free
  5230  01287C  C08B  F12C         	movff	?___fladd,_sumsqr
  5231  012880  C08C  F12D         	movff	?___fladd+1,_sumsqr+1
  5232  012884  C08D  F12E         	movff	?___fladd+2,_sumsqr+2
  5233  012888  C08E  F12F         	movff	?___fladd+3,_sumsqr+3
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;main.c: 249:  }
  5237  01288C  4BD3               	infsnz	ps_math@i& (0+255),f,b
  5238  01288E  2BD4               	incf	(ps_math@i+1)& (0+255),f,b
  5239  012890                     l10807:
  5240                           
  5241                           ; BSR set to: 0
  5242  012890  51D1               	movf	ps_math@n& (0+255),w,b
  5243  012892  5DD3               	subwf	ps_math@i& (0+255),w,b
  5244  012894  51D4               	movf	(ps_math@i+1)& (0+255),w,b
  5245  012896  0A80               	xorlw	128
  5246  012898  6FCD               	movwf	??_ps_math& (0+255),b
  5247  01289A  51D2               	movf	(ps_math@n+1)& (0+255),w,b
  5248  01289C  0A80               	xorlw	128
  5249  01289E  59CD               	subwfb	??_ps_math& (0+255),w,b
  5250  0128A0  A0D8               	btfss	status,0,c
  5251  0128A2  D773               	goto	l10801
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;main.c: 250:  variance = sumsqr / (double) n;
  5255  0128A4  C12C  F072         	movff	_sumsqr,___fldiv@b
  5256  0128A8  C12D  F073         	movff	_sumsqr+1,___fldiv@b+1
  5257  0128AC  C12E  F074         	movff	_sumsqr+2,___fldiv@b+2
  5258  0128B0  C12F  F075         	movff	_sumsqr+3,___fldiv@b+3
  5259  0128B4  C0D1  F064         	movff	ps_math@n,___xxtofl@val
  5260  0128B8  C0D2  F065         	movff	ps_math@n+1,___xxtofl@val+1
  5261  0128BC  0E00               	movlw	0
  5262  0128BE  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5263  0128C0  0EFF               	movlw	-1
  5264  0128C2  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  5265  0128C4  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  5266  0128C6  0E01               	movlw	1
  5267  0128C8  EC03  F09B         	call	___xxtofl
  5268  0128CC  C064  F076         	movff	?___xxtofl,___fldiv@a
  5269  0128D0  C065  F077         	movff	?___xxtofl+1,___fldiv@a+1
  5270  0128D4  C066  F078         	movff	?___xxtofl+2,___fldiv@a+2
  5271  0128D8  C067  F079         	movff	?___xxtofl+3,___fldiv@a+3
  5272  0128DC  EC8B  F094         	call	___fldiv	;wreg free
  5273  0128E0  C072  F022         	movff	?___fldiv,_variance
  5274  0128E4  C073  F023         	movff	?___fldiv+1,_variance+1
  5275  0128E8  C074  F024         	movff	?___fldiv+2,_variance+2
  5276  0128EC  C075  F025         	movff	?___fldiv+3,_variance+3
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;main.c: 251:  stddeviation = sqrtf(variance);
  5280  0128F0  C022  F09B         	movff	_variance,sqrtf@x
  5281  0128F4  C023  F09C         	movff	_variance+1,sqrtf@x+1
  5282  0128F8  C024  F09D         	movff	_variance+2,sqrtf@x+2
  5283  0128FC  C025  F09E         	movff	_variance+3,sqrtf@x+3
  5284  012900  ECDC  F08B         	call	_sqrtf	;wreg free
  5285  012904  C09B  F124         	movff	?_sqrtf,_stddeviation
  5286  012908  C09C  F125         	movff	?_sqrtf+1,_stddeviation+1
  5287  01290C  C09D  F126         	movff	?_sqrtf+2,_stddeviation+2
  5288  012910  C09E  F127         	movff	?_sqrtf+3,_stddeviation+3
  5289                           
  5290                           ; BSR set to: 0
  5291  012914  0012               	return		;funcret
  5292  012916                     __end_of_ps_math:
  5293                           	callstack 0
  5294                           
  5295 ;; *************** function _sqrtf *****************
  5296 ;; Defined at:
  5297 ;;		line 22 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sqrtf.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  x               4   59[BANK0 ] float 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  ix              4  100[BANK0 ] long 
  5302 ;;  r               4   96[BANK0 ] unsigned long 
  5303 ;;  m               4   92[BANK0 ] long 
  5304 ;;  z               4   88[BANK0 ] float 
  5305 ;;  t               4   84[BANK0 ] long 
  5306 ;;  q               4   80[BANK0 ] long 
  5307 ;;  __xc8_float_    4   76[BANK0 ] struct .
  5308 ;;  i               4   72[BANK0 ] long 
  5309 ;;  s               4   68[BANK0 ] long 
  5310 ;;  sign            4    0        long 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  4   59[BANK0 ] float 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 3F/0
  5317 ;;		On exit  : 3F/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5321 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5322 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5323 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5324 ;;Total ram usage:       45 bytes
  5325 ;; Hardware stack levels used: 1
  5326 ;; Hardware stack levels required when called: 8
  5327 ;; This function calls:
  5328 ;;		___fladd
  5329 ;;		___flge
  5330 ;;		___flmul
  5331 ;;		_nanf
  5332 ;; This function is called by:
  5333 ;;		_ps_math
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text5
  5338  0117B8                     __ptext5:
  5339                           	callstack 0
  5340  0117B8                     _sqrtf:
  5341                           	callstack 21
  5342                           
  5343                           ; BSR set to: 0
  5344                           
  5345                           ; BSR set to: 0
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;incstack = 0
  5349  0117B8  C09B  F0AC         	movff	sqrtf@x,sqrtf@__xc8_float_word
  5350  0117BC  C09C  F0AD         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
  5351  0117C0  C09D  F0AE         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
  5352  0117C4  C09E  F0AF         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
  5353                           
  5354                           ; BSR set to: 0
  5355  0117C8  C0AC  F0C4         	movff	sqrtf@__xc8_float_word,sqrtf@ix
  5356  0117CC  C0AD  F0C5         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
  5357  0117D0  C0AE  F0C6         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
  5358  0117D4  C0AF  F0C7         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
  5359                           
  5360                           ; BSR set to: 0
  5361  0117D8  0E00               	movlw	0
  5362  0117DA  15C4               	andwf	sqrtf@ix& (0+255),w,b
  5363  0117DC  6F9F               	movwf	??_sqrtf& (0+255),b
  5364  0117DE  0E00               	movlw	0
  5365  0117E0  15C5               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5366  0117E2  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5367  0117E4  0E80               	movlw	128
  5368  0117E6  15C6               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5369  0117E8  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5370  0117EA  0E7F               	movlw	127
  5371  0117EC  15C7               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5372  0117EE  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5373  0117F0  0E80               	movlw	128
  5374  0117F2  19A1               	xorwf	(??_sqrtf+2)& (0+255),w,b
  5375  0117F4  E133               	bnz	l10519
  5376  0117F6  0E7F               	movlw	127
  5377  0117F8  19A2               	xorwf	(??_sqrtf+3)& (0+255),w,b
  5378  0117FA  119F               	iorwf	??_sqrtf& (0+255),w,b
  5379  0117FC  11A0               	iorwf	(??_sqrtf+1)& (0+255),w,b
  5380  0117FE  A4D8               	btfss	status,2,c
  5381  011800  D02D               	goto	l10519
  5382                           
  5383                           ; BSR set to: 0
  5384  011802  C09B  F076         	movff	sqrtf@x,___flmul@a
  5385  011806  C09C  F077         	movff	sqrtf@x+1,___flmul@a+1
  5386  01180A  C09D  F078         	movff	sqrtf@x+2,___flmul@a+2
  5387  01180E  C09E  F079         	movff	sqrtf@x+3,___flmul@a+3
  5388  011812  C09B  F072         	movff	sqrtf@x,___flmul@b
  5389  011816  C09C  F073         	movff	sqrtf@x+1,___flmul@b+1
  5390  01181A  C09D  F074         	movff	sqrtf@x+2,___flmul@b+2
  5391  01181E  C09E  F075         	movff	sqrtf@x+3,___flmul@b+3
  5392  011822  ECF1  F08F         	call	___flmul	;wreg free
  5393  011826  C072  F08B         	movff	?___flmul,___fladd@b
  5394  01182A  C073  F08C         	movff	?___flmul+1,___fladd@b+1
  5395  01182E  C074  F08D         	movff	?___flmul+2,___fladd@b+2
  5396  011832  C075  F08E         	movff	?___flmul+3,___fladd@b+3
  5397  011836  C09B  F08F         	movff	sqrtf@x,___fladd@a
  5398  01183A  C09C  F090         	movff	sqrtf@x+1,___fladd@a+1
  5399  01183E  C09D  F091         	movff	sqrtf@x+2,___fladd@a+2
  5400  011842  C09E  F092         	movff	sqrtf@x+3,___fladd@a+3
  5401  011846  EC99  F091         	call	___fladd	;wreg free
  5402  01184A  C08B  F09B         	movff	?___fladd,?_sqrtf
  5403  01184E  C08C  F09C         	movff	?___fladd+1,?_sqrtf+1
  5404  011852  C08D  F09D         	movff	?___fladd+2,?_sqrtf+2
  5405  011856  C08E  F09E         	movff	?___fladd+3,?_sqrtf+3
  5406  01185A  0012               	return	
  5407  01185C                     l10519:
  5408                           
  5409                           ; BSR set to: 0
  5410  01185C  BFC7               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  5411  01185E  D007               	goto	u10050
  5412  011860  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5413  011862  11C6               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  5414  011864  11C5               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  5415  011866  E135               	bnz	l10533
  5416  011868  05C4               	decf	sqrtf@ix& (0+255),w,b
  5417  01186A  B0D8               	btfsc	status,0,c
  5418  01186C  D032               	goto	l10533
  5419  01186E                     u10050:
  5420                           
  5421                           ; BSR set to: 0
  5422  01186E  0EFF               	movlw	255
  5423  011870  15C4               	andwf	sqrtf@ix& (0+255),w,b
  5424  011872  6F9F               	movwf	??_sqrtf& (0+255),b
  5425  011874  0EFF               	movlw	255
  5426  011876  15C5               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5427  011878  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5428  01187A  0EFF               	movlw	255
  5429  01187C  15C6               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5430  01187E  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5431  011880  0E7F               	movlw	127
  5432  011882  15C7               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5433  011884  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5434  011886  519F               	movf	??_sqrtf& (0+255),w,b
  5435  011888  11A0               	iorwf	(??_sqrtf+1)& (0+255),w,b
  5436  01188A  11A1               	iorwf	(??_sqrtf+2)& (0+255),w,b
  5437  01188C  11A2               	iorwf	(??_sqrtf+3)& (0+255),w,b
  5438  01188E  A4D8               	btfss	status,2,c
  5439  011890  D009               	goto	l10525
  5440                           
  5441                           ; BSR set to: 0
  5442  011892  C09B  F09B         	movff	sqrtf@x,?_sqrtf
  5443  011896  C09C  F09C         	movff	sqrtf@x+1,?_sqrtf+1
  5444  01189A  C09D  F09D         	movff	sqrtf@x+2,?_sqrtf+2
  5445  01189E  C09E  F09E         	movff	sqrtf@x+3,?_sqrtf+3
  5446  0118A2  0012               	return	
  5447  0118A4                     l10525:
  5448                           
  5449                           ; BSR set to: 0
  5450  0118A4  AFC7               	btfss	(sqrtf@ix+3)& (0+255),7,b
  5451  0118A6  D015               	goto	l10533
  5452                           
  5453                           ; BSR set to: 0
  5454  0118A8  0E00               	movlw	0
  5455  0118AA  0101               	movlb	1	; () banked
  5456  0118AC  6F5C               	movwf	(_errno+1)& (0+255),b
  5457  0118AE  0E21               	movlw	33
  5458  0118B0  6F5B               	movwf	_errno& (0+255),b
  5459                           
  5460                           ; BSR set to: 1
  5461  0118B2  0E6A               	movlw	low (STR_5+17)
  5462  0118B4  0100               	movlb	0	; () banked
  5463  0118B6  6F60               	movwf	nanf@s& (0+255),b
  5464  0118B8  0EFF               	movlw	high (STR_5+17)
  5465  0118BA  6F61               	movwf	(nanf@s+1)& (0+255),b
  5466  0118BC  ECD5  F0A9         	call	_nanf	;wreg free
  5467  0118C0  C060  F09B         	movff	?_nanf,?_sqrtf
  5468  0118C4  C061  F09C         	movff	?_nanf+1,?_sqrtf+1
  5469  0118C8  C062  F09D         	movff	?_nanf+2,?_sqrtf+2
  5470  0118CC  C063  F09E         	movff	?_nanf+3,?_sqrtf+3
  5471  0118D0  0012               	return	
  5472  0118D2                     l10533:
  5473                           
  5474                           ; BSR set to: 0
  5475  0118D2  0E17               	movlw	23
  5476  0118D4  6F9F               	movwf	??_sqrtf& (0+255),b
  5477  0118D6  C0C4  F0A0         	movff	sqrtf@ix,??_sqrtf+1
  5478  0118DA  C0C5  F0A1         	movff	sqrtf@ix+1,??_sqrtf+2
  5479  0118DE  C0C6  F0A2         	movff	sqrtf@ix+2,??_sqrtf+3
  5480  0118E2  C0C7  F0A3         	movff	sqrtf@ix+3,??_sqrtf+4
  5481  0118E6                     u10085:
  5482  0118E6  679F               	tstfsz	??_sqrtf& (0+255),b
  5483  0118E8  D001               	goto	u10086
  5484  0118EA  D007               	goto	u10087
  5485  0118EC                     u10086:
  5486  0118EC  35A3               	rlcf	(??_sqrtf+4)& (0+255),w,b
  5487  0118EE  33A3               	rrcf	(??_sqrtf+4)& (0+255),f,b
  5488  0118F0  33A2               	rrcf	(??_sqrtf+3)& (0+255),f,b
  5489  0118F2  33A1               	rrcf	(??_sqrtf+2)& (0+255),f,b
  5490  0118F4  33A0               	rrcf	(??_sqrtf+1)& (0+255),f,b
  5491  0118F6  2F9F               	decfsz	??_sqrtf& (0+255),f,b
  5492  0118F8  D7F6               	goto	u10085
  5493  0118FA                     u10087:
  5494  0118FA  C0A0  F0BC         	movff	??_sqrtf+1,sqrtf@m
  5495  0118FE  C0A1  F0BD         	movff	??_sqrtf+2,sqrtf@m+1
  5496  011902  C0A2  F0BE         	movff	??_sqrtf+3,sqrtf@m+2
  5497  011906  C0A3  F0BF         	movff	??_sqrtf+4,sqrtf@m+3
  5498  01190A  0100               	movlb	0	; () banked
  5499  01190C  51BC               	movf	sqrtf@m& (0+255),w,b
  5500  01190E  11BD               	iorwf	(sqrtf@m+1)& (0+255),w,b
  5501  011910  11BE               	iorwf	(sqrtf@m+2)& (0+255),w,b
  5502  011912  11BF               	iorwf	(sqrtf@m+3)& (0+255),w,b
  5503  011914  A4D8               	btfss	status,2,c
  5504  011916  D02A               	goto	l2870
  5505                           
  5506                           ; BSR set to: 0
  5507  011918  0E00               	movlw	0
  5508  01191A  6FA8               	movwf	sqrtf@i& (0+255),b
  5509  01191C  0E00               	movlw	0
  5510  01191E  6FA9               	movwf	(sqrtf@i+1)& (0+255),b
  5511  011920  0E00               	movlw	0
  5512  011922  6FAA               	movwf	(sqrtf@i+2)& (0+255),b
  5513  011924  0E00               	movlw	0
  5514  011926  6FAB               	movwf	(sqrtf@i+3)& (0+255),b
  5515  011928  D00B               	goto	l10541
  5516  01192A                     l10537:
  5517                           
  5518                           ; BSR set to: 0
  5519  01192A  90D8               	bcf	status,0,c
  5520  01192C  37C4               	rlcf	sqrtf@ix& (0+255),f,b
  5521  01192E  37C5               	rlcf	(sqrtf@ix+1)& (0+255),f,b
  5522  011930  37C6               	rlcf	(sqrtf@ix+2)& (0+255),f,b
  5523  011932  37C7               	rlcf	(sqrtf@ix+3)& (0+255),f,b
  5524                           
  5525                           ; BSR set to: 0
  5526  011934  0E01               	movlw	1
  5527  011936  27A8               	addwf	sqrtf@i& (0+255),f,b
  5528  011938  0E00               	movlw	0
  5529  01193A  23A9               	addwfc	(sqrtf@i+1)& (0+255),f,b
  5530  01193C  23AA               	addwfc	(sqrtf@i+2)& (0+255),f,b
  5531  01193E  23AB               	addwfc	(sqrtf@i+3)& (0+255),f,b
  5532  011940                     l10541:
  5533                           
  5534                           ; BSR set to: 0
  5535  011940  AFC6               	btfss	(sqrtf@ix+2)& (0+255),7,b
  5536  011942  D7F3               	goto	l10537
  5537                           
  5538                           ; BSR set to: 0
  5539  011944  0EFF               	movlw	255
  5540  011946  25A8               	addwf	sqrtf@i& (0+255),w,b
  5541  011948  6F9F               	movwf	??_sqrtf& (0+255),b
  5542  01194A  0EFF               	movlw	255
  5543  01194C  21A9               	addwfc	(sqrtf@i+1)& (0+255),w,b
  5544  01194E  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5545  011950  0EFF               	movlw	255
  5546  011952  21AA               	addwfc	(sqrtf@i+2)& (0+255),w,b
  5547  011954  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5548  011956  0EFF               	movlw	255
  5549  011958  21AB               	addwfc	(sqrtf@i+3)& (0+255),w,b
  5550  01195A  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5551  01195C  519F               	movf	??_sqrtf& (0+255),w,b
  5552  01195E  5FBC               	subwf	sqrtf@m& (0+255),f,b
  5553  011960  51A0               	movf	(??_sqrtf+1)& (0+255),w,b
  5554  011962  5BBD               	subwfb	(sqrtf@m+1)& (0+255),f,b
  5555  011964  51A1               	movf	(??_sqrtf+2)& (0+255),w,b
  5556  011966  5BBE               	subwfb	(sqrtf@m+2)& (0+255),f,b
  5557  011968  51A2               	movf	(??_sqrtf+3)& (0+255),w,b
  5558  01196A  5BBF               	subwfb	(sqrtf@m+3)& (0+255),f,b
  5559  01196C                     l2870:
  5560                           
  5561                           ; BSR set to: 0
  5562  01196C  0E81               	movlw	129
  5563  01196E  27BC               	addwf	sqrtf@m& (0+255),f,b
  5564  011970  0EFF               	movlw	255
  5565  011972  23BD               	addwfc	(sqrtf@m+1)& (0+255),f,b
  5566  011974  0EFF               	movlw	255
  5567  011976  23BE               	addwfc	(sqrtf@m+2)& (0+255),f,b
  5568  011978  0EFF               	movlw	255
  5569  01197A  23BF               	addwfc	(sqrtf@m+3)& (0+255),f,b
  5570  01197C  0EFF               	movlw	255
  5571  01197E  15C4               	andwf	sqrtf@ix& (0+255),w,b
  5572  011980  6F9F               	movwf	??_sqrtf& (0+255),b
  5573  011982  0EFF               	movlw	255
  5574  011984  15C5               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5575  011986  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5576  011988  0E7F               	movlw	127
  5577  01198A  15C6               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5578  01198C  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5579  01198E  0E00               	movlw	0
  5580  011990  15C7               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5581  011992  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5582  011994  0E00               	movlw	0
  5583  011996  119F               	iorwf	??_sqrtf& (0+255),w,b
  5584  011998  6FC4               	movwf	sqrtf@ix& (0+255),b
  5585  01199A  0E00               	movlw	0
  5586  01199C  11A0               	iorwf	(??_sqrtf+1)& (0+255),w,b
  5587  01199E  6FC5               	movwf	(sqrtf@ix+1)& (0+255),b
  5588  0119A0  0E80               	movlw	128
  5589  0119A2  11A1               	iorwf	(??_sqrtf+2)& (0+255),w,b
  5590  0119A4  6FC6               	movwf	(sqrtf@ix+2)& (0+255),b
  5591  0119A6  0E00               	movlw	0
  5592  0119A8  11A2               	iorwf	(??_sqrtf+3)& (0+255),w,b
  5593  0119AA  6FC7               	movwf	(sqrtf@ix+3)& (0+255),b
  5594                           
  5595                           ; BSR set to: 0
  5596  0119AC  A1BC               	btfss	sqrtf@m& (0+255),0,b
  5597  0119AE  D008               	goto	l2874
  5598                           
  5599                           ; BSR set to: 0
  5600  0119B0  51C4               	movf	sqrtf@ix& (0+255),w,b
  5601  0119B2  27C4               	addwf	sqrtf@ix& (0+255),f,b
  5602  0119B4  51C5               	movf	(sqrtf@ix+1)& (0+255),w,b
  5603  0119B6  23C5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5604  0119B8  51C6               	movf	(sqrtf@ix+2)& (0+255),w,b
  5605  0119BA  23C6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5606  0119BC  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5607  0119BE  23C7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5608  0119C0                     l2874:
  5609                           
  5610                           ; BSR set to: 0
  5611  0119C0  35BF               	rlcf	(sqrtf@m+3)& (0+255),w,b
  5612  0119C2  33BF               	rrcf	(sqrtf@m+3)& (0+255),f,b
  5613  0119C4  33BE               	rrcf	(sqrtf@m+2)& (0+255),f,b
  5614  0119C6  33BD               	rrcf	(sqrtf@m+1)& (0+255),f,b
  5615  0119C8  33BC               	rrcf	sqrtf@m& (0+255),f,b
  5616  0119CA  51C4               	movf	sqrtf@ix& (0+255),w,b
  5617  0119CC  27C4               	addwf	sqrtf@ix& (0+255),f,b
  5618  0119CE  51C5               	movf	(sqrtf@ix+1)& (0+255),w,b
  5619  0119D0  23C5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5620  0119D2  51C6               	movf	(sqrtf@ix+2)& (0+255),w,b
  5621  0119D4  23C6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5622  0119D6  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5623  0119D8  23C7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5624                           
  5625                           ; BSR set to: 0
  5626  0119DA  0E00               	movlw	0
  5627  0119DC  6FA4               	movwf	sqrtf@s& (0+255),b
  5628  0119DE  0E00               	movlw	0
  5629  0119E0  6FA5               	movwf	(sqrtf@s+1)& (0+255),b
  5630  0119E2  0E00               	movlw	0
  5631  0119E4  6FA6               	movwf	(sqrtf@s+2)& (0+255),b
  5632  0119E6  0E00               	movlw	0
  5633  0119E8  6FA7               	movwf	(sqrtf@s+3)& (0+255),b
  5634  0119EA  C0A4  F0B0         	movff	sqrtf@s,sqrtf@q
  5635  0119EE  C0A5  F0B1         	movff	sqrtf@s+1,sqrtf@q+1
  5636  0119F2  C0A6  F0B2         	movff	sqrtf@s+2,sqrtf@q+2
  5637  0119F6  C0A7  F0B3         	movff	sqrtf@s+3,sqrtf@q+3
  5638                           
  5639                           ; BSR set to: 0
  5640  0119FA  0E00               	movlw	0
  5641  0119FC  6FC0               	movwf	sqrtf@r& (0+255),b
  5642  0119FE  0E00               	movlw	0
  5643  011A00  6FC1               	movwf	(sqrtf@r+1)& (0+255),b
  5644  011A02  0E00               	movlw	0
  5645  011A04  6FC2               	movwf	(sqrtf@r+2)& (0+255),b
  5646  011A06  0E01               	movlw	1
  5647  011A08  6FC3               	movwf	(sqrtf@r+3)& (0+255),b
  5648  011A0A  D043               	goto	l10559
  5649  011A0C                     l10553:
  5650                           
  5651                           ; BSR set to: 0
  5652  011A0C  51A4               	movf	sqrtf@s& (0+255),w,b
  5653  011A0E  25C0               	addwf	sqrtf@r& (0+255),w,b
  5654  011A10  6FB4               	movwf	sqrtf@t& (0+255),b
  5655  011A12  51A5               	movf	(sqrtf@s+1)& (0+255),w,b
  5656  011A14  21C1               	addwfc	(sqrtf@r+1)& (0+255),w,b
  5657  011A16  6FB5               	movwf	(sqrtf@t+1)& (0+255),b
  5658  011A18  51A6               	movf	(sqrtf@s+2)& (0+255),w,b
  5659  011A1A  21C2               	addwfc	(sqrtf@r+2)& (0+255),w,b
  5660  011A1C  6FB6               	movwf	(sqrtf@t+2)& (0+255),b
  5661  011A1E  51A7               	movf	(sqrtf@s+3)& (0+255),w,b
  5662  011A20  21C3               	addwfc	(sqrtf@r+3)& (0+255),w,b
  5663  011A22  6FB7               	movwf	(sqrtf@t+3)& (0+255),b
  5664  011A24  51B4               	movf	sqrtf@t& (0+255),w,b
  5665  011A26  5DC4               	subwf	sqrtf@ix& (0+255),w,b
  5666  011A28  51B5               	movf	(sqrtf@t+1)& (0+255),w,b
  5667  011A2A  59C5               	subwfb	(sqrtf@ix+1)& (0+255),w,b
  5668  011A2C  51B6               	movf	(sqrtf@t+2)& (0+255),w,b
  5669  011A2E  59C6               	subwfb	(sqrtf@ix+2)& (0+255),w,b
  5670  011A30  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5671  011A32  0A80               	xorlw	128
  5672  011A34  6F9F               	movwf	??_sqrtf& (0+255),b
  5673  011A36  51B7               	movf	(sqrtf@t+3)& (0+255),w,b
  5674  011A38  0A80               	xorlw	128
  5675  011A3A  599F               	subwfb	??_sqrtf& (0+255),w,b
  5676  011A3C  A0D8               	btfss	status,0,c
  5677  011A3E  D01C               	goto	l2877
  5678                           
  5679                           ; BSR set to: 0
  5680  011A40  51B4               	movf	sqrtf@t& (0+255),w,b
  5681  011A42  25C0               	addwf	sqrtf@r& (0+255),w,b
  5682  011A44  6FA4               	movwf	sqrtf@s& (0+255),b
  5683  011A46  51B5               	movf	(sqrtf@t+1)& (0+255),w,b
  5684  011A48  21C1               	addwfc	(sqrtf@r+1)& (0+255),w,b
  5685  011A4A  6FA5               	movwf	(sqrtf@s+1)& (0+255),b
  5686  011A4C  51B6               	movf	(sqrtf@t+2)& (0+255),w,b
  5687  011A4E  21C2               	addwfc	(sqrtf@r+2)& (0+255),w,b
  5688  011A50  6FA6               	movwf	(sqrtf@s+2)& (0+255),b
  5689  011A52  51B7               	movf	(sqrtf@t+3)& (0+255),w,b
  5690  011A54  21C3               	addwfc	(sqrtf@r+3)& (0+255),w,b
  5691  011A56  6FA7               	movwf	(sqrtf@s+3)& (0+255),b
  5692  011A58  51B4               	movf	sqrtf@t& (0+255),w,b
  5693  011A5A  5FC4               	subwf	sqrtf@ix& (0+255),f,b
  5694  011A5C  51B5               	movf	(sqrtf@t+1)& (0+255),w,b
  5695  011A5E  5BC5               	subwfb	(sqrtf@ix+1)& (0+255),f,b
  5696  011A60  51B6               	movf	(sqrtf@t+2)& (0+255),w,b
  5697  011A62  5BC6               	subwfb	(sqrtf@ix+2)& (0+255),f,b
  5698  011A64  51B7               	movf	(sqrtf@t+3)& (0+255),w,b
  5699  011A66  5BC7               	subwfb	(sqrtf@ix+3)& (0+255),f,b
  5700  011A68  51C0               	movf	sqrtf@r& (0+255),w,b
  5701  011A6A  27B0               	addwf	sqrtf@q& (0+255),f,b
  5702  011A6C  51C1               	movf	(sqrtf@r+1)& (0+255),w,b
  5703  011A6E  23B1               	addwfc	(sqrtf@q+1)& (0+255),f,b
  5704  011A70  51C2               	movf	(sqrtf@r+2)& (0+255),w,b
  5705  011A72  23B2               	addwfc	(sqrtf@q+2)& (0+255),f,b
  5706  011A74  51C3               	movf	(sqrtf@r+3)& (0+255),w,b
  5707  011A76  23B3               	addwfc	(sqrtf@q+3)& (0+255),f,b
  5708  011A78                     l2877:
  5709                           
  5710                           ; BSR set to: 0
  5711  011A78  51C4               	movf	sqrtf@ix& (0+255),w,b
  5712  011A7A  27C4               	addwf	sqrtf@ix& (0+255),f,b
  5713  011A7C  51C5               	movf	(sqrtf@ix+1)& (0+255),w,b
  5714  011A7E  23C5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5715  011A80  51C6               	movf	(sqrtf@ix+2)& (0+255),w,b
  5716  011A82  23C6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5717  011A84  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5718  011A86  23C7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5719                           
  5720                           ; BSR set to: 0
  5721  011A88  90D8               	bcf	status,0,c
  5722  011A8A  33C3               	rrcf	(sqrtf@r+3)& (0+255),f,b
  5723  011A8C  33C2               	rrcf	(sqrtf@r+2)& (0+255),f,b
  5724  011A8E  33C1               	rrcf	(sqrtf@r+1)& (0+255),f,b
  5725  011A90  33C0               	rrcf	sqrtf@r& (0+255),f,b
  5726  011A92                     l10559:
  5727                           
  5728                           ; BSR set to: 0
  5729  011A92  51C0               	movf	sqrtf@r& (0+255),w,b
  5730  011A94  11C1               	iorwf	(sqrtf@r+1)& (0+255),w,b
  5731  011A96  11C2               	iorwf	(sqrtf@r+2)& (0+255),w,b
  5732  011A98  11C3               	iorwf	(sqrtf@r+3)& (0+255),w,b
  5733  011A9A  A4D8               	btfss	status,2,c
  5734  011A9C  D7B7               	goto	l10553
  5735                           
  5736                           ; BSR set to: 0
  5737  011A9E  51C4               	movf	sqrtf@ix& (0+255),w,b
  5738  011AA0  11C5               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  5739  011AA2  11C6               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  5740  011AA4  11C7               	iorwf	(sqrtf@ix+3)& (0+255),w,b
  5741  011AA6  B4D8               	btfsc	status,2,c
  5742  011AA8  D052               	goto	l2879
  5743                           
  5744                           ; BSR set to: 0
  5745  011AAA  0E00               	movlw	0
  5746  011AAC  6FB8               	movwf	sqrtf@z& (0+255),b
  5747  011AAE  0E00               	movlw	0
  5748  011AB0  6FB9               	movwf	(sqrtf@z+1)& (0+255),b
  5749  011AB2  0E80               	movlw	128
  5750  011AB4  6FBA               	movwf	(sqrtf@z+2)& (0+255),b
  5751  011AB6  0E3F               	movlw	63
  5752  011AB8  6FBB               	movwf	(sqrtf@z+3)& (0+255),b
  5753                           
  5754                           ; BSR set to: 0
  5755  011ABA  C0B8  F08B         	movff	sqrtf@z,___flge@ff1
  5756  011ABE  C0B9  F08C         	movff	sqrtf@z+1,___flge@ff1+1
  5757  011AC2  C0BA  F08D         	movff	sqrtf@z+2,___flge@ff1+2
  5758  011AC6  C0BB  F08E         	movff	sqrtf@z+3,___flge@ff1+3
  5759  011ACA  0E00               	movlw	0
  5760  011ACC  6F8F               	movwf	___flge@ff2& (0+255),b
  5761  011ACE  0E00               	movlw	0
  5762  011AD0  6F90               	movwf	(___flge@ff2+1)& (0+255),b
  5763  011AD2  0E80               	movlw	128
  5764  011AD4  6F91               	movwf	(___flge@ff2+2)& (0+255),b
  5765  011AD6  0E3F               	movlw	63
  5766  011AD8  6F92               	movwf	(___flge@ff2+3)& (0+255),b
  5767  011ADA  ECB1  F09D         	call	___flge	;wreg free
  5768  011ADE  A0D8               	btfss	status,0,c
  5769  011AE0  D036               	goto	l2879
  5770                           
  5771                           ; BSR set to: 0
  5772  011AE2  0E00               	movlw	0
  5773  011AE4  6FB8               	movwf	sqrtf@z& (0+255),b
  5774  011AE6  0E00               	movlw	0
  5775  011AE8  6FB9               	movwf	(sqrtf@z+1)& (0+255),b
  5776  011AEA  0E80               	movlw	128
  5777  011AEC  6FBA               	movwf	(sqrtf@z+2)& (0+255),b
  5778  011AEE  0E3F               	movlw	63
  5779  011AF0  6FBB               	movwf	(sqrtf@z+3)& (0+255),b
  5780                           
  5781                           ; BSR set to: 0
  5782  011AF2  0E00               	movlw	0
  5783  011AF4  6F8B               	movwf	___flge@ff1& (0+255),b
  5784  011AF6  0E00               	movlw	0
  5785  011AF8  6F8C               	movwf	(___flge@ff1+1)& (0+255),b
  5786  011AFA  0E80               	movlw	128
  5787  011AFC  6F8D               	movwf	(___flge@ff1+2)& (0+255),b
  5788  011AFE  0E3F               	movlw	63
  5789  011B00  6F8E               	movwf	(___flge@ff1+3)& (0+255),b
  5790  011B02  C0B8  F08F         	movff	sqrtf@z,___flge@ff2
  5791  011B06  C0B9  F090         	movff	sqrtf@z+1,___flge@ff2+1
  5792  011B0A  C0BA  F091         	movff	sqrtf@z+2,___flge@ff2+2
  5793  011B0E  C0BB  F092         	movff	sqrtf@z+3,___flge@ff2+3
  5794  011B12  ECB1  F09D         	call	___flge	;wreg free
  5795  011B16  B0D8               	btfsc	status,0,c
  5796  011B18  D006               	goto	l10573
  5797                           
  5798                           ; BSR set to: 0
  5799  011B1A  0E02               	movlw	2
  5800  011B1C  27B0               	addwf	sqrtf@q& (0+255),f,b
  5801  011B1E  0E00               	movlw	0
  5802  011B20  23B1               	addwfc	(sqrtf@q+1)& (0+255),f,b
  5803  011B22  23B2               	addwfc	(sqrtf@q+2)& (0+255),f,b
  5804  011B24  D013               	goto	L1
  5805  011B26                     l10573:
  5806                           
  5807                           ; BSR set to: 0
  5808  011B26  0E01               	movlw	1
  5809  011B28  15B0               	andwf	sqrtf@q& (0+255),w,b
  5810  011B2A  6F9F               	movwf	??_sqrtf& (0+255),b
  5811  011B2C  0E00               	movlw	0
  5812  011B2E  15B1               	andwf	(sqrtf@q+1)& (0+255),w,b
  5813  011B30  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5814  011B32  0E00               	movlw	0
  5815  011B34  15B2               	andwf	(sqrtf@q+2)& (0+255),w,b
  5816  011B36  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5817  011B38  0E00               	movlw	0
  5818  011B3A  15B3               	andwf	(sqrtf@q+3)& (0+255),w,b
  5819  011B3C  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5820  011B3E  519F               	movf	??_sqrtf& (0+255),w,b
  5821  011B40  27B0               	addwf	sqrtf@q& (0+255),f,b
  5822  011B42  51A0               	movf	(??_sqrtf+1)& (0+255),w,b
  5823  011B44  23B1               	addwfc	(sqrtf@q+1)& (0+255),f,b
  5824  011B46  51A1               	movf	(??_sqrtf+2)& (0+255),w,b
  5825  011B48  23B2               	addwfc	(sqrtf@q+2)& (0+255),f,b
  5826  011B4A  51A2               	movf	(??_sqrtf+3)& (0+255),w,b
  5827  011B4C                     L1:
  5828  011B4C  23B3               	addwfc	(sqrtf@q+3)& (0+255),f,b
  5829  011B4E                     l2879:
  5830                           
  5831                           ; BSR set to: 0
  5832  011B4E  C0B0  F09F         	movff	sqrtf@q,??_sqrtf
  5833  011B52  C0B1  F0A0         	movff	sqrtf@q+1,??_sqrtf+1
  5834  011B56  C0B2  F0A1         	movff	sqrtf@q+2,??_sqrtf+2
  5835  011B5A  C0B3  F0A2         	movff	sqrtf@q+3,??_sqrtf+3
  5836  011B5E  35A2               	rlcf	(??_sqrtf+3)& (0+255),w,b
  5837  011B60  33A2               	rrcf	(??_sqrtf+3)& (0+255),f,b
  5838  011B62  33A1               	rrcf	(??_sqrtf+2)& (0+255),f,b
  5839  011B64  33A0               	rrcf	(??_sqrtf+1)& (0+255),f,b
  5840  011B66  339F               	rrcf	??_sqrtf& (0+255),f,b
  5841  011B68  0E00               	movlw	0
  5842  011B6A  259F               	addwf	??_sqrtf& (0+255),w,b
  5843  011B6C  6FC4               	movwf	sqrtf@ix& (0+255),b
  5844  011B6E  0E00               	movlw	0
  5845  011B70  21A0               	addwfc	(??_sqrtf+1)& (0+255),w,b
  5846  011B72  6FC5               	movwf	(sqrtf@ix+1)& (0+255),b
  5847  011B74  0E00               	movlw	0
  5848  011B76  21A1               	addwfc	(??_sqrtf+2)& (0+255),w,b
  5849  011B78  6FC6               	movwf	(sqrtf@ix+2)& (0+255),b
  5850  011B7A  0E3F               	movlw	63
  5851  011B7C  21A2               	addwfc	(??_sqrtf+3)& (0+255),w,b
  5852  011B7E  6FC7               	movwf	(sqrtf@ix+3)& (0+255),b
  5853  011B80  C0BC  F09F         	movff	sqrtf@m,??_sqrtf
  5854  011B84  C0BD  F0A0         	movff	sqrtf@m+1,??_sqrtf+1
  5855  011B88  C0BE  F0A1         	movff	sqrtf@m+2,??_sqrtf+2
  5856  011B8C  C0BF  F0A2         	movff	sqrtf@m+3,??_sqrtf+3
  5857  011B90  0E17               	movlw	23
  5858  011B92                     u10175:
  5859  011B92  90D8               	bcf	status,0,c
  5860  011B94  379F               	rlcf	??_sqrtf& (0+255),f,b
  5861  011B96  37A0               	rlcf	(??_sqrtf+1)& (0+255),f,b
  5862  011B98  37A1               	rlcf	(??_sqrtf+2)& (0+255),f,b
  5863  011B9A  37A2               	rlcf	(??_sqrtf+3)& (0+255),f,b
  5864  011B9C  2EE8               	decfsz	wreg,f,c
  5865  011B9E  D7F9               	goto	u10175
  5866  011BA0  519F               	movf	??_sqrtf& (0+255),w,b
  5867  011BA2  27C4               	addwf	sqrtf@ix& (0+255),f,b
  5868  011BA4  51A0               	movf	(??_sqrtf+1)& (0+255),w,b
  5869  011BA6  23C5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5870  011BA8  51A1               	movf	(??_sqrtf+2)& (0+255),w,b
  5871  011BAA  23C6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5872  011BAC  51A2               	movf	(??_sqrtf+3)& (0+255),w,b
  5873  011BAE  23C7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5874                           
  5875                           ; BSR set to: 0
  5876  011BB0  C0C4  F0AC         	movff	sqrtf@ix,sqrtf@__xc8_float_word
  5877  011BB4  C0C5  F0AD         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
  5878  011BB8  C0C6  F0AE         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
  5879  011BBC  C0C7  F0AF         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
  5880                           
  5881                           ; BSR set to: 0
  5882  011BC0  C0AC  F0B8         	movff	sqrtf@__xc8_float_word,sqrtf@z
  5883  011BC4  C0AD  F0B9         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
  5884  011BC8  C0AE  F0BA         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
  5885  011BCC  C0AF  F0BB         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
  5886                           
  5887                           ; BSR set to: 0
  5888  011BD0  C0B8  F09B         	movff	sqrtf@z,?_sqrtf
  5889  011BD4  C0B9  F09C         	movff	sqrtf@z+1,?_sqrtf+1
  5890  011BD8  C0BA  F09D         	movff	sqrtf@z+2,?_sqrtf+2
  5891  011BDC  C0BB  F09E         	movff	sqrtf@z+3,?_sqrtf+3
  5892                           
  5893                           ; BSR set to: 0
  5894  011BE0  0012               	return		;funcret
  5895  011BE2                     __end_of_sqrtf:
  5896                           	callstack 0
  5897                           
  5898 ;; *************** function _nanf *****************
  5899 ;; Defined at:
  5900 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nanf.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5903 ;;		 -> STR_48(1), 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  u               4    4[BANK0 ] struct .
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  4    0[BANK0 ] float 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2
  5910 ;; Tracked objects:
  5911 ;;		On entry : 3F/0
  5912 ;;		On exit  : 3F/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5915 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5916 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5918 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5919 ;;Total ram usage:        8 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; Hardware stack levels required when called: 7
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_sqrtf
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text6
  5930  0153AA                     __ptext6:
  5931                           	callstack 0
  5932  0153AA                     _nanf:
  5933                           	callstack 21
  5934                           
  5935                           ; BSR set to: 0
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;incstack = 0
  5939  0153AA  0EFF               	movlw	255
  5940  0153AC  6F64               	movwf	nanf@u& (0+255),b
  5941  0153AE  0EFF               	movlw	255
  5942  0153B0  6F65               	movwf	(nanf@u+1)& (0+255),b
  5943  0153B2  0EFF               	movlw	255
  5944  0153B4  6F66               	movwf	(nanf@u+2)& (0+255),b
  5945  0153B6  0E7F               	movlw	127
  5946  0153B8  6F67               	movwf	(nanf@u+3)& (0+255),b
  5947                           
  5948                           ; BSR set to: 0
  5949  0153BA  C064  F060         	movff	nanf@u,?_nanf
  5950  0153BE  C065  F061         	movff	nanf@u+1,?_nanf+1
  5951  0153C2  C066  F062         	movff	nanf@u+2,?_nanf+2
  5952  0153C6  C067  F063         	movff	nanf@u+3,?_nanf+3
  5953                           
  5954                           ; BSR set to: 0
  5955  0153CA  0012               	return		;funcret
  5956  0153CC                     __end_of_nanf:
  5957                           	callstack 0
  5958                           
  5959 ;; *************** function ___xxtofl *****************
  5960 ;; Defined at:
  5961 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  sign            1    wreg     unsigned char 
  5964 ;;  val             4    4[BANK0 ] long 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;  sign            1   12[BANK0 ] unsigned char 
  5967 ;;  arg             4   14[BANK0 ] unsigned long 
  5968 ;;  exp             1   13[BANK0 ] unsigned char 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  4    4[BANK0 ] unsigned char 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 3F/0
  5975 ;;		On exit  : 3F/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5978 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5979 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5980 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5981 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5982 ;;Total ram usage:       14 bytes
  5983 ;; Hardware stack levels used: 1
  5984 ;; Hardware stack levels required when called: 7
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_ps_math
  5989 ;;		_main
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text7
  5994  013606                     __ptext7:
  5995                           	callstack 0
  5996  013606                     ___xxtofl:
  5997                           	callstack 22
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;incstack = 0
  6001                           ;___xxtofl@sign stored from wreg
  6002  013606  6F6C               	movwf	___xxtofl@sign& (0+255),b
  6003  013608  0100               	movlb	0	; () banked
  6004  01360A  516C               	movf	___xxtofl@sign& (0+255),w,b
  6005  01360C  A4D8               	btfss	status,2,c
  6006                           
  6007                           ; BSR set to: 0
  6008  01360E  AF67               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6009  013610  D01A               	goto	l2484
  6010                           
  6011                           ; BSR set to: 0
  6012  013612  C064  F068         	movff	___xxtofl@val,??___xxtofl
  6013  013616  C065  F069         	movff	___xxtofl@val+1,??___xxtofl+1
  6014  01361A  C066  F06A         	movff	___xxtofl@val+2,??___xxtofl+2
  6015  01361E  C067  F06B         	movff	___xxtofl@val+3,??___xxtofl+3
  6016  013622  1F68               	comf	??___xxtofl& (0+255),f,b
  6017  013624  1F69               	comf	(??___xxtofl+1)& (0+255),f,b
  6018  013626  1F6A               	comf	(??___xxtofl+2)& (0+255),f,b
  6019  013628  1F6B               	comf	(??___xxtofl+3)& (0+255),f,b
  6020  01362A  2B68               	incf	??___xxtofl& (0+255),f,b
  6021  01362C  0E00               	movlw	0
  6022  01362E  2369               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6023  013630  236A               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6024  013632  236B               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6025  013634  C068  F06E         	movff	??___xxtofl,___xxtofl@arg
  6026  013638  C069  F06F         	movff	??___xxtofl+1,___xxtofl@arg+1
  6027  01363C  C06A  F070         	movff	??___xxtofl+2,___xxtofl@arg+2
  6028  013640  C06B  F071         	movff	??___xxtofl+3,___xxtofl@arg+3
  6029  013644  D008               	goto	l10705
  6030  013646                     l2484:
  6031                           
  6032                           ; BSR set to: 0
  6033  013646  C064  F06E         	movff	___xxtofl@val,___xxtofl@arg
  6034  01364A  C065  F06F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6035  01364E  C066  F070         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6036  013652  C067  F071         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6037  013656                     l10705:
  6038                           
  6039                           ; BSR set to: 0
  6040  013656  5164               	movf	___xxtofl@val& (0+255),w,b
  6041  013658  1165               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6042  01365A  1166               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6043  01365C  1167               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6044  01365E  A4D8               	btfss	status,2,c
  6045  013660  D009               	goto	l10711
  6046                           
  6047                           ; BSR set to: 0
  6048  013662  0E00               	movlw	0
  6049  013664  6F64               	movwf	?___xxtofl& (0+255),b
  6050  013666  0E00               	movlw	0
  6051  013668  6F65               	movwf	(?___xxtofl+1)& (0+255),b
  6052  01366A  0E00               	movlw	0
  6053  01366C  6F66               	movwf	(?___xxtofl+2)& (0+255),b
  6054  01366E  0E00               	movlw	0
  6055  013670  6F67               	movwf	(?___xxtofl+3)& (0+255),b
  6056  013672  0012               	return	
  6057  013674                     l10711:
  6058                           
  6059                           ; BSR set to: 0
  6060  013674  0E96               	movlw	150
  6061  013676  6F6D               	movwf	___xxtofl@exp& (0+255),b
  6062  013678  D006               	goto	l10715
  6063  01367A                     l10713:
  6064                           
  6065                           ; BSR set to: 0
  6066  01367A  2B6D               	incf	___xxtofl@exp& (0+255),f,b
  6067  01367C  90D8               	bcf	status,0,c
  6068  01367E  3371               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6069  013680  3370               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6070  013682  336F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6071  013684  336E               	rrcf	___xxtofl@arg& (0+255),f,b
  6072  013686                     l10715:
  6073                           
  6074                           ; BSR set to: 0
  6075  013686  0E00               	movlw	0
  6076  013688  156E               	andwf	___xxtofl@arg& (0+255),w,b
  6077  01368A  6F68               	movwf	??___xxtofl& (0+255),b
  6078  01368C  0E00               	movlw	0
  6079  01368E  156F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6080  013690  6F69               	movwf	(??___xxtofl+1)& (0+255),b
  6081  013692  0E00               	movlw	0
  6082  013694  1570               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6083  013696  6F6A               	movwf	(??___xxtofl+2)& (0+255),b
  6084  013698  0EFE               	movlw	254
  6085  01369A  1571               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6086  01369C  6F6B               	movwf	(??___xxtofl+3)& (0+255),b
  6087  01369E  5168               	movf	??___xxtofl& (0+255),w,b
  6088  0136A0  1169               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6089  0136A2  116A               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6090  0136A4  116B               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6091  0136A6  B4D8               	btfsc	status,2,c
  6092  0136A8  D00D               	goto	l2491
  6093  0136AA  D7E7               	goto	l10713
  6094  0136AC                     l10717:
  6095                           
  6096                           ; BSR set to: 0
  6097  0136AC  2B6D               	incf	___xxtofl@exp& (0+255),f,b
  6098                           
  6099                           ; BSR set to: 0
  6100  0136AE  0E01               	movlw	1
  6101  0136B0  276E               	addwf	___xxtofl@arg& (0+255),f,b
  6102  0136B2  0E00               	movlw	0
  6103  0136B4  236F               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6104  0136B6  2370               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6105  0136B8  2371               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6106                           
  6107                           ; BSR set to: 0
  6108  0136BA  90D8               	bcf	status,0,c
  6109  0136BC  3371               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6110  0136BE  3370               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6111  0136C0  336F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6112  0136C2  336E               	rrcf	___xxtofl@arg& (0+255),f,b
  6113  0136C4                     l2491:
  6114                           
  6115                           ; BSR set to: 0
  6116  0136C4  0E00               	movlw	0
  6117  0136C6  156E               	andwf	___xxtofl@arg& (0+255),w,b
  6118  0136C8  6F68               	movwf	??___xxtofl& (0+255),b
  6119  0136CA  0E00               	movlw	0
  6120  0136CC  156F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6121  0136CE  6F69               	movwf	(??___xxtofl+1)& (0+255),b
  6122  0136D0  0E00               	movlw	0
  6123  0136D2  1570               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6124  0136D4  6F6A               	movwf	(??___xxtofl+2)& (0+255),b
  6125  0136D6  0EFF               	movlw	255
  6126  0136D8  1571               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6127  0136DA  6F6B               	movwf	(??___xxtofl+3)& (0+255),b
  6128  0136DC  5168               	movf	??___xxtofl& (0+255),w,b
  6129  0136DE  1169               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6130  0136E0  116A               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6131  0136E2  116B               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6132  0136E4  B4D8               	btfsc	status,2,c
  6133  0136E6  D007               	goto	l10725
  6134  0136E8  D7E1               	goto	l10717
  6135  0136EA                     l10723:
  6136                           
  6137                           ; BSR set to: 0
  6138  0136EA  076D               	decf	___xxtofl@exp& (0+255),f,b
  6139  0136EC  90D8               	bcf	status,0,c
  6140  0136EE  376E               	rlcf	___xxtofl@arg& (0+255),f,b
  6141  0136F0  376F               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6142  0136F2  3770               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6143  0136F4  3771               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6144  0136F6                     l10725:
  6145                           
  6146                           ; BSR set to: 0
  6147  0136F6  BF70               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6148  0136F8  D003               	goto	u10330
  6149                           
  6150                           ; BSR set to: 0
  6151  0136FA  0E02               	movlw	2
  6152  0136FC  616D               	cpfslt	___xxtofl@exp& (0+255),b
  6153  0136FE  D7F5               	goto	l10723
  6154  013700                     u10330:
  6155                           
  6156                           ; BSR set to: 0
  6157  013700  A16D               	btfss	___xxtofl@exp& (0+255),0,b
  6158                           
  6159                           ; BSR set to: 0
  6160  013702  9F70               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  6161                           
  6162                           ; BSR set to: 0
  6163  013704  90D8               	bcf	status,0,c
  6164  013706  336D               	rrcf	___xxtofl@exp& (0+255),f,b
  6165                           
  6166                           ; BSR set to: 0
  6167  013708  C06D  F068         	movff	___xxtofl@exp,??___xxtofl
  6168  01370C  6B69               	clrf	(??___xxtofl+1)& (0+255),b
  6169  01370E  6B6A               	clrf	(??___xxtofl+2)& (0+255),b
  6170  013710  6B6B               	clrf	(??___xxtofl+3)& (0+255),b
  6171  013712  C068  F06B         	movff	??___xxtofl,??___xxtofl+3
  6172  013716  6B6A               	clrf	(??___xxtofl+2)& (0+255),b
  6173  013718  6B69               	clrf	(??___xxtofl+1)& (0+255),b
  6174  01371A  6B68               	clrf	??___xxtofl& (0+255),b
  6175  01371C  5168               	movf	??___xxtofl& (0+255),w,b
  6176  01371E  136E               	iorwf	___xxtofl@arg& (0+255),f,b
  6177  013720  5169               	movf	(??___xxtofl+1)& (0+255),w,b
  6178  013722  136F               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6179  013724  516A               	movf	(??___xxtofl+2)& (0+255),w,b
  6180  013726  1370               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6181  013728  516B               	movf	(??___xxtofl+3)& (0+255),w,b
  6182  01372A  1371               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6183                           
  6184                           ; BSR set to: 0
  6185  01372C  516C               	movf	___xxtofl@sign& (0+255),w,b
  6186  01372E  A4D8               	btfss	status,2,c
  6187                           
  6188                           ; BSR set to: 0
  6189  013730  AF67               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6190  013732  D001               	goto	l10741
  6191                           
  6192                           ; BSR set to: 0
  6193  013734  8F71               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6194  013736                     l10741:
  6195                           
  6196                           ; BSR set to: 0
  6197  013736  C06E  F064         	movff	___xxtofl@arg,?___xxtofl
  6198  01373A  C06F  F065         	movff	___xxtofl@arg+1,?___xxtofl+1
  6199  01373E  C070  F066         	movff	___xxtofl@arg+2,?___xxtofl+2
  6200  013742  C071  F067         	movff	___xxtofl@arg+3,?___xxtofl+3
  6201                           
  6202                           ; BSR set to: 0
  6203  013746  0012               	return		;funcret
  6204  013748                     __end_of___xxtofl:
  6205                           	callstack 0
  6206                           
  6207 ;; *************** function _printf *****************
  6208 ;; Defined at:
  6209 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  fmt             2   22[BANK1 ] PTR const unsigned char 
  6212 ;;		 -> STR_15(153), 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  ap              2  146[BANK0 ] PTR void [1]
  6215 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6216 ;;  ret             2    0        int 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  2   22[BANK1 ] int 
  6219 ;; Registers used:
  6220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 3F/1
  6223 ;;		On exit  : 3F/1
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6226 ;;      Params:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6227 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6229 ;;      Totals:         0       2      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6230 ;;Total ram usage:       36 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 15
  6233 ;; This function calls:
  6234 ;;		_vfprintf
  6235 ;; This function is called by:
  6236 ;;		_main
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text8
  6241  0152F2                     __ptext8:
  6242                           	callstack 0
  6243  0152F2                     _printf:
  6244                           	callstack 15
  6245                           
  6246                           ; BSR set to: 1
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;incstack = 0
  6250  0152F2  0E84               	movlw	low (?_printf+2)
  6251  0152F4  0100               	movlb	0	; () banked
  6252  0152F6  6FF2               	movwf	printf@ap& (0+255),b
  6253  0152F8  0E01               	movlw	high (?_printf+2)
  6254  0152FA  6FF3               	movwf	(printf@ap+1)& (0+255),b
  6255                           
  6256                           ; BSR set to: 0
  6257  0152FC  0E00               	movlw	0
  6258  0152FE  6FEA               	movwf	vfprintf@fp& (0+255),b
  6259  015300  0E00               	movlw	0
  6260  015302  6FEB               	movwf	(vfprintf@fp+1)& (0+255),b
  6261  015304  C182  F0EC         	movff	printf@fmt,vfprintf@fmt
  6262  015308  C183  F0ED         	movff	printf@fmt+1,vfprintf@fmt+1
  6263  01530C  0EF2               	movlw	low printf@ap
  6264  01530E  6FEE               	movwf	vfprintf@ap& (0+255),b
  6265  015310  6BEF               	clrf	(vfprintf@ap+1)& (0+255),b
  6266  015312  ECB0  F0A3         	call	_vfprintf	;wreg free
  6267                           
  6268                           ; BSR set to: 1
  6269  015316  0012               	return		;funcret
  6270  015318                     __end_of_printf:
  6271                           	callstack 0
  6272                           
  6273 ;; *************** function _vfprintf *****************
  6274 ;; Defined at:
  6275 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  fp              2  138[BANK0 ] PTR struct _IO_FILE
  6278 ;;		 -> sprintf@f(11), NULL(0), 
  6279 ;;  fmt             2  140[BANK0 ] PTR const unsigned char 
  6280 ;;		 -> STR_19(23), STR_18(29), STR_17(24), STR_16(24), 
  6281 ;;		 -> STR_15(153), STR_14(3), STR_13(6), STR_12(17), 
  6282 ;;  ap              2  142[BANK0 ] PTR PTR void 
  6283 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  cfmt            2  144[BANK0 ] PTR unsigned char 
  6286 ;;		 -> STR_19(23), STR_18(29), STR_17(24), STR_16(24), 
  6287 ;;		 -> STR_15(153), STR_14(3), STR_13(6), STR_12(17), 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  2  138[BANK0 ] int 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 3F/0
  6294 ;;		On exit  : 3F/1
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6297 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6298 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6300 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6301 ;;Total ram usage:        8 bytes
  6302 ;; Hardware stack levels used: 1
  6303 ;; Hardware stack levels required when called: 14
  6304 ;; This function calls:
  6305 ;;		_vfpfcnvrt
  6306 ;; This function is called by:
  6307 ;;		_sprintf
  6308 ;;		_printf
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text9
  6313  014760                     __ptext9:
  6314                           	callstack 0
  6315  014760                     _vfprintf:
  6316                           	callstack 15
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  6320                           
  6321                           ; BSR set to: 1
  6322                           ;incstack = 0
  6323  014760  C0EC  F0F0         	movff	vfprintf@fmt,vfprintf@cfmt
  6324  014764  C0ED  F0F1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  6328  014768  0E00               	movlw	0
  6329  01476A  0101               	movlb	1	; () banked
  6330  01476C  6F5E               	movwf	(_nout+1)& (0+255),b
  6331  01476E  0E00               	movlw	0
  6332  014770  6F5D               	movwf	_nout& (0+255),b
  6333                           
  6334                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  6335  014772  D014               	goto	l10751
  6336  014774                     l10749:
  6337                           
  6338                           ; BSR set to: 1
  6339                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6340  014774  C0EA  F0E1         	movff	vfprintf@fp,vfpfcnvrt@fp
  6341  014778  C0EB  F0E2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6342  01477C  0EF0               	movlw	low vfprintf@cfmt
  6343  01477E  0100               	movlb	0	; () banked
  6344  014780  6FE3               	movwf	vfpfcnvrt@fmt& (0+255),b
  6345  014782  C0EE  F0E4         	movff	vfprintf@ap,vfpfcnvrt@ap
  6346  014786  C0EF  F0E5         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6347  01478A  ECDC  F084         	call	_vfpfcnvrt	;wreg free
  6348  01478E  51E1               	movf	?_vfpfcnvrt& (0+255),w,b
  6349  014790  0101               	movlb	1	; () banked
  6350  014792  275D               	addwf	_nout& (0+255),f,b
  6351  014794  0100               	movlb	0	; () banked
  6352  014796  51E2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6353  014798  0101               	movlb	1	; () banked
  6354  01479A  235E               	addwfc	(_nout+1)& (0+255),f,b
  6355  01479C                     l10751:
  6356                           
  6357                           ; BSR set to: 1
  6358                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  6359  01479C  0060  F3C3  FFF6   	movff	vfprintf@cfmt,tblptrl
  6360  0147A2  0060  F3C7  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  6361  0147A8                     	if	0	;tblptru may be non-zero
  6362  0147A8                     	endif
  6363  0147A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6364  0147A8  0E00               	movlw	low (__mediumconst shr (0+16))
  6365  0147AA  6EF8               	movwf	tblptru,c
  6366  0147AC                     	endif
  6367  0147AC  0008               	tblrd		*
  6368  0147AE  50F5               	movf	tablat,w,c
  6369  0147B0  0900               	iorlw	0
  6370  0147B2  A4D8               	btfss	status,2,c
  6371  0147B4  D7DF               	goto	l10749
  6372                           
  6373                           ; BSR set to: 1
  6374                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  6375  0147B6  C15D  F0EA         	movff	_nout,?_vfprintf
  6376  0147BA  C15E  F0EB         	movff	_nout+1,?_vfprintf+1
  6377                           
  6378                           ; BSR set to: 1
  6379  0147BE  0012               	return		;funcret
  6380  0147C0                     __end_of_vfprintf:
  6381                           	callstack 0
  6382                           
  6383 ;; *************** function _vfpfcnvrt *****************
  6384 ;; Defined at:
  6385 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  fp              2  129[BANK0 ] PTR struct _IO_FILE
  6388 ;;		 -> sprintf@f(11), NULL(0), 
  6389 ;;  fmt             1  131[BANK0 ] PTR PTR unsigned char 
  6390 ;;		 -> vfprintf@cfmt(2), 
  6391 ;;  ap              2  132[BANK0 ] PTR PTR void 
  6392 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  llu             8    0[BANK1 ] unsigned long long 
  6395 ;;  ll              8    0        long long 
  6396 ;;  f               4   14[BANK1 ] long long 
  6397 ;;  ct              3   18[BANK1 ] unsigned char [3]
  6398 ;;  vp              3    0        PTR void 
  6399 ;;  done            2   10[BANK1 ] int 
  6400 ;;  cp              2    8[BANK1 ] PTR unsigned char 
  6401 ;;		 -> ?_printf(2), ?_sprintf(2), build_version(14), STR_2(9), 
  6402 ;;		 -> STR_1(12), 
  6403 ;;  i               2    0        int 
  6404 ;;  c               1   21[BANK1 ] unsigned char 
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  2  129[BANK0 ] int 
  6407 ;; Registers used:
  6408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 3F/0
  6411 ;;		On exit  : 3F/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6414 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6415 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6416 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6417 ;;      Totals:         0       9      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6418 ;;Total ram usage:       31 bytes
  6419 ;; Hardware stack levels used: 1
  6420 ;; Hardware stack levels required when called: 13
  6421 ;; This function calls:
  6422 ;;		_atoi
  6423 ;;		_efgtoa
  6424 ;;		_fputc
  6425 ;;		_isdigit
  6426 ;;		_isupper
  6427 ;;		_stoa
  6428 ;;		_strncmp
  6429 ;;		_tolower
  6430 ;;		_utoa
  6431 ;; This function is called by:
  6432 ;;		_vfprintf
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text10
  6437  0109B8                     __ptext10:
  6438                           	callstack 0
  6439  0109B8                     _vfpfcnvrt:
  6440                           	callstack 15
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;incstack = 0
  6447  0109B8  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6448  0109BA  6ED9               	movwf	fsr2l,c
  6449  0109BC  6ADA               	clrf	fsr2h,c
  6450  0109BE  006F FF7B FFF6     	movff	postinc2,tblptrl
  6451  0109C4  006F FF77 FFF7     	movff	postdec2,tblptrh
  6452  0109CA                     	if	0	;tblptru may be non-zero
  6453  0109CA                     	endif
  6454  0109CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6455  0109CA  0E00               	movlw	low (__mediumconst shr (0+16))
  6456  0109CC  6EF8               	movwf	tblptru,c
  6457  0109CE                     	endif
  6458  0109CE  0008               	tblrd		*
  6459  0109D0  50F5               	movf	tablat,w,c
  6460  0109D2  0A25               	xorlw	37
  6461  0109D4  A4D8               	btfss	status,2,c
  6462  0109D6  D35C               	goto	l10385
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  6466  0109D8  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6467  0109DA  6ED9               	movwf	fsr2l,c
  6468  0109DC  6ADA               	clrf	fsr2h,c
  6469  0109DE  2ADE               	incf	postinc2,f,c
  6470  0109E0  0E00               	movlw	0
  6471  0109E2  22DD               	addwfc	postdec2,f,c
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  6475  0109E4  0E00               	movlw	0
  6476  0109E6  6E2D               	movwf	(_width+1)^0,c
  6477  0109E8  0E00               	movlw	0
  6478  0109EA  6E2C               	movwf	_width^0,c
  6479  0109EC  C02C  F02E         	movff	_width,_flags
  6480  0109F0  C02D  F02F         	movff	_width+1,_flags+1
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  6484  0109F4  69F8               	setf	_prec& (0+255),b
  6485  0109F6  69F9               	setf	(_prec+1)& (0+255),b
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  6489  0109F8  0E00               	movlw	0
  6490  0109FA  0101               	movlb	1	; () banked
  6491  0109FC  6F77               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6492  0109FE  0E00               	movlw	0
  6493  010A00  D014               	goto	L2
  6494  010A02                     l10241:
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  6498  010A02  802E               	bsf	_flags^0,0,c
  6499  010A04                     l10243:
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  6503  010A04  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6504  010A06  6ED9               	movwf	fsr2l,c
  6505  010A08  6ADA               	clrf	fsr2h,c
  6506  010A0A  2ADE               	incf	postinc2,f,c
  6507  010A0C  0E00               	movlw	0
  6508  010A0E  22DD               	addwfc	postdec2,f,c
  6509                           
  6510                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  6511  010A10  D033               	goto	l10267
  6512  010A12                     l10245:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  6516  010A12  822E               	bsf	_flags^0,1,c
  6517  010A14  D7F7               	goto	l10243
  6518  010A16                     l10249:
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  6522  010A16  842E               	bsf	_flags^0,2,c
  6523  010A18  D7F5               	goto	l10243
  6524  010A1A                     l10253:
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  6528  010A1A  862E               	bsf	_flags^0,3,c
  6529  010A1C  D7F3               	goto	l10243
  6530  010A1E                     l10257:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  6534  010A1E  882E               	bsf	_flags^0,4,c
  6535  010A20  D7F1               	goto	l10243
  6536  010A22                     l10261:
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  6540  010A22  0E00               	movlw	0
  6541  010A24  0101               	movlb	1	; () banked
  6542  010A26  6F77               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6543  010A28  0E01               	movlw	1
  6544  010A2A                     L2:
  6545  010A2A  6F76               	movwf	vfpfcnvrt@done& (0+255),b
  6546                           
  6547                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  6548  010A2C  D025               	goto	l10267
  6549  010A2E                     l10265:
  6550                           
  6551                           ; BSR set to: 1
  6552  010A2E  0100               	movlb	0	; () banked
  6553  010A30  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6554  010A32  6ED9               	movwf	fsr2l,c
  6555  010A34  6ADA               	clrf	fsr2h,c
  6556  010A36  006F FF7B FFF6     	movff	postinc2,tblptrl
  6557  010A3C  006F FF77 FFF7     	movff	postdec2,tblptrh
  6558  010A42                     	if	0	;tblptru may be non-zero
  6559  010A42                     	endif
  6560  010A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6561  010A42  0E00               	movlw	low (__mediumconst shr (0+16))
  6562  010A44  6EF8               	movwf	tblptru,c
  6563  010A46                     	endif
  6564  010A46  0008               	tblrd		*
  6565  010A48  50F5               	movf	tablat,w,c
  6566  010A4A  6FE6               	movwf	??_vfpfcnvrt& (0+255),b
  6567  010A4C  6BE7               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6568                           
  6569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6570                           ; Switch size 1, requested type "simple"
  6571                           ; Number of cases is 1, Range of values is 0 to 0
  6572                           ; switch strategies available:
  6573                           ; Name         Instructions Cycles
  6574                           ; simple_byte            4     3 (average)
  6575                           ;	Chosen strategy is simple_byte
  6576  010A4E  51E7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6577  010A50  0A00               	xorlw	0	; case 0
  6578  010A52  A4D8               	btfss	status,2,c
  6579  010A54  D7E6               	goto	l10261
  6580                           
  6581                           ; BSR set to: 0
  6582                           ; Switch size 1, requested type "simple"
  6583                           ; Number of cases is 5, Range of values is 32 to 48
  6584                           ; switch strategies available:
  6585                           ; Name         Instructions Cycles
  6586                           ; simple_byte           16     9 (average)
  6587                           ;	Chosen strategy is simple_byte
  6588  010A56  51E6               	movf	??_vfpfcnvrt& (0+255),w,b
  6589  010A58  0A20               	xorlw	32	; case 32
  6590  010A5A  B4D8               	btfsc	status,2,c
  6591  010A5C  D7DE               	goto	l10253
  6592  010A5E  0A03               	xorlw	3	; case 35
  6593  010A60  B4D8               	btfsc	status,2,c
  6594  010A62  D7DD               	goto	l10257
  6595  010A64  0A08               	xorlw	8	; case 43
  6596  010A66  B4D8               	btfsc	status,2,c
  6597  010A68  D7D6               	goto	l10249
  6598  010A6A  0A06               	xorlw	6	; case 45
  6599  010A6C  B4D8               	btfsc	status,2,c
  6600  010A6E  D7C9               	goto	l10241
  6601  010A70  0A1D               	xorlw	29	; case 48
  6602  010A72  B4D8               	btfsc	status,2,c
  6603  010A74  D7CE               	goto	l10245
  6604  010A76  D7D5               	goto	l10261
  6605  010A78                     l10267:
  6606                           
  6607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  6608  010A78  0101               	movlb	1	; () banked
  6609  010A7A  5176               	movf	vfpfcnvrt@done& (0+255),w,b
  6610  010A7C  1177               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6611  010A7E  B4D8               	btfsc	status,2,c
  6612  010A80  D7D6               	goto	l10265
  6613                           
  6614                           ; BSR set to: 1
  6615                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  6616  010A82  B02E               	btfsc	_flags^0,0,c
  6617                           
  6618                           ; BSR set to: 1
  6619                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  6620  010A84  922E               	bcf	_flags^0,1,c
  6621                           
  6622                           ; BSR set to: 1
  6623                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  6624  010A86  0100               	movlb	0	; () banked
  6625  010A88  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6626  010A8A  6ED9               	movwf	fsr2l,c
  6627  010A8C  6ADA               	clrf	fsr2h,c
  6628  010A8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6629  010A94  006F FF77 FFF7     	movff	postdec2,tblptrh
  6630  010A9A                     	if	0	;tblptru may be non-zero
  6631  010A9A                     	endif
  6632  010A9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6633  010A9A  0E00               	movlw	low (__mediumconst shr (0+16))
  6634  010A9C  6EF8               	movwf	tblptru,c
  6635  010A9E                     	endif
  6636  010A9E  0008               	tblrd		*
  6637  010AA0  50F5               	movf	tablat,w,c
  6638  010AA2  0A2A               	xorlw	42
  6639  010AA4  A4D8               	btfss	status,2,c
  6640  010AA6  D02A               	goto	l10279
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  6644  010AA8  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6645  010AAA  6ED9               	movwf	fsr2l,c
  6646  010AAC  6ADA               	clrf	fsr2h,c
  6647  010AAE  2ADE               	incf	postinc2,f,c
  6648  010AB0  0E00               	movlw	0
  6649  010AB2  22DD               	addwfc	postdec2,f,c
  6650                           
  6651                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6652  010AB4  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  6653  010ABA  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  6654  010AC0  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  6655  010AC6  0E02               	movlw	2
  6656  010AC8  26DE               	addwf	postinc2,f,c
  6657  010ACA  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  6658  010AD0  0E00               	movlw	0
  6659  010AD2  22DD               	addwfc	postdec2,f,c
  6660  010AD4  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  6661  010ADA  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  6662  010AE0  006F FF78  F02C    	movff	postinc2,_width
  6663  010AE6  006F FF74  F02D    	movff	postdec2,_width+1
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  6667  010AEC  AE2D               	btfss	(_width+1)^0,7,c
  6668  010AEE  D039               	goto	u9900
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  6672  010AF0  802E               	bsf	_flags^0,0,c
  6673                           
  6674                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  6675  010AF2  6C2C               	negf	_width^0,c
  6676  010AF4  1E2D               	comf	(_width+1)^0,f,c
  6677  010AF6  B0D8               	btfsc	status,0,c
  6678  010AF8  2A2D               	incf	(_width+1)^0,f,c
  6679  010AFA  D033               	goto	u9900
  6680  010AFC                     l10279:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  6684  010AFC  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6685  010AFE  6ED9               	movwf	fsr2l,c
  6686  010B00  6ADA               	clrf	fsr2h,c
  6687  010B02  006F FF78  F065    	movff	postinc2,atoi@s
  6688  010B08  006F FF74  F066    	movff	postdec2,atoi@s+1
  6689  010B0E  ECA4  F09B         	call	_atoi	;wreg free
  6690  010B12  C065  F02C         	movff	?_atoi,_width
  6691  010B16  C066  F02D         	movff	?_atoi+1,_width+1
  6692                           
  6693                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6694  010B1A  D006               	goto	l10285
  6695  010B1C                     l10281:
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  6699  010B1C  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6700  010B1E  6ED9               	movwf	fsr2l,c
  6701  010B20  6ADA               	clrf	fsr2h,c
  6702  010B22  2ADE               	incf	postinc2,f,c
  6703  010B24  0E00               	movlw	0
  6704  010B26  22DD               	addwfc	postdec2,f,c
  6705  010B28                     l10285:
  6706                           
  6707                           ; BSR set to: 0
  6708  010B28  0ED0               	movlw	208
  6709  010B2A  6FE6               	movwf	??_vfpfcnvrt& (0+255),b
  6710  010B2C  0EFF               	movlw	255
  6711  010B2E  6FE7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6712  010B30  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6713  010B32  6ED9               	movwf	fsr2l,c
  6714  010B34  6ADA               	clrf	fsr2h,c
  6715  010B36  006F FF7B FFF6     	movff	postinc2,tblptrl
  6716  010B3C  006F FF77 FFF7     	movff	postdec2,tblptrh
  6717  010B42                     	if	0	;tblptru may be non-zero
  6718  010B42                     	endif
  6719  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6720  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6721  010B44  6EF8               	movwf	tblptru,c
  6722  010B46                     	endif
  6723  010B46  0008               	tblrd		*
  6724  010B48  50F5               	movf	tablat,w,c
  6725  010B4A  6FE8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6726  010B4C  6BE9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6727  010B4E  51E6               	movf	??_vfpfcnvrt& (0+255),w,b
  6728  010B50  27E8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6729  010B52  51E7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6730  010B54  23E9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6731  010B56  51E9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6732  010B58  E104               	bnz	u9900
  6733  010B5A  0E0A               	movlw	10
  6734  010B5C  5DE8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6735  010B5E  A0D8               	btfss	status,0,c
  6736  010B60  D7DD               	goto	l10281
  6737  010B62                     u9900:
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  6741  010B62  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6742  010B64  6ED9               	movwf	fsr2l,c
  6743  010B66  6ADA               	clrf	fsr2h,c
  6744  010B68  006F FF7B FFF6     	movff	postinc2,tblptrl
  6745  010B6E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6746  010B74                     	if	0	;tblptru may be non-zero
  6747  010B74                     	endif
  6748  010B74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6749  010B74  0E00               	movlw	low (__mediumconst shr (0+16))
  6750  010B76  6EF8               	movwf	tblptru,c
  6751  010B78                     	endif
  6752  010B78  0008               	tblrd		*
  6753  010B7A  50F5               	movf	tablat,w,c
  6754  010B7C  0A2E               	xorlw	46
  6755  010B7E  A4D8               	btfss	status,2,c
  6756  010B80  D070               	goto	u9930
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  6760  010B82  0E00               	movlw	0
  6761  010B84  6FF9               	movwf	(_prec+1)& (0+255),b
  6762  010B86  0E00               	movlw	0
  6763  010B88  6FF8               	movwf	_prec& (0+255),b
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  6767  010B8A  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6768  010B8C  6ED9               	movwf	fsr2l,c
  6769  010B8E  6ADA               	clrf	fsr2h,c
  6770  010B90  2ADE               	incf	postinc2,f,c
  6771  010B92  0E00               	movlw	0
  6772  010B94  22DD               	addwfc	postdec2,f,c
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  6776  010B96  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6777  010B98  6ED9               	movwf	fsr2l,c
  6778  010B9A  6ADA               	clrf	fsr2h,c
  6779  010B9C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6780  010BA2  006F FF77 FFF7     	movff	postdec2,tblptrh
  6781  010BA8                     	if	0	;tblptru may be non-zero
  6782  010BA8                     	endif
  6783  010BA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6784  010BA8  0E00               	movlw	low (__mediumconst shr (0+16))
  6785  010BAA  6EF8               	movwf	tblptru,c
  6786  010BAC                     	endif
  6787  010BAC  0008               	tblrd		*
  6788  010BAE  50F5               	movf	tablat,w,c
  6789  010BB0  0A2A               	xorlw	42
  6790  010BB2  A4D8               	btfss	status,2,c
  6791  010BB4  D023               	goto	l10297
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  6795  010BB6  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6796  010BB8  6ED9               	movwf	fsr2l,c
  6797  010BBA  6ADA               	clrf	fsr2h,c
  6798  010BBC  2ADE               	incf	postinc2,f,c
  6799  010BBE  0E00               	movlw	0
  6800  010BC0  22DD               	addwfc	postdec2,f,c
  6801                           
  6802                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  6803  010BC2  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  6804  010BC8  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  6805  010BCE  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  6806  010BD4  0E02               	movlw	2
  6807  010BD6  26DE               	addwf	postinc2,f,c
  6808  010BD8  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  6809  010BDE  0E00               	movlw	0
  6810  010BE0  22DD               	addwfc	postdec2,f,c
  6811  010BE2  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  6812  010BE8  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  6813  010BEE  006F FF78  F0F8    	movff	postinc2,_prec
  6814  010BF4  006F FF74  F0F9    	movff	postdec2,_prec+1
  6815                           
  6816                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  6817  010BFA  D033               	goto	u9930
  6818  010BFC                     l10297:
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  6822  010BFC  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6823  010BFE  6ED9               	movwf	fsr2l,c
  6824  010C00  6ADA               	clrf	fsr2h,c
  6825  010C02  006F FF78  F065    	movff	postinc2,atoi@s
  6826  010C08  006F FF74  F066    	movff	postdec2,atoi@s+1
  6827  010C0E  ECA4  F09B         	call	_atoi	;wreg free
  6828  010C12  C065  F0F8         	movff	?_atoi,_prec
  6829  010C16  C066  F0F9         	movff	?_atoi+1,_prec+1
  6830                           
  6831                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6832  010C1A  D006               	goto	l10303
  6833  010C1C                     l10299:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  6837  010C1C  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6838  010C1E  6ED9               	movwf	fsr2l,c
  6839  010C20  6ADA               	clrf	fsr2h,c
  6840  010C22  2ADE               	incf	postinc2,f,c
  6841  010C24  0E00               	movlw	0
  6842  010C26  22DD               	addwfc	postdec2,f,c
  6843  010C28                     l10303:
  6844                           
  6845                           ; BSR set to: 0
  6846  010C28  0ED0               	movlw	208
  6847  010C2A  6FE6               	movwf	??_vfpfcnvrt& (0+255),b
  6848  010C2C  0EFF               	movlw	255
  6849  010C2E  6FE7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6850  010C30  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6851  010C32  6ED9               	movwf	fsr2l,c
  6852  010C34  6ADA               	clrf	fsr2h,c
  6853  010C36  006F FF7B FFF6     	movff	postinc2,tblptrl
  6854  010C3C  006F FF77 FFF7     	movff	postdec2,tblptrh
  6855  010C42                     	if	0	;tblptru may be non-zero
  6856  010C42                     	endif
  6857  010C42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6858  010C42  0E00               	movlw	low (__mediumconst shr (0+16))
  6859  010C44  6EF8               	movwf	tblptru,c
  6860  010C46                     	endif
  6861  010C46  0008               	tblrd		*
  6862  010C48  50F5               	movf	tablat,w,c
  6863  010C4A  6FE8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6864  010C4C  6BE9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6865  010C4E  51E6               	movf	??_vfpfcnvrt& (0+255),w,b
  6866  010C50  27E8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6867  010C52  51E7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6868  010C54  23E9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6869  010C56  51E9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6870  010C58  E104               	bnz	u9930
  6871  010C5A  0E0A               	movlw	10
  6872  010C5C  5DE8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6873  010C5E  A0D8               	btfss	status,0,c
  6874  010C60  D7DD               	goto	l10299
  6875  010C62                     u9930:
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  6879  010C62  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6880  010C64  6ED9               	movwf	fsr2l,c
  6881  010C66  6ADA               	clrf	fsr2h,c
  6882  010C68  006F FF7B FFF6     	movff	postinc2,tblptrl
  6883  010C6E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6884  010C74                     	if	0	;tblptru may be non-zero
  6885  010C74                     	endif
  6886  010C74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6887  010C74  0E00               	movlw	low (__mediumconst shr (0+16))
  6888  010C76  6EF8               	movwf	tblptru,c
  6889  010C78                     	endif
  6890  010C78  0008               	tblrd		*
  6891  010C7A  50F5               	movf	tablat,w,c
  6892  010C7C  6F64               	movwf	tolower@c& (0+255),b
  6893  010C7E  6B65               	clrf	(tolower@c+1)& (0+255),b
  6894  010C80  ECF9  F0A7         	call	_tolower	;wreg free
  6895  010C84  5164               	movf	?_tolower& (0+255),w,b
  6896  010C86  0101               	movlb	1	; () banked
  6897  010C88  6F7E               	movwf	vfpfcnvrt@ct& (0+255),b
  6898                           
  6899                           ; BSR set to: 1
  6900                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  6901  010C8A  517E               	movf	vfpfcnvrt@ct& (0+255),w,b
  6902  010C8C  B4D8               	btfsc	status,2,c
  6903  010C8E  D041               	goto	l10315
  6904                           
  6905                           ; BSR set to: 1
  6906                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  6907  010C90  0100               	movlb	0	; () banked
  6908  010C92  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6909  010C94  6ED9               	movwf	fsr2l,c
  6910  010C96  6ADA               	clrf	fsr2h,c
  6911  010C98  006F FF78  F0E6    	movff	postinc2,??_vfpfcnvrt
  6912  010C9E  006F FF74  F0E7    	movff	postdec2,??_vfpfcnvrt+1
  6913  010CA4  0E01               	movlw	1
  6914  010CA6  27E6               	addwf	??_vfpfcnvrt& (0+255),f,b
  6915  010CA8  0E00               	movlw	0
  6916  010CAA  23E7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6917  010CAC  0060  F39B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  6918  010CB2  0060  F39F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  6919  010CB8                     	if	0	;tblptru may be non-zero
  6920  010CB8                     	endif
  6921  010CB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6922  010CB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6923  010CBA  6EF8               	movwf	tblptru,c
  6924  010CBC                     	endif
  6925  010CBC  0008               	tblrd		*
  6926  010CBE  50F5               	movf	tablat,w,c
  6927  010CC0  6F64               	movwf	tolower@c& (0+255),b
  6928  010CC2  6B65               	clrf	(tolower@c+1)& (0+255),b
  6929  010CC4  ECF9  F0A7         	call	_tolower	;wreg free
  6930  010CC8  5164               	movf	?_tolower& (0+255),w,b
  6931  010CCA  0101               	movlb	1	; () banked
  6932  010CCC  6F7F               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6933                           
  6934                           ; BSR set to: 1
  6935                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  6936  010CCE  517F               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6937  010CD0  B4D8               	btfsc	status,2,c
  6938  010CD2  D01F               	goto	l10315
  6939                           
  6940                           ; BSR set to: 1
  6941                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  6942  010CD4  0100               	movlb	0	; () banked
  6943  010CD6  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6944  010CD8  6ED9               	movwf	fsr2l,c
  6945  010CDA  6ADA               	clrf	fsr2h,c
  6946  010CDC  006F FF78  F0E6    	movff	postinc2,??_vfpfcnvrt
  6947  010CE2  006F FF74  F0E7    	movff	postdec2,??_vfpfcnvrt+1
  6948  010CE8  0E02               	movlw	2
  6949  010CEA  27E6               	addwf	??_vfpfcnvrt& (0+255),f,b
  6950  010CEC  0E00               	movlw	0
  6951  010CEE  23E7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6952  010CF0  0060  F39B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  6953  010CF6  0060  F39F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  6954  010CFC                     	if	0	;tblptru may be non-zero
  6955  010CFC                     	endif
  6956  010CFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6957  010CFC  0E00               	movlw	low (__mediumconst shr (0+16))
  6958  010CFE  6EF8               	movwf	tblptru,c
  6959  010D00                     	endif
  6960  010D00  0008               	tblrd		*
  6961  010D02  50F5               	movf	tablat,w,c
  6962  010D04  6F64               	movwf	tolower@c& (0+255),b
  6963  010D06  6B65               	clrf	(tolower@c+1)& (0+255),b
  6964  010D08  ECF9  F0A7         	call	_tolower	;wreg free
  6965  010D0C  5164               	movf	?_tolower& (0+255),w,b
  6966  010D0E  0101               	movlb	1	; () banked
  6967  010D10  6F80               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6968  010D12                     l10315:
  6969                           
  6970                           ; BSR set to: 1
  6971                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  6972  010D12  0E66               	movlw	102
  6973  010D14  197E               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6974  010D16  A4D8               	btfss	status,2,c
  6975  010D18  D04D               	goto	l10327
  6976                           
  6977                           ; BSR set to: 1
  6978                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  6979  010D1A  0100               	movlb	0	; () banked
  6980  010D1C  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6981  010D1E  6ED9               	movwf	fsr2l,c
  6982  010D20  6ADA               	clrf	fsr2h,c
  6983  010D22  006F FF7B FFF6     	movff	postinc2,tblptrl
  6984  010D28  006F FF77 FFF7     	movff	postdec2,tblptrh
  6985  010D2E                     	if	0	;tblptru may be non-zero
  6986  010D2E                     	endif
  6987  010D2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6988  010D2E  0E00               	movlw	low (__mediumconst shr (0+16))
  6989  010D30  6EF8               	movwf	tblptru,c
  6990  010D32                     	endif
  6991  010D32  0008               	tblrd		*
  6992  010D34  006F FFD4  F181    	movff	tablat,vfpfcnvrt@c
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  6996  010D3A  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6997  010D3C  6ED9               	movwf	fsr2l,c
  6998  010D3E  6ADA               	clrf	fsr2h,c
  6999  010D40  2ADE               	incf	postinc2,f,c
  7000  010D42  0E00               	movlw	0
  7001  010D44  22DD               	addwfc	postdec2,f,c
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7005  010D46  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  7006  010D4C  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  7007  010D52  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  7008  010D58  0E04               	movlw	4
  7009  010D5A  26DE               	addwf	postinc2,f,c
  7010  010D5C  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  7011  010D62  0E00               	movlw	0
  7012  010D64  22DD               	addwfc	postdec2,f,c
  7013  010D66  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  7014  010D6C  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  7015  010D72  006F FF78  F17A    	movff	postinc2,vfpfcnvrt@f
  7016  010D78  006F FF78  F17B    	movff	postinc2,vfpfcnvrt@f+1
  7017  010D7E  006F FF78  F17C    	movff	postinc2,vfpfcnvrt@f+2
  7018  010D84  006F FF78  F17D    	movff	postinc2,vfpfcnvrt@f+3
  7019  010D8A                     l10323:
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  7023  010D8A  C0E1  F0A3         	movff	vfpfcnvrt@fp,efgtoa@fp
  7024  010D8E  C0E2  F0A4         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7025  010D92  C17A  F0A5         	movff	vfpfcnvrt@f,efgtoa@f
  7026  010D96  C17B  F0A6         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7027  010D9A  C17C  F0A7         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7028  010D9E  C17D  F0A8         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7029  010DA2  C181  F0A9         	movff	vfpfcnvrt@c,efgtoa@c
  7030  010DA6  EC00  F080         	call	_efgtoa	;wreg free
  7031  010DAA  C0A3  F0E1         	movff	?_efgtoa,?_vfpfcnvrt
  7032  010DAE  C0A4  F0E2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7033  010DB2  0012               	return	
  7034  010DB4                     l10327:
  7035                           
  7036                           ; BSR set to: 1
  7037                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7038  010DB4  0E7E               	movlw	low vfpfcnvrt@ct
  7039  010DB6  0100               	movlb	0	; () banked
  7040  010DB8  6F62               	movwf	strncmp@_l& (0+255),b
  7041  010DBA  0E01               	movlw	high vfpfcnvrt@ct
  7042  010DBC  6F63               	movwf	(strncmp@_l+1)& (0+255),b
  7043  010DBE  0EE0               	movlw	low STR_38
  7044  010DC0  6F64               	movwf	strncmp@_r& (0+255),b
  7045  010DC2  0EFF               	movlw	high STR_38
  7046  010DC4  6F65               	movwf	(strncmp@_r+1)& (0+255),b
  7047  010DC6  0E00               	movlw	0
  7048  010DC8  6F67               	movwf	(strncmp@n+1)& (0+255),b
  7049  010DCA  0E02               	movlw	2
  7050  010DCC  6F66               	movwf	strncmp@n& (0+255),b
  7051  010DCE  EC59  F098         	call	_strncmp	;wreg free
  7052  010DD2  5162               	movf	?_strncmp& (0+255),w,b
  7053  010DD4  1163               	iorwf	(?_strncmp+1)& (0+255),w,b
  7054  010DD6  A4D8               	btfss	status,2,c
  7055  010DD8  D05E               	goto	l10343
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  7059  010DDA  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7060  010DDC  6ED9               	movwf	fsr2l,c
  7061  010DDE  6ADA               	clrf	fsr2h,c
  7062  010DE0  006F FF78  F0E6    	movff	postinc2,??_vfpfcnvrt
  7063  010DE6  006F FF74  F0E7    	movff	postdec2,??_vfpfcnvrt+1
  7064  010DEC  0E01               	movlw	1
  7065  010DEE  27E6               	addwf	??_vfpfcnvrt& (0+255),f,b
  7066  010DF0  0E00               	movlw	0
  7067  010DF2  23E7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7068  010DF4  0060  F39B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  7069  010DFA  0060  F39F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  7070  010E00                     	if	0	;tblptru may be non-zero
  7071  010E00                     	endif
  7072  010E00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7073  010E00  0E00               	movlw	low (__mediumconst shr (0+16))
  7074  010E02  6EF8               	movwf	tblptru,c
  7075  010E04                     	endif
  7076  010E04  0008               	tblrd		*
  7077  010E06  006F FFD4  F181    	movff	tablat,vfpfcnvrt@c
  7078                           
  7079                           ; BSR set to: 0
  7080                           
  7081                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7082  010E0C  0EBF               	movlw	191
  7083  010E0E  6FE6               	movwf	??_vfpfcnvrt& (0+255),b
  7084  010E10  0EFF               	movlw	255
  7085  010E12  6FE7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7086  010E14  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7087  010E16  6ED9               	movwf	fsr2l,c
  7088  010E18  6ADA               	clrf	fsr2h,c
  7089  010E1A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7090  010E20  006F FF77 FFF7     	movff	postdec2,tblptrh
  7091  010E26                     	if	0	;tblptru may be non-zero
  7092  010E26                     	endif
  7093  010E26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7094  010E26  0E00               	movlw	low (__mediumconst shr (0+16))
  7095  010E28  6EF8               	movwf	tblptru,c
  7096  010E2A                     	endif
  7097  010E2A  0008               	tblrd		*
  7098  010E2C  50F5               	movf	tablat,w,c
  7099  010E2E  6FE8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7100  010E30  6BE9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7101  010E32  51E6               	movf	??_vfpfcnvrt& (0+255),w,b
  7102  010E34  27E8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7103  010E36  51E7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7104  010E38  23E9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7105  010E3A  51E9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7106  010E3C  E102               	bnz	l10337
  7107  010E3E  0E1A               	movlw	26
  7108  010E40  5DE8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7109  010E42                     l10337:
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7113  010E42  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  7114  010E48  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  7115  010E4E  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  7116  010E54  0E04               	movlw	4
  7117  010E56  26DE               	addwf	postinc2,f,c
  7118  010E58  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  7119  010E5E  0E00               	movlw	0
  7120  010E60  22DD               	addwfc	postdec2,f,c
  7121  010E62  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  7122  010E68  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  7123  010E6E  006F FF78  F17A    	movff	postinc2,vfpfcnvrt@f
  7124  010E74  006F FF78  F17B    	movff	postinc2,vfpfcnvrt@f+1
  7125  010E7A  006F FF78  F17C    	movff	postinc2,vfpfcnvrt@f+2
  7126  010E80  006F FF78  F17D    	movff	postinc2,vfpfcnvrt@f+3
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7130                           
  7131                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 957:             }
  7132  010E86  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7133  010E88  6ED9               	movwf	fsr2l,c
  7134  010E8A  6ADA               	clrf	fsr2h,c
  7135  010E8C  0E02               	movlw	2
  7136  010E8E  26DE               	addwf	postinc2,f,c
  7137  010E90  0E00               	movlw	0
  7138  010E92  22DD               	addwfc	postdec2,f,c
  7139  010E94  D77A               	goto	l10323
  7140  010E96                     l10343:
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  7144  010E96  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7145  010E98  6ED9               	movwf	fsr2l,c
  7146  010E9A  6ADA               	clrf	fsr2h,c
  7147  010E9C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7148  010EA2  006F FF77 FFF7     	movff	postdec2,tblptrh
  7149  010EA8                     	if	0	;tblptru may be non-zero
  7150  010EA8                     	endif
  7151  010EA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7152  010EA8  0E00               	movlw	low (__mediumconst shr (0+16))
  7153  010EAA  6EF8               	movwf	tblptru,c
  7154  010EAC                     	endif
  7155  010EAC  0008               	tblrd		*
  7156  010EAE  50F5               	movf	tablat,w,c
  7157  010EB0  0A73               	xorlw	115
  7158  010EB2  B4D8               	btfsc	status,2,c
  7159  010EB4  D017               	goto	u10000
  7160                           
  7161                           ; BSR set to: 0
  7162  010EB6  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7163  010EB8  6ED9               	movwf	fsr2l,c
  7164  010EBA  6ADA               	clrf	fsr2h,c
  7165  010EBC  006F FF78  F062    	movff	postinc2,strncmp@_l
  7166  010EC2  006F FF74  F063    	movff	postdec2,strncmp@_l+1
  7167  010EC8  0EDC               	movlw	low STR_43
  7168  010ECA  6F64               	movwf	strncmp@_r& (0+255),b
  7169  010ECC  0EFF               	movlw	high STR_43
  7170  010ECE  6F65               	movwf	(strncmp@_r+1)& (0+255),b
  7171  010ED0  0E00               	movlw	0
  7172  010ED2  6F67               	movwf	(strncmp@n+1)& (0+255),b
  7173  010ED4  0E03               	movlw	3
  7174  010ED6  6F66               	movwf	strncmp@n& (0+255),b
  7175  010ED8  EC59  F098         	call	_strncmp	;wreg free
  7176  010EDC  5162               	movf	?_strncmp& (0+255),w,b
  7177  010EDE  1163               	iorwf	(?_strncmp+1)& (0+255),w,b
  7178  010EE0  A4D8               	btfss	status,2,c
  7179  010EE2  D04E               	goto	l10361
  7180  010EE4                     u10000:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  7184  010EE4  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7185  010EE6  6ED9               	movwf	fsr2l,c
  7186  010EE8  6ADA               	clrf	fsr2h,c
  7187  010EEA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7188  010EF0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7189  010EF6                     	if	0	;tblptru may be non-zero
  7190  010EF6                     	endif
  7191  010EF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7192  010EF6  0E00               	movlw	low (__mediumconst shr (0+16))
  7193  010EF8  6EF8               	movwf	tblptru,c
  7194  010EFA                     	endif
  7195  010EFA  0008               	tblrd		*
  7196  010EFC  50F5               	movf	tablat,w,c
  7197  010EFE  0A73               	xorlw	115
  7198  010F00  B4D8               	btfsc	status,2,c
  7199  010F02  D005               	goto	l10351
  7200                           
  7201                           ; BSR set to: 0
  7202  010F04  0E00               	movlw	0
  7203  010F06  0101               	movlb	1	; () banked
  7204  010F08  6F79               	movwf	(_vfpfcnvrt$4240+1)& (0+255),b
  7205  010F0A  0E03               	movlw	3
  7206  010F0C  D004               	goto	L3
  7207  010F0E                     l10351:
  7208                           
  7209                           ; BSR set to: 0
  7210  010F0E  0E00               	movlw	0
  7211  010F10  0101               	movlb	1	; () banked
  7212  010F12  6F79               	movwf	(_vfpfcnvrt$4240+1)& (0+255),b
  7213  010F14  0E01               	movlw	1
  7214  010F16                     L3:
  7215  010F16  6F78               	movwf	_vfpfcnvrt$4240& (0+255),b
  7216                           
  7217                           ; BSR set to: 1
  7218  010F18  0100               	movlb	0	; () banked
  7219  010F1A  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7220  010F1C  6ED9               	movwf	fsr2l,c
  7221  010F1E  6ADA               	clrf	fsr2h,c
  7222  010F20  0101               	movlb	1	; () banked
  7223  010F22  5178               	movf	_vfpfcnvrt$4240& (0+255),w,b
  7224  010F24  26DE               	addwf	postinc2,f,c
  7225  010F26  5179               	movf	(_vfpfcnvrt$4240+1)& (0+255),w,b
  7226  010F28  22DD               	addwfc	postdec2,f,c
  7227                           
  7228                           ; BSR set to: 1
  7229                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7230  010F2A  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  7231  010F30  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  7232  010F36  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  7233  010F3C  0E02               	movlw	2
  7234  010F3E  26DE               	addwf	postinc2,f,c
  7235  010F40  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  7236  010F46  0E00               	movlw	0
  7237  010F48  22DD               	addwfc	postdec2,f,c
  7238  010F4A  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  7239  010F50  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  7240  010F56  006F FF78  F174    	movff	postinc2,vfpfcnvrt@cp
  7241  010F5C  006F FF74  F175    	movff	postdec2,vfpfcnvrt@cp+1
  7242                           
  7243                           ; BSR set to: 1
  7244                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  7245  010F62  C0E1  F069         	movff	vfpfcnvrt@fp,stoa@fp
  7246  010F66  C0E2  F06A         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7247  010F6A  C174  F06B         	movff	vfpfcnvrt@cp,stoa@s
  7248  010F6E  C175  F06C         	movff	vfpfcnvrt@cp+1,stoa@s+1
  7249  010F72  ECB7  F099         	call	_stoa	;wreg free
  7250  010F76  C069  F0E1         	movff	?_stoa,?_vfpfcnvrt
  7251  010F7A  C06A  F0E2         	movff	?_stoa+1,?_vfpfcnvrt+1
  7252  010F7E  0012               	return	
  7253  010F80                     l10361:
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  7257  010F80  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7258  010F82  6ED9               	movwf	fsr2l,c
  7259  010F84  6ADA               	clrf	fsr2h,c
  7260  010F86  006F FF7B FFF6     	movff	postinc2,tblptrl
  7261  010F8C  006F FF77 FFF7     	movff	postdec2,tblptrh
  7262  010F92                     	if	0	;tblptru may be non-zero
  7263  010F92                     	endif
  7264  010F92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7265  010F92  0E00               	movlw	low (__mediumconst shr (0+16))
  7266  010F94  6EF8               	movwf	tblptru,c
  7267  010F96                     	endif
  7268  010F96  0008               	tblrd		*
  7269  010F98  50F5               	movf	tablat,w,c
  7270  010F9A  0A75               	xorlw	117
  7271  010F9C  A4D8               	btfss	status,2,c
  7272  010F9E  D048               	goto	l10369
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  7276  010FA0  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7277  010FA2  6ED9               	movwf	fsr2l,c
  7278  010FA4  6ADA               	clrf	fsr2h,c
  7279  010FA6  2ADE               	incf	postinc2,f,c
  7280  010FA8  0E00               	movlw	0
  7281  010FAA  22DD               	addwfc	postdec2,f,c
  7282                           
  7283                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7284  010FAC  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  7285  010FB2  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  7286  010FB8  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  7287  010FBE  0E02               	movlw	2
  7288  010FC0  26DE               	addwf	postinc2,f,c
  7289  010FC2  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  7290  010FC8  0E00               	movlw	0
  7291  010FCA  22DD               	addwfc	postdec2,f,c
  7292  010FCC  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  7293  010FD2  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  7294  010FD8  006F FF78  F0E8    	movff	postinc2,??_vfpfcnvrt+2
  7295  010FDE  006F FF74  F0E9    	movff	postdec2,??_vfpfcnvrt+3
  7296  010FE4  C0E8  F16C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7297  010FE8  C0E9  F16D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7298  010FEC  0101               	movlb	1	; () banked
  7299  010FEE  6B6E               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7300  010FF0  6B6F               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7301  010FF2  6B70               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7302  010FF4  6B71               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7303  010FF6  6B72               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7304  010FF8  6B73               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7305                           
  7306                           ; BSR set to: 1
  7307                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  7308  010FFA  C0E1  F07D         	movff	vfpfcnvrt@fp,utoa@fp
  7309  010FFE  C0E2  F07E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  7310  011002  C16C  F07F         	movff	vfpfcnvrt@llu,utoa@d
  7311  011006  C16D  F080         	movff	vfpfcnvrt@llu+1,utoa@d+1
  7312  01100A  C16E  F081         	movff	vfpfcnvrt@llu+2,utoa@d+2
  7313  01100E  C16F  F082         	movff	vfpfcnvrt@llu+3,utoa@d+3
  7314  011012  C170  F083         	movff	vfpfcnvrt@llu+4,utoa@d+4
  7315  011016  C171  F084         	movff	vfpfcnvrt@llu+5,utoa@d+5
  7316  01101A  C172  F085         	movff	vfpfcnvrt@llu+6,utoa@d+6
  7317  01101E  C173  F086         	movff	vfpfcnvrt@llu+7,utoa@d+7
  7318  011022  ECAB  F096         	call	_utoa	;wreg free
  7319  011026  C07D  F0E1         	movff	?_utoa,?_vfpfcnvrt
  7320  01102A  C07E  F0E2         	movff	?_utoa+1,?_vfpfcnvrt+1
  7321  01102E  0012               	return	
  7322  011030                     l10369:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  7326  011030  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7327  011032  6ED9               	movwf	fsr2l,c
  7328  011034  6ADA               	clrf	fsr2h,c
  7329  011036  006F FF7B FFF6     	movff	postinc2,tblptrl
  7330  01103C  006F FF77 FFF7     	movff	postdec2,tblptrh
  7331  011042                     	if	0	;tblptru may be non-zero
  7332  011042                     	endif
  7333  011042                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7334  011042  0E00               	movlw	low (__mediumconst shr (0+16))
  7335  011044  6EF8               	movwf	tblptru,c
  7336  011046                     	endif
  7337  011046  0008               	tblrd		*
  7338  011048  50F5               	movf	tablat,w,c
  7339  01104A  0A25               	xorlw	37
  7340  01104C  A4D8               	btfss	status,2,c
  7341  01104E  D015               	goto	l10379
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  7345  011050  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7346  011052  6ED9               	movwf	fsr2l,c
  7347  011054  6ADA               	clrf	fsr2h,c
  7348  011056  2ADE               	incf	postinc2,f,c
  7349  011058  0E00               	movlw	0
  7350  01105A  22DD               	addwfc	postdec2,f,c
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  7354  01105C  0E00               	movlw	0
  7355  01105E  6F61               	movwf	(fputc@c+1)& (0+255),b
  7356  011060  0E25               	movlw	37
  7357  011062  6F60               	movwf	fputc@c& (0+255),b
  7358  011064  C0E1  F062         	movff	vfpfcnvrt@fp,fputc@fp
  7359  011068  C0E2  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7360  01106C  EC69  F0A0         	call	_fputc	;wreg free
  7361  011070                     l10375:
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  7365  011070  0E00               	movlw	0
  7366  011072  6FE2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7367  011074  0E01               	movlw	1
  7368  011076  6FE1               	movwf	?_vfpfcnvrt& (0+255),b
  7369  011078  0012               	return	
  7370  01107A                     l10379:
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  7374  01107A  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7375  01107C  6ED9               	movwf	fsr2l,c
  7376  01107E  6ADA               	clrf	fsr2h,c
  7377  011080  2ADE               	incf	postinc2,f,c
  7378  011082  0E00               	movlw	0
  7379  011084  22DD               	addwfc	postdec2,f,c
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  7383  011086  0E00               	movlw	0
  7384  011088  6FE2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7385  01108A  0E00               	movlw	0
  7386  01108C  6FE1               	movwf	?_vfpfcnvrt& (0+255),b
  7387  01108E  0012               	return	
  7388  011090                     l10385:
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  7392  011090  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7393  011092  6ED9               	movwf	fsr2l,c
  7394  011094  6ADA               	clrf	fsr2h,c
  7395  011096  006F FF7B FFF6     	movff	postinc2,tblptrl
  7396  01109C  006F FF77 FFF7     	movff	postdec2,tblptrh
  7397  0110A2                     	if	0	;tblptru may be non-zero
  7398  0110A2                     	endif
  7399  0110A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7400  0110A2  0E00               	movlw	low (__mediumconst shr (0+16))
  7401  0110A4  6EF8               	movwf	tblptru,c
  7402  0110A6                     	endif
  7403  0110A6  0008               	tblrd		*
  7404  0110A8  50F5               	movf	tablat,w,c
  7405  0110AA  6F60               	movwf	fputc@c& (0+255),b
  7406  0110AC  6B61               	clrf	(fputc@c+1)& (0+255),b
  7407  0110AE  C0E1  F062         	movff	vfpfcnvrt@fp,fputc@fp
  7408  0110B2  C0E2  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7409  0110B6  EC69  F0A0         	call	_fputc	;wreg free
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  7413  0110BA  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7414  0110BC  6ED9               	movwf	fsr2l,c
  7415  0110BE  6ADA               	clrf	fsr2h,c
  7416  0110C0  2ADE               	incf	postinc2,f,c
  7417  0110C2  0E00               	movlw	0
  7418  0110C4  22DD               	addwfc	postdec2,f,c
  7419  0110C6  D7D4               	goto	l10375
  7420  0110C8                     __end_of_vfpfcnvrt:
  7421                           	callstack 0
  7422                           
  7423 ;; *************** function _utoa *****************
  7424 ;; Defined at:
  7425 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  7428 ;;		 -> sprintf@f(11), NULL(0), 
  7429 ;;  d               8   31[BANK0 ] unsigned long long 
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;  n               8   51[BANK0 ] unsigned long long 
  7432 ;;  i               2   59[BANK0 ] int 
  7433 ;;  w               2   49[BANK0 ] int 
  7434 ;;  p               2   47[BANK0 ] int 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  2   29[BANK0 ] int 
  7437 ;; Registers used:
  7438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7439 ;; Tracked objects:
  7440 ;;		On entry : 3F/1
  7441 ;;		On exit  : 3F/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7444 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7445 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7448 ;;Total ram usage:       32 bytes
  7449 ;; Hardware stack levels used: 1
  7450 ;; Hardware stack levels required when called: 12
  7451 ;; This function calls:
  7452 ;;		___lodiv
  7453 ;;		___lomod
  7454 ;;		_pad
  7455 ;; This function is called by:
  7456 ;;		_vfpfcnvrt
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text11
  7461  012D56                     __ptext11:
  7462                           	callstack 0
  7463  012D56                     _utoa:
  7464                           	callstack 15
  7465                           
  7466                           ; BSR set to: 1
  7467                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;incstack = 0
  7471  012D56  0100               	movlb	0	; () banked
  7472  012D58  AFF9               	btfss	(_prec+1)& (0+255),7,b
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  7476  012D5A  922E               	bcf	_flags^0,1,c
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  7480  012D5C  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  7481  012D5E  D005               	goto	u9710
  7482  012D60  51F9               	movf	(_prec+1)& (0+255),w,b
  7483  012D62  E108               	bnz	l2684
  7484  012D64  05F8               	decf	_prec& (0+255),w,b
  7485  012D66  B0D8               	btfsc	status,0,c
  7486  012D68  D005               	goto	l2684
  7487  012D6A                     u9710:
  7488                           
  7489                           ; BSR set to: 0
  7490  012D6A  0E00               	movlw	0
  7491  012D6C  6F90               	movwf	(utoa@p+1)& (0+255),b
  7492  012D6E  0E01               	movlw	1
  7493  012D70  6F8F               	movwf	utoa@p& (0+255),b
  7494  012D72  D004               	goto	l2686
  7495  012D74                     l2684:
  7496                           
  7497                           ; BSR set to: 0
  7498  012D74  C0F8  F08F         	movff	_prec,utoa@p
  7499  012D78  C0F9  F090         	movff	_prec+1,utoa@p+1
  7500  012D7C                     l2686:
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  7504  012D7C  C02C  F091         	movff	_width,utoa@w
  7505  012D80  C02D  F092         	movff	_width+1,utoa@w+1
  7506                           
  7507                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  7508  012D84  C07F  F093         	movff	utoa@d,utoa@n
  7509  012D88  C080  F094         	movff	utoa@d+1,utoa@n+1
  7510  012D8C  C081  F095         	movff	utoa@d+2,utoa@n+2
  7511  012D90  C082  F096         	movff	utoa@d+3,utoa@n+3
  7512  012D94  C083  F097         	movff	utoa@d+4,utoa@n+4
  7513  012D98  C084  F098         	movff	utoa@d+5,utoa@n+5
  7514  012D9C  C085  F099         	movff	utoa@d+6,utoa@n+6
  7515  012DA0  C086  F09A         	movff	utoa@d+7,utoa@n+7
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  7519  012DA4  0E00               	movlw	0
  7520  012DA6  6F9C               	movwf	(utoa@i+1)& (0+255),b
  7521  012DA8  0E4F               	movlw	79
  7522  012DAA  6F9B               	movwf	utoa@i& (0+255),b
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  7526  012DAC  0E00               	movlw	0
  7527  012DAE  0102               	movlb	2	; () banked
  7528  012DB0  6F8F               	movwf	(_dbuf+79)& (0+255),b
  7529                           
  7530                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7531  012DB2  D076               	goto	l10061
  7532  012DB4                     l10051:
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  7536  012DB4  079B               	decf	utoa@i& (0+255),f,b
  7537  012DB6  A0D8               	btfss	status,0,c
  7538  012DB8  079C               	decf	(utoa@i+1)& (0+255),f,b
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  7542  012DBA  0E40               	movlw	low _dbuf
  7543  012DBC  259B               	addwf	utoa@i& (0+255),w,b
  7544  012DBE  6ED9               	movwf	fsr2l,c
  7545  012DC0  0E02               	movlw	high _dbuf
  7546  012DC2  219C               	addwfc	(utoa@i+1)& (0+255),w,b
  7547  012DC4  6EDA               	movwf	fsr2h,c
  7548  012DC6  C093  F060         	movff	utoa@n,___lomod@dividend
  7549  012DCA  C094  F061         	movff	utoa@n+1,___lomod@dividend+1
  7550  012DCE  C095  F062         	movff	utoa@n+2,___lomod@dividend+2
  7551  012DD2  C096  F063         	movff	utoa@n+3,___lomod@dividend+3
  7552  012DD6  C097  F064         	movff	utoa@n+4,___lomod@dividend+4
  7553  012DDA  C098  F065         	movff	utoa@n+5,___lomod@dividend+5
  7554  012DDE  C099  F066         	movff	utoa@n+6,___lomod@dividend+6
  7555  012DE2  C09A  F067         	movff	utoa@n+7,___lomod@dividend+7
  7556  012DE6  0E0A               	movlw	10
  7557  012DE8  6F68               	movwf	___lomod@divisor& (0+255),b
  7558  012DEA  0E00               	movlw	0
  7559  012DEC  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  7560  012DEE  0E00               	movlw	0
  7561  012DF0  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  7562  012DF2  0E00               	movlw	0
  7563  012DF4  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  7564  012DF6  0E00               	movlw	0
  7565  012DF8  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  7566  012DFA  0E00               	movlw	0
  7567  012DFC  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  7568  012DFE  0E00               	movlw	0
  7569  012E00  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  7570  012E02  0E00               	movlw	0
  7571  012E04  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  7572  012E06  ECC4  F0A0         	call	___lomod	;wreg free
  7573  012E0A  C060  F087         	movff	?___lomod,??_utoa
  7574  012E0E  C061  F088         	movff	?___lomod+1,??_utoa+1
  7575  012E12  C062  F089         	movff	?___lomod+2,??_utoa+2
  7576  012E16  C063  F08A         	movff	?___lomod+3,??_utoa+3
  7577  012E1A  C064  F08B         	movff	?___lomod+4,??_utoa+4
  7578  012E1E  C065  F08C         	movff	?___lomod+5,??_utoa+5
  7579  012E22  C066  F08D         	movff	?___lomod+6,??_utoa+6
  7580  012E26  C067  F08E         	movff	?___lomod+7,??_utoa+7
  7581  012E2A  5187               	movf	??_utoa& (0+255),w,b
  7582  012E2C  0F30               	addlw	48
  7583  012E2E  6EDF               	movwf	indf2,c
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  7587  012E30  078F               	decf	utoa@p& (0+255),f,b
  7588  012E32  A0D8               	btfss	status,0,c
  7589  012E34  0790               	decf	(utoa@p+1)& (0+255),f,b
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  7593  012E36  0791               	decf	utoa@w& (0+255),f,b
  7594  012E38  A0D8               	btfss	status,0,c
  7595  012E3A  0792               	decf	(utoa@w+1)& (0+255),f,b
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  7599  012E3C  C093  F060         	movff	utoa@n,___lodiv@dividend
  7600  012E40  C094  F061         	movff	utoa@n+1,___lodiv@dividend+1
  7601  012E44  C095  F062         	movff	utoa@n+2,___lodiv@dividend+2
  7602  012E48  C096  F063         	movff	utoa@n+3,___lodiv@dividend+3
  7603  012E4C  C097  F064         	movff	utoa@n+4,___lodiv@dividend+4
  7604  012E50  C098  F065         	movff	utoa@n+5,___lodiv@dividend+5
  7605  012E54  C099  F066         	movff	utoa@n+6,___lodiv@dividend+6
  7606  012E58  C09A  F067         	movff	utoa@n+7,___lodiv@dividend+7
  7607  012E5C  0E0A               	movlw	10
  7608  012E5E  6F68               	movwf	___lodiv@divisor& (0+255),b
  7609  012E60  0E00               	movlw	0
  7610  012E62  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  7611  012E64  0E00               	movlw	0
  7612  012E66  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  7613  012E68  0E00               	movlw	0
  7614  012E6A  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  7615  012E6C  0E00               	movlw	0
  7616  012E6E  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  7617  012E70  0E00               	movlw	0
  7618  012E72  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  7619  012E74  0E00               	movlw	0
  7620  012E76  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  7621  012E78  0E00               	movlw	0
  7622  012E7A  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  7623  012E7C  EC19  F09E         	call	___lodiv	;wreg free
  7624  012E80  C060  F093         	movff	?___lodiv,utoa@n
  7625  012E84  C061  F094         	movff	?___lodiv+1,utoa@n+1
  7626  012E88  C062  F095         	movff	?___lodiv+2,utoa@n+2
  7627  012E8C  C063  F096         	movff	?___lodiv+3,utoa@n+3
  7628  012E90  C064  F097         	movff	?___lodiv+4,utoa@n+4
  7629  012E94  C065  F098         	movff	?___lodiv+5,utoa@n+5
  7630  012E98  C066  F099         	movff	?___lodiv+6,utoa@n+6
  7631  012E9C  C067  F09A         	movff	?___lodiv+7,utoa@n+7
  7632  012EA0                     l10061:
  7633                           
  7634                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7635  012EA0  0100               	movlb	0	; () banked
  7636  012EA2  519B               	movf	utoa@i& (0+255),w,b
  7637  012EA4  119C               	iorwf	(utoa@i+1)& (0+255),w,b
  7638  012EA6  B4D8               	btfsc	status,2,c
  7639  012EA8  D01A               	goto	u9760
  7640                           
  7641                           ; BSR set to: 0
  7642  012EAA  5193               	movf	utoa@n& (0+255),w,b
  7643  012EAC  1194               	iorwf	(utoa@n+1)& (0+255),w,b
  7644  012EAE  1195               	iorwf	(utoa@n+2)& (0+255),w,b
  7645  012EB0  1196               	iorwf	(utoa@n+3)& (0+255),w,b
  7646  012EB2  1197               	iorwf	(utoa@n+4)& (0+255),w,b
  7647  012EB4  1198               	iorwf	(utoa@n+5)& (0+255),w,b
  7648  012EB6  1199               	iorwf	(utoa@n+6)& (0+255),w,b
  7649  012EB8  119A               	iorwf	(utoa@n+7)& (0+255),w,b
  7650  012EBA  A4D8               	btfss	status,2,c
  7651  012EBC  D77B               	goto	l10051
  7652                           
  7653                           ; BSR set to: 0
  7654  012EBE  BF90               	btfsc	(utoa@p+1)& (0+255),7,b
  7655  012EC0  D005               	goto	u9740
  7656  012EC2  5190               	movf	(utoa@p+1)& (0+255),w,b
  7657  012EC4  E102               	bnz	u9741
  7658  012EC6  058F               	decf	utoa@p& (0+255),w,b
  7659  012EC8  B0D8               	btfsc	status,0,c
  7660  012ECA                     u9741:
  7661  012ECA  D774               	goto	l10051
  7662  012ECC                     u9740:
  7663                           
  7664                           ; BSR set to: 0
  7665  012ECC  BF92               	btfsc	(utoa@w+1)& (0+255),7,b
  7666  012ECE  D007               	goto	u9760
  7667  012ED0  5192               	movf	(utoa@w+1)& (0+255),w,b
  7668  012ED2  E103               	bnz	u9750
  7669  012ED4  0591               	decf	utoa@w& (0+255),w,b
  7670  012ED6  A0D8               	btfss	status,0,c
  7671  012ED8  D002               	goto	u9760
  7672  012EDA                     u9750:
  7673                           
  7674                           ; BSR set to: 0
  7675  012EDA  B22E               	btfsc	_flags^0,1,c
  7676  012EDC  D76B               	goto	l10051
  7677  012EDE                     u9760:
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  7681  012EDE  C07D  F072         	movff	utoa@fp,pad@fp
  7682  012EE2  C07E  F073         	movff	utoa@fp+1,pad@fp+1
  7683  012EE6  0E40               	movlw	low _dbuf
  7684  012EE8  259B               	addwf	utoa@i& (0+255),w,b
  7685  012EEA  6F74               	movwf	pad@buf& (0+255),b
  7686  012EEC  0E02               	movlw	high _dbuf
  7687  012EEE  219C               	addwfc	(utoa@i+1)& (0+255),w,b
  7688  012EF0  6F75               	movwf	(pad@buf+1)& (0+255),b
  7689  012EF2  C091  F076         	movff	utoa@w,pad@p
  7690  012EF6  C092  F077         	movff	utoa@w+1,pad@p+1
  7691  012EFA  EC6C  F0A1         	call	_pad	;wreg free
  7692  012EFE  C072  F07D         	movff	?_pad,?_utoa
  7693  012F02  C073  F07E         	movff	?_pad+1,?_utoa+1
  7694                           
  7695                           ; BSR set to: 0
  7696  012F06  0012               	return		;funcret
  7697  012F08                     __end_of_utoa:
  7698                           	callstack 0
  7699                           
  7700 ;; *************** function ___lomod *****************
  7701 ;; Defined at:
  7702 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  dividend        8    0[BANK0 ] unsigned long long 
  7705 ;;  divisor         8    8[BANK0 ] unsigned long long 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;  counter         1   31[COMRAM] unsigned char 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  8    0[BANK0 ] unsigned long long 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0
  7712 ;; Tracked objects:
  7713 ;;		On entry : 3F/0
  7714 ;;		On exit  : 3F/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7717 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7720 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7721 ;;Total ram usage:       17 bytes
  7722 ;; Hardware stack levels used: 1
  7723 ;; Hardware stack levels required when called: 7
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_utoa
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           	psect	text12
  7732  014188                     __ptext12:
  7733                           	callstack 0
  7734  014188                     ___lomod:
  7735                           	callstack 19
  7736                           
  7737                           ; BSR set to: 0
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;incstack = 0
  7741  014188  5168               	movf	___lomod@divisor& (0+255),w,b
  7742  01418A  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  7743  01418C  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  7744  01418E  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  7745  014190  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  7746  014192  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  7747  014194  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  7748  014196  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  7749  014198  B4D8               	btfsc	status,2,c
  7750  01419A  D03C               	goto	l2277
  7751                           
  7752                           ; BSR set to: 0
  7753  01419C  0E01               	movlw	1
  7754  01419E  6E20               	movwf	___lomod@counter^0,c
  7755  0141A0  D00A               	goto	l9491
  7756  0141A2                     l9489:
  7757                           
  7758                           ; BSR set to: 0
  7759  0141A2  90D8               	bcf	status,0,c
  7760  0141A4  3768               	rlcf	___lomod@divisor& (0+255),f,b
  7761  0141A6  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  7762  0141A8  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  7763  0141AA  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  7764  0141AC  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  7765  0141AE  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  7766  0141B0  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  7767  0141B2  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  7768  0141B4  2A20               	incf	___lomod@counter^0,f,c
  7769  0141B6                     l9491:
  7770                           
  7771                           ; BSR set to: 0
  7772  0141B6  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  7773  0141B8  D7F4               	goto	l9489
  7774  0141BA                     u8640:
  7775                           
  7776                           ; BSR set to: 0
  7777  0141BA  5168               	movf	___lomod@divisor& (0+255),w,b
  7778  0141BC  5D60               	subwf	___lomod@dividend& (0+255),w,b
  7779  0141BE  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  7780  0141C0  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  7781  0141C2  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  7782  0141C4  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  7783  0141C6  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  7784  0141C8  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  7785  0141CA  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  7786  0141CC  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  7787  0141CE  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  7788  0141D0  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  7789  0141D2  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  7790  0141D4  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  7791  0141D6  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  7792  0141D8  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  7793  0141DA  A0D8               	btfss	status,0,c
  7794  0141DC  D010               	goto	l9497
  7795                           
  7796                           ; BSR set to: 0
  7797  0141DE  5168               	movf	___lomod@divisor& (0+255),w,b
  7798  0141E0  5F60               	subwf	___lomod@dividend& (0+255),f,b
  7799  0141E2  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  7800  0141E4  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  7801  0141E6  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  7802  0141E8  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  7803  0141EA  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  7804  0141EC  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  7805  0141EE  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  7806  0141F0  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  7807  0141F2  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  7808  0141F4  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  7809  0141F6  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  7810  0141F8  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  7811  0141FA  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  7812  0141FC  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  7813  0141FE                     l9497:
  7814                           
  7815                           ; BSR set to: 0
  7816  0141FE  90D8               	bcf	status,0,c
  7817  014200  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  7818  014202  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  7819  014204  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  7820  014206  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  7821  014208  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  7822  01420A  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  7823  01420C  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  7824  01420E  3368               	rrcf	___lomod@divisor& (0+255),f,b
  7825                           
  7826                           ; BSR set to: 0
  7827  014210  2E20               	decfsz	___lomod@counter^0,f,c
  7828  014212  D7D3               	goto	u8640
  7829  014214                     l2277:
  7830                           
  7831                           ; BSR set to: 0
  7832  014214  C060  F060         	movff	___lomod@dividend,?___lomod
  7833  014218  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  7834  01421C  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  7835  014220  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  7836  014224  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  7837  014228  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  7838  01422C  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  7839  014230  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  7840                           
  7841                           ; BSR set to: 0
  7842  014234  0012               	return		;funcret
  7843  014236                     __end_of___lomod:
  7844                           	callstack 0
  7845                           
  7846 ;; *************** function ___lodiv *****************
  7847 ;; Defined at:
  7848 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  dividend        8    0[BANK0 ] unsigned long long 
  7851 ;;  divisor         8    8[BANK0 ] unsigned long long 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  quotient        8   16[BANK0 ] unsigned long long 
  7854 ;;  counter         1   24[BANK0 ] unsigned char 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  8    0[BANK0 ] unsigned long long 
  7857 ;; Registers used:
  7858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7859 ;; Tracked objects:
  7860 ;;		On entry : 3F/0
  7861 ;;		On exit  : 3F/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7864 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7865 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7867 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7868 ;;Total ram usage:       25 bytes
  7869 ;; Hardware stack levels used: 1
  7870 ;; Hardware stack levels required when called: 7
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_utoa
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text13
  7879  013C32                     __ptext13:
  7880                           	callstack 0
  7881  013C32                     ___lodiv:
  7882                           	callstack 19
  7883                           
  7884                           ; BSR set to: 0
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;incstack = 0
  7888  013C32  EE20  F070         	lfsr	2,___lodiv@quotient
  7889  013C36  0E07               	movlw	7
  7890  013C38                     u8591:
  7891  013C38  6ADE               	clrf	postinc2,c
  7892  013C3A  06E8               	decf	wreg,f,c
  7893  013C3C  E2FD               	bc	u8591
  7894                           
  7895                           ; BSR set to: 0
  7896  013C3E  5168               	movf	___lodiv@divisor& (0+255),w,b
  7897  013C40  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  7898  013C42  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  7899  013C44  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  7900  013C46  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  7901  013C48  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  7902  013C4A  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  7903  013C4C  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  7904  013C4E  B4D8               	btfsc	status,2,c
  7905  013C50  D046               	goto	l2267
  7906                           
  7907                           ; BSR set to: 0
  7908  013C52  0E01               	movlw	1
  7909  013C54  6F78               	movwf	___lodiv@counter& (0+255),b
  7910  013C56  D00A               	goto	l9471
  7911  013C58                     l9469:
  7912                           
  7913                           ; BSR set to: 0
  7914  013C58  90D8               	bcf	status,0,c
  7915  013C5A  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  7916  013C5C  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  7917  013C5E  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  7918  013C60  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  7919  013C62  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  7920  013C64  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  7921  013C66  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  7922  013C68  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  7923  013C6A  2B78               	incf	___lodiv@counter& (0+255),f,b
  7924  013C6C                     l9471:
  7925                           
  7926                           ; BSR set to: 0
  7927  013C6C  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  7928  013C6E  D7F4               	goto	l9469
  7929  013C70                     u8610:
  7930                           
  7931                           ; BSR set to: 0
  7932  013C70  90D8               	bcf	status,0,c
  7933  013C72  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  7934  013C74  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  7935  013C76  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  7936  013C78  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  7937  013C7A  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  7938  013C7C  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  7939  013C7E  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  7940  013C80  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  7941                           
  7942                           ; BSR set to: 0
  7943  013C82  5168               	movf	___lodiv@divisor& (0+255),w,b
  7944  013C84  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  7945  013C86  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  7946  013C88  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  7947  013C8A  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  7948  013C8C  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  7949  013C8E  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  7950  013C90  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  7951  013C92  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  7952  013C94  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  7953  013C96  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  7954  013C98  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  7955  013C9A  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  7956  013C9C  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  7957  013C9E  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  7958  013CA0  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  7959  013CA2  A0D8               	btfss	status,0,c
  7960  013CA4  D011               	goto	l9481
  7961                           
  7962                           ; BSR set to: 0
  7963  013CA6  5168               	movf	___lodiv@divisor& (0+255),w,b
  7964  013CA8  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  7965  013CAA  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  7966  013CAC  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  7967  013CAE  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  7968  013CB0  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  7969  013CB2  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  7970  013CB4  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  7971  013CB6  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  7972  013CB8  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  7973  013CBA  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  7974  013CBC  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  7975  013CBE  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  7976  013CC0  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  7977  013CC2  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  7978  013CC4  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  7979                           
  7980                           ; BSR set to: 0
  7981  013CC6  8170               	bsf	___lodiv@quotient& (0+255),0,b
  7982  013CC8                     l9481:
  7983                           
  7984                           ; BSR set to: 0
  7985  013CC8  90D8               	bcf	status,0,c
  7986  013CCA  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  7987  013CCC  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  7988  013CCE  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  7989  013CD0  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  7990  013CD2  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  7991  013CD4  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  7992  013CD6  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  7993  013CD8  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  7994                           
  7995                           ; BSR set to: 0
  7996  013CDA  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  7997  013CDC  D7C9               	goto	u8610
  7998  013CDE                     l2267:
  7999                           
  8000                           ; BSR set to: 0
  8001  013CDE  C070  F060         	movff	___lodiv@quotient,?___lodiv
  8002  013CE2  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  8003  013CE6  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  8004  013CEA  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  8005  013CEE  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  8006  013CF2  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  8007  013CF6  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  8008  013CFA  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  8009                           
  8010                           ; BSR set to: 0
  8011  013CFE  0012               	return		;funcret
  8012  013D00                     __end_of___lodiv:
  8013                           	callstack 0
  8014                           
  8015 ;; *************** function _stoa *****************
  8016 ;; Defined at:
  8017 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  8020 ;;		 -> sprintf@f(11), NULL(0), 
  8021 ;;  s               2   11[BANK0 ] PTR unsigned char 
  8022 ;;		 -> ?_printf(2), ?_sprintf(2), build_version(14), STR_2(9), 
  8023 ;;		 -> STR_1(12), 
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;  nuls            7   14[BANK0 ] unsigned char [7]
  8026 ;;  l               2   29[BANK0 ] int 
  8027 ;;  p               2   27[BANK0 ] int 
  8028 ;;  cp              2   25[BANK0 ] PTR unsigned char 
  8029 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), build_version(14), 
  8030 ;;		 -> STR_2(9), STR_1(12), 
  8031 ;;  w               2   23[BANK0 ] int 
  8032 ;;  i               2   21[BANK0 ] int 
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  2    9[BANK0 ] int 
  8035 ;; Registers used:
  8036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8037 ;; Tracked objects:
  8038 ;;		On entry : 3F/1
  8039 ;;		On exit  : 3F/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8042 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8043 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8045 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8046 ;;Total ram usage:       22 bytes
  8047 ;; Hardware stack levels used: 1
  8048 ;; Hardware stack levels required when called: 10
  8049 ;; This function calls:
  8050 ;;		_fputc
  8051 ;;		_strlen
  8052 ;; This function is called by:
  8053 ;;		_vfpfcnvrt
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text14
  8058  01336E                     __ptext14:
  8059                           	callstack 0
  8060  01336E                     _stoa:
  8061                           	callstack 17
  8062                           
  8063                           ; BSR set to: 1
  8064                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;incstack = 0
  8068  01336E  EE20  F1A4         	lfsr	2,stoa@F1164
  8069  013372  EE10  F06E         	lfsr	1,stoa@nuls
  8070  013376  0E06               	movlw	6
  8071  013378                     u9601:
  8072  013378  006F FF6F FFE3     	movff	plusw2,plusw1
  8073  01337E  06E8               	decf	wreg,f,c
  8074  013380  E2FB               	bc	u9601
  8075                           
  8076                           ; BSR set to: 1
  8077                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  8078  013382  C06B  F079         	movff	stoa@s,stoa@cp
  8079  013386  C06C  F07A         	movff	stoa@s+1,stoa@cp+1
  8080                           
  8081                           ; BSR set to: 1
  8082                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  8083  01338A  0100               	movlb	0	; () banked
  8084  01338C  5179               	movf	stoa@cp& (0+255),w,b
  8085  01338E  117A               	iorwf	(stoa@cp+1)& (0+255),w,b
  8086  013390  A4D8               	btfss	status,2,c
  8087  013392  D003               	goto	l10005
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  8091  013394  0E6E               	movlw	low stoa@nuls
  8092  013396  6F79               	movwf	stoa@cp& (0+255),b
  8093  013398  6B7A               	clrf	(stoa@cp+1)& (0+255),b
  8094  01339A                     l10005:
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  8098  01339A  C079  F020         	movff	stoa@cp,strlen@s
  8099  01339E  C07A  F021         	movff	stoa@cp+1,strlen@s+1
  8100  0133A2  EC33  F0A5         	call	_strlen	;wreg free
  8101  0133A6  C020  F07D         	movff	?_strlen,stoa@l
  8102  0133AA  C021  F07E         	movff	?_strlen+1,stoa@l+1
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  8106  0133AE  C0F8  F07B         	movff	_prec,stoa@p
  8107  0133B2  C0F9  F07C         	movff	_prec+1,stoa@p+1
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8111  0133B6  BF7C               	btfsc	(stoa@p+1)& (0+255),7,b
  8112  0133B8  D00E               	goto	l2665
  8113                           
  8114                           ; BSR set to: 0
  8115  0133BA  517D               	movf	stoa@l& (0+255),w,b
  8116  0133BC  5D7B               	subwf	stoa@p& (0+255),w,b
  8117  0133BE  517C               	movf	(stoa@p+1)& (0+255),w,b
  8118  0133C0  0A80               	xorlw	128
  8119  0133C2  6F6D               	movwf	??_stoa& (0+255),b
  8120  0133C4  517E               	movf	(stoa@l+1)& (0+255),w,b
  8121  0133C6  0A80               	xorlw	128
  8122  0133C8  596D               	subwfb	??_stoa& (0+255),w,b
  8123  0133CA  B0D8               	btfsc	status,0,c
  8124  0133CC  D004               	goto	l2665
  8125                           
  8126                           ; BSR set to: 0
  8127  0133CE  C07B  F07D         	movff	stoa@p,stoa@l
  8128  0133D2  C07C  F07E         	movff	stoa@p+1,stoa@l+1
  8129  0133D6                     l2665:
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  8133  0133D6  C07D  F07B         	movff	stoa@l,stoa@p
  8134  0133DA  C07E  F07C         	movff	stoa@l+1,stoa@p+1
  8135                           
  8136                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  8137  0133DE  C02C  F077         	movff	_width,stoa@w
  8138  0133E2  C02D  F078         	movff	_width+1,stoa@w+1
  8139                           
  8140                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  8141  0133E6  A02E               	btfss	_flags^0,0,c
  8142  0133E8  D00D               	goto	l10019
  8143  0133EA  D016               	goto	u9650
  8144  0133EC                     l10015:
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  8148  0133EC  0E00               	movlw	0
  8149  0133EE  6F61               	movwf	(fputc@c+1)& (0+255),b
  8150  0133F0  0E20               	movlw	32
  8151  0133F2  6F60               	movwf	fputc@c& (0+255),b
  8152  0133F4  C069  F062         	movff	stoa@fp,fputc@fp
  8153  0133F8  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  8154  0133FC  EC69  F0A0         	call	_fputc	;wreg free
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  8158  013400  4B7D               	infsnz	stoa@l& (0+255),f,b
  8159  013402  2B7E               	incf	(stoa@l+1)& (0+255),f,b
  8160  013404                     l10019:
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  8164  013404  5177               	movf	stoa@w& (0+255),w,b
  8165  013406  5D7D               	subwf	stoa@l& (0+255),w,b
  8166  013408  517E               	movf	(stoa@l+1)& (0+255),w,b
  8167  01340A  0A80               	xorlw	128
  8168  01340C  6F6D               	movwf	??_stoa& (0+255),b
  8169  01340E  5178               	movf	(stoa@w+1)& (0+255),w,b
  8170  013410  0A80               	xorlw	128
  8171  013412  596D               	subwfb	??_stoa& (0+255),w,b
  8172  013414  A0D8               	btfss	status,0,c
  8173  013416  D7EA               	goto	l10015
  8174  013418                     u9650:
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  8178  013418  0E00               	movlw	0
  8179  01341A  6F76               	movwf	(stoa@i+1)& (0+255),b
  8180  01341C  0E00               	movlw	0
  8181  01341E  6F75               	movwf	stoa@i& (0+255),b
  8182                           
  8183                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  8184  013420  D024               	goto	l10029
  8185  013422                     l10023:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  8189  013422  0060  F1E7  FFF6   	movff	stoa@cp,tblptrl
  8190  013428  0060  F1EB  FFF7   	movff	stoa@cp+1,tblptrh
  8191  01342E  0E00               	movlw	low (__mediumconst shr (0+16))
  8192  013430  6EF8               	movwf	tblptru,c
  8193  013432  0E1F               	movlw	(high __ramtop+-1)
  8194  013434  64F7               	cpfsgt	tblptrh,c
  8195  013436  D003               	bra	u9667
  8196  013438  0008               	tblrd		*
  8197  01343A  50F5               	movf	tablat,w,c
  8198  01343C  D007               	bra	u9660
  8199  01343E                     u9667:
  8200  01343E  006F FFDB FFE1     	movff	tblptrl,fsr1l
  8201  013444  006F FFDF FFE2     	movff	tblptrh,fsr1h
  8202  01344A  50E7               	movf	indf1,w,c
  8203  01344C                     u9660:
  8204  01344C  0100               	movlb	0	; () banked
  8205  01344E  6F6D               	movwf	??_stoa& (0+255),b
  8206  013450  516D               	movf	??_stoa& (0+255),w,b
  8207  013452  6F60               	movwf	fputc@c& (0+255),b
  8208  013454  6B61               	clrf	(fputc@c+1)& (0+255),b
  8209  013456  C069  F062         	movff	stoa@fp,fputc@fp
  8210  01345A  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  8211  01345E  EC69  F0A0         	call	_fputc	;wreg free
  8212                           
  8213                           ; BSR set to: 0
  8214                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  8215  013462  4B79               	infsnz	stoa@cp& (0+255),f,b
  8216  013464  2B7A               	incf	(stoa@cp+1)& (0+255),f,b
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  8220  013466  4B75               	infsnz	stoa@i& (0+255),f,b
  8221  013468  2B76               	incf	(stoa@i+1)& (0+255),f,b
  8222  01346A                     l10029:
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  8226  01346A  517B               	movf	stoa@p& (0+255),w,b
  8227  01346C  5D75               	subwf	stoa@i& (0+255),w,b
  8228  01346E  5176               	movf	(stoa@i+1)& (0+255),w,b
  8229  013470  0A80               	xorlw	128
  8230  013472  6F6D               	movwf	??_stoa& (0+255),b
  8231  013474  517C               	movf	(stoa@p+1)& (0+255),w,b
  8232  013476  0A80               	xorlw	128
  8233  013478  596D               	subwfb	??_stoa& (0+255),w,b
  8234  01347A  A0D8               	btfss	status,0,c
  8235  01347C  D7D2               	goto	l10023
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  8239  01347E  B02E               	btfsc	_flags^0,0,c
  8240  013480  D00D               	goto	l10037
  8241  013482  D016               	goto	u9690
  8242  013484                     l10033:
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  8246  013484  0E00               	movlw	0
  8247  013486  6F61               	movwf	(fputc@c+1)& (0+255),b
  8248  013488  0E20               	movlw	32
  8249  01348A  6F60               	movwf	fputc@c& (0+255),b
  8250  01348C  C069  F062         	movff	stoa@fp,fputc@fp
  8251  013490  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  8252  013494  EC69  F0A0         	call	_fputc	;wreg free
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  8256  013498  4B7D               	infsnz	stoa@l& (0+255),f,b
  8257  01349A  2B7E               	incf	(stoa@l+1)& (0+255),f,b
  8258  01349C                     l10037:
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  8262  01349C  5177               	movf	stoa@w& (0+255),w,b
  8263  01349E  5D7D               	subwf	stoa@l& (0+255),w,b
  8264  0134A0  517E               	movf	(stoa@l+1)& (0+255),w,b
  8265  0134A2  0A80               	xorlw	128
  8266  0134A4  6F6D               	movwf	??_stoa& (0+255),b
  8267  0134A6  5178               	movf	(stoa@w+1)& (0+255),w,b
  8268  0134A8  0A80               	xorlw	128
  8269  0134AA  596D               	subwfb	??_stoa& (0+255),w,b
  8270  0134AC  A0D8               	btfss	status,0,c
  8271  0134AE  D7EA               	goto	l10033
  8272  0134B0                     u9690:
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  8276                           
  8277                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  8278  0134B0  C07D  F069         	movff	stoa@l,?_stoa
  8279  0134B4  C07E  F06A         	movff	stoa@l+1,?_stoa+1
  8280                           
  8281                           ; BSR set to: 0
  8282  0134B8  0012               	return		;funcret
  8283  0134BA                     __end_of_stoa:
  8284                           	callstack 0
  8285                           
  8286 ;; *************** function _efgtoa *****************
  8287 ;; Defined at:
  8288 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  8291 ;;		 -> sprintf@f(11), NULL(0), 
  8292 ;;  f               4   69[BANK0 ] PTR struct _IO_FILE
  8293 ;;  c               1   73[BANK0 ] unsigned char 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  u               4  125[BANK0 ] unsigned char 
  8296 ;;  g               4  117[BANK0 ] unsigned char 
  8297 ;;  l               4  111[BANK0 ] unsigned char 
  8298 ;;  h               4  107[BANK0 ] unsigned char 
  8299 ;;  ou              4   93[BANK0 ] unsigned char 
  8300 ;;  n               2  123[BANK0 ] int 
  8301 ;;  e               2  121[BANK0 ] int 
  8302 ;;  i               2  115[BANK0 ] int 
  8303 ;;  w               2  103[BANK0 ] int 
  8304 ;;  p               2  101[BANK0 ] int 
  8305 ;;  sign            2   99[BANK0 ] int 
  8306 ;;  d               2   97[BANK0 ] int 
  8307 ;;  m               2   91[BANK0 ] int 
  8308 ;;  ne              2   89[BANK0 ] int 
  8309 ;;  pp              2   87[BANK0 ] int 
  8310 ;;  t               2   85[BANK0 ] int 
  8311 ;;  mode            1  106[BANK0 ] unsigned char 
  8312 ;;  nmode           1  105[BANK0 ] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  2   67[BANK0 ] int 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 3F/0
  8319 ;;		On exit  : 3F/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8322 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8323 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8324 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8325 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8326 ;;Total ram usage:       62 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 12
  8329 ;; This function calls:
  8330 ;;		___awdiv
  8331 ;;		___awmod
  8332 ;;		___fladd
  8333 ;;		___fldiv
  8334 ;;		___fleq
  8335 ;;		___flge
  8336 ;;		___flmul
  8337 ;;		___flneg
  8338 ;;		___flsub
  8339 ;;		___fltol
  8340 ;;		___fpclassifyf
  8341 ;;		_floorf
  8342 ;;		_isupper
  8343 ;;		_pad
  8344 ;;		_strcpy
  8345 ;;		_tolower
  8346 ;; This function is called by:
  8347 ;;		_vfpfcnvrt
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text15
  8352  010000                     __ptext15:
  8353                           	callstack 0
  8354  010000                     _efgtoa:
  8355                           	callstack 15
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;incstack = 0
  8362  010000  0E00               	movlw	0
  8363  010002  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  8364  010004  0E00               	movlw	0
  8365  010006  6FC3               	movwf	efgtoa@sign& (0+255),b
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  8369  010008  C0A5  F0D5         	movff	efgtoa@f,efgtoa@g
  8370  01000C  C0A6  F0D6         	movff	efgtoa@f+1,efgtoa@g+1
  8371  010010  C0A7  F0D7         	movff	efgtoa@f+2,efgtoa@g+2
  8372  010014  C0A8  F0D8         	movff	efgtoa@f+3,efgtoa@g+3
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  8376  010018  AFD8               	btfss	(efgtoa@g+3)& (0+255),7,b
  8377  01001A  D016               	goto	l9701
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  8381  01001C  0E00               	movlw	0
  8382  01001E  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  8383  010020  0E01               	movlw	1
  8384  010022  6FC3               	movwf	efgtoa@sign& (0+255),b
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  8388  010024  C0D5  F060         	movff	efgtoa@g,___flneg@f1
  8389  010028  C0D6  F061         	movff	efgtoa@g+1,___flneg@f1+1
  8390  01002C  C0D7  F062         	movff	efgtoa@g+2,___flneg@f1+2
  8391  010030  C0D8  F063         	movff	efgtoa@g+3,___flneg@f1+3
  8392  010034  ECE6  F0A8         	call	___flneg	;wreg free
  8393  010038  C060  F0D5         	movff	?___flneg,efgtoa@g
  8394  01003C  C061  F0D6         	movff	?___flneg+1,efgtoa@g+1
  8395  010040  C062  F0D7         	movff	?___flneg+2,efgtoa@g+2
  8396  010044  C063  F0D8         	movff	?___flneg+3,efgtoa@g+3
  8397  010048                     l9701:
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  8401  010048  0E00               	movlw	0
  8402  01004A  6FDC               	movwf	(efgtoa@n+1)& (0+255),b
  8403  01004C  0E00               	movlw	0
  8404  01004E  6FDB               	movwf	efgtoa@n& (0+255),b
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  8408  010050  C02C  F0C7         	movff	_width,efgtoa@w
  8409  010054  C02D  F0C8         	movff	_width+1,efgtoa@w+1
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  8413  010058  51C3               	movf	efgtoa@sign& (0+255),w,b
  8414  01005A  11C4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8415  01005C  A4D8               	btfss	status,2,c
  8416  01005E  D002               	goto	u9140
  8417                           
  8418                           ; BSR set to: 0
  8419  010060  A42E               	btfss	_flags^0,2,c
  8420  010062  D013               	goto	l9721
  8421  010064                     u9140:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  8425  010064  51C3               	movf	efgtoa@sign& (0+255),w,b
  8426  010066  11C4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8427  010068  A4D8               	btfss	status,2,c
  8428  01006A  D004               	goto	l9713
  8429                           
  8430                           ; BSR set to: 0
  8431  01006C  0E00               	movlw	0
  8432  01006E  6FB0               	movwf	(_efgtoa$4193+1)& (0+255),b
  8433  010070  0E2B               	movlw	43
  8434  010072  D003               	goto	L4
  8435  010074                     l9713:
  8436                           
  8437                           ; BSR set to: 0
  8438  010074  0E00               	movlw	0
  8439  010076  6FB0               	movwf	(_efgtoa$4193+1)& (0+255),b
  8440  010078  0E2D               	movlw	45
  8441  01007A                     L4:
  8442  01007A  6FAF               	movwf	_efgtoa$4193& (0+255),b
  8443                           
  8444                           ; BSR set to: 0
  8445  01007C  C0AF  F240         	movff	_efgtoa$4193,_dbuf
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  8449  010080  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  8450  010082  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  8454  010084  07C7               	decf	efgtoa@w& (0+255),f,b
  8455  010086  A0D8               	btfss	status,0,c
  8456  010088  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  8457  01008A                     l9721:
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  8461  01008A  C0D5  F060         	movff	efgtoa@g,___fpclassifyf@x
  8462  01008E  C0D6  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8463  010092  C0D7  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8464  010096  C0D8  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8465  01009A  ECE7  F09E         	call	___fpclassifyf	;wreg free
  8466  01009E  0560               	decf	?___fpclassifyf& (0+255),w,b
  8467  0100A0  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  8468  0100A2  A4D8               	btfss	status,2,c
  8469  0100A4  D043               	goto	l9739
  8470                           
  8471                           ; BSR set to: 0
  8472  0100A6  0EBF               	movlw	191
  8473  0100A8  6FAA               	movwf	??_efgtoa& (0+255),b
  8474  0100AA  0EFF               	movlw	255
  8475  0100AC  6FAB               	movwf	(??_efgtoa+1)& (0+255),b
  8476  0100AE  51A9               	movf	efgtoa@c& (0+255),w,b
  8477  0100B0  6FAC               	movwf	(??_efgtoa+2)& (0+255),b
  8478  0100B2  6BAD               	clrf	(??_efgtoa+3)& (0+255),b
  8479  0100B4  51AA               	movf	??_efgtoa& (0+255),w,b
  8480  0100B6  27AC               	addwf	(??_efgtoa+2)& (0+255),f,b
  8481  0100B8  51AB               	movf	(??_efgtoa+1)& (0+255),w,b
  8482  0100BA  23AD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8483  0100BC  51AD               	movf	(??_efgtoa+3)& (0+255),w,b
  8484  0100BE  E111               	bnz	l9731
  8485  0100C0  0E1A               	movlw	26
  8486  0100C2  5DAC               	subwf	(??_efgtoa+2)& (0+255),w,b
  8487  0100C4  B0D8               	btfsc	status,0,c
  8488  0100C6  D00D               	goto	l9731
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  8492  0100C8  0E40               	movlw	low _dbuf
  8493  0100CA  25DB               	addwf	efgtoa@n& (0+255),w,b
  8494  0100CC  6F60               	movwf	strcpy@dest& (0+255),b
  8495  0100CE  0E02               	movlw	high _dbuf
  8496  0100D0  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8497  0100D2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8498  0100D4  0ECC               	movlw	low STR_30
  8499  0100D6  6F62               	movwf	strcpy@src& (0+255),b
  8500  0100D8  0EFF               	movlw	high STR_30
  8501  0100DA  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8502  0100DC  EC4E  F0A3         	call	_strcpy	;wreg free
  8503                           
  8504                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  8505  0100E0  D00C               	goto	l9733
  8506  0100E2                     l9731:
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  8510  0100E2  0E40               	movlw	low _dbuf
  8511  0100E4  25DB               	addwf	efgtoa@n& (0+255),w,b
  8512  0100E6  6F60               	movwf	strcpy@dest& (0+255),b
  8513  0100E8  0E02               	movlw	high _dbuf
  8514  0100EA  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8515  0100EC  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8516  0100EE  0ED4               	movlw	low STR_31
  8517  0100F0  6F62               	movwf	strcpy@src& (0+255),b
  8518  0100F2  0EFF               	movlw	high STR_31
  8519  0100F4  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8520  0100F6  EC4E  F0A3         	call	_strcpy	;wreg free
  8521  0100FA                     l9733:
  8522                           
  8523                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  8524  0100FA  0100               	movlb	0	; () banked
  8525  0100FC  0EFD               	movlw	253
  8526  0100FE  27C7               	addwf	efgtoa@w& (0+255),f,b
  8527  010100  0EFF               	movlw	255
  8528  010102  23C8               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8529  010104                     l9735:
  8530                           
  8531                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  8532  010104  C0A3  F072         	movff	efgtoa@fp,pad@fp
  8533  010108  C0A4  F073         	movff	efgtoa@fp+1,pad@fp+1
  8534  01010C  0E40               	movlw	low _dbuf
  8535  01010E  0100               	movlb	0	; () banked
  8536  010110  6F74               	movwf	pad@buf& (0+255),b
  8537  010112  0E02               	movlw	high _dbuf
  8538  010114  6F75               	movwf	(pad@buf+1)& (0+255),b
  8539  010116  C0C7  F076         	movff	efgtoa@w,pad@p
  8540  01011A  C0C8  F077         	movff	efgtoa@w+1,pad@p+1
  8541  01011E  EC6C  F0A1         	call	_pad	;wreg free
  8542  010122  C072  F0A3         	movff	?_pad,?_efgtoa
  8543  010126  C073  F0A4         	movff	?_pad+1,?_efgtoa+1
  8544  01012A  0012               	return	
  8545  01012C                     l9739:
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  8549  01012C  C0D5  F060         	movff	efgtoa@g,___fpclassifyf@x
  8550  010130  C0D6  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8551  010134  C0D7  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8552  010138  C0D8  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8553  01013C  ECE7  F09E         	call	___fpclassifyf	;wreg free
  8554  010140  5160               	movf	?___fpclassifyf& (0+255),w,b
  8555  010142  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  8556  010144  A4D8               	btfss	status,2,c
  8557  010146  D02B               	goto	l9757
  8558                           
  8559                           ; BSR set to: 0
  8560  010148  0EBF               	movlw	191
  8561  01014A  6FAA               	movwf	??_efgtoa& (0+255),b
  8562  01014C  0EFF               	movlw	255
  8563  01014E  6FAB               	movwf	(??_efgtoa+1)& (0+255),b
  8564  010150  51A9               	movf	efgtoa@c& (0+255),w,b
  8565  010152  6FAC               	movwf	(??_efgtoa+2)& (0+255),b
  8566  010154  6BAD               	clrf	(??_efgtoa+3)& (0+255),b
  8567  010156  51AA               	movf	??_efgtoa& (0+255),w,b
  8568  010158  27AC               	addwf	(??_efgtoa+2)& (0+255),f,b
  8569  01015A  51AB               	movf	(??_efgtoa+1)& (0+255),w,b
  8570  01015C  23AD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8571  01015E  51AD               	movf	(??_efgtoa+3)& (0+255),w,b
  8572  010160  E111               	bnz	l9749
  8573  010162  0E1A               	movlw	26
  8574  010164  5DAC               	subwf	(??_efgtoa+2)& (0+255),w,b
  8575  010166  B0D8               	btfsc	status,0,c
  8576  010168  D00D               	goto	l9749
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  8580  01016A  0E40               	movlw	low _dbuf
  8581  01016C  25DB               	addwf	efgtoa@n& (0+255),w,b
  8582  01016E  6F60               	movwf	strcpy@dest& (0+255),b
  8583  010170  0E02               	movlw	high _dbuf
  8584  010172  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8585  010174  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8586  010176  0ED0               	movlw	low STR_34
  8587  010178  6F62               	movwf	strcpy@src& (0+255),b
  8588  01017A  0EFF               	movlw	high STR_34
  8589  01017C  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8590  01017E  EC4E  F0A3         	call	_strcpy	;wreg free
  8591                           
  8592                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  8593  010182  D7BB               	goto	l9733
  8594  010184                     l9749:
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  8598  010184  0E40               	movlw	low _dbuf
  8599  010186  25DB               	addwf	efgtoa@n& (0+255),w,b
  8600  010188  6F60               	movwf	strcpy@dest& (0+255),b
  8601  01018A  0E02               	movlw	high _dbuf
  8602  01018C  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8603  01018E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8604  010190  0ED8               	movlw	low STR_35
  8605  010192  6F62               	movwf	strcpy@src& (0+255),b
  8606  010194  0EFF               	movlw	high STR_35
  8607  010196  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8608  010198  EC4E  F0A3         	call	_strcpy	;wreg free
  8609  01019C  D7AE               	goto	l9733
  8610  01019E                     l9757:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  8614  01019E  0E00               	movlw	0
  8615  0101A0  6FDD               	movwf	efgtoa@u& (0+255),b
  8616  0101A2  0E00               	movlw	0
  8617  0101A4  6FDE               	movwf	(efgtoa@u+1)& (0+255),b
  8618  0101A6  0E80               	movlw	128
  8619  0101A8  6FDF               	movwf	(efgtoa@u+2)& (0+255),b
  8620  0101AA  0E3F               	movlw	63
  8621  0101AC  6FE0               	movwf	(efgtoa@u+3)& (0+255),b
  8622                           
  8623                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  8624  0101AE  0E00               	movlw	0
  8625  0101B0  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  8626  0101B2  0E00               	movlw	0
  8627  0101B4  6FD9               	movwf	efgtoa@e& (0+255),b
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  8631  0101B6  C0D5  F060         	movff	efgtoa@g,___fleq@ff1
  8632  0101BA  C0D6  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  8633  0101BE  C0D7  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  8634  0101C2  C0D8  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  8635  0101C6  0E00               	movlw	0
  8636  0101C8  6F64               	movwf	___fleq@ff2& (0+255),b
  8637  0101CA  0E00               	movlw	0
  8638  0101CC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  8639  0101CE  0E00               	movlw	0
  8640  0101D0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  8641  0101D2  0E00               	movlw	0
  8642  0101D4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  8643  0101D6  ECB7  F0A1         	call	___fleq	;wreg free
  8644  0101DA  A0D8               	btfss	status,0,c
  8645  0101DC  D01D               	goto	l9767
  8646  0101DE  D074               	goto	u9220
  8647  0101E0                     l9763:
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  8651  0101E0  C0DD  F072         	movff	efgtoa@u,___flmul@b
  8652  0101E4  C0DE  F073         	movff	efgtoa@u+1,___flmul@b+1
  8653  0101E8  C0DF  F074         	movff	efgtoa@u+2,___flmul@b+2
  8654  0101EC  C0E0  F075         	movff	efgtoa@u+3,___flmul@b+3
  8655  0101F0  0E00               	movlw	0
  8656  0101F2  6F76               	movwf	___flmul@a& (0+255),b
  8657  0101F4  0E00               	movlw	0
  8658  0101F6  6F77               	movwf	(___flmul@a+1)& (0+255),b
  8659  0101F8  0E20               	movlw	32
  8660  0101FA  6F78               	movwf	(___flmul@a+2)& (0+255),b
  8661  0101FC  0E41               	movlw	65
  8662  0101FE  6F79               	movwf	(___flmul@a+3)& (0+255),b
  8663  010200  ECF1  F08F         	call	___flmul	;wreg free
  8664  010204  C072  F0DD         	movff	?___flmul,efgtoa@u
  8665  010208  C073  F0DE         	movff	?___flmul+1,efgtoa@u+1
  8666  01020C  C074  F0DF         	movff	?___flmul+2,efgtoa@u+2
  8667  010210  C075  F0E0         	movff	?___flmul+3,efgtoa@u+3
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  8671  010214  4BD9               	infsnz	efgtoa@e& (0+255),f,b
  8672  010216  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  8673  010218                     l9767:
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  8677  010218  C0D5  F08B         	movff	efgtoa@g,___flge@ff1
  8678  01021C  C0D6  F08C         	movff	efgtoa@g+1,___flge@ff1+1
  8679  010220  C0D7  F08D         	movff	efgtoa@g+2,___flge@ff1+2
  8680  010224  C0D8  F08E         	movff	efgtoa@g+3,___flge@ff1+3
  8681  010228  0E00               	movlw	0
  8682  01022A  6F76               	movwf	___flmul@a& (0+255),b
  8683  01022C  0E00               	movlw	0
  8684  01022E  6F77               	movwf	(___flmul@a+1)& (0+255),b
  8685  010230  0E20               	movlw	32
  8686  010232  6F78               	movwf	(___flmul@a+2)& (0+255),b
  8687  010234  0E41               	movlw	65
  8688  010236  6F79               	movwf	(___flmul@a+3)& (0+255),b
  8689  010238  C0DD  F072         	movff	efgtoa@u,___flmul@b
  8690  01023C  C0DE  F073         	movff	efgtoa@u+1,___flmul@b+1
  8691  010240  C0DF  F074         	movff	efgtoa@u+2,___flmul@b+2
  8692  010244  C0E0  F075         	movff	efgtoa@u+3,___flmul@b+3
  8693  010248  ECF1  F08F         	call	___flmul	;wreg free
  8694  01024C  C072  F08F         	movff	?___flmul,___flge@ff2
  8695  010250  C073  F090         	movff	?___flmul+1,___flge@ff2+1
  8696  010254  C074  F091         	movff	?___flmul+2,___flge@ff2+2
  8697  010258  C075  F092         	movff	?___flmul+3,___flge@ff2+3
  8698  01025C  ECB1  F09D         	call	___flge	;wreg free
  8699  010260  A0D8               	btfss	status,0,c
  8700  010262  D01E               	goto	l9773
  8701  010264  D7BD               	goto	l9763
  8702  010266                     l9769:
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  8706  010266  C0DD  F072         	movff	efgtoa@u,___fldiv@b
  8707  01026A  C0DE  F073         	movff	efgtoa@u+1,___fldiv@b+1
  8708  01026E  C0DF  F074         	movff	efgtoa@u+2,___fldiv@b+2
  8709  010272  C0E0  F075         	movff	efgtoa@u+3,___fldiv@b+3
  8710  010276  0E00               	movlw	0
  8711  010278  6F76               	movwf	___fldiv@a& (0+255),b
  8712  01027A  0E00               	movlw	0
  8713  01027C  6F77               	movwf	(___fldiv@a+1)& (0+255),b
  8714  01027E  0E20               	movlw	32
  8715  010280  6F78               	movwf	(___fldiv@a+2)& (0+255),b
  8716  010282  0E41               	movlw	65
  8717  010284  6F79               	movwf	(___fldiv@a+3)& (0+255),b
  8718  010286  EC8B  F094         	call	___fldiv	;wreg free
  8719  01028A  C072  F0DD         	movff	?___fldiv,efgtoa@u
  8720  01028E  C073  F0DE         	movff	?___fldiv+1,efgtoa@u+1
  8721  010292  C074  F0DF         	movff	?___fldiv+2,efgtoa@u+2
  8722  010296  C075  F0E0         	movff	?___fldiv+3,efgtoa@u+3
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  8726  01029A  07D9               	decf	efgtoa@e& (0+255),f,b
  8727  01029C  A0D8               	btfss	status,0,c
  8728  01029E  07DA               	decf	(efgtoa@e+1)& (0+255),f,b
  8729  0102A0                     l9773:
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  8733  0102A0  C0D5  F08B         	movff	efgtoa@g,___flge@ff1
  8734  0102A4  C0D6  F08C         	movff	efgtoa@g+1,___flge@ff1+1
  8735  0102A8  C0D7  F08D         	movff	efgtoa@g+2,___flge@ff1+2
  8736  0102AC  C0D8  F08E         	movff	efgtoa@g+3,___flge@ff1+3
  8737  0102B0  C0DD  F08F         	movff	efgtoa@u,___flge@ff2
  8738  0102B4  C0DE  F090         	movff	efgtoa@u+1,___flge@ff2+1
  8739  0102B8  C0DF  F091         	movff	efgtoa@u+2,___flge@ff2+2
  8740  0102BC  C0E0  F092         	movff	efgtoa@u+3,___flge@ff2+3
  8741  0102C0  ECB1  F09D         	call	___flge	;wreg free
  8742  0102C4  A0D8               	btfss	status,0,c
  8743  0102C6  D7CF               	goto	l9769
  8744  0102C8                     u9220:
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  8748  0102C8  C0A9  F064         	movff	efgtoa@c,tolower@c
  8749  0102CC  6B65               	clrf	(tolower@c+1)& (0+255),b
  8750  0102CE  ECF9  F0A7         	call	_tolower	;wreg free
  8751  0102D2  5164               	movf	?_tolower& (0+255),w,b
  8752  0102D4  6FCA               	movwf	efgtoa@mode& (0+255),b
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  8756  0102D6  C0CA  F0C9         	movff	efgtoa@mode,efgtoa@nmode
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  8760  0102DA  0E67               	movlw	103
  8761  0102DC  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  8762  0102DE  A4D8               	btfss	status,2,c
  8763  0102E0  D019               	goto	l9789
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  8767  0102E2  51F8               	movf	_prec& (0+255),w,b
  8768  0102E4  11F9               	iorwf	(_prec+1)& (0+255),w,b
  8769  0102E6  A4D8               	btfss	status,2,c
  8770  0102E8  D004               	goto	l9785
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  8774  0102EA  0E00               	movlw	0
  8775  0102EC  6FF9               	movwf	(_prec+1)& (0+255),b
  8776  0102EE  0E01               	movlw	1
  8777  0102F0  6FF8               	movwf	_prec& (0+255),b
  8778  0102F2                     l9785:
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  8782  0102F2  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  8783  0102F4  D005               	goto	u9250
  8784  0102F6  51F9               	movf	(_prec+1)& (0+255),w,b
  8785  0102F8  E108               	bnz	l2601
  8786  0102FA  05F8               	decf	_prec& (0+255),w,b
  8787  0102FC  B0D8               	btfsc	status,0,c
  8788  0102FE  D005               	goto	l2601
  8789  010300                     u9250:
  8790                           
  8791                           ; BSR set to: 0
  8792  010300  0E00               	movlw	0
  8793  010302  6FC6               	movwf	(efgtoa@p+1)& (0+255),b
  8794  010304  0E06               	movlw	6
  8795  010306  6FC5               	movwf	efgtoa@p& (0+255),b
  8796  010308  D008               	goto	l9795
  8797  01030A                     l2601:
  8798                           
  8799                           ; BSR set to: 0
  8800  01030A  C0F8  F0C5         	movff	_prec,efgtoa@p
  8801  01030E  C0F9  F0C6         	movff	_prec+1,efgtoa@p+1
  8802  010312  D003               	goto	l9795
  8803  010314                     l9789:
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  8807  010314  AFF9               	btfss	(_prec+1)& (0+255),7,b
  8808  010316  D7F9               	goto	l2601
  8809  010318  D7F3               	goto	u9250
  8810  01031A                     l9795:
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  8814  01031A  0E67               	movlw	103
  8815  01031C  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  8816  01031E  A4D8               	btfss	status,2,c
  8817  010320  D022               	goto	l9805
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  8821  010322  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  8822  010324  D006               	goto	u9280
  8823  010326  0EFC               	movlw	252
  8824  010328  5DD9               	subwf	efgtoa@e& (0+255),w,b
  8825  01032A  0EFF               	movlw	255
  8826  01032C  59DA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8827  01032E  A0D8               	btfss	status,0,c
  8828  010330  D018               	goto	l9803
  8829  010332                     u9280:
  8830                           
  8831                           ; BSR set to: 0
  8832  010332  0EFF               	movlw	255
  8833  010334  6FAA               	movwf	??_efgtoa& (0+255),b
  8834  010336  0EFF               	movlw	255
  8835  010338  6FAB               	movwf	(??_efgtoa+1)& (0+255),b
  8836  01033A  C0C5  F0AC         	movff	efgtoa@p,??_efgtoa+2
  8837  01033E  C0C6  F0AD         	movff	efgtoa@p+1,??_efgtoa+3
  8838  010342  51AA               	movf	??_efgtoa& (0+255),w,b
  8839  010344  27AC               	addwf	(??_efgtoa+2)& (0+255),f,b
  8840  010346  51AB               	movf	(??_efgtoa+1)& (0+255),w,b
  8841  010348  23AD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8842  01034A  51D9               	movf	efgtoa@e& (0+255),w,b
  8843  01034C  5DAC               	subwf	(??_efgtoa+2)& (0+255),w,b
  8844  01034E  51AD               	movf	(??_efgtoa+3)& (0+255),w,b
  8845  010350  0A80               	xorlw	128
  8846  010352  6FAE               	movwf	(??_efgtoa+4)& (0+255),b
  8847  010354  51DA               	movf	(efgtoa@e+1)& (0+255),w,b
  8848  010356  0A80               	xorlw	128
  8849  010358  59AE               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8850  01035A  A0D8               	btfss	status,0,c
  8851  01035C  D002               	goto	l9803
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  8855  01035E  0E66               	movlw	102
  8856  010360  D001               	goto	L5
  8857  010362                     l9803:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  8861  010362  0E65               	movlw	101
  8862  010364                     L5:
  8863  010364  6FC9               	movwf	efgtoa@nmode& (0+255),b
  8864  010366                     l9805:
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  8868  010366  C0C5  F0BB         	movff	efgtoa@p,efgtoa@m
  8869  01036A  C0C6  F0BC         	movff	efgtoa@p+1,efgtoa@m+1
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  8873  01036E  0E67               	movlw	103
  8874  010370  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  8875  010372  A4D8               	btfss	status,2,c
  8876  010374  D005               	goto	u9320
  8877                           
  8878                           ; BSR set to: 0
  8879  010376  0E66               	movlw	102
  8880  010378  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  8881  01037A  B4D8               	btfsc	status,2,c
  8882                           
  8883                           ; BSR set to: 0
  8884  01037C  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  8885  01037E  D002               	goto	l9815
  8886  010380                     u9320:
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  8890  010380  4BBB               	infsnz	efgtoa@m& (0+255),f,b
  8891  010382  2BBC               	incf	(efgtoa@m+1)& (0+255),f,b
  8892  010384                     l9815:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  8896  010384  0E66               	movlw	102
  8897  010386  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  8898  010388  A4D8               	btfss	status,2,c
  8899  01038A  D016               	goto	l9825
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  8903  01038C  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  8904  01038E  D00C               	goto	l9821
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  8908  010390  0E00               	movlw	0
  8909  010392  6FDD               	movwf	efgtoa@u& (0+255),b
  8910  010394  0E00               	movlw	0
  8911  010396  6FDE               	movwf	(efgtoa@u+1)& (0+255),b
  8912  010398  0E80               	movlw	128
  8913  01039A  6FDF               	movwf	(efgtoa@u+2)& (0+255),b
  8914  01039C  0E3F               	movlw	63
  8915  01039E  6FE0               	movwf	(efgtoa@u+3)& (0+255),b
  8916                           
  8917                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  8918  0103A0  0E00               	movlw	0
  8919  0103A2  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  8920  0103A4  0E00               	movlw	0
  8921  0103A6  6FD9               	movwf	efgtoa@e& (0+255),b
  8922  0103A8                     l9821:
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  8926  0103A8  0E67               	movlw	103
  8927  0103AA  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  8928  0103AC  B4D8               	btfsc	status,2,c
  8929  0103AE  D004               	goto	l9825
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  8933  0103B0  51D9               	movf	efgtoa@e& (0+255),w,b
  8934  0103B2  27BB               	addwf	efgtoa@m& (0+255),f,b
  8935  0103B4  51DA               	movf	(efgtoa@e+1)& (0+255),w,b
  8936  0103B6  23BC               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8937  0103B8                     l9825:
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  8941  0103B8  0E00               	movlw	0
  8942  0103BA  6FD4               	movwf	(efgtoa@i+1)& (0+255),b
  8943  0103BC  0E00               	movlw	0
  8944  0103BE  6FD3               	movwf	efgtoa@i& (0+255),b
  8945                           
  8946                           ; BSR set to: 0
  8947                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  8948  0103C0  C0D5  F0CB         	movff	efgtoa@g,efgtoa@h
  8949  0103C4  C0D6  F0CC         	movff	efgtoa@g+1,efgtoa@h+1
  8950  0103C8  C0D7  F0CD         	movff	efgtoa@g+2,efgtoa@h+2
  8951  0103CC  C0D8  F0CE         	movff	efgtoa@g+3,efgtoa@h+3
  8952                           
  8953                           ; BSR set to: 0
  8954                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  8955  0103D0  C0DD  F0BD         	movff	efgtoa@u,efgtoa@ou
  8956  0103D4  C0DE  F0BE         	movff	efgtoa@u+1,efgtoa@ou+1
  8957  0103D8  C0DF  F0BF         	movff	efgtoa@u+2,efgtoa@ou+2
  8958  0103DC  C0E0  F0C0         	movff	efgtoa@u+3,efgtoa@ou+3
  8959                           
  8960                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  8961  0103E0  D07A               	goto	l9839
  8962  0103E2                     l9831:
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  8966  0103E2  C0CB  F072         	movff	efgtoa@h,___fldiv@b
  8967  0103E6  C0CC  F073         	movff	efgtoa@h+1,___fldiv@b+1
  8968  0103EA  C0CD  F074         	movff	efgtoa@h+2,___fldiv@b+2
  8969  0103EE  C0CE  F075         	movff	efgtoa@h+3,___fldiv@b+3
  8970  0103F2  C0DD  F076         	movff	efgtoa@u,___fldiv@a
  8971  0103F6  C0DE  F077         	movff	efgtoa@u+1,___fldiv@a+1
  8972  0103FA  C0DF  F078         	movff	efgtoa@u+2,___fldiv@a+2
  8973  0103FE  C0E0  F079         	movff	efgtoa@u+3,___fldiv@a+3
  8974  010402  EC8B  F094         	call	___fldiv	;wreg free
  8975  010406  C072  F08B         	movff	?___fldiv,floorf@x
  8976  01040A  C073  F08C         	movff	?___fldiv+1,floorf@x+1
  8977  01040E  C074  F08D         	movff	?___fldiv+2,floorf@x+2
  8978  010412  C075  F08E         	movff	?___fldiv+3,floorf@x+3
  8979  010416  EC84  F097         	call	_floorf	;wreg free
  8980  01041A  C08B  F0CF         	movff	?_floorf,efgtoa@l
  8981  01041E  C08C  F0D0         	movff	?_floorf+1,efgtoa@l+1
  8982  010422  C08D  F0D1         	movff	?_floorf+2,efgtoa@l+2
  8983  010426  C08E  F0D2         	movff	?_floorf+3,efgtoa@l+3
  8984                           
  8985                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  8986  01042A  C0CF  F060         	movff	efgtoa@l,___fltol@f1
  8987  01042E  C0D0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  8988  010432  C0D1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  8989  010436  C0D2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  8990  01043A  EC0C  F0A0         	call	___fltol	;wreg free
  8991  01043E  C060  F0C1         	movff	?___fltol,efgtoa@d
  8992  010442  C061  F0C2         	movff	?___fltol+1,efgtoa@d+1
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  8996  010446  C0CB  F09B         	movff	efgtoa@h,___flsub@b
  8997  01044A  C0CC  F09C         	movff	efgtoa@h+1,___flsub@b+1
  8998  01044E  C0CD  F09D         	movff	efgtoa@h+2,___flsub@b+2
  8999  010452  C0CE  F09E         	movff	efgtoa@h+3,___flsub@b+3
  9000  010456  C0DD  F076         	movff	efgtoa@u,___flmul@a
  9001  01045A  C0DE  F077         	movff	efgtoa@u+1,___flmul@a+1
  9002  01045E  C0DF  F078         	movff	efgtoa@u+2,___flmul@a+2
  9003  010462  C0E0  F079         	movff	efgtoa@u+3,___flmul@a+3
  9004  010466  C0CF  F072         	movff	efgtoa@l,___flmul@b
  9005  01046A  C0D0  F073         	movff	efgtoa@l+1,___flmul@b+1
  9006  01046E  C0D1  F074         	movff	efgtoa@l+2,___flmul@b+2
  9007  010472  C0D2  F075         	movff	efgtoa@l+3,___flmul@b+3
  9008  010476  ECF1  F08F         	call	___flmul	;wreg free
  9009  01047A  C072  F09F         	movff	?___flmul,___flsub@a
  9010  01047E  C073  F0A0         	movff	?___flmul+1,___flsub@a+1
  9011  010482  C074  F0A1         	movff	?___flmul+2,___flsub@a+2
  9012  010486  C075  F0A2         	movff	?___flmul+3,___flsub@a+3
  9013  01048A  EC38  F0A6         	call	___flsub	;wreg free
  9014  01048E  C09B  F0CB         	movff	?___flsub,efgtoa@h
  9015  010492  C09C  F0CC         	movff	?___flsub+1,efgtoa@h+1
  9016  010496  C09D  F0CD         	movff	?___flsub+2,efgtoa@h+2
  9017  01049A  C09E  F0CE         	movff	?___flsub+3,efgtoa@h+3
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  9021  01049E  C0DD  F072         	movff	efgtoa@u,___fldiv@b
  9022  0104A2  C0DE  F073         	movff	efgtoa@u+1,___fldiv@b+1
  9023  0104A6  C0DF  F074         	movff	efgtoa@u+2,___fldiv@b+2
  9024  0104AA  C0E0  F075         	movff	efgtoa@u+3,___fldiv@b+3
  9025  0104AE  0E00               	movlw	0
  9026  0104B0  6F76               	movwf	___fldiv@a& (0+255),b
  9027  0104B2  0E00               	movlw	0
  9028  0104B4  6F77               	movwf	(___fldiv@a+1)& (0+255),b
  9029  0104B6  0E20               	movlw	32
  9030  0104B8  6F78               	movwf	(___fldiv@a+2)& (0+255),b
  9031  0104BA  0E41               	movlw	65
  9032  0104BC  6F79               	movwf	(___fldiv@a+3)& (0+255),b
  9033  0104BE  EC8B  F094         	call	___fldiv	;wreg free
  9034  0104C2  C072  F0DD         	movff	?___fldiv,efgtoa@u
  9035  0104C6  C073  F0DE         	movff	?___fldiv+1,efgtoa@u+1
  9036  0104CA  C074  F0DF         	movff	?___fldiv+2,efgtoa@u+2
  9037  0104CE  C075  F0E0         	movff	?___fldiv+3,efgtoa@u+3
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  9041  0104D2  4BD3               	infsnz	efgtoa@i& (0+255),f,b
  9042  0104D4  2BD4               	incf	(efgtoa@i+1)& (0+255),f,b
  9043  0104D6                     l9839:
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  9047  0104D6  51BB               	movf	efgtoa@m& (0+255),w,b
  9048  0104D8  5DD3               	subwf	efgtoa@i& (0+255),w,b
  9049  0104DA  51D4               	movf	(efgtoa@i+1)& (0+255),w,b
  9050  0104DC  0A80               	xorlw	128
  9051  0104DE  6FAA               	movwf	??_efgtoa& (0+255),b
  9052  0104E0  51BC               	movf	(efgtoa@m+1)& (0+255),w,b
  9053  0104E2  0A80               	xorlw	128
  9054  0104E4  59AA               	subwfb	??_efgtoa& (0+255),w,b
  9055  0104E6  A0D8               	btfss	status,0,c
  9056  0104E8  D77C               	goto	l9831
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  9060  0104EA  C0DD  F072         	movff	efgtoa@u,___flmul@b
  9061  0104EE  C0DE  F073         	movff	efgtoa@u+1,___flmul@b+1
  9062  0104F2  C0DF  F074         	movff	efgtoa@u+2,___flmul@b+2
  9063  0104F6  C0E0  F075         	movff	efgtoa@u+3,___flmul@b+3
  9064  0104FA  0E00               	movlw	0
  9065  0104FC  6F76               	movwf	___flmul@a& (0+255),b
  9066  0104FE  0E00               	movlw	0
  9067  010500  6F77               	movwf	(___flmul@a+1)& (0+255),b
  9068  010502  0EA0               	movlw	160
  9069  010504  6F78               	movwf	(___flmul@a+2)& (0+255),b
  9070  010506  0E40               	movlw	64
  9071  010508  6F79               	movwf	(___flmul@a+3)& (0+255),b
  9072  01050A  ECF1  F08F         	call	___flmul	;wreg free
  9073  01050E  C072  F0CF         	movff	?___flmul,efgtoa@l
  9074  010512  C073  F0D0         	movff	?___flmul+1,efgtoa@l+1
  9075  010516  C074  F0D1         	movff	?___flmul+2,efgtoa@l+2
  9076  01051A  C075  F0D2         	movff	?___flmul+3,efgtoa@l+3
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  9080  01051E  C0CB  F08B         	movff	efgtoa@h,___flge@ff1
  9081  010522  C0CC  F08C         	movff	efgtoa@h+1,___flge@ff1+1
  9082  010526  C0CD  F08D         	movff	efgtoa@h+2,___flge@ff1+2
  9083  01052A  C0CE  F08E         	movff	efgtoa@h+3,___flge@ff1+3
  9084  01052E  C0CF  F08F         	movff	efgtoa@l,___flge@ff2
  9085  010532  C0D0  F090         	movff	efgtoa@l+1,___flge@ff2+1
  9086  010536  C0D1  F091         	movff	efgtoa@l+2,___flge@ff2+2
  9087  01053A  C0D2  F092         	movff	efgtoa@l+3,___flge@ff2+3
  9088  01053E  ECB1  F09D         	call	___flge	;wreg free
  9089  010542  A0D8               	btfss	status,0,c
  9090  010544  D015               	goto	u9390
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  9094                           
  9095                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  9099  010546  C0CB  F060         	movff	efgtoa@h,___fleq@ff1
  9100  01054A  C0CC  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  9101  01054E  C0CD  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  9102  010552  C0CE  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  9103  010556  C0CF  F064         	movff	efgtoa@l,___fleq@ff2
  9104  01055A  C0D0  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  9105  01055E  C0D1  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  9106  010562  C0D2  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  9107  010566  ECB7  F0A1         	call	___fleq	;wreg free
  9108  01056A  B0D8               	btfsc	status,0,c
  9109                           
  9110                           ; BSR set to: 0
  9111  01056C  B1C1               	btfsc	efgtoa@d& (0+255),0,b
  9112  01056E  D008               	goto	l9853
  9113  010570                     u9390:
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  9117  010570  0E00               	movlw	0
  9118  010572  6FCF               	movwf	efgtoa@l& (0+255),b
  9119  010574  0E00               	movlw	0
  9120  010576  6FD0               	movwf	(efgtoa@l+1)& (0+255),b
  9121  010578  0E00               	movlw	0
  9122  01057A  6FD1               	movwf	(efgtoa@l+2)& (0+255),b
  9123  01057C  0E00               	movlw	0
  9124  01057E  6FD2               	movwf	(efgtoa@l+3)& (0+255),b
  9125  010580                     l9853:
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  9129  010580  C0D5  F08B         	movff	efgtoa@g,___fladd@b
  9130  010584  C0D6  F08C         	movff	efgtoa@g+1,___fladd@b+1
  9131  010588  C0D7  F08D         	movff	efgtoa@g+2,___fladd@b+2
  9132  01058C  C0D8  F08E         	movff	efgtoa@g+3,___fladd@b+3
  9133  010590  C0CF  F08F         	movff	efgtoa@l,___fladd@a
  9134  010594  C0D0  F090         	movff	efgtoa@l+1,___fladd@a+1
  9135  010598  C0D1  F091         	movff	efgtoa@l+2,___fladd@a+2
  9136  01059C  C0D2  F092         	movff	efgtoa@l+3,___fladd@a+3
  9137  0105A0  EC99  F091         	call	___fladd	;wreg free
  9138  0105A4  C08B  F0CB         	movff	?___fladd,efgtoa@h
  9139  0105A8  C08C  F0CC         	movff	?___fladd+1,efgtoa@h+1
  9140  0105AC  C08D  F0CD         	movff	?___fladd+2,efgtoa@h+2
  9141  0105B0  C08E  F0CE         	movff	?___fladd+3,efgtoa@h+3
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  9145  0105B4  C0CB  F08B         	movff	efgtoa@h,___flge@ff1
  9146  0105B8  C0CC  F08C         	movff	efgtoa@h+1,___flge@ff1+1
  9147  0105BC  C0CD  F08D         	movff	efgtoa@h+2,___flge@ff1+2
  9148  0105C0  C0CE  F08E         	movff	efgtoa@h+3,___flge@ff1+3
  9149  0105C4  0E00               	movlw	0
  9150  0105C6  6F76               	movwf	___flmul@a& (0+255),b
  9151  0105C8  0E00               	movlw	0
  9152  0105CA  6F77               	movwf	(___flmul@a+1)& (0+255),b
  9153  0105CC  0E20               	movlw	32
  9154  0105CE  6F78               	movwf	(___flmul@a+2)& (0+255),b
  9155  0105D0  0E41               	movlw	65
  9156  0105D2  6F79               	movwf	(___flmul@a+3)& (0+255),b
  9157  0105D4  C0BD  F072         	movff	efgtoa@ou,___flmul@b
  9158  0105D8  C0BE  F073         	movff	efgtoa@ou+1,___flmul@b+1
  9159  0105DC  C0BF  F074         	movff	efgtoa@ou+2,___flmul@b+2
  9160  0105E0  C0C0  F075         	movff	efgtoa@ou+3,___flmul@b+3
  9161  0105E4  ECF1  F08F         	call	___flmul	;wreg free
  9162  0105E8  C072  F08F         	movff	?___flmul,___flge@ff2
  9163  0105EC  C073  F090         	movff	?___flmul+1,___flge@ff2+1
  9164  0105F0  C074  F091         	movff	?___flmul+2,___flge@ff2+2
  9165  0105F4  C075  F092         	movff	?___flmul+3,___flge@ff2+3
  9166  0105F8  ECB1  F09D         	call	___flge	;wreg free
  9167  0105FC  A0D8               	btfss	status,0,c
  9168  0105FE  D022               	goto	l9865
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  9172  010600  4BD9               	infsnz	efgtoa@e& (0+255),f,b
  9173  010602  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  9177  010604  C0BD  F072         	movff	efgtoa@ou,___flmul@b
  9178  010608  C0BE  F073         	movff	efgtoa@ou+1,___flmul@b+1
  9179  01060C  C0BF  F074         	movff	efgtoa@ou+2,___flmul@b+2
  9180  010610  C0C0  F075         	movff	efgtoa@ou+3,___flmul@b+3
  9181  010614  0E00               	movlw	0
  9182  010616  6F76               	movwf	___flmul@a& (0+255),b
  9183  010618  0E00               	movlw	0
  9184  01061A  6F77               	movwf	(___flmul@a+1)& (0+255),b
  9185  01061C  0E20               	movlw	32
  9186  01061E  6F78               	movwf	(___flmul@a+2)& (0+255),b
  9187  010620  0E41               	movlw	65
  9188  010622  6F79               	movwf	(___flmul@a+3)& (0+255),b
  9189  010624  ECF1  F08F         	call	___flmul	;wreg free
  9190  010628  C072  F0BD         	movff	?___flmul,efgtoa@ou
  9191  01062C  C073  F0BE         	movff	?___flmul+1,efgtoa@ou+1
  9192  010630  C074  F0BF         	movff	?___flmul+2,efgtoa@ou+2
  9193  010634  C075  F0C0         	movff	?___flmul+3,efgtoa@ou+3
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  9197  010638  0E66               	movlw	102
  9198  01063A  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  9199  01063C  A4D8               	btfss	status,2,c
  9200  01063E  D002               	goto	l9865
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  9204  010640  4BBB               	infsnz	efgtoa@m& (0+255),f,b
  9205  010642  2BBC               	incf	(efgtoa@m+1)& (0+255),f,b
  9206  010644                     l9865:
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  9210  010644  C0BD  F0DD         	movff	efgtoa@ou,efgtoa@u
  9211  010648  C0BE  F0DE         	movff	efgtoa@ou+1,efgtoa@u+1
  9212  01064C  C0BF  F0DF         	movff	efgtoa@ou+2,efgtoa@u+2
  9213  010650  C0C0  F0E0         	movff	efgtoa@ou+3,efgtoa@u+3
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  9217  010654  0E65               	movlw	101
  9218  010656  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  9219  010658  B4D8               	btfsc	status,2,c
  9220  01065A  D005               	goto	l9871
  9221                           
  9222                           ; BSR set to: 0
  9223  01065C  C0D9  F0B9         	movff	efgtoa@e,efgtoa@ne
  9224  010660  C0DA  F0BA         	movff	efgtoa@e+1,efgtoa@ne+1
  9225  010664  D004               	goto	l2629
  9226  010666                     l9871:
  9227                           
  9228                           ; BSR set to: 0
  9229  010666  0E00               	movlw	0
  9230  010668  6FBA               	movwf	(efgtoa@ne+1)& (0+255),b
  9231  01066A  0E00               	movlw	0
  9232  01066C  6FB9               	movwf	efgtoa@ne& (0+255),b
  9233  01066E                     l2629:
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  9237  01066E  0E00               	movlw	0
  9238  010670  6FB8               	movwf	(efgtoa@pp+1)& (0+255),b
  9239  010672  0E00               	movlw	0
  9240  010674  6FB7               	movwf	efgtoa@pp& (0+255),b
  9241                           
  9242                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  9243  010676  0E00               	movlw	0
  9244  010678  6FB6               	movwf	(efgtoa@t+1)& (0+255),b
  9245  01067A  0E00               	movlw	0
  9246  01067C  6FB5               	movwf	efgtoa@t& (0+255),b
  9247                           
  9248                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  9249  01067E  0E00               	movlw	0
  9250  010680  6FD4               	movwf	(efgtoa@i+1)& (0+255),b
  9251  010682  0E00               	movlw	0
  9252  010684  6FD3               	movwf	efgtoa@i& (0+255),b
  9253                           
  9254                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  9255  010686  D0C4               	goto	l9921
  9256  010688                     l9873:
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  9260  010688  C0CB  F072         	movff	efgtoa@h,___fldiv@b
  9261  01068C  C0CC  F073         	movff	efgtoa@h+1,___fldiv@b+1
  9262  010690  C0CD  F074         	movff	efgtoa@h+2,___fldiv@b+2
  9263  010694  C0CE  F075         	movff	efgtoa@h+3,___fldiv@b+3
  9264  010698  C0DD  F076         	movff	efgtoa@u,___fldiv@a
  9265  01069C  C0DE  F077         	movff	efgtoa@u+1,___fldiv@a+1
  9266  0106A0  C0DF  F078         	movff	efgtoa@u+2,___fldiv@a+2
  9267  0106A4  C0E0  F079         	movff	efgtoa@u+3,___fldiv@a+3
  9268  0106A8  EC8B  F094         	call	___fldiv	;wreg free
  9269  0106AC  C072  F08B         	movff	?___fldiv,floorf@x
  9270  0106B0  C073  F08C         	movff	?___fldiv+1,floorf@x+1
  9271  0106B4  C074  F08D         	movff	?___fldiv+2,floorf@x+2
  9272  0106B8  C075  F08E         	movff	?___fldiv+3,floorf@x+3
  9273  0106BC  EC84  F097         	call	_floorf	;wreg free
  9274  0106C0  C08B  F0CF         	movff	?_floorf,efgtoa@l
  9275  0106C4  C08C  F0D0         	movff	?_floorf+1,efgtoa@l+1
  9276  0106C8  C08D  F0D1         	movff	?_floorf+2,efgtoa@l+2
  9277  0106CC  C08E  F0D2         	movff	?_floorf+3,efgtoa@l+3
  9278                           
  9279                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  9280  0106D0  C0CF  F060         	movff	efgtoa@l,___fltol@f1
  9281  0106D4  C0D0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  9282  0106D8  C0D1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  9283  0106DC  C0D2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  9284  0106E0  EC0C  F0A0         	call	___fltol	;wreg free
  9285  0106E4  C060  F0C1         	movff	?___fltol,efgtoa@d
  9286  0106E8  C061  F0C2         	movff	?___fltol+1,efgtoa@d+1
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9290  0106EC  B82E               	btfsc	_flags^0,4,c
  9291  0106EE  D00C               	goto	l9885
  9292                           
  9293                           ; BSR set to: 0
  9294  0106F0  51C1               	movf	efgtoa@d& (0+255),w,b
  9295  0106F2  11C2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9296  0106F4  A4D8               	btfss	status,2,c
  9297  0106F6  D008               	goto	l9885
  9298                           
  9299                           ; BSR set to: 0
  9300  0106F8  0E67               	movlw	103
  9301  0106FA  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  9302  0106FC  B4D8               	btfsc	status,2,c
  9303                           
  9304                           ; BSR set to: 0
  9305  0106FE  AFBA               	btfss	(efgtoa@ne+1)& (0+255),7,b
  9306  010700  D003               	goto	l9885
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  9310  010702  4BB5               	infsnz	efgtoa@t& (0+255),f,b
  9311  010704  2BB6               	incf	(efgtoa@t+1)& (0+255),f,b
  9312                           
  9313                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  9314  010706  D039               	goto	l9913
  9315  010708                     l9885:
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  9319  010708  51B7               	movf	efgtoa@pp& (0+255),w,b
  9320  01070A  11B8               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9321  01070C  B4D8               	btfsc	status,2,c
  9322                           
  9323                           ; BSR set to: 0
  9324  01070E  AFBA               	btfss	(efgtoa@ne+1)& (0+255),7,b
  9325  010710  D022               	goto	l9905
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  9329  010712  0E40               	movlw	low _dbuf
  9330  010714  25DB               	addwf	efgtoa@n& (0+255),w,b
  9331  010716  6ED9               	movwf	fsr2l,c
  9332  010718  0E02               	movlw	high _dbuf
  9333  01071A  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9334  01071C  6EDA               	movwf	fsr2h,c
  9335  01071E  0E2E               	movlw	46
  9336  010720  6EDF               	movwf	indf2,c
  9337                           
  9338                           ; BSR set to: 0
  9339  010722  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  9340  010724  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  9344  010726  07C7               	decf	efgtoa@w& (0+255),f,b
  9345  010728  A0D8               	btfss	status,0,c
  9346  01072A  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  9350  01072C  0E00               	movlw	0
  9351  01072E  6FB8               	movwf	(efgtoa@pp+1)& (0+255),b
  9352  010730  0E01               	movlw	1
  9353  010732  6FB7               	movwf	efgtoa@pp& (0+255),b
  9354  010734  D010               	goto	l9905
  9355  010736                     l9897:
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  9359  010736  0E40               	movlw	low _dbuf
  9360  010738  25DB               	addwf	efgtoa@n& (0+255),w,b
  9361  01073A  6ED9               	movwf	fsr2l,c
  9362  01073C  0E02               	movlw	high _dbuf
  9363  01073E  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9364  010740  6EDA               	movwf	fsr2h,c
  9365  010742  0E30               	movlw	48
  9366  010744  6EDF               	movwf	indf2,c
  9367                           
  9368                           ; BSR set to: 0
  9369  010746  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  9370  010748  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  9374  01074A  07C7               	decf	efgtoa@w& (0+255),f,b
  9375  01074C  A0D8               	btfss	status,0,c
  9376  01074E  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  9380  010750  07B5               	decf	efgtoa@t& (0+255),f,b
  9381  010752  A0D8               	btfss	status,0,c
  9382  010754  07B6               	decf	(efgtoa@t+1)& (0+255),f,b
  9383  010756                     l9905:
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  9387  010756  51B5               	movf	efgtoa@t& (0+255),w,b
  9388  010758  11B6               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9389  01075A  A4D8               	btfss	status,2,c
  9390  01075C  D7EC               	goto	l9897
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  9394  01075E  0E40               	movlw	low _dbuf
  9395  010760  25DB               	addwf	efgtoa@n& (0+255),w,b
  9396  010762  6ED9               	movwf	fsr2l,c
  9397  010764  0E02               	movlw	high _dbuf
  9398  010766  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9399  010768  6EDA               	movwf	fsr2h,c
  9400  01076A  51C1               	movf	efgtoa@d& (0+255),w,b
  9401  01076C  0F30               	addlw	48
  9402  01076E  6EDF               	movwf	indf2,c
  9403                           
  9404                           ; BSR set to: 0
  9405  010770  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  9406  010772  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  9410  010774  07C7               	decf	efgtoa@w& (0+255),f,b
  9411  010776  A0D8               	btfss	status,0,c
  9412  010778  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9413  01077A                     l9913:
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  9417  01077A  C0CB  F09B         	movff	efgtoa@h,___flsub@b
  9418  01077E  C0CC  F09C         	movff	efgtoa@h+1,___flsub@b+1
  9419  010782  C0CD  F09D         	movff	efgtoa@h+2,___flsub@b+2
  9420  010786  C0CE  F09E         	movff	efgtoa@h+3,___flsub@b+3
  9421  01078A  C0DD  F076         	movff	efgtoa@u,___flmul@a
  9422  01078E  C0DE  F077         	movff	efgtoa@u+1,___flmul@a+1
  9423  010792  C0DF  F078         	movff	efgtoa@u+2,___flmul@a+2
  9424  010796  C0E0  F079         	movff	efgtoa@u+3,___flmul@a+3
  9425  01079A  C0CF  F072         	movff	efgtoa@l,___flmul@b
  9426  01079E  C0D0  F073         	movff	efgtoa@l+1,___flmul@b+1
  9427  0107A2  C0D1  F074         	movff	efgtoa@l+2,___flmul@b+2
  9428  0107A6  C0D2  F075         	movff	efgtoa@l+3,___flmul@b+3
  9429  0107AA  ECF1  F08F         	call	___flmul	;wreg free
  9430  0107AE  C072  F09F         	movff	?___flmul,___flsub@a
  9431  0107B2  C073  F0A0         	movff	?___flmul+1,___flsub@a+1
  9432  0107B6  C074  F0A1         	movff	?___flmul+2,___flsub@a+2
  9433  0107BA  C075  F0A2         	movff	?___flmul+3,___flsub@a+3
  9434  0107BE  EC38  F0A6         	call	___flsub	;wreg free
  9435  0107C2  C09B  F0CB         	movff	?___flsub,efgtoa@h
  9436  0107C6  C09C  F0CC         	movff	?___flsub+1,efgtoa@h+1
  9437  0107CA  C09D  F0CD         	movff	?___flsub+2,efgtoa@h+2
  9438  0107CE  C09E  F0CE         	movff	?___flsub+3,efgtoa@h+3
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  9442  0107D2  C0DD  F072         	movff	efgtoa@u,___fldiv@b
  9443  0107D6  C0DE  F073         	movff	efgtoa@u+1,___fldiv@b+1
  9444  0107DA  C0DF  F074         	movff	efgtoa@u+2,___fldiv@b+2
  9445  0107DE  C0E0  F075         	movff	efgtoa@u+3,___fldiv@b+3
  9446  0107E2  0E00               	movlw	0
  9447  0107E4  6F76               	movwf	___fldiv@a& (0+255),b
  9448  0107E6  0E00               	movlw	0
  9449  0107E8  6F77               	movwf	(___fldiv@a+1)& (0+255),b
  9450  0107EA  0E20               	movlw	32
  9451  0107EC  6F78               	movwf	(___fldiv@a+2)& (0+255),b
  9452  0107EE  0E41               	movlw	65
  9453  0107F0  6F79               	movwf	(___fldiv@a+3)& (0+255),b
  9454  0107F2  EC8B  F094         	call	___fldiv	;wreg free
  9455  0107F6  C072  F0DD         	movff	?___fldiv,efgtoa@u
  9456  0107FA  C073  F0DE         	movff	?___fldiv+1,efgtoa@u+1
  9457  0107FE  C074  F0DF         	movff	?___fldiv+2,efgtoa@u+2
  9458  010802  C075  F0E0         	movff	?___fldiv+3,efgtoa@u+3
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  9462  010806  07B9               	decf	efgtoa@ne& (0+255),f,b
  9463  010808  A0D8               	btfss	status,0,c
  9464  01080A  07BA               	decf	(efgtoa@ne+1)& (0+255),f,b
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  9468  01080C  4BD3               	infsnz	efgtoa@i& (0+255),f,b
  9469  01080E  2BD4               	incf	(efgtoa@i+1)& (0+255),f,b
  9470  010810                     l9921:
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  9474  010810  51BB               	movf	efgtoa@m& (0+255),w,b
  9475  010812  5DD3               	subwf	efgtoa@i& (0+255),w,b
  9476  010814  51D4               	movf	(efgtoa@i+1)& (0+255),w,b
  9477  010816  0A80               	xorlw	128
  9478  010818  6FAA               	movwf	??_efgtoa& (0+255),b
  9479  01081A  51BC               	movf	(efgtoa@m+1)& (0+255),w,b
  9480  01081C  0A80               	xorlw	128
  9481  01081E  59AA               	subwfb	??_efgtoa& (0+255),w,b
  9482  010820  B0D8               	btfsc	status,0,c
  9483  010822  D008               	goto	u9510
  9484                           
  9485                           ; BSR set to: 0
  9486  010824  BFDC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9487  010826  D730               	goto	l9873
  9488  010828  51DC               	movf	(efgtoa@n+1)& (0+255),w,b
  9489  01082A  E104               	bnz	u9510
  9490  01082C  0E4B               	movlw	75
  9491  01082E  5DDB               	subwf	efgtoa@n& (0+255),w,b
  9492  010830  A0D8               	btfss	status,0,c
  9493  010832  D72A               	goto	l9873
  9494  010834                     u9510:
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  9498  010834  51B7               	movf	efgtoa@pp& (0+255),w,b
  9499  010836  11B8               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9500  010838  B4D8               	btfsc	status,2,c
  9501                           
  9502                           ; BSR set to: 0
  9503  01083A  A82E               	btfss	_flags^0,4,c
  9504  01083C  D00A               	goto	l9933
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  9508  01083E  0E40               	movlw	low _dbuf
  9509  010840  25DB               	addwf	efgtoa@n& (0+255),w,b
  9510  010842  6ED9               	movwf	fsr2l,c
  9511  010844  0E02               	movlw	high _dbuf
  9512  010846  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9513  010848  6EDA               	movwf	fsr2h,c
  9514  01084A  0E2E               	movlw	46
  9515  01084C  6EDF               	movwf	indf2,c
  9516                           
  9517                           ; BSR set to: 0
  9518  01084E  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  9519  010850  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  9520  010852                     l9933:
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  9524  010852  0E40               	movlw	low _dbuf
  9525  010854  25DB               	addwf	efgtoa@n& (0+255),w,b
  9526  010856  6ED9               	movwf	fsr2l,c
  9527  010858  0E02               	movlw	high _dbuf
  9528  01085A  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9529  01085C  6EDA               	movwf	fsr2h,c
  9530  01085E  0E00               	movlw	0
  9531  010860  6EDF               	movwf	indf2,c
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  9535  010862  0E65               	movlw	101
  9536  010864  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  9537  010866  A4D8               	btfss	status,2,c
  9538  010868  D44D               	goto	l9735
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  9542  01086A  0E00               	movlw	0
  9543  01086C  6FD4               	movwf	(efgtoa@i+1)& (0+255),b
  9544  01086E  0E4F               	movlw	79
  9545  010870  6FD3               	movwf	efgtoa@i& (0+255),b
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  9549  010872  0E40               	movlw	low _dbuf
  9550  010874  25D3               	addwf	efgtoa@i& (0+255),w,b
  9551  010876  6ED9               	movwf	fsr2l,c
  9552  010878  0E02               	movlw	high _dbuf
  9553  01087A  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9554  01087C  6EDA               	movwf	fsr2h,c
  9555  01087E  0E00               	movlw	0
  9556  010880  6EDF               	movwf	indf2,c
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  9560  010882  0E00               	movlw	0
  9561  010884  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  9562  010886  0E00               	movlw	0
  9563  010888  6FC3               	movwf	efgtoa@sign& (0+255),b
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  9567  01088A  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  9568  01088C  D008               	goto	l9949
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  9572  01088E  0E00               	movlw	0
  9573  010890  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  9574  010892  0E01               	movlw	1
  9575  010894  6FC3               	movwf	efgtoa@sign& (0+255),b
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  9579  010896  6DD9               	negf	efgtoa@e& (0+255),b
  9580  010898  1FDA               	comf	(efgtoa@e+1)& (0+255),f,b
  9581  01089A  B0D8               	btfsc	status,0,c
  9582  01089C  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  9583  01089E                     l9949:
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  9587  01089E  0E00               	movlw	0
  9588  0108A0  6FC6               	movwf	(efgtoa@p+1)& (0+255),b
  9589  0108A2  0E02               	movlw	2
  9590  0108A4  6FC5               	movwf	efgtoa@p& (0+255),b
  9591                           
  9592                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  9593  0108A6  D02A               	goto	l9961
  9594  0108A8                     l9951:
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  9598  0108A8  07D3               	decf	efgtoa@i& (0+255),f,b
  9599  0108AA  A0D8               	btfss	status,0,c
  9600  0108AC  07D4               	decf	(efgtoa@i+1)& (0+255),f,b
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  9604  0108AE  0E40               	movlw	low _dbuf
  9605  0108B0  25D3               	addwf	efgtoa@i& (0+255),w,b
  9606  0108B2  6ED9               	movwf	fsr2l,c
  9607  0108B4  0E02               	movlw	high _dbuf
  9608  0108B6  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9609  0108B8  6EDA               	movwf	fsr2h,c
  9610  0108BA  C0D9  F060         	movff	efgtoa@e,___awmod@dividend
  9611  0108BE  C0DA  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  9612  0108C2  0E00               	movlw	0
  9613  0108C4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9614  0108C6  0E0A               	movlw	10
  9615  0108C8  6F62               	movwf	___awmod@divisor& (0+255),b
  9616  0108CA  EC78  F0A2         	call	___awmod	;wreg free
  9617  0108CE  5160               	movf	?___awmod& (0+255),w,b
  9618  0108D0  0F30               	addlw	48
  9619  0108D2  6EDF               	movwf	indf2,c
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  9623  0108D4  C0D9  F060         	movff	efgtoa@e,___awdiv@dividend
  9624  0108D8  C0DA  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  9625  0108DC  0E00               	movlw	0
  9626  0108DE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9627  0108E0  0E0A               	movlw	10
  9628  0108E2  6F62               	movwf	___awdiv@divisor& (0+255),b
  9629  0108E4  ECFC  F0A1         	call	___awdiv	;wreg free
  9630  0108E8  C060  F0D9         	movff	?___awdiv,efgtoa@e
  9631  0108EC  C061  F0DA         	movff	?___awdiv+1,efgtoa@e+1
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  9635  0108F0  07C5               	decf	efgtoa@p& (0+255),f,b
  9636  0108F2  A0D8               	btfss	status,0,c
  9637  0108F4  07C6               	decf	(efgtoa@p+1)& (0+255),f,b
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  9641  0108F6  07C7               	decf	efgtoa@w& (0+255),f,b
  9642  0108F8  A0D8               	btfss	status,0,c
  9643  0108FA  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9644  0108FC                     l9961:
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  9648  0108FC  51D9               	movf	efgtoa@e& (0+255),w,b
  9649  0108FE  11DA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9650  010900  A4D8               	btfss	status,2,c
  9651  010902  D7D2               	goto	l9951
  9652                           
  9653                           ; BSR set to: 0
  9654  010904  BFC6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9655  010906  D005               	goto	u9570
  9656  010908  51C6               	movf	(efgtoa@p+1)& (0+255),w,b
  9657  01090A  E1CE               	bnz	l9951
  9658  01090C  05C5               	decf	efgtoa@p& (0+255),w,b
  9659  01090E  B0D8               	btfsc	status,0,c
  9660  010910  D7CB               	goto	l9951
  9661  010912                     u9570:
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  9665  010912  07D3               	decf	efgtoa@i& (0+255),f,b
  9666  010914  A0D8               	btfss	status,0,c
  9667  010916  07D4               	decf	(efgtoa@i+1)& (0+255),f,b
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  9671  010918  51C3               	movf	efgtoa@sign& (0+255),w,b
  9672  01091A  11C4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9673  01091C  A4D8               	btfss	status,2,c
  9674  01091E  D004               	goto	l9971
  9675                           
  9676                           ; BSR set to: 0
  9677  010920  0E00               	movlw	0
  9678  010922  6FB2               	movwf	(_efgtoa$4201+1)& (0+255),b
  9679  010924  0E2B               	movlw	43
  9680  010926  D003               	goto	L6
  9681  010928                     l9971:
  9682                           
  9683                           ; BSR set to: 0
  9684  010928  0E00               	movlw	0
  9685  01092A  6FB2               	movwf	(_efgtoa$4201+1)& (0+255),b
  9686  01092C  0E2D               	movlw	45
  9687  01092E                     L6:
  9688  01092E  6FB1               	movwf	_efgtoa$4201& (0+255),b
  9689                           
  9690                           ; BSR set to: 0
  9691  010930  0E40               	movlw	low _dbuf
  9692  010932  25D3               	addwf	efgtoa@i& (0+255),w,b
  9693  010934  6ED9               	movwf	fsr2l,c
  9694  010936  0E02               	movlw	high _dbuf
  9695  010938  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9696  01093A  6EDA               	movwf	fsr2h,c
  9697  01093C  0060  F2C7  FFDF   	movff	_efgtoa$4201,indf2
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  9701  010942  07C7               	decf	efgtoa@w& (0+255),f,b
  9702  010944  A0D8               	btfss	status,0,c
  9703  010946  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  9707  010948  07D3               	decf	efgtoa@i& (0+255),f,b
  9708  01094A  A0D8               	btfss	status,0,c
  9709  01094C  07D4               	decf	(efgtoa@i+1)& (0+255),f,b
  9710                           
  9711                           ; BSR set to: 0
  9712                           
  9713                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9714  01094E  0EBF               	movlw	191
  9715  010950  6FAA               	movwf	??_efgtoa& (0+255),b
  9716  010952  0EFF               	movlw	255
  9717  010954  6FAB               	movwf	(??_efgtoa+1)& (0+255),b
  9718  010956  51A9               	movf	efgtoa@c& (0+255),w,b
  9719  010958  6FAC               	movwf	(??_efgtoa+2)& (0+255),b
  9720  01095A  6BAD               	clrf	(??_efgtoa+3)& (0+255),b
  9721  01095C  51AA               	movf	??_efgtoa& (0+255),w,b
  9722  01095E  27AC               	addwf	(??_efgtoa+2)& (0+255),f,b
  9723  010960  51AB               	movf	(??_efgtoa+1)& (0+255),w,b
  9724  010962  23AD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9725  010964  51AD               	movf	(??_efgtoa+3)& (0+255),w,b
  9726  010966  E104               	bnz	u9590
  9727  010968  0E1A               	movlw	26
  9728  01096A  5DAC               	subwf	(??_efgtoa+2)& (0+255),w,b
  9729  01096C  A0D8               	btfss	status,0,c
  9730  01096E  D004               	goto	l9985
  9731  010970                     u9590:
  9732                           
  9733                           ; BSR set to: 0
  9734  010970  0E00               	movlw	0
  9735  010972  6FB4               	movwf	(_efgtoa$4202+1)& (0+255),b
  9736  010974  0E65               	movlw	101
  9737  010976  D003               	goto	L7
  9738  010978                     l9985:
  9739                           
  9740                           ; BSR set to: 0
  9741  010978  0E00               	movlw	0
  9742  01097A  6FB4               	movwf	(_efgtoa$4202+1)& (0+255),b
  9743  01097C  0E45               	movlw	69
  9744  01097E                     L7:
  9745  01097E  6FB3               	movwf	_efgtoa$4202& (0+255),b
  9746                           
  9747                           ; BSR set to: 0
  9748  010980  0E40               	movlw	low _dbuf
  9749  010982  25D3               	addwf	efgtoa@i& (0+255),w,b
  9750  010984  6ED9               	movwf	fsr2l,c
  9751  010986  0E02               	movlw	high _dbuf
  9752  010988  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9753  01098A  6EDA               	movwf	fsr2h,c
  9754  01098C  0060  F2CF  FFDF   	movff	_efgtoa$4202,indf2
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  9758  010992  07C7               	decf	efgtoa@w& (0+255),f,b
  9759  010994  A0D8               	btfss	status,0,c
  9760  010996  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  9764  010998  0E40               	movlw	low _dbuf
  9765  01099A  25DB               	addwf	efgtoa@n& (0+255),w,b
  9766  01099C  6F60               	movwf	strcpy@dest& (0+255),b
  9767  01099E  0E02               	movlw	high _dbuf
  9768  0109A0  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9769  0109A2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  9770  0109A4  0E40               	movlw	low _dbuf
  9771  0109A6  25D3               	addwf	efgtoa@i& (0+255),w,b
  9772  0109A8  6F62               	movwf	strcpy@src& (0+255),b
  9773  0109AA  0E02               	movlw	high _dbuf
  9774  0109AC  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9775  0109AE  6F63               	movwf	(strcpy@src+1)& (0+255),b
  9776  0109B0  EC4E  F0A3         	call	_strcpy	;wreg free
  9777  0109B4  EF82  F080         	goto	l9735
  9778  0109B8                     __end_of_efgtoa:
  9779                           	callstack 0
  9780                           
  9781 ;; *************** function _tolower *****************
  9782 ;; Defined at:
  9783 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  c               2    4[BANK0 ] int 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  2    4[BANK0 ] int 
  9790 ;; Registers used:
  9791 ;;		wreg, status,2, status,0
  9792 ;; Tracked objects:
  9793 ;;		On entry : 3F/0
  9794 ;;		On exit  : 3F/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9799 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9800 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9801 ;;Total ram usage:        6 bytes
  9802 ;; Hardware stack levels used: 1
  9803 ;; Hardware stack levels required when called: 8
  9804 ;; This function calls:
  9805 ;;		_isupper
  9806 ;; This function is called by:
  9807 ;;		_efgtoa
  9808 ;;		_vfpfcnvrt
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text16
  9813  014FF2                     __ptext16:
  9814                           	callstack 0
  9815  014FF2                     _tolower:
  9816                           	callstack 19
  9817                           
  9818                           ; BSR set to: 0
  9819                           
  9820                           ; BSR set to: 0
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;incstack = 0
  9824  014FF2  0EBF               	movlw	191
  9825  014FF4  6F66               	movwf	??_tolower& (0+255),b
  9826  014FF6  0EFF               	movlw	255
  9827  014FF8  6F67               	movwf	(??_tolower+1)& (0+255),b
  9828  014FFA  C064  F068         	movff	tolower@c,??_tolower+2
  9829  014FFE  C065  F069         	movff	tolower@c+1,??_tolower+3
  9830  015002  5166               	movf	??_tolower& (0+255),w,b
  9831  015004  2768               	addwf	(??_tolower+2)& (0+255),f,b
  9832  015006  5167               	movf	(??_tolower+1)& (0+255),w,b
  9833  015008  2369               	addwfc	(??_tolower+3)& (0+255),f,b
  9834  01500A  5169               	movf	(??_tolower+3)& (0+255),w,b
  9835  01500C  E10A               	bnz	l2915
  9836  01500E  0E1A               	movlw	26
  9837  015010  5D68               	subwf	(??_tolower+2)& (0+255),w,b
  9838  015012  B0D8               	btfsc	status,0,c
  9839  015014  D006               	goto	l2915
  9840                           
  9841                           ; BSR set to: 0
  9842  015016  0E20               	movlw	32
  9843  015018  1164               	iorwf	tolower@c& (0+255),w,b
  9844  01501A  6F64               	movwf	?_tolower& (0+255),b
  9845  01501C  5165               	movf	(tolower@c+1)& (0+255),w,b
  9846  01501E  6F65               	movwf	(?_tolower+1)& (0+255),b
  9847  015020  0012               	return	
  9848  015022                     l2915:
  9849                           
  9850                           ; BSR set to: 0
  9851  015022  C064  F064         	movff	tolower@c,?_tolower
  9852  015026  C065  F065         	movff	tolower@c+1,?_tolower+1
  9853                           
  9854                           ; BSR set to: 0
  9855  01502A  0012               	return		;funcret
  9856  01502C                     __end_of_tolower:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function _isupper *****************
  9860 ;; Defined at:
  9861 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  c               2   31[COMRAM] int 
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;		None
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  2   31[COMRAM] int 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2, status,0
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 3F/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9877 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9878 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9879 ;;Total ram usage:        6 bytes
  9880 ;; Hardware stack levels used: 1
  9881 ;; Hardware stack levels required when called: 7
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_efgtoa
  9886 ;;		_vfpfcnvrt
  9887 ;;		_tolower
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text17
  9892  0150D6                     __ptext17:
  9893                           	callstack 0
  9894  0150D6                     _isupper:
  9895                           	callstack 19
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;incstack = 0
  9899  0150D6  0EBF               	movlw	191
  9900  0150D8  0100               	movlb	0	; () banked
  9901  0150DA  6F60               	movwf	??_isupper& (0+255),b
  9902  0150DC  0EFF               	movlw	255
  9903  0150DE  6F61               	movwf	(??_isupper+1)& (0+255),b
  9904  0150E0  C020  F062         	movff	isupper@c,??_isupper+2
  9905  0150E4  C021  F063         	movff	isupper@c+1,??_isupper+3
  9906  0150E8  5160               	movf	??_isupper& (0+255),w,b
  9907  0150EA  2762               	addwf	(??_isupper+2)& (0+255),f,b
  9908  0150EC  5161               	movf	(??_isupper+1)& (0+255),w,b
  9909  0150EE  2363               	addwfc	(??_isupper+3)& (0+255),f,b
  9910  0150F0  5163               	movf	(??_isupper+3)& (0+255),w,b
  9911  0150F2  E106               	bnz	u7830
  9912  0150F4  0E1A               	movlw	26
  9913  0150F6  5D62               	subwf	(??_isupper+2)& (0+255),w,b
  9914  0150F8  B0D8               	btfsc	status,0,c
  9915  0150FA  D002               	goto	u7830
  9916  0150FC  0E01               	movlw	1
  9917  0150FE  D001               	goto	u7840
  9918  015100                     u7830:
  9919  015100  0E00               	movlw	0
  9920  015102                     u7840:
  9921  015102  6E20               	movwf	?_isupper^0,c
  9922  015104  6A21               	clrf	(?_isupper+1)^0,c
  9923                           
  9924                           ; BSR set to: 0
  9925  015106  0012               	return		;funcret
  9926  015108                     __end_of_isupper:
  9927                           	callstack 0
  9928                           
  9929 ;; *************** function _strcpy *****************
  9930 ;; Defined at:
  9931 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  9934 ;;		 -> dbuf(80), 
  9935 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  9936 ;;		 -> STR_35(4), STR_34(4), STR_31(4), STR_30(4), 
  9937 ;;		 -> dbuf(80), 
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;  d               2    6[BANK0 ] PTR unsigned char 
  9940 ;;		 -> dbuf(80), 
  9941 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  9942 ;;		 -> STR_35(4), STR_34(4), STR_31(4), STR_30(4), 
  9943 ;;		 -> dbuf(80), 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  2    0[BANK0 ] PTR unsigned char 
  9946 ;; Registers used:
  9947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9948 ;; Tracked objects:
  9949 ;;		On entry : 3F/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9953 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9954 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9956 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9957 ;;Total ram usage:       10 bytes
  9958 ;; Hardware stack levels used: 1
  9959 ;; Hardware stack levels required when called: 7
  9960 ;; This function calls:
  9961 ;;		Nothing
  9962 ;; This function is called by:
  9963 ;;		_efgtoa
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           	psect	text18
  9968  01469C                     __ptext18:
  9969                           	callstack 0
  9970  01469C                     _strcpy:
  9971                           	callstack 19
  9972                           
  9973                           ; BSR set to: 0
  9974                           
  9975                           ; BSR set to: 0
  9976                           ;incstack = 0
  9977  01469C  C062  F064         	movff	strcpy@src,strcpy@s
  9978  0146A0  C063  F065         	movff	strcpy@src+1,strcpy@s+1
  9979  0146A4  C060  F066         	movff	strcpy@dest,strcpy@d
  9980  0146A8  C061  F067         	movff	strcpy@dest+1,strcpy@d+1
  9981  0146AC                     l9547:
  9982  0146AC  0100               	movlb	0	; () banked
  9983  0146AE  5164               	movf	strcpy@s& (0+255),w,b
  9984  0146B0  6E20               	movwf	??_strcpy^0,c
  9985  0146B2  5165               	movf	(strcpy@s+1)& (0+255),w,b
  9986  0146B4  6E21               	movwf	(??_strcpy+1)^0,c
  9987  0146B6  4B64               	infsnz	strcpy@s& (0+255),f,b
  9988  0146B8  2B65               	incf	(strcpy@s+1)& (0+255),f,b
  9989  0146BA  0060  F083  FFF6   	movff	??_strcpy,tblptrl
  9990  0146C0  0060  F087  FFF7   	movff	??_strcpy+1,tblptrh
  9991  0146C6  0E00               	movlw	low (__mediumconst shr (0+16))
  9992  0146C8  6EF8               	movwf	tblptru,c
  9993  0146CA  0060  F19B  FFD9   	movff	strcpy@d,fsr2l
  9994  0146D0  0060  F19F  FFDA   	movff	strcpy@d+1,fsr2h
  9995  0146D6  4B66               	infsnz	strcpy@d& (0+255),f,b
  9996  0146D8  2B67               	incf	(strcpy@d+1)& (0+255),f,b
  9997  0146DA  0E1F               	movlw	(high __ramtop+-1)
  9998  0146DC  64F7               	cpfsgt	tblptrh,c
  9999  0146DE  D003               	bra	u8777
 10000  0146E0  0008               	tblrd		*
 10001  0146E2  50F5               	movf	tablat,w,c
 10002  0146E4  D007               	bra	u8770
 10003  0146E6                     u8777:
 10004  0146E6  006F FFDB FFE1     	movff	tblptrl,fsr1l
 10005  0146EC  006F FFDF FFE2     	movff	tblptrh,fsr1h
 10006  0146F2  50E7               	movf	indf1,w,c
 10007  0146F4                     u8770:
 10008  0146F4  6EDF               	movwf	indf2,c
 10009  0146F6  50DF               	movf	indf2,w,c
 10010  0146F8  B4D8               	btfsc	status,2,c
 10011  0146FA  0012               	return	
 10012  0146FC  D7D7               	goto	l9547
 10013  0146FE                     __end_of_strcpy:
 10014                           	callstack 0
 10015                           
 10016 ;; *************** function _pad *****************
 10017 ;; Defined at:
 10018 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
 10021 ;;		 -> sprintf@f(11), NULL(0), 
 10022 ;;  buf             2   20[BANK0 ] PTR unsigned char 
 10023 ;;		 -> dbuf(80), 
 10024 ;;  p               2   22[BANK0 ] int 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  w               2   27[BANK0 ] int 
 10027 ;;  i               2   25[BANK0 ] int 
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  2   18[BANK0 ] int 
 10030 ;; Registers used:
 10031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10032 ;; Tracked objects:
 10033 ;;		On entry : 3F/0
 10034 ;;		On exit  : 3F/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10037 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10038 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10040 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10041 ;;Total ram usage:       11 bytes
 10042 ;; Hardware stack levels used: 1
 10043 ;; Hardware stack levels required when called: 11
 10044 ;; This function calls:
 10045 ;;		_fputc
 10046 ;;		_fputs
 10047 ;;		_strlen
 10048 ;; This function is called by:
 10049 ;;		_efgtoa
 10050 ;;		_utoa
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           	psect	text19
 10055  0142D8                     __ptext19:
 10056                           	callstack 0
 10057  0142D8                     _pad:
 10058                           	callstack 15
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 10062                           
 10063                           ;incstack = 0
 10064  0142D8  A02E               	btfss	_flags^0,0,c
 10065  0142DA  D00A               	goto	l9505
 10066                           
 10067                           ; BSR set to: 0
 10068                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 10069  0142DC  C074  F069         	movff	pad@buf,fputs@s
 10070  0142E0  C075  F06A         	movff	pad@buf+1,fputs@s+1
 10071  0142E4  C072  F06B         	movff	pad@fp,fputs@fp
 10072  0142E8  C073  F06C         	movff	pad@fp+1,fputs@fp+1
 10073  0142EC  ECE7  F0A2         	call	_fputs	;wreg free
 10074  0142F0                     l9505:
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 10078  0142F0  BF77               	btfsc	(pad@p+1)& (0+255),7,b
 10079  0142F2  D005               	goto	l9509
 10080                           
 10081                           ; BSR set to: 0
 10082  0142F4  C076  F07B         	movff	pad@p,pad@w
 10083  0142F8  C077  F07C         	movff	pad@p+1,pad@w+1
 10084  0142FC  D004               	goto	l2564
 10085  0142FE                     l9509:
 10086                           
 10087                           ; BSR set to: 0
 10088  0142FE  0E00               	movlw	0
 10089  014300  6F7C               	movwf	(pad@w+1)& (0+255),b
 10090  014302  0E00               	movlw	0
 10091  014304  6F7B               	movwf	pad@w& (0+255),b
 10092  014306                     l2564:
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10096  014306  0E00               	movlw	0
 10097  014308  6F7A               	movwf	(pad@i+1)& (0+255),b
 10098  01430A  0E00               	movlw	0
 10099  01430C  6F79               	movwf	pad@i& (0+255),b
 10100                           
 10101                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10102  01430E  D00C               	goto	l9515
 10103  014310                     l9511:
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 10107  014310  0E00               	movlw	0
 10108  014312  6F61               	movwf	(fputc@c+1)& (0+255),b
 10109  014314  0E20               	movlw	32
 10110  014316  6F60               	movwf	fputc@c& (0+255),b
 10111  014318  C072  F062         	movff	pad@fp,fputc@fp
 10112  01431C  C073  F063         	movff	pad@fp+1,fputc@fp+1
 10113  014320  EC69  F0A0         	call	_fputc	;wreg free
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10117  014324  4B79               	infsnz	pad@i& (0+255),f,b
 10118  014326  2B7A               	incf	(pad@i+1)& (0+255),f,b
 10119  014328                     l9515:
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10123  014328  517B               	movf	pad@w& (0+255),w,b
 10124  01432A  5D79               	subwf	pad@i& (0+255),w,b
 10125  01432C  517A               	movf	(pad@i+1)& (0+255),w,b
 10126  01432E  0A80               	xorlw	128
 10127  014330  6F78               	movwf	??_pad& (0+255),b
 10128  014332  517C               	movf	(pad@w+1)& (0+255),w,b
 10129  014334  0A80               	xorlw	128
 10130  014336  5978               	subwfb	??_pad& (0+255),w,b
 10131  014338  A0D8               	btfss	status,0,c
 10132  01433A  D7EA               	goto	l9511
 10133                           
 10134                           ; BSR set to: 0
 10135                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 10136  01433C  B02E               	btfsc	_flags^0,0,c
 10137  01433E  D00A               	goto	l9519
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 10141  014340  C074  F069         	movff	pad@buf,fputs@s
 10142  014344  C075  F06A         	movff	pad@buf+1,fputs@s+1
 10143  014348  C072  F06B         	movff	pad@fp,fputs@fp
 10144  01434C  C073  F06C         	movff	pad@fp+1,fputs@fp+1
 10145  014350  ECE7  F0A2         	call	_fputs	;wreg free
 10146  014354                     l9519:
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
 10150  014354  C074  F020         	movff	pad@buf,strlen@s
 10151  014358  C075  F021         	movff	pad@buf+1,strlen@s+1
 10152  01435C  EC33  F0A5         	call	_strlen	;wreg free
 10153  014360  517B               	movf	pad@w& (0+255),w,b
 10154  014362  2420               	addwf	?_strlen^0,w,c
 10155  014364  6F72               	movwf	?_pad& (0+255),b
 10156  014366  517C               	movf	(pad@w+1)& (0+255),w,b
 10157  014368  2021               	addwfc	(?_strlen+1)^0,w,c
 10158  01436A  6F73               	movwf	(?_pad+1)& (0+255),b
 10159                           
 10160                           ; BSR set to: 0
 10161  01436C  0012               	return		;funcret
 10162  01436E                     __end_of_pad:
 10163                           	callstack 0
 10164                           
 10165 ;; *************** function _floorf *****************
 10166 ;; Defined at:
 10167 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  x               4   43[BANK0 ] float 
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;  u               4   59[BANK0 ] struct .
 10172 ;;  m               4   53[BANK0 ] unsigned long 
 10173 ;;  e               2   57[BANK0 ] int 
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  4   43[BANK0 ] float 
 10176 ;; Registers used:
 10177 ;;		wreg, status,2, status,0
 10178 ;; Tracked objects:
 10179 ;;		On entry : 3F/0
 10180 ;;		On exit  : 3F/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10183 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10184 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10185 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10186 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10187 ;;Total ram usage:       20 bytes
 10188 ;; Hardware stack levels used: 1
 10189 ;; Hardware stack levels required when called: 7
 10190 ;; This function calls:
 10191 ;;		Nothing
 10192 ;; This function is called by:
 10193 ;;		_efgtoa
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           	psect	text20
 10198  012F08                     __ptext20:
 10199                           	callstack 0
 10200  012F08                     _floorf:
 10201                           	callstack 19
 10202                           
 10203                           ; BSR set to: 0
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;incstack = 0
 10207  012F08  C118  F09B         	movff	floorf@F526,floorf@u
 10208  012F0C  C119  F09C         	movff	floorf@F526+1,floorf@u+1
 10209  012F10  C11A  F09D         	movff	floorf@F526+2,floorf@u+2
 10210  012F14  C11B  F09E         	movff	floorf@F526+3,floorf@u+3
 10211  012F18  C08B  F09B         	movff	floorf@x,floorf@u
 10212  012F1C  C08C  F09C         	movff	floorf@x+1,floorf@u+1
 10213  012F20  C08D  F09D         	movff	floorf@x+2,floorf@u+2
 10214  012F24  C08E  F09E         	movff	floorf@x+3,floorf@u+3
 10215                           
 10216                           ; BSR set to: 0
 10217  012F28  0E81               	movlw	129
 10218  012F2A  6F8F               	movwf	??_floorf& (0+255),b
 10219  012F2C  0EFF               	movlw	255
 10220  012F2E  6F90               	movwf	(??_floorf+1)& (0+255),b
 10221  012F30  C09B  F091         	movff	floorf@u,??_floorf+2
 10222  012F34  C09C  F092         	movff	floorf@u+1,??_floorf+3
 10223  012F38  C09D  F093         	movff	floorf@u+2,??_floorf+4
 10224  012F3C  C09E  F094         	movff	floorf@u+3,??_floorf+5
 10225  012F40  0E18               	movlw	24
 10226  012F42  D005               	goto	u8800
 10227  012F44                     u8805:
 10228  012F44  90D8               	bcf	status,0,c
 10229  012F46  3394               	rrcf	(??_floorf+5)& (0+255),f,b
 10230  012F48  3393               	rrcf	(??_floorf+4)& (0+255),f,b
 10231  012F4A  3392               	rrcf	(??_floorf+3)& (0+255),f,b
 10232  012F4C  3391               	rrcf	(??_floorf+2)& (0+255),f,b
 10233  012F4E                     u8800:
 10234  012F4E  2EE8               	decfsz	wreg,f,c
 10235  012F50  D7F9               	goto	u8805
 10236  012F52  5191               	movf	(??_floorf+2)& (0+255),w,b
 10237  012F54  258F               	addwf	??_floorf& (0+255),w,b
 10238  012F56  6F99               	movwf	floorf@e& (0+255),b
 10239  012F58  0E00               	movlw	0
 10240  012F5A  2190               	addwfc	(??_floorf+1)& (0+255),w,b
 10241  012F5C  6F9A               	movwf	(floorf@e+1)& (0+255),b
 10242  012F5E  BF9A               	btfsc	(floorf@e+1)& (0+255),7,b
 10243  012F60  D00F               	goto	l9565
 10244  012F62  519A               	movf	(floorf@e+1)& (0+255),w,b
 10245  012F64  E104               	bnz	u8810
 10246  012F66  0E17               	movlw	23
 10247  012F68  5D99               	subwf	floorf@e& (0+255),w,b
 10248  012F6A  A0D8               	btfss	status,0,c
 10249  012F6C  D009               	goto	l9565
 10250  012F6E                     u8810:
 10251                           
 10252                           ; BSR set to: 0
 10253  012F6E  C08B  F08B         	movff	floorf@x,?_floorf
 10254  012F72  C08C  F08C         	movff	floorf@x+1,?_floorf+1
 10255  012F76  C08D  F08D         	movff	floorf@x+2,?_floorf+2
 10256  012F7A  C08E  F08E         	movff	floorf@x+3,?_floorf+3
 10257  012F7E  0012               	return	
 10258  012F80                     l9565:
 10259                           
 10260                           ; BSR set to: 0
 10261  012F80  BF9A               	btfsc	(floorf@e+1)& (0+255),7,b
 10262  012F82  D05C               	goto	l9575
 10263                           
 10264                           ; BSR set to: 0
 10265  012F84  C099  F08F         	movff	floorf@e,??_floorf
 10266  012F88  0EFF               	movlw	255
 10267  012F8A  6F90               	movwf	(??_floorf+1)& (0+255),b
 10268  012F8C  0EFF               	movlw	255
 10269  012F8E  6F91               	movwf	(??_floorf+2)& (0+255),b
 10270  012F90  0E7F               	movlw	127
 10271  012F92  6F92               	movwf	(??_floorf+3)& (0+255),b
 10272  012F94  0E00               	movlw	0
 10273  012F96  6F93               	movwf	(??_floorf+4)& (0+255),b
 10274  012F98                     u8835:
 10275  012F98  678F               	tstfsz	??_floorf& (0+255),b
 10276  012F9A  D001               	goto	u8836
 10277  012F9C  D007               	goto	u8837
 10278  012F9E                     u8836:
 10279  012F9E  3593               	rlcf	(??_floorf+4)& (0+255),w,b
 10280  012FA0  3393               	rrcf	(??_floorf+4)& (0+255),f,b
 10281  012FA2  3392               	rrcf	(??_floorf+3)& (0+255),f,b
 10282  012FA4  3391               	rrcf	(??_floorf+2)& (0+255),f,b
 10283  012FA6  3390               	rrcf	(??_floorf+1)& (0+255),f,b
 10284  012FA8  2F8F               	decfsz	??_floorf& (0+255),f,b
 10285  012FAA  D7F6               	goto	u8835
 10286  012FAC                     u8837:
 10287  012FAC  C090  F095         	movff	??_floorf+1,floorf@m
 10288  012FB0  C091  F096         	movff	??_floorf+2,floorf@m+1
 10289  012FB4  C092  F097         	movff	??_floorf+3,floorf@m+2
 10290  012FB8  C093  F098         	movff	??_floorf+4,floorf@m+3
 10291  012FBC  0100               	movlb	0	; () banked
 10292  012FBE  5195               	movf	floorf@m& (0+255),w,b
 10293  012FC0  159B               	andwf	floorf@u& (0+255),w,b
 10294  012FC2  6F8F               	movwf	??_floorf& (0+255),b
 10295  012FC4  5196               	movf	(floorf@m+1)& (0+255),w,b
 10296  012FC6  159C               	andwf	(floorf@u+1)& (0+255),w,b
 10297  012FC8  6F90               	movwf	(??_floorf+1)& (0+255),b
 10298  012FCA  5197               	movf	(floorf@m+2)& (0+255),w,b
 10299  012FCC  159D               	andwf	(floorf@u+2)& (0+255),w,b
 10300  012FCE  6F91               	movwf	(??_floorf+2)& (0+255),b
 10301  012FD0  5198               	movf	(floorf@m+3)& (0+255),w,b
 10302  012FD2  159E               	andwf	(floorf@u+3)& (0+255),w,b
 10303  012FD4  6F92               	movwf	(??_floorf+3)& (0+255),b
 10304  012FD6  518F               	movf	??_floorf& (0+255),w,b
 10305  012FD8  1190               	iorwf	(??_floorf+1)& (0+255),w,b
 10306  012FDA  1191               	iorwf	(??_floorf+2)& (0+255),w,b
 10307  012FDC  1192               	iorwf	(??_floorf+3)& (0+255),w,b
 10308  012FDE  B4D8               	btfsc	status,2,c
 10309  012FE0  D7C6               	goto	u8810
 10310                           
 10311                           ; BSR set to: 0
 10312  012FE2  C09B  F08F         	movff	floorf@u,??_floorf
 10313  012FE6  C09C  F090         	movff	floorf@u+1,??_floorf+1
 10314  012FEA  C09D  F091         	movff	floorf@u+2,??_floorf+2
 10315  012FEE  C09E  F092         	movff	floorf@u+3,??_floorf+3
 10316  012FF2  0E20               	movlw	32
 10317  012FF4  D005               	goto	u8850
 10318  012FF6                     u8855:
 10319  012FF6  90D8               	bcf	status,0,c
 10320  012FF8  3392               	rrcf	(??_floorf+3)& (0+255),f,b
 10321  012FFA  3391               	rrcf	(??_floorf+2)& (0+255),f,b
 10322  012FFC  3390               	rrcf	(??_floorf+1)& (0+255),f,b
 10323  012FFE  338F               	rrcf	??_floorf& (0+255),f,b
 10324  013000                     u8850:
 10325  013000  2EE8               	decfsz	wreg,f,c
 10326  013002  D7F9               	goto	u8855
 10327  013004  518F               	movf	??_floorf& (0+255),w,b
 10328  013006  B4D8               	btfsc	status,2,c
 10329  013008  D008               	goto	l2794
 10330                           
 10331                           ; BSR set to: 0
 10332  01300A  5195               	movf	floorf@m& (0+255),w,b
 10333  01300C  279B               	addwf	floorf@u& (0+255),f,b
 10334  01300E  5196               	movf	(floorf@m+1)& (0+255),w,b
 10335  013010  239C               	addwfc	(floorf@u+1)& (0+255),f,b
 10336  013012  5197               	movf	(floorf@m+2)& (0+255),w,b
 10337  013014  239D               	addwfc	(floorf@u+2)& (0+255),f,b
 10338  013016  5198               	movf	(floorf@m+3)& (0+255),w,b
 10339  013018  239E               	addwfc	(floorf@u+3)& (0+255),f,b
 10340  01301A                     l2794:
 10341                           
 10342                           ; BSR set to: 0
 10343  01301A  1D95               	comf	floorf@m& (0+255),w,b
 10344  01301C  6F8F               	movwf	??_floorf& (0+255),b
 10345  01301E  1D96               	comf	(floorf@m+1)& (0+255),w,b
 10346  013020  6F90               	movwf	(??_floorf+1)& (0+255),b
 10347  013022  1D97               	comf	(floorf@m+2)& (0+255),w,b
 10348  013024  6F91               	movwf	(??_floorf+2)& (0+255),b
 10349  013026  1D98               	comf	(floorf@m+3)& (0+255),w,b
 10350  013028  6F92               	movwf	(??_floorf+3)& (0+255),b
 10351  01302A  518F               	movf	??_floorf& (0+255),w,b
 10352  01302C  179B               	andwf	floorf@u& (0+255),f,b
 10353  01302E  5190               	movf	(??_floorf+1)& (0+255),w,b
 10354  013030  179C               	andwf	(floorf@u+1)& (0+255),f,b
 10355  013032  5191               	movf	(??_floorf+2)& (0+255),w,b
 10356  013034  179D               	andwf	(floorf@u+2)& (0+255),f,b
 10357  013036  5192               	movf	(??_floorf+3)& (0+255),w,b
 10358  013038  179E               	andwf	(floorf@u+3)& (0+255),f,b
 10359  01303A  D032               	goto	l9583
 10360  01303C                     l9575:
 10361                           
 10362                           ; BSR set to: 0
 10363  01303C  C09B  F08F         	movff	floorf@u,??_floorf
 10364  013040  C09C  F090         	movff	floorf@u+1,??_floorf+1
 10365  013044  C09D  F091         	movff	floorf@u+2,??_floorf+2
 10366  013048  C09E  F092         	movff	floorf@u+3,??_floorf+3
 10367  01304C  0E20               	movlw	32
 10368  01304E  D005               	goto	u8870
 10369  013050                     u8875:
 10370  013050  90D8               	bcf	status,0,c
 10371  013052  3392               	rrcf	(??_floorf+3)& (0+255),f,b
 10372  013054  3391               	rrcf	(??_floorf+2)& (0+255),f,b
 10373  013056  3390               	rrcf	(??_floorf+1)& (0+255),f,b
 10374  013058  338F               	rrcf	??_floorf& (0+255),f,b
 10375  01305A                     u8870:
 10376  01305A  2EE8               	decfsz	wreg,f,c
 10377  01305C  D7F9               	goto	u8875
 10378  01305E  678F               	tstfsz	??_floorf& (0+255),b
 10379  013060  D008               	goto	l9579
 10380                           
 10381                           ; BSR set to: 0
 10382  013062  0E00               	movlw	0
 10383  013064  6F9B               	movwf	floorf@u& (0+255),b
 10384  013066  0E00               	movlw	0
 10385  013068  6F9C               	movwf	(floorf@u+1)& (0+255),b
 10386  01306A  0E00               	movlw	0
 10387  01306C  6F9D               	movwf	(floorf@u+2)& (0+255),b
 10388  01306E  0E00               	movlw	0
 10389  013070  D016               	goto	L8
 10390  013072                     l9579:
 10391                           
 10392                           ; BSR set to: 0
 10393  013072  90D8               	bcf	status,0,c
 10394  013074  359B               	rlcf	floorf@u& (0+255),w,b
 10395  013076  6F8F               	movwf	??_floorf& (0+255),b
 10396  013078  359C               	rlcf	(floorf@u+1)& (0+255),w,b
 10397  01307A  6F90               	movwf	(??_floorf+1)& (0+255),b
 10398  01307C  359D               	rlcf	(floorf@u+2)& (0+255),w,b
 10399  01307E  6F91               	movwf	(??_floorf+2)& (0+255),b
 10400  013080  359E               	rlcf	(floorf@u+3)& (0+255),w,b
 10401  013082  6F92               	movwf	(??_floorf+3)& (0+255),b
 10402  013084  518F               	movf	??_floorf& (0+255),w,b
 10403  013086  1190               	iorwf	(??_floorf+1)& (0+255),w,b
 10404  013088  1191               	iorwf	(??_floorf+2)& (0+255),w,b
 10405  01308A  1192               	iorwf	(??_floorf+3)& (0+255),w,b
 10406  01308C  B4D8               	btfsc	status,2,c
 10407  01308E  D008               	goto	l9583
 10408                           
 10409                           ; BSR set to: 0
 10410  013090  0E00               	movlw	0
 10411  013092  6F9B               	movwf	floorf@u& (0+255),b
 10412  013094  0E00               	movlw	0
 10413  013096  6F9C               	movwf	(floorf@u+1)& (0+255),b
 10414  013098  0E80               	movlw	128
 10415  01309A  6F9D               	movwf	(floorf@u+2)& (0+255),b
 10416  01309C  0EBF               	movlw	191
 10417  01309E                     L8:
 10418  01309E  6F9E               	movwf	(floorf@u+3)& (0+255),b
 10419  0130A0                     l9583:
 10420                           
 10421                           ; BSR set to: 0
 10422  0130A0  C09B  F08B         	movff	floorf@u,?_floorf
 10423  0130A4  C09C  F08C         	movff	floorf@u+1,?_floorf+1
 10424  0130A8  C09D  F08D         	movff	floorf@u+2,?_floorf+2
 10425  0130AC  C09E  F08E         	movff	floorf@u+3,?_floorf+3
 10426                           
 10427                           ; BSR set to: 0
 10428  0130B0  0012               	return		;funcret
 10429  0130B2                     __end_of_floorf:
 10430                           	callstack 0
 10431                           
 10432 ;; *************** function ___fpclassifyf *****************
 10433 ;; Defined at:
 10434 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;  x               4    0[BANK0 ] float 
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;  u               4   10[BANK0 ] struct .
 10439 ;;  e               2    8[BANK0 ] int 
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  2    0[BANK0 ] int 
 10442 ;; Registers used:
 10443 ;;		wreg, status,2, status,0
 10444 ;; Tracked objects:
 10445 ;;		On entry : 3F/0
 10446 ;;		On exit  : 3F/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10449 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10450 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10451 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10452 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10453 ;;Total ram usage:       14 bytes
 10454 ;; Hardware stack levels used: 1
 10455 ;; Hardware stack levels required when called: 7
 10456 ;; This function calls:
 10457 ;;		Nothing
 10458 ;; This function is called by:
 10459 ;;		_efgtoa
 10460 ;; This function uses a non-reentrant model
 10461 ;;
 10462                           
 10463                           	psect	text21
 10464  013DCE                     __ptext21:
 10465                           	callstack 0
 10466  013DCE                     ___fpclassifyf:
 10467                           	callstack 19
 10468                           
 10469                           ; BSR set to: 0
 10470                           
 10471                           ; BSR set to: 0
 10472                           ;incstack = 0
 10473  013DCE  C11C  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
 10474  013DD2  C11D  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 10475  013DD6  C11E  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 10476  013DDA  C11F  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 10477  013DDE  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
 10478  013DE2  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10479  013DE6  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10480  013DEA  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10481                           
 10482                           ; BSR set to: 0
 10483  013DEE  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
 10484  013DF2  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10485  013DF6  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10486  013DFA  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10487  013DFE  0E18               	movlw	24
 10488  013E00  D005               	goto	u8700
 10489  013E02                     u8705:
 10490  013E02  90D8               	bcf	status,0,c
 10491  013E04  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
 10492  013E06  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
 10493  013E08  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
 10494  013E0A  3364               	rrcf	??___fpclassifyf& (0+255),f,b
 10495  013E0C                     u8700:
 10496  013E0C  2EE8               	decfsz	wreg,f,c
 10497  013E0E  D7F9               	goto	u8705
 10498  013E10  5164               	movf	??___fpclassifyf& (0+255),w,b
 10499  013E12  6F68               	movwf	___fpclassifyf@e& (0+255),b
 10500  013E14  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
 10501  013E16  5168               	movf	___fpclassifyf@e& (0+255),w,b
 10502  013E18  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 10503  013E1A  A4D8               	btfss	status,2,c
 10504  013E1C  D019               	goto	l9535
 10505                           
 10506                           ; BSR set to: 0
 10507  013E1E  90D8               	bcf	status,0,c
 10508  013E20  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
 10509  013E22  6F64               	movwf	??___fpclassifyf& (0+255),b
 10510  013E24  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
 10511  013E26  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
 10512  013E28  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
 10513  013E2A  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
 10514  013E2C  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
 10515  013E2E  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
 10516  013E30  5164               	movf	??___fpclassifyf& (0+255),w,b
 10517  013E32  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 10518  013E34  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 10519  013E36  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 10520  013E38  A4D8               	btfss	status,2,c
 10521  013E3A  D005               	goto	l9531
 10522                           
 10523                           ; BSR set to: 0
 10524  013E3C  0E00               	movlw	0
 10525  013E3E  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
 10526  013E40  0E02               	movlw	2
 10527  013E42  6F60               	movwf	?___fpclassifyf& (0+255),b
 10528  013E44  0012               	return	
 10529  013E46                     l9531:
 10530                           
 10531                           ; BSR set to: 0
 10532  013E46  0E00               	movlw	0
 10533  013E48  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
 10534  013E4A  0E03               	movlw	3
 10535  013E4C  6F60               	movwf	?___fpclassifyf& (0+255),b
 10536  013E4E  0012               	return	
 10537  013E50                     l9535:
 10538                           
 10539                           ; BSR set to: 0
 10540  013E50  2968               	incf	___fpclassifyf@e& (0+255),w,b
 10541  013E52  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 10542  013E54  A4D8               	btfss	status,2,c
 10543  013E56  D01C               	goto	l9541
 10544                           
 10545                           ; BSR set to: 0
 10546  013E58  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
 10547  013E5C  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10548  013E60  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10549  013E64  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10550  013E68  0E09               	movlw	9
 10551  013E6A                     u8745:
 10552  013E6A  90D8               	bcf	status,0,c
 10553  013E6C  3764               	rlcf	??___fpclassifyf& (0+255),f,b
 10554  013E6E  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
 10555  013E70  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
 10556  013E72  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
 10557  013E74  2EE8               	decfsz	wreg,f,c
 10558  013E76  D7F9               	goto	u8745
 10559  013E78  5164               	movf	??___fpclassifyf& (0+255),w,b
 10560  013E7A  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 10561  013E7C  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 10562  013E7E  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 10563  013E80  A4D8               	btfss	status,2,c
 10564  013E82  D002               	goto	u8750
 10565  013E84  0E01               	movlw	1
 10566  013E86  D001               	goto	u8760
 10567  013E88                     u8750:
 10568  013E88  0E00               	movlw	0
 10569  013E8A                     u8760:
 10570  013E8A  6F60               	movwf	?___fpclassifyf& (0+255),b
 10571  013E8C  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
 10572  013E8E  0012               	return	
 10573  013E90                     l9541:
 10574                           
 10575                           ; BSR set to: 0
 10576  013E90  0E00               	movlw	0
 10577  013E92  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
 10578  013E94  0E04               	movlw	4
 10579  013E96  6F60               	movwf	?___fpclassifyf& (0+255),b
 10580                           
 10581                           ; BSR set to: 0
 10582  013E98  0012               	return		;funcret
 10583  013E9A                     __end_of___fpclassifyf:
 10584                           	callstack 0
 10585                           
 10586 ;; *************** function ___fltol *****************
 10587 ;; Defined at:
 10588 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;  f1              4    0[BANK0 ] int 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  exp1            1   32[COMRAM] unsigned char 
 10593 ;;  sign1           1   31[COMRAM] unsigned char 
 10594 ;; Return value:  Size  Location     Type
 10595 ;;                  4    0[BANK0 ] long 
 10596 ;; Registers used:
 10597 ;;		wreg, status,2, status,0
 10598 ;; Tracked objects:
 10599 ;;		On entry : 3F/0
 10600 ;;		On exit  : 3F/0
 10601 ;;		Unchanged: 0/0
 10602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10603 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10605 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10606 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10607 ;;Total ram usage:       10 bytes
 10608 ;; Hardware stack levels used: 1
 10609 ;; Hardware stack levels required when called: 7
 10610 ;; This function calls:
 10611 ;;		Nothing
 10612 ;; This function is called by:
 10613 ;;		_efgtoa
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           	psect	text22
 10618  014018                     __ptext22:
 10619                           	callstack 0
 10620  014018                     ___fltol:
 10621                           	callstack 19
 10622                           
 10623                           ; BSR set to: 0
 10624                           
 10625                           ; BSR set to: 0
 10626                           ;incstack = 0
 10627  014018  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10628  01401A  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10629  01401C  6E21               	movwf	___fltol@exp1^0,c
 10630  01401E  5021               	movf	___fltol@exp1^0,w,c
 10631  014020  A4D8               	btfss	status,2,c
 10632  014022  D009               	goto	l9425
 10633  014024                     u8520:
 10634                           
 10635                           ; BSR set to: 0
 10636  014024  0E00               	movlw	0
 10637  014026  6F60               	movwf	?___fltol& (0+255),b
 10638  014028  0E00               	movlw	0
 10639  01402A  6F61               	movwf	(?___fltol+1)& (0+255),b
 10640  01402C  0E00               	movlw	0
 10641  01402E  6F62               	movwf	(?___fltol+2)& (0+255),b
 10642  014030  0E00               	movlw	0
 10643  014032  6F63               	movwf	(?___fltol+3)& (0+255),b
 10644  014034  0012               	return	
 10645  014036                     l9425:
 10646                           
 10647                           ; BSR set to: 0
 10648  014036  C060  F064         	movff	___fltol@f1,??___fltol
 10649  01403A  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 10650  01403E  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 10651  014042  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 10652  014046  0E20               	movlw	32
 10653  014048  D005               	goto	u8530
 10654  01404A                     u8535:
 10655  01404A  90D8               	bcf	status,0,c
 10656  01404C  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 10657  01404E  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 10658  014050  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 10659  014052  3364               	rrcf	??___fltol& (0+255),f,b
 10660  014054                     u8530:
 10661  014054  2EE8               	decfsz	wreg,f,c
 10662  014056  D7F9               	goto	u8535
 10663  014058  5164               	movf	??___fltol& (0+255),w,b
 10664  01405A  6E20               	movwf	___fltol@sign1^0,c
 10665                           
 10666                           ; BSR set to: 0
 10667  01405C  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 10668                           
 10669                           ; BSR set to: 0
 10670  01405E  0EFF               	movlw	255
 10671  014060  1760               	andwf	___fltol@f1& (0+255),f,b
 10672  014062  0EFF               	movlw	255
 10673  014064  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 10674  014066  0EFF               	movlw	255
 10675  014068  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 10676  01406A  0E00               	movlw	0
 10677  01406C  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 10678                           
 10679                           ; BSR set to: 0
 10680  01406E  0E96               	movlw	150
 10681  014070  5E21               	subwf	___fltol@exp1^0,f,c
 10682                           
 10683                           ; BSR set to: 0
 10684  014072  AE21               	btfss	___fltol@exp1^0,7,c
 10685  014074  D00D               	goto	l9445
 10686                           
 10687                           ; BSR set to: 0
 10688  014076  5021               	movf	___fltol@exp1^0,w,c
 10689  014078  0A80               	xorlw	128
 10690  01407A  0F97               	addlw	151
 10691  01407C  A0D8               	btfss	status,0,c
 10692  01407E  D7D2               	goto	u8520
 10693  014080                     l9441:
 10694                           
 10695                           ; BSR set to: 0
 10696  014080  90D8               	bcf	status,0,c
 10697  014082  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10698  014084  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10699  014086  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10700  014088  3360               	rrcf	___fltol@f1& (0+255),f,b
 10701                           
 10702                           ; BSR set to: 0
 10703  01408A  3E21               	incfsz	___fltol@exp1^0,f,c
 10704  01408C  D7F9               	goto	l9441
 10705  01408E  D00D               	goto	u8570
 10706  014090                     l9445:
 10707                           
 10708                           ; BSR set to: 0
 10709  014090  0E1F               	movlw	31
 10710  014092  6421               	cpfsgt	___fltol@exp1^0,c
 10711  014094  D007               	goto	l9453
 10712  014096  D7C6               	goto	u8520
 10713  014098                     l9451:
 10714                           
 10715                           ; BSR set to: 0
 10716  014098  90D8               	bcf	status,0,c
 10717  01409A  3760               	rlcf	___fltol@f1& (0+255),f,b
 10718  01409C  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10719  01409E  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10720  0140A0  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10721  0140A2  0621               	decf	___fltol@exp1^0,f,c
 10722  0140A4                     l9453:
 10723                           
 10724                           ; BSR set to: 0
 10725  0140A4  5021               	movf	___fltol@exp1^0,w,c
 10726  0140A6  A4D8               	btfss	status,2,c
 10727  0140A8  D7F7               	goto	l9451
 10728  0140AA                     u8570:
 10729                           
 10730                           ; BSR set to: 0
 10731  0140AA  5020               	movf	___fltol@sign1^0,w,c
 10732  0140AC  B4D8               	btfsc	status,2,c
 10733  0140AE  D008               	goto	l9459
 10734                           
 10735                           ; BSR set to: 0
 10736  0140B0  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 10737  0140B2  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 10738  0140B4  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 10739  0140B6  6D60               	negf	___fltol@f1& (0+255),b
 10740  0140B8  0E00               	movlw	0
 10741  0140BA  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10742  0140BC  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10743  0140BE  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10744  0140C0                     l9459:
 10745                           
 10746                           ; BSR set to: 0
 10747  0140C0  C060  F060         	movff	___fltol@f1,?___fltol
 10748  0140C4  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 10749  0140C8  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 10750  0140CC  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 10751                           
 10752                           ; BSR set to: 0
 10753  0140D0  0012               	return		;funcret
 10754  0140D2                     __end_of___fltol:
 10755                           	callstack 0
 10756                           
 10757 ;; *************** function ___flsub *****************
 10758 ;; Defined at:
 10759 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;  b               4   59[BANK0 ] long 
 10762 ;;  a               4   63[BANK0 ] long 
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;		None
 10765 ;; Return value:  Size  Location     Type
 10766 ;;                  4   59[BANK0 ] long 
 10767 ;; Registers used:
 10768 ;;		wreg, status,2, status,0, cstack
 10769 ;; Tracked objects:
 10770 ;;		On entry : 3F/0
 10771 ;;		On exit  : 3F/0
 10772 ;;		Unchanged: 0/0
 10773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10774 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10777 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10778 ;;Total ram usage:        8 bytes
 10779 ;; Hardware stack levels used: 1
 10780 ;; Hardware stack levels required when called: 8
 10781 ;; This function calls:
 10782 ;;		___fladd
 10783 ;; This function is called by:
 10784 ;;		_ps_math
 10785 ;;		_efgtoa
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           	psect	text23
 10790  014C70                     __ptext23:
 10791                           	callstack 0
 10792  014C70                     ___flsub:
 10793                           	callstack 18
 10794                           
 10795                           ; BSR set to: 0
 10796                           
 10797                           ; BSR set to: 0
 10798                           ;incstack = 0
 10799  014C70  0E00               	movlw	0
 10800  014C72  1B9F               	xorwf	___flsub@a& (0+255),f,b
 10801  014C74  0E00               	movlw	0
 10802  014C76  1BA0               	xorwf	(___flsub@a+1)& (0+255),f,b
 10803  014C78  0E00               	movlw	0
 10804  014C7A  1BA1               	xorwf	(___flsub@a+2)& (0+255),f,b
 10805  014C7C  0E80               	movlw	128
 10806  014C7E  1BA2               	xorwf	(___flsub@a+3)& (0+255),f,b
 10807                           
 10808                           ; BSR set to: 0
 10809  014C80  C09B  F08B         	movff	___flsub@b,___fladd@b
 10810  014C84  C09C  F08C         	movff	___flsub@b+1,___fladd@b+1
 10811  014C88  C09D  F08D         	movff	___flsub@b+2,___fladd@b+2
 10812  014C8C  C09E  F08E         	movff	___flsub@b+3,___fladd@b+3
 10813  014C90  C09F  F08F         	movff	___flsub@a,___fladd@a
 10814  014C94  C0A0  F090         	movff	___flsub@a+1,___fladd@a+1
 10815  014C98  C0A1  F091         	movff	___flsub@a+2,___fladd@a+2
 10816  014C9C  C0A2  F092         	movff	___flsub@a+3,___fladd@a+3
 10817  014CA0  EC99  F091         	call	___fladd	;wreg free
 10818  014CA4  C08B  F09B         	movff	?___fladd,?___flsub
 10819  014CA8  C08C  F09C         	movff	?___fladd+1,?___flsub+1
 10820  014CAC  C08D  F09D         	movff	?___fladd+2,?___flsub+2
 10821  014CB0  C08E  F09E         	movff	?___fladd+3,?___flsub+3
 10822                           
 10823                           ; BSR set to: 0
 10824  014CB4  0012               	return		;funcret
 10825  014CB6                     __end_of___flsub:
 10826                           	callstack 0
 10827                           
 10828 ;; *************** function ___fladd *****************
 10829 ;; Defined at:
 10830 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  b               4   43[BANK0 ] long 
 10833 ;;  a               4   47[BANK0 ] long 
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;  grs             1   58[BANK0 ] unsigned char 
 10836 ;;  bexp            1   57[BANK0 ] unsigned char 
 10837 ;;  aexp            1   56[BANK0 ] unsigned char 
 10838 ;;  signs           1   55[BANK0 ] unsigned char 
 10839 ;; Return value:  Size  Location     Type
 10840 ;;                  4   43[BANK0 ] unsigned char 
 10841 ;; Registers used:
 10842 ;;		wreg, status,2, status,0
 10843 ;; Tracked objects:
 10844 ;;		On entry : 3F/0
 10845 ;;		On exit  : 3F/0
 10846 ;;		Unchanged: 0/0
 10847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10848 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10849 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10850 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10851 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10852 ;;Total ram usage:       16 bytes
 10853 ;; Hardware stack levels used: 1
 10854 ;; Hardware stack levels required when called: 7
 10855 ;; This function calls:
 10856 ;;		Nothing
 10857 ;; This function is called by:
 10858 ;;		_ps_math
 10859 ;;		___flsub
 10860 ;;		_efgtoa
 10861 ;;		_sqrtf
 10862 ;; This function uses a non-reentrant model
 10863 ;;
 10864                           
 10865                           	psect	text24
 10866  012332                     __ptext24:
 10867                           	callstack 0
 10868  012332                     ___fladd:
 10869                           	callstack 18
 10870                           
 10871                           ; BSR set to: 0
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;incstack = 0
 10875  012332  518E               	movf	(___fladd@b+3)& (0+255),w,b
 10876  012334  0B80               	andlw	128
 10877  012336  6F97               	movwf	___fladd@signs& (0+255),b
 10878  012338  518E               	movf	(___fladd@b+3)& (0+255),w,b
 10879  01233A  258E               	addwf	(___fladd@b+3)& (0+255),w,b
 10880  01233C  6F99               	movwf	___fladd@bexp& (0+255),b
 10881                           
 10882                           ; BSR set to: 0
 10883  01233E  BF8D               	btfsc	(___fladd@b+2)& (0+255),7,b
 10884                           
 10885                           ; BSR set to: 0
 10886  012340  8199               	bsf	___fladd@bexp& (0+255),0,b
 10887                           
 10888                           ; BSR set to: 0
 10889  012342  5199               	movf	___fladd@bexp& (0+255),w,b
 10890  012344  B4D8               	btfsc	status,2,c
 10891  012346  D00D               	goto	l8783
 10892                           
 10893                           ; BSR set to: 0
 10894  012348  2999               	incf	___fladd@bexp& (0+255),w,b
 10895  01234A  A4D8               	btfss	status,2,c
 10896  01234C  D008               	goto	l8779
 10897                           
 10898                           ; BSR set to: 0
 10899  01234E  0E00               	movlw	0
 10900  012350  6F8B               	movwf	___fladd@b& (0+255),b
 10901  012352  0E00               	movlw	0
 10902  012354  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 10903  012356  0E00               	movlw	0
 10904  012358  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 10905  01235A  0E00               	movlw	0
 10906  01235C  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 10907  01235E                     l8779:
 10908                           
 10909                           ; BSR set to: 0
 10910  01235E  8F8D               	bsf	(___fladd@b+2)& (0+255),7,b
 10911  012360  D006               	goto	L9
 10912  012362                     l8783:
 10913                           
 10914                           ; BSR set to: 0
 10915  012362  0E00               	movlw	0
 10916  012364  6F8B               	movwf	___fladd@b& (0+255),b
 10917  012366  0E00               	movlw	0
 10918  012368  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 10919  01236A  0E00               	movlw	0
 10920  01236C  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 10921  01236E                     L9:
 10922  01236E  0E00               	movlw	0
 10923  012370  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 10924                           
 10925                           ; BSR set to: 0
 10926  012372  5192               	movf	(___fladd@a+3)& (0+255),w,b
 10927  012374  0B80               	andlw	128
 10928  012376  6F98               	movwf	___fladd@aexp& (0+255),b
 10929                           
 10930                           ; BSR set to: 0
 10931  012378  5197               	movf	___fladd@signs& (0+255),w,b
 10932  01237A  1998               	xorwf	___fladd@aexp& (0+255),w,b
 10933  01237C  A4D8               	btfss	status,2,c
 10934                           
 10935                           ; BSR set to: 0
 10936  01237E  8D97               	bsf	___fladd@signs& (0+255),6,b
 10937                           
 10938                           ; BSR set to: 0
 10939  012380  5192               	movf	(___fladd@a+3)& (0+255),w,b
 10940  012382  2592               	addwf	(___fladd@a+3)& (0+255),w,b
 10941  012384  6F98               	movwf	___fladd@aexp& (0+255),b
 10942                           
 10943                           ; BSR set to: 0
 10944  012386  BF91               	btfsc	(___fladd@a+2)& (0+255),7,b
 10945                           
 10946                           ; BSR set to: 0
 10947  012388  8198               	bsf	___fladd@aexp& (0+255),0,b
 10948                           
 10949                           ; BSR set to: 0
 10950  01238A  5198               	movf	___fladd@aexp& (0+255),w,b
 10951  01238C  B4D8               	btfsc	status,2,c
 10952  01238E  D00D               	goto	l8807
 10953                           
 10954                           ; BSR set to: 0
 10955  012390  2998               	incf	___fladd@aexp& (0+255),w,b
 10956  012392  A4D8               	btfss	status,2,c
 10957  012394  D008               	goto	l8803
 10958                           
 10959                           ; BSR set to: 0
 10960  012396  0E00               	movlw	0
 10961  012398  6F8F               	movwf	___fladd@a& (0+255),b
 10962  01239A  0E00               	movlw	0
 10963  01239C  6F90               	movwf	(___fladd@a+1)& (0+255),b
 10964  01239E  0E00               	movlw	0
 10965  0123A0  6F91               	movwf	(___fladd@a+2)& (0+255),b
 10966  0123A2  0E00               	movlw	0
 10967  0123A4  6F92               	movwf	(___fladd@a+3)& (0+255),b
 10968  0123A6                     l8803:
 10969                           
 10970                           ; BSR set to: 0
 10971  0123A6  8F91               	bsf	(___fladd@a+2)& (0+255),7,b
 10972  0123A8  D006               	goto	L10
 10973  0123AA                     l8807:
 10974                           
 10975                           ; BSR set to: 0
 10976  0123AA  0E00               	movlw	0
 10977  0123AC  6F8F               	movwf	___fladd@a& (0+255),b
 10978  0123AE  0E00               	movlw	0
 10979  0123B0  6F90               	movwf	(___fladd@a+1)& (0+255),b
 10980  0123B2  0E00               	movlw	0
 10981  0123B4  6F91               	movwf	(___fladd@a+2)& (0+255),b
 10982  0123B6                     L10:
 10983  0123B6  0E00               	movlw	0
 10984  0123B8  6F92               	movwf	(___fladd@a+3)& (0+255),b
 10985                           
 10986                           ; BSR set to: 0
 10987  0123BA  5199               	movf	___fladd@bexp& (0+255),w,b
 10988  0123BC  5D98               	subwf	___fladd@aexp& (0+255),w,b
 10989  0123BE  B0D8               	btfsc	status,0,c
 10990  0123C0  D022               	goto	l8845
 10991                           
 10992                           ; BSR set to: 0
 10993  0123C2  AD97               	btfss	___fladd@signs& (0+255),6,b
 10994  0123C4  D002               	goto	l8815
 10995                           
 10996                           ; BSR set to: 0
 10997  0123C6  0E80               	movlw	128
 10998  0123C8  1B97               	xorwf	___fladd@signs& (0+255),f,b
 10999  0123CA                     l8815:
 11000                           
 11001                           ; BSR set to: 0
 11002  0123CA  C099  F09A         	movff	___fladd@bexp,___fladd@grs
 11003                           
 11004                           ; BSR set to: 0
 11005  0123CE  C098  F099         	movff	___fladd@aexp,___fladd@bexp
 11006                           
 11007                           ; BSR set to: 0
 11008  0123D2  C09A  F098         	movff	___fladd@grs,___fladd@aexp
 11009                           
 11010                           ; BSR set to: 0
 11011  0123D6  C08B  F09A         	movff	___fladd@b,___fladd@grs
 11012                           
 11013                           ; BSR set to: 0
 11014  0123DA  C08F  F08B         	movff	___fladd@a,___fladd@b
 11015                           
 11016                           ; BSR set to: 0
 11017  0123DE  C09A  F08F         	movff	___fladd@grs,___fladd@a
 11018                           
 11019                           ; BSR set to: 0
 11020  0123E2  C08C  F09A         	movff	___fladd@b+1,___fladd@grs
 11021                           
 11022                           ; BSR set to: 0
 11023  0123E6  C090  F08C         	movff	___fladd@a+1,___fladd@b+1
 11024                           
 11025                           ; BSR set to: 0
 11026  0123EA  C09A  F090         	movff	___fladd@grs,___fladd@a+1
 11027                           
 11028                           ; BSR set to: 0
 11029  0123EE  C08D  F09A         	movff	___fladd@b+2,___fladd@grs
 11030                           
 11031                           ; BSR set to: 0
 11032  0123F2  C091  F08D         	movff	___fladd@a+2,___fladd@b+2
 11033                           
 11034                           ; BSR set to: 0
 11035  0123F6  C09A  F091         	movff	___fladd@grs,___fladd@a+2
 11036                           
 11037                           ; BSR set to: 0
 11038  0123FA  C08E  F09A         	movff	___fladd@b+3,___fladd@grs
 11039                           
 11040                           ; BSR set to: 0
 11041  0123FE  C092  F08E         	movff	___fladd@a+3,___fladd@b+3
 11042                           
 11043                           ; BSR set to: 0
 11044  012402  C09A  F092         	movff	___fladd@grs,___fladd@a+3
 11045  012406                     l8845:
 11046                           
 11047                           ; BSR set to: 0
 11048  012406  0E00               	movlw	0
 11049  012408  6F9A               	movwf	___fladd@grs& (0+255),b
 11050                           
 11051                           ; BSR set to: 0
 11052  01240A  5199               	movf	___fladd@bexp& (0+255),w,b
 11053  01240C  C098  F093         	movff	___fladd@aexp,??___fladd
 11054  012410  6B94               	clrf	(??___fladd+1)& (0+255),b
 11055  012412  5F93               	subwf	??___fladd& (0+255),f,b
 11056  012414  0E00               	movlw	0
 11057  012416  5B94               	subwfb	(??___fladd+1)& (0+255),f,b
 11058  012418  BF94               	btfsc	(??___fladd+1)& (0+255),7,b
 11059  01241A  D02C               	goto	l2358
 11060  01241C  5194               	movf	(??___fladd+1)& (0+255),w,b
 11061  01241E  E104               	bnz	u7510
 11062  012420  0E1A               	movlw	26
 11063  012422  5D93               	subwf	??___fladd& (0+255),w,b
 11064  012424  A0D8               	btfss	status,0,c
 11065  012426  D026               	goto	l2358
 11066  012428                     u7510:
 11067                           
 11068                           ; BSR set to: 0
 11069  012428  518B               	movf	___fladd@b& (0+255),w,b
 11070  01242A  118C               	iorwf	(___fladd@b+1)& (0+255),w,b
 11071  01242C  118D               	iorwf	(___fladd@b+2)& (0+255),w,b
 11072  01242E  118E               	iorwf	(___fladd@b+3)& (0+255),w,b
 11073  012430  B4D8               	btfsc	status,2,c
 11074  012432  D002               	goto	u7520
 11075  012434  0E01               	movlw	1
 11076  012436  D001               	goto	u7530
 11077  012438                     u7520:
 11078  012438  0E00               	movlw	0
 11079  01243A                     u7530:
 11080  01243A  6F9A               	movwf	___fladd@grs& (0+255),b
 11081                           
 11082                           ; BSR set to: 0
 11083  01243C  0E00               	movlw	0
 11084  01243E  6F8B               	movwf	___fladd@b& (0+255),b
 11085  012440  0E00               	movlw	0
 11086  012442  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 11087  012444  0E00               	movlw	0
 11088  012446  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 11089  012448  0E00               	movlw	0
 11090  01244A  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 11091                           
 11092                           ; BSR set to: 0
 11093  01244C  C098  F099         	movff	___fladd@aexp,___fladd@bexp
 11094  012450  D015               	goto	u7560
 11095  012452                     l2359:
 11096                           
 11097                           ; BSR set to: 0
 11098  012452  A19A               	btfss	___fladd@grs& (0+255),0,b
 11099  012454  D005               	goto	l8857
 11100                           
 11101                           ; BSR set to: 0
 11102  012456  90D8               	bcf	status,0,c
 11103  012458  319A               	rrcf	___fladd@grs& (0+255),w,b
 11104  01245A  0901               	iorlw	1
 11105  01245C  6F9A               	movwf	___fladd@grs& (0+255),b
 11106  01245E  D002               	goto	l8859
 11107  012460                     l8857:
 11108                           
 11109                           ; BSR set to: 0
 11110  012460  90D8               	bcf	status,0,c
 11111  012462  339A               	rrcf	___fladd@grs& (0+255),f,b
 11112  012464                     l8859:
 11113                           
 11114                           ; BSR set to: 0
 11115  012464  B18B               	btfsc	___fladd@b& (0+255),0,b
 11116                           
 11117                           ; BSR set to: 0
 11118  012466  8F9A               	bsf	___fladd@grs& (0+255),7,b
 11119                           
 11120                           ; BSR set to: 0
 11121  012468  358E               	rlcf	(___fladd@b+3)& (0+255),w,b
 11122  01246A  338E               	rrcf	(___fladd@b+3)& (0+255),f,b
 11123  01246C  338D               	rrcf	(___fladd@b+2)& (0+255),f,b
 11124  01246E  338C               	rrcf	(___fladd@b+1)& (0+255),f,b
 11125  012470  338B               	rrcf	___fladd@b& (0+255),f,b
 11126                           
 11127                           ; BSR set to: 0
 11128  012472  2B99               	incf	___fladd@bexp& (0+255),f,b
 11129  012474                     l2358:
 11130                           
 11131                           ; BSR set to: 0
 11132  012474  5198               	movf	___fladd@aexp& (0+255),w,b
 11133  012476  5D99               	subwf	___fladd@bexp& (0+255),w,b
 11134  012478  A0D8               	btfss	status,0,c
 11135  01247A  D7EB               	goto	l2359
 11136  01247C                     u7560:
 11137                           
 11138                           ; BSR set to: 0
 11139  01247C  BD97               	btfsc	___fladd@signs& (0+255),6,b
 11140  01247E  D028               	goto	l8891
 11141                           
 11142                           ; BSR set to: 0
 11143  012480  5199               	movf	___fladd@bexp& (0+255),w,b
 11144  012482  A4D8               	btfss	status,2,c
 11145  012484  D009               	goto	l8873
 11146                           
 11147                           ; BSR set to: 0
 11148  012486  0E00               	movlw	0
 11149  012488  6F8B               	movwf	?___fladd& (0+255),b
 11150  01248A  0E00               	movlw	0
 11151  01248C  6F8C               	movwf	(?___fladd+1)& (0+255),b
 11152  01248E  0E00               	movlw	0
 11153  012490  6F8D               	movwf	(?___fladd+2)& (0+255),b
 11154  012492  0E00               	movlw	0
 11155  012494  6F8E               	movwf	(?___fladd+3)& (0+255),b
 11156  012496  0012               	return	
 11157  012498                     l8873:
 11158                           
 11159                           ; BSR set to: 0
 11160  012498  518F               	movf	___fladd@a& (0+255),w,b
 11161  01249A  278B               	addwf	___fladd@b& (0+255),f,b
 11162  01249C  5190               	movf	(___fladd@a+1)& (0+255),w,b
 11163  01249E  238C               	addwfc	(___fladd@b+1)& (0+255),f,b
 11164  0124A0  5191               	movf	(___fladd@a+2)& (0+255),w,b
 11165  0124A2  238D               	addwfc	(___fladd@b+2)& (0+255),f,b
 11166  0124A4  5192               	movf	(___fladd@a+3)& (0+255),w,b
 11167  0124A6  238E               	addwfc	(___fladd@b+3)& (0+255),f,b
 11168                           
 11169                           ; BSR set to: 0
 11170  0124A8  A18E               	btfss	(___fladd@b+3)& (0+255),0,b
 11171  0124AA  D071               	goto	u7690
 11172                           
 11173                           ; BSR set to: 0
 11174  0124AC  A19A               	btfss	___fladd@grs& (0+255),0,b
 11175  0124AE  D005               	goto	l8881
 11176                           
 11177                           ; BSR set to: 0
 11178  0124B0  90D8               	bcf	status,0,c
 11179  0124B2  319A               	rrcf	___fladd@grs& (0+255),w,b
 11180  0124B4  0901               	iorlw	1
 11181  0124B6  6F9A               	movwf	___fladd@grs& (0+255),b
 11182  0124B8  D002               	goto	l8883
 11183  0124BA                     l8881:
 11184                           
 11185                           ; BSR set to: 0
 11186  0124BA  90D8               	bcf	status,0,c
 11187  0124BC  339A               	rrcf	___fladd@grs& (0+255),f,b
 11188  0124BE                     l8883:
 11189                           
 11190                           ; BSR set to: 0
 11191  0124BE  B18B               	btfsc	___fladd@b& (0+255),0,b
 11192                           
 11193                           ; BSR set to: 0
 11194  0124C0  8F9A               	bsf	___fladd@grs& (0+255),7,b
 11195                           
 11196                           ; BSR set to: 0
 11197  0124C2  358E               	rlcf	(___fladd@b+3)& (0+255),w,b
 11198  0124C4  338E               	rrcf	(___fladd@b+3)& (0+255),f,b
 11199  0124C6  338D               	rrcf	(___fladd@b+2)& (0+255),f,b
 11200  0124C8  338C               	rrcf	(___fladd@b+1)& (0+255),f,b
 11201  0124CA  338B               	rrcf	___fladd@b& (0+255),f,b
 11202                           
 11203                           ; BSR set to: 0
 11204  0124CC  2B99               	incf	___fladd@bexp& (0+255),f,b
 11205  0124CE  D05F               	goto	u7690
 11206  0124D0                     l8891:
 11207                           
 11208                           ; BSR set to: 0
 11209  0124D0  518F               	movf	___fladd@a& (0+255),w,b
 11210  0124D2  5D8B               	subwf	___fladd@b& (0+255),w,b
 11211  0124D4  5190               	movf	(___fladd@a+1)& (0+255),w,b
 11212  0124D6  598C               	subwfb	(___fladd@b+1)& (0+255),w,b
 11213  0124D8  5191               	movf	(___fladd@a+2)& (0+255),w,b
 11214  0124DA  598D               	subwfb	(___fladd@b+2)& (0+255),w,b
 11215  0124DC  518E               	movf	(___fladd@b+3)& (0+255),w,b
 11216  0124DE  0A80               	xorlw	128
 11217  0124E0  6F93               	movwf	??___fladd& (0+255),b
 11218  0124E2  5192               	movf	(___fladd@a+3)& (0+255),w,b
 11219  0124E4  0A80               	xorlw	128
 11220  0124E6  5993               	subwfb	??___fladd& (0+255),w,b
 11221  0124E8  B0D8               	btfsc	status,0,c
 11222  0124EA  D025               	goto	l8901
 11223                           
 11224                           ; BSR set to: 0
 11225  0124EC  518B               	movf	___fladd@b& (0+255),w,b
 11226  0124EE  5D8F               	subwf	___fladd@a& (0+255),w,b
 11227  0124F0  6F93               	movwf	??___fladd& (0+255),b
 11228  0124F2  518C               	movf	(___fladd@b+1)& (0+255),w,b
 11229  0124F4  5990               	subwfb	(___fladd@a+1)& (0+255),w,b
 11230  0124F6  6F94               	movwf	(??___fladd+1)& (0+255),b
 11231  0124F8  518D               	movf	(___fladd@b+2)& (0+255),w,b
 11232  0124FA  5991               	subwfb	(___fladd@a+2)& (0+255),w,b
 11233  0124FC  6F95               	movwf	(??___fladd+2)& (0+255),b
 11234  0124FE  518E               	movf	(___fladd@b+3)& (0+255),w,b
 11235  012500  5992               	subwfb	(___fladd@a+3)& (0+255),w,b
 11236  012502  6F96               	movwf	(??___fladd+3)& (0+255),b
 11237  012504  0EFF               	movlw	255
 11238  012506  2593               	addwf	??___fladd& (0+255),w,b
 11239  012508  6F8B               	movwf	___fladd@b& (0+255),b
 11240  01250A  0EFF               	movlw	255
 11241  01250C  2194               	addwfc	(??___fladd+1)& (0+255),w,b
 11242  01250E  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 11243  012510  0EFF               	movlw	255
 11244  012512  2195               	addwfc	(??___fladd+2)& (0+255),w,b
 11245  012514  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 11246  012516  0EFF               	movlw	255
 11247  012518  2196               	addwfc	(??___fladd+3)& (0+255),w,b
 11248  01251A  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 11249  01251C  0E80               	movlw	128
 11250  01251E  1B97               	xorwf	___fladd@signs& (0+255),f,b
 11251                           
 11252                           ; BSR set to: 0
 11253  012520  6D9A               	negf	___fladd@grs& (0+255),b
 11254                           
 11255                           ; BSR set to: 0
 11256  012522  519A               	movf	___fladd@grs& (0+255),w,b
 11257  012524  A4D8               	btfss	status,2,c
 11258  012526  D00F               	goto	l2374
 11259                           
 11260                           ; BSR set to: 0
 11261  012528  0E01               	movlw	1
 11262  01252A  278B               	addwf	___fladd@b& (0+255),f,b
 11263  01252C  0E00               	movlw	0
 11264  01252E  238C               	addwfc	(___fladd@b+1)& (0+255),f,b
 11265  012530  238D               	addwfc	(___fladd@b+2)& (0+255),f,b
 11266  012532  238E               	addwfc	(___fladd@b+3)& (0+255),f,b
 11267  012534  D008               	goto	l2374
 11268  012536                     l8901:
 11269                           
 11270                           ; BSR set to: 0
 11271  012536  518F               	movf	___fladd@a& (0+255),w,b
 11272  012538  5F8B               	subwf	___fladd@b& (0+255),f,b
 11273  01253A  5190               	movf	(___fladd@a+1)& (0+255),w,b
 11274  01253C  5B8C               	subwfb	(___fladd@b+1)& (0+255),f,b
 11275  01253E  5191               	movf	(___fladd@a+2)& (0+255),w,b
 11276  012540  5B8D               	subwfb	(___fladd@b+2)& (0+255),f,b
 11277  012542  5192               	movf	(___fladd@a+3)& (0+255),w,b
 11278  012544  5B8E               	subwfb	(___fladd@b+3)& (0+255),f,b
 11279  012546                     l2374:
 11280                           
 11281                           ; BSR set to: 0
 11282  012546  518B               	movf	___fladd@b& (0+255),w,b
 11283  012548  118C               	iorwf	(___fladd@b+1)& (0+255),w,b
 11284  01254A  118D               	iorwf	(___fladd@b+2)& (0+255),w,b
 11285  01254C  118E               	iorwf	(___fladd@b+3)& (0+255),w,b
 11286  01254E  A4D8               	btfss	status,2,c
 11287  012550  D01C               	goto	l8925
 11288                           
 11289                           ; BSR set to: 0
 11290  012552  519A               	movf	___fladd@grs& (0+255),w,b
 11291  012554  A4D8               	btfss	status,2,c
 11292  012556  D019               	goto	l8925
 11293                           
 11294                           ; BSR set to: 0
 11295  012558  0E00               	movlw	0
 11296  01255A  6F8B               	movwf	?___fladd& (0+255),b
 11297  01255C  0E00               	movlw	0
 11298  01255E  6F8C               	movwf	(?___fladd+1)& (0+255),b
 11299  012560  0E00               	movlw	0
 11300  012562  6F8D               	movwf	(?___fladd+2)& (0+255),b
 11301  012564  0E00               	movlw	0
 11302  012566  6F8E               	movwf	(?___fladd+3)& (0+255),b
 11303  012568  0012               	return	
 11304  01256A                     l8909:
 11305                           
 11306                           ; BSR set to: 0
 11307  01256A  90D8               	bcf	status,0,c
 11308  01256C  378B               	rlcf	___fladd@b& (0+255),f,b
 11309  01256E  378C               	rlcf	(___fladd@b+1)& (0+255),f,b
 11310  012570  378D               	rlcf	(___fladd@b+2)& (0+255),f,b
 11311  012572  378E               	rlcf	(___fladd@b+3)& (0+255),f,b
 11312                           
 11313                           ; BSR set to: 0
 11314  012574  BF9A               	btfsc	___fladd@grs& (0+255),7,b
 11315                           
 11316                           ; BSR set to: 0
 11317  012576  818B               	bsf	___fladd@b& (0+255),0,b
 11318                           
 11319                           ; BSR set to: 0
 11320  012578  A19A               	btfss	___fladd@grs& (0+255),0,b
 11321  01257A  D002               	goto	l8919
 11322                           
 11323                           ; BSR set to: 0
 11324  01257C  80D8               	bsf	status,0,c
 11325  01257E  D001               	goto	L11
 11326  012580                     l8919:
 11327                           
 11328                           ; BSR set to: 0
 11329  012580  90D8               	bcf	status,0,c
 11330  012582                     L11:
 11331  012582  379A               	rlcf	___fladd@grs& (0+255),f,b
 11332                           
 11333                           ; BSR set to: 0
 11334  012584  5199               	movf	___fladd@bexp& (0+255),w,b
 11335  012586  A4D8               	btfss	status,2,c
 11336                           
 11337                           ; BSR set to: 0
 11338  012588  0799               	decf	___fladd@bexp& (0+255),f,b
 11339  01258A                     l8925:
 11340                           
 11341                           ; BSR set to: 0
 11342  01258A  AF8D               	btfss	(___fladd@b+2)& (0+255),7,b
 11343  01258C  D7EE               	goto	l8909
 11344  01258E                     u7690:
 11345                           
 11346                           ; BSR set to: 0
 11347  01258E  0E00               	movlw	0
 11348  012590  6F98               	movwf	___fladd@aexp& (0+255),b
 11349                           
 11350                           ; BSR set to: 0
 11351  012592  AF9A               	btfss	___fladd@grs& (0+255),7,b
 11352  012594  D00B               	goto	l2383
 11353                           
 11354                           ; BSR set to: 0
 11355  012596  C09A  F093         	movff	___fladd@grs,??___fladd
 11356  01259A  0E7F               	movlw	127
 11357  01259C  1793               	andwf	??___fladd& (0+255),f,b
 11358  01259E  B4D8               	btfsc	status,2,c
 11359  0125A0  D003               	goto	l2384
 11360  0125A2                     u7710:
 11361                           
 11362                           ; BSR set to: 0
 11363  0125A2  0E01               	movlw	1
 11364  0125A4  6F98               	movwf	___fladd@aexp& (0+255),b
 11365  0125A6  D002               	goto	l2383
 11366  0125A8                     l2384:
 11367                           
 11368                           ; BSR set to: 0
 11369  0125A8  B18B               	btfsc	___fladd@b& (0+255),0,b
 11370  0125AA  D7FB               	goto	u7710
 11371  0125AC                     l2383:
 11372                           
 11373                           ; BSR set to: 0
 11374  0125AC  5198               	movf	___fladd@aexp& (0+255),w,b
 11375  0125AE  B4D8               	btfsc	status,2,c
 11376  0125B0  D020               	goto	l8945
 11377                           
 11378                           ; BSR set to: 0
 11379  0125B2  0E01               	movlw	1
 11380  0125B4  278B               	addwf	___fladd@b& (0+255),f,b
 11381  0125B6  0E00               	movlw	0
 11382  0125B8  238C               	addwfc	(___fladd@b+1)& (0+255),f,b
 11383  0125BA  238D               	addwfc	(___fladd@b+2)& (0+255),f,b
 11384  0125BC  238E               	addwfc	(___fladd@b+3)& (0+255),f,b
 11385                           
 11386                           ; BSR set to: 0
 11387  0125BE  A18E               	btfss	(___fladd@b+3)& (0+255),0,b
 11388  0125C0  D018               	goto	l8945
 11389                           
 11390                           ; BSR set to: 0
 11391  0125C2  C08B  F093         	movff	___fladd@b,??___fladd
 11392  0125C6  C08C  F094         	movff	___fladd@b+1,??___fladd+1
 11393  0125CA  C08D  F095         	movff	___fladd@b+2,??___fladd+2
 11394  0125CE  C08E  F096         	movff	___fladd@b+3,??___fladd+3
 11395  0125D2  3596               	rlcf	(??___fladd+3)& (0+255),w,b
 11396  0125D4  3396               	rrcf	(??___fladd+3)& (0+255),f,b
 11397  0125D6  3395               	rrcf	(??___fladd+2)& (0+255),f,b
 11398  0125D8  3394               	rrcf	(??___fladd+1)& (0+255),f,b
 11399  0125DA  3393               	rrcf	??___fladd& (0+255),f,b
 11400  0125DC  C093  F08B         	movff	??___fladd,___fladd@b
 11401  0125E0  C094  F08C         	movff	??___fladd+1,___fladd@b+1
 11402  0125E4  C095  F08D         	movff	??___fladd+2,___fladd@b+2
 11403  0125E8  C096  F08E         	movff	??___fladd+3,___fladd@b+3
 11404  0125EC  2999               	incf	___fladd@bexp& (0+255),w,b
 11405  0125EE  A4D8               	btfss	status,2,c
 11406                           
 11407                           ; BSR set to: 0
 11408  0125F0  2B99               	incf	___fladd@bexp& (0+255),f,b
 11409  0125F2                     l8945:
 11410                           
 11411                           ; BSR set to: 0
 11412  0125F2  2999               	incf	___fladd@bexp& (0+255),w,b
 11413  0125F4  B4D8               	btfsc	status,2,c
 11414  0125F6  D003               	goto	u7770
 11415                           
 11416                           ; BSR set to: 0
 11417  0125F8  5199               	movf	___fladd@bexp& (0+255),w,b
 11418  0125FA  A4D8               	btfss	status,2,c
 11419  0125FC  D00D               	goto	l8953
 11420  0125FE                     u7770:
 11421                           
 11422                           ; BSR set to: 0
 11423  0125FE  0E00               	movlw	0
 11424  012600  6F8B               	movwf	___fladd@b& (0+255),b
 11425  012602  0E00               	movlw	0
 11426  012604  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 11427  012606  0E00               	movlw	0
 11428  012608  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 11429  01260A  0E00               	movlw	0
 11430  01260C  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 11431  01260E  5199               	movf	___fladd@bexp& (0+255),w,b
 11432  012610  A4D8               	btfss	status,2,c
 11433  012612  D002               	goto	l8953
 11434                           
 11435                           ; BSR set to: 0
 11436  012614  0E00               	movlw	0
 11437  012616  6F97               	movwf	___fladd@signs& (0+255),b
 11438  012618                     l8953:
 11439                           
 11440                           ; BSR set to: 0
 11441  012618  A199               	btfss	___fladd@bexp& (0+255),0,b
 11442  01261A  D002               	goto	l8957
 11443                           
 11444                           ; BSR set to: 0
 11445  01261C  8F8D               	bsf	(___fladd@b+2)& (0+255),7,b
 11446  01261E  D001               	goto	l8959
 11447  012620                     l8957:
 11448                           
 11449                           ; BSR set to: 0
 11450  012620  9F8D               	bcf	(___fladd@b+2)& (0+255),7,b
 11451  012622                     l8959:
 11452                           
 11453                           ; BSR set to: 0
 11454  012622  90D8               	bcf	status,0,c
 11455  012624  3199               	rrcf	___fladd@bexp& (0+255),w,b
 11456  012626  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 11457                           
 11458                           ; BSR set to: 0
 11459  012628  BF97               	btfsc	___fladd@signs& (0+255),7,b
 11460                           
 11461                           ; BSR set to: 0
 11462  01262A  8F8E               	bsf	(___fladd@b+3)& (0+255),7,b
 11463                           
 11464                           ; BSR set to: 0
 11465  01262C  C08B  F08B         	movff	___fladd@b,?___fladd
 11466  012630  C08C  F08C         	movff	___fladd@b+1,?___fladd+1
 11467  012634  C08D  F08D         	movff	___fladd@b+2,?___fladd+2
 11468  012638  C08E  F08E         	movff	___fladd@b+3,?___fladd+3
 11469                           
 11470                           ; BSR set to: 0
 11471  01263C  0012               	return		;funcret
 11472  01263E                     __end_of___fladd:
 11473                           	callstack 0
 11474                           
 11475 ;; *************** function ___flneg *****************
 11476 ;; Defined at:
 11477 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  f1              4    0[BANK0 ] unsigned char 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;		None
 11482 ;; Return value:  Size  Location     Type
 11483 ;;                  4    0[BANK0 ] unsigned char 
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0
 11486 ;; Tracked objects:
 11487 ;;		On entry : 3F/0
 11488 ;;		On exit  : 3F/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11491 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11494 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11495 ;;Total ram usage:        4 bytes
 11496 ;; Hardware stack levels used: 1
 11497 ;; Hardware stack levels required when called: 7
 11498 ;; This function calls:
 11499 ;;		Nothing
 11500 ;; This function is called by:
 11501 ;;		_efgtoa
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text25
 11506  0151CC                     __ptext25:
 11507                           	callstack 0
 11508  0151CC                     ___flneg:
 11509                           	callstack 19
 11510                           
 11511                           ; BSR set to: 0
 11512                           
 11513                           ; BSR set to: 0
 11514                           ;incstack = 0
 11515  0151CC  5160               	movf	___flneg@f1& (0+255),w,b
 11516  0151CE  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11517  0151D0  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11518  0151D2  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11519  0151D4  B4D8               	btfsc	status,2,c
 11520  0151D6  D008               	goto	l9415
 11521                           
 11522                           ; BSR set to: 0
 11523  0151D8  0E00               	movlw	0
 11524  0151DA  1B60               	xorwf	___flneg@f1& (0+255),f,b
 11525  0151DC  0E00               	movlw	0
 11526  0151DE  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11527  0151E0  0E00               	movlw	0
 11528  0151E2  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11529  0151E4  0E80               	movlw	128
 11530  0151E6  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11531  0151E8                     l9415:
 11532                           
 11533                           ; BSR set to: 0
 11534  0151E8  C060  F060         	movff	___flneg@f1,?___flneg
 11535  0151EC  C061  F061         	movff	___flneg@f1+1,?___flneg+1
 11536  0151F0  C062  F062         	movff	___flneg@f1+2,?___flneg+2
 11537  0151F4  C063  F063         	movff	___flneg@f1+3,?___flneg+3
 11538                           
 11539                           ; BSR set to: 0
 11540  0151F8  0012               	return		;funcret
 11541  0151FA                     __end_of___flneg:
 11542                           	callstack 0
 11543                           
 11544 ;; *************** function ___flmul *****************
 11545 ;; Defined at:
 11546 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  b               4   18[BANK0 ] unsigned char 
 11549 ;;  a               4   22[BANK0 ] unsigned char 
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;  prod            4   37[BANK0 ] struct .
 11552 ;;  grs             4   33[BANK0 ] unsigned long 
 11553 ;;  temp            2   41[BANK0 ] struct .
 11554 ;;  bexp            1   32[BANK0 ] unsigned char 
 11555 ;;  aexp            1   31[BANK0 ] unsigned char 
 11556 ;;  sign            1   30[BANK0 ] unsigned char 
 11557 ;; Return value:  Size  Location     Type
 11558 ;;                  4   18[BANK0 ] unsigned char 
 11559 ;; Registers used:
 11560 ;;		wreg, status,2, status,0, prodl, prodh
 11561 ;; Tracked objects:
 11562 ;;		On entry : 3F/0
 11563 ;;		On exit  : 3F/0
 11564 ;;		Unchanged: 0/0
 11565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11566 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11567 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11568 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11569 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11570 ;;Total ram usage:       25 bytes
 11571 ;; Hardware stack levels used: 1
 11572 ;; Hardware stack levels required when called: 7
 11573 ;; This function calls:
 11574 ;;		Nothing
 11575 ;; This function is called by:
 11576 ;;		_ps_math
 11577 ;;		_main
 11578 ;;		_efgtoa
 11579 ;;		_sqrtf
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           	psect	text26
 11584  011FE2                     __ptext26:
 11585                           	callstack 0
 11586  011FE2                     ___flmul:
 11587                           	callstack 19
 11588                           
 11589                           ; BSR set to: 0
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;incstack = 0
 11593  011FE2  5175               	movf	(___flmul@b+3)& (0+255),w,b
 11594  011FE4  0B80               	andlw	128
 11595  011FE6  6F7E               	movwf	___flmul@sign& (0+255),b
 11596  011FE8  5175               	movf	(___flmul@b+3)& (0+255),w,b
 11597  011FEA  2575               	addwf	(___flmul@b+3)& (0+255),w,b
 11598  011FEC  6F80               	movwf	___flmul@bexp& (0+255),b
 11599                           
 11600                           ; BSR set to: 0
 11601  011FEE  BF74               	btfsc	(___flmul@b+2)& (0+255),7,b
 11602                           
 11603                           ; BSR set to: 0
 11604  011FF0  8180               	bsf	___flmul@bexp& (0+255),0,b
 11605                           
 11606                           ; BSR set to: 0
 11607  011FF2  5180               	movf	___flmul@bexp& (0+255),w,b
 11608  011FF4  B4D8               	btfsc	status,2,c
 11609  011FF6  D00D               	goto	l9171
 11610                           
 11611                           ; BSR set to: 0
 11612  011FF8  2980               	incf	___flmul@bexp& (0+255),w,b
 11613  011FFA  A4D8               	btfss	status,2,c
 11614  011FFC  D008               	goto	l9169
 11615                           
 11616                           ; BSR set to: 0
 11617  011FFE  0E00               	movlw	0
 11618  012000  6F72               	movwf	___flmul@b& (0+255),b
 11619  012002  0E00               	movlw	0
 11620  012004  6F73               	movwf	(___flmul@b+1)& (0+255),b
 11621  012006  0E00               	movlw	0
 11622  012008  6F74               	movwf	(___flmul@b+2)& (0+255),b
 11623  01200A  0E00               	movlw	0
 11624  01200C  6F75               	movwf	(___flmul@b+3)& (0+255),b
 11625  01200E                     l9169:
 11626                           
 11627                           ; BSR set to: 0
 11628  01200E  8F74               	bsf	(___flmul@b+2)& (0+255),7,b
 11629  012010  D008               	goto	l9173
 11630  012012                     l9171:
 11631                           
 11632                           ; BSR set to: 0
 11633  012012  0E00               	movlw	0
 11634  012014  6F72               	movwf	___flmul@b& (0+255),b
 11635  012016  0E00               	movlw	0
 11636  012018  6F73               	movwf	(___flmul@b+1)& (0+255),b
 11637  01201A  0E00               	movlw	0
 11638  01201C  6F74               	movwf	(___flmul@b+2)& (0+255),b
 11639  01201E  0E00               	movlw	0
 11640  012020  6F75               	movwf	(___flmul@b+3)& (0+255),b
 11641  012022                     l9173:
 11642                           
 11643                           ; BSR set to: 0
 11644  012022  5179               	movf	(___flmul@a+3)& (0+255),w,b
 11645  012024  0B80               	andlw	128
 11646  012026  1B7E               	xorwf	___flmul@sign& (0+255),f,b
 11647                           
 11648                           ; BSR set to: 0
 11649  012028  5179               	movf	(___flmul@a+3)& (0+255),w,b
 11650  01202A  2579               	addwf	(___flmul@a+3)& (0+255),w,b
 11651  01202C  6F7F               	movwf	___flmul@aexp& (0+255),b
 11652                           
 11653                           ; BSR set to: 0
 11654  01202E  BF78               	btfsc	(___flmul@a+2)& (0+255),7,b
 11655                           
 11656                           ; BSR set to: 0
 11657  012030  817F               	bsf	___flmul@aexp& (0+255),0,b
 11658                           
 11659                           ; BSR set to: 0
 11660  012032  517F               	movf	___flmul@aexp& (0+255),w,b
 11661  012034  B4D8               	btfsc	status,2,c
 11662  012036  D00D               	goto	l9189
 11663                           
 11664                           ; BSR set to: 0
 11665  012038  297F               	incf	___flmul@aexp& (0+255),w,b
 11666  01203A  A4D8               	btfss	status,2,c
 11667  01203C  D008               	goto	l9187
 11668                           
 11669                           ; BSR set to: 0
 11670  01203E  0E00               	movlw	0
 11671  012040  6F76               	movwf	___flmul@a& (0+255),b
 11672  012042  0E00               	movlw	0
 11673  012044  6F77               	movwf	(___flmul@a+1)& (0+255),b
 11674  012046  0E00               	movlw	0
 11675  012048  6F78               	movwf	(___flmul@a+2)& (0+255),b
 11676  01204A  0E00               	movlw	0
 11677  01204C  6F79               	movwf	(___flmul@a+3)& (0+255),b
 11678  01204E                     l9187:
 11679                           
 11680                           ; BSR set to: 0
 11681  01204E  8F78               	bsf	(___flmul@a+2)& (0+255),7,b
 11682  012050  D008               	goto	l2443
 11683  012052                     l9189:
 11684                           
 11685                           ; BSR set to: 0
 11686  012052  0E00               	movlw	0
 11687  012054  6F76               	movwf	___flmul@a& (0+255),b
 11688  012056  0E00               	movlw	0
 11689  012058  6F77               	movwf	(___flmul@a+1)& (0+255),b
 11690  01205A  0E00               	movlw	0
 11691  01205C  6F78               	movwf	(___flmul@a+2)& (0+255),b
 11692  01205E  0E00               	movlw	0
 11693  012060  6F79               	movwf	(___flmul@a+3)& (0+255),b
 11694  012062                     l2443:
 11695                           
 11696                           ; BSR set to: 0
 11697  012062  517F               	movf	___flmul@aexp& (0+255),w,b
 11698  012064  B4D8               	btfsc	status,2,c
 11699  012066  D003               	goto	u8200
 11700                           
 11701                           ; BSR set to: 0
 11702  012068  5180               	movf	___flmul@bexp& (0+255),w,b
 11703  01206A  A4D8               	btfss	status,2,c
 11704  01206C  D009               	goto	l9197
 11705  01206E                     u8200:
 11706                           
 11707                           ; BSR set to: 0
 11708  01206E  0E00               	movlw	0
 11709  012070  6F72               	movwf	?___flmul& (0+255),b
 11710  012072  0E00               	movlw	0
 11711  012074  6F73               	movwf	(?___flmul+1)& (0+255),b
 11712  012076  0E00               	movlw	0
 11713  012078  6F74               	movwf	(?___flmul+2)& (0+255),b
 11714  01207A  0E00               	movlw	0
 11715  01207C  6F75               	movwf	(?___flmul+3)& (0+255),b
 11716  01207E  0012               	return	
 11717  012080                     l9197:
 11718                           
 11719                           ; BSR set to: 0
 11720  012080  5178               	movf	(___flmul@a+2)& (0+255),w,b
 11721  012082  0372               	mulwf	___flmul@b& (0+255),b
 11722  012084  006F FFCC  F089    	movff	prodl,___flmul@temp
 11723  01208A  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11724                           
 11725                           ; BSR set to: 0
 11726  012090  5189               	movf	___flmul@temp& (0+255),w,b
 11727  012092  6F81               	movwf	___flmul@grs& (0+255),b
 11728  012094  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 11729  012096  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 11730  012098  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 11731                           
 11732                           ; BSR set to: 0
 11733  01209A  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11734  01209C  6F85               	movwf	___flmul@prod& (0+255),b
 11735  01209E  6B86               	clrf	(___flmul@prod+1)& (0+255),b
 11736  0120A0  6B87               	clrf	(___flmul@prod+2)& (0+255),b
 11737  0120A2  6B88               	clrf	(___flmul@prod+3)& (0+255),b
 11738  0120A4  5177               	movf	(___flmul@a+1)& (0+255),w,b
 11739  0120A6  0373               	mulwf	(___flmul@b+1)& (0+255),b
 11740  0120A8  006F FFCC  F089    	movff	prodl,___flmul@temp
 11741  0120AE  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11742                           
 11743                           ; BSR set to: 0
 11744  0120B4  5189               	movf	___flmul@temp& (0+255),w,b
 11745  0120B6  2781               	addwf	___flmul@grs& (0+255),f,b
 11746  0120B8  0E00               	movlw	0
 11747  0120BA  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11748  0120BC  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11749  0120BE  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11750                           
 11751                           ; BSR set to: 0
 11752  0120C0  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11753  0120C2  2785               	addwf	___flmul@prod& (0+255),f,b
 11754  0120C4  0E00               	movlw	0
 11755  0120C6  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11756  0120C8  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11757  0120CA  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11758  0120CC  5176               	movf	___flmul@a& (0+255),w,b
 11759  0120CE  0374               	mulwf	(___flmul@b+2)& (0+255),b
 11760  0120D0  006F FFCC  F089    	movff	prodl,___flmul@temp
 11761  0120D6  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11762                           
 11763                           ; BSR set to: 0
 11764  0120DC  5189               	movf	___flmul@temp& (0+255),w,b
 11765  0120DE  2781               	addwf	___flmul@grs& (0+255),f,b
 11766  0120E0  0E00               	movlw	0
 11767  0120E2  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11768  0120E4  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11769  0120E6  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772  0120E8  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11773  0120EA  2785               	addwf	___flmul@prod& (0+255),f,b
 11774  0120EC  0E00               	movlw	0
 11775  0120EE  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11776  0120F0  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11777  0120F2  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11778                           
 11779                           ; BSR set to: 0
 11780  0120F4  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 11781  0120F8  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 11782  0120FC  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 11783  012100  6B81               	clrf	___flmul@grs& (0+255),b
 11784                           
 11785                           ; BSR set to: 0
 11786  012102  5176               	movf	___flmul@a& (0+255),w,b
 11787  012104  0373               	mulwf	(___flmul@b+1)& (0+255),b
 11788  012106  006F FFCC  F089    	movff	prodl,___flmul@temp
 11789  01210C  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11790                           
 11791                           ; BSR set to: 0
 11792  012112  5189               	movf	___flmul@temp& (0+255),w,b
 11793  012114  2781               	addwf	___flmul@grs& (0+255),f,b
 11794  012116  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11795  012118  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11796  01211A  0E00               	movlw	0
 11797  01211C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11798  01211E  0E00               	movlw	0
 11799  012120  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11800                           
 11801                           ; BSR set to: 0
 11802  012122  5177               	movf	(___flmul@a+1)& (0+255),w,b
 11803  012124  0372               	mulwf	___flmul@b& (0+255),b
 11804  012126  006F FFCC  F089    	movff	prodl,___flmul@temp
 11805  01212C  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11806                           
 11807                           ; BSR set to: 0
 11808  012132  5189               	movf	___flmul@temp& (0+255),w,b
 11809  012134  2781               	addwf	___flmul@grs& (0+255),f,b
 11810  012136  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11811  012138  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11812  01213A  0E00               	movlw	0
 11813  01213C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11814  01213E  0E00               	movlw	0
 11815  012140  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11816                           
 11817                           ; BSR set to: 0
 11818  012142  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 11819  012146  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 11820  01214A  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 11821  01214E  6B81               	clrf	___flmul@grs& (0+255),b
 11822  012150  5176               	movf	___flmul@a& (0+255),w,b
 11823  012152  0372               	mulwf	___flmul@b& (0+255),b
 11824  012154  006F FFCC  F089    	movff	prodl,___flmul@temp
 11825  01215A  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11826                           
 11827                           ; BSR set to: 0
 11828  012160  5189               	movf	___flmul@temp& (0+255),w,b
 11829  012162  2781               	addwf	___flmul@grs& (0+255),f,b
 11830  012164  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11831  012166  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11832  012168  0E00               	movlw	0
 11833  01216A  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11834  01216C  0E00               	movlw	0
 11835  01216E  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11836                           
 11837                           ; BSR set to: 0
 11838  012170  5178               	movf	(___flmul@a+2)& (0+255),w,b
 11839  012172  0373               	mulwf	(___flmul@b+1)& (0+255),b
 11840  012174  006F FFCC  F089    	movff	prodl,___flmul@temp
 11841  01217A  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11842  012180  5189               	movf	___flmul@temp& (0+255),w,b
 11843  012182  2785               	addwf	___flmul@prod& (0+255),f,b
 11844  012184  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11845  012186  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11846  012188  0E00               	movlw	0
 11847  01218A  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11848  01218C  0E00               	movlw	0
 11849  01218E  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11850                           
 11851                           ; BSR set to: 0
 11852  012190  5177               	movf	(___flmul@a+1)& (0+255),w,b
 11853  012192  0374               	mulwf	(___flmul@b+2)& (0+255),b
 11854  012194  006F FFCC  F089    	movff	prodl,___flmul@temp
 11855  01219A  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11856                           
 11857                           ; BSR set to: 0
 11858  0121A0  5189               	movf	___flmul@temp& (0+255),w,b
 11859  0121A2  2785               	addwf	___flmul@prod& (0+255),f,b
 11860  0121A4  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11861  0121A6  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11862  0121A8  0E00               	movlw	0
 11863  0121AA  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11864  0121AC  0E00               	movlw	0
 11865  0121AE  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11866  0121B0  5178               	movf	(___flmul@a+2)& (0+255),w,b
 11867  0121B2  0374               	mulwf	(___flmul@b+2)& (0+255),b
 11868  0121B4  006F FFCC  F089    	movff	prodl,___flmul@temp
 11869  0121BA  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11870                           
 11871                           ; BSR set to: 0
 11872  0121C0  5189               	movf	___flmul@temp& (0+255),w,b
 11873  0121C2  6F7A               	movwf	??___flmul& (0+255),b
 11874  0121C4  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11875  0121C6  6F7B               	movwf	(??___flmul+1)& (0+255),b
 11876  0121C8  6B7C               	clrf	(??___flmul+2)& (0+255),b
 11877  0121CA  6B7D               	clrf	(??___flmul+3)& (0+255),b
 11878  0121CC  C07C  F07D         	movff	??___flmul+2,??___flmul+3
 11879  0121D0  C07B  F07C         	movff	??___flmul+1,??___flmul+2
 11880  0121D4  C07A  F07B         	movff	??___flmul,??___flmul+1
 11881  0121D8  6B7A               	clrf	??___flmul& (0+255),b
 11882  0121DA  517A               	movf	??___flmul& (0+255),w,b
 11883  0121DC  2785               	addwf	___flmul@prod& (0+255),f,b
 11884  0121DE  517B               	movf	(??___flmul+1)& (0+255),w,b
 11885  0121E0  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11886  0121E2  517C               	movf	(??___flmul+2)& (0+255),w,b
 11887  0121E4  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11888  0121E6  517D               	movf	(??___flmul+3)& (0+255),w,b
 11889  0121E8  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11890                           
 11891                           ; BSR set to: 0
 11892  0121EA  5184               	movf	(___flmul@grs+3)& (0+255),w,b
 11893  0121EC  2785               	addwf	___flmul@prod& (0+255),f,b
 11894  0121EE  0E00               	movlw	0
 11895  0121F0  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11896  0121F2  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11897  0121F4  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11898                           
 11899                           ; BSR set to: 0
 11900  0121F6  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 11901  0121FA  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 11902  0121FE  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 11903  012202  6B81               	clrf	___flmul@grs& (0+255),b
 11904                           
 11905                           ; BSR set to: 0
 11906  012204  517F               	movf	___flmul@aexp& (0+255),w,b
 11907  012206  C080  F07A         	movff	___flmul@bexp,??___flmul
 11908  01220A  6B7B               	clrf	(??___flmul+1)& (0+255),b
 11909  01220C  277A               	addwf	??___flmul& (0+255),f,b
 11910  01220E  0E00               	movlw	0
 11911  012210  237B               	addwfc	(??___flmul+1)& (0+255),f,b
 11912  012212  0E82               	movlw	130
 11913  012214  257A               	addwf	??___flmul& (0+255),w,b
 11914  012216  6F89               	movwf	___flmul@temp& (0+255),b
 11915  012218  0EFF               	movlw	255
 11916  01221A  217B               	addwfc	(??___flmul+1)& (0+255),w,b
 11917  01221C  6F8A               	movwf	(___flmul@temp+1)& (0+255),b
 11918  01221E  D00F               	goto	l9245
 11919  012220                     l9239:
 11920                           
 11921                           ; BSR set to: 0
 11922  012220  90D8               	bcf	status,0,c
 11923  012222  3785               	rlcf	___flmul@prod& (0+255),f,b
 11924  012224  3786               	rlcf	(___flmul@prod+1)& (0+255),f,b
 11925  012226  3787               	rlcf	(___flmul@prod+2)& (0+255),f,b
 11926  012228  3788               	rlcf	(___flmul@prod+3)& (0+255),f,b
 11927                           
 11928                           ; BSR set to: 0
 11929  01222A  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 11930                           
 11931                           ; BSR set to: 0
 11932  01222C  8185               	bsf	___flmul@prod& (0+255),0,b
 11933                           
 11934                           ; BSR set to: 0
 11935  01222E  90D8               	bcf	status,0,c
 11936  012230  3781               	rlcf	___flmul@grs& (0+255),f,b
 11937  012232  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 11938  012234  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 11939  012236  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 11940  012238  0789               	decf	___flmul@temp& (0+255),f,b
 11941  01223A  A0D8               	btfss	status,0,c
 11942  01223C  078A               	decf	(___flmul@temp+1)& (0+255),f,b
 11943  01223E                     l9245:
 11944                           
 11945                           ; BSR set to: 0
 11946  01223E  AF87               	btfss	(___flmul@prod+2)& (0+255),7,b
 11947  012240  D7EF               	goto	l9239
 11948                           
 11949                           ; BSR set to: 0
 11950  012242  0E00               	movlw	0
 11951  012244  6F7F               	movwf	___flmul@aexp& (0+255),b
 11952                           
 11953                           ; BSR set to: 0
 11954  012246  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 11955  012248  D017               	goto	l2452
 11956                           
 11957                           ; BSR set to: 0
 11958  01224A  0EFF               	movlw	255
 11959  01224C  1581               	andwf	___flmul@grs& (0+255),w,b
 11960  01224E  6F7A               	movwf	??___flmul& (0+255),b
 11961  012250  0EFF               	movlw	255
 11962  012252  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 11963  012254  6F7B               	movwf	(??___flmul+1)& (0+255),b
 11964  012256  0EFF               	movlw	255
 11965  012258  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 11966  01225A  6F7C               	movwf	(??___flmul+2)& (0+255),b
 11967  01225C  0E7F               	movlw	127
 11968  01225E  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 11969  012260  6F7D               	movwf	(??___flmul+3)& (0+255),b
 11970  012262  517A               	movf	??___flmul& (0+255),w,b
 11971  012264  117B               	iorwf	(??___flmul+1)& (0+255),w,b
 11972  012266  117C               	iorwf	(??___flmul+2)& (0+255),w,b
 11973  012268  117D               	iorwf	(??___flmul+3)& (0+255),w,b
 11974  01226A  B4D8               	btfsc	status,2,c
 11975  01226C  D003               	goto	l2453
 11976  01226E                     u8240:
 11977                           
 11978                           ; BSR set to: 0
 11979  01226E  0E01               	movlw	1
 11980  012270  6F7F               	movwf	___flmul@aexp& (0+255),b
 11981  012272  D002               	goto	l2452
 11982  012274                     l2453:
 11983                           
 11984                           ; BSR set to: 0
 11985  012274  B185               	btfsc	___flmul@prod& (0+255),0,b
 11986  012276  D7FB               	goto	u8240
 11987  012278                     l2452:
 11988                           
 11989                           ; BSR set to: 0
 11990  012278  517F               	movf	___flmul@aexp& (0+255),w,b
 11991  01227A  B4D8               	btfsc	status,2,c
 11992  01227C  D01F               	goto	l9265
 11993                           
 11994                           ; BSR set to: 0
 11995  01227E  0E01               	movlw	1
 11996  012280  2785               	addwf	___flmul@prod& (0+255),f,b
 11997  012282  0E00               	movlw	0
 11998  012284  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11999  012286  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12000  012288  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12001                           
 12002                           ; BSR set to: 0
 12003  01228A  A188               	btfss	(___flmul@prod+3)& (0+255),0,b
 12004  01228C  D017               	goto	l9265
 12005                           
 12006                           ; BSR set to: 0
 12007  01228E  C085  F07A         	movff	___flmul@prod,??___flmul
 12008  012292  C086  F07B         	movff	___flmul@prod+1,??___flmul+1
 12009  012296  C087  F07C         	movff	___flmul@prod+2,??___flmul+2
 12010  01229A  C088  F07D         	movff	___flmul@prod+3,??___flmul+3
 12011  01229E  357D               	rlcf	(??___flmul+3)& (0+255),w,b
 12012  0122A0  337D               	rrcf	(??___flmul+3)& (0+255),f,b
 12013  0122A2  337C               	rrcf	(??___flmul+2)& (0+255),f,b
 12014  0122A4  337B               	rrcf	(??___flmul+1)& (0+255),f,b
 12015  0122A6  337A               	rrcf	??___flmul& (0+255),f,b
 12016  0122A8  C07A  F085         	movff	??___flmul,___flmul@prod
 12017  0122AC  C07B  F086         	movff	??___flmul+1,___flmul@prod+1
 12018  0122B0  C07C  F087         	movff	??___flmul+2,___flmul@prod+2
 12019  0122B4  C07D  F088         	movff	??___flmul+3,___flmul@prod+3
 12020                           
 12021                           ; BSR set to: 0
 12022  0122B8  4B89               	infsnz	___flmul@temp& (0+255),f,b
 12023  0122BA  2B8A               	incf	(___flmul@temp+1)& (0+255),f,b
 12024  0122BC                     l9265:
 12025                           
 12026                           ; BSR set to: 0
 12027  0122BC  BF8A               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12028  0122BE  D00D               	goto	l9269
 12029  0122C0  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 12030  0122C2  E103               	bnz	u8280
 12031  0122C4  2989               	incf	___flmul@temp& (0+255),w,b
 12032  0122C6  A0D8               	btfss	status,0,c
 12033  0122C8  D008               	goto	l9269
 12034  0122CA                     u8280:
 12035                           
 12036                           ; BSR set to: 0
 12037  0122CA  0E00               	movlw	0
 12038  0122CC  6F85               	movwf	___flmul@prod& (0+255),b
 12039  0122CE  0E00               	movlw	0
 12040  0122D0  6F86               	movwf	(___flmul@prod+1)& (0+255),b
 12041  0122D2  0E80               	movlw	128
 12042  0122D4  6F87               	movwf	(___flmul@prod+2)& (0+255),b
 12043  0122D6  0E7F               	movlw	127
 12044  0122D8  D020               	goto	L12
 12045  0122DA                     l9269:
 12046                           
 12047                           ; BSR set to: 0
 12048  0122DA  BF8A               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12049  0122DC  D005               	goto	u8290
 12050  0122DE  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 12051  0122E0  E10E               	bnz	l2460
 12052  0122E2  0589               	decf	___flmul@temp& (0+255),w,b
 12053  0122E4  B0D8               	btfsc	status,0,c
 12054  0122E6  D00B               	goto	l2460
 12055  0122E8                     u8290:
 12056                           
 12057                           ; BSR set to: 0
 12058  0122E8  0E00               	movlw	0
 12059  0122EA  6F85               	movwf	___flmul@prod& (0+255),b
 12060  0122EC  0E00               	movlw	0
 12061  0122EE  6F86               	movwf	(___flmul@prod+1)& (0+255),b
 12062  0122F0  0E00               	movlw	0
 12063  0122F2  6F87               	movwf	(___flmul@prod+2)& (0+255),b
 12064  0122F4  0E00               	movlw	0
 12065  0122F6  6F88               	movwf	(___flmul@prod+3)& (0+255),b
 12066  0122F8  0E00               	movlw	0
 12067  0122FA  6F7E               	movwf	___flmul@sign& (0+255),b
 12068  0122FC  D00F               	goto	l9281
 12069  0122FE                     l2460:
 12070                           
 12071                           ; BSR set to: 0
 12072  0122FE  C089  F080         	movff	___flmul@temp,___flmul@bexp
 12073                           
 12074                           ; BSR set to: 0
 12075  012302  0EFF               	movlw	255
 12076  012304  1785               	andwf	___flmul@prod& (0+255),f,b
 12077  012306  0EFF               	movlw	255
 12078  012308  1786               	andwf	(___flmul@prod+1)& (0+255),f,b
 12079  01230A  0E7F               	movlw	127
 12080  01230C  1787               	andwf	(___flmul@prod+2)& (0+255),f,b
 12081  01230E  0E00               	movlw	0
 12082  012310  1788               	andwf	(___flmul@prod+3)& (0+255),f,b
 12083                           
 12084                           ; BSR set to: 0
 12085  012312  B180               	btfsc	___flmul@bexp& (0+255),0,b
 12086                           
 12087                           ; BSR set to: 0
 12088  012314  8F87               	bsf	(___flmul@prod+2)& (0+255),7,b
 12089                           
 12090                           ; BSR set to: 0
 12091  012316  90D8               	bcf	status,0,c
 12092  012318  3180               	rrcf	___flmul@bexp& (0+255),w,b
 12093  01231A                     L12:
 12094  01231A  6F88               	movwf	(___flmul@prod+3)& (0+255),b
 12095  01231C                     l9281:
 12096                           
 12097                           ; BSR set to: 0
 12098  01231C  517E               	movf	___flmul@sign& (0+255),w,b
 12099  01231E  1388               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12100                           
 12101                           ; BSR set to: 0
 12102  012320  C085  F072         	movff	___flmul@prod,?___flmul
 12103  012324  C086  F073         	movff	___flmul@prod+1,?___flmul+1
 12104  012328  C087  F074         	movff	___flmul@prod+2,?___flmul+2
 12105  01232C  C088  F075         	movff	___flmul@prod+3,?___flmul+3
 12106                           
 12107                           ; BSR set to: 0
 12108  012330  0012               	return		;funcret
 12109  012332                     __end_of___flmul:
 12110                           	callstack 0
 12111                           
 12112 ;; *************** function ___flge *****************
 12113 ;; Defined at:
 12114 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
 12115 ;; Parameters:    Size  Location     Type
 12116 ;;  ff1             4   43[BANK0 ] unsigned char 
 12117 ;;  ff2             4   47[BANK0 ] unsigned char 
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;		None
 12120 ;; Return value:  Size  Location     Type
 12121 ;;		None               void
 12122 ;; Registers used:
 12123 ;;		wreg, status,2, status,0
 12124 ;; Tracked objects:
 12125 ;;		On entry : 3F/0
 12126 ;;		On exit  : 3F/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12129 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12131 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12132 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12133 ;;Total ram usage:       12 bytes
 12134 ;; Hardware stack levels used: 1
 12135 ;; Hardware stack levels required when called: 7
 12136 ;; This function calls:
 12137 ;;		Nothing
 12138 ;; This function is called by:
 12139 ;;		_efgtoa
 12140 ;;		_sqrtf
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text27
 12145  013B62                     __ptext27:
 12146                           	callstack 0
 12147  013B62                     ___flge:
 12148                           	callstack 19
 12149                           
 12150                           ; BSR set to: 0
 12151                           
 12152                           ; BSR set to: 0
 12153                           ;incstack = 0
 12154  013B62  0E00               	movlw	0
 12155  013B64  158B               	andwf	___flge@ff1& (0+255),w,b
 12156  013B66  6F93               	movwf	??___flge& (0+255),b
 12157  013B68  0E00               	movlw	0
 12158  013B6A  158C               	andwf	(___flge@ff1+1)& (0+255),w,b
 12159  013B6C  6F94               	movwf	(??___flge+1)& (0+255),b
 12160  013B6E  0E80               	movlw	128
 12161  013B70  158D               	andwf	(___flge@ff1+2)& (0+255),w,b
 12162  013B72  6F95               	movwf	(??___flge+2)& (0+255),b
 12163  013B74  0E7F               	movlw	127
 12164  013B76  158E               	andwf	(___flge@ff1+3)& (0+255),w,b
 12165  013B78  6F96               	movwf	(??___flge+3)& (0+255),b
 12166  013B7A  5193               	movf	??___flge& (0+255),w,b
 12167  013B7C  1194               	iorwf	(??___flge+1)& (0+255),w,b
 12168  013B7E  1195               	iorwf	(??___flge+2)& (0+255),w,b
 12169  013B80  1196               	iorwf	(??___flge+3)& (0+255),w,b
 12170  013B82  A4D8               	btfss	status,2,c
 12171  013B84  D008               	goto	l9393
 12172                           
 12173                           ; BSR set to: 0
 12174  013B86  0E00               	movlw	0
 12175  013B88  6F8B               	movwf	___flge@ff1& (0+255),b
 12176  013B8A  0E00               	movlw	0
 12177  013B8C  6F8C               	movwf	(___flge@ff1+1)& (0+255),b
 12178  013B8E  0E00               	movlw	0
 12179  013B90  6F8D               	movwf	(___flge@ff1+2)& (0+255),b
 12180  013B92  0E00               	movlw	0
 12181  013B94  6F8E               	movwf	(___flge@ff1+3)& (0+255),b
 12182  013B96                     l9393:
 12183                           
 12184                           ; BSR set to: 0
 12185  013B96  0E00               	movlw	0
 12186  013B98  158F               	andwf	___flge@ff2& (0+255),w,b
 12187  013B9A  6F93               	movwf	??___flge& (0+255),b
 12188  013B9C  0E00               	movlw	0
 12189  013B9E  1590               	andwf	(___flge@ff2+1)& (0+255),w,b
 12190  013BA0  6F94               	movwf	(??___flge+1)& (0+255),b
 12191  013BA2  0E80               	movlw	128
 12192  013BA4  1591               	andwf	(___flge@ff2+2)& (0+255),w,b
 12193  013BA6  6F95               	movwf	(??___flge+2)& (0+255),b
 12194  013BA8  0E7F               	movlw	127
 12195  013BAA  1592               	andwf	(___flge@ff2+3)& (0+255),w,b
 12196  013BAC  6F96               	movwf	(??___flge+3)& (0+255),b
 12197  013BAE  5193               	movf	??___flge& (0+255),w,b
 12198  013BB0  1194               	iorwf	(??___flge+1)& (0+255),w,b
 12199  013BB2  1195               	iorwf	(??___flge+2)& (0+255),w,b
 12200  013BB4  1196               	iorwf	(??___flge+3)& (0+255),w,b
 12201  013BB6  A4D8               	btfss	status,2,c
 12202  013BB8  D008               	goto	l9397
 12203                           
 12204                           ; BSR set to: 0
 12205  013BBA  0E00               	movlw	0
 12206  013BBC  6F8F               	movwf	___flge@ff2& (0+255),b
 12207  013BBE  0E00               	movlw	0
 12208  013BC0  6F90               	movwf	(___flge@ff2+1)& (0+255),b
 12209  013BC2  0E00               	movlw	0
 12210  013BC4  6F91               	movwf	(___flge@ff2+2)& (0+255),b
 12211  013BC6  0E00               	movlw	0
 12212  013BC8  6F92               	movwf	(___flge@ff2+3)& (0+255),b
 12213  013BCA                     l9397:
 12214                           
 12215                           ; BSR set to: 0
 12216  013BCA  AF8E               	btfss	(___flge@ff1+3)& (0+255),7,b
 12217  013BCC  D009               	goto	l9401
 12218                           
 12219                           ; BSR set to: 0
 12220  013BCE  6D8B               	negf	___flge@ff1& (0+255),b
 12221  013BD0  1F8C               	comf	(___flge@ff1+1)& (0+255),f,b
 12222  013BD2  B0D8               	btfsc	status,0,c
 12223  013BD4  2B8C               	incf	(___flge@ff1+1)& (0+255),f,b
 12224  013BD6  1F8D               	comf	(___flge@ff1+2)& (0+255),f,b
 12225  013BD8  B0D8               	btfsc	status,0,c
 12226  013BDA  2B8D               	incf	(___flge@ff1+2)& (0+255),f,b
 12227  013BDC  0E80               	movlw	128
 12228  013BDE  578E               	subfwb	(___flge@ff1+3)& (0+255),f,b
 12229  013BE0                     l9401:
 12230                           
 12231                           ; BSR set to: 0
 12232  013BE0  AF92               	btfss	(___flge@ff2+3)& (0+255),7,b
 12233  013BE2  D009               	goto	l2094
 12234                           
 12235                           ; BSR set to: 0
 12236  013BE4  6D8F               	negf	___flge@ff2& (0+255),b
 12237  013BE6  1F90               	comf	(___flge@ff2+1)& (0+255),f,b
 12238  013BE8  B0D8               	btfsc	status,0,c
 12239  013BEA  2B90               	incf	(___flge@ff2+1)& (0+255),f,b
 12240  013BEC  1F91               	comf	(___flge@ff2+2)& (0+255),f,b
 12241  013BEE  B0D8               	btfsc	status,0,c
 12242  013BF0  2B91               	incf	(___flge@ff2+2)& (0+255),f,b
 12243  013BF2  0E80               	movlw	128
 12244  013BF4  5792               	subfwb	(___flge@ff2+3)& (0+255),f,b
 12245  013BF6                     l2094:
 12246                           
 12247                           ; BSR set to: 0
 12248  013BF6  0E00               	movlw	0
 12249  013BF8  1B8B               	xorwf	___flge@ff1& (0+255),f,b
 12250  013BFA  0E00               	movlw	0
 12251  013BFC  1B8C               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12252  013BFE  0E00               	movlw	0
 12253  013C00  1B8D               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12254  013C02  0E80               	movlw	128
 12255  013C04  1B8E               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12256  013C06  0E00               	movlw	0
 12257  013C08  1B8F               	xorwf	___flge@ff2& (0+255),f,b
 12258  013C0A  0E00               	movlw	0
 12259  013C0C  1B90               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12260  013C0E  0E00               	movlw	0
 12261  013C10  1B91               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12262  013C12  0E80               	movlw	128
 12263  013C14  1B92               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12264  013C16  518F               	movf	___flge@ff2& (0+255),w,b
 12265  013C18  5D8B               	subwf	___flge@ff1& (0+255),w,b
 12266  013C1A  5190               	movf	(___flge@ff2+1)& (0+255),w,b
 12267  013C1C  598C               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12268  013C1E  5191               	movf	(___flge@ff2+2)& (0+255),w,b
 12269  013C20  598D               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12270  013C22  5192               	movf	(___flge@ff2+3)& (0+255),w,b
 12271  013C24  598E               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12272  013C26  B0D8               	btfsc	status,0,c
 12273  013C28  D002               	goto	l9407
 12274                           
 12275                           ; BSR set to: 0
 12276  013C2A  90D8               	bcf	status,0,c
 12277  013C2C  0012               	return	
 12278  013C2E                     l9407:
 12279                           
 12280                           ; BSR set to: 0
 12281  013C2E  80D8               	bsf	status,0,c
 12282                           
 12283                           ; BSR set to: 0
 12284  013C30  0012               	return		;funcret
 12285  013C32                     __end_of___flge:
 12286                           	callstack 0
 12287                           
 12288 ;; *************** function ___fleq *****************
 12289 ;; Defined at:
 12290 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;  ff1             4    0[BANK0 ] unsigned char 
 12293 ;;  ff2             4    4[BANK0 ] unsigned char 
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;		None               void
 12298 ;; Registers used:
 12299 ;;		wreg, status,2, status,0
 12300 ;; Tracked objects:
 12301 ;;		On entry : 3F/0
 12302 ;;		On exit  : 3F/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12305 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12307 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12308 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;Total ram usage:       12 bytes
 12310 ;; Hardware stack levels used: 1
 12311 ;; Hardware stack levels required when called: 7
 12312 ;; This function calls:
 12313 ;;		Nothing
 12314 ;; This function is called by:
 12315 ;;		_efgtoa
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           	psect	text28
 12320  01436E                     __ptext28:
 12321                           	callstack 0
 12322  01436E                     ___fleq:
 12323                           	callstack 19
 12324                           
 12325                           ; BSR set to: 0
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;incstack = 0
 12329  01436E  0E00               	movlw	0
 12330  014370  1560               	andwf	___fleq@ff1& (0+255),w,b
 12331  014372  6F68               	movwf	??___fleq& (0+255),b
 12332  014374  0E00               	movlw	0
 12333  014376  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
 12334  014378  6F69               	movwf	(??___fleq+1)& (0+255),b
 12335  01437A  0E80               	movlw	128
 12336  01437C  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
 12337  01437E  6F6A               	movwf	(??___fleq+2)& (0+255),b
 12338  014380  0E7F               	movlw	127
 12339  014382  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
 12340  014384  6F6B               	movwf	(??___fleq+3)& (0+255),b
 12341  014386  5168               	movf	??___fleq& (0+255),w,b
 12342  014388  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 12343  01438A  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 12344  01438C  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 12345  01438E  A4D8               	btfss	status,2,c
 12346  014390  D008               	goto	l9377
 12347                           
 12348                           ; BSR set to: 0
 12349  014392  0E00               	movlw	0
 12350  014394  6F60               	movwf	___fleq@ff1& (0+255),b
 12351  014396  0E00               	movlw	0
 12352  014398  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
 12353  01439A  0E00               	movlw	0
 12354  01439C  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
 12355  01439E  0E00               	movlw	0
 12356  0143A0  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
 12357  0143A2                     l9377:
 12358                           
 12359                           ; BSR set to: 0
 12360  0143A2  0E00               	movlw	0
 12361  0143A4  1564               	andwf	___fleq@ff2& (0+255),w,b
 12362  0143A6  6F68               	movwf	??___fleq& (0+255),b
 12363  0143A8  0E00               	movlw	0
 12364  0143AA  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
 12365  0143AC  6F69               	movwf	(??___fleq+1)& (0+255),b
 12366  0143AE  0E80               	movlw	128
 12367  0143B0  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
 12368  0143B2  6F6A               	movwf	(??___fleq+2)& (0+255),b
 12369  0143B4  0E7F               	movlw	127
 12370  0143B6  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
 12371  0143B8  6F6B               	movwf	(??___fleq+3)& (0+255),b
 12372  0143BA  5168               	movf	??___fleq& (0+255),w,b
 12373  0143BC  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 12374  0143BE  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 12375  0143C0  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 12376  0143C2  A4D8               	btfss	status,2,c
 12377  0143C4  D008               	goto	l9381
 12378                           
 12379                           ; BSR set to: 0
 12380  0143C6  0E00               	movlw	0
 12381  0143C8  6F64               	movwf	___fleq@ff2& (0+255),b
 12382  0143CA  0E00               	movlw	0
 12383  0143CC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
 12384  0143CE  0E00               	movlw	0
 12385  0143D0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
 12386  0143D2  0E00               	movlw	0
 12387  0143D4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
 12388  0143D6                     l9381:
 12389                           
 12390                           ; BSR set to: 0
 12391  0143D6  5164               	movf	___fleq@ff2& (0+255),w,b
 12392  0143D8  1960               	xorwf	___fleq@ff1& (0+255),w,b
 12393  0143DA  E10A               	bnz	u8450
 12394  0143DC  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
 12395  0143DE  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 12396  0143E0  E107               	bnz	u8450
 12397  0143E2  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
 12398  0143E4  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 12399  0143E6  E104               	bnz	u8450
 12400  0143E8  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
 12401  0143EA  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 12402  0143EC  B4D8               	btfsc	status,2,c
 12403  0143EE  D002               	goto	l9385
 12404  0143F0                     u8450:
 12405                           
 12406                           ; BSR set to: 0
 12407  0143F0  90D8               	bcf	status,0,c
 12408  0143F2  0012               	return	
 12409  0143F4                     l9385:
 12410                           
 12411                           ; BSR set to: 0
 12412  0143F4  80D8               	bsf	status,0,c
 12413                           
 12414                           ; BSR set to: 0
 12415  0143F6  0012               	return		;funcret
 12416  0143F8                     __end_of___fleq:
 12417                           	callstack 0
 12418                           
 12419 ;; *************** function ___fldiv *****************
 12420 ;; Defined at:
 12421 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;  b               4   18[BANK0 ] unsigned char 
 12424 ;;  a               4   22[BANK0 ] unsigned char 
 12425 ;; Auto vars:     Size  Location     Type
 12426 ;;  grs             4   37[BANK0 ] unsigned long 
 12427 ;;  rem             4   30[BANK0 ] unsigned long 
 12428 ;;  new_exp         2   35[BANK0 ] short 
 12429 ;;  aexp            1   42[BANK0 ] unsigned char 
 12430 ;;  bexp            1   41[BANK0 ] unsigned char 
 12431 ;;  sign            1   34[BANK0 ] unsigned char 
 12432 ;; Return value:  Size  Location     Type
 12433 ;;                  4   18[BANK0 ] unsigned char 
 12434 ;; Registers used:
 12435 ;;		wreg, status,2, status,0
 12436 ;; Tracked objects:
 12437 ;;		On entry : 3F/0
 12438 ;;		On exit  : 3F/0
 12439 ;;		Unchanged: 0/0
 12440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12441 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12442 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12444 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12445 ;;Total ram usage:       25 bytes
 12446 ;; Hardware stack levels used: 1
 12447 ;; Hardware stack levels required when called: 7
 12448 ;; This function calls:
 12449 ;;		Nothing
 12450 ;; This function is called by:
 12451 ;;		_ps_math
 12452 ;;		_efgtoa
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           
 12456                           	psect	text29
 12457  012916                     __ptext29:
 12458                           	callstack 0
 12459  012916                     ___fldiv:
 12460                           	callstack 19
 12461                           
 12462                           ; BSR set to: 0
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;incstack = 0
 12466  012916  5175               	movf	(___fldiv@b+3)& (0+255),w,b
 12467  012918  0B80               	andlw	128
 12468  01291A  6F82               	movwf	___fldiv@sign& (0+255),b
 12469  01291C  5175               	movf	(___fldiv@b+3)& (0+255),w,b
 12470  01291E  2575               	addwf	(___fldiv@b+3)& (0+255),w,b
 12471  012920  6F89               	movwf	___fldiv@bexp& (0+255),b
 12472                           
 12473                           ; BSR set to: 0
 12474  012922  BF74               	btfsc	(___fldiv@b+2)& (0+255),7,b
 12475                           
 12476                           ; BSR set to: 0
 12477  012924  8189               	bsf	___fldiv@bexp& (0+255),0,b
 12478                           
 12479                           ; BSR set to: 0
 12480  012926  5189               	movf	___fldiv@bexp& (0+255),w,b
 12481  012928  B4D8               	btfsc	status,2,c
 12482  01292A  D00D               	goto	l9035
 12483                           
 12484                           ; BSR set to: 0
 12485  01292C  2989               	incf	___fldiv@bexp& (0+255),w,b
 12486  01292E  A4D8               	btfss	status,2,c
 12487  012930  D008               	goto	l9031
 12488                           
 12489                           ; BSR set to: 0
 12490  012932  0E00               	movlw	0
 12491  012934  6F72               	movwf	___fldiv@b& (0+255),b
 12492  012936  0E00               	movlw	0
 12493  012938  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12494  01293A  0E00               	movlw	0
 12495  01293C  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12496  01293E  0E00               	movlw	0
 12497  012940  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12498  012942                     l9031:
 12499                           
 12500                           ; BSR set to: 0
 12501  012942  8F74               	bsf	(___fldiv@b+2)& (0+255),7,b
 12502  012944  D006               	goto	L13
 12503  012946                     l9035:
 12504                           
 12505                           ; BSR set to: 0
 12506  012946  0E00               	movlw	0
 12507  012948  6F72               	movwf	___fldiv@b& (0+255),b
 12508  01294A  0E00               	movlw	0
 12509  01294C  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12510  01294E  0E00               	movlw	0
 12511  012950  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12512  012952                     L13:
 12513  012952  0E00               	movlw	0
 12514  012954  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12515                           
 12516                           ; BSR set to: 0
 12517  012956  5179               	movf	(___fldiv@a+3)& (0+255),w,b
 12518  012958  0B80               	andlw	128
 12519  01295A  1B82               	xorwf	___fldiv@sign& (0+255),f,b
 12520                           
 12521                           ; BSR set to: 0
 12522  01295C  5179               	movf	(___fldiv@a+3)& (0+255),w,b
 12523  01295E  2579               	addwf	(___fldiv@a+3)& (0+255),w,b
 12524  012960  6F8A               	movwf	___fldiv@aexp& (0+255),b
 12525                           
 12526                           ; BSR set to: 0
 12527  012962  BF78               	btfsc	(___fldiv@a+2)& (0+255),7,b
 12528                           
 12529                           ; BSR set to: 0
 12530  012964  818A               	bsf	___fldiv@aexp& (0+255),0,b
 12531                           
 12532                           ; BSR set to: 0
 12533  012966  518A               	movf	___fldiv@aexp& (0+255),w,b
 12534  012968  B4D8               	btfsc	status,2,c
 12535  01296A  D00D               	goto	l9055
 12536                           
 12537                           ; BSR set to: 0
 12538  01296C  298A               	incf	___fldiv@aexp& (0+255),w,b
 12539  01296E  A4D8               	btfss	status,2,c
 12540  012970  D008               	goto	l9051
 12541                           
 12542                           ; BSR set to: 0
 12543  012972  0E00               	movlw	0
 12544  012974  6F76               	movwf	___fldiv@a& (0+255),b
 12545  012976  0E00               	movlw	0
 12546  012978  6F77               	movwf	(___fldiv@a+1)& (0+255),b
 12547  01297A  0E00               	movlw	0
 12548  01297C  6F78               	movwf	(___fldiv@a+2)& (0+255),b
 12549  01297E  0E00               	movlw	0
 12550  012980  6F79               	movwf	(___fldiv@a+3)& (0+255),b
 12551  012982                     l9051:
 12552                           
 12553                           ; BSR set to: 0
 12554  012982  8F78               	bsf	(___fldiv@a+2)& (0+255),7,b
 12555  012984  D006               	goto	L14
 12556  012986                     l9055:
 12557                           
 12558                           ; BSR set to: 0
 12559  012986  0E00               	movlw	0
 12560  012988  6F76               	movwf	___fldiv@a& (0+255),b
 12561  01298A  0E00               	movlw	0
 12562  01298C  6F77               	movwf	(___fldiv@a+1)& (0+255),b
 12563  01298E  0E00               	movlw	0
 12564  012990  6F78               	movwf	(___fldiv@a+2)& (0+255),b
 12565  012992                     L14:
 12566  012992  0E00               	movlw	0
 12567  012994  6F79               	movwf	(___fldiv@a+3)& (0+255),b
 12568                           
 12569                           ; BSR set to: 0
 12570  012996  5176               	movf	___fldiv@a& (0+255),w,b
 12571  012998  1177               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12572  01299A  1178               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12573  01299C  1179               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12574  01299E  A4D8               	btfss	status,2,c
 12575  0129A0  D017               	goto	l9069
 12576                           
 12577                           ; BSR set to: 0
 12578  0129A2  0E00               	movlw	0
 12579  0129A4  6F72               	movwf	___fldiv@b& (0+255),b
 12580  0129A6  0E00               	movlw	0
 12581  0129A8  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12582  0129AA  0E00               	movlw	0
 12583  0129AC  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12584  0129AE  0E00               	movlw	0
 12585  0129B0  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12586                           
 12587                           ; BSR set to: 0
 12588  0129B2  0E80               	movlw	128
 12589  0129B4  1374               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12590  0129B6  0E7F               	movlw	127
 12591  0129B8  1375               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12592  0129BA                     l9063:
 12593                           
 12594                           ; BSR set to: 0
 12595  0129BA  5182               	movf	___fldiv@sign& (0+255),w,b
 12596  0129BC  1375               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12597                           
 12598                           ; BSR set to: 0
 12599  0129BE  C072  F072         	movff	___fldiv@b,?___fldiv
 12600  0129C2  C073  F073         	movff	___fldiv@b+1,?___fldiv+1
 12601  0129C6  C074  F074         	movff	___fldiv@b+2,?___fldiv+2
 12602  0129CA  C075  F075         	movff	___fldiv@b+3,?___fldiv+3
 12603  0129CE  0012               	return	
 12604  0129D0                     l9069:
 12605                           
 12606                           ; BSR set to: 0
 12607  0129D0  5189               	movf	___fldiv@bexp& (0+255),w,b
 12608  0129D2  A4D8               	btfss	status,2,c
 12609  0129D4  D009               	goto	l9077
 12610                           
 12611                           ; BSR set to: 0
 12612                           
 12613                           ; BSR set to: 0
 12614  0129D6  0E00               	movlw	0
 12615  0129D8  6F72               	movwf	?___fldiv& (0+255),b
 12616  0129DA  0E00               	movlw	0
 12617  0129DC  6F73               	movwf	(?___fldiv+1)& (0+255),b
 12618  0129DE  0E00               	movlw	0
 12619  0129E0  6F74               	movwf	(?___fldiv+2)& (0+255),b
 12620  0129E2  0E00               	movlw	0
 12621  0129E4  6F75               	movwf	(?___fldiv+3)& (0+255),b
 12622  0129E6  0012               	return	
 12623  0129E8                     l9077:
 12624                           
 12625                           ; BSR set to: 0
 12626  0129E8  518A               	movf	___fldiv@aexp& (0+255),w,b
 12627  0129EA  C089  F07A         	movff	___fldiv@bexp,??___fldiv
 12628  0129EE  6B7B               	clrf	(??___fldiv+1)& (0+255),b
 12629  0129F0  5F7A               	subwf	??___fldiv& (0+255),f,b
 12630  0129F2  0E00               	movlw	0
 12631  0129F4  5B7B               	subwfb	(??___fldiv+1)& (0+255),f,b
 12632  0129F6  0E7F               	movlw	127
 12633  0129F8  257A               	addwf	??___fldiv& (0+255),w,b
 12634  0129FA  6F83               	movwf	___fldiv@new_exp& (0+255),b
 12635  0129FC  0E00               	movlw	0
 12636  0129FE  217B               	addwfc	(??___fldiv+1)& (0+255),w,b
 12637  012A00  6F84               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12638                           
 12639                           ; BSR set to: 0
 12640  012A02  C072  F07E         	movff	___fldiv@b,___fldiv@rem
 12641  012A06  C073  F07F         	movff	___fldiv@b+1,___fldiv@rem+1
 12642  012A0A  C074  F080         	movff	___fldiv@b+2,___fldiv@rem+2
 12643  012A0E  C075  F081         	movff	___fldiv@b+3,___fldiv@rem+3
 12644                           
 12645                           ; BSR set to: 0
 12646  012A12  0E00               	movlw	0
 12647  012A14  6F72               	movwf	___fldiv@b& (0+255),b
 12648  012A16  0E00               	movlw	0
 12649  012A18  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12650  012A1A  0E00               	movlw	0
 12651  012A1C  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12652  012A1E  0E00               	movlw	0
 12653  012A20  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12654                           
 12655                           ; BSR set to: 0
 12656  012A22  0E00               	movlw	0
 12657  012A24  6F85               	movwf	___fldiv@grs& (0+255),b
 12658  012A26  0E00               	movlw	0
 12659  012A28  6F86               	movwf	(___fldiv@grs+1)& (0+255),b
 12660  012A2A  0E00               	movlw	0
 12661  012A2C  6F87               	movwf	(___fldiv@grs+2)& (0+255),b
 12662  012A2E  0E00               	movlw	0
 12663  012A30  6F88               	movwf	(___fldiv@grs+3)& (0+255),b
 12664                           
 12665                           ; BSR set to: 0
 12666  012A32  0E00               	movlw	0
 12667  012A34  6F8A               	movwf	___fldiv@aexp& (0+255),b
 12668  012A36  D028               	goto	l2413
 12669  012A38                     l9087:
 12670                           
 12671                           ; BSR set to: 0
 12672  012A38  518A               	movf	___fldiv@aexp& (0+255),w,b
 12673  012A3A  B4D8               	btfsc	status,2,c
 12674  012A3C  D011               	goto	l9095
 12675                           
 12676                           ; BSR set to: 0
 12677  012A3E  90D8               	bcf	status,0,c
 12678  012A40  377E               	rlcf	___fldiv@rem& (0+255),f,b
 12679  012A42  377F               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12680  012A44  3780               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12681  012A46  3781               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12682  012A48  90D8               	bcf	status,0,c
 12683  012A4A  3772               	rlcf	___fldiv@b& (0+255),f,b
 12684  012A4C  3773               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12685  012A4E  3774               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12686  012A50  3775               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12687                           
 12688                           ; BSR set to: 0
 12689  012A52  BF88               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12690                           
 12691                           ; BSR set to: 0
 12692  012A54  8172               	bsf	___fldiv@b& (0+255),0,b
 12693                           
 12694                           ; BSR set to: 0
 12695  012A56  90D8               	bcf	status,0,c
 12696  012A58  3785               	rlcf	___fldiv@grs& (0+255),f,b
 12697  012A5A  3786               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12698  012A5C  3787               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12699  012A5E  3788               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12700  012A60                     l9095:
 12701                           
 12702                           ; BSR set to: 0
 12703  012A60  5176               	movf	___fldiv@a& (0+255),w,b
 12704  012A62  5D7E               	subwf	___fldiv@rem& (0+255),w,b
 12705  012A64  5177               	movf	(___fldiv@a+1)& (0+255),w,b
 12706  012A66  597F               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12707  012A68  5178               	movf	(___fldiv@a+2)& (0+255),w,b
 12708  012A6A  5980               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12709  012A6C  5179               	movf	(___fldiv@a+3)& (0+255),w,b
 12710  012A6E  5981               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12711  012A70  A0D8               	btfss	status,0,c
 12712  012A72  D009               	goto	l9101
 12713                           
 12714                           ; BSR set to: 0
 12715  012A74  8D88               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12716                           
 12717                           ; BSR set to: 0
 12718  012A76  5176               	movf	___fldiv@a& (0+255),w,b
 12719  012A78  5F7E               	subwf	___fldiv@rem& (0+255),f,b
 12720  012A7A  5177               	movf	(___fldiv@a+1)& (0+255),w,b
 12721  012A7C  5B7F               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12722  012A7E  5178               	movf	(___fldiv@a+2)& (0+255),w,b
 12723  012A80  5B80               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12724  012A82  5179               	movf	(___fldiv@a+3)& (0+255),w,b
 12725  012A84  5B81               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12726  012A86                     l9101:
 12727                           
 12728                           ; BSR set to: 0
 12729  012A86  2B8A               	incf	___fldiv@aexp& (0+255),f,b
 12730  012A88                     l2413:
 12731                           
 12732                           ; BSR set to: 0
 12733  012A88  0E19               	movlw	25
 12734  012A8A  658A               	cpfsgt	___fldiv@aexp& (0+255),b
 12735  012A8C  D7D5               	goto	l9087
 12736                           
 12737                           ; BSR set to: 0
 12738  012A8E  517E               	movf	___fldiv@rem& (0+255),w,b
 12739  012A90  117F               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12740  012A92  1180               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12741  012A94  1181               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12742  012A96  B4D8               	btfsc	status,2,c
 12743  012A98  D011               	goto	l9113
 12744                           
 12745                           ; BSR set to: 0
 12746  012A9A  8185               	bsf	___fldiv@grs& (0+255),0,b
 12747  012A9C  D00F               	goto	l9113
 12748  012A9E                     l9107:
 12749                           
 12750                           ; BSR set to: 0
 12751  012A9E  90D8               	bcf	status,0,c
 12752  012AA0  3772               	rlcf	___fldiv@b& (0+255),f,b
 12753  012AA2  3773               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12754  012AA4  3774               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12755  012AA6  3775               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12756                           
 12757                           ; BSR set to: 0
 12758  012AA8  BF88               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12759                           
 12760                           ; BSR set to: 0
 12761  012AAA  8172               	bsf	___fldiv@b& (0+255),0,b
 12762                           
 12763                           ; BSR set to: 0
 12764  012AAC  90D8               	bcf	status,0,c
 12765  012AAE  3785               	rlcf	___fldiv@grs& (0+255),f,b
 12766  012AB0  3786               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12767  012AB2  3787               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12768  012AB4  3788               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12769  012AB6  0783               	decf	___fldiv@new_exp& (0+255),f,b
 12770  012AB8  A0D8               	btfss	status,0,c
 12771  012ABA  0784               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12772  012ABC                     l9113:
 12773                           
 12774                           ; BSR set to: 0
 12775  012ABC  AF74               	btfss	(___fldiv@b+2)& (0+255),7,b
 12776  012ABE  D7EF               	goto	l9107
 12777                           
 12778                           ; BSR set to: 0
 12779  012AC0  0E00               	movlw	0
 12780  012AC2  6F8A               	movwf	___fldiv@aexp& (0+255),b
 12781                           
 12782                           ; BSR set to: 0
 12783  012AC4  AF88               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12784  012AC6  D017               	goto	l2424
 12785                           
 12786                           ; BSR set to: 0
 12787  012AC8  0EFF               	movlw	255
 12788  012ACA  1585               	andwf	___fldiv@grs& (0+255),w,b
 12789  012ACC  6F7A               	movwf	??___fldiv& (0+255),b
 12790  012ACE  0EFF               	movlw	255
 12791  012AD0  1586               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12792  012AD2  6F7B               	movwf	(??___fldiv+1)& (0+255),b
 12793  012AD4  0EFF               	movlw	255
 12794  012AD6  1587               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12795  012AD8  6F7C               	movwf	(??___fldiv+2)& (0+255),b
 12796  012ADA  0E7F               	movlw	127
 12797  012ADC  1588               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12798  012ADE  6F7D               	movwf	(??___fldiv+3)& (0+255),b
 12799  012AE0  517A               	movf	??___fldiv& (0+255),w,b
 12800  012AE2  117B               	iorwf	(??___fldiv+1)& (0+255),w,b
 12801  012AE4  117C               	iorwf	(??___fldiv+2)& (0+255),w,b
 12802  012AE6  117D               	iorwf	(??___fldiv+3)& (0+255),w,b
 12803  012AE8  B4D8               	btfsc	status,2,c
 12804  012AEA  D003               	goto	l2425
 12805  012AEC                     u8060:
 12806                           
 12807                           ; BSR set to: 0
 12808  012AEC  0E01               	movlw	1
 12809  012AEE  6F8A               	movwf	___fldiv@aexp& (0+255),b
 12810  012AF0  D002               	goto	l2424
 12811  012AF2                     l2425:
 12812                           
 12813                           ; BSR set to: 0
 12814  012AF2  B172               	btfsc	___fldiv@b& (0+255),0,b
 12815  012AF4  D7FB               	goto	u8060
 12816  012AF6                     l2424:
 12817                           
 12818                           ; BSR set to: 0
 12819  012AF6  518A               	movf	___fldiv@aexp& (0+255),w,b
 12820  012AF8  B4D8               	btfsc	status,2,c
 12821  012AFA  D01F               	goto	l9133
 12822                           
 12823                           ; BSR set to: 0
 12824  012AFC  0E01               	movlw	1
 12825  012AFE  2772               	addwf	___fldiv@b& (0+255),f,b
 12826  012B00  0E00               	movlw	0
 12827  012B02  2373               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12828  012B04  2374               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12829  012B06  2375               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12830                           
 12831                           ; BSR set to: 0
 12832  012B08  A175               	btfss	(___fldiv@b+3)& (0+255),0,b
 12833  012B0A  D017               	goto	l9133
 12834                           
 12835                           ; BSR set to: 0
 12836  012B0C  C072  F07A         	movff	___fldiv@b,??___fldiv
 12837  012B10  C073  F07B         	movff	___fldiv@b+1,??___fldiv+1
 12838  012B14  C074  F07C         	movff	___fldiv@b+2,??___fldiv+2
 12839  012B18  C075  F07D         	movff	___fldiv@b+3,??___fldiv+3
 12840  012B1C  357D               	rlcf	(??___fldiv+3)& (0+255),w,b
 12841  012B1E  337D               	rrcf	(??___fldiv+3)& (0+255),f,b
 12842  012B20  337C               	rrcf	(??___fldiv+2)& (0+255),f,b
 12843  012B22  337B               	rrcf	(??___fldiv+1)& (0+255),f,b
 12844  012B24  337A               	rrcf	??___fldiv& (0+255),f,b
 12845  012B26  C07A  F072         	movff	??___fldiv,___fldiv@b
 12846  012B2A  C07B  F073         	movff	??___fldiv+1,___fldiv@b+1
 12847  012B2E  C07C  F074         	movff	??___fldiv+2,___fldiv@b+2
 12848  012B32  C07D  F075         	movff	??___fldiv+3,___fldiv@b+3
 12849                           
 12850                           ; BSR set to: 0
 12851  012B36  4B83               	infsnz	___fldiv@new_exp& (0+255),f,b
 12852  012B38  2B84               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12853  012B3A                     l9133:
 12854                           
 12855                           ; BSR set to: 0
 12856  012B3A  BF84               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12857  012B3C  D010               	goto	l9137
 12858  012B3E  5184               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12859  012B40  E103               	bnz	u8100
 12860  012B42  2983               	incf	___fldiv@new_exp& (0+255),w,b
 12861  012B44  A0D8               	btfss	status,0,c
 12862  012B46  D00B               	goto	l9137
 12863  012B48                     u8100:
 12864                           
 12865                           ; BSR set to: 0
 12866  012B48  0E00               	movlw	0
 12867  012B4A  6F84               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12868  012B4C  6983               	setf	___fldiv@new_exp& (0+255),b
 12869  012B4E  0E00               	movlw	0
 12870  012B50  6F72               	movwf	___fldiv@b& (0+255),b
 12871  012B52  0E00               	movlw	0
 12872  012B54  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12873  012B56  0E00               	movlw	0
 12874  012B58  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12875  012B5A  0E00               	movlw	0
 12876  012B5C  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12877  012B5E                     l9137:
 12878                           
 12879                           ; BSR set to: 0
 12880  012B5E  BF84               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12881  012B60  D005               	goto	u8110
 12882  012B62  5184               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12883  012B64  E111               	bnz	l9141
 12884  012B66  0583               	decf	___fldiv@new_exp& (0+255),w,b
 12885  012B68  B0D8               	btfsc	status,0,c
 12886  012B6A  D00E               	goto	l9141
 12887  012B6C                     u8110:
 12888                           
 12889                           ; BSR set to: 0
 12890  012B6C  0E00               	movlw	0
 12891  012B6E  6F84               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12892  012B70  0E00               	movlw	0
 12893  012B72  6F83               	movwf	___fldiv@new_exp& (0+255),b
 12894  012B74  0E00               	movlw	0
 12895  012B76  6F72               	movwf	___fldiv@b& (0+255),b
 12896  012B78  0E00               	movlw	0
 12897  012B7A  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12898  012B7C  0E00               	movlw	0
 12899  012B7E  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12900  012B80  0E00               	movlw	0
 12901  012B82  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12902  012B84  0E00               	movlw	0
 12903  012B86  6F82               	movwf	___fldiv@sign& (0+255),b
 12904  012B88                     l9141:
 12905                           
 12906                           ; BSR set to: 0
 12907  012B88  C083  F089         	movff	___fldiv@new_exp,___fldiv@bexp
 12908                           
 12909                           ; BSR set to: 0
 12910  012B8C  A189               	btfss	___fldiv@bexp& (0+255),0,b
 12911  012B8E  D002               	goto	l9147
 12912                           
 12913                           ; BSR set to: 0
 12914  012B90  8F74               	bsf	(___fldiv@b+2)& (0+255),7,b
 12915  012B92  D001               	goto	l9149
 12916  012B94                     l9147:
 12917                           
 12918                           ; BSR set to: 0
 12919  012B94  9F74               	bcf	(___fldiv@b+2)& (0+255),7,b
 12920  012B96                     l9149:
 12921                           
 12922                           ; BSR set to: 0
 12923  012B96  90D8               	bcf	status,0,c
 12924  012B98  3189               	rrcf	___fldiv@bexp& (0+255),w,b
 12925  012B9A  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12926  012B9C  D70E               	goto	l9063
 12927  012B9E                     __end_of___fldiv:
 12928                           	callstack 0
 12929                           
 12930 ;; *************** function ___awmod *****************
 12931 ;; Defined at:
 12932 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
 12933 ;; Parameters:    Size  Location     Type
 12934 ;;  dividend        2    0[BANK0 ] int 
 12935 ;;  divisor         2    2[BANK0 ] int 
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;  sign            1   32[COMRAM] unsigned char 
 12938 ;;  counter         1   31[COMRAM] unsigned char 
 12939 ;; Return value:  Size  Location     Type
 12940 ;;                  2    0[BANK0 ] int 
 12941 ;; Registers used:
 12942 ;;		wreg, status,2, status,0
 12943 ;; Tracked objects:
 12944 ;;		On entry : 3F/0
 12945 ;;		On exit  : 3F/0
 12946 ;;		Unchanged: 0/0
 12947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12948 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12951 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12952 ;;Total ram usage:        6 bytes
 12953 ;; Hardware stack levels used: 1
 12954 ;; Hardware stack levels required when called: 7
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		_efgtoa
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962                           	psect	text30
 12963  0144F0                     __ptext30:
 12964                           	callstack 0
 12965  0144F0                     ___awmod:
 12966                           	callstack 19
 12967                           
 12968                           ; BSR set to: 0
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;incstack = 0
 12972  0144F0  0E00               	movlw	0
 12973  0144F2  6E21               	movwf	___awmod@sign^0,c
 12974                           
 12975                           ; BSR set to: 0
 12976  0144F4  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12977  0144F6  D006               	goto	l9345
 12978                           
 12979                           ; BSR set to: 0
 12980  0144F8  6D60               	negf	___awmod@dividend& (0+255),b
 12981  0144FA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12982  0144FC  B0D8               	btfsc	status,0,c
 12983  0144FE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12984                           
 12985                           ; BSR set to: 0
 12986  014500  0E01               	movlw	1
 12987  014502  6E21               	movwf	___awmod@sign^0,c
 12988  014504                     l9345:
 12989                           
 12990                           ; BSR set to: 0
 12991  014504  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12992  014506  D004               	goto	l9349
 12993                           
 12994                           ; BSR set to: 0
 12995  014508  6D62               	negf	___awmod@divisor& (0+255),b
 12996  01450A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12997  01450C  B0D8               	btfsc	status,0,c
 12998  01450E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12999  014510                     l9349:
 13000                           
 13001                           ; BSR set to: 0
 13002  014510  5162               	movf	___awmod@divisor& (0+255),w,b
 13003  014512  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13004  014514  B4D8               	btfsc	status,2,c
 13005  014516  D018               	goto	l9365
 13006                           
 13007                           ; BSR set to: 0
 13008  014518  0E01               	movlw	1
 13009  01451A  6E20               	movwf	___awmod@counter^0,c
 13010  01451C  D004               	goto	l9355
 13011  01451E                     l9353:
 13012                           
 13013                           ; BSR set to: 0
 13014  01451E  90D8               	bcf	status,0,c
 13015  014520  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13016  014522  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13017  014524  2A20               	incf	___awmod@counter^0,f,c
 13018  014526                     l9355:
 13019                           
 13020                           ; BSR set to: 0
 13021  014526  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13022  014528  D7FA               	goto	l9353
 13023  01452A                     u8400:
 13024                           
 13025                           ; BSR set to: 0
 13026  01452A  5162               	movf	___awmod@divisor& (0+255),w,b
 13027  01452C  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13028  01452E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13029  014530  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13030  014532  A0D8               	btfss	status,0,c
 13031  014534  D004               	goto	l9361
 13032                           
 13033                           ; BSR set to: 0
 13034  014536  5162               	movf	___awmod@divisor& (0+255),w,b
 13035  014538  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13036  01453A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13037  01453C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13038  01453E                     l9361:
 13039                           
 13040                           ; BSR set to: 0
 13041  01453E  90D8               	bcf	status,0,c
 13042  014540  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13043  014542  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13044                           
 13045                           ; BSR set to: 0
 13046  014544  2E20               	decfsz	___awmod@counter^0,f,c
 13047  014546  D7F1               	goto	u8400
 13048  014548                     l9365:
 13049                           
 13050                           ; BSR set to: 0
 13051  014548  5021               	movf	___awmod@sign^0,w,c
 13052  01454A  B4D8               	btfsc	status,2,c
 13053  01454C  D004               	goto	l9369
 13054                           
 13055                           ; BSR set to: 0
 13056  01454E  6D60               	negf	___awmod@dividend& (0+255),b
 13057  014550  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13058  014552  B0D8               	btfsc	status,0,c
 13059  014554  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13060  014556                     l9369:
 13061                           
 13062                           ; BSR set to: 0
 13063  014556  C060  F060         	movff	___awmod@dividend,?___awmod
 13064  01455A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13065                           
 13066                           ; BSR set to: 0
 13067  01455E  0012               	return		;funcret
 13068  014560                     __end_of___awmod:
 13069                           	callstack 0
 13070                           
 13071 ;; *************** function ___awdiv *****************
 13072 ;; Defined at:
 13073 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;  dividend        2    0[BANK0 ] int 
 13076 ;;  divisor         2    2[BANK0 ] int 
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;  quotient        2    6[BANK0 ] int 
 13079 ;;  sign            1    5[BANK0 ] unsigned char 
 13080 ;;  counter         1    4[BANK0 ] unsigned char 
 13081 ;; Return value:  Size  Location     Type
 13082 ;;                  2    0[BANK0 ] int 
 13083 ;; Registers used:
 13084 ;;		wreg, status,2, status,0
 13085 ;; Tracked objects:
 13086 ;;		On entry : 3F/0
 13087 ;;		On exit  : 3F/0
 13088 ;;		Unchanged: 0/0
 13089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13090 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13091 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13093 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13094 ;;Total ram usage:        8 bytes
 13095 ;; Hardware stack levels used: 1
 13096 ;; Hardware stack levels required when called: 7
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_efgtoa
 13101 ;; This function uses a non-reentrant model
 13102 ;;
 13103                           
 13104                           	psect	text31
 13105  0143F8                     __ptext31:
 13106                           	callstack 0
 13107  0143F8                     ___awdiv:
 13108                           	callstack 19
 13109                           
 13110                           ; BSR set to: 0
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;incstack = 0
 13114  0143F8  0E00               	movlw	0
 13115  0143FA  6F65               	movwf	___awdiv@sign& (0+255),b
 13116                           
 13117                           ; BSR set to: 0
 13118  0143FC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13119  0143FE  D006               	goto	l9301
 13120                           
 13121                           ; BSR set to: 0
 13122  014400  6D62               	negf	___awdiv@divisor& (0+255),b
 13123  014402  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13124  014404  B0D8               	btfsc	status,0,c
 13125  014406  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13126                           
 13127                           ; BSR set to: 0
 13128  014408  0E01               	movlw	1
 13129  01440A  6F65               	movwf	___awdiv@sign& (0+255),b
 13130  01440C                     l9301:
 13131                           
 13132                           ; BSR set to: 0
 13133  01440C  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13134  01440E  D006               	goto	l9307
 13135                           
 13136                           ; BSR set to: 0
 13137  014410  6D60               	negf	___awdiv@dividend& (0+255),b
 13138  014412  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13139  014414  B0D8               	btfsc	status,0,c
 13140  014416  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13141                           
 13142                           ; BSR set to: 0
 13143  014418  0E01               	movlw	1
 13144  01441A  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13145  01441C                     l9307:
 13146                           
 13147                           ; BSR set to: 0
 13148  01441C  0E00               	movlw	0
 13149  01441E  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13150  014420  0E00               	movlw	0
 13151  014422  6F66               	movwf	___awdiv@quotient& (0+255),b
 13152                           
 13153                           ; BSR set to: 0
 13154  014424  5162               	movf	___awdiv@divisor& (0+255),w,b
 13155  014426  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13156  014428  B4D8               	btfsc	status,2,c
 13157  01442A  D01C               	goto	l9329
 13158                           
 13159                           ; BSR set to: 0
 13160  01442C  0E01               	movlw	1
 13161  01442E  6F64               	movwf	___awdiv@counter& (0+255),b
 13162  014430  D004               	goto	l9315
 13163  014432                     l9313:
 13164                           
 13165                           ; BSR set to: 0
 13166  014432  90D8               	bcf	status,0,c
 13167  014434  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13168  014436  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13169  014438  2B64               	incf	___awdiv@counter& (0+255),f,b
 13170  01443A                     l9315:
 13171                           
 13172                           ; BSR set to: 0
 13173  01443A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13174  01443C  D7FA               	goto	l9313
 13175  01443E                     u8340:
 13176                           
 13177                           ; BSR set to: 0
 13178  01443E  90D8               	bcf	status,0,c
 13179  014440  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13180  014442  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13181                           
 13182                           ; BSR set to: 0
 13183  014444  5162               	movf	___awdiv@divisor& (0+255),w,b
 13184  014446  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13185  014448  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13186  01444A  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13187  01444C  A0D8               	btfss	status,0,c
 13188  01444E  D005               	goto	l9325
 13189                           
 13190                           ; BSR set to: 0
 13191  014450  5162               	movf	___awdiv@divisor& (0+255),w,b
 13192  014452  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13193  014454  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13194  014456  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13195                           
 13196                           ; BSR set to: 0
 13197  014458  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13198  01445A                     l9325:
 13199                           
 13200                           ; BSR set to: 0
 13201  01445A  90D8               	bcf	status,0,c
 13202  01445C  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13203  01445E  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13204                           
 13205                           ; BSR set to: 0
 13206  014460  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13207  014462  D7ED               	goto	u8340
 13208  014464                     l9329:
 13209                           
 13210                           ; BSR set to: 0
 13211  014464  5165               	movf	___awdiv@sign& (0+255),w,b
 13212  014466  B4D8               	btfsc	status,2,c
 13213  014468  D004               	goto	l9333
 13214                           
 13215                           ; BSR set to: 0
 13216  01446A  6D66               	negf	___awdiv@quotient& (0+255),b
 13217  01446C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13218  01446E  B0D8               	btfsc	status,0,c
 13219  014470  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13220  014472                     l9333:
 13221                           
 13222                           ; BSR set to: 0
 13223  014472  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13224  014476  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13225                           
 13226                           ; BSR set to: 0
 13227  01447A  0012               	return		;funcret
 13228  01447C                     __end_of___awdiv:
 13229                           	callstack 0
 13230                           
 13231 ;; *************** function _atoi *****************
 13232 ;; Defined at:
 13233 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;  s               2    5[BANK0 ] PTR const unsigned char 
 13236 ;;		 -> STR_19(23), STR_18(29), STR_17(24), STR_16(24), 
 13237 ;;		 -> STR_15(153), STR_14(3), STR_13(6), STR_12(17), 
 13238 ;; Auto vars:     Size  Location     Type
 13239 ;;  n               2   13[BANK0 ] int 
 13240 ;;  neg             2   11[BANK0 ] int 
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  2    5[BANK0 ] int 
 13243 ;; Registers used:
 13244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13245 ;; Tracked objects:
 13246 ;;		On entry : 3F/0
 13247 ;;		On exit  : 3F/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13251 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13253 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13254 ;;Total ram usage:       10 bytes
 13255 ;; Hardware stack levels used: 1
 13256 ;; Hardware stack levels required when called: 8
 13257 ;; This function calls:
 13258 ;;		___wmul
 13259 ;;		_isdigit
 13260 ;;		_isspace
 13261 ;; This function is called by:
 13262 ;;		_vfpfcnvrt
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           	psect	text32
 13267  013748                     __ptext32:
 13268                           	callstack 0
 13269  013748                     _atoi:
 13270                           	callstack 19
 13271                           
 13272                           ; BSR set to: 0
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;incstack = 0
 13276  013748  0E00               	movlw	0
 13277  01374A  6F6E               	movwf	(atoi@n+1)& (0+255),b
 13278  01374C  0E00               	movlw	0
 13279  01374E  6F6D               	movwf	atoi@n& (0+255),b
 13280  013750  0E00               	movlw	0
 13281  013752  6F6C               	movwf	(atoi@neg+1)& (0+255),b
 13282  013754  0E00               	movlw	0
 13283  013756  6F6B               	movwf	atoi@neg& (0+255),b
 13284  013758  D002               	goto	l10081
 13285  01375A                     l10077:
 13286                           
 13287                           ; BSR set to: 0
 13288  01375A  4B65               	infsnz	atoi@s& (0+255),f,b
 13289  01375C  2B66               	incf	(atoi@s+1)& (0+255),f,b
 13290  01375E                     l10081:
 13291                           
 13292                           ; BSR set to: 0
 13293  01375E  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13294  013764  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13295  01376A                     	if	0	;tblptru may be non-zero
 13296  01376A                     	endif
 13297  01376A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13298  01376A  0E00               	movlw	low (__mediumconst shr (0+16))
 13299  01376C  6EF8               	movwf	tblptru,c
 13300  01376E                     	endif
 13301  01376E  0008               	tblrd		*
 13302  013770  50F5               	movf	tablat,w,c
 13303  013772  0A20               	xorlw	32
 13304  013774  B4D8               	btfsc	status,2,c
 13305  013776  D7F1               	goto	l10077
 13306                           
 13307                           ; BSR set to: 0
 13308  013778  0EF7               	movlw	247
 13309  01377A  6F67               	movwf	??_atoi& (0+255),b
 13310  01377C  0EFF               	movlw	255
 13311  01377E  6F68               	movwf	(??_atoi+1)& (0+255),b
 13312  013780  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13313  013786  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13314  01378C                     	if	0	;tblptru may be non-zero
 13315  01378C                     	endif
 13316  01378C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13317  01378C  0E00               	movlw	low (__mediumconst shr (0+16))
 13318  01378E  6EF8               	movwf	tblptru,c
 13319  013790                     	endif
 13320  013790  0008               	tblrd		*
 13321  013792  50F5               	movf	tablat,w,c
 13322  013794  6F69               	movwf	(??_atoi+2)& (0+255),b
 13323  013796  6B6A               	clrf	(??_atoi+3)& (0+255),b
 13324  013798  5167               	movf	??_atoi& (0+255),w,b
 13325  01379A  2769               	addwf	(??_atoi+2)& (0+255),f,b
 13326  01379C  5168               	movf	(??_atoi+1)& (0+255),w,b
 13327  01379E  236A               	addwfc	(??_atoi+3)& (0+255),f,b
 13328  0137A0  516A               	movf	(??_atoi+3)& (0+255),w,b
 13329  0137A2  E10C               	bnz	l10089
 13330  0137A4  0E05               	movlw	5
 13331  0137A6  5D69               	subwf	(??_atoi+2)& (0+255),w,b
 13332  0137A8  B0D8               	btfsc	status,0,c
 13333  0137AA  D008               	goto	l10089
 13334  0137AC  D7D6               	goto	l10077
 13335  0137AE                     l10085:
 13336                           
 13337                           ; BSR set to: 0
 13338  0137AE  0E00               	movlw	0
 13339  0137B0  6F6C               	movwf	(atoi@neg+1)& (0+255),b
 13340  0137B2  0E01               	movlw	1
 13341  0137B4  6F6B               	movwf	atoi@neg& (0+255),b
 13342  0137B6                     l10087:
 13343                           
 13344                           ; BSR set to: 0
 13345  0137B6  4B65               	infsnz	atoi@s& (0+255),f,b
 13346  0137B8  2B66               	incf	(atoi@s+1)& (0+255),f,b
 13347  0137BA  D036               	goto	l10097
 13348  0137BC                     l10089:
 13349                           
 13350                           ; BSR set to: 0
 13351  0137BC  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13352  0137C2  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13353  0137C8                     	if	0	;tblptru may be non-zero
 13354  0137C8                     	endif
 13355  0137C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13356  0137C8  0E00               	movlw	low (__mediumconst shr (0+16))
 13357  0137CA  6EF8               	movwf	tblptru,c
 13358  0137CC                     	endif
 13359  0137CC  0008               	tblrd		*
 13360  0137CE  50F5               	movf	tablat,w,c
 13361  0137D0  6F67               	movwf	??_atoi& (0+255),b
 13362  0137D2  6B68               	clrf	(??_atoi+1)& (0+255),b
 13363                           
 13364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13365                           ; Switch size 1, requested type "simple"
 13366                           ; Number of cases is 1, Range of values is 0 to 0
 13367                           ; switch strategies available:
 13368                           ; Name         Instructions Cycles
 13369                           ; simple_byte            4     3 (average)
 13370                           ;	Chosen strategy is simple_byte
 13371  0137D4  5168               	movf	(??_atoi+1)& (0+255),w,b
 13372  0137D6  0A00               	xorlw	0	; case 0
 13373  0137D8  A4D8               	btfss	status,2,c
 13374  0137DA  D026               	goto	l10097
 13375                           
 13376                           ; BSR set to: 0
 13377                           ; Switch size 1, requested type "simple"
 13378                           ; Number of cases is 2, Range of values is 43 to 45
 13379                           ; switch strategies available:
 13380                           ; Name         Instructions Cycles
 13381                           ; simple_byte            7     4 (average)
 13382                           ;	Chosen strategy is simple_byte
 13383  0137DC  5167               	movf	??_atoi& (0+255),w,b
 13384  0137DE  0A2B               	xorlw	43	; case 43
 13385  0137E0  B4D8               	btfsc	status,2,c
 13386  0137E2  D7E9               	goto	l10087
 13387  0137E4  0A06               	xorlw	6	; case 45
 13388  0137E6  B4D8               	btfsc	status,2,c
 13389  0137E8  D7E2               	goto	l10085
 13390  0137EA  D01E               	goto	l10097
 13391  0137EC                     l10091:
 13392                           
 13393                           ; BSR set to: 0
 13394  0137EC  C06D  F060         	movff	atoi@n,___wmul@multiplier
 13395  0137F0  C06E  F061         	movff	atoi@n+1,___wmul@multiplier+1
 13396  0137F4  0E00               	movlw	0
 13397  0137F6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13398  0137F8  0E0A               	movlw	10
 13399  0137FA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 13400  0137FC  EC14  F0A9         	call	___wmul	;wreg free
 13401  013800  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13402  013806  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13403  01380C                     	if	0	;tblptru may be non-zero
 13404  01380C                     	endif
 13405  01380C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13406  01380C  0E00               	movlw	low (__mediumconst shr (0+16))
 13407  01380E  6EF8               	movwf	tblptru,c
 13408  013810                     	endif
 13409  013810  0008               	tblrd		*
 13410  013812  50F5               	movf	tablat,w,c
 13411  013814  5F60               	subwf	?___wmul& (0+255),f,b
 13412  013816  0E00               	movlw	0
 13413  013818  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
 13414  01381A  0E30               	movlw	48
 13415  01381C  2560               	addwf	?___wmul& (0+255),w,b
 13416  01381E  6F6D               	movwf	atoi@n& (0+255),b
 13417  013820  0E00               	movlw	0
 13418  013822  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 13419  013824  6F6E               	movwf	(atoi@n+1)& (0+255),b
 13420  013826  D7C7               	goto	l10087
 13421  013828                     l10097:
 13422                           
 13423                           ; BSR set to: 0
 13424  013828  0ED0               	movlw	208
 13425  01382A  6F67               	movwf	??_atoi& (0+255),b
 13426  01382C  0EFF               	movlw	255
 13427  01382E  6F68               	movwf	(??_atoi+1)& (0+255),b
 13428  013830  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13429  013836  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13430  01383C                     	if	0	;tblptru may be non-zero
 13431  01383C                     	endif
 13432  01383C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13433  01383C  0E00               	movlw	low (__mediumconst shr (0+16))
 13434  01383E  6EF8               	movwf	tblptru,c
 13435  013840                     	endif
 13436  013840  0008               	tblrd		*
 13437  013842  50F5               	movf	tablat,w,c
 13438  013844  6F69               	movwf	(??_atoi+2)& (0+255),b
 13439  013846  6B6A               	clrf	(??_atoi+3)& (0+255),b
 13440  013848  5167               	movf	??_atoi& (0+255),w,b
 13441  01384A  2769               	addwf	(??_atoi+2)& (0+255),f,b
 13442  01384C  5168               	movf	(??_atoi+1)& (0+255),w,b
 13443  01384E  236A               	addwfc	(??_atoi+3)& (0+255),f,b
 13444  013850  516A               	movf	(??_atoi+3)& (0+255),w,b
 13445  013852  E104               	bnz	u9790
 13446  013854  0E0A               	movlw	10
 13447  013856  5D69               	subwf	(??_atoi+2)& (0+255),w,b
 13448  013858  A0D8               	btfss	status,0,c
 13449  01385A  D7C8               	goto	l10091
 13450  01385C                     u9790:
 13451                           
 13452                           ; BSR set to: 0
 13453  01385C  516B               	movf	atoi@neg& (0+255),w,b
 13454  01385E  116C               	iorwf	(atoi@neg+1)& (0+255),w,b
 13455  013860  A4D8               	btfss	status,2,c
 13456  013862  D00D               	goto	l2782
 13457                           
 13458                           ; BSR set to: 0
 13459  013864  C06D  F067         	movff	atoi@n,??_atoi
 13460  013868  C06E  F068         	movff	atoi@n+1,??_atoi+1
 13461  01386C  1F67               	comf	??_atoi& (0+255),f,b
 13462  01386E  1F68               	comf	(??_atoi+1)& (0+255),f,b
 13463  013870  4B67               	infsnz	??_atoi& (0+255),f,b
 13464  013872  2B68               	incf	(??_atoi+1)& (0+255),f,b
 13465  013874  C067  F065         	movff	??_atoi,?_atoi
 13466  013878  C068  F066         	movff	??_atoi+1,?_atoi+1
 13467  01387C  0012               	return	
 13468  01387E                     l2782:
 13469                           
 13470                           ; BSR set to: 0
 13471  01387E  C06D  F065         	movff	atoi@n,?_atoi
 13472  013882  C06E  F066         	movff	atoi@n+1,?_atoi+1
 13473                           
 13474                           ; BSR set to: 0
 13475  013886  0012               	return		;funcret
 13476  013888                     __end_of_atoi:
 13477                           	callstack 0
 13478                           
 13479 ;; *************** function _isspace *****************
 13480 ;; Defined at:
 13481 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
 13482 ;; Parameters:    Size  Location     Type
 13483 ;;  c               2   31[COMRAM] int 
 13484 ;; Auto vars:     Size  Location     Type
 13485 ;;		None
 13486 ;; Return value:  Size  Location     Type
 13487 ;;                  2   31[COMRAM] int 
 13488 ;; Registers used:
 13489 ;;		wreg, status,2, status,0
 13490 ;; Tracked objects:
 13491 ;;		On entry : 0/0
 13492 ;;		On exit  : 3F/0
 13493 ;;		Unchanged: 0/0
 13494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13497 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13498 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13499 ;;Total ram usage:        7 bytes
 13500 ;; Hardware stack levels used: 1
 13501 ;; Hardware stack levels required when called: 7
 13502 ;; This function calls:
 13503 ;;		Nothing
 13504 ;; This function is called by:
 13505 ;;		_atoi
 13506 ;; This function uses a non-reentrant model
 13507 ;;
 13508                           
 13509                           	psect	text33
 13510  014D7E                     __ptext33:
 13511                           	callstack 0
 13512  014D7E                     _isspace:
 13513                           	callstack 19
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;incstack = 0
 13517  014D7E  0E01               	movlw	1
 13518  014D80  0100               	movlb	0	; () banked
 13519  014D82  6F64               	movwf	_isspace$4305& (0+255),b
 13520                           
 13521                           ; BSR set to: 0
 13522  014D84  0E20               	movlw	32
 13523  014D86  1820               	xorwf	isspace@c^0,w,c
 13524  014D88  1021               	iorwf	(isspace@c+1)^0,w,c
 13525  014D8A  B4D8               	btfsc	status,2,c
 13526  014D8C  D014               	goto	l9599
 13527                           
 13528                           ; BSR set to: 0
 13529  014D8E  0EF7               	movlw	247
 13530  014D90  6F60               	movwf	??_isspace& (0+255),b
 13531  014D92  0EFF               	movlw	255
 13532  014D94  6F61               	movwf	(??_isspace+1)& (0+255),b
 13533  014D96  C020  F062         	movff	isspace@c,??_isspace+2
 13534  014D9A  C021  F063         	movff	isspace@c+1,??_isspace+3
 13535  014D9E  5160               	movf	??_isspace& (0+255),w,b
 13536  014DA0  2762               	addwf	(??_isspace+2)& (0+255),f,b
 13537  014DA2  5161               	movf	(??_isspace+1)& (0+255),w,b
 13538  014DA4  2363               	addwfc	(??_isspace+3)& (0+255),f,b
 13539  014DA6  5163               	movf	(??_isspace+3)& (0+255),w,b
 13540  014DA8  E104               	bnz	u8930
 13541  014DAA  0E05               	movlw	5
 13542  014DAC  5D62               	subwf	(??_isspace+2)& (0+255),w,b
 13543  014DAE  A0D8               	btfss	status,0,c
 13544  014DB0  D002               	goto	l9599
 13545  014DB2                     u8930:
 13546                           
 13547                           ; BSR set to: 0
 13548  014DB2  0E00               	movlw	0
 13549  014DB4  6F64               	movwf	_isspace$4305& (0+255),b
 13550  014DB6                     l9599:
 13551                           
 13552                           ; BSR set to: 0
 13553  014DB6  C064  F020         	movff	_isspace$4305,?_isspace
 13554  014DBA  6A21               	clrf	(?_isspace+1)^0,c
 13555                           
 13556                           ; BSR set to: 0
 13557  014DBC  0012               	return		;funcret
 13558  014DBE                     __end_of_isspace:
 13559                           	callstack 0
 13560                           
 13561 ;; *************** function _isdigit *****************
 13562 ;; Defined at:
 13563 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
 13564 ;; Parameters:    Size  Location     Type
 13565 ;;  c               2   31[COMRAM] int 
 13566 ;; Auto vars:     Size  Location     Type
 13567 ;;		None
 13568 ;; Return value:  Size  Location     Type
 13569 ;;                  2   31[COMRAM] int 
 13570 ;; Registers used:
 13571 ;;		wreg, status,2, status,0
 13572 ;; Tracked objects:
 13573 ;;		On entry : 0/0
 13574 ;;		On exit  : 3F/0
 13575 ;;		Unchanged: 0/0
 13576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13579 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13580 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13581 ;;Total ram usage:        6 bytes
 13582 ;; Hardware stack levels used: 1
 13583 ;; Hardware stack levels required when called: 7
 13584 ;; This function calls:
 13585 ;;		Nothing
 13586 ;; This function is called by:
 13587 ;;		_vfpfcnvrt
 13588 ;;		_atoi
 13589 ;; This function uses a non-reentrant model
 13590 ;;
 13591                           
 13592                           	psect	text34
 13593  015108                     __ptext34:
 13594                           	callstack 0
 13595  015108                     _isdigit:
 13596                           	callstack 20
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;incstack = 0
 13600  015108  0ED0               	movlw	208
 13601  01510A  0100               	movlb	0	; () banked
 13602  01510C  6F60               	movwf	??_isdigit& (0+255),b
 13603  01510E  0EFF               	movlw	255
 13604  015110  6F61               	movwf	(??_isdigit+1)& (0+255),b
 13605  015112  C020  F062         	movff	isdigit@c,??_isdigit+2
 13606  015116  C021  F063         	movff	isdigit@c+1,??_isdigit+3
 13607  01511A  5160               	movf	??_isdigit& (0+255),w,b
 13608  01511C  2762               	addwf	(??_isdigit+2)& (0+255),f,b
 13609  01511E  5161               	movf	(??_isdigit+1)& (0+255),w,b
 13610  015120  2363               	addwfc	(??_isdigit+3)& (0+255),f,b
 13611  015122  5163               	movf	(??_isdigit+3)& (0+255),w,b
 13612  015124  E106               	bnz	u8900
 13613  015126  0E0A               	movlw	10
 13614  015128  5D62               	subwf	(??_isdigit+2)& (0+255),w,b
 13615  01512A  B0D8               	btfsc	status,0,c
 13616  01512C  D002               	goto	u8900
 13617  01512E  0E01               	movlw	1
 13618  015130  D001               	goto	u8910
 13619  015132                     u8900:
 13620  015132  0E00               	movlw	0
 13621  015134                     u8910:
 13622  015134  6E20               	movwf	?_isdigit^0,c
 13623  015136  6A21               	clrf	(?_isdigit+1)^0,c
 13624                           
 13625                           ; BSR set to: 0
 13626  015138  0012               	return		;funcret
 13627  01513A                     __end_of_isdigit:
 13628                           	callstack 0
 13629                           
 13630 ;; *************** function _init_display *****************
 13631 ;; Defined at:
 13632 ;;		line 31 in file "eadog.c"
 13633 ;; Parameters:    Size  Location     Type
 13634 ;;		None
 13635 ;; Auto vars:     Size  Location     Type
 13636 ;;		None
 13637 ;; Return value:  Size  Location     Type
 13638 ;;                  1    wreg      void 
 13639 ;; Registers used:
 13640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13641 ;; Tracked objects:
 13642 ;;		On entry : 0/0
 13643 ;;		On exit  : 3F/3D
 13644 ;;		Unchanged: 0/0
 13645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13650 ;;Total ram usage:        0 bytes
 13651 ;; Hardware stack levels used: 1
 13652 ;; Hardware stack levels required when called: 9
 13653 ;; This function calls:
 13654 ;;		_ringBufS_init
 13655 ;;		_send_lcd_cmd
 13656 ;;		_send_lcd_cmd_long
 13657 ;;		_send_lcd_data
 13658 ;;		_wdtdelay
 13659 ;; This function is called by:
 13660 ;;		_main
 13661 ;; This function uses a non-reentrant model
 13662 ;;
 13663                           
 13664                           	psect	text35
 13665  013E9A                     __ptext35:
 13666                           	callstack 0
 13667  013E9A                     _init_display:
 13668                           	callstack 21
 13669                           
 13670                           ;eadog.c: 33:  spi_link.tx1a = &ring_buf1;
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;incstack = 0
 13674  013E9A  0E80               	movlw	low _ring_buf1
 13675  013E9C  0101               	movlb	1	; () banked
 13676  013E9E  6F06               	movwf	(_spi_link+6)& (0+255),b	;volatile
 13677  013EA0  0E03               	movlw	high _ring_buf1
 13678  013EA2  6F07               	movwf	(_spi_link+7)& (0+255),b	;volatile
 13679                           
 13680                           ; BSR set to: 1
 13681                           ;eadog.c: 34:  ringBufS_init(spi_link.tx1a);
 13682  013EA4  C106  F06A         	movff	_spi_link+6,ringBufS_init@_this	;volatile
 13683  013EA8  C107  F06B         	movff	_spi_link+7,ringBufS_init@_this+1	;volatile
 13684  013EAC  EC2A  F0AA         	call	_ringBufS_init	;wreg free
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;eadog.c: 40:  SPI1CON0bits.EN = 0;
 13688  013EB0  013D               	movlb	61	; () banked
 13689  013EB2  9F14               	bcf	20,7,b	;volatile
 13690                           
 13691                           ; BSR set to: 61
 13692                           ;eadog.c: 42:  SPI1CON1 = 0x20;
 13693  013EB4  0E20               	movlw	32
 13694  013EB6  6F15               	movwf	21,b	;volatile
 13695                           
 13696                           ; BSR set to: 61
 13697                           ;eadog.c: 44:  SPI1CON2 = 0x03;
 13698  013EB8  0E03               	movlw	3
 13699  013EBA  6F16               	movwf	22,b	;volatile
 13700                           
 13701                           ; BSR set to: 61
 13702                           ;eadog.c: 46:  SPI1BAUD = 0x04;
 13703  013EBC  0E04               	movlw	4
 13704  013EBE  6F19               	movwf	25,b	;volatile
 13705                           
 13706                           ; BSR set to: 61
 13707                           ;eadog.c: 48:  SPI1CLK = 0x02;
 13708  013EC0  0E02               	movlw	2
 13709  013EC2  6F1C               	movwf	28,b	;volatile
 13710                           
 13711                           ; BSR set to: 61
 13712                           ;eadog.c: 50:  SPI1CON0 = 0x83;
 13713  013EC4  0E83               	movlw	131
 13714  013EC6  6F14               	movwf	20,b	;volatile
 13715                           
 13716                           ; BSR set to: 61
 13717                           ;eadog.c: 51:  SPI1CON0bits.EN = 1;
 13718  013EC8  8F14               	bsf	20,7,b	;volatile
 13719                           
 13720                           ; BSR set to: 61
 13721                           ;eadog.c: 53:  wdtdelay(350000);
 13722  013ECA  0E30               	movlw	48
 13723  013ECC  0100               	movlb	0	; () banked
 13724  013ECE  6F60               	movwf	wdtdelay@delay& (0+255),b
 13725  013ED0  0E57               	movlw	87
 13726  013ED2  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13727  013ED4  0E05               	movlw	5
 13728  013ED6  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13729  013ED8  0E00               	movlw	0
 13730  013EDA  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13731  013EDC  ECCB  F0A5         	call	_wdtdelay	;wreg free
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;eadog.c: 54:  send_lcd_cmd_long(0x46);
 13735  013EE0  0E46               	movlw	70
 13736  013EE2  EC1F  F0A7         	call	_send_lcd_cmd_long
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;eadog.c: 55:  send_lcd_cmd(0x41);
 13740  013EE6  0E41               	movlw	65
 13741  013EE8  EC3E  F0A7         	call	_send_lcd_cmd
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;eadog.c: 56:  wdtdelay(80);
 13745  013EEC  0E50               	movlw	80
 13746  013EEE  6F60               	movwf	wdtdelay@delay& (0+255),b
 13747  013EF0  0E00               	movlw	0
 13748  013EF2  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13749  013EF4  0E00               	movlw	0
 13750  013EF6  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13751  013EF8  0E00               	movlw	0
 13752  013EFA  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13753  013EFC  ECCB  F0A5         	call	_wdtdelay	;wreg free
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;eadog.c: 57:  send_lcd_cmd(0x53);
 13757  013F00  0E53               	movlw	83
 13758  013F02  EC3E  F0A7         	call	_send_lcd_cmd
 13759                           
 13760                           ; BSR set to: 0
 13761                           ;eadog.c: 58:  send_lcd_data(2);
 13762  013F06  0E02               	movlw	2
 13763  013F08  ECE6  F0A9         	call	_send_lcd_data
 13764                           
 13765                           ; BSR set to: 0
 13766                           ;eadog.c: 59:  wdtdelay(80);
 13767  013F0C  0E50               	movlw	80
 13768  013F0E  6F60               	movwf	wdtdelay@delay& (0+255),b
 13769  013F10  0E00               	movlw	0
 13770  013F12  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13771  013F14  0E00               	movlw	0
 13772  013F16  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13773  013F18  0E00               	movlw	0
 13774  013F1A  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13775  013F1C  ECCB  F0A5         	call	_wdtdelay	;wreg free
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;eadog.c: 60:  send_lcd_cmd_long(0x51);
 13779  013F20  0E51               	movlw	81
 13780  013F22  EC1F  F0A7         	call	_send_lcd_cmd_long
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;eadog.c: 61:  SPI1CON0bits.EN = 0;
 13784  013F26  013D               	movlb	61	; () banked
 13785  013F28  9F14               	bcf	20,7,b	;volatile
 13786                           
 13787                           ; BSR set to: 61
 13788                           ;eadog.c: 62:  SPI1CON2 = 0x02;
 13789  013F2A  0E02               	movlw	2
 13790  013F2C  6F16               	movwf	22,b	;volatile
 13791                           
 13792                           ; BSR set to: 61
 13793                           ;eadog.c: 63:  SPI1CON0bits.EN = 1;
 13794  013F2E  8F14               	bsf	20,7,b	;volatile
 13795                           
 13796                           ; BSR set to: 61
 13797                           ;eadog.c: 65:  SPI1INTFbits.SPI1TXUIF = 0;
 13798  013F30  931A               	bcf	26,1,b	;volatile
 13799                           
 13800                           ; BSR set to: 61
 13801                           ;eadog.c: 66:  DMA1CON1bits.DMODE = 0;
 13802  013F32  0E3F               	movlw	-193
 13803  013F34  013B               	movlb	59	; () banked
 13804  013F36  17FD               	andwf	253,f,b	;volatile
 13805                           
 13806                           ; BSR set to: 59
 13807                           ;eadog.c: 67:  DMA1CON1bits.DSTP = 0;
 13808  013F38  9BFD               	bcf	253,5,b	;volatile
 13809                           
 13810                           ; BSR set to: 59
 13811                           ;eadog.c: 68:  DMA1CON1bits.SMODE = 1;
 13812  013F3A  51FD               	movf	253,w,b	;volatile
 13813  013F3C  0BF9               	andlw	-7
 13814  013F3E  0902               	iorlw	2
 13815  013F40  6FFD               	movwf	253,b	;volatile
 13816                           
 13817                           ; BSR set to: 59
 13818                           ;eadog.c: 69:  DMA1CON1bits.SMR = 0;
 13819  013F42  0EE7               	movlw	-25
 13820  013F44  17FD               	andwf	253,f,b	;volatile
 13821                           
 13822                           ; BSR set to: 59
 13823                           ;eadog.c: 70:  DMA1CON1bits.SSTP = 1;
 13824  013F46  81FD               	bsf	253,0,b	;volatile
 13825                           
 13826                           ; BSR set to: 59
 13827                           ;eadog.c: 71:  DMA1SSA = (uint24_t) & ring_buf1;
 13828  013F48  0E80               	movlw	low _ring_buf1
 13829  013F4A  6FF9               	movwf	249,b	;volatile
 13830  013F4C  0E03               	movlw	high _ring_buf1
 13831  013F4E  6FFA               	movwf	250,b	;volatile
 13832  013F50  0E00               	movlw	low (_ring_buf1 shr (0+16))
 13833  013F52  6FFB               	movwf	251,b	;volatile
 13834                           
 13835                           ; BSR set to: 59
 13836                           ;eadog.c: 72:  DMA1CON0bits.DGO = 0;
 13837  013F54  9BFC               	bcf	252,5,b	;volatile
 13838                           
 13839                           ; BSR set to: 59
 13840                           ;eadog.c: 73:  SPI1INTFbits.SPI1TXUIF = 1;
 13841  013F56  013D               	movlb	61	; () banked
 13842  013F58  831A               	bsf	26,1,b	;volatile
 13843                           
 13844                           ; BSR set to: 61
 13845  013F5A  0012               	return		;funcret
 13846  013F5C                     __end_of_init_display:
 13847                           	callstack 0
 13848                           
 13849 ;; *************** function _send_lcd_data *****************
 13850 ;; Defined at:
 13851 ;;		line 101 in file "eadog.c"
 13852 ;; Parameters:    Size  Location     Type
 13853 ;;  data            1    wreg     const unsigned char 
 13854 ;; Auto vars:     Size  Location     Type
 13855 ;;  data            1   32[COMRAM] const unsigned char 
 13856 ;; Return value:  Size  Location     Type
 13857 ;;                  1    wreg      void 
 13858 ;; Registers used:
 13859 ;;		wreg, status,2, status,0, cstack
 13860 ;; Tracked objects:
 13861 ;;		On entry : 3F/0
 13862 ;;		On exit  : 3F/0
 13863 ;;		Unchanged: 0/0
 13864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13869 ;;Total ram usage:        1 bytes
 13870 ;; Hardware stack levels used: 1
 13871 ;; Hardware stack levels required when called: 8
 13872 ;; This function calls:
 13873 ;;		_SPI1_ExchangeByte
 13874 ;;		_wdtdelay
 13875 ;; This function is called by:
 13876 ;;		_init_display
 13877 ;; This function uses a non-reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text36
 13881  0153CC                     __ptext36:
 13882                           	callstack 0
 13883  0153CC                     _send_lcd_data:
 13884                           	callstack 21
 13885                           
 13886                           ; BSR set to: 61
 13887                           ;incstack = 0
 13888                           ;send_lcd_data@data stored from wreg
 13889  0153CC  6E21               	movwf	send_lcd_data@data^0,c
 13890                           
 13891                           ;eadog.c: 101: static void send_lcd_data(const uint8_t data);eadog.c: 102: {;eadog.c: 10
      +                          3:  do { LATCbits.LATC2 = 0; } while(0);
 13892  0153CE  94BC               	bcf	188,2,c	;volatile
 13893                           
 13894                           ;eadog.c: 104:  SPI1_ExchangeByte(data);
 13895  0153D0  5021               	movf	send_lcd_data@data^0,w,c
 13896  0153D2  ECB1  F0AA         	call	_SPI1_ExchangeByte
 13897                           
 13898                           ; BSR set to: 61
 13899                           ;eadog.c: 105:  wdtdelay(8);
 13900  0153D6  0E08               	movlw	8
 13901  0153D8  0100               	movlb	0	; () banked
 13902  0153DA  6F60               	movwf	wdtdelay@delay& (0+255),b
 13903  0153DC  0E00               	movlw	0
 13904  0153DE  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13905  0153E0  0E00               	movlw	0
 13906  0153E2  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13907  0153E4  0E00               	movlw	0
 13908  0153E6  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13909  0153E8  ECCB  F0A5         	call	_wdtdelay	;wreg free
 13910                           
 13911                           ; BSR set to: 0
 13912  0153EC  0012               	return		;funcret
 13913  0153EE                     __end_of_send_lcd_data:
 13914                           	callstack 0
 13915                           
 13916 ;; *************** function _send_lcd_cmd_long *****************
 13917 ;; Defined at:
 13918 ;;		line 117 in file "eadog.c"
 13919 ;; Parameters:    Size  Location     Type
 13920 ;;  cmd             1    wreg     const unsigned char 
 13921 ;; Auto vars:     Size  Location     Type
 13922 ;;  cmd             1   32[COMRAM] const unsigned char 
 13923 ;; Return value:  Size  Location     Type
 13924 ;;                  1    wreg      void 
 13925 ;; Registers used:
 13926 ;;		wreg, status,2, status,0, cstack
 13927 ;; Tracked objects:
 13928 ;;		On entry : 3F/0
 13929 ;;		On exit  : 3F/0
 13930 ;;		Unchanged: 0/0
 13931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13936 ;;Total ram usage:        1 bytes
 13937 ;; Hardware stack levels used: 1
 13938 ;; Hardware stack levels required when called: 8
 13939 ;; This function calls:
 13940 ;;		_SPI1_ExchangeByte
 13941 ;;		_wdtdelay
 13942 ;; This function is called by:
 13943 ;;		_init_display
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           	psect	text37
 13948  014E3E                     __ptext37:
 13949                           	callstack 0
 13950  014E3E                     _send_lcd_cmd_long:
 13951                           	callstack 21
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;incstack = 0
 13955                           ;send_lcd_cmd_long@cmd stored from wreg
 13956  014E3E  6E21               	movwf	send_lcd_cmd_long@cmd^0,c
 13957                           
 13958                           ;eadog.c: 117: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 118: {;eadog.c:
      +                           119:  do { LATCbits.LATC2 = 0; } while(0);
 13959  014E40  94BC               	bcf	188,2,c	;volatile
 13960                           
 13961                           ;eadog.c: 120:  SPI1_ExchangeByte(0xFE);
 13962  014E42  0EFE               	movlw	254
 13963  014E44  ECB1  F0AA         	call	_SPI1_ExchangeByte
 13964                           
 13965                           ; BSR set to: 61
 13966                           ;eadog.c: 121:  wdtdelay(8);
 13967  014E48  0E08               	movlw	8
 13968  014E4A  0100               	movlb	0	; () banked
 13969  014E4C  6F60               	movwf	wdtdelay@delay& (0+255),b
 13970  014E4E  0E00               	movlw	0
 13971  014E50  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13972  014E52  0E00               	movlw	0
 13973  014E54  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13974  014E56  0E00               	movlw	0
 13975  014E58  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13976  014E5A  ECCB  F0A5         	call	_wdtdelay	;wreg free
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;eadog.c: 122:  SPI1_ExchangeByte(cmd);
 13980  014E5E  5021               	movf	send_lcd_cmd_long@cmd^0,w,c
 13981  014E60  ECB1  F0AA         	call	_SPI1_ExchangeByte
 13982                           
 13983                           ;eadog.c: 123:  wdtdelay(800);
 13984  014E64  0E20               	movlw	32
 13985  014E66  0100               	movlb	0	; () banked
 13986  014E68  6F60               	movwf	wdtdelay@delay& (0+255),b
 13987  014E6A  0E03               	movlw	3
 13988  014E6C  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13989  014E6E  0E00               	movlw	0
 13990  014E70  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13991  014E72  0E00               	movlw	0
 13992  014E74  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13993  014E76  ECCB  F0A5         	call	_wdtdelay	;wreg free
 13994                           
 13995                           ; BSR set to: 0
 13996  014E7A  0012               	return		;funcret
 13997  014E7C                     __end_of_send_lcd_cmd_long:
 13998                           	callstack 0
 13999                           
 14000 ;; *************** function _send_lcd_cmd *****************
 14001 ;; Defined at:
 14002 ;;		line 108 in file "eadog.c"
 14003 ;; Parameters:    Size  Location     Type
 14004 ;;  cmd             1    wreg     const unsigned char 
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;  cmd             1   32[COMRAM] const unsigned char 
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  1    wreg      void 
 14009 ;; Registers used:
 14010 ;;		wreg, status,2, status,0, cstack
 14011 ;; Tracked objects:
 14012 ;;		On entry : 3F/0
 14013 ;;		On exit  : 3F/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14020 ;;Total ram usage:        1 bytes
 14021 ;; Hardware stack levels used: 1
 14022 ;; Hardware stack levels required when called: 8
 14023 ;; This function calls:
 14024 ;;		_SPI1_ExchangeByte
 14025 ;;		_wdtdelay
 14026 ;; This function is called by:
 14027 ;;		_init_display
 14028 ;; This function uses a non-reentrant model
 14029 ;;
 14030                           
 14031                           	psect	text38
 14032  014E7C                     __ptext38:
 14033                           	callstack 0
 14034  014E7C                     _send_lcd_cmd:
 14035                           	callstack 21
 14036                           
 14037                           ; BSR set to: 0
 14038                           ;incstack = 0
 14039                           ;send_lcd_cmd@cmd stored from wreg
 14040  014E7C  6E21               	movwf	send_lcd_cmd@cmd^0,c
 14041                           
 14042                           ;eadog.c: 108: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 109: {;eadog.c: 110:
      +                            do { LATCbits.LATC2 = 0; } while(0);
 14043  014E7E  94BC               	bcf	188,2,c	;volatile
 14044                           
 14045                           ;eadog.c: 111:  SPI1_ExchangeByte(0xFE);
 14046  014E80  0EFE               	movlw	254
 14047  014E82  ECB1  F0AA         	call	_SPI1_ExchangeByte
 14048                           
 14049                           ; BSR set to: 61
 14050                           ;eadog.c: 112:  wdtdelay(8);
 14051  014E86  0E08               	movlw	8
 14052  014E88  0100               	movlb	0	; () banked
 14053  014E8A  6F60               	movwf	wdtdelay@delay& (0+255),b
 14054  014E8C  0E00               	movlw	0
 14055  014E8E  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 14056  014E90  0E00               	movlw	0
 14057  014E92  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 14058  014E94  0E00               	movlw	0
 14059  014E96  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 14060  014E98  ECCB  F0A5         	call	_wdtdelay	;wreg free
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;eadog.c: 113:  SPI1_ExchangeByte(cmd);
 14064  014E9C  5021               	movf	send_lcd_cmd@cmd^0,w,c
 14065  014E9E  ECB1  F0AA         	call	_SPI1_ExchangeByte
 14066                           
 14067                           ;eadog.c: 114:  wdtdelay(8);
 14068  014EA2  0E08               	movlw	8
 14069  014EA4  0100               	movlb	0	; () banked
 14070  014EA6  6F60               	movwf	wdtdelay@delay& (0+255),b
 14071  014EA8  0E00               	movlw	0
 14072  014EAA  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 14073  014EAC  0E00               	movlw	0
 14074  014EAE  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 14075  014EB0  0E00               	movlw	0
 14076  014EB2  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 14077  014EB4  ECCB  F0A5         	call	_wdtdelay	;wreg free
 14078                           
 14079                           ; BSR set to: 0
 14080  014EB8  0012               	return		;funcret
 14081  014EBA                     __end_of_send_lcd_cmd:
 14082                           	callstack 0
 14083                           
 14084 ;; *************** function _wdtdelay *****************
 14085 ;; Defined at:
 14086 ;;		line 17 in file "eadog.c"
 14087 ;; Parameters:    Size  Location     Type
 14088 ;;  delay           4    0[BANK0 ] const unsigned long 
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;		None
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1    wreg      void 
 14093 ;; Registers used:
 14094 ;;		wreg, status,2, status,0
 14095 ;; Tracked objects:
 14096 ;;		On entry : 3F/0
 14097 ;;		On exit  : 3F/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14100 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;Total ram usage:        4 bytes
 14105 ;; Hardware stack levels used: 1
 14106 ;; Hardware stack levels required when called: 7
 14107 ;; This function calls:
 14108 ;;		Nothing
 14109 ;; This function is called by:
 14110 ;;		_init_display
 14111 ;;		_send_lcd_data
 14112 ;;		_send_lcd_cmd
 14113 ;;		_send_lcd_cmd_long
 14114 ;; This function uses a non-reentrant model
 14115 ;;
 14116                           
 14117                           	psect	text39
 14118  014B96                     __ptext39:
 14119                           	callstack 0
 14120  014B96                     _wdtdelay:
 14121                           	callstack 22
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;eadog.c: 17: void wdtdelay(const uint32_t delay);eadog.c: 18: {;eadog.c: 19:  static ui
      +                          nt32_t dcount;;eadog.c: 21:  for (dcount = 0; dcount <= delay; dcount++) {
 14125                           
 14126                           ; BSR set to: 0
 14127                           ;incstack = 0
 14128  014B96  0E00               	movlw	0
 14129  014B98  0101               	movlb	1	; () banked
 14130  014B9A  6F20               	movwf	wdtdelay@dcount& (0+255),b
 14131  014B9C  0E00               	movlw	0
 14132  014B9E  6F21               	movwf	(wdtdelay@dcount+1)& (0+255),b
 14133  014BA0  0E00               	movlw	0
 14134  014BA2  6F22               	movwf	(wdtdelay@dcount+2)& (0+255),b
 14135  014BA4  0E00               	movlw	0
 14136  014BA6  6F23               	movwf	(wdtdelay@dcount+3)& (0+255),b
 14137  014BA8                     l1685:
 14138                           
 14139                           ;eadog.c: 22:   __nop();
 14140  014BA8  F000               	nop	
 14141  014BAA  0004               	clrwdt		;# 
 14142                           
 14143                           ;eadog.c: 24:  };
 14144  014BAC  0E01               	movlw	1
 14145  014BAE  0101               	movlb	1	; () banked
 14146  014BB0  2720               	addwf	wdtdelay@dcount& (0+255),f,b
 14147  014BB2  0E00               	movlw	0
 14148  014BB4  2321               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 14149  014BB6  2322               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 14150  014BB8  2323               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 14151  014BBA  5120               	movf	wdtdelay@dcount& (0+255),w,b
 14152  014BBC  0100               	movlb	0	; () banked
 14153  014BBE  5D60               	subwf	wdtdelay@delay& (0+255),w,b
 14154  014BC0  0101               	movlb	1	; () banked
 14155  014BC2  5121               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 14156  014BC4  0100               	movlb	0	; () banked
 14157  014BC6  5961               	subwfb	(wdtdelay@delay+1)& (0+255),w,b
 14158  014BC8  0101               	movlb	1	; () banked
 14159  014BCA  5122               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 14160  014BCC  0100               	movlb	0	; () banked
 14161  014BCE  5962               	subwfb	(wdtdelay@delay+2)& (0+255),w,b
 14162  014BD0  0101               	movlb	1	; () banked
 14163  014BD2  5123               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 14164  014BD4  0100               	movlb	0	; () banked
 14165  014BD6  5963               	subwfb	(wdtdelay@delay+3)& (0+255),w,b
 14166  014BD8  A0D8               	btfss	status,0,c
 14167  014BDA  0012               	return	
 14168  014BDC  D7E5               	goto	l1685
 14169  014BDE                     __end_of_wdtdelay:
 14170                           	callstack 0
 14171                           
 14172 ;; *************** function _SPI1_ExchangeByte *****************
 14173 ;; Defined at:
 14174 ;;		line 100 in file "mcc_generated_files/spi1.c"
 14175 ;; Parameters:    Size  Location     Type
 14176 ;;  data            1    wreg     unsigned char 
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;  data            1   31[COMRAM] unsigned char 
 14179 ;; Return value:  Size  Location     Type
 14180 ;;                  1    wreg      unsigned char 
 14181 ;; Registers used:
 14182 ;;		wreg, status,2
 14183 ;; Tracked objects:
 14184 ;;		On entry : 0/0
 14185 ;;		On exit  : 3F/3D
 14186 ;;		Unchanged: 0/0
 14187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14192 ;;Total ram usage:        1 bytes
 14193 ;; Hardware stack levels used: 1
 14194 ;; Hardware stack levels required when called: 7
 14195 ;; This function calls:
 14196 ;;		Nothing
 14197 ;; This function is called by:
 14198 ;;		_send_lcd_data
 14199 ;;		_send_lcd_cmd
 14200 ;;		_send_lcd_cmd_long
 14201 ;; This function uses a non-reentrant model
 14202 ;;
 14203                           
 14204                           	psect	text40
 14205  015562                     __ptext40:
 14206                           	callstack 0
 14207  015562                     _SPI1_ExchangeByte:
 14208                           	callstack 21
 14209                           
 14210                           ; BSR set to: 0
 14211                           ;incstack = 0
 14212                           ;SPI1_ExchangeByte@data stored from wreg
 14213  015562  6E20               	movwf	SPI1_ExchangeByte@data^0,c
 14214                           
 14215                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 14216  015564  0E01               	movlw	1
 14217  015566  013D               	movlb	61	; () banked
 14218  015568  6F12               	movwf	18,b	;volatile
 14219                           
 14220                           ; BSR set to: 61
 14221                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 14222  01556A  0060  F083  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 14223  015570                     l636:
 14224  015570  0139               	movlb	57	; () banked
 14225  015572  A9A2               	btfss	162,4,b	;volatile
 14226  015574  D7FD               	goto	l636
 14227                           
 14228                           ; BSR set to: 57
 14229                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 14230  015576  013D               	movlb	61	; () banked
 14231  015578  5110               	movf	16,w,b	;volatile
 14232                           
 14233                           ; BSR set to: 61
 14234  01557A  0012               	return		;funcret
 14235  01557C                     __end_of_SPI1_ExchangeByte:
 14236                           	callstack 0
 14237                           
 14238 ;; *************** function _ringBufS_init *****************
 14239 ;; Defined at:
 14240 ;;		line 22 in file "ringbufs.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;  _this           2   10[BANK0 ] PTR volatile struct ring
 14243 ;;		 -> ring_buf1(67), 
 14244 ;; Auto vars:     Size  Location     Type
 14245 ;;		None
 14246 ;; Return value:  Size  Location     Type
 14247 ;;                  1    wreg      void 
 14248 ;; Registers used:
 14249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14250 ;; Tracked objects:
 14251 ;;		On entry : 3F/1
 14252 ;;		On exit  : 3F/0
 14253 ;;		Unchanged: 0/0
 14254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14258 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;Total ram usage:        2 bytes
 14260 ;; Hardware stack levels used: 1
 14261 ;; Hardware stack levels required when called: 8
 14262 ;; This function calls:
 14263 ;;		_memset
 14264 ;; This function is called by:
 14265 ;;		_init_display
 14266 ;; This function uses a non-reentrant model
 14267 ;;
 14268                           
 14269                           	psect	text41
 14270  015454                     __ptext41:
 14271                           	callstack 0
 14272  015454                     _ringBufS_init:
 14273                           	callstack 21
 14274                           
 14275                           ; BSR set to: 1
 14276                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*) _this, 0, sizeof(*_this));
 14277                           
 14278                           ; BSR set to: 61
 14279                           ;incstack = 0
 14280  015454  C06A  F060         	movff	ringBufS_init@_this,memset@dest
 14281  015458  C06B  F061         	movff	ringBufS_init@_this+1,memset@dest+1
 14282  01545C  0E00               	movlw	0
 14283  01545E  0100               	movlb	0	; () banked
 14284  015460  6F63               	movwf	(memset@c+1)& (0+255),b
 14285  015462  0E00               	movlw	0
 14286  015464  6F62               	movwf	memset@c& (0+255),b
 14287  015466  0E00               	movlw	0
 14288  015468  6F65               	movwf	(memset@n+1)& (0+255),b
 14289  01546A  0E43               	movlw	67
 14290  01546C  6F64               	movwf	memset@n& (0+255),b
 14291  01546E  EC5D  F09A         	call	_memset	;wreg free
 14292                           
 14293                           ; BSR set to: 0
 14294  015472  0012               	return		;funcret
 14295  015474                     __end_of_ringBufS_init:
 14296                           	callstack 0
 14297                           
 14298 ;; *************** function _eaDogM_WriteStringAtPos *****************
 14299 ;; Defined at:
 14300 ;;		line 191 in file "eadog.c"
 14301 ;; Parameters:    Size  Location     Type
 14302 ;;  r               1    wreg     const unsigned char 
 14303 ;;  c               1   19[BANK0 ] const unsigned char 
 14304 ;;  strPtr          2   20[BANK0 ] PTR unsigned char 
 14305 ;;		 -> buff1(255), 
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;  r               1   24[BANK0 ] const unsigned char 
 14308 ;;  row             1   25[BANK0 ] unsigned char 
 14309 ;; Return value:  Size  Location     Type
 14310 ;;                  1    wreg      void 
 14311 ;; Registers used:
 14312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14313 ;; Tracked objects:
 14314 ;;		On entry : 3F/0
 14315 ;;		On exit  : 3F/3B
 14316 ;;		Unchanged: 0/0
 14317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14318 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14320 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14321 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14322 ;;Total ram usage:        7 bytes
 14323 ;; Hardware stack levels used: 1
 14324 ;; Hardware stack levels required when called: 11
 14325 ;; This function calls:
 14326 ;;		_eaDogM_WriteString
 14327 ;;		_send_lcd_cmd_dma
 14328 ;;		_send_lcd_data_dma
 14329 ;;		_wait_lcd_done
 14330 ;; This function is called by:
 14331 ;;		_main
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           	psect	text42
 14336  014638                     __ptext42:
 14337                           	callstack 0
 14338  014638                     _eaDogM_WriteStringAtPos:
 14339                           	callstack 19
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;incstack = 0
 14343                           ;eaDogM_WriteStringAtPos@r stored from wreg
 14344  014638  6F78               	movwf	eaDogM_WriteStringAtPos@r& (0+255),b
 14345                           
 14346                           ;eadog.c: 191: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 192: {;eadog.c: 193:  uint8_t row;;eadog.c: 195:  switch (r) {
 14347  01463A  D009               	goto	l10905
 14348  01463C                     l10893:
 14349                           
 14350                           ; BSR set to: 0
 14351                           ;eadog.c: 197:   row = 0x40;
 14352  01463C  0E40               	movlw	64
 14353  01463E  D005               	goto	L17
 14354  014640                     l10895:
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;eadog.c: 200:   row = 0x14;
 14358  014640  0E14               	movlw	20
 14359  014642  D003               	goto	L17
 14360  014644                     l10897:
 14361                           
 14362                           ; BSR set to: 0
 14363                           ;eadog.c: 203:   row = 0x54;
 14364  014644  0E54               	movlw	84
 14365  014646  D001               	goto	L17
 14366  014648                     l10899:
 14367                           
 14368                           ; BSR set to: 0
 14369                           ;eadog.c: 206:   row = 0x00;
 14370  014648  0E00               	movlw	0
 14371  01464A                     L17:
 14372  01464A  6F79               	movwf	eaDogM_WriteStringAtPos@row& (0+255),b
 14373                           
 14374                           ;eadog.c: 207:   break;
 14375  01464C  D016               	goto	l10907
 14376  01464E                     l10905:
 14377  01464E  0100               	movlb	0	; () banked
 14378  014650  5178               	movf	eaDogM_WriteStringAtPos@r& (0+255),w,b
 14379  014652  6F76               	movwf	??_eaDogM_WriteStringAtPos& (0+255),b
 14380  014654  6B77               	clrf	(??_eaDogM_WriteStringAtPos+1)& (0+255),b
 14381                           
 14382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14383                           ; Switch size 1, requested type "simple"
 14384                           ; Number of cases is 1, Range of values is 0 to 0
 14385                           ; switch strategies available:
 14386                           ; Name         Instructions Cycles
 14387                           ; simple_byte            4     3 (average)
 14388                           ;	Chosen strategy is simple_byte
 14389  014656  5177               	movf	(??_eaDogM_WriteStringAtPos+1)& (0+255),w,b
 14390  014658  0A00               	xorlw	0	; case 0
 14391  01465A  A4D8               	btfss	status,2,c
 14392  01465C  D7F5               	goto	l10899
 14393                           
 14394                           ; BSR set to: 0
 14395                           ; Switch size 1, requested type "simple"
 14396                           ; Number of cases is 4, Range of values is 0 to 3
 14397                           ; switch strategies available:
 14398                           ; Name         Instructions Cycles
 14399                           ; simple_byte           13     7 (average)
 14400                           ;	Chosen strategy is simple_byte
 14401  01465E  5176               	movf	??_eaDogM_WriteStringAtPos& (0+255),w,b
 14402  014660  0A00               	xorlw	0	; case 0
 14403  014662  B4D8               	btfsc	status,2,c
 14404  014664  D7F1               	goto	l10899
 14405  014666  0A01               	xorlw	1	; case 1
 14406  014668  B4D8               	btfsc	status,2,c
 14407  01466A  D7E8               	goto	l10893
 14408  01466C  0A03               	xorlw	3	; case 2
 14409  01466E  B4D8               	btfsc	status,2,c
 14410  014670  D7E7               	goto	l10895
 14411  014672  0A01               	xorlw	1	; case 3
 14412  014674  B4D8               	btfsc	status,2,c
 14413  014676  D7E6               	goto	l10897
 14414  014678  D7E7               	goto	l10899
 14415  01467A                     l10907:
 14416                           
 14417                           ; BSR set to: 0
 14418                           ;eadog.c: 212:  send_lcd_cmd_dma(0x45);
 14419  01467A  0E45               	movlw	69
 14420  01467C  EC3A  F0AA         	call	_send_lcd_cmd_dma
 14421                           
 14422                           ;eadog.c: 213:  send_lcd_data_dma(row + c);
 14423  014680  0100               	movlb	0	; () banked
 14424  014682  5179               	movf	eaDogM_WriteStringAtPos@row& (0+255),w,b
 14425  014684  2573               	addwf	eaDogM_WriteStringAtPos@c& (0+255),w,b
 14426  014686  ECDF  F0A6         	call	_send_lcd_data_dma
 14427                           
 14428                           ; BSR set to: 59
 14429                           ;eadog.c: 214:  wait_lcd_done();
 14430  01468A  EC19  F0AB         	call	_wait_lcd_done	;wreg free
 14431                           
 14432                           ; BSR set to: 61
 14433                           ;eadog.c: 215:  eaDogM_WriteString(strPtr);
 14434  01468E  C074  F070         	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
 14435  014692  C075  F071         	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
 14436  014696  ECB0  F0A2         	call	_eaDogM_WriteString	;wreg free
 14437                           
 14438                           ; BSR set to: 59
 14439  01469A  0012               	return		;funcret
 14440  01469C                     __end_of_eaDogM_WriteStringAtPos:
 14441                           	callstack 0
 14442                           
 14443 ;; *************** function _eaDogM_WriteString *****************
 14444 ;; Defined at:
 14445 ;;		line 129 in file "eadog.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;  strPtr          2   16[BANK0 ] PTR unsigned char 
 14448 ;;		 -> buff1(255), 
 14449 ;; Auto vars:     Size  Location     Type
 14450 ;;  len             1   18[BANK0 ] unsigned char 
 14451 ;; Return value:  Size  Location     Type
 14452 ;;                  1    wreg      void 
 14453 ;; Registers used:
 14454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14455 ;; Tracked objects:
 14456 ;;		On entry : 3F/3D
 14457 ;;		On exit  : 3F/3B
 14458 ;;		Unchanged: 0/0
 14459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14463 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14464 ;;Total ram usage:        3 bytes
 14465 ;; Hardware stack levels used: 1
 14466 ;; Hardware stack levels required when called: 9
 14467 ;; This function calls:
 14468 ;;		_ringBufS_flush
 14469 ;;		_ringBufS_put_dma_cpy
 14470 ;;		_start_lcd
 14471 ;;		_strlen
 14472 ;;		_wait_lcd_set
 14473 ;; This function is called by:
 14474 ;;		_eaDogM_WriteStringAtPos
 14475 ;; This function uses a non-reentrant model
 14476 ;;
 14477                           
 14478                           	psect	text43
 14479  014560                     __ptext43:
 14480                           	callstack 0
 14481  014560                     _eaDogM_WriteString:
 14482                           	callstack 20
 14483                           
 14484                           ; BSR set to: 61
 14485                           ;eadog.c: 129: void eaDogM_WriteString(char *strPtr);eadog.c: 130: {;eadog.c: 131:  uint
      +                          8_t len = (uint8_t) strlen(strPtr);
 14486                           
 14487                           ; BSR set to: 59
 14488                           ;incstack = 0
 14489  014560  C070  F020         	movff	eaDogM_WriteString@strPtr,strlen@s
 14490  014564  C071  F021         	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
 14491  014568  EC33  F0A5         	call	_strlen	;wreg free
 14492  01456C  5020               	movf	?_strlen^0,w,c
 14493  01456E  6F72               	movwf	eaDogM_WriteString@len& (0+255),b
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;eadog.c: 136:  wait_lcd_set();
 14497  014570  EC9D  F0AB         	call	_wait_lcd_set	;wreg free
 14498                           
 14499                           ; BSR set to: 1
 14500                           ;eadog.c: 138:  ringBufS_flush(spi_link.tx1a, 0);
 14501  014574  C106  F06A         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 14502  014578  C107  F06B         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 14503  01457C  0E00               	movlw	0
 14504  01457E  0100               	movlb	0	; () banked
 14505  014580  6F6C               	movwf	ringBufS_flush@clearBuffer& (0+255),b
 14506  014582  EC91  F0A4         	call	_ringBufS_flush	;wreg free
 14507                           
 14508                           ; BSR set to: 0
 14509  014586  94BC               	bcf	188,2,c	;volatile
 14510                           
 14511                           ; BSR set to: 0
 14512                           ;eadog.c: 140:  if (len > 64) {
 14513  014588  0E40               	movlw	64
 14514  01458A  6572               	cpfsgt	eaDogM_WriteString@len& (0+255),b
 14515  01458C  D00A               	goto	l10681
 14516                           
 14517                           ; BSR set to: 0
 14518                           ;eadog.c: 141:   strPtr[64] = 0;
 14519  01458E  EE20 F040          	lfsr	2,64
 14520  014592  5170               	movf	eaDogM_WriteString@strPtr& (0+255),w,b
 14521  014594  26D9               	addwf	fsr2l,f,c
 14522  014596  5171               	movf	(eaDogM_WriteString@strPtr+1)& (0+255),w,b
 14523  014598  22DA               	addwfc	fsr2h,f,c
 14524  01459A  0E00               	movlw	0
 14525  01459C  6EDF               	movwf	indf2,c
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;eadog.c: 142:   len = 64;
 14529  01459E  0E40               	movlw	64
 14530  0145A0  6F72               	movwf	eaDogM_WriteString@len& (0+255),b
 14531  0145A2                     l10681:
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;eadog.c: 144:  DMA1CON0bits.EN = 0;
 14535  0145A2  013B               	movlb	59	; () banked
 14536  0145A4  9FFC               	bcf	252,7,b	;volatile
 14537                           
 14538                           ; BSR set to: 59
 14539                           ;eadog.c: 145:  DMA1SSZ = len;
 14540  0145A6  0060  F1CB  FBF7   	movff	eaDogM_WriteString@len,15351	;volatile
 14541  0145AC  6BF8               	clrf	248,b	;volatile
 14542                           
 14543                           ; BSR set to: 59
 14544                           ;eadog.c: 146:  DMA1CON0bits.EN = 1;
 14545  0145AE  8FFC               	bsf	252,7,b	;volatile
 14546                           
 14547                           ; BSR set to: 59
 14548                           ;eadog.c: 147:  ringBufS_put_dma_cpy(spi_link.tx1a, strPtr, len);
 14549  0145B0  C106  F06B         	movff	_spi_link+6,ringBufS_put_dma_cpy@_this	;volatile
 14550  0145B4  C107  F06C         	movff	_spi_link+7,ringBufS_put_dma_cpy@_this+1	;volatile
 14551  0145B8  C070  F06D         	movff	eaDogM_WriteString@strPtr,ringBufS_put_dma_cpy@ptr
 14552  0145BC  C071  F06E         	movff	eaDogM_WriteString@strPtr+1,ringBufS_put_dma_cpy@ptr+1
 14553  0145C0  C072  F06F         	movff	eaDogM_WriteString@len,ringBufS_put_dma_cpy@len
 14554  0145C4  EC3D  F0A4         	call	_ringBufS_put_dma_cpy	;wreg free
 14555                           
 14556                           ; BSR set to: 0
 14557                           ;eadog.c: 148:  start_lcd();
 14558  0145C8  ECA0  F0AB         	call	_start_lcd	;wreg free
 14559                           
 14560                           ; BSR set to: 59
 14561  0145CC  0012               	return		;funcret
 14562  0145CE                     __end_of_eaDogM_WriteString:
 14563                           	callstack 0
 14564                           
 14565 ;; *************** function _ringBufS_put_dma_cpy *****************
 14566 ;; Defined at:
 14567 ;;		line 76 in file "ringbufs.c"
 14568 ;; Parameters:    Size  Location     Type
 14569 ;;  _this           2   11[BANK0 ] PTR struct ringBufS_t
 14570 ;;		 -> ring_buf1(67), 
 14571 ;;  ptr             2   13[BANK0 ] PTR const unsigned char 
 14572 ;;		 -> buff1(255), 
 14573 ;;  len             1   15[BANK0 ] const unsigned char 
 14574 ;; Auto vars:     Size  Location     Type
 14575 ;;		None
 14576 ;; Return value:  Size  Location     Type
 14577 ;;                  1    wreg      void 
 14578 ;; Registers used:
 14579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14580 ;; Tracked objects:
 14581 ;;		On entry : 3F/3B
 14582 ;;		On exit  : 3F/0
 14583 ;;		Unchanged: 0/0
 14584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14585 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14588 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14589 ;;Total ram usage:        6 bytes
 14590 ;; Hardware stack levels used: 1
 14591 ;; Hardware stack levels required when called: 8
 14592 ;; This function calls:
 14593 ;;		_memcpy
 14594 ;; This function is called by:
 14595 ;;		_eaDogM_WriteString
 14596 ;; This function uses a non-reentrant model
 14597 ;;
 14598                           
 14599                           	psect	text44
 14600  01487A                     __ptext44:
 14601                           	callstack 0
 14602  01487A                     _ringBufS_put_dma_cpy:
 14603                           	callstack 20
 14604                           
 14605                           ; BSR set to: 59
 14606                           ;ringbufs.c: 76: void ringBufS_put_dma_cpy(ringBufS_t *_this, const char *ptr, const uin
      +                          t8_t len);ringbufs.c: 77: {;ringbufs.c: 78:  if (_this->count < 64) {
 14607                           
 14608                           ; BSR set to: 59
 14609                           ;incstack = 0
 14610  01487A  0100               	movlb	0	; () banked
 14611  01487C  EE20 F042          	lfsr	2,66
 14612  014880  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 14613  014882  26D9               	addwf	fsr2l,f,c
 14614  014884  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 14615  014886  22DA               	addwfc	fsr2h,f,c
 14616  014888  0E40               	movlw	64
 14617  01488A  60DF               	cpfslt	indf2,c
 14618  01488C  0012               	return	
 14619                           
 14620                           ; BSR set to: 0
 14621                           ;ringbufs.c: 79:   memcpy(_this->buf, ptr, len);
 14622  01488E  C06B  F060         	movff	ringBufS_put_dma_cpy@_this,memcpy@d1
 14623  014892  C06C  F061         	movff	ringBufS_put_dma_cpy@_this+1,memcpy@d1+1
 14624  014896  C06D  F062         	movff	ringBufS_put_dma_cpy@ptr,memcpy@s1
 14625  01489A  C06E  F063         	movff	ringBufS_put_dma_cpy@ptr+1,memcpy@s1+1
 14626  01489E  C06F  F064         	movff	ringBufS_put_dma_cpy@len,memcpy@n
 14627  0148A2  6B65               	clrf	(memcpy@n+1)& (0+255),b
 14628  0148A4  EC0C  F0A5         	call	_memcpy	;wreg free
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;ringbufs.c: 80:   _this->head = len;
 14632  0148A8  EE20 F040          	lfsr	2,64
 14633  0148AC  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 14634  0148AE  26D9               	addwf	fsr2l,f,c
 14635  0148B0  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 14636  0148B2  22DA               	addwfc	fsr2h,f,c
 14637  0148B4  0060  F1BF  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;ringbufs.c: 81:   _this->count = len;
 14641  0148BA  EE20 F042          	lfsr	2,66
 14642  0148BE  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 14643  0148C0  26D9               	addwf	fsr2l,f,c
 14644  0148C2  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 14645  0148C4  22DA               	addwfc	fsr2h,f,c
 14646  0148C6  0060  F1BF  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 14647                           
 14648                           ; BSR set to: 0
 14649  0148CC  0012               	return		;funcret
 14650  0148CE                     __end_of_ringBufS_put_dma_cpy:
 14651                           	callstack 0
 14652                           
 14653 ;; *************** function _memcpy *****************
 14654 ;; Defined at:
 14655 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
 14656 ;; Parameters:    Size  Location     Type
 14657 ;;  d1              2    0[BANK0 ] PTR void 
 14658 ;;		 -> ring_buf1(67), 
 14659 ;;  s1              2    2[BANK0 ] PTR const void 
 14660 ;;		 -> buff1(255), 
 14661 ;;  n               2    4[BANK0 ] unsigned int 
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 14664 ;;		 -> buff1(255), 
 14665 ;;  d               2    7[BANK0 ] PTR unsigned char 
 14666 ;;		 -> ring_buf1(67), 
 14667 ;;  tmp             1    6[BANK0 ] unsigned char 
 14668 ;; Return value:  Size  Location     Type
 14669 ;;                  2    0[BANK0 ] PTR void 
 14670 ;; Registers used:
 14671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14672 ;; Tracked objects:
 14673 ;;		On entry : 3F/0
 14674 ;;		On exit  : 3F/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14677 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14678 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14680 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14681 ;;Total ram usage:       11 bytes
 14682 ;; Hardware stack levels used: 1
 14683 ;; Hardware stack levels required when called: 7
 14684 ;; This function calls:
 14685 ;;		Nothing
 14686 ;; This function is called by:
 14687 ;;		_ringBufS_put_dma_cpy
 14688 ;; This function uses a non-reentrant model
 14689 ;;
 14690                           
 14691                           	psect	text45
 14692  014A18                     __ptext45:
 14693                           	callstack 0
 14694  014A18                     _memcpy:
 14695                           	callstack 20
 14696                           
 14697                           ; BSR set to: 0
 14698                           
 14699                           ; BSR set to: 0
 14700                           ;incstack = 0
 14701  014A18  C062  F069         	movff	memcpy@s1,memcpy@s
 14702  014A1C  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 14703  014A20  C060  F067         	movff	memcpy@d1,memcpy@d
 14704  014A24  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 14705  014A28  D015               	goto	l9689
 14706  014A2A                     l9681:
 14707                           
 14708                           ; BSR set to: 0
 14709  014A2A  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
 14710  014A30  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
 14711  014A36  50DF               	movf	indf2,w,c
 14712  014A38  6F66               	movwf	memcpy@tmp& (0+255),b
 14713                           
 14714                           ; BSR set to: 0
 14715  014A3A  4B69               	infsnz	memcpy@s& (0+255),f,b
 14716  014A3C  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 14717                           
 14718                           ; BSR set to: 0
 14719  014A3E  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
 14720  014A44  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
 14721  014A4A  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
 14722                           
 14723                           ; BSR set to: 0
 14724  014A50  4B67               	infsnz	memcpy@d& (0+255),f,b
 14725  014A52  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 14726  014A54                     l9689:
 14727                           
 14728                           ; BSR set to: 0
 14729  014A54  0764               	decf	memcpy@n& (0+255),f,b
 14730  014A56  A0D8               	btfss	status,0,c
 14731  014A58  0765               	decf	(memcpy@n+1)& (0+255),f,b
 14732  014A5A  2964               	incf	memcpy@n& (0+255),w,b
 14733  014A5C  E1E6               	bnz	l9681
 14734  014A5E  2965               	incf	(memcpy@n+1)& (0+255),w,b
 14735  014A60  B4D8               	btfsc	status,2,c
 14736  014A62  0012               	return	
 14737  014A64  D7E2               	goto	l9681
 14738  014A66                     __end_of_memcpy:
 14739                           	callstack 0
 14740                           
 14741 ;; *************** function _eaDogM_WriteCommand *****************
 14742 ;; Defined at:
 14743 ;;		line 239 in file "eadog.c"
 14744 ;; Parameters:    Size  Location     Type
 14745 ;;  cmd             1    wreg     const unsigned char 
 14746 ;; Auto vars:     Size  Location     Type
 14747 ;;  cmd             1   15[BANK0 ] const unsigned char 
 14748 ;; Return value:  Size  Location     Type
 14749 ;;                  1    wreg      void 
 14750 ;; Registers used:
 14751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14752 ;; Tracked objects:
 14753 ;;		On entry : 3F/3D
 14754 ;;		On exit  : 3F/3D
 14755 ;;		Unchanged: 0/0
 14756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14760 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14761 ;;Total ram usage:        1 bytes
 14762 ;; Hardware stack levels used: 1
 14763 ;; Hardware stack levels required when called: 11
 14764 ;; This function calls:
 14765 ;;		_send_lcd_cmd_dma
 14766 ;; This function is called by:
 14767 ;;		_main
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text46
 14772  015624                     __ptext46:
 14773                           	callstack 0
 14774  015624                     _eaDogM_WriteCommand:
 14775                           	callstack 19
 14776                           
 14777                           ; BSR set to: 0
 14778                           ;incstack = 0
 14779                           ;eaDogM_WriteCommand@cmd stored from wreg
 14780  015624  0100               	movlb	0	; () banked
 14781  015626  6F6F               	movwf	eaDogM_WriteCommand@cmd& (0+255),b
 14782                           
 14783                           ;eadog.c: 239: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 240: {;eadog.c: 241:
      +                            send_lcd_cmd_dma(cmd);
 14784  015628  0100               	movlb	0	; () banked
 14785  01562A  516F               	movf	eaDogM_WriteCommand@cmd& (0+255),w,b
 14786  01562C  EC3A  F0AA         	call	_send_lcd_cmd_dma
 14787                           
 14788                           ; BSR set to: 61
 14789  015630  0012               	return		;funcret
 14790  015632                     __end_of_eaDogM_WriteCommand:
 14791                           	callstack 0
 14792                           
 14793 ;; *************** function _send_lcd_cmd_dma *****************
 14794 ;; Defined at:
 14795 ;;		line 160 in file "eadog.c"
 14796 ;; Parameters:    Size  Location     Type
 14797 ;;  strPtr          1    wreg     const unsigned char 
 14798 ;; Auto vars:     Size  Location     Type
 14799 ;;  strPtr          1   14[BANK0 ] const unsigned char 
 14800 ;; Return value:  Size  Location     Type
 14801 ;;                  1    wreg      void 
 14802 ;; Registers used:
 14803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14804 ;; Tracked objects:
 14805 ;;		On entry : 3F/0
 14806 ;;		On exit  : 3F/3D
 14807 ;;		Unchanged: 0/0
 14808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14812 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14813 ;;Total ram usage:        1 bytes
 14814 ;; Hardware stack levels used: 1
 14815 ;; Hardware stack levels required when called: 10
 14816 ;; This function calls:
 14817 ;;		_send_lcd_data_dma
 14818 ;;		_wait_lcd_done
 14819 ;; This function is called by:
 14820 ;;		_eaDogM_WriteStringAtPos
 14821 ;;		_eaDogM_WriteCommand
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           	psect	text47
 14826  015474                     __ptext47:
 14827                           	callstack 0
 14828  015474                     _send_lcd_cmd_dma:
 14829                           	callstack 19
 14830                           
 14831                           ; BSR set to: 61
 14832                           ;incstack = 0
 14833                           ;send_lcd_cmd_dma@strPtr stored from wreg
 14834  015474  6F6E               	movwf	send_lcd_cmd_dma@strPtr& (0+255),b
 14835                           
 14836                           ;eadog.c: 160: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 161: {;eadog.c: 162:
      +                            wait_lcd_done();
 14837  015476  EC19  F0AB         	call	_wait_lcd_done	;wreg free
 14838                           
 14839                           ; BSR set to: 61
 14840                           ;eadog.c: 163:  send_lcd_data_dma(0xFE);
 14841  01547A  0EFE               	movlw	254
 14842  01547C  ECDF  F0A6         	call	_send_lcd_data_dma
 14843                           
 14844                           ; BSR set to: 59
 14845                           ;eadog.c: 164:  wait_lcd_done();
 14846  015480  EC19  F0AB         	call	_wait_lcd_done	;wreg free
 14847                           
 14848                           ;eadog.c: 165:  send_lcd_data_dma(strPtr);
 14849  015484  0100               	movlb	0	; () banked
 14850  015486  516E               	movf	send_lcd_cmd_dma@strPtr& (0+255),w,b
 14851  015488  ECDF  F0A6         	call	_send_lcd_data_dma
 14852                           
 14853                           ; BSR set to: 59
 14854                           ;eadog.c: 166:  wait_lcd_done();
 14855  01548C  EC19  F0AB         	call	_wait_lcd_done	;wreg free
 14856                           
 14857                           ; BSR set to: 61
 14858  015490  0012               	return		;funcret
 14859  015492                     __end_of_send_lcd_cmd_dma:
 14860                           	callstack 0
 14861                           
 14862 ;; *************** function _wait_lcd_done *****************
 14863 ;; Defined at:
 14864 ;;		line 298 in file "eadog.c"
 14865 ;; Parameters:    Size  Location     Type
 14866 ;;		None
 14867 ;; Auto vars:     Size  Location     Type
 14868 ;;		None
 14869 ;; Return value:  Size  Location     Type
 14870 ;;                  1    wreg      void 
 14871 ;; Registers used:
 14872 ;;		None
 14873 ;; Tracked objects:
 14874 ;;		On entry : 0/3B
 14875 ;;		On exit  : 3F/3D
 14876 ;;		Unchanged: 0/0
 14877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14882 ;;Total ram usage:        0 bytes
 14883 ;; Hardware stack levels used: 1
 14884 ;; Hardware stack levels required when called: 7
 14885 ;; This function calls:
 14886 ;;		Nothing
 14887 ;; This function is called by:
 14888 ;;		_send_lcd_cmd_dma
 14889 ;;		_eaDogM_WriteStringAtPos
 14890 ;; This function uses a non-reentrant model
 14891 ;;
 14892                           
 14893                           	psect	text48
 14894  015632                     __ptext48:
 14895                           	callstack 0
 14896  015632                     _wait_lcd_done:
 14897                           	callstack 22
 14898                           
 14899                           ;eadog.c: 300:  while (spi_link.LCD_DATA);
 14900                           
 14901                           ; BSR set to: 61
 14902                           ;incstack = 0
 14903  015632  0101               	movlb	1	; () banked
 14904  015634  B700               	btfsc	_spi_link& (0+255),3,b	;volatile
 14905  015636  D7FD               	goto	__ptext48
 14906  015638                     u9830:
 14907  015638  013D               	movlb	61	; () banked
 14908  01563A  BB17               	btfsc	23,5,b	;volatile
 14909  01563C  0012               	return	
 14910  01563E  D7FC               	goto	u9830
 14911  015640                     __end_of_wait_lcd_done:
 14912                           	callstack 0
 14913                           
 14914 ;; *************** function _send_lcd_data_dma *****************
 14915 ;; Defined at:
 14916 ;;		line 172 in file "eadog.c"
 14917 ;; Parameters:    Size  Location     Type
 14918 ;;  strPtr          1    wreg     const unsigned char 
 14919 ;; Auto vars:     Size  Location     Type
 14920 ;;  strPtr          1   13[BANK0 ] const unsigned char 
 14921 ;; Return value:  Size  Location     Type
 14922 ;;                  1    wreg      void 
 14923 ;; Registers used:
 14924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14925 ;; Tracked objects:
 14926 ;;		On entry : 2/0
 14927 ;;		On exit  : 3F/3B
 14928 ;;		Unchanged: 0/0
 14929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14933 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14934 ;;Total ram usage:        1 bytes
 14935 ;; Hardware stack levels used: 1
 14936 ;; Hardware stack levels required when called: 9
 14937 ;; This function calls:
 14938 ;;		_ringBufS_flush
 14939 ;;		_ringBufS_put_dma
 14940 ;;		_start_lcd
 14941 ;;		_wait_lcd_set
 14942 ;; This function is called by:
 14943 ;;		_send_lcd_cmd_dma
 14944 ;;		_eaDogM_WriteStringAtPos
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948                           	psect	text49
 14949  014DBE                     __ptext49:
 14950                           	callstack 0
 14951  014DBE                     _send_lcd_data_dma:
 14952                           	callstack 20
 14953                           
 14954                           ; BSR set to: 61
 14955                           ;incstack = 0
 14956                           ;send_lcd_data_dma@strPtr stored from wreg
 14957  014DBE  0100               	movlb	0	; () banked
 14958  014DC0  6F6D               	movwf	send_lcd_data_dma@strPtr& (0+255),b
 14959                           
 14960                           ;eadog.c: 172: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 173: {;eadog.c: 177
      +                          :  wait_lcd_set();
 14961  014DC2  EC9D  F0AB         	call	_wait_lcd_set	;wreg free
 14962                           
 14963                           ; BSR set to: 1
 14964                           ;eadog.c: 179:  ringBufS_flush(spi_link.tx1a, 0);
 14965  014DC6  C106  F06A         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 14966  014DCA  C107  F06B         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 14967  014DCE  0E00               	movlw	0
 14968  014DD0  0100               	movlb	0	; () banked
 14969  014DD2  6F6C               	movwf	ringBufS_flush@clearBuffer& (0+255),b
 14970  014DD4  EC91  F0A4         	call	_ringBufS_flush	;wreg free
 14971                           
 14972                           ; BSR set to: 0
 14973  014DD8  94BC               	bcf	188,2,c	;volatile
 14974                           
 14975                           ; BSR set to: 0
 14976                           ;eadog.c: 181:  DMA1CON0bits.EN = 0;
 14977  014DDA  013B               	movlb	59	; () banked
 14978  014DDC  9FFC               	bcf	252,7,b	;volatile
 14979                           
 14980                           ; BSR set to: 59
 14981                           ;eadog.c: 182:  DMA1SSZ = 1;
 14982  014DDE  0E00               	movlw	0
 14983  014DE0  6FF8               	movwf	248,b	;volatile
 14984  014DE2  0E01               	movlw	1
 14985  014DE4  6FF7               	movwf	247,b	;volatile
 14986                           
 14987                           ; BSR set to: 59
 14988                           ;eadog.c: 183:  DMA1CON0bits.EN = 1;
 14989  014DE6  8FFC               	bsf	252,7,b	;volatile
 14990                           
 14991                           ; BSR set to: 59
 14992                           ;eadog.c: 184:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 14993  014DE8  C106  F060         	movff	_spi_link+6,ringBufS_put_dma@_this	;volatile
 14994  014DEC  C107  F061         	movff	_spi_link+7,ringBufS_put_dma@_this+1	;volatile
 14995  014DF0  C06D  F062         	movff	send_lcd_data_dma@strPtr,ringBufS_put_dma@c
 14996  014DF4  EC67  F0A4         	call	_ringBufS_put_dma	;wreg free
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;eadog.c: 185:  start_lcd();
 15000  014DF8  ECA0  F0AB         	call	_start_lcd	;wreg free
 15001                           
 15002                           ; BSR set to: 59
 15003  014DFC  0012               	return		;funcret
 15004  014DFE                     __end_of_send_lcd_data_dma:
 15005                           	callstack 0
 15006                           
 15007 ;; *************** function _wait_lcd_set *****************
 15008 ;; Defined at:
 15009 ;;		line 288 in file "eadog.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;		None
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;		None
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  1    wreg      void 
 15016 ;; Registers used:
 15017 ;;		None
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 3F/1
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15027 ;;Total ram usage:        0 bytes
 15028 ;; Hardware stack levels used: 1
 15029 ;; Hardware stack levels required when called: 7
 15030 ;; This function calls:
 15031 ;;		Nothing
 15032 ;; This function is called by:
 15033 ;;		_eaDogM_WriteString
 15034 ;;		_send_lcd_data_dma
 15035 ;; This function uses a non-reentrant model
 15036 ;;
 15037                           
 15038                           	psect	text50
 15039  01573A                     __ptext50:
 15040                           	callstack 0
 15041  01573A                     _wait_lcd_set:
 15042                           	callstack 21
 15043                           
 15044                           ;eadog.c: 290:  spi_link.LCD_DATA = 1;
 15045                           
 15046                           ; BSR set to: 59
 15047                           ;incstack = 0
 15048  01573A  0101               	movlb	1	; () banked
 15049  01573C  8700               	bsf	_spi_link& (0+255),3,b	;volatile
 15050                           
 15051                           ; BSR set to: 1
 15052  01573E  0012               	return		;funcret
 15053  015740                     __end_of_wait_lcd_set:
 15054                           	callstack 0
 15055                           
 15056 ;; *************** function _start_lcd *****************
 15057 ;; Defined at:
 15058 ;;		line 283 in file "eadog.c"
 15059 ;; Parameters:    Size  Location     Type
 15060 ;;		None
 15061 ;; Auto vars:     Size  Location     Type
 15062 ;;		None
 15063 ;; Return value:  Size  Location     Type
 15064 ;;                  1    wreg      void 
 15065 ;; Registers used:
 15066 ;;		None
 15067 ;; Tracked objects:
 15068 ;;		On entry : 3F/0
 15069 ;;		On exit  : 3F/3B
 15070 ;;		Unchanged: 0/0
 15071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15076 ;;Total ram usage:        0 bytes
 15077 ;; Hardware stack levels used: 1
 15078 ;; Hardware stack levels required when called: 7
 15079 ;; This function calls:
 15080 ;;		Nothing
 15081 ;; This function is called by:
 15082 ;;		_eaDogM_WriteString
 15083 ;;		_send_lcd_data_dma
 15084 ;; This function uses a non-reentrant model
 15085 ;;
 15086                           
 15087                           	psect	text51
 15088  015740                     __ptext51:
 15089                           	callstack 0
 15090  015740                     _start_lcd:
 15091                           	callstack 21
 15092                           
 15093                           ; BSR set to: 0
 15094                           ;eadog.c: 285:  DMA1CON0bits.DMA1SIRQEN = 1;
 15095                           
 15096                           ; BSR set to: 1
 15097                           ;incstack = 0
 15098  015740  013B               	movlb	59	; () banked
 15099  015742  8DFC               	bsf	252,6,b	;volatile
 15100                           
 15101                           ; BSR set to: 59
 15102  015744  0012               	return		;funcret
 15103  015746                     __end_of_start_lcd:
 15104                           	callstack 0
 15105                           
 15106 ;; *************** function _ringBufS_put_dma *****************
 15107 ;; Defined at:
 15108 ;;		line 67 in file "ringbufs.c"
 15109 ;; Parameters:    Size  Location     Type
 15110 ;;  _this           2    0[BANK0 ] PTR struct ringBufS_t
 15111 ;;		 -> ring_buf1(67), 
 15112 ;;  c               1    2[BANK0 ] const unsigned char 
 15113 ;; Auto vars:     Size  Location     Type
 15114 ;;		None
 15115 ;; Return value:  Size  Location     Type
 15116 ;;                  1    wreg      void 
 15117 ;; Registers used:
 15118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15119 ;; Tracked objects:
 15120 ;;		On entry : 3F/3B
 15121 ;;		On exit  : 3F/0
 15122 ;;		Unchanged: 0/0
 15123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15124 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15127 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15128 ;;Total ram usage:        4 bytes
 15129 ;; Hardware stack levels used: 1
 15130 ;; Hardware stack levels required when called: 7
 15131 ;; This function calls:
 15132 ;;		Nothing
 15133 ;; This function is called by:
 15134 ;;		_send_lcd_data_dma
 15135 ;; This function uses a non-reentrant model
 15136 ;;
 15137                           
 15138                           	psect	text52
 15139  0148CE                     __ptext52:
 15140                           	callstack 0
 15141  0148CE                     _ringBufS_put_dma:
 15142                           	callstack 21
 15143                           
 15144                           ; BSR set to: 59
 15145                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 15146                           
 15147                           ; BSR set to: 59
 15148                           ;incstack = 0
 15149  0148CE  0100               	movlb	0	; () banked
 15150  0148D0  EE20 F042          	lfsr	2,66
 15151  0148D4  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 15152  0148D6  26D9               	addwf	fsr2l,f,c
 15153  0148D8  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15154  0148DA  22DA               	addwfc	fsr2h,f,c
 15155  0148DC  0E40               	movlw	64
 15156  0148DE  60DF               	cpfslt	indf2,c
 15157  0148E0  0012               	return	
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 15161  0148E2  EE20 F040          	lfsr	2,64
 15162  0148E6  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 15163  0148E8  26D9               	addwf	fsr2l,f,c
 15164  0148EA  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15165  0148EC  22DA               	addwfc	fsr2h,f,c
 15166  0148EE  50DF               	movf	indf2,w,c
 15167  0148F0  6E20               	movwf	??_ringBufS_put_dma^0,c
 15168  0148F2  5020               	movf	??_ringBufS_put_dma^0,w,c
 15169  0148F4  2560               	addwf	ringBufS_put_dma@_this& (0+255),w,b
 15170  0148F6  6ED9               	movwf	fsr2l,c
 15171  0148F8  0E00               	movlw	0
 15172  0148FA  2161               	addwfc	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15173  0148FC  6EDA               	movwf	fsr2h,c
 15174  0148FE  0060  F18B  FFDF   	movff	ringBufS_put_dma@c,indf2
 15175                           
 15176                           ;ringbufs.c: 71:   ++_this->head;
 15177  014904  EE20 F040          	lfsr	2,64
 15178  014908  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 15179  01490A  26D9               	addwf	fsr2l,f,c
 15180  01490C  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15181  01490E  22DA               	addwfc	fsr2h,f,c
 15182  014910  2ADF               	incf	indf2,f,c
 15183                           
 15184                           ;ringbufs.c: 72:   ++_this->count;
 15185  014912  EE20 F042          	lfsr	2,66
 15186  014916  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 15187  014918  26D9               	addwf	fsr2l,f,c
 15188  01491A  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15189  01491C  22DA               	addwfc	fsr2h,f,c
 15190  01491E  2ADF               	incf	indf2,f,c
 15191                           
 15192                           ; BSR set to: 0
 15193  014920  0012               	return		;funcret
 15194  014922                     __end_of_ringBufS_put_dma:
 15195                           	callstack 0
 15196                           
 15197 ;; *************** function _ringBufS_flush *****************
 15198 ;; Defined at:
 15199 ;;		line 85 in file "ringbufs.c"
 15200 ;; Parameters:    Size  Location     Type
 15201 ;;  _this           2   10[BANK0 ] PTR struct ringBufS_t
 15202 ;;		 -> ring_buf1(67), 
 15203 ;;  clearBuffer     1   12[BANK0 ] const char 
 15204 ;; Auto vars:     Size  Location     Type
 15205 ;;		None
 15206 ;; Return value:  Size  Location     Type
 15207 ;;                  1    wreg      void 
 15208 ;; Registers used:
 15209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15210 ;; Tracked objects:
 15211 ;;		On entry : 3F/0
 15212 ;;		On exit  : 3F/0
 15213 ;;		Unchanged: 0/0
 15214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15215 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15218 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15219 ;;Total ram usage:        3 bytes
 15220 ;; Hardware stack levels used: 1
 15221 ;; Hardware stack levels required when called: 8
 15222 ;; This function calls:
 15223 ;;		_memset
 15224 ;; This function is called by:
 15225 ;;		_eaDogM_WriteString
 15226 ;;		_send_lcd_data_dma
 15227 ;; This function uses a non-reentrant model
 15228 ;;
 15229                           
 15230                           	psect	text53
 15231  014922                     __ptext53:
 15232                           	callstack 0
 15233  014922                     _ringBufS_flush:
 15234                           	callstack 20
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;ringbufs.c: 85: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 86: {;ringbufs.c: 87:  _this->count = 0;
 15238                           
 15239                           ; BSR set to: 0
 15240                           ;incstack = 0
 15241  014922  EE20 F042          	lfsr	2,66
 15242  014926  516A               	movf	ringBufS_flush@_this& (0+255),w,b
 15243  014928  26D9               	addwf	fsr2l,f,c
 15244  01492A  516B               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 15245  01492C  22DA               	addwfc	fsr2h,f,c
 15246  01492E  0E00               	movlw	0
 15247  014930  6EDF               	movwf	indf2,c
 15248                           
 15249                           ;ringbufs.c: 88:  _this->head = 0;
 15250  014932  EE20 F040          	lfsr	2,64
 15251  014936  516A               	movf	ringBufS_flush@_this& (0+255),w,b
 15252  014938  26D9               	addwf	fsr2l,f,c
 15253  01493A  516B               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 15254  01493C  22DA               	addwfc	fsr2h,f,c
 15255  01493E  0E00               	movlw	0
 15256  014940  6EDF               	movwf	indf2,c
 15257                           
 15258                           ;ringbufs.c: 89:  _this->tail = 0;
 15259  014942  EE20 F041          	lfsr	2,65
 15260  014946  516A               	movf	ringBufS_flush@_this& (0+255),w,b
 15261  014948  26D9               	addwf	fsr2l,f,c
 15262  01494A  516B               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 15263  01494C  22DA               	addwfc	fsr2h,f,c
 15264  01494E  0E00               	movlw	0
 15265  014950  6EDF               	movwf	indf2,c
 15266                           
 15267                           ; BSR set to: 0
 15268                           ;ringbufs.c: 90:  if (clearBuffer) {
 15269  014952  516C               	movf	ringBufS_flush@clearBuffer& (0+255),w,b
 15270  014954  B4D8               	btfsc	status,2,c
 15271  014956  0012               	return	
 15272                           
 15273                           ; BSR set to: 0
 15274                           ;ringbufs.c: 91:   memset(_this->buf, 0, sizeof(_this->buf));
 15275  014958  C06A  F060         	movff	ringBufS_flush@_this,memset@dest
 15276  01495C  C06B  F061         	movff	ringBufS_flush@_this+1,memset@dest+1
 15277  014960  0E00               	movlw	0
 15278  014962  6F63               	movwf	(memset@c+1)& (0+255),b
 15279  014964  0E00               	movlw	0
 15280  014966  6F62               	movwf	memset@c& (0+255),b
 15281  014968  0E00               	movlw	0
 15282  01496A  6F65               	movwf	(memset@n+1)& (0+255),b
 15283  01496C  0E40               	movlw	64
 15284  01496E  6F64               	movwf	memset@n& (0+255),b
 15285  014970  EC5D  F09A         	call	_memset	;wreg free
 15286                           
 15287                           ; BSR set to: 0
 15288  014974  0012               	return		;funcret
 15289  014976                     __end_of_ringBufS_flush:
 15290                           	callstack 0
 15291                           
 15292 ;; *************** function _display_led *****************
 15293 ;; Defined at:
 15294 ;;		line 3 in file "disp_led.c"
 15295 ;; Parameters:    Size  Location     Type
 15296 ;;  led             1    wreg     enum E17390
 15297 ;; Auto vars:     Size  Location     Type
 15298 ;;  led             1    0[BANK0 ] enum E17390
 15299 ;; Return value:  Size  Location     Type
 15300 ;;                  1    wreg      void 
 15301 ;; Registers used:
 15302 ;;		wreg, status,2, status,0
 15303 ;; Tracked objects:
 15304 ;;		On entry : 3E/1
 15305 ;;		On exit  : 3F/0
 15306 ;;		Unchanged: 0/0
 15307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15311 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15312 ;;Total ram usage:        3 bytes
 15313 ;; Hardware stack levels used: 1
 15314 ;; Hardware stack levels required when called: 7
 15315 ;; This function calls:
 15316 ;;		Nothing
 15317 ;; This function is called by:
 15318 ;;		_main
 15319 ;; This function uses a non-reentrant model
 15320 ;;
 15321                           
 15322                           	psect	text54
 15323  013F5C                     __ptext54:
 15324                           	callstack 0
 15325  013F5C                     _display_led:
 15326                           	callstack 23
 15327                           
 15328                           ; BSR set to: 0
 15329                           ;incstack = 0
 15330                           ;display_led@led stored from wreg
 15331  013F5C  0100               	movlb	0	; () banked
 15332  013F5E  6F60               	movwf	display_led@led& (0+255),b
 15333                           
 15334                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
 15335  013F60  D02D               	goto	l10923
 15336  013F62                     l1429:
 15337                           
 15338                           ; BSR set to: 0
 15339  013F62  98BD               	bcf	189,4,c	;volatile
 15340                           
 15341                           ; BSR set to: 0
 15342                           
 15343                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
 15344  013F64  9ABD               	bcf	189,5,c	;volatile
 15345  013F66  0012               	return	
 15346  013F68                     l1435:
 15347                           
 15348                           ; BSR set to: 0
 15349  013F68  98BD               	bcf	189,4,c	;volatile
 15350                           
 15351                           ; BSR set to: 0
 15352                           
 15353                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
 15354  013F6A  8ABD               	bsf	189,5,c	;volatile
 15355  013F6C  0012               	return	
 15356  013F6E                     l1440:
 15357                           
 15358                           ; BSR set to: 0
 15359  013F6E  88BD               	bsf	189,4,c	;volatile
 15360                           
 15361                           ; BSR set to: 0
 15362                           
 15363                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
 15364  013F70  9ABD               	bcf	189,5,c	;volatile
 15365  013F72  0012               	return	
 15366  013F74                     l1445:
 15367                           
 15368                           ; BSR set to: 0
 15369  013F74  9CBD               	bcf	189,6,c	;volatile
 15370                           
 15371                           ; BSR set to: 0
 15372                           
 15373                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
 15374  013F76  9EBD               	bcf	189,7,c	;volatile
 15375  013F78  0012               	return	
 15376  013F7A                     l1450:
 15377                           
 15378                           ; BSR set to: 0
 15379  013F7A  9CBD               	bcf	189,6,c	;volatile
 15380                           
 15381                           ; BSR set to: 0
 15382                           
 15383                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
 15384  013F7C  8EBD               	bsf	189,7,c	;volatile
 15385  013F7E  0012               	return	
 15386  013F80                     l1455:
 15387                           
 15388                           ; BSR set to: 0
 15389  013F80  8CBD               	bsf	189,6,c	;volatile
 15390                           
 15391                           ; BSR set to: 0
 15392                           
 15393                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
 15394  013F82  9EBD               	bcf	189,7,c	;volatile
 15395  013F84  0012               	return	
 15396  013F86                     l1460:
 15397                           
 15398                           ; BSR set to: 0
 15399  013F86  98BF               	bcf	191,4,c	;volatile
 15400                           
 15401                           ; BSR set to: 0
 15402                           
 15403                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
 15404  013F88  9ABF               	bcf	191,5,c	;volatile
 15405  013F8A  0012               	return	
 15406  013F8C                     l1465:
 15407                           
 15408                           ; BSR set to: 0
 15409  013F8C  98BF               	bcf	191,4,c	;volatile
 15410                           
 15411                           ; BSR set to: 0
 15412                           
 15413                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
 15414  013F8E  8ABF               	bsf	191,5,c	;volatile
 15415  013F90  0012               	return	
 15416  013F92                     l1470:
 15417                           
 15418                           ; BSR set to: 0
 15419  013F92  88BF               	bsf	191,4,c	;volatile
 15420                           
 15421                           ; BSR set to: 0
 15422                           
 15423                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
 15424  013F94  9ABF               	bcf	191,5,c	;volatile
 15425  013F96  0012               	return	
 15426  013F98                     l1475:
 15427                           
 15428                           ; BSR set to: 0
 15429  013F98  9CBF               	bcf	191,6,c	;volatile
 15430                           
 15431                           ; BSR set to: 0
 15432                           
 15433                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
 15434  013F9A  9EBF               	bcf	191,7,c	;volatile
 15435  013F9C  0012               	return	
 15436  013F9E                     l1480:
 15437                           
 15438                           ; BSR set to: 0
 15439  013F9E  9CBF               	bcf	191,6,c	;volatile
 15440                           
 15441                           ; BSR set to: 0
 15442                           
 15443                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
 15444  013FA0  8EBF               	bsf	191,7,c	;volatile
 15445  013FA2  0012               	return	
 15446  013FA4                     l1485:
 15447                           
 15448                           ; BSR set to: 0
 15449  013FA4  8CBF               	bsf	191,6,c	;volatile
 15450                           
 15451                           ; BSR set to: 0
 15452                           
 15453                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
 15454  013FA6  9EBF               	bcf	191,7,c	;volatile
 15455  013FA8  0012               	return	
 15456  013FAA                     l1490:
 15457                           
 15458                           ; BSR set to: 0
 15459  013FAA  98BD               	bcf	189,4,c	;volatile
 15460                           
 15461                           ; BSR set to: 0
 15462                           
 15463                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
 15464  013FAC  9ABD               	bcf	189,5,c	;volatile
 15465                           
 15466                           ; BSR set to: 0
 15467                           
 15468                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
 15469  013FAE  9CBD               	bcf	189,6,c	;volatile
 15470                           
 15471                           ; BSR set to: 0
 15472                           
 15473                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
 15474  013FB0  9EBD               	bcf	189,7,c	;volatile
 15475                           
 15476                           ; BSR set to: 0
 15477                           
 15478                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
 15479  013FB2  98BF               	bcf	191,4,c	;volatile
 15480                           
 15481                           ; BSR set to: 0
 15482                           
 15483                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
 15484  013FB4  9ABF               	bcf	191,5,c	;volatile
 15485                           
 15486                           ; BSR set to: 0
 15487                           
 15488                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
 15489  013FB6  9CBF               	bcf	191,6,c	;volatile
 15490                           
 15491                           ; BSR set to: 0
 15492                           
 15493                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
 15494  013FB8  9EBF               	bcf	191,7,c	;volatile
 15495  013FBA  0012               	return	
 15496  013FBC                     l10923:
 15497  013FBC  0100               	movlb	0	; () banked
 15498  013FBE  5160               	movf	display_led@led& (0+255),w,b
 15499  013FC0  6E20               	movwf	??_display_led^0,c
 15500  013FC2  6A21               	clrf	(??_display_led+1)^0,c
 15501                           
 15502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15503                           ; Switch size 1, requested type "simple"
 15504                           ; Number of cases is 1, Range of values is 0 to 0
 15505                           ; switch strategies available:
 15506                           ; Name         Instructions Cycles
 15507                           ; simple_byte            4     3 (average)
 15508                           ;	Chosen strategy is simple_byte
 15509  013FC4  5021               	movf	(??_display_led+1)^0,w,c
 15510  013FC6  0A00               	xorlw	0	; case 0
 15511  013FC8  A4D8               	btfss	status,2,c
 15512  013FCA  D7EF               	goto	l1490
 15513                           
 15514                           ; BSR set to: 0
 15515                           ; Switch size 1, requested type "simple"
 15516                           ; Number of cases is 12, Range of values is 0 to 11
 15517                           ; switch strategies available:
 15518                           ; Name         Instructions Cycles
 15519                           ; simple_byte           37    19 (average)
 15520                           ;	Chosen strategy is simple_byte
 15521  013FCC  5020               	movf	??_display_led^0,w,c
 15522  013FCE  0A00               	xorlw	0	; case 0
 15523  013FD0  B4D8               	btfsc	status,2,c
 15524  013FD2  D7C7               	goto	l1429
 15525  013FD4  0A01               	xorlw	1	; case 1
 15526  013FD6  B4D8               	btfsc	status,2,c
 15527  013FD8  D7CA               	goto	l1440
 15528  013FDA  0A03               	xorlw	3	; case 2
 15529  013FDC  B4D8               	btfsc	status,2,c
 15530  013FDE  D7C4               	goto	l1435
 15531  013FE0  0A01               	xorlw	1	; case 3
 15532  013FE2  B4D8               	btfsc	status,2,c
 15533  013FE4  D7C7               	goto	l1445
 15534  013FE6  0A07               	xorlw	7	; case 4
 15535  013FE8  B4D8               	btfsc	status,2,c
 15536  013FEA  D7CA               	goto	l1455
 15537  013FEC  0A01               	xorlw	1	; case 5
 15538  013FEE  B4D8               	btfsc	status,2,c
 15539  013FF0  D7C4               	goto	l1450
 15540  013FF2  0A03               	xorlw	3	; case 6
 15541  013FF4  B4D8               	btfsc	status,2,c
 15542  013FF6  D7C7               	goto	l1460
 15543  013FF8  0A01               	xorlw	1	; case 7
 15544  013FFA  B4D8               	btfsc	status,2,c
 15545  013FFC  D7CA               	goto	l1470
 15546  013FFE  0A0F               	xorlw	15	; case 8
 15547  014000  B4D8               	btfsc	status,2,c
 15548  014002  D7C4               	goto	l1465
 15549  014004  0A01               	xorlw	1	; case 9
 15550  014006  B4D8               	btfsc	status,2,c
 15551  014008  D7C7               	goto	l1475
 15552  01400A  0A03               	xorlw	3	; case 10
 15553  01400C  B4D8               	btfsc	status,2,c
 15554  01400E  D7CA               	goto	l1485
 15555  014010  0A01               	xorlw	1	; case 11
 15556  014012  B4D8               	btfsc	status,2,c
 15557  014014  D7C4               	goto	l1480
 15558  014016  D7C9               	goto	l1490
 15559  014018                     __end_of_display_led:
 15560                           	callstack 0
 15561                           
 15562 ;; *************** function _cli_read *****************
 15563 ;; Defined at:
 15564 ;;		line 86 in file "scdm.c"
 15565 ;; Parameters:    Size  Location     Type
 15566 ;;  a_ctx           2   35[BANK0 ] PTR struct _t_cli_ctx
 15567 ;;		 -> cli_ctx(131), 
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;  i               1   42[BANK0 ] unsigned char 
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1    wreg      void 
 15572 ;; Registers used:
 15573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15574 ;; Tracked objects:
 15575 ;;		On entry : 3F/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15580 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15581 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15582 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15583 ;;Total ram usage:        8 bytes
 15584 ;; Hardware stack levels used: 1
 15585 ;; Hardware stack levels required when called: 14
 15586 ;; This function calls:
 15587 ;;		__cli_interpret_cmd
 15588 ;;		_linux_getc
 15589 ;;		_linux_putc
 15590 ;;		_memset
 15591 ;; This function is called by:
 15592 ;;		_main
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           	psect	text55
 15597  01321E                     __ptext55:
 15598                           	callstack 0
 15599  01321E                     _cli_read:
 15600                           	callstack 16
 15601                           
 15602                           ; BSR set to: 0
 15603                           ;scdm.c: 86: void cli_read(t_cli_ctx *a_ctx);scdm.c: 87: {;scdm.c: 88:  uint8_t i = 0x00
      +                          ;
 15604                           
 15605                           ; BSR set to: 0
 15606                           ;incstack = 0
 15607  01321E  0E00               	movlw	0
 15608  013220  6F8A               	movwf	cli_read@i& (0+255),b
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;scdm.c: 91:  if (!linux_getc(&i)) {
 15612  013222  0E8A               	movlw	low cli_read@i
 15613  013224  6E21               	movwf	linux_getc@a_data^0,c
 15614  013226  EC8C  F0A9         	call	_linux_getc	;wreg free
 15615  01322A  0900               	iorlw	0
 15616  01322C  B4D8               	btfsc	status,2,c
 15617  01322E  0012               	return	
 15618  013230  D088               	goto	l10965
 15619  013232                     l10943:
 15620                           
 15621                           ; BSR set to: 0
 15622                           ;scdm.c: 103:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cp
      +                          os))] = '\0';
 15623  013232  EE20 F082          	lfsr	2,130
 15624  013236  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15625  013238  26D9               	addwf	fsr2l,f,c
 15626  01323A  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15627  01323C  22DA               	addwfc	fsr2h,f,c
 15628  01323E  0E7E               	movlw	126
 15629  013240  64DF               	cpfsgt	indf2,c
 15630  013242  D00C               	goto	l10947
 15631                           
 15632                           ; BSR set to: 0
 15633  013244  EE20 F082          	lfsr	2,130
 15634  013248  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15635  01324A  26D9               	addwf	fsr2l,f,c
 15636  01324C  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15637  01324E  22DA               	addwfc	fsr2h,f,c
 15638  013250  50DF               	movf	indf2,w,c
 15639  013252  6F85               	movwf	??_cli_read& (0+255),b
 15640  013254  5185               	movf	??_cli_read& (0+255),w,b
 15641  013256  6F88               	movwf	_cli_read$3101& (0+255),b
 15642  013258  6B89               	clrf	(_cli_read$3101+1)& (0+255),b
 15643  01325A  D00E               	goto	l1594
 15644  01325C                     l10947:
 15645                           
 15646                           ; BSR set to: 0
 15647  01325C  EE20 F082          	lfsr	2,130
 15648  013260  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15649  013262  26D9               	addwf	fsr2l,f,c
 15650  013264  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15651  013266  22DA               	addwfc	fsr2h,f,c
 15652  013268  50DF               	movf	indf2,w,c
 15653  01326A  6F85               	movwf	??_cli_read& (0+255),b
 15654  01326C  0E01               	movlw	1
 15655  01326E  2585               	addwf	??_cli_read& (0+255),w,b
 15656  013270  6F88               	movwf	_cli_read$3101& (0+255),b
 15657  013272  6B89               	clrf	(_cli_read$3101+1)& (0+255),b
 15658  013274  0E00               	movlw	0
 15659  013276  2389               	addwfc	(_cli_read$3101+1)& (0+255),f,b
 15660  013278                     l1594:
 15661                           
 15662                           ; BSR set to: 0
 15663  013278  5188               	movf	_cli_read$3101& (0+255),w,b
 15664  01327A  2583               	addwf	cli_read@a_ctx& (0+255),w,b
 15665  01327C  6F85               	movwf	??_cli_read& (0+255),b
 15666  01327E  5189               	movf	(_cli_read$3101+1)& (0+255),w,b
 15667  013280  2184               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 15668  013282  6F86               	movwf	(??_cli_read+1)& (0+255),b
 15669  013284  0E02               	movlw	2
 15670  013286  2585               	addwf	??_cli_read& (0+255),w,b
 15671  013288  6ED9               	movwf	fsr2l,c
 15672  01328A  0E00               	movlw	0
 15673  01328C  2186               	addwfc	(??_cli_read+1)& (0+255),w,b
 15674  01328E  6EDA               	movwf	fsr2h,c
 15675  013290  0E00               	movlw	0
 15676  013292  6EDF               	movwf	indf2,c
 15677                           
 15678                           ; BSR set to: 0
 15679                           ;scdm.c: 104:   linux_putc((unsigned char *) "\r\n", 2);
 15680  013294  0E68               	movlw	low (STR_5+15)
 15681  013296  6F75               	movwf	linux_putc@data& (0+255),b
 15682  013298  0EFF               	movlw	high (STR_5+15)
 15683  01329A  6F76               	movwf	(linux_putc@data+1)& (0+255),b
 15684  01329C  0E02               	movlw	2
 15685  01329E  6F77               	movwf	linux_putc@a_len& (0+255),b
 15686  0132A0  EC20  F0AB         	call	_linux_putc	;wreg free
 15687                           
 15688                           ; BSR set to: 0
 15689                           ;scdm.c: 105:   res = _cli_interpret_cmd(a_ctx);
 15690  0132A4  C083  F077         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 15691  0132A8  C084  F078         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 15692  0132AC  ECCF  F095         	call	__cli_interpret_cmd	;wreg free
 15693  0132B0  6E34               	movwf	_res^0,c
 15694                           
 15695                           ; BSR set to: 0
 15696                           ;scdm.c: 106:   a_ctx->cpos = 0;
 15697  0132B2  EE20 F082          	lfsr	2,130
 15698  0132B6  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15699  0132B8  26D9               	addwf	fsr2l,f,c
 15700  0132BA  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15701  0132BC  22DA               	addwfc	fsr2h,f,c
 15702  0132BE  0E00               	movlw	0
 15703  0132C0  6EDF               	movwf	indf2,c
 15704                           
 15705                           ; BSR set to: 0
 15706                           ;scdm.c: 107:   memset(a_ctx->cmd, 0x00, 128);
 15707  0132C2  0E02               	movlw	2
 15708  0132C4  2583               	addwf	cli_read@a_ctx& (0+255),w,b
 15709  0132C6  6F60               	movwf	memset@dest& (0+255),b
 15710  0132C8  0E00               	movlw	0
 15711  0132CA  2184               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 15712  0132CC  6F61               	movwf	(memset@dest+1)& (0+255),b
 15713  0132CE  0E00               	movlw	0
 15714  0132D0  6F63               	movwf	(memset@c+1)& (0+255),b
 15715  0132D2  0E00               	movlw	0
 15716  0132D4  6F62               	movwf	memset@c& (0+255),b
 15717  0132D6  0E00               	movlw	0
 15718  0132D8  6F65               	movwf	(memset@n+1)& (0+255),b
 15719  0132DA  0E80               	movlw	128
 15720  0132DC  6F64               	movwf	memset@n& (0+255),b
 15721  0132DE  EC5D  F09A         	call	_memset	;wreg free
 15722                           
 15723                           ;scdm.c: 108:   break;
 15724  0132E2  0012               	return	
 15725  0132E4                     l10957:
 15726                           
 15727                           ; BSR set to: 0
 15728                           ;scdm.c: 111:   if (a_ctx->cpos < (128 - 1)) {
 15729  0132E4  EE20 F082          	lfsr	2,130
 15730  0132E8  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15731  0132EA  26D9               	addwf	fsr2l,f,c
 15732  0132EC  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15733  0132EE  22DA               	addwfc	fsr2h,f,c
 15734  0132F0  0E7F               	movlw	127
 15735  0132F2  60DF               	cpfslt	indf2,c
 15736  0132F4  0012               	return	
 15737                           
 15738                           ; BSR set to: 0
 15739                           ;scdm.c: 112:    a_ctx->cmd[a_ctx->cpos++] = i;
 15740  0132F6  EE20 F082          	lfsr	2,130
 15741  0132FA  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15742  0132FC  26D9               	addwf	fsr2l,f,c
 15743  0132FE  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15744  013300  22DA               	addwfc	fsr2h,f,c
 15745  013302  50DF               	movf	indf2,w,c
 15746  013304  6F85               	movwf	??_cli_read& (0+255),b
 15747  013306  5185               	movf	??_cli_read& (0+255),w,b
 15748  013308  2583               	addwf	cli_read@a_ctx& (0+255),w,b
 15749  01330A  6F86               	movwf	(??_cli_read+1)& (0+255),b
 15750  01330C  0E00               	movlw	0
 15751  01330E  2184               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 15752  013310  6F87               	movwf	(??_cli_read+2)& (0+255),b
 15753  013312  0E02               	movlw	2
 15754  013314  2586               	addwf	(??_cli_read+1)& (0+255),w,b
 15755  013316  6ED9               	movwf	fsr2l,c
 15756  013318  0E00               	movlw	0
 15757  01331A  2187               	addwfc	(??_cli_read+2)& (0+255),w,b
 15758  01331C  6EDA               	movwf	fsr2h,c
 15759  01331E  0060  F22B  FFDF   	movff	cli_read@i,indf2
 15760  013324  EE20 F082          	lfsr	2,130
 15761  013328  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15762  01332A  26D9               	addwf	fsr2l,f,c
 15763  01332C  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15764  01332E  22DA               	addwfc	fsr2h,f,c
 15765  013330  2ADF               	incf	indf2,f,c
 15766                           
 15767                           ; BSR set to: 0
 15768                           ;scdm.c: 113:    linux_putc(&i, 1);
 15769  013332  0E8A               	movlw	low cli_read@i
 15770  013334  6F75               	movwf	linux_putc@data& (0+255),b
 15771  013336  6B76               	clrf	(linux_putc@data+1)& (0+255),b
 15772  013338  0E01               	movlw	1
 15773  01333A  6F77               	movwf	linux_putc@a_len& (0+255),b
 15774  01333C  EC20  F0AB         	call	_linux_putc	;wreg free
 15775  013340  0012               	return	
 15776  013342                     l10965:
 15777  013342  0100               	movlb	0	; () banked
 15778  013344  518A               	movf	cli_read@i& (0+255),w,b
 15779  013346  6F85               	movwf	??_cli_read& (0+255),b
 15780  013348  6B86               	clrf	(??_cli_read+1)& (0+255),b
 15781                           
 15782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15783                           ; Switch size 1, requested type "simple"
 15784                           ; Number of cases is 1, Range of values is 0 to 0
 15785                           ; switch strategies available:
 15786                           ; Name         Instructions Cycles
 15787                           ; simple_byte            4     3 (average)
 15788                           ;	Chosen strategy is simple_byte
 15789  01334A  5186               	movf	(??_cli_read+1)& (0+255),w,b
 15790  01334C  0A00               	xorlw	0	; case 0
 15791  01334E  A4D8               	btfss	status,2,c
 15792  013350  D7C9               	goto	l10957
 15793                           
 15794                           ; BSR set to: 0
 15795                           ; Switch size 1, requested type "simple"
 15796                           ; Number of cases is 4, Range of values is 13 to 127
 15797                           ; switch strategies available:
 15798                           ; Name         Instructions Cycles
 15799                           ; simple_byte           13     7 (average)
 15800                           ;	Chosen strategy is simple_byte
 15801  013352  5185               	movf	??_cli_read& (0+255),w,b
 15802  013354  0A0D               	xorlw	13	; case 13
 15803  013356  B4D8               	btfsc	status,2,c
 15804  013358  D76C               	goto	l10943
 15805  01335A  0A16               	xorlw	22	; case 27
 15806  01335C  B4D8               	btfsc	status,2,c
 15807  01335E  0012               	return	
 15808  013360  0A65               	xorlw	101	; case 126
 15809  013362  B4D8               	btfsc	status,2,c
 15810  013364  0012               	return	
 15811  013366  0A01               	xorlw	1	; case 127
 15812  013368  B4D8               	btfsc	status,2,c
 15813  01336A  0012               	return		;funcret
 15814  01336C  D7BB               	goto	l10957
 15815  01336E                     __end_of_cli_read:
 15816                           	callstack 0
 15817                           
 15818 ;; *************** function _memset *****************
 15819 ;; Defined at:
 15820 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 15821 ;; Parameters:    Size  Location     Type
 15822 ;;  dest            2    0[BANK0 ] PTR void 
 15823 ;;		 -> ring_buf1(67), cli_ctx(131), 
 15824 ;;  c               2    2[BANK0 ] int 
 15825 ;;  n               2    4[BANK0 ] unsigned int 
 15826 ;; Auto vars:     Size  Location     Type
 15827 ;;  s               2    8[BANK0 ] PTR unsigned char 
 15828 ;;		 -> ring_buf1(67), cli_ctx(131), 
 15829 ;;  k               2    6[BANK0 ] unsigned int 
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  2    0[BANK0 ] PTR void 
 15832 ;; Registers used:
 15833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15834 ;; Tracked objects:
 15835 ;;		On entry : 3F/0
 15836 ;;		On exit  : 3F/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15839 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15840 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15842 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15843 ;;Total ram usage:       12 bytes
 15844 ;; Hardware stack levels used: 1
 15845 ;; Hardware stack levels required when called: 7
 15846 ;; This function calls:
 15847 ;;		Nothing
 15848 ;; This function is called by:
 15849 ;;		_cli_init
 15850 ;;		_cli_read
 15851 ;;		_ringBufS_init
 15852 ;;		_ringBufS_flush
 15853 ;; This function uses a non-reentrant model
 15854 ;;
 15855                           
 15856                           	psect	text56
 15857  0134BA                     __ptext56:
 15858                           	callstack 0
 15859  0134BA                     _memset:
 15860                           	callstack 21
 15861                           
 15862                           ; BSR set to: 0
 15863                           
 15864                           ;incstack = 0
 15865  0134BA  C060  F068         	movff	memset@dest,memset@s
 15866  0134BE  C061  F069         	movff	memset@dest+1,memset@s+1
 15867  0134C2  5164               	movf	memset@n& (0+255),w,b
 15868  0134C4  1165               	iorwf	(memset@n+1)& (0+255),w,b
 15869  0134C6  B4D8               	btfsc	status,2,c
 15870  0134C8  0012               	return	
 15871                           
 15872                           ; BSR set to: 0
 15873  0134CA  0060  F1A3  FFD9   	movff	memset@s,fsr2l
 15874  0134D0  0060  F1A7  FFDA   	movff	memset@s+1,fsr2h
 15875  0134D6  0060  F18B  FFDF   	movff	memset@c,indf2
 15876                           
 15877                           ; BSR set to: 0
 15878  0134DC  5164               	movf	memset@n& (0+255),w,b
 15879  0134DE  2568               	addwf	memset@s& (0+255),w,b
 15880  0134E0  6E20               	movwf	??_memset^0,c
 15881  0134E2  5165               	movf	(memset@n+1)& (0+255),w,b
 15882  0134E4  2169               	addwfc	(memset@s+1)& (0+255),w,b
 15883  0134E6  6E21               	movwf	(??_memset+1)^0,c
 15884  0134E8  0EFF               	movlw	255
 15885  0134EA  2420               	addwf	??_memset^0,w,c
 15886  0134EC  6ED9               	movwf	fsr2l,c
 15887  0134EE  0EFF               	movlw	255
 15888  0134F0  2021               	addwfc	(??_memset+1)^0,w,c
 15889  0134F2  6EDA               	movwf	fsr2h,c
 15890  0134F4  0060  F18B  FFDF   	movff	memset@c,indf2
 15891  0134FA  5165               	movf	(memset@n+1)& (0+255),w,b
 15892  0134FC  E104               	bnz	l8991
 15893  0134FE  0E03               	movlw	3
 15894  013500  5D64               	subwf	memset@n& (0+255),w,b
 15895  013502  A0D8               	btfss	status,0,c
 15896  013504  0012               	return	
 15897  013506                     l8991:
 15898                           
 15899                           ; BSR set to: 0
 15900  013506  EE20 F001          	lfsr	2,1
 15901  01350A  5168               	movf	memset@s& (0+255),w,b
 15902  01350C  26D9               	addwf	fsr2l,f,c
 15903  01350E  5169               	movf	(memset@s+1)& (0+255),w,b
 15904  013510  22DA               	addwfc	fsr2h,f,c
 15905  013512  0060  F18B  FFDF   	movff	memset@c,indf2
 15906  013518  EE20 F002          	lfsr	2,2
 15907  01351C  5168               	movf	memset@s& (0+255),w,b
 15908  01351E  26D9               	addwf	fsr2l,f,c
 15909  013520  5169               	movf	(memset@s+1)& (0+255),w,b
 15910  013522  22DA               	addwfc	fsr2h,f,c
 15911  013524  0060  F18B  FFDF   	movff	memset@c,indf2
 15912  01352A  5164               	movf	memset@n& (0+255),w,b
 15913  01352C  2568               	addwf	memset@s& (0+255),w,b
 15914  01352E  6E20               	movwf	??_memset^0,c
 15915  013530  5165               	movf	(memset@n+1)& (0+255),w,b
 15916  013532  2169               	addwfc	(memset@s+1)& (0+255),w,b
 15917  013534  6E21               	movwf	(??_memset+1)^0,c
 15918  013536  0EFE               	movlw	254
 15919  013538  2420               	addwf	??_memset^0,w,c
 15920  01353A  6ED9               	movwf	fsr2l,c
 15921  01353C  0EFF               	movlw	255
 15922  01353E  2021               	addwfc	(??_memset+1)^0,w,c
 15923  013540  6EDA               	movwf	fsr2h,c
 15924  013542  0060  F18B  FFDF   	movff	memset@c,indf2
 15925  013548  5164               	movf	memset@n& (0+255),w,b
 15926  01354A  2568               	addwf	memset@s& (0+255),w,b
 15927  01354C  6E20               	movwf	??_memset^0,c
 15928  01354E  5165               	movf	(memset@n+1)& (0+255),w,b
 15929  013550  2169               	addwfc	(memset@s+1)& (0+255),w,b
 15930  013552  6E21               	movwf	(??_memset+1)^0,c
 15931  013554  0EFD               	movlw	253
 15932  013556  2420               	addwf	??_memset^0,w,c
 15933  013558  6ED9               	movwf	fsr2l,c
 15934  01355A  0EFF               	movlw	255
 15935  01355C  2021               	addwfc	(??_memset+1)^0,w,c
 15936  01355E  6EDA               	movwf	fsr2h,c
 15937  013560  0060  F18B  FFDF   	movff	memset@c,indf2
 15938                           
 15939                           ; BSR set to: 0
 15940  013566  5165               	movf	(memset@n+1)& (0+255),w,b
 15941  013568  E104               	bnz	l8997
 15942  01356A  0E07               	movlw	7
 15943  01356C  5D64               	subwf	memset@n& (0+255),w,b
 15944  01356E  A0D8               	btfss	status,0,c
 15945  013570  0012               	return	
 15946  013572                     l8997:
 15947                           
 15948                           ; BSR set to: 0
 15949  013572  EE20 F003          	lfsr	2,3
 15950  013576  5168               	movf	memset@s& (0+255),w,b
 15951  013578  26D9               	addwf	fsr2l,f,c
 15952  01357A  5169               	movf	(memset@s+1)& (0+255),w,b
 15953  01357C  22DA               	addwfc	fsr2h,f,c
 15954  01357E  0060  F18B  FFDF   	movff	memset@c,indf2
 15955  013584  5164               	movf	memset@n& (0+255),w,b
 15956  013586  2568               	addwf	memset@s& (0+255),w,b
 15957  013588  6E20               	movwf	??_memset^0,c
 15958  01358A  5165               	movf	(memset@n+1)& (0+255),w,b
 15959  01358C  2169               	addwfc	(memset@s+1)& (0+255),w,b
 15960  01358E  6E21               	movwf	(??_memset+1)^0,c
 15961  013590  0EFC               	movlw	252
 15962  013592  2420               	addwf	??_memset^0,w,c
 15963  013594  6ED9               	movwf	fsr2l,c
 15964  013596  0EFF               	movlw	255
 15965  013598  2021               	addwfc	(??_memset+1)^0,w,c
 15966  01359A  6EDA               	movwf	fsr2h,c
 15967  01359C  0060  F18B  FFDF   	movff	memset@c,indf2
 15968                           
 15969                           ; BSR set to: 0
 15970  0135A2  5165               	movf	(memset@n+1)& (0+255),w,b
 15971  0135A4  E104               	bnz	l9003
 15972  0135A6  0E09               	movlw	9
 15973  0135A8  5D64               	subwf	memset@n& (0+255),w,b
 15974  0135AA  A0D8               	btfss	status,0,c
 15975  0135AC  0012               	return	
 15976  0135AE                     l9003:
 15977                           
 15978                           ; BSR set to: 0
 15979  0135AE  C068  F020         	movff	memset@s,??_memset
 15980  0135B2  C069  F021         	movff	memset@s+1,??_memset+1
 15981  0135B6  1E20               	comf	??_memset^0,f,c
 15982  0135B8  1E21               	comf	(??_memset+1)^0,f,c
 15983  0135BA  4A20               	infsnz	??_memset^0,f,c
 15984  0135BC  2A21               	incf	(??_memset+1)^0,f,c
 15985  0135BE  0E03               	movlw	3
 15986  0135C0  1420               	andwf	??_memset^0,w,c
 15987  0135C2  6F66               	movwf	memset@k& (0+255),b
 15988  0135C4  6B67               	clrf	(memset@k+1)& (0+255),b
 15989  0135C6  5166               	movf	memset@k& (0+255),w,b
 15990  0135C8  2768               	addwf	memset@s& (0+255),f,b
 15991  0135CA  5167               	movf	(memset@k+1)& (0+255),w,b
 15992  0135CC  2369               	addwfc	(memset@s+1)& (0+255),f,b
 15993  0135CE  5166               	movf	memset@k& (0+255),w,b
 15994  0135D0  5F64               	subwf	memset@n& (0+255),f,b
 15995  0135D2  5167               	movf	(memset@k+1)& (0+255),w,b
 15996  0135D4  5B65               	subwfb	(memset@n+1)& (0+255),f,b
 15997  0135D6  0EFC               	movlw	252
 15998  0135D8  1764               	andwf	memset@n& (0+255),f,b
 15999  0135DA  0EFF               	movlw	255
 16000  0135DC  1765               	andwf	(memset@n+1)& (0+255),f,b
 16001  0135DE  D00E               	goto	l9011
 16002  0135E0                     l9005:
 16003                           
 16004                           ; BSR set to: 0
 16005  0135E0  0060  F1A3  FFD9   	movff	memset@s,fsr2l
 16006  0135E6  0060  F1A7  FFDA   	movff	memset@s+1,fsr2h
 16007  0135EC  0060  F18B  FFDF   	movff	memset@c,indf2
 16008                           
 16009                           ; BSR set to: 0
 16010  0135F2  0764               	decf	memset@n& (0+255),f,b
 16011  0135F4  A0D8               	btfss	status,0,c
 16012  0135F6  0765               	decf	(memset@n+1)& (0+255),f,b
 16013                           
 16014                           ; BSR set to: 0
 16015  0135F8  4B68               	infsnz	memset@s& (0+255),f,b
 16016  0135FA  2B69               	incf	(memset@s+1)& (0+255),f,b
 16017  0135FC                     l9011:
 16018                           
 16019                           ; BSR set to: 0
 16020  0135FC  5164               	movf	memset@n& (0+255),w,b
 16021  0135FE  1165               	iorwf	(memset@n+1)& (0+255),w,b
 16022  013600  B4D8               	btfsc	status,2,c
 16023  013602  0012               	return	
 16024  013604  D7ED               	goto	l9005
 16025  013606                     __end_of_memset:
 16026                           	callstack 0
 16027                           
 16028 ;; *************** function _linux_putc *****************
 16029 ;; Defined at:
 16030 ;;		line 51 in file "scdm.c"
 16031 ;; Parameters:    Size  Location     Type
 16032 ;;  data            2   21[BANK0 ] PTR unsigned char 
 16033 ;;		 -> STR_29(3), cli_read@i(1), 
 16034 ;;  a_len           1   23[BANK0 ] unsigned char 
 16035 ;; Auto vars:     Size  Location     Type
 16036 ;;		None
 16037 ;; Return value:  Size  Location     Type
 16038 ;;                  1    wreg      unsigned char 
 16039 ;; Registers used:
 16040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16041 ;; Tracked objects:
 16042 ;;		On entry : 3F/0
 16043 ;;		On exit  : 3F/0
 16044 ;;		Unchanged: 0/0
 16045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16046 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16049 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16050 ;;Total ram usage:        3 bytes
 16051 ;; Hardware stack levels used: 1
 16052 ;; Hardware stack levels required when called: 12
 16053 ;; This function calls:
 16054 ;;		_puts
 16055 ;; This function is called by:
 16056 ;;		_cli_read
 16057 ;; This function uses a non-reentrant model
 16058 ;;
 16059                           
 16060                           	psect	text57
 16061  015640                     __ptext57:
 16062                           	callstack 0
 16063  015640                     _linux_putc:
 16064                           	callstack 17
 16065                           
 16066                           ; BSR set to: 0
 16067                           ;scdm.c: 51: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 52: {;scdm.c: 53: 
      +                           puts((const char *) data);
 16068                           
 16069                           ; BSR set to: 0
 16070                           ;incstack = 0
 16071  015640  C075  F072         	movff	linux_putc@data,puts@s
 16072  015644  C076  F073         	movff	linux_putc@data+1,puts@s+1
 16073  015648  EC16  F0A8         	call	_puts	;wreg free
 16074                           
 16075                           ; BSR set to: 0
 16076  01564C  0012               	return		;funcret
 16077  01564E                     __end_of_linux_putc:
 16078                           	callstack 0
 16079                           
 16080 ;; *************** function _linux_getc *****************
 16081 ;; Defined at:
 16082 ;;		line 41 in file "scdm.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;  a_data          1   32[COMRAM] PTR unsigned char 
 16085 ;;		 -> cli_read@i(1), main@i(1), 
 16086 ;; Auto vars:     Size  Location     Type
 16087 ;;		None
 16088 ;; Return value:  Size  Location     Type
 16089 ;;                  1    wreg      unsigned char 
 16090 ;; Registers used:
 16091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16092 ;; Tracked objects:
 16093 ;;		On entry : 0/3D
 16094 ;;		On exit  : 0/0
 16095 ;;		Unchanged: 0/0
 16096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16097 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16099 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16100 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16101 ;;Total ram usage:        2 bytes
 16102 ;; Hardware stack levels used: 1
 16103 ;; Hardware stack levels required when called: 8
 16104 ;; This function calls:
 16105 ;;		_UART1_Read
 16106 ;;		_UART1_is_rx_ready
 16107 ;; This function is called by:
 16108 ;;		_main
 16109 ;;		_cli_read
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           	psect	text58
 16114  015318                     __ptext58:
 16115                           	callstack 0
 16116  015318                     _linux_getc:
 16117                           	callstack 22
 16118                           
 16119                           ;scdm.c: 41: uint8_t linux_getc(uint8_t *a_data);scdm.c: 42: {;scdm.c: 43:  if (UART1_is
      +                          _rx_ready()) {
 16120                           
 16121                           ; BSR set to: 0
 16122                           ;incstack = 0
 16123  015318  EC27  F0AB         	call	_UART1_is_rx_ready	;wreg free
 16124  01531C  0900               	iorlw	0
 16125  01531E  B4D8               	btfsc	status,2,c
 16126  015320  D00C               	goto	l10593
 16127                           
 16128                           ;scdm.c: 44:   a_data[0] = UART1_Read();
 16129  015322  EC5D  F0A7         	call	_UART1_Read	;wreg free
 16130  015326  0100               	movlb	0	; () banked
 16131  015328  6F60               	movwf	??_linux_getc& (0+255),b
 16132  01532A  5021               	movf	linux_getc@a_data^0,w,c
 16133  01532C  6ED9               	movwf	fsr2l,c
 16134  01532E  6ADA               	clrf	fsr2h,c
 16135  015330  0060  F183  FFDF   	movff	??_linux_getc,indf2
 16136                           
 16137                           ; BSR set to: 0
 16138                           ;scdm.c: 45:   return 1;
 16139  015336  0E01               	movlw	1
 16140  015338  0012               	return	
 16141  01533A                     l10593:
 16142                           
 16143                           ;scdm.c: 47:   return 0;
 16144  01533A  0E00               	movlw	0
 16145  01533C  0012               	return		;funcret
 16146  01533E                     __end_of_linux_getc:
 16147                           	callstack 0
 16148                           
 16149 ;; *************** function _UART1_is_rx_ready *****************
 16150 ;; Defined at:
 16151 ;;		line 169 in file "mcc_generated_files/uart1.c"
 16152 ;; Parameters:    Size  Location     Type
 16153 ;;		None
 16154 ;; Auto vars:     Size  Location     Type
 16155 ;;		None
 16156 ;; Return value:  Size  Location     Type
 16157 ;;                  1    wreg      _Bool 
 16158 ;; Registers used:
 16159 ;;		wreg, status,2
 16160 ;; Tracked objects:
 16161 ;;		On entry : 0/3D
 16162 ;;		On exit  : 0/0
 16163 ;;		Unchanged: 0/0
 16164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16169 ;;Total ram usage:        0 bytes
 16170 ;; Hardware stack levels used: 1
 16171 ;; Hardware stack levels required when called: 7
 16172 ;; This function calls:
 16173 ;;		Nothing
 16174 ;; This function is called by:
 16175 ;;		_linux_getc
 16176 ;; This function uses a non-reentrant model
 16177 ;;
 16178                           
 16179                           	psect	text59
 16180  01564E                     __ptext59:
 16181                           	callstack 0
 16182  01564E                     _UART1_is_rx_ready:
 16183                           	callstack 22
 16184                           
 16185                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 16186                           
 16187                           ;incstack = 0
 16188  01564E  503B               	movf	_uart1RxCount^0,w,c	;volatile
 16189  015650  B4D8               	btfsc	status,2,c
 16190  015652  D002               	goto	u6160
 16191  015654  0E01               	movlw	1
 16192  015656  0012               	return	
 16193  015658                     u6160:
 16194  015658  0E00               	movlw	0
 16195  01565A  0012               	return		;funcret
 16196  01565C                     __end_of_UART1_is_rx_ready:
 16197                           	callstack 0
 16198                           
 16199 ;; *************** function _UART1_Read *****************
 16200 ;; Defined at:
 16201 ;;		line 188 in file "mcc_generated_files/uart1.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;		None
 16204 ;; Auto vars:     Size  Location     Type
 16205 ;;  readValue       1   31[COMRAM] unsigned char 
 16206 ;; Return value:  Size  Location     Type
 16207 ;;                  1    wreg      unsigned char 
 16208 ;; Registers used:
 16209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16210 ;; Tracked objects:
 16211 ;;		On entry : 0/3D
 16212 ;;		On exit  : 3F/39
 16213 ;;		Unchanged: 0/0
 16214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16219 ;;Total ram usage:        1 bytes
 16220 ;; Hardware stack levels used: 1
 16221 ;; Hardware stack levels required when called: 7
 16222 ;; This function calls:
 16223 ;;		Nothing
 16224 ;; This function is called by:
 16225 ;;		_linux_getc
 16226 ;; This function uses a non-reentrant model
 16227 ;;
 16228                           
 16229                           	psect	text60
 16230  014EBA                     __ptext60:
 16231                           	callstack 0
 16232  014EBA                     _UART1_Read:
 16233                           	callstack 22
 16234                           
 16235                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 16236                           
 16237                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 16238                           
 16239                           ;incstack = 0
 16240  014EBA  503B               	movf	_uart1RxCount^0,w,c	;volatile
 16241  014EBC  B4D8               	btfsc	status,2,c
 16242  014EBE  D7FD               	goto	__ptext60
 16243                           
 16244                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 16245  014EC0  0E00               	movlw	low _uart1RxStatusBuffer
 16246  014EC2  243C               	addwf	_uart1RxTail^0,w,c	;volatile
 16247  014EC4  6ED9               	movwf	fsr2l,c
 16248  014EC6  6ADA               	clrf	fsr2h,c
 16249  014EC8  0E02               	movlw	high _uart1RxStatusBuffer
 16250  014ECA  22DA               	addwfc	fsr2h,f,c
 16251  014ECC  50DF               	movf	indf2,w,c
 16252  014ECE  6E3A               	movwf	_uart1RxLastError^0,c	;volatile
 16253                           
 16254                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 16255  014ED0  0E00               	movlw	low _uart1RxBuffer
 16256  014ED2  243C               	addwf	_uart1RxTail^0,w,c	;volatile
 16257  014ED4  6ED9               	movwf	fsr2l,c
 16258  014ED6  6ADA               	clrf	fsr2h,c
 16259  014ED8  0E03               	movlw	high _uart1RxBuffer
 16260  014EDA  22DA               	addwfc	fsr2h,f,c
 16261  014EDC  50DF               	movf	indf2,w,c
 16262  014EDE  6E20               	movwf	UART1_Read@readValue^0,c
 16263  014EE0  2A3C               	incf	_uart1RxTail^0,f,c	;volatile
 16264                           
 16265                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 16266  014EE2  0E3F               	movlw	63
 16267  014EE4  643C               	cpfsgt	_uart1RxTail^0,c
 16268  014EE6  D002               	goto	l7263
 16269                           
 16270                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 16271  014EE8  0E00               	movlw	0
 16272  014EEA  6E3C               	movwf	_uart1RxTail^0,c	;volatile
 16273  014EEC                     l7263:
 16274                           
 16275                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 16276  014EEC  0139               	movlb	57	; () banked
 16277  014EEE  9793               	bcf	147,3,b	;volatile
 16278                           
 16279                           ; BSR set to: 57
 16280                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 16281  014EF0  063B               	decf	_uart1RxCount^0,f,c	;volatile
 16282                           
 16283                           ; BSR set to: 57
 16284                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 16285  014EF2  8793               	bsf	147,3,b	;volatile
 16286                           
 16287                           ; BSR set to: 57
 16288                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 16289  014EF4  5020               	movf	UART1_Read@readValue^0,w,c
 16290                           
 16291                           ; BSR set to: 57
 16292  014EF6  0012               	return		;funcret
 16293  014EF8                     __end_of_UART1_Read:
 16294                           	callstack 0
 16295                           
 16296 ;; *************** function __cli_interpret_cmd *****************
 16297 ;; Defined at:
 16298 ;;		line 57 in file "scdm.c"
 16299 ;; Parameters:    Size  Location     Type
 16300 ;;  a_ctx           2   23[BANK0 ] PTR struct _t_cli_ctx
 16301 ;;		 -> cli_ctx(131), 
 16302 ;; Auto vars:     Size  Location     Type
 16303 ;;  i               1   34[BANK0 ] unsigned char 
 16304 ;;  ret             1   33[BANK0 ] unsigned char 
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      unsigned char 
 16307 ;; Registers used:
 16308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16309 ;; Tracked objects:
 16310 ;;		On entry : 3F/0
 16311 ;;		On exit  : 3F/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16315 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16316 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16317 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16318 ;;Total ram usage:       12 bytes
 16319 ;; Hardware stack levels used: 1
 16320 ;; Hardware stack levels required when called: 13
 16321 ;; This function calls:
 16322 ;;		Absolute function
 16323 ;;		_fh_p0
 16324 ;;		_fh_p1
 16325 ;;		_fh_pd
 16326 ;;		_fh_pl
 16327 ;;		_fh_po
 16328 ;;		_fh_pp
 16329 ;;		_fh_pr
 16330 ;;		_fh_ps
 16331 ;;		_fh_pu
 16332 ;;		_strlen
 16333 ;;		_strncmp
 16334 ;; This function is called by:
 16335 ;;		_cli_read
 16336 ;; This function uses a non-reentrant model
 16337 ;;
 16338                           
 16339                           	psect	text61
 16340  012B9E                     __ptext61:
 16341                           	callstack 0
 16342  012B9E                     __cli_interpret_cmd:
 16343                           	callstack 16
 16344                           
 16345                           ; BSR set to: 0
 16346                           ;scdm.c: 57: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 58: {;scdm.c: 5
      +                          9:  uint8_t i = 0;
 16347                           
 16348                           ; BSR set to: 57
 16349                           ;incstack = 0
 16350  012B9E  0E00               	movlw	0
 16351  012BA0  6F82               	movwf	__cli_interpret_cmd@i& (0+255),b
 16352                           
 16353                           ;scdm.c: 60:  uint8_t ret = E_CMD_OK;
 16354  012BA2  0E00               	movlw	0
 16355  012BA4  6F81               	movwf	__cli_interpret_cmd@ret& (0+255),b
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;scdm.c: 62:  if (!strlen(a_ctx->cmd)) {
 16359  012BA6  0E02               	movlw	2
 16360  012BA8  2577               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 16361  012BAA  6E20               	movwf	strlen@s^0,c
 16362  012BAC  0E00               	movlw	0
 16363  012BAE  2178               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 16364  012BB0  6E21               	movwf	(strlen@s+1)^0,c
 16365  012BB2  EC33  F0A5         	call	_strlen	;wreg free
 16366  012BB6  5020               	movf	?_strlen^0,w,c
 16367  012BB8  1021               	iorwf	(?_strlen+1)^0,w,c
 16368  012BBA  A4D8               	btfss	status,2,c
 16369  012BBC  D002               	goto	l10629
 16370                           
 16371                           ; BSR set to: 0
 16372                           ;scdm.c: 63:   return E_CMD_EMPTY;
 16373  012BBE  0E03               	movlw	3
 16374  012BC0  0012               	return	
 16375  012BC2                     l10629:
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;scdm.c: 66:  if (strlen(a_ctx->cmd) < 2) {
 16379  012BC2  0E02               	movlw	2
 16380  012BC4  2577               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 16381  012BC6  6E20               	movwf	strlen@s^0,c
 16382  012BC8  0E00               	movlw	0
 16383  012BCA  2178               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 16384  012BCC  6E21               	movwf	(strlen@s+1)^0,c
 16385  012BCE  EC33  F0A5         	call	_strlen	;wreg free
 16386  012BD2  5021               	movf	(?_strlen+1)^0,w,c
 16387  012BD4  E103               	bnz	u10211
 16388  012BD6  0E02               	movlw	2
 16389  012BD8  5C20               	subwf	?_strlen^0,w,c
 16390  012BDA  B0D8               	btfsc	status,0,c
 16391  012BDC                     u10211:
 16392  012BDC  D07D               	goto	l10641
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;scdm.c: 67:   return E_CMD_TOO_SHORT;
 16396  012BDE  0E02               	movlw	2
 16397  012BE0  0012               	return	
 16398  012BE2                     l10635:
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;scdm.c: 71:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 16402  012BE2  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16403  012BE4  0D05               	mullw	5
 16404  012BE6  006F FFCC  F079    	movff	prodl,??__cli_interpret_cmd
 16405  012BEC  006F FFD0  F07A    	movff	prodh,??__cli_interpret_cmd+1
 16406  012BF2  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16407  012BF8  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16408  012BFE  006F FF78  F07B    	movff	postinc2,??__cli_interpret_cmd+2
 16409  012C04  006F FF74  F07C    	movff	postdec2,??__cli_interpret_cmd+3
 16410  012C0A  5179               	movf	??__cli_interpret_cmd& (0+255),w,b
 16411  012C0C  257B               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 16412  012C0E  6ED9               	movwf	fsr2l,c
 16413  012C10  517A               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 16414  012C12  217C               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 16415  012C14  6EDA               	movwf	fsr2h,c
 16416  012C16  006F FF78  F062    	movff	postinc2,strncmp@_l
 16417  012C1C  006F FF74  F063    	movff	postdec2,strncmp@_l+1
 16418  012C22  0E02               	movlw	2
 16419  012C24  2577               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 16420  012C26  6F64               	movwf	strncmp@_r& (0+255),b
 16421  012C28  0E00               	movlw	0
 16422  012C2A  2178               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 16423  012C2C  6F65               	movwf	(strncmp@_r+1)& (0+255),b
 16424  012C2E  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16425  012C30  0D05               	mullw	5
 16426  012C32  006F FFCC  F07D    	movff	prodl,??__cli_interpret_cmd+4
 16427  012C38  006F FFD0  F07E    	movff	prodh,??__cli_interpret_cmd+5
 16428  012C3E  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16429  012C44  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16430  012C4A  006F FF78  F07F    	movff	postinc2,??__cli_interpret_cmd+6
 16431  012C50  006F FF74  F080    	movff	postdec2,??__cli_interpret_cmd+7
 16432  012C56  517D               	movf	(??__cli_interpret_cmd+4)& (0+255),w,b
 16433  012C58  257F               	addwf	(??__cli_interpret_cmd+6)& (0+255),w,b
 16434  012C5A  6ED9               	movwf	fsr2l,c
 16435  012C5C  517E               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 16436  012C5E  2180               	addwfc	(??__cli_interpret_cmd+7)& (0+255),w,b
 16437  012C60  6EDA               	movwf	fsr2h,c
 16438  012C62  006F FF78  F020    	movff	postinc2,strlen@s
 16439  012C68  006F FF74  F021    	movff	postdec2,strlen@s+1
 16440  012C6E  EC33  F0A5         	call	_strlen	;wreg free
 16441  012C72  C020  F066         	movff	?_strlen,strncmp@n
 16442  012C76  C021  F067         	movff	?_strlen+1,strncmp@n+1
 16443  012C7A  EC59  F098         	call	_strncmp	;wreg free
 16444  012C7E  5162               	movf	?_strncmp& (0+255),w,b
 16445  012C80  1163               	iorwf	(?_strncmp+1)& (0+255),w,b
 16446  012C82  A4D8               	btfss	status,2,c
 16447  012C84  D028               	goto	l10639
 16448                           
 16449                           ; BSR set to: 0
 16450                           ;scdm.c: 73:    a_ctx->cmds[i].fh((void *) a_ctx);
 16451  012C86  C077  F075         	movff	__cli_interpret_cmd@a_ctx,fh_p1@a_data
 16452  012C8A  C078  F076         	movff	__cli_interpret_cmd@a_ctx+1,fh_p1@a_data+1
 16453  012C8E  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16454  012C90  0D05               	mullw	5
 16455  012C92  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16456  012C98  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16457  012C9E  006F FF78  F079    	movff	postinc2,??__cli_interpret_cmd
 16458  012CA4  006F FF74  F07A    	movff	postdec2,??__cli_interpret_cmd+1
 16459  012CAA  50F3               	movf	243,w,c
 16460  012CAC  2779               	addwf	??__cli_interpret_cmd& (0+255),f,b
 16461  012CAE  50F4               	movf	244,w,c
 16462  012CB0  237A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 16463  012CB2  0E02               	movlw	2
 16464  012CB4  2579               	addwf	??__cli_interpret_cmd& (0+255),w,b
 16465  012CB6  6ED9               	movwf	fsr2l,c
 16466  012CB8  0E00               	movlw	0
 16467  012CBA  217A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 16468  012CBC  6EDA               	movwf	fsr2h,c
 16469  012CBE  D801               	call	u10238
 16470  012CC0  D028               	goto	u10240
 16471  012CC2                     u10238:
 16472  012CC2  0005               	push	
 16473  012CC4  6EFA               	movwf	pclath,c
 16474  012CC6  50DE               	movf	postinc2,w,c
 16475  012CC8  6EFD               	movwf	tosl,c
 16476  012CCA  50DE               	movf	postinc2,w,c
 16477  012CCC  6EFE               	movwf	tosh,c
 16478  012CCE  50DE               	movf	postinc2,w,c
 16479  012CD0  6EFF               	movwf	tosu,c
 16480  012CD2  50FA               	movf	pclath,w,c
 16481  012CD4  0012               	return		;indir
 16482  012CD6                     l10639:
 16483                           
 16484                           ; BSR set to: 0
 16485                           ;scdm.c: 76:   i++;
 16486  012CD6  2B82               	incf	__cli_interpret_cmd@i& (0+255),f,b
 16487  012CD8                     l10641:
 16488                           
 16489                           ; BSR set to: 0
 16490                           ;scdm.c: 70:  while (a_ctx->cmds[i].fh) {
 16491  012CD8  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16492  012CDA  0D05               	mullw	5
 16493  012CDC  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16494  012CE2  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16495  012CE8  006F FF78  F079    	movff	postinc2,??__cli_interpret_cmd
 16496  012CEE  006F FF74  F07A    	movff	postdec2,??__cli_interpret_cmd+1
 16497  012CF4  50F3               	movf	243,w,c
 16498  012CF6  2779               	addwf	??__cli_interpret_cmd& (0+255),f,b
 16499  012CF8  50F4               	movf	244,w,c
 16500  012CFA  237A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 16501  012CFC  0E02               	movlw	2
 16502  012CFE  2579               	addwf	??__cli_interpret_cmd& (0+255),w,b
 16503  012D00  6ED9               	movwf	fsr2l,c
 16504  012D02  0E00               	movlw	0
 16505  012D04  217A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 16506  012D06  6EDA               	movwf	fsr2h,c
 16507  012D08  50DE               	movf	postinc2,w,c
 16508  012D0A  10DE               	iorwf	postinc2,w,c
 16509  012D0C  10DE               	iorwf	postinc2,w,c
 16510  012D0E  A4D8               	btfss	status,2,c
 16511  012D10  D768               	goto	l10635
 16512  012D12                     u10240:
 16513                           
 16514                           ;scdm.c: 79:  if (!a_ctx->cmds[i].fh) {
 16515  012D12  0100               	movlb	0	; () banked
 16516  012D14  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16517  012D16  0D05               	mullw	5
 16518  012D18  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16519  012D1E  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16520  012D24  006F FF78  F079    	movff	postinc2,??__cli_interpret_cmd
 16521  012D2A  006F FF74  F07A    	movff	postdec2,??__cli_interpret_cmd+1
 16522  012D30  50F3               	movf	243,w,c
 16523  012D32  2779               	addwf	??__cli_interpret_cmd& (0+255),f,b
 16524  012D34  50F4               	movf	244,w,c
 16525  012D36  237A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 16526  012D38  0E02               	movlw	2
 16527  012D3A  2579               	addwf	??__cli_interpret_cmd& (0+255),w,b
 16528  012D3C  6ED9               	movwf	fsr2l,c
 16529  012D3E  0E00               	movlw	0
 16530  012D40  217A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 16531  012D42  6EDA               	movwf	fsr2h,c
 16532  012D44  50DE               	movf	postinc2,w,c
 16533  012D46  10DE               	iorwf	postinc2,w,c
 16534  012D48  10DE               	iorwf	postinc2,w,c
 16535  012D4A  A4D8               	btfss	status,2,c
 16536  012D4C  D002               	goto	l1580
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;scdm.c: 80:   ret = E_CMD_NOT_FOUND;
 16540  012D4E  0E01               	movlw	1
 16541  012D50  6F81               	movwf	__cli_interpret_cmd@ret& (0+255),b
 16542  012D52                     l1580:
 16543                           
 16544                           ; BSR set to: 0
 16545                           ;scdm.c: 83:  return ret;
 16546  012D52  5181               	movf	__cli_interpret_cmd@ret& (0+255),w,b
 16547                           
 16548                           ; BSR set to: 0
 16549  012D54  0012               	return		;funcret
 16550  012D56                     __end_of__cli_interpret_cmd:
 16551                           	callstack 0
 16552                           
 16553 ;; *************** function _strncmp *****************
 16554 ;; Defined at:
 16555 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 16556 ;; Parameters:    Size  Location     Type
 16557 ;;  _l              2    2[BANK0 ] PTR const unsigned char 
 16558 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_28(3), STR_27(3), 
 16559 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 16560 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(23), 
 16561 ;;		 -> STR_18(29), STR_17(24), STR_16(24), STR_15(153), 
 16562 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
 16563 ;;  _r              2    4[BANK0 ] PTR const unsigned char 
 16564 ;;		 -> cli_ctx.cmd(128), STR_45(4), STR_40(3), cli_ctx(131), 
 16565 ;;  n               2    6[BANK0 ] unsigned int 
 16566 ;; Auto vars:     Size  Location     Type
 16567 ;;  r               2   12[BANK0 ] PTR const unsigned char 
 16568 ;;		 -> cli_ctx.cmd(128), STR_45(4), STR_40(3), cli_ctx(131), 
 16569 ;;  l               2   10[BANK0 ] PTR const unsigned char 
 16570 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_28(3), STR_27(3), 
 16571 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 16572 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(23), 
 16573 ;;		 -> STR_18(29), STR_17(24), STR_16(24), STR_15(153), 
 16574 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  2    2[BANK0 ] int 
 16577 ;; Registers used:
 16578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 16579 ;; Tracked objects:
 16580 ;;		On entry : 3F/0
 16581 ;;		On exit  : 3F/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16584 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16585 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16586 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16587 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16588 ;;Total ram usage:       12 bytes
 16589 ;; Hardware stack levels used: 1
 16590 ;; Hardware stack levels required when called: 7
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		__cli_interpret_cmd
 16595 ;;		_vfpfcnvrt
 16596 ;; This function uses a non-reentrant model
 16597 ;;
 16598                           
 16599                           	psect	text62
 16600  0130B2                     __ptext62:
 16601                           	callstack 0
 16602  0130B2                     _strncmp:
 16603                           	callstack 20
 16604                           
 16605                           ; BSR set to: 0
 16606                           
 16607                           ; BSR set to: 0
 16608                           ;incstack = 0
 16609  0130B2  C062  F06A         	movff	strncmp@_l,strncmp@l
 16610  0130B6  C063  F06B         	movff	strncmp@_l+1,strncmp@l+1
 16611  0130BA  C064  F06C         	movff	strncmp@_r,strncmp@r
 16612  0130BE  C065  F06D         	movff	strncmp@_r+1,strncmp@r+1
 16613  0130C2  0766               	decf	strncmp@n& (0+255),f,b
 16614  0130C4  A0D8               	btfss	status,0,c
 16615  0130C6  0767               	decf	(strncmp@n+1)& (0+255),f,b
 16616  0130C8  2966               	incf	strncmp@n& (0+255),w,b
 16617  0130CA  E110               	bnz	l9653
 16618  0130CC  2967               	incf	(strncmp@n+1)& (0+255),w,b
 16619  0130CE  A4D8               	btfss	status,2,c
 16620  0130D0  D00D               	goto	l9653
 16621                           
 16622                           ; BSR set to: 0
 16623  0130D2  0E00               	movlw	0
 16624  0130D4  6F63               	movwf	(?_strncmp+1)& (0+255),b
 16625  0130D6  0E00               	movlw	0
 16626  0130D8  6F62               	movwf	?_strncmp& (0+255),b
 16627  0130DA  0012               	return	
 16628  0130DC                     l9651:
 16629  0130DC  0100               	movlb	0	; () banked
 16630  0130DE  4B6A               	infsnz	strncmp@l& (0+255),f,b
 16631  0130E0  2B6B               	incf	(strncmp@l+1)& (0+255),f,b
 16632  0130E2  4B6C               	infsnz	strncmp@r& (0+255),f,b
 16633  0130E4  2B6D               	incf	(strncmp@r+1)& (0+255),f,b
 16634  0130E6  0766               	decf	strncmp@n& (0+255),f,b
 16635  0130E8  A0D8               	btfss	status,0,c
 16636  0130EA  0767               	decf	(strncmp@n+1)& (0+255),f,b
 16637  0130EC                     l9653:
 16638                           
 16639                           ; BSR set to: 0
 16640  0130EC  0060  F1AB  FFF6   	movff	strncmp@l,tblptrl
 16641  0130F2  0060  F1AF  FFF7   	movff	strncmp@l+1,tblptrh
 16642  0130F8  0E00               	movlw	low (__mediumconst shr (0+16))
 16643  0130FA  6EF8               	movwf	tblptru,c
 16644  0130FC  0E1F               	movlw	(high __ramtop+-1)
 16645  0130FE  64F7               	cpfsgt	tblptrh,c
 16646  013100  D003               	bra	u9007
 16647  013102  0008               	tblrd		*
 16648  013104  50F5               	movf	tablat,w,c
 16649  013106  D007               	bra	u9000
 16650  013108                     u9007:
 16651  013108  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16652  01310E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16653  013114  50E7               	movf	indf1,w,c
 16654  013116                     u9000:
 16655  013116  0900               	iorlw	0
 16656  013118  B4D8               	btfsc	status,2,c
 16657  01311A  D04C               	goto	u9060
 16658  01311C  0060  F1B3  FFF6   	movff	strncmp@r,tblptrl
 16659  013122  0060  F1B7  FFF7   	movff	strncmp@r+1,tblptrh
 16660  013128  0E00               	movlw	low (__mediumconst shr (0+16))
 16661  01312A  6EF8               	movwf	tblptru,c
 16662  01312C  0E1F               	movlw	(high __ramtop+-1)
 16663  01312E  64F7               	cpfsgt	tblptrh,c
 16664  013130  D003               	bra	u9027
 16665  013132  0008               	tblrd		*
 16666  013134  50F5               	movf	tablat,w,c
 16667  013136  D007               	bra	u9020
 16668  013138                     u9027:
 16669  013138  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16670  01313E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16671  013144  50E7               	movf	indf1,w,c
 16672  013146                     u9020:
 16673  013146  0900               	iorlw	0
 16674  013148  B4D8               	btfsc	status,2,c
 16675  01314A  D034               	goto	u9060
 16676  01314C  0100               	movlb	0	; () banked
 16677  01314E  5166               	movf	strncmp@n& (0+255),w,b
 16678  013150  1167               	iorwf	(strncmp@n+1)& (0+255),w,b
 16679  013152  B4D8               	btfsc	status,2,c
 16680  013154  D02F               	goto	u9060
 16681                           
 16682                           ; BSR set to: 0
 16683  013156  0060  F1B3  FFF6   	movff	strncmp@r,tblptrl
 16684  01315C  0060  F1B7  FFF7   	movff	strncmp@r+1,tblptrh
 16685  013162  0E00               	movlw	low (__mediumconst shr (0+16))
 16686  013164  6EF8               	movwf	tblptru,c
 16687  013166  0E1F               	movlw	(high __ramtop+-1)
 16688  013168  64F7               	cpfsgt	tblptrh,c
 16689  01316A  D003               	bra	u9057
 16690  01316C  0008               	tblrd		*
 16691  01316E  50F5               	movf	tablat,w,c
 16692  013170  D007               	bra	u9050
 16693  013172                     u9057:
 16694  013172  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16695  013178  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16696  01317E  50E7               	movf	indf1,w,c
 16697  013180                     u9050:
 16698  013180  0100               	movlb	0	; () banked
 16699  013182  6F68               	movwf	??_strncmp& (0+255),b
 16700  013184  0060  F1AB  FFF6   	movff	strncmp@l,tblptrl
 16701  01318A  0060  F1AF  FFF7   	movff	strncmp@l+1,tblptrh
 16702  013190  0E00               	movlw	low (__mediumconst shr (0+16))
 16703  013192  6EF8               	movwf	tblptru,c
 16704  013194  0E1F               	movlw	(high __ramtop+-1)
 16705  013196  64F7               	cpfsgt	tblptrh,c
 16706  013198  D003               	bra	u9067
 16707  01319A  0008               	tblrd		*
 16708  01319C  50F5               	movf	tablat,w,c
 16709  01319E  D007               	bra	u9065
 16710  0131A0                     u9067:
 16711  0131A0  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16712  0131A6  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16713  0131AC  50E7               	movf	indf1,w,c
 16714  0131AE                     u9065:
 16715  0131AE  1968               	xorwf	??_strncmp& (0+255),w,b
 16716  0131B0  B4D8               	btfsc	status,2,c
 16717  0131B2  D794               	goto	l9651
 16718  0131B4                     u9060:
 16719  0131B4  0060  F1AB  FFF6   	movff	strncmp@l,tblptrl
 16720  0131BA  0060  F1AF  FFF7   	movff	strncmp@l+1,tblptrh
 16721  0131C0  0E00               	movlw	low (__mediumconst shr (0+16))
 16722  0131C2  6EF8               	movwf	tblptru,c
 16723  0131C4  0E1F               	movlw	(high __ramtop+-1)
 16724  0131C6  64F7               	cpfsgt	tblptrh,c
 16725  0131C8  D003               	bra	u9077
 16726  0131CA  0008               	tblrd		*
 16727  0131CC  50F5               	movf	tablat,w,c
 16728  0131CE  D007               	bra	u9070
 16729  0131D0                     u9077:
 16730  0131D0  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16731  0131D6  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16732  0131DC  50E7               	movf	indf1,w,c
 16733  0131DE                     u9070:
 16734  0131DE  0100               	movlb	0	; () banked
 16735  0131E0  6F68               	movwf	??_strncmp& (0+255),b
 16736  0131E2  0060  F1B3  FFF6   	movff	strncmp@r,tblptrl
 16737  0131E8  0060  F1B7  FFF7   	movff	strncmp@r+1,tblptrh
 16738  0131EE  0E00               	movlw	low (__mediumconst shr (0+16))
 16739  0131F0  6EF8               	movwf	tblptru,c
 16740  0131F2  0E1F               	movlw	(high __ramtop+-1)
 16741  0131F4  64F7               	cpfsgt	tblptrh,c
 16742  0131F6  D003               	bra	u9087
 16743  0131F8  0008               	tblrd		*
 16744  0131FA  50F5               	movf	tablat,w,c
 16745  0131FC  D007               	bra	u9080
 16746  0131FE                     u9087:
 16747  0131FE  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16748  013204  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16749  01320A  50E7               	movf	indf1,w,c
 16750  01320C                     u9080:
 16751  01320C  0100               	movlb	0	; () banked
 16752  01320E  6F69               	movwf	(??_strncmp+1)& (0+255),b
 16753  013210  5169               	movf	(??_strncmp+1)& (0+255),w,b
 16754  013212  5D68               	subwf	??_strncmp& (0+255),w,b
 16755  013214  6F62               	movwf	?_strncmp& (0+255),b
 16756  013216  6B63               	clrf	(?_strncmp+1)& (0+255),b
 16757  013218  A0D8               	btfss	status,0,c
 16758  01321A  0763               	decf	(?_strncmp+1)& (0+255),f,b
 16759                           
 16760                           ; BSR set to: 0
 16761  01321C  0012               	return		;funcret
 16762  01321E                     __end_of_strncmp:
 16763                           	callstack 0
 16764                           
 16765 ;; *************** function _strlen *****************
 16766 ;; Defined at:
 16767 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 16768 ;; Parameters:    Size  Location     Type
 16769 ;;  s               2   31[COMRAM] PTR const unsigned char 
 16770 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 16771 ;;		 -> ?_sprintf(2), NULL(0), STR_28(3), STR_27(3), 
 16772 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 16773 ;;		 -> STR_22(3), STR_21(3), STR_20(3), cli_ctx(131), 
 16774 ;;		 -> build_version(14), buff1(255), STR_2(9), STR_1(12), 
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;  a               2    0[BANK0 ] PTR const unsigned char 
 16777 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 16778 ;;		 -> ?_sprintf(2), NULL(0), STR_28(3), STR_27(3), 
 16779 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 16780 ;;		 -> STR_22(3), STR_21(3), STR_20(3), cli_ctx(131), 
 16781 ;;		 -> build_version(14), buff1(255), STR_2(9), STR_1(12), 
 16782 ;; Return value:  Size  Location     Type
 16783 ;;                  2   31[COMRAM] unsigned int 
 16784 ;; Registers used:
 16785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 16786 ;; Tracked objects:
 16787 ;;		On entry : 2/0
 16788 ;;		On exit  : 3F/0
 16789 ;;		Unchanged: 0/0
 16790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16792 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16794 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16795 ;;Total ram usage:        4 bytes
 16796 ;; Hardware stack levels used: 1
 16797 ;; Hardware stack levels required when called: 7
 16798 ;; This function calls:
 16799 ;;		Nothing
 16800 ;; This function is called by:
 16801 ;;		__cli_interpret_cmd
 16802 ;;		_eaDogM_WriteString
 16803 ;;		_pad
 16804 ;;		_stoa
 16805 ;; This function uses a non-reentrant model
 16806 ;;
 16807                           
 16808                           	psect	text63
 16809  014A66                     __ptext63:
 16810                           	callstack 0
 16811  014A66                     _strlen:
 16812                           	callstack 18
 16813                           
 16814                           ; BSR set to: 0
 16815                           ;incstack = 0
 16816  014A66  C020  F060         	movff	strlen@s,strlen@a
 16817  014A6A  C021  F061         	movff	strlen@s+1,strlen@a+1
 16818  014A6E  D002               	goto	l8761
 16819  014A70                     l8759:
 16820  014A70  4A20               	infsnz	strlen@s^0,f,c
 16821  014A72  2A21               	incf	(strlen@s+1)^0,f,c
 16822  014A74                     l8761:
 16823  014A74  0060  F083  FFF6   	movff	strlen@s,tblptrl
 16824  014A7A  0060  F087  FFF7   	movff	strlen@s+1,tblptrh
 16825  014A80  0E00               	movlw	low (__mediumconst shr (0+16))
 16826  014A82  6EF8               	movwf	tblptru,c
 16827  014A84  0E1F               	movlw	(high __ramtop+-1)
 16828  014A86  64F7               	cpfsgt	tblptrh,c
 16829  014A88  D003               	bra	u7407
 16830  014A8A  0008               	tblrd		*
 16831  014A8C  50F5               	movf	tablat,w,c
 16832  014A8E  D007               	bra	u7400
 16833  014A90                     u7407:
 16834  014A90  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16835  014A96  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16836  014A9C  50E7               	movf	indf1,w,c
 16837  014A9E                     u7400:
 16838  014A9E  0900               	iorlw	0
 16839  014AA0  A4D8               	btfss	status,2,c
 16840  014AA2  D7E6               	goto	l8759
 16841  014AA4  0100               	movlb	0	; () banked
 16842  014AA6  5160               	movf	strlen@a& (0+255),w,b
 16843  014AA8  5C20               	subwf	strlen@s^0,w,c
 16844  014AAA  6E20               	movwf	?_strlen^0,c
 16845  014AAC  5161               	movf	(strlen@a+1)& (0+255),w,b
 16846  014AAE  5821               	subwfb	(strlen@s+1)^0,w,c
 16847  014AB0  6E21               	movwf	(?_strlen+1)^0,c
 16848                           
 16849                           ; BSR set to: 0
 16850  014AB2  0012               	return		;funcret
 16851  014AB4                     __end_of_strlen:
 16852                           	callstack 0
 16853                           
 16854 ;; *************** function _fh_p1 *****************
 16855 ;; Defined at:
 16856 ;;		line 224 in file "main.c"
 16857 ;; Parameters:    Size  Location     Type
 16858 ;;  a_data          2   21[BANK0 ] PTR void 
 16859 ;;		 -> cli_ctx(131), 
 16860 ;; Auto vars:     Size  Location     Type
 16861 ;;		None
 16862 ;; Return value:  Size  Location     Type
 16863 ;;                  1    wreg      void 
 16864 ;; Registers used:
 16865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16866 ;; Tracked objects:
 16867 ;;		On entry : 3F/0
 16868 ;;		On exit  : 3F/0
 16869 ;;		Unchanged: 0/0
 16870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16871 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16874 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16875 ;;Total ram usage:        2 bytes
 16876 ;; Hardware stack levels used: 1
 16877 ;; Hardware stack levels required when called: 12
 16878 ;; This function calls:
 16879 ;;		_DATAEE_WriteByte
 16880 ;;		_clear_stat_buffer
 16881 ;;		_puts
 16882 ;; This function is called by:
 16883 ;;		__cli_interpret_cmd
 16884 ;; This function uses a non-reentrant model
 16885 ;;
 16886                           
 16887                           	psect	text64
 16888  015252                     __ptext64:
 16889                           	callstack 0
 16890  015252                     _fh_p1:
 16891                           	callstack 16
 16892                           
 16893                           ; BSR set to: 0
 16894                           ;main.c: 224: void fh_p1(void *a_data);main.c: 225: {;main.c: 226:  puts("\r\n ACCEL Sup
      +                          pression Supply \r\n");
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;incstack = 0
 16898  015252  0E8B               	movlw	low STR_11
 16899  015254  6F72               	movwf	puts@s& (0+255),b
 16900  015256  0EFE               	movlw	high STR_11
 16901  015258  6F73               	movwf	(puts@s+1)& (0+255),b
 16902  01525A  EC16  F0A8         	call	_puts	;wreg free
 16903                           
 16904                           ; BSR set to: 0
 16905                           ;main.c: 227:  ps_type_index = 1;
 16906  01525E  0E01               	movlw	1
 16907  015260  6E36               	movwf	_ps_type_index^0,c	;volatile
 16908                           
 16909                           ; BSR set to: 0
 16910                           ;main.c: 228:  DATAEE_WriteByte(0x10, ps_type_index);
 16911  015262  0E00               	movlw	0
 16912  015264  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 16913  015266  0E10               	movlw	16
 16914  015268  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 16915  01526A  C036  F062         	movff	_ps_type_index,DATAEE_WriteByte@bData	;volatile
 16916  01526E  ECFF  F0A6         	call	_DATAEE_WriteByte	;wreg free
 16917                           
 16918                           ;main.c: 229:  clear_stat_buffer(PS_V_ANA);
 16919  015272  0E00               	movlw	0
 16920  015274  EC7F  F0A3         	call	_clear_stat_buffer
 16921                           
 16922                           ; BSR set to: 0
 16923  015278  0012               	return		;funcret
 16924  01527A                     __end_of_fh_p1:
 16925                           	callstack 0
 16926                           
 16927 ;; *************** function _fh_p0 *****************
 16928 ;; Defined at:
 16929 ;;		line 216 in file "main.c"
 16930 ;; Parameters:    Size  Location     Type
 16931 ;;  a_data          2   21[BANK0 ] PTR void 
 16932 ;;		 -> cli_ctx(131), 
 16933 ;; Auto vars:     Size  Location     Type
 16934 ;;		None
 16935 ;; Return value:  Size  Location     Type
 16936 ;;                  1    wreg      void 
 16937 ;; Registers used:
 16938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16939 ;; Tracked objects:
 16940 ;;		On entry : 3F/0
 16941 ;;		On exit  : 3F/0
 16942 ;;		Unchanged: 0/0
 16943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16944 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16947 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16948 ;;Total ram usage:        2 bytes
 16949 ;; Hardware stack levels used: 1
 16950 ;; Hardware stack levels required when called: 12
 16951 ;; This function calls:
 16952 ;;		_DATAEE_WriteByte
 16953 ;;		_clear_stat_buffer
 16954 ;;		_puts
 16955 ;; This function is called by:
 16956 ;;		__cli_interpret_cmd
 16957 ;; This function uses a non-reentrant model
 16958 ;;
 16959                           
 16960                           	psect	text65
 16961  01527A                     __ptext65:
 16962                           	callstack 0
 16963  01527A                     _fh_p0:
 16964                           	callstack 16
 16965                           
 16966                           ; BSR set to: 0
 16967                           ;main.c: 216: void fh_p0(void *a_data);main.c: 217: {;main.c: 218:  puts("\r\n EXT Suppr
      +                          ession Supply \r\n");
 16968                           
 16969                           ; BSR set to: 0
 16970                           ;incstack = 0
 16971  01527A  0EAA               	movlw	low STR_10
 16972  01527C  6F72               	movwf	puts@s& (0+255),b
 16973  01527E  0EFE               	movlw	high STR_10
 16974  015280  6F73               	movwf	(puts@s+1)& (0+255),b
 16975  015282  EC16  F0A8         	call	_puts	;wreg free
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;main.c: 219:  ps_type_index = 0;
 16979  015286  0E00               	movlw	0
 16980  015288  6E36               	movwf	_ps_type_index^0,c	;volatile
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;main.c: 220:  DATAEE_WriteByte(0x10, ps_type_index);
 16984  01528A  0E00               	movlw	0
 16985  01528C  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 16986  01528E  0E10               	movlw	16
 16987  015290  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 16988  015292  C036  F062         	movff	_ps_type_index,DATAEE_WriteByte@bData	;volatile
 16989  015296  ECFF  F0A6         	call	_DATAEE_WriteByte	;wreg free
 16990                           
 16991                           ;main.c: 221:  clear_stat_buffer(PS_V_ANA);
 16992  01529A  0E00               	movlw	0
 16993  01529C  EC7F  F0A3         	call	_clear_stat_buffer
 16994                           
 16995                           ; BSR set to: 0
 16996  0152A0  0012               	return		;funcret
 16997  0152A2                     __end_of_fh_p0:
 16998                           	callstack 0
 16999                           
 17000 ;; *************** function _fh_pl *****************
 17001 ;; Defined at:
 17002 ;;		line 208 in file "main.c"
 17003 ;; Parameters:    Size  Location     Type
 17004 ;;  a_data          2   21[BANK0 ] PTR void 
 17005 ;;		 -> cli_ctx(131), 
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;		None
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  1    wreg      void 
 17010 ;; Registers used:
 17011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17012 ;; Tracked objects:
 17013 ;;		On entry : 3F/0
 17014 ;;		On exit  : 3F/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17017 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17020 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17021 ;;Total ram usage:        2 bytes
 17022 ;; Hardware stack levels used: 1
 17023 ;; Hardware stack levels required when called: 12
 17024 ;; This function calls:
 17025 ;;		_clear_stat_buffer
 17026 ;;		_puts
 17027 ;; This function is called by:
 17028 ;;		__cli_interpret_cmd
 17029 ;; This function uses a non-reentrant model
 17030 ;;
 17031                           
 17032                           	psect	text66
 17033  015492                     __ptext66:
 17034                           	callstack 0
 17035  015492                     _fh_pl:
 17036                           	callstack 16
 17037                           
 17038                           ; BSR set to: 0
 17039                           ;main.c: 208: void fh_pl(void *a_data);main.c: 209: {;main.c: 210:  puts("\r\n Voltage L
      +                          OW \r\n");
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;incstack = 0
 17043  015492  0E7D               	movlw	low STR_9
 17044  015494  6F72               	movwf	puts@s& (0+255),b
 17045  015496  0EFF               	movlw	high STR_9
 17046  015498  6F73               	movwf	(puts@s+1)& (0+255),b
 17047  01549A  EC16  F0A8         	call	_puts	;wreg free
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;main.c: 211:  roll_max = 2;
 17051  01549E  0E02               	movlw	2
 17052  0154A0  0101               	movlb	1	; () banked
 17053  0154A2  6FB0               	movwf	_roll_max& (0+255),b
 17054                           
 17055                           ; BSR set to: 1
 17056                           ;main.c: 212:  static_ps = 3;
 17057  0154A4  0E03               	movlw	3
 17058  0154A6  6FAF               	movwf	_static_ps& (0+255),b
 17059                           
 17060                           ; BSR set to: 1
 17061                           ;main.c: 213:  clear_stat_buffer(PS_V_ANA);
 17062  0154A8  0E00               	movlw	0
 17063  0154AA  EC7F  F0A3         	call	_clear_stat_buffer
 17064                           
 17065                           ; BSR set to: 0
 17066  0154AE  0012               	return		;funcret
 17067  0154B0                     __end_of_fh_pl:
 17068                           	callstack 0
 17069                           
 17070 ;; *************** function _fh_pd *****************
 17071 ;; Defined at:
 17072 ;;		line 200 in file "main.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;  a_data          2   21[BANK0 ] PTR void 
 17075 ;;		 -> cli_ctx(131), 
 17076 ;; Auto vars:     Size  Location     Type
 17077 ;;		None
 17078 ;; Return value:  Size  Location     Type
 17079 ;;                  1    wreg      void 
 17080 ;; Registers used:
 17081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17082 ;; Tracked objects:
 17083 ;;		On entry : 3F/0
 17084 ;;		On exit  : 3F/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17087 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17090 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17091 ;;Total ram usage:        2 bytes
 17092 ;; Hardware stack levels used: 1
 17093 ;; Hardware stack levels required when called: 12
 17094 ;; This function calls:
 17095 ;;		_clear_stat_buffer
 17096 ;;		_puts
 17097 ;; This function is called by:
 17098 ;;		__cli_interpret_cmd
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102                           	psect	text67
 17103  0154B0                     __ptext67:
 17104                           	callstack 0
 17105  0154B0                     _fh_pd:
 17106                           	callstack 16
 17107                           
 17108                           ; BSR set to: 0
 17109                           ;main.c: 200: void fh_pd(void *a_data);main.c: 201: {;main.c: 202:  puts("\r\n Voltage D
      +                          OWN \r\n");
 17110                           
 17111                           ; BSR set to: 0
 17112                           ;incstack = 0
 17113  0154B0  0E46               	movlw	low STR_8
 17114  0154B2  6F72               	movwf	puts@s& (0+255),b
 17115  0154B4  0EFF               	movlw	high STR_8
 17116  0154B6  6F73               	movwf	(puts@s+1)& (0+255),b
 17117  0154B8  EC16  F0A8         	call	_puts	;wreg free
 17118                           
 17119                           ; BSR set to: 0
 17120                           ;main.c: 203:  roll_max = 19 - 12;
 17121  0154BC  0E07               	movlw	7
 17122  0154BE  0101               	movlb	1	; () banked
 17123  0154C0  6FB0               	movwf	_roll_max& (0+255),b
 17124                           
 17125                           ; BSR set to: 1
 17126                           ;main.c: 204:  static_ps = 20 - 12;
 17127  0154C2  0E08               	movlw	8
 17128  0154C4  6FAF               	movwf	_static_ps& (0+255),b
 17129                           
 17130                           ; BSR set to: 1
 17131                           ;main.c: 205:  clear_stat_buffer(PS_V_ANA);
 17132  0154C6  0E00               	movlw	0
 17133  0154C8  EC7F  F0A3         	call	_clear_stat_buffer
 17134                           
 17135                           ; BSR set to: 0
 17136  0154CC  0012               	return		;funcret
 17137  0154CE                     __end_of_fh_pd:
 17138                           	callstack 0
 17139                           
 17140 ;; *************** function _fh_pp *****************
 17141 ;; Defined at:
 17142 ;;		line 185 in file "main.c"
 17143 ;; Parameters:    Size  Location     Type
 17144 ;;  a_data          2   21[BANK0 ] PTR void 
 17145 ;;		 -> cli_ctx(131), 
 17146 ;; Auto vars:     Size  Location     Type
 17147 ;;		None
 17148 ;; Return value:  Size  Location     Type
 17149 ;;                  1    wreg      void 
 17150 ;; Registers used:
 17151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17152 ;; Tracked objects:
 17153 ;;		On entry : 3F/0
 17154 ;;		On exit  : 3F/0
 17155 ;;		Unchanged: 0/0
 17156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17161 ;;Total ram usage:        2 bytes
 17162 ;; Hardware stack levels used: 1
 17163 ;; Hardware stack levels required when called: 12
 17164 ;; This function calls:
 17165 ;;		_clear_stat_buffer
 17166 ;;		_puts
 17167 ;; This function is called by:
 17168 ;;		__cli_interpret_cmd
 17169 ;; This function uses a non-reentrant model
 17170 ;;
 17171                           
 17172                           	psect	text68
 17173  0155AE                     __ptext68:
 17174                           	callstack 0
 17175  0155AE                     _fh_pp:
 17176                           	callstack 16
 17177                           
 17178                           ; BSR set to: 0
 17179                           ;main.c: 185: void fh_pp(void *a_data);main.c: 186: {;main.c: 187:  puts("\r\n Voltage O
      +                          N : Set\r\n");
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;incstack = 0
 17183  0155AE  0E30               	movlw	low STR_6
 17184  0155B0  6F72               	movwf	puts@s& (0+255),b
 17185  0155B2  0EFF               	movlw	high STR_6
 17186  0155B4  6F73               	movwf	(puts@s+1)& (0+255),b
 17187  0155B6  EC16  F0A8         	call	_puts	;wreg free
 17188                           
 17189                           ; BSR set to: 0
 17190                           ;main.c: 188:  mode = static_mode;
 17191  0155BA  0E02               	movlw	2
 17192  0155BC  6E37               	movwf	_mode^0,c
 17193                           
 17194                           ; BSR set to: 0
 17195                           ;main.c: 189:  clear_stat_buffer(PS_V_ANA);
 17196  0155BE  0E00               	movlw	0
 17197  0155C0  EC7F  F0A3         	call	_clear_stat_buffer
 17198                           
 17199                           ; BSR set to: 0
 17200  0155C4  0012               	return		;funcret
 17201  0155C6                     __end_of_fh_pp:
 17202                           	callstack 0
 17203                           
 17204 ;; *************** function _fh_po *****************
 17205 ;; Defined at:
 17206 ;;		line 178 in file "main.c"
 17207 ;; Parameters:    Size  Location     Type
 17208 ;;  a_data          2   21[BANK0 ] PTR void 
 17209 ;;		 -> cli_ctx(131), 
 17210 ;; Auto vars:     Size  Location     Type
 17211 ;;		None
 17212 ;; Return value:  Size  Location     Type
 17213 ;;                  1    wreg      void 
 17214 ;; Registers used:
 17215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17216 ;; Tracked objects:
 17217 ;;		On entry : 3F/0
 17218 ;;		On exit  : 3F/0
 17219 ;;		Unchanged: 0/0
 17220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17221 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17224 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17225 ;;Total ram usage:        2 bytes
 17226 ;; Hardware stack levels used: 1
 17227 ;; Hardware stack levels required when called: 12
 17228 ;; This function calls:
 17229 ;;		_clear_stat_buffer
 17230 ;;		_puts
 17231 ;; This function is called by:
 17232 ;;		__cli_interpret_cmd
 17233 ;; This function uses a non-reentrant model
 17234 ;;
 17235                           
 17236                           	psect	text69
 17237  0155C6                     __ptext69:
 17238                           	callstack 0
 17239  0155C6                     _fh_po:
 17240                           	callstack 16
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;main.c: 178: void fh_po(void *a_data);main.c: 179: {;main.c: 180:  puts("\r\n Voltage O
      +                          FF \r\n");
 17244                           
 17245                           ; BSR set to: 0
 17246                           ;incstack = 0
 17247  0155C6  0E59               	movlw	low STR_5
 17248  0155C8  6F72               	movwf	puts@s& (0+255),b
 17249  0155CA  0EFF               	movlw	high STR_5
 17250  0155CC  6F73               	movwf	(puts@s+1)& (0+255),b
 17251  0155CE  EC16  F0A8         	call	_puts	;wreg free
 17252                           
 17253                           ; BSR set to: 0
 17254                           ;main.c: 181:  mode = off_mode;
 17255  0155D2  0E00               	movlw	0
 17256  0155D4  6E37               	movwf	_mode^0,c
 17257                           
 17258                           ; BSR set to: 0
 17259                           ;main.c: 182:  clear_stat_buffer(PS_V_ANA);
 17260  0155D6  0E00               	movlw	0
 17261  0155D8  EC7F  F0A3         	call	_clear_stat_buffer
 17262                           
 17263                           ; BSR set to: 0
 17264  0155DC  0012               	return		;funcret
 17265  0155DE                     __end_of_fh_po:
 17266                           	callstack 0
 17267                           
 17268 ;; *************** function _fh_ps *****************
 17269 ;; Defined at:
 17270 ;;		line 169 in file "main.c"
 17271 ;; Parameters:    Size  Location     Type
 17272 ;;  a_data          2   21[BANK0 ] PTR void 
 17273 ;;		 -> cli_ctx(131), 
 17274 ;; Auto vars:     Size  Location     Type
 17275 ;;		None
 17276 ;; Return value:  Size  Location     Type
 17277 ;;                  1    wreg      void 
 17278 ;; Registers used:
 17279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17280 ;; Tracked objects:
 17281 ;;		On entry : 3F/0
 17282 ;;		On exit  : 3F/0
 17283 ;;		Unchanged: 0/0
 17284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17289 ;;Total ram usage:        2 bytes
 17290 ;; Hardware stack levels used: 1
 17291 ;; Hardware stack levels required when called: 12
 17292 ;; This function calls:
 17293 ;;		_clear_stat_buffer
 17294 ;;		_puts
 17295 ;; This function is called by:
 17296 ;;		__cli_interpret_cmd
 17297 ;; This function uses a non-reentrant model
 17298 ;;
 17299                           
 17300                           	psect	text70
 17301  0153EE                     __ptext70:
 17302                           	callstack 0
 17303  0153EE                     _fh_ps:
 17304                           	callstack 16
 17305                           
 17306                           ; BSR set to: 0
 17307                           ;main.c: 169: void fh_ps(void *a_data);main.c: 170: {;main.c: 171:  puts("\r\n Steady VD
      +                          C ON : Default\r\n");
 17308                           
 17309                           ; BSR set to: 0
 17310                           ;incstack = 0
 17311  0153EE  0EC7               	movlw	low STR_4
 17312  0153F0  6F72               	movwf	puts@s& (0+255),b
 17313  0153F2  0EFE               	movlw	high STR_4
 17314  0153F4  6F73               	movwf	(puts@s+1)& (0+255),b
 17315  0153F6  EC16  F0A8         	call	_puts	;wreg free
 17316                           
 17317                           ; BSR set to: 0
 17318                           ;main.c: 172:  roll_max = 19;
 17319  0153FA  0E13               	movlw	19
 17320  0153FC  0101               	movlb	1	; () banked
 17321  0153FE  6FB0               	movwf	_roll_max& (0+255),b
 17322                           
 17323                           ; BSR set to: 1
 17324                           ;main.c: 173:  static_ps = 20;
 17325  015400  0E14               	movlw	20
 17326  015402  6FAF               	movwf	_static_ps& (0+255),b
 17327                           
 17328                           ; BSR set to: 1
 17329                           ;main.c: 174:  mode = static_mode;
 17330  015404  0E02               	movlw	2
 17331  015406  6E37               	movwf	_mode^0,c
 17332                           
 17333                           ; BSR set to: 1
 17334                           ;main.c: 175:  clear_stat_buffer(PS_V_ANA);
 17335  015408  0E00               	movlw	0
 17336  01540A  EC7F  F0A3         	call	_clear_stat_buffer
 17337                           
 17338                           ; BSR set to: 0
 17339  01540E  0012               	return		;funcret
 17340  015410                     __end_of_fh_ps:
 17341                           	callstack 0
 17342                           
 17343 ;; *************** function _fh_pr *****************
 17344 ;; Defined at:
 17345 ;;		line 161 in file "main.c"
 17346 ;; Parameters:    Size  Location     Type
 17347 ;;  a_data          2   21[BANK0 ] PTR void 
 17348 ;;		 -> cli_ctx(131), 
 17349 ;; Auto vars:     Size  Location     Type
 17350 ;;		None
 17351 ;; Return value:  Size  Location     Type
 17352 ;;                  1    wreg      void 
 17353 ;; Registers used:
 17354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17355 ;; Tracked objects:
 17356 ;;		On entry : 3F/0
 17357 ;;		On exit  : 3F/0
 17358 ;;		Unchanged: 0/0
 17359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17363 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17364 ;;Total ram usage:        2 bytes
 17365 ;; Hardware stack levels used: 1
 17366 ;; Hardware stack levels required when called: 12
 17367 ;; This function calls:
 17368 ;;		_clear_stat_buffer
 17369 ;;		_puts
 17370 ;; This function is called by:
 17371 ;;		__cli_interpret_cmd
 17372 ;; This function uses a non-reentrant model
 17373 ;;
 17374                           
 17375                           	psect	text71
 17376  01533E                     __ptext71:
 17377                           	callstack 0
 17378  01533E                     _fh_pr:
 17379                           	callstack 16
 17380                           
 17381                           ; BSR set to: 0
 17382                           ;main.c: 161: void fh_pr(void *a_data);main.c: 162: {;main.c: 163:  puts((const char *) 
      +                          a_data);
 17383                           
 17384                           ; BSR set to: 0
 17385                           ;incstack = 0
 17386  01533E  C075  F072         	movff	fh_pr@a_data,puts@s
 17387  015342  C076  F073         	movff	fh_pr@a_data+1,puts@s+1
 17388  015346  EC16  F0A8         	call	_puts	;wreg free
 17389                           
 17390                           ;main.c: 164:  puts("\r\n Ramp VDC ON \r\n");
 17391  01534A  0E6B               	movlw	low STR_3
 17392  01534C  6F72               	movwf	puts@s& (0+255),b
 17393  01534E  0EFF               	movlw	high STR_3
 17394  015350  6F73               	movwf	(puts@s+1)& (0+255),b
 17395  015352  EC16  F0A8         	call	_puts	;wreg free
 17396                           
 17397                           ; BSR set to: 0
 17398                           ;main.c: 165:  mode = roll_mode;
 17399  015356  0E01               	movlw	1
 17400  015358  6E37               	movwf	_mode^0,c
 17401                           
 17402                           ; BSR set to: 0
 17403                           ;main.c: 166:  clear_stat_buffer(PS_V_ANA);
 17404  01535A  0E00               	movlw	0
 17405  01535C  EC7F  F0A3         	call	_clear_stat_buffer
 17406                           
 17407                           ; BSR set to: 0
 17408  015360  0012               	return		;funcret
 17409  015362                     __end_of_fh_pr:
 17410                           	callstack 0
 17411                           
 17412 ;; *************** function _fh_pu *****************
 17413 ;; Defined at:
 17414 ;;		line 192 in file "main.c"
 17415 ;; Parameters:    Size  Location     Type
 17416 ;;  a_data          2   21[BANK0 ] PTR void 
 17417 ;;		 -> cli_ctx(131), 
 17418 ;; Auto vars:     Size  Location     Type
 17419 ;;		None
 17420 ;; Return value:  Size  Location     Type
 17421 ;;                  1    wreg      void 
 17422 ;; Registers used:
 17423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17424 ;; Tracked objects:
 17425 ;;		On entry : 3F/0
 17426 ;;		On exit  : 3F/0
 17427 ;;		Unchanged: 0/0
 17428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17433 ;;Total ram usage:        2 bytes
 17434 ;; Hardware stack levels used: 1
 17435 ;; Hardware stack levels required when called: 12
 17436 ;; This function calls:
 17437 ;;		_clear_stat_buffer
 17438 ;;		_puts
 17439 ;; This function is called by:
 17440 ;;		__cli_interpret_cmd
 17441 ;; This function uses a non-reentrant model
 17442 ;;
 17443                           
 17444                           	psect	text72
 17445  0154CE                     __ptext72:
 17446                           	callstack 0
 17447  0154CE                     _fh_pu:
 17448                           	callstack 16
 17449                           
 17450                           ; BSR set to: 0
 17451                           ;main.c: 192: void fh_pu(void *a_data);main.c: 193: {;main.c: 194:  puts("\r\n Voltage U
      +                          P \r\n");
 17452                           
 17453                           ; BSR set to: 0
 17454                           ;incstack = 0
 17455  0154CE  0E8F               	movlw	low STR_7
 17456  0154D0  6F72               	movwf	puts@s& (0+255),b
 17457  0154D2  0EFF               	movlw	high STR_7
 17458  0154D4  6F73               	movwf	(puts@s+1)& (0+255),b
 17459  0154D6  EC16  F0A8         	call	_puts	;wreg free
 17460                           
 17461                           ; BSR set to: 0
 17462                           ;main.c: 195:  roll_max = 19 + 12;
 17463  0154DA  0E1F               	movlw	31
 17464  0154DC  0101               	movlb	1	; () banked
 17465  0154DE  6FB0               	movwf	_roll_max& (0+255),b
 17466                           
 17467                           ; BSR set to: 1
 17468                           ;main.c: 196:  static_ps = 20 + 11;
 17469  0154E0  0E1F               	movlw	31
 17470  0154E2  6FAF               	movwf	_static_ps& (0+255),b
 17471                           
 17472                           ; BSR set to: 1
 17473                           ;main.c: 197:  clear_stat_buffer(PS_V_ANA);
 17474  0154E4  0E00               	movlw	0
 17475  0154E6  EC7F  F0A3         	call	_clear_stat_buffer
 17476                           
 17477                           ; BSR set to: 0
 17478  0154EA  0012               	return		;funcret
 17479  0154EC                     __end_of_fh_pu:
 17480                           	callstack 0
 17481                           
 17482 ;; *************** function _puts *****************
 17483 ;; Defined at:
 17484 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 17485 ;; Parameters:    Size  Location     Type
 17486 ;;  s               2   18[BANK0 ] PTR const unsigned char 
 17487 ;;		 -> STR_29(3), cli_read@i(1), cmdm(28), cli_ctx(131), 
 17488 ;;		 -> buff1(255), STR_11(31), STR_10(29), STR_9(18), 
 17489 ;;		 -> STR_8(19), STR_7(17), STR_6(22), STR_5(18), 
 17490 ;;		 -> STR_4(29), STR_3(18), 
 17491 ;; Auto vars:     Size  Location     Type
 17492 ;;  r               2    0        int 
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  2   18[BANK0 ] int 
 17495 ;; Registers used:
 17496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17497 ;; Tracked objects:
 17498 ;;		On entry : 3F/0
 17499 ;;		On exit  : 3F/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17505 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17506 ;;Total ram usage:        3 bytes
 17507 ;; Hardware stack levels used: 1
 17508 ;; Hardware stack levels required when called: 11
 17509 ;; This function calls:
 17510 ;;		_fputc
 17511 ;;		_fputs
 17512 ;; This function is called by:
 17513 ;;		_fh_pr
 17514 ;;		_fh_ps
 17515 ;;		_fh_po
 17516 ;;		_fh_pp
 17517 ;;		_fh_pu
 17518 ;;		_fh_pd
 17519 ;;		_fh_pl
 17520 ;;		_fh_p0
 17521 ;;		_fh_p1
 17522 ;;		_main
 17523 ;;		_cli_init
 17524 ;;		_linux_putc
 17525 ;; This function uses a non-reentrant model
 17526 ;;
 17527                           
 17528                           	psect	text73
 17529  01502C                     __ptext73:
 17530                           	callstack 0
 17531  01502C                     _puts:
 17532                           	callstack 17
 17533                           
 17534                           ; BSR set to: 0
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;incstack = 0
 17538  01502C  0E01               	movlw	1
 17539  01502E  6F74               	movwf	_puts$4384& (0+255),b
 17540                           
 17541                           ; BSR set to: 0
 17542  015030  C072  F069         	movff	puts@s,fputs@s
 17543  015034  C073  F06A         	movff	puts@s+1,fputs@s+1
 17544  015038  0E00               	movlw	0
 17545  01503A  6F6B               	movwf	fputs@fp& (0+255),b
 17546  01503C  0E00               	movlw	0
 17547  01503E  6F6C               	movwf	(fputs@fp+1)& (0+255),b
 17548  015040  ECE7  F0A2         	call	_fputs	;wreg free
 17549  015044  BF6A               	btfsc	(?_fputs+1)& (0+255),7,b
 17550  015046  0012               	return	
 17551                           
 17552                           ; BSR set to: 0
 17553  015048  0E00               	movlw	0
 17554  01504A  6F61               	movwf	(fputc@c+1)& (0+255),b
 17555  01504C  0E0A               	movlw	10
 17556  01504E  6F60               	movwf	fputc@c& (0+255),b
 17557  015050  0E00               	movlw	0
 17558  015052  6F62               	movwf	fputc@fp& (0+255),b
 17559  015054  0E00               	movlw	0
 17560  015056  6F63               	movwf	(fputc@fp+1)& (0+255),b
 17561  015058  EC69  F0A0         	call	_fputc	;wreg free
 17562  01505C  BF61               	btfsc	(?_fputc+1)& (0+255),7,b
 17563  01505E  0012               	return	
 17564                           
 17565                           ; BSR set to: 0
 17566  015060  0E00               	movlw	0
 17567  015062  6F74               	movwf	_puts$4384& (0+255),b
 17568                           
 17569                           ; BSR set to: 0
 17570                           
 17571                           ; BSR set to: 0
 17572  015064  0012               	return		;funcret
 17573  015066                     __end_of_puts:
 17574                           	callstack 0
 17575                           
 17576 ;; *************** function _fputs *****************
 17577 ;; Defined at:
 17578 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 17579 ;; Parameters:    Size  Location     Type
 17580 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 17581 ;;		 -> dbuf(80), STR_29(3), cli_read@i(1), cmdm(28), 
 17582 ;;		 -> cli_ctx(131), buff1(255), STR_11(31), STR_10(29), 
 17583 ;;		 -> STR_9(18), STR_8(19), STR_7(17), STR_6(22), 
 17584 ;;		 -> STR_5(18), STR_4(29), STR_3(18), 
 17585 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
 17586 ;;		 -> sprintf@f(11), NULL(0), 
 17587 ;; Auto vars:     Size  Location     Type
 17588 ;;  i               2   16[BANK0 ] int 
 17589 ;;  c               1   15[BANK0 ] unsigned char 
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  2    9[BANK0 ] int 
 17592 ;; Registers used:
 17593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17594 ;; Tracked objects:
 17595 ;;		On entry : 3F/0
 17596 ;;		On exit  : 3F/0
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17600 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17601 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17602 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17603 ;;Total ram usage:        9 bytes
 17604 ;; Hardware stack levels used: 1
 17605 ;; Hardware stack levels required when called: 10
 17606 ;; This function calls:
 17607 ;;		_fputc
 17608 ;; This function is called by:
 17609 ;;		_pad
 17610 ;;		_puts
 17611 ;; This function uses a non-reentrant model
 17612 ;;
 17613                           
 17614                           	psect	text74
 17615  0145CE                     __ptext74:
 17616                           	callstack 0
 17617  0145CE                     _fputs:
 17618                           	callstack 15
 17619                           
 17620                           ; BSR set to: 0
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;incstack = 0
 17624  0145CE  0E00               	movlw	0
 17625  0145D0  6F71               	movwf	(fputs@i+1)& (0+255),b
 17626  0145D2  0E00               	movlw	0
 17627  0145D4  6F70               	movwf	fputs@i& (0+255),b
 17628  0145D6  D00B               	goto	l8975
 17629  0145D8                     l8971:
 17630                           
 17631                           ; BSR set to: 0
 17632  0145D8  C06F  F060         	movff	fputs@c,fputc@c
 17633  0145DC  6B61               	clrf	(fputc@c+1)& (0+255),b
 17634  0145DE  C06B  F062         	movff	fputs@fp,fputc@fp
 17635  0145E2  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
 17636  0145E6  EC69  F0A0         	call	_fputc	;wreg free
 17637                           
 17638                           ; BSR set to: 0
 17639  0145EA  4B70               	infsnz	fputs@i& (0+255),f,b
 17640  0145EC  2B71               	incf	(fputs@i+1)& (0+255),f,b
 17641  0145EE                     l8975:
 17642                           
 17643                           ; BSR set to: 0
 17644  0145EE  5170               	movf	fputs@i& (0+255),w,b
 17645  0145F0  2569               	addwf	fputs@s& (0+255),w,b
 17646  0145F2  6F6D               	movwf	??_fputs& (0+255),b
 17647  0145F4  5171               	movf	(fputs@i+1)& (0+255),w,b
 17648  0145F6  216A               	addwfc	(fputs@s+1)& (0+255),w,b
 17649  0145F8  6F6E               	movwf	(??_fputs+1)& (0+255),b
 17650  0145FA  0060  F1B7  FFF6   	movff	??_fputs,tblptrl
 17651  014600  0060  F1BB  FFF7   	movff	??_fputs+1,tblptrh
 17652  014606  0E00               	movlw	low (__mediumconst shr (0+16))
 17653  014608  6EF8               	movwf	tblptru,c
 17654  01460A  0E1F               	movlw	(high __ramtop+-1)
 17655  01460C  64F7               	cpfsgt	tblptrh,c
 17656  01460E  D003               	bra	u7817
 17657  014610  0008               	tblrd		*
 17658  014612  50F5               	movf	tablat,w,c
 17659  014614  D007               	bra	u7810
 17660  014616                     u7817:
 17661  014616  006F FFDB FFE1     	movff	tblptrl,fsr1l
 17662  01461C  006F FFDF FFE2     	movff	tblptrh,fsr1h
 17663  014622  50E7               	movf	indf1,w,c
 17664  014624                     u7810:
 17665  014624  0100               	movlb	0	; () banked
 17666  014626  6F6F               	movwf	fputs@c& (0+255),b
 17667  014628  516F               	movf	fputs@c& (0+255),w,b
 17668  01462A  A4D8               	btfss	status,2,c
 17669  01462C  D7D5               	goto	l8971
 17670                           
 17671                           ; BSR set to: 0
 17672  01462E  C070  F069         	movff	fputs@i,?_fputs
 17673  014632  C071  F06A         	movff	fputs@i+1,?_fputs+1
 17674                           
 17675                           ; BSR set to: 0
 17676  014636  0012               	return		;funcret
 17677  014638                     __end_of_fputs:
 17678                           	callstack 0
 17679                           
 17680 ;; *************** function _fputc *****************
 17681 ;; Defined at:
 17682 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 17683 ;; Parameters:    Size  Location     Type
 17684 ;;  c               2    0[BANK0 ] int 
 17685 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
 17686 ;;		 -> sprintf@f(11), NULL(0), 
 17687 ;; Auto vars:     Size  Location     Type
 17688 ;;		None
 17689 ;; Return value:  Size  Location     Type
 17690 ;;                  2    0[BANK0 ] int 
 17691 ;; Registers used:
 17692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17693 ;; Tracked objects:
 17694 ;;		On entry : 3F/0
 17695 ;;		On exit  : 3F/0
 17696 ;;		Unchanged: 0/0
 17697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17700 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17701 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17702 ;;Total ram usage:        9 bytes
 17703 ;; Hardware stack levels used: 1
 17704 ;; Hardware stack levels required when called: 9
 17705 ;; This function calls:
 17706 ;;		_putch
 17707 ;; This function is called by:
 17708 ;;		_pad
 17709 ;;		_stoa
 17710 ;;		_vfpfcnvrt
 17711 ;;		_fputs
 17712 ;;		_puts
 17713 ;; This function uses a non-reentrant model
 17714 ;;
 17715                           
 17716                           	psect	text75
 17717  0140D2                     __ptext75:
 17718                           	callstack 0
 17719  0140D2                     _fputc:
 17720                           	callstack 15
 17721                           
 17722                           ; BSR set to: 0
 17723                           
 17724                           ; BSR set to: 0
 17725                           ;incstack = 0
 17726  0140D2  5162               	movf	fputc@fp& (0+255),w,b
 17727  0140D4  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 17728  0140D6  B4D8               	btfsc	status,2,c
 17729  0140D8  D004               	goto	u7370
 17730                           
 17731                           ; BSR set to: 0
 17732  0140DA  5162               	movf	fputc@fp& (0+255),w,b
 17733  0140DC  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 17734  0140DE  A4D8               	btfss	status,2,c
 17735  0140E0  D004               	goto	l8747
 17736  0140E2                     u7370:
 17737                           
 17738                           ; BSR set to: 0
 17739  0140E2  5160               	movf	fputc@c& (0+255),w,b
 17740  0140E4  EC8F  F0AB         	call	_putch
 17741  0140E8  D04A               	goto	l8753
 17742  0140EA                     l8747:
 17743                           
 17744                           ; BSR set to: 0
 17745  0140EA  EE20 F009          	lfsr	2,9
 17746  0140EE  5162               	movf	fputc@fp& (0+255),w,b
 17747  0140F0  26D9               	addwf	fsr2l,f,c
 17748  0140F2  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17749  0140F4  22DA               	addwfc	fsr2h,f,c
 17750  0140F6  50DE               	movf	postinc2,w,c
 17751  0140F8  10DE               	iorwf	postinc2,w,c
 17752  0140FA  B4D8               	btfsc	status,2,c
 17753  0140FC  D016               	goto	u7390
 17754                           
 17755                           ; BSR set to: 0
 17756  0140FE  EE20 F009          	lfsr	2,9
 17757  014102  5162               	movf	fputc@fp& (0+255),w,b
 17758  014104  26D9               	addwf	fsr2l,f,c
 17759  014106  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17760  014108  22DA               	addwfc	fsr2h,f,c
 17761  01410A  EE10 F003          	lfsr	1,3
 17762  01410E  5162               	movf	fputc@fp& (0+255),w,b
 17763  014110  26E1               	addwf	fsr1l,f,c
 17764  014112  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17765  014114  22E2               	addwfc	fsr1h,f,c
 17766  014116  50DE               	movf	postinc2,w,c
 17767  014118  5CE6               	subwf	postinc1,w,c
 17768  01411A  50E6               	movf	postinc1,w,c
 17769  01411C  0A80               	xorlw	128
 17770  01411E  6F68               	movwf	(??_fputc+4)& (0+255),b
 17771  014120  50DE               	movf	postinc2,w,c
 17772  014122  0A80               	xorlw	128
 17773  014124  5968               	subwfb	(??_fputc+4)& (0+255),w,b
 17774  014126  B0D8               	btfsc	status,0,c
 17775  014128  D02A               	goto	l8753
 17776  01412A                     u7390:
 17777                           
 17778                           ; BSR set to: 0
 17779  01412A  EE20 F003          	lfsr	2,3
 17780  01412E  5162               	movf	fputc@fp& (0+255),w,b
 17781  014130  26D9               	addwf	fsr2l,f,c
 17782  014132  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17783  014134  22DA               	addwfc	fsr2h,f,c
 17784  014136  006F FF78  F064    	movff	postinc2,??_fputc
 17785  01413C  006F FF74  F065    	movff	postdec2,??_fputc+1
 17786  014142  0060  F18B  FFD9   	movff	fputc@fp,fsr2l
 17787  014148  0060  F18F  FFDA   	movff	fputc@fp+1,fsr2h
 17788  01414E  006F FF78  F066    	movff	postinc2,??_fputc+2
 17789  014154  006F FF74  F067    	movff	postdec2,??_fputc+3
 17790  01415A  5164               	movf	??_fputc& (0+255),w,b
 17791  01415C  2566               	addwf	(??_fputc+2)& (0+255),w,b
 17792  01415E  6ED9               	movwf	fsr2l,c
 17793  014160  5165               	movf	(??_fputc+1)& (0+255),w,b
 17794  014162  2167               	addwfc	(??_fputc+3)& (0+255),w,b
 17795  014164  6EDA               	movwf	fsr2h,c
 17796  014166  0060  F183  FFDF   	movff	fputc@c,indf2
 17797  01416C  EE20 F003          	lfsr	2,3
 17798  014170  5162               	movf	fputc@fp& (0+255),w,b
 17799  014172  26D9               	addwf	fsr2l,f,c
 17800  014174  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17801  014176  22DA               	addwfc	fsr2h,f,c
 17802  014178  2ADE               	incf	postinc2,f,c
 17803  01417A  0E00               	movlw	0
 17804  01417C  22DD               	addwfc	postdec2,f,c
 17805  01417E                     l8753:
 17806  01417E  C060  F060         	movff	fputc@c,?_fputc
 17807  014182  0100               	movlb	0	; () banked
 17808  014184  6B61               	clrf	(?_fputc+1)& (0+255),b
 17809                           
 17810                           ; BSR set to: 0
 17811  014186  0012               	return		;funcret
 17812  014188                     __end_of_fputc:
 17813                           	callstack 0
 17814                           
 17815 ;; *************** function _putch *****************
 17816 ;; Defined at:
 17817 ;;		line 238 in file "mcc_generated_files/uart1.c"
 17818 ;; Parameters:    Size  Location     Type
 17819 ;;  txData          1    wreg     unsigned char 
 17820 ;; Auto vars:     Size  Location     Type
 17821 ;;  txData          1   32[COMRAM] unsigned char 
 17822 ;; Return value:  Size  Location     Type
 17823 ;;                  1    wreg      void 
 17824 ;; Registers used:
 17825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17826 ;; Tracked objects:
 17827 ;;		On entry : 3F/0
 17828 ;;		On exit  : 3F/39
 17829 ;;		Unchanged: 0/0
 17830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17835 ;;Total ram usage:        1 bytes
 17836 ;; Hardware stack levels used: 1
 17837 ;; Hardware stack levels required when called: 8
 17838 ;; This function calls:
 17839 ;;		_UART1_Write
 17840 ;; This function is called by:
 17841 ;;		_fputc
 17842 ;; This function uses a non-reentrant model
 17843 ;;
 17844                           
 17845                           	psect	text76
 17846  01571E                     __ptext76:
 17847                           	callstack 0
 17848  01571E                     _putch:
 17849                           	callstack 15
 17850                           
 17851                           ; BSR set to: 0
 17852                           ;incstack = 0
 17853                           ;putch@txData stored from wreg
 17854  01571E  6E21               	movwf	putch@txData^0,c
 17855                           
 17856                           ;mcc_generated_files/uart1.c: 238: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          239: {;mcc_generated_files/uart1.c: 240:     UART1_Write(txData);
 17857  015720  5021               	movf	putch@txData^0,w,c
 17858  015722  ECDB  F0A7         	call	_UART1_Write
 17859                           
 17860                           ; BSR set to: 57
 17861  015726  0012               	return		;funcret
 17862  015728                     __end_of_putch:
 17863                           	callstack 0
 17864                           
 17865 ;; *************** function _UART1_Write *****************
 17866 ;; Defined at:
 17867 ;;		line 210 in file "mcc_generated_files/uart1.c"
 17868 ;; Parameters:    Size  Location     Type
 17869 ;;  txData          1    wreg     unsigned char 
 17870 ;; Auto vars:     Size  Location     Type
 17871 ;;  txData          1   31[COMRAM] unsigned char 
 17872 ;; Return value:  Size  Location     Type
 17873 ;;                  1    wreg      void 
 17874 ;; Registers used:
 17875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17876 ;; Tracked objects:
 17877 ;;		On entry : 0/0
 17878 ;;		On exit  : 3F/39
 17879 ;;		Unchanged: 0/0
 17880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17885 ;;Total ram usage:        1 bytes
 17886 ;; Hardware stack levels used: 1
 17887 ;; Hardware stack levels required when called: 7
 17888 ;; This function calls:
 17889 ;;		Nothing
 17890 ;; This function is called by:
 17891 ;;		_putch
 17892 ;; This function uses a non-reentrant model
 17893 ;;
 17894                           
 17895                           	psect	text77
 17896  014FB6                     __ptext77:
 17897                           	callstack 0
 17898  014FB6                     _UART1_Write:
 17899                           	callstack 15
 17900                           
 17901                           ; BSR set to: 57
 17902                           ;incstack = 0
 17903                           ;UART1_Write@txData stored from wreg
 17904  014FB6  6E20               	movwf	UART1_Write@txData^0,c
 17905  014FB8                     
 17906                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 17907                           
 17908                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 17909  014FB8  503E               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 17910  014FBA  B4D8               	btfsc	status,2,c
 17911  014FBC  D7FD               	goto	l8721
 17912                           
 17913                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 17914  014FBE  0139               	movlb	57	; () banked
 17915  014FC0  B993               	btfsc	147,4,b	;volatile
 17916  014FC2  D004               	goto	l991
 17917                           
 17918                           ; BSR set to: 57
 17919                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 218:         U1TXB
      +                           = txData;
 17920  014FC4  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
 17921                           
 17922                           ;mcc_generated_files/uart1.c: 219:     }
 17923  014FCA  D011               	goto	l8737
 17924  014FCC                     l991:
 17925                           
 17926                           ; BSR set to: 57
 17927                           ;mcc_generated_files/uart1.c: 221:     {;mcc_generated_files/uart1.c: 222:         PIE3b
      +                          its.U1TXIE = 0;
 17928  014FCC  9993               	bcf	147,4,b	;volatile
 17929                           
 17930                           ; BSR set to: 57
 17931                           ;mcc_generated_files/uart1.c: 223:         uart1TxBuffer[uart1TxHead++] = txData;
 17932  014FCE  0E40               	movlw	low _uart1TxBuffer
 17933  014FD0  2440               	addwf	_uart1TxHead^0,w,c	;volatile
 17934  014FD2  6ED9               	movwf	fsr2l,c
 17935  014FD4  6ADA               	clrf	fsr2h,c
 17936  014FD6  0E03               	movlw	high _uart1TxBuffer
 17937  014FD8  22DA               	addwfc	fsr2h,f,c
 17938  014FDA  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
 17939                           
 17940                           ; BSR set to: 57
 17941  014FE0  2A40               	incf	_uart1TxHead^0,f,c	;volatile
 17942                           
 17943                           ; BSR set to: 57
 17944                           ;mcc_generated_files/uart1.c: 224:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 17945  014FE2  0E3F               	movlw	63
 17946  014FE4  6440               	cpfsgt	_uart1TxHead^0,c
 17947  014FE6  D002               	goto	l8735
 17948                           
 17949                           ; BSR set to: 57
 17950                           ;mcc_generated_files/uart1.c: 225:         {;mcc_generated_files/uart1.c: 226:          
      +                             uart1TxHead = 0;
 17951  014FE8  0E00               	movlw	0
 17952  014FEA  6E40               	movwf	_uart1TxHead^0,c	;volatile
 17953  014FEC                     l8735:
 17954                           
 17955                           ; BSR set to: 57
 17956                           ;mcc_generated_files/uart1.c: 228:         uart1TxBufferRemaining--;
 17957  014FEC  063E               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 17958  014FEE                     l8737:
 17959                           
 17960                           ; BSR set to: 57
 17961                           ;mcc_generated_files/uart1.c: 230:     PIE3bits.U1TXIE = 1;
 17962  014FEE  8993               	bsf	147,4,b	;volatile
 17963                           
 17964                           ; BSR set to: 57
 17965  014FF0  0012               	return		;funcret
 17966  014FF2                     __end_of_UART1_Write:
 17967                           	callstack 0
 17968                           
 17969 ;; *************** function _clear_stat_buffer *****************
 17970 ;; Defined at:
 17971 ;;		line 151 in file "main.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;  chan            1    wreg     enum E17075
 17974 ;; Auto vars:     Size  Location     Type
 17975 ;;  chan            1    6[BANK0 ] enum E17075
 17976 ;;  i               2    7[BANK0 ] int 
 17977 ;; Return value:  Size  Location     Type
 17978 ;;                  1    wreg      void 
 17979 ;; Registers used:
 17980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17981 ;; Tracked objects:
 17982 ;;		On entry : 0/1
 17983 ;;		On exit  : 3F/0
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17987 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17989 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17990 ;;Total ram usage:        5 bytes
 17991 ;; Hardware stack levels used: 1
 17992 ;; Hardware stack levels required when called: 8
 17993 ;; This function calls:
 17994 ;;		___wmul
 17995 ;; This function is called by:
 17996 ;;		_fh_pr
 17997 ;;		_fh_ps
 17998 ;;		_fh_po
 17999 ;;		_fh_pp
 18000 ;;		_fh_pu
 18001 ;;		_fh_pd
 18002 ;;		_fh_pl
 18003 ;;		_fh_p0
 18004 ;;		_fh_p1
 18005 ;; This function uses a non-reentrant model
 18006 ;;
 18007                           
 18008                           	psect	text78
 18009  0146FE                     __ptext78:
 18010                           	callstack 0
 18011  0146FE                     _clear_stat_buffer:
 18012                           	callstack 19
 18013                           
 18014                           ; BSR set to: 57
 18015                           ;incstack = 0
 18016                           ;clear_stat_buffer@chan stored from wreg
 18017  0146FE  0100               	movlb	0	; () banked
 18018  014700  6F66               	movwf	clear_stat_buffer@chan& (0+255),b
 18019                           
 18020                           ;main.c: 151: void clear_stat_buffer(adcc_channel_t chan);main.c: 152: {;main.c: 153:  f
      +                          or (int i = 0; i < 32; i++) {
 18021  014702  0E00               	movlw	0
 18022  014704  0100               	movlb	0	; () banked
 18023  014706  6F68               	movwf	(clear_stat_buffer@i+1)& (0+255),b
 18024  014708  0E00               	movlw	0
 18025  01470A  6F67               	movwf	clear_stat_buffer@i& (0+255),b
 18026  01470C                     l9629:
 18027                           
 18028                           ; BSR set to: 0
 18029                           ;main.c: 154:   a[i].ana[chan] = 0;
 18030  01470C  C067  F060         	movff	clear_stat_buffer@i,___wmul@multiplier
 18031  014710  C068  F061         	movff	clear_stat_buffer@i+1,___wmul@multiplier+1
 18032  014714  0E00               	movlw	0
 18033  014716  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18034  014718  0E7E               	movlw	126
 18035  01471A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 18036  01471C  EC14  F0A9         	call	___wmul	;wreg free
 18037  014720  5166               	movf	clear_stat_buffer@chan& (0+255),w,b
 18038  014722  0D02               	mullw	2
 18039  014724  0E83               	movlw	low _a
 18040  014726  6F64               	movwf	??_clear_stat_buffer& (0+255),b
 18041  014728  0E05               	movlw	high _a
 18042  01472A  6F65               	movwf	(??_clear_stat_buffer+1)& (0+255),b
 18043  01472C  50F3               	movf	243,w,c
 18044  01472E  2764               	addwf	??_clear_stat_buffer& (0+255),f,b
 18045  014730  50F4               	movf	244,w,c
 18046  014732  2365               	addwfc	(??_clear_stat_buffer+1)& (0+255),f,b
 18047  014734  5160               	movf	?___wmul& (0+255),w,b
 18048  014736  2564               	addwf	??_clear_stat_buffer& (0+255),w,b
 18049  014738  6ED9               	movwf	fsr2l,c
 18050  01473A  5161               	movf	(?___wmul+1)& (0+255),w,b
 18051  01473C  2165               	addwfc	(??_clear_stat_buffer+1)& (0+255),w,b
 18052  01473E  6EDA               	movwf	fsr2h,c
 18053  014740  0E00               	movlw	0
 18054  014742  6EDE               	movwf	postinc2,c
 18055  014744  0E00               	movlw	0
 18056  014746  6EDD               	movwf	postdec2,c
 18057                           
 18058                           ; BSR set to: 0
 18059                           ;main.c: 155:  }
 18060  014748  4B67               	infsnz	clear_stat_buffer@i& (0+255),f,b
 18061  01474A  2B68               	incf	(clear_stat_buffer@i+1)& (0+255),f,b
 18062                           
 18063                           ; BSR set to: 0
 18064  01474C  BF68               	btfsc	(clear_stat_buffer@i+1)& (0+255),7,b
 18065  01474E  D7DE               	goto	l9629
 18066  014750  5168               	movf	(clear_stat_buffer@i+1)& (0+255),w,b
 18067  014752  E105               	bnz	u8960
 18068  014754  0E20               	movlw	32
 18069  014756  5D67               	subwf	clear_stat_buffer@i& (0+255),w,b
 18070  014758  B0D8               	btfsc	status,0,c
 18071  01475A  0012               	return	
 18072  01475C  D7D7               	goto	l9629
 18073  01475E                     u8960:
 18074                           
 18075                           ; BSR set to: 0
 18076  01475E  0012               	return		;funcret
 18077  014760                     __end_of_clear_stat_buffer:
 18078                           	callstack 0
 18079                           
 18080 ;; *************** function ___wmul *****************
 18081 ;; Defined at:
 18082 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
 18083 ;; Parameters:    Size  Location     Type
 18084 ;;  multiplier      2    0[BANK0 ] unsigned int 
 18085 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 18086 ;; Auto vars:     Size  Location     Type
 18087 ;;  product         2   31[COMRAM] unsigned int 
 18088 ;; Return value:  Size  Location     Type
 18089 ;;                  2    0[BANK0 ] unsigned int 
 18090 ;; Registers used:
 18091 ;;		wreg, status,2, status,0, prodl, prodh
 18092 ;; Tracked objects:
 18093 ;;		On entry : 3F/0
 18094 ;;		On exit  : 3F/0
 18095 ;;		Unchanged: 0/0
 18096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18097 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18100 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18101 ;;Total ram usage:        6 bytes
 18102 ;; Hardware stack levels used: 1
 18103 ;; Hardware stack levels required when called: 7
 18104 ;; This function calls:
 18105 ;;		Nothing
 18106 ;; This function is called by:
 18107 ;;		_clear_stat_buffer
 18108 ;;		_ps_math
 18109 ;;		_atoi
 18110 ;; This function uses a non-reentrant model
 18111 ;;
 18112                           
 18113                           	psect	text79
 18114  015228                     __ptext79:
 18115                           	callstack 0
 18116  015228                     ___wmul:
 18117                           	callstack 19
 18118                           
 18119                           ; BSR set to: 0
 18120                           
 18121                           ; BSR set to: 0
 18122                           ;incstack = 0
 18123  015228  5160               	movf	___wmul@multiplier& (0+255),w,b
 18124  01522A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 18125  01522C  006F FFCC  F020    	movff	prodl,___wmul@product
 18126  015232  006F FFD0  F021    	movff	prodh,___wmul@product+1
 18127  015238  5160               	movf	___wmul@multiplier& (0+255),w,b
 18128  01523A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 18129  01523C  50F3               	movf	243,w,c
 18130  01523E  2621               	addwf	(___wmul@product+1)^0,f,c
 18131  015240  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 18132  015242  0362               	mulwf	___wmul@multiplicand& (0+255),b
 18133  015244  50F3               	movf	243,w,c
 18134  015246  2621               	addwf	(___wmul@product+1)^0,f,c
 18135                           
 18136                           ; BSR set to: 0
 18137  015248  C020  F060         	movff	___wmul@product,?___wmul
 18138  01524C  C021  F061         	movff	___wmul@product+1,?___wmul+1
 18139                           
 18140                           ; BSR set to: 0
 18141  015250  0012               	return		;funcret
 18142  015252                     __end_of___wmul:
 18143                           	callstack 0
 18144                           
 18145 ;; *************** function _DATAEE_WriteByte *****************
 18146 ;; Defined at:
 18147 ;;		line 165 in file "mcc_generated_files/memory.c"
 18148 ;; Parameters:    Size  Location     Type
 18149 ;;  bAdd            2    0[BANK0 ] unsigned short 
 18150 ;;  bData           1    2[BANK0 ] unsigned char 
 18151 ;; Auto vars:     Size  Location     Type
 18152 ;;  GIEBitValue     1   31[COMRAM] unsigned char 
 18153 ;; Return value:  Size  Location     Type
 18154 ;;                  1    wreg      void 
 18155 ;; Registers used:
 18156 ;;		wreg, status,2, status,0
 18157 ;; Tracked objects:
 18158 ;;		On entry : 3F/0
 18159 ;;		On exit  : 0/0
 18160 ;;		Unchanged: 0/0
 18161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18162 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18165 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18166 ;;Total ram usage:        4 bytes
 18167 ;; Hardware stack levels used: 1
 18168 ;; Hardware stack levels required when called: 7
 18169 ;; This function calls:
 18170 ;;		Nothing
 18171 ;; This function is called by:
 18172 ;;		_fh_p0
 18173 ;;		_fh_p1
 18174 ;;		_main
 18175 ;; This function uses a non-reentrant model
 18176 ;;
 18177                           
 18178                           	psect	text80
 18179  014DFE                     __ptext80:
 18180                           	callstack 0
 18181  014DFE                     _DATAEE_WriteByte:
 18182                           	callstack 20
 18183                           
 18184                           ; BSR set to: 0
 18185                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 18186                           
 18187                           ; BSR set to: 0
 18188                           ;incstack = 0
 18189  014DFE  0E00               	movlw	0
 18190  014E00  BED2               	btfsc	210,7,c	;volatile
 18191  014E02  0E01               	movlw	1
 18192  014E04  6E20               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 18193                           
 18194                           ; BSR set to: 0
 18195                           ;mcc_generated_files/memory.c: 169:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 18196  014E06  5161               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 18197  014E08  0B03               	andlw	3
 18198  014E0A  0139               	movlb	57	; () banked
 18199  014E0C  6FE1               	movwf	225,b	;volatile
 18200                           
 18201                           ; BSR set to: 57
 18202                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 18203  014E0E  0060  F183  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 18204                           
 18205                           ; BSR set to: 57
 18206                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
 18207  014E14  0060  F18B  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 18208                           
 18209                           ; BSR set to: 57
 18210                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
 18211  014E1A  0E3F               	movlw	-193
 18212  014E1C  17E5               	andwf	229,f,b	;volsfr
 18213                           
 18214                           ; BSR set to: 57
 18215                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
 18216  014E1E  85E5               	bsf	229,2,b	;volsfr
 18217                           
 18218                           ; BSR set to: 57
 18219                           ;mcc_generated_files/memory.c: 174:     INTCON0bits.GIE = 0;
 18220  014E20  9ED2               	bcf	210,7,c	;volatile
 18221                           
 18222                           ; BSR set to: 57
 18223                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
 18224  014E22  0E55               	movlw	85
 18225  014E24  6FE6               	movwf	230,b	;volsfr
 18226                           
 18227                           ; BSR set to: 57
 18228                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
 18229  014E26  0EAA               	movlw	170
 18230  014E28  6FE6               	movwf	230,b	;volsfr
 18231                           
 18232                           ; BSR set to: 57
 18233                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
 18234  014E2A  83E5               	bsf	229,1,b	;volsfr
 18235  014E2C                     l1130:
 18236                           
 18237                           ; BSR set to: 57
 18238                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
 18239  014E2C  B3E5               	btfsc	229,1,b	;volsfr
 18240  014E2E  D7FE               	goto	l1130
 18241                           
 18242                           ; BSR set to: 57
 18243                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
 18244  014E30  95E5               	bcf	229,2,b	;volsfr
 18245                           
 18246                           ;mcc_generated_files/memory.c: 184:     INTCON0bits.GIE = GIEBitValue;
 18247  014E32  B020               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 18248  014E34  D002               	bra	u8955
 18249  014E36  9ED2               	bcf	210,7,c	;volatile
 18250  014E38  D001               	bra	u8956
 18251  014E3A                     u8955:
 18252  014E3A  8ED2               	bsf	210,7,c	;volatile
 18253  014E3C                     u8956:
 18254  014E3C  0012               	return		;funcret
 18255  014E3E                     __end_of_DATAEE_WriteByte:
 18256                           	callstack 0
 18257                           
 18258 ;; *************** function _WaitMs *****************
 18259 ;; Defined at:
 18260 ;;		line 31 in file "timers.c"
 18261 ;; Parameters:    Size  Location     Type
 18262 ;;  numMilliseco    2    3[BANK0 ] const unsigned short 
 18263 ;; Auto vars:     Size  Location     Type
 18264 ;;		None
 18265 ;; Return value:  Size  Location     Type
 18266 ;;                  1    wreg      void 
 18267 ;; Registers used:
 18268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18269 ;; Tracked objects:
 18270 ;;		On entry : 3F/0
 18271 ;;		On exit  : 3F/0
 18272 ;;		Unchanged: 0/0
 18273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18274 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18277 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18278 ;;Total ram usage:        2 bytes
 18279 ;; Hardware stack levels used: 1
 18280 ;; Hardware stack levels required when called: 8
 18281 ;; This function calls:
 18282 ;;		_StartTimer
 18283 ;;		_TimerDone
 18284 ;; This function is called by:
 18285 ;;		_main
 18286 ;; This function uses a non-reentrant model
 18287 ;;
 18288                           
 18289                           	psect	text81
 18290  0152A2                     __ptext81:
 18291                           	callstack 0
 18292  0152A2                     _WaitMs:
 18293                           	callstack 22
 18294                           
 18295                           ; BSR set to: 0
 18296                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 18297                           
 18298                           ;incstack = 0
 18299  0152A2  C063  F020         	movff	WaitMs@numMilliseconds,StartTimer@count
 18300  0152A6  C064  F021         	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
 18301  0152AA  0E00               	movlw	0
 18302  0152AC  ECB6  F0A8         	call	_StartTimer
 18303                           
 18304                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
 18305  0152B0  D005               	goto	l10889
 18306  0152B2                     l1400:
 18307                           
 18308                           ; BSR set to: 0
 18309                           ;timers.c: 35:   __nop();
 18310  0152B2  F000               	nop	
 18311                           
 18312                           ;timers.c: 36:   __nop();
 18313  0152B4  F000               	nop	
 18314                           
 18315                           ;timers.c: 37:   __nop();
 18316  0152B6  F000               	nop	
 18317                           
 18318                           ;timers.c: 38:   __nop();
 18319  0152B8  F000               	nop	
 18320  0152BA  0004               	clrwdt		;# 
 18321  0152BC                     l10889:
 18322                           
 18323                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
 18324  0152BC  0E00               	movlw	0
 18325  0152BE  EC65  F0A9         	call	_TimerDone
 18326  0152C2  0900               	iorlw	0
 18327  0152C4  A4D8               	btfss	status,2,c
 18328  0152C6  0012               	return	
 18329  0152C8  D7F4               	goto	l1400
 18330  0152CA                     __end_of_WaitMs:
 18331                           	callstack 0
 18332                           
 18333 ;; *************** function _TimerDone *****************
 18334 ;; Defined at:
 18335 ;;		line 19 in file "timers.c"
 18336 ;; Parameters:    Size  Location     Type
 18337 ;;  timer           1    wreg     const unsigned char 
 18338 ;; Auto vars:     Size  Location     Type
 18339 ;;  timer           1    0[BANK0 ] const unsigned char 
 18340 ;; Return value:  Size  Location     Type
 18341 ;;                  1    wreg      _Bool 
 18342 ;; Registers used:
 18343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18344 ;; Tracked objects:
 18345 ;;		On entry : 0/0
 18346 ;;		On exit  : 3F/0
 18347 ;;		Unchanged: 0/0
 18348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18352 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18353 ;;Total ram usage:        3 bytes
 18354 ;; Hardware stack levels used: 1
 18355 ;; Hardware stack levels required when called: 7
 18356 ;; This function calls:
 18357 ;;		Nothing
 18358 ;; This function is called by:
 18359 ;;		_WaitMs
 18360 ;; This function uses a non-reentrant model
 18361 ;;
 18362                           
 18363                           	psect	text82
 18364  0152CA                     __ptext82:
 18365                           	callstack 0
 18366  0152CA                     _TimerDone:
 18367                           	callstack 22
 18368                           
 18369                           ; BSR set to: 0
 18370                           ;incstack = 0
 18371                           ;TimerDone@timer stored from wreg
 18372  0152CA  0100               	movlb	0	; () banked
 18373  0152CC  6F60               	movwf	TimerDone@timer& (0+255),b
 18374  0152CE  0004               	clrwdt		;# 
 18375                           
 18376                           ;timers.c: 22:  if (tickCount[timer] == 0) {
 18377  0152D0  0100               	movlb	0	; () banked
 18378  0152D2  5160               	movf	TimerDone@timer& (0+255),w,b
 18379  0152D4  0D02               	mullw	2
 18380  0152D6  0E0C               	movlw	low _tickCount
 18381  0152D8  24F3               	addwf	243,w,c
 18382  0152DA  6ED9               	movwf	fsr2l,c
 18383  0152DC  0E01               	movlw	high _tickCount
 18384  0152DE  20F4               	addwfc	prodh,w,c
 18385  0152E0  6EDA               	movwf	fsr2h,c
 18386  0152E2  50DE               	movf	postinc2,w,c
 18387  0152E4  10DE               	iorwf	postinc2,w,c
 18388  0152E6  A4D8               	btfss	status,2,c
 18389  0152E8  D002               	goto	l10607
 18390                           
 18391                           ; BSR set to: 0
 18392                           ;timers.c: 23:   return 1;
 18393  0152EA  0E01               	movlw	1
 18394  0152EC  0012               	return	
 18395  0152EE                     l10607:
 18396                           
 18397                           ; BSR set to: 0
 18398                           ;timers.c: 25:  return 0;
 18399  0152EE  0E00               	movlw	0
 18400                           
 18401                           ; BSR set to: 0
 18402  0152F0  0012               	return		;funcret
 18403  0152F2                     __end_of_TimerDone:
 18404                           	callstack 0
 18405                           
 18406 ;; *************** function _StartTimer *****************
 18407 ;; Defined at:
 18408 ;;		line 11 in file "timers.c"
 18409 ;; Parameters:    Size  Location     Type
 18410 ;;  timer           1    wreg     const unsigned char 
 18411 ;;  count           2   31[COMRAM] const unsigned short 
 18412 ;; Auto vars:     Size  Location     Type
 18413 ;;  timer           1    2[BANK0 ] const unsigned char 
 18414 ;; Return value:  Size  Location     Type
 18415 ;;                  1    wreg      void 
 18416 ;; Registers used:
 18417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18418 ;; Tracked objects:
 18419 ;;		On entry : 3F/0
 18420 ;;		On exit  : 3F/0
 18421 ;;		Unchanged: 0/0
 18422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18425 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18426 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18427 ;;Total ram usage:        5 bytes
 18428 ;; Hardware stack levels used: 1
 18429 ;; Hardware stack levels required when called: 7
 18430 ;; This function calls:
 18431 ;;		Nothing
 18432 ;; This function is called by:
 18433 ;;		_WaitMs
 18434 ;; This function uses a non-reentrant model
 18435 ;;
 18436                           
 18437                           	psect	text83
 18438  01516C                     __ptext83:
 18439                           	callstack 0
 18440  01516C                     _StartTimer:
 18441                           	callstack 22
 18442                           
 18443                           ; BSR set to: 0
 18444                           ;incstack = 0
 18445                           ;StartTimer@timer stored from wreg
 18446  01516C  6F62               	movwf	StartTimer@timer& (0+255),b
 18447                           
 18448                           ;timers.c: 11: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 12: 
      +                          {;timers.c: 13:  tickCount[timer] = count << 1;
 18449  01516E  C020  F060         	movff	StartTimer@count,??_StartTimer
 18450  015172  C021  F061         	movff	StartTimer@count+1,??_StartTimer+1
 18451  015176  90D8               	bcf	status,0,c
 18452  015178  0100               	movlb	0	; () banked
 18453  01517A  3760               	rlcf	??_StartTimer& (0+255),f,b
 18454  01517C  3761               	rlcf	(??_StartTimer+1)& (0+255),f,b
 18455  01517E  5162               	movf	StartTimer@timer& (0+255),w,b
 18456  015180  0D02               	mullw	2
 18457  015182  0E0C               	movlw	low _tickCount
 18458  015184  24F3               	addwf	243,w,c
 18459  015186  6ED9               	movwf	fsr2l,c
 18460  015188  0E01               	movlw	high _tickCount
 18461  01518A  20F4               	addwfc	prodh,w,c
 18462  01518C  6EDA               	movwf	fsr2h,c
 18463  01518E  0060  F183  FFDE   	movff	??_StartTimer,postinc2
 18464  015194  0060  F187  FFDD   	movff	??_StartTimer+1,postdec2
 18465                           
 18466                           ; BSR set to: 0
 18467  01519A  0012               	return		;funcret
 18468  01519C                     __end_of_StartTimer:
 18469                           	callstack 0
 18470                           
 18471 ;; *************** function _SYSTEM_Initialize *****************
 18472 ;; Defined at:
 18473 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18474 ;; Parameters:    Size  Location     Type
 18475 ;;		None
 18476 ;; Auto vars:     Size  Location     Type
 18477 ;;		None
 18478 ;; Return value:  Size  Location     Type
 18479 ;;                  1    wreg      void 
 18480 ;; Registers used:
 18481 ;;		wreg, status,2, status,0, cstack
 18482 ;; Tracked objects:
 18483 ;;		On entry : 3F/0
 18484 ;;		On exit  : 3F/39
 18485 ;;		Unchanged: 0/0
 18486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18491 ;;Total ram usage:        0 bytes
 18492 ;; Hardware stack levels used: 1
 18493 ;; Hardware stack levels required when called: 9
 18494 ;; This function calls:
 18495 ;;		_ADCC_Initialize
 18496 ;;		_DAC1_Initialize
 18497 ;;		_DMA1_Initialize
 18498 ;;		_INTERRUPT_Initialize
 18499 ;;		_OSCILLATOR_Initialize
 18500 ;;		_PIN_MANAGER_Initialize
 18501 ;;		_PMD_Initialize
 18502 ;;		_PWM5_Initialize
 18503 ;;		_PWM6_Initialize
 18504 ;;		_SPI1_Initialize
 18505 ;;		_SystemArbiter_Initialize
 18506 ;;		_TMR2_Initialize
 18507 ;;		_TMR5_Initialize
 18508 ;;		_TMR6_Initialize
 18509 ;;		_UART1_Initialize
 18510 ;; This function is called by:
 18511 ;;		_main
 18512 ;; This function uses a non-reentrant model
 18513 ;;
 18514                           
 18515                           	psect	text84
 18516  014EF8                     __ptext84:
 18517                           	callstack 0
 18518  014EF8                     _SYSTEM_Initialize:
 18519                           	callstack 21
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 18523                           
 18524                           ; BSR set to: 0
 18525                           ;incstack = 0
 18526  014EF8  ECA6  F0A5         	call	_INTERRUPT_Initialize	;wreg free
 18527                           
 18528                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 18529  014EFC  EC08  F0AA         	call	_PMD_Initialize	;wreg free
 18530                           
 18531                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 18532  014F00  EC80  F09E         	call	_PIN_MANAGER_Initialize	;wreg free
 18533                           
 18534                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 18535  014F04  ECA3  F0AA         	call	_OSCILLATOR_Initialize	;wreg free
 18536                           
 18537                           ; BSR set to: 57
 18538                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 18539  014F08  EC3E  F0A2         	call	_ADCC_Initialize	;wreg free
 18540                           
 18541                           ; BSR set to: 0
 18542                           ;mcc_generated_files/mcc.c: 57:     DMA1_Initialize();
 18543  014F0C  ECE0  F0A3         	call	_DMA1_Initialize	;wreg free
 18544                           
 18545                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 18546  014F10  EC76  F0AA         	call	_TMR2_Initialize	;wreg free
 18547                           
 18548                           ;mcc_generated_files/mcc.c: 59:     PWM6_Initialize();
 18549  014F14  ECEF  F0AA         	call	_PWM6_Initialize	;wreg free
 18550                           
 18551                           ; BSR set to: 63
 18552                           ;mcc_generated_files/mcc.c: 60:     TMR6_Initialize();
 18553  014F18  ECCE  F0A8         	call	_TMR6_Initialize	;wreg free
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;mcc_generated_files/mcc.c: 61:     DAC1_Initialize();
 18557  014F1C  EC89  F0AB         	call	_DAC1_Initialize	;wreg free
 18558                           
 18559                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 18560  014F20  EC81  F0A5         	call	_TMR5_Initialize	;wreg free
 18561                           
 18562                           ; BSR set to: 0
 18563                           ;mcc_generated_files/mcc.c: 63:     PWM5_Initialize();
 18564  014F24  ECFB  F0AA         	call	_PWM5_Initialize	;wreg free
 18565                           
 18566                           ; BSR set to: 63
 18567                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 18568  014F28  ECC6  F09C         	call	_UART1_Initialize	;wreg free
 18569                           
 18570                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 18571  014F2C  ECBE  F0AA         	call	_SPI1_Initialize	;wreg free
 18572                           
 18573                           ;mcc_generated_files/mcc.c: 66:     SystemArbiter_Initialize();
 18574  014F30  EC6D  F0AB         	call	_SystemArbiter_Initialize	;wreg free
 18575                           
 18576                           ; BSR set to: 57
 18577  014F34  0012               	return		;funcret
 18578  014F36                     __end_of_SYSTEM_Initialize:
 18579                           	callstack 0
 18580                           
 18581 ;; *************** function _UART1_Initialize *****************
 18582 ;; Defined at:
 18583 ;;		line 87 in file "mcc_generated_files/uart1.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;		None
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;		None
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      void 
 18590 ;; Registers used:
 18591 ;;		wreg, status,2, status,0, cstack
 18592 ;; Tracked objects:
 18593 ;;		On entry : 3F/3F
 18594 ;;		On exit  : 3F/39
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18601 ;;Total ram usage:        0 bytes
 18602 ;; Hardware stack levels used: 1
 18603 ;; Hardware stack levels required when called: 8
 18604 ;; This function calls:
 18605 ;;		_UART1_SetErrorHandler
 18606 ;;		_UART1_SetFramingErrorHandler
 18607 ;;		_UART1_SetFramingErrorInterruptHandler
 18608 ;;		_UART1_SetOverrunErrorHandler
 18609 ;;		_UART1_SetRxInterruptHandler
 18610 ;;		_UART1_SetTxInterruptHandler
 18611 ;;		_UART1_SetUartInterruptHandler
 18612 ;; This function is called by:
 18613 ;;		_SYSTEM_Initialize
 18614 ;; This function uses a non-reentrant model
 18615 ;;
 18616                           
 18617                           	psect	text85
 18618  01398C                     __ptext85:
 18619                           	callstack 0
 18620  01398C                     _UART1_Initialize:
 18621                           	callstack 21
 18622                           
 18623                           ; BSR set to: 63
 18624                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 18625                           
 18626                           ; BSR set to: 57
 18627                           ;incstack = 0
 18628  01398C  0139               	movlb	57	; () banked
 18629  01398E  9793               	bcf	147,3,b	;volatile
 18630                           
 18631                           ; BSR set to: 57
 18632                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 18633  013990  0E36               	movlw	low _UART1_Receive_ISR
 18634  013992  0100               	movlb	0	; () banked
 18635  013994  6F60               	movwf	UART1_SetRxInterruptHandler@InterruptHandler& (0+255),b
 18636  013996  0E42               	movlw	high _UART1_Receive_ISR
 18637  013998  6F61               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)& (0+255),b
 18638  01399A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 18639  01399C  6F62               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)& (0+255),b
 18640  01399E  EC3C  F0AB         	call	_UART1_SetRxInterruptHandler	;wreg free
 18641                           
 18642                           ; BSR set to: 0
 18643                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 18644  0139A2  0139               	movlb	57	; () banked
 18645  0139A4  9993               	bcf	147,4,b	;volatile
 18646                           
 18647                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 18648  0139A6  0EFA               	movlw	low _UART1_Transmit_ISR
 18649  0139A8  0100               	movlb	0	; () banked
 18650  0139AA  6F60               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
 18651  0139AC  0E51               	movlw	high _UART1_Transmit_ISR
 18652  0139AE  6F61               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
 18653  0139B0  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 18654  0139B2  6F62               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)& (0+255),b
 18655  0139B4  EC35  F0AB         	call	_UART1_SetTxInterruptHandler	;wreg free
 18656                           
 18657                           ; BSR set to: 0
 18658                           ;mcc_generated_files/uart1.c: 94:     PIE3bits.U1EIE = 0;
 18659  0139B8  0139               	movlb	57	; () banked
 18660  0139BA  9B93               	bcf	147,5,b	;volatile
 18661                           
 18662                           ;mcc_generated_files/uart1.c: 95:     UART1_SetFramingErrorInterruptHandler(UART1_Framin
      +                          gError_ISR);
 18663  0139BC  0E32               	movlw	low _UART1_FramingError_ISR
 18664  0139BE  0100               	movlb	0	; () banked
 18665  0139C0  6F60               	movwf	UART1_SetFramingErrorInterruptHandler@InterruptHandler& (0+255),b
 18666  0139C2  0E57               	movlw	high _UART1_FramingError_ISR
 18667  0139C4  6F61               	movwf	(UART1_SetFramingErrorInterruptHandler@InterruptHandler+1)& (0+255),b
 18668  0139C6  0E01               	movlw	low (_UART1_FramingError_ISR shr (0+16))
 18669  0139C8  6F62               	movwf	(UART1_SetFramingErrorInterruptHandler@InterruptHandler+2)& (0+255),b
 18670  0139CA  EC4A  F0AB         	call	_UART1_SetFramingErrorInterruptHandler	;wreg free
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;mcc_generated_files/uart1.c: 96:     PIE3bits.U1IE = 0;
 18674  0139CE  0139               	movlb	57	; () banked
 18675  0139D0  9D93               	bcf	147,6,b	;volatile
 18676                           
 18677                           ;mcc_generated_files/uart1.c: 97:     UART1_SetUartInterruptHandler(UART1_UartInterrupt_
      +                          ISR);
 18678  0139D2  0E52               	movlw	low _UART1_UartInterrupt_ISR
 18679  0139D4  0100               	movlb	0	; () banked
 18680  0139D6  6F60               	movwf	UART1_SetUartInterruptHandler@InterruptHandler& (0+255),b
 18681  0139D8  0E57               	movlw	high _UART1_UartInterrupt_ISR
 18682  0139DA  6F61               	movwf	(UART1_SetUartInterruptHandler@InterruptHandler+1)& (0+255),b
 18683  0139DC  0E01               	movlw	low (_UART1_UartInterrupt_ISR shr (0+16))
 18684  0139DE  6F62               	movwf	(UART1_SetUartInterruptHandler@InterruptHandler+2)& (0+255),b
 18685  0139E0  EC2E  F0AB         	call	_UART1_SetUartInterruptHandler	;wreg free
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;mcc_generated_files/uart1.c: 102:     U1P1L = 0x00;
 18689  0139E4  0E00               	movlw	0
 18690  0139E6  013D               	movlb	61	; () banked
 18691  0139E8  6FEC               	movwf	236,b	;volatile
 18692                           
 18693                           ; BSR set to: 61
 18694                           ;mcc_generated_files/uart1.c: 105:     U1P1H = 0x00;
 18695  0139EA  0E00               	movlw	0
 18696  0139EC  6FED               	movwf	237,b	;volatile
 18697                           
 18698                           ; BSR set to: 61
 18699                           ;mcc_generated_files/uart1.c: 108:     U1P2L = 0x00;
 18700  0139EE  0E00               	movlw	0
 18701  0139F0  6FEE               	movwf	238,b	;volatile
 18702                           
 18703                           ; BSR set to: 61
 18704                           ;mcc_generated_files/uart1.c: 111:     U1P2H = 0x00;
 18705  0139F2  0E00               	movlw	0
 18706  0139F4  6FEF               	movwf	239,b	;volatile
 18707                           
 18708                           ; BSR set to: 61
 18709                           ;mcc_generated_files/uart1.c: 114:     U1P3L = 0x00;
 18710  0139F6  0E00               	movlw	0
 18711  0139F8  6FF0               	movwf	240,b	;volatile
 18712                           
 18713                           ; BSR set to: 61
 18714                           ;mcc_generated_files/uart1.c: 117:     U1P3H = 0x00;
 18715  0139FA  0E00               	movlw	0
 18716  0139FC  6FF1               	movwf	241,b	;volatile
 18717                           
 18718                           ; BSR set to: 61
 18719                           ;mcc_generated_files/uart1.c: 120:     U1CON0 = 0xB0;
 18720  0139FE  0EB0               	movlw	176
 18721  013A00  6FF2               	movwf	242,b	;volatile
 18722                           
 18723                           ; BSR set to: 61
 18724                           ;mcc_generated_files/uart1.c: 123:     U1CON1 = 0x90;
 18725  013A02  0E90               	movlw	144
 18726  013A04  6FF3               	movwf	243,b	;volatile
 18727                           
 18728                           ; BSR set to: 61
 18729                           ;mcc_generated_files/uart1.c: 126:     U1CON2 = 0x00;
 18730  013A06  0E00               	movlw	0
 18731  013A08  6FF4               	movwf	244,b	;volatile
 18732                           
 18733                           ; BSR set to: 61
 18734                           ;mcc_generated_files/uart1.c: 129:     U1BRGL = 0x8A;
 18735  013A0A  0E8A               	movlw	138
 18736  013A0C  6FF5               	movwf	245,b	;volatile
 18737                           
 18738                           ; BSR set to: 61
 18739                           ;mcc_generated_files/uart1.c: 132:     U1BRGH = 0x00;
 18740  013A0E  0E00               	movlw	0
 18741  013A10  6FF6               	movwf	246,b	;volatile
 18742                           
 18743                           ; BSR set to: 61
 18744                           ;mcc_generated_files/uart1.c: 135:     U1FIFO = 0x00;
 18745  013A12  0E00               	movlw	0
 18746  013A14  6FF7               	movwf	247,b	;volatile
 18747                           
 18748                           ; BSR set to: 61
 18749                           ;mcc_generated_files/uart1.c: 138:     U1UIR = 0x00;
 18750  013A16  0E00               	movlw	0
 18751  013A18  6FF8               	movwf	248,b	;volatile
 18752                           
 18753                           ; BSR set to: 61
 18754                           ;mcc_generated_files/uart1.c: 141:     U1ERRIR = 0x00;
 18755  013A1A  0E00               	movlw	0
 18756  013A1C  6FF9               	movwf	249,b	;volatile
 18757                           
 18758                           ; BSR set to: 61
 18759                           ;mcc_generated_files/uart1.c: 144:     U1ERRIE = 0x00;
 18760  013A1E  0E00               	movlw	0
 18761  013A20  6FFA               	movwf	250,b	;volatile
 18762                           
 18763                           ; BSR set to: 61
 18764                           ;mcc_generated_files/uart1.c: 147:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 18765  013A22  0E60               	movlw	low _UART1_DefaultFramingErrorHandler
 18766  013A24  0100               	movlb	0	; () banked
 18767  013A26  6F60               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 18768  013A28  0E57               	movlw	high _UART1_DefaultFramingErrorHandler
 18769  013A2A  6F61               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 18770  013A2C  0E01               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 18771  013A2E  6F62               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
 18772  013A30  EC51  F0AB         	call	_UART1_SetFramingErrorHandler	;wreg free
 18773                           
 18774                           ; BSR set to: 0
 18775                           ;mcc_generated_files/uart1.c: 148:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 18776  013A34  0E5E               	movlw	low _UART1_DefaultOverrunErrorHandler
 18777  013A36  6F60               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 18778  013A38  0E57               	movlw	high _UART1_DefaultOverrunErrorHandler
 18779  013A3A  6F61               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 18780  013A3C  0E01               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 18781  013A3E  6F62               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
 18782  013A40  EC43  F0AB         	call	_UART1_SetOverrunErrorHandler	;wreg free
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;mcc_generated_files/uart1.c: 149:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 18786  013A44  0E4C               	movlw	low _UART1_DefaultErrorHandler
 18787  013A46  6F60               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
 18788  013A48  0E57               	movlw	high _UART1_DefaultErrorHandler
 18789  013A4A  6F61               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 18790  013A4C  0E01               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 18791  013A4E  6F62               	movwf	(UART1_SetErrorHandler@interruptHandler+2)& (0+255),b
 18792  013A50  EC58  F0AB         	call	_UART1_SetErrorHandler	;wreg free
 18793                           
 18794                           ;mcc_generated_files/uart1.c: 151:     uart1RxLastError.status = 0;
 18795  013A54  0E00               	movlw	0
 18796  013A56  6E3A               	movwf	_uart1RxLastError^0,c	;volatile
 18797                           
 18798                           ;mcc_generated_files/uart1.c: 154:     uart1TxHead = 0;
 18799  013A58  0E00               	movlw	0
 18800  013A5A  6E40               	movwf	_uart1TxHead^0,c	;volatile
 18801                           
 18802                           ;mcc_generated_files/uart1.c: 155:     uart1TxTail = 0;
 18803  013A5C  0E00               	movlw	0
 18804  013A5E  6E3F               	movwf	_uart1TxTail^0,c	;volatile
 18805                           
 18806                           ;mcc_generated_files/uart1.c: 156:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 18807  013A60  0E40               	movlw	64
 18808  013A62  6E3E               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 18809                           
 18810                           ;mcc_generated_files/uart1.c: 157:     uart1RxHead = 0;
 18811  013A64  0E00               	movlw	0
 18812  013A66  6E3D               	movwf	_uart1RxHead^0,c	;volatile
 18813                           
 18814                           ;mcc_generated_files/uart1.c: 158:     uart1RxTail = 0;
 18815  013A68  0E00               	movlw	0
 18816  013A6A  6E3C               	movwf	_uart1RxTail^0,c	;volatile
 18817                           
 18818                           ;mcc_generated_files/uart1.c: 159:     uart1RxCount = 0;
 18819  013A6C  0E00               	movlw	0
 18820  013A6E  6E3B               	movwf	_uart1RxCount^0,c	;volatile
 18821                           
 18822                           ; BSR set to: 0
 18823                           ;mcc_generated_files/uart1.c: 162:     PIE3bits.U1RXIE = 1;
 18824  013A70  0139               	movlb	57	; () banked
 18825  013A72  8793               	bsf	147,3,b	;volatile
 18826                           
 18827                           ; BSR set to: 57
 18828                           ;mcc_generated_files/uart1.c: 164:     PIE3bits.U1EIE = 1;
 18829  013A74  8B93               	bsf	147,5,b	;volatile
 18830                           
 18831                           ; BSR set to: 57
 18832                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1IE = 1;
 18833  013A76  8D93               	bsf	147,6,b	;volatile
 18834                           
 18835                           ; BSR set to: 57
 18836  013A78  0012               	return		;funcret
 18837  013A7A                     __end_of_UART1_Initialize:
 18838                           	callstack 0
 18839                           
 18840 ;; *************** function _UART1_SetUartInterruptHandler *****************
 18841 ;; Defined at:
 18842 ;;		line 378 in file "mcc_generated_files/uart1.c"
 18843 ;; Parameters:    Size  Location     Type
 18844 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 18845 ;;		 -> UART1_UartInterrupt_ISR(1), 
 18846 ;; Auto vars:     Size  Location     Type
 18847 ;;		None
 18848 ;; Return value:  Size  Location     Type
 18849 ;;                  1    wreg      void 
 18850 ;; Registers used:
 18851 ;;		wreg, status,2, status,0
 18852 ;; Tracked objects:
 18853 ;;		On entry : 3F/0
 18854 ;;		On exit  : 3F/0
 18855 ;;		Unchanged: 3F/0
 18856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18857 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18860 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18861 ;;Total ram usage:        3 bytes
 18862 ;; Hardware stack levels used: 1
 18863 ;; Hardware stack levels required when called: 7
 18864 ;; This function calls:
 18865 ;;		Nothing
 18866 ;; This function is called by:
 18867 ;;		_UART1_Initialize
 18868 ;; This function uses a non-reentrant model
 18869 ;;
 18870                           
 18871                           	psect	text86
 18872  01565C                     __ptext86:
 18873                           	callstack 0
 18874  01565C                     _UART1_SetUartInterruptHandler:
 18875                           	callstack 21
 18876                           
 18877                           ; BSR set to: 0
 18878                           ;mcc_generated_files/uart1.c: 379:     UART1_UARTInterruptHandler = InterruptHandler;
 18879                           
 18880                           ; BSR set to: 57
 18881                           ;incstack = 0
 18882  01565C  C060  F155         	movff	UART1_SetUartInterruptHandler@InterruptHandler,_UART1_UARTInterruptHandler
 18883  015660  C061  F156         	movff	UART1_SetUartInterruptHandler@InterruptHandler+1,_UART1_UARTInterruptHandler+1
 18884  015664  C062  F157         	movff	UART1_SetUartInterruptHandler@InterruptHandler+2,_UART1_UARTInterruptHandler+2
 18885                           
 18886                           ; BSR set to: 0
 18887  015668  0012               	return		;funcret
 18888  01566A                     __end_of_UART1_SetUartInterruptHandler:
 18889                           	callstack 0
 18890                           
 18891 ;; *************** function _UART1_SetTxInterruptHandler *****************
 18892 ;; Defined at:
 18893 ;;		line 370 in file "mcc_generated_files/uart1.c"
 18894 ;; Parameters:    Size  Location     Type
 18895 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 18896 ;;		 -> UART1_Transmit_ISR(1), 
 18897 ;; Auto vars:     Size  Location     Type
 18898 ;;		None
 18899 ;; Return value:  Size  Location     Type
 18900 ;;                  1    wreg      void 
 18901 ;; Registers used:
 18902 ;;		wreg, status,2, status,0
 18903 ;; Tracked objects:
 18904 ;;		On entry : 3F/0
 18905 ;;		On exit  : 3F/0
 18906 ;;		Unchanged: 3F/0
 18907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18908 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18911 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18912 ;;Total ram usage:        3 bytes
 18913 ;; Hardware stack levels used: 1
 18914 ;; Hardware stack levels required when called: 7
 18915 ;; This function calls:
 18916 ;;		Nothing
 18917 ;; This function is called by:
 18918 ;;		_UART1_Initialize
 18919 ;; This function uses a non-reentrant model
 18920 ;;
 18921                           
 18922                           	psect	text87
 18923  01566A                     __ptext87:
 18924                           	callstack 0
 18925  01566A                     _UART1_SetTxInterruptHandler:
 18926                           	callstack 21
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;mcc_generated_files/uart1.c: 371:     UART1_TxInterruptHandler = InterruptHandler;
 18930                           
 18931                           ; BSR set to: 0
 18932                           ;incstack = 0
 18933  01566A  C060  F026         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 18934  01566E  C061  F027         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 18935  015672  C062  F028         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 18936                           
 18937                           ; BSR set to: 0
 18938  015676  0012               	return		;funcret
 18939  015678                     __end_of_UART1_SetTxInterruptHandler:
 18940                           	callstack 0
 18941                           
 18942 ;; *************** function _UART1_SetRxInterruptHandler *****************
 18943 ;; Defined at:
 18944 ;;		line 366 in file "mcc_generated_files/uart1.c"
 18945 ;; Parameters:    Size  Location     Type
 18946 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 18947 ;;		 -> UART1_Receive_ISR(1), 
 18948 ;; Auto vars:     Size  Location     Type
 18949 ;;		None
 18950 ;; Return value:  Size  Location     Type
 18951 ;;                  1    wreg      void 
 18952 ;; Registers used:
 18953 ;;		wreg, status,2, status,0
 18954 ;; Tracked objects:
 18955 ;;		On entry : 3F/0
 18956 ;;		On exit  : 3F/0
 18957 ;;		Unchanged: 3F/0
 18958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18959 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18962 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18963 ;;Total ram usage:        3 bytes
 18964 ;; Hardware stack levels used: 1
 18965 ;; Hardware stack levels required when called: 7
 18966 ;; This function calls:
 18967 ;;		Nothing
 18968 ;; This function is called by:
 18969 ;;		_UART1_Initialize
 18970 ;; This function uses a non-reentrant model
 18971 ;;
 18972                           
 18973                           	psect	text88
 18974  015678                     __ptext88:
 18975                           	callstack 0
 18976  015678                     _UART1_SetRxInterruptHandler:
 18977                           	callstack 21
 18978                           
 18979                           ; BSR set to: 0
 18980                           ;mcc_generated_files/uart1.c: 367:     UART1_RxInterruptHandler = InterruptHandler;
 18981                           
 18982                           ; BSR set to: 0
 18983                           ;incstack = 0
 18984  015678  C060  F029         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 18985  01567C  C061  F02A         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 18986  015680  C062  F02B         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 18987                           
 18988                           ; BSR set to: 0
 18989  015684  0012               	return		;funcret
 18990  015686                     __end_of_UART1_SetRxInterruptHandler:
 18991                           	callstack 0
 18992                           
 18993 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 18994 ;; Defined at:
 18995 ;;		line 341 in file "mcc_generated_files/uart1.c"
 18996 ;; Parameters:    Size  Location     Type
 18997 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 18998 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 18999 ;; Auto vars:     Size  Location     Type
 19000 ;;		None
 19001 ;; Return value:  Size  Location     Type
 19002 ;;                  1    wreg      void 
 19003 ;; Registers used:
 19004 ;;		wreg, status,2, status,0
 19005 ;; Tracked objects:
 19006 ;;		On entry : 3F/0
 19007 ;;		On exit  : 3F/0
 19008 ;;		Unchanged: 3F/0
 19009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19010 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19013 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19014 ;;Total ram usage:        3 bytes
 19015 ;; Hardware stack levels used: 1
 19016 ;; Hardware stack levels required when called: 7
 19017 ;; This function calls:
 19018 ;;		Nothing
 19019 ;; This function is called by:
 19020 ;;		_UART1_Initialize
 19021 ;; This function uses a non-reentrant model
 19022 ;;
 19023                           
 19024                           	psect	text89
 19025  015686                     __ptext89:
 19026                           	callstack 0
 19027  015686                     _UART1_SetOverrunErrorHandler:
 19028                           	callstack 21
 19029                           
 19030                           ; BSR set to: 0
 19031                           ;mcc_generated_files/uart1.c: 342:     UART1_OverrunErrorHandler = interruptHandler;
 19032                           
 19033                           ; BSR set to: 0
 19034                           ;incstack = 0
 19035  015686  C060  F143         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 19036  01568A  C061  F144         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 19037  01568E  C062  F145         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 19038                           
 19039                           ; BSR set to: 0
 19040  015692  0012               	return		;funcret
 19041  015694                     __end_of_UART1_SetOverrunErrorHandler:
 19042                           	callstack 0
 19043                           
 19044 ;; *************** function _UART1_SetFramingErrorInterruptHandler *****************
 19045 ;; Defined at:
 19046 ;;		line 374 in file "mcc_generated_files/uart1.c"
 19047 ;; Parameters:    Size  Location     Type
 19048 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 19049 ;;		 -> UART1_FramingError_ISR(1), 
 19050 ;; Auto vars:     Size  Location     Type
 19051 ;;		None
 19052 ;; Return value:  Size  Location     Type
 19053 ;;                  1    wreg      void 
 19054 ;; Registers used:
 19055 ;;		wreg, status,2, status,0
 19056 ;; Tracked objects:
 19057 ;;		On entry : 3F/0
 19058 ;;		On exit  : 3F/0
 19059 ;;		Unchanged: 3F/0
 19060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19061 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19064 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19065 ;;Total ram usage:        3 bytes
 19066 ;; Hardware stack levels used: 1
 19067 ;; Hardware stack levels required when called: 7
 19068 ;; This function calls:
 19069 ;;		Nothing
 19070 ;; This function is called by:
 19071 ;;		_UART1_Initialize
 19072 ;; This function uses a non-reentrant model
 19073 ;;
 19074                           
 19075                           	psect	text90
 19076  015694                     __ptext90:
 19077                           	callstack 0
 19078  015694                     _UART1_SetFramingErrorInterruptHandler:
 19079                           	callstack 21
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;mcc_generated_files/uart1.c: 375:     UART1_FramingErrorInterruptHandler = InterruptHan
      +                          dler;
 19083                           
 19084                           ; BSR set to: 0
 19085                           ;incstack = 0
 19086  015694  C060  F158         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler,_UART1_FramingErrorInterru
      +                          ptHandler
 19087  015698  C061  F159         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler+1,_UART1_FramingErrorInter
      +                          ruptHandler+1
 19088  01569C  C062  F15A         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler+2,_UART1_FramingErrorInter
      +                          ruptHandler+2
 19089                           
 19090                           ; BSR set to: 0
 19091  0156A0  0012               	return		;funcret
 19092  0156A2                     __end_of_UART1_SetFramingErrorInterruptHandler:
 19093                           	callstack 0
 19094                           
 19095 ;; *************** function _UART1_SetFramingErrorHandler *****************
 19096 ;; Defined at:
 19097 ;;		line 337 in file "mcc_generated_files/uart1.c"
 19098 ;; Parameters:    Size  Location     Type
 19099 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 19100 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 19101 ;; Auto vars:     Size  Location     Type
 19102 ;;		None
 19103 ;; Return value:  Size  Location     Type
 19104 ;;                  1    wreg      void 
 19105 ;; Registers used:
 19106 ;;		wreg, status,2, status,0
 19107 ;; Tracked objects:
 19108 ;;		On entry : 3F/0
 19109 ;;		On exit  : 3F/0
 19110 ;;		Unchanged: 3F/0
 19111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19112 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19115 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19116 ;;Total ram usage:        3 bytes
 19117 ;; Hardware stack levels used: 1
 19118 ;; Hardware stack levels required when called: 7
 19119 ;; This function calls:
 19120 ;;		Nothing
 19121 ;; This function is called by:
 19122 ;;		_UART1_Initialize
 19123 ;; This function uses a non-reentrant model
 19124 ;;
 19125                           
 19126                           	psect	text91
 19127  0156A2                     __ptext91:
 19128                           	callstack 0
 19129  0156A2                     _UART1_SetFramingErrorHandler:
 19130                           	callstack 21
 19131                           
 19132                           ; BSR set to: 0
 19133                           ;mcc_generated_files/uart1.c: 338:     UART1_FramingErrorHandler = interruptHandler;
 19134                           
 19135                           ; BSR set to: 0
 19136                           ;incstack = 0
 19137  0156A2  C060  F146         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 19138  0156A6  C061  F147         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 19139  0156AA  C062  F148         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 19140                           
 19141                           ; BSR set to: 0
 19142  0156AE  0012               	return		;funcret
 19143  0156B0                     __end_of_UART1_SetFramingErrorHandler:
 19144                           	callstack 0
 19145                           
 19146 ;; *************** function _UART1_SetErrorHandler *****************
 19147 ;; Defined at:
 19148 ;;		line 345 in file "mcc_generated_files/uart1.c"
 19149 ;; Parameters:    Size  Location     Type
 19150 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 19151 ;;		 -> UART1_DefaultErrorHandler(1), 
 19152 ;; Auto vars:     Size  Location     Type
 19153 ;;		None
 19154 ;; Return value:  Size  Location     Type
 19155 ;;                  1    wreg      void 
 19156 ;; Registers used:
 19157 ;;		wreg, status,2, status,0
 19158 ;; Tracked objects:
 19159 ;;		On entry : 3F/0
 19160 ;;		On exit  : 3F/0
 19161 ;;		Unchanged: 3F/0
 19162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19163 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19166 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19167 ;;Total ram usage:        3 bytes
 19168 ;; Hardware stack levels used: 1
 19169 ;; Hardware stack levels required when called: 7
 19170 ;; This function calls:
 19171 ;;		Nothing
 19172 ;; This function is called by:
 19173 ;;		_UART1_Initialize
 19174 ;; This function uses a non-reentrant model
 19175 ;;
 19176                           
 19177                           	psect	text92
 19178  0156B0                     __ptext92:
 19179                           	callstack 0
 19180  0156B0                     _UART1_SetErrorHandler:
 19181                           	callstack 21
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;mcc_generated_files/uart1.c: 346:     UART1_ErrorHandler = interruptHandler;
 19185                           
 19186                           ; BSR set to: 0
 19187                           ;incstack = 0
 19188  0156B0  C060  F140         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 19189  0156B4  C061  F141         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 19190  0156B8  C062  F142         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 19191                           
 19192                           ; BSR set to: 0
 19193  0156BC  0012               	return		;funcret
 19194  0156BE                     __end_of_UART1_SetErrorHandler:
 19195                           	callstack 0
 19196                           
 19197 ;; *************** function _TMR6_Initialize *****************
 19198 ;; Defined at:
 19199 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 19200 ;; Parameters:    Size  Location     Type
 19201 ;;		None
 19202 ;; Auto vars:     Size  Location     Type
 19203 ;;		None
 19204 ;; Return value:  Size  Location     Type
 19205 ;;                  1    wreg      void 
 19206 ;; Registers used:
 19207 ;;		wreg, status,2, status,0, cstack
 19208 ;; Tracked objects:
 19209 ;;		On entry : 3F/3F
 19210 ;;		On exit  : 3F/0
 19211 ;;		Unchanged: 0/0
 19212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19217 ;;Total ram usage:        0 bytes
 19218 ;; Hardware stack levels used: 1
 19219 ;; Hardware stack levels required when called: 8
 19220 ;; This function calls:
 19221 ;;		_TMR6_SetInterruptHandler
 19222 ;; This function is called by:
 19223 ;;		_SYSTEM_Initialize
 19224 ;; This function uses a non-reentrant model
 19225 ;;
 19226                           
 19227                           	psect	text93
 19228  01519C                     __ptext93:
 19229                           	callstack 0
 19230  01519C                     _TMR6_Initialize:
 19231                           	callstack 21
 19232                           
 19233                           ; BSR set to: 63
 19234                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 19235                           
 19236                           ; BSR set to: 0
 19237                           ;incstack = 0
 19238  01519C  0E01               	movlw	1
 19239  01519E  6E96               	movwf	150,c	;volatile
 19240                           
 19241                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 19242  0151A0  0E20               	movlw	32
 19243  0151A2  6E95               	movwf	149,c	;volatile
 19244                           
 19245                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 19246  0151A4  0E00               	movlw	0
 19247  0151A6  6E97               	movwf	151,c	;volatile
 19248                           
 19249                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 19250  0151A8  0E4D               	movlw	77
 19251  0151AA  6E93               	movwf	147,c	;volatile
 19252                           
 19253                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 19254  0151AC  0E00               	movlw	0
 19255  0151AE  6E92               	movwf	146,c	;volatile
 19256                           
 19257                           ; BSR set to: 63
 19258                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 19259  0151B0  0139               	movlb	57	; () banked
 19260  0151B2  91A9               	bcf	169,0,b	;volatile
 19261                           
 19262                           ; BSR set to: 57
 19263                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 19264  0151B4  8199               	bsf	153,0,b	;volatile
 19265                           
 19266                           ; BSR set to: 57
 19267                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 19268  0151B6  0E64               	movlw	low _TMR6_DefaultInterruptHandler
 19269  0151B8  0100               	movlb	0	; () banked
 19270  0151BA  6F60               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 19271  0151BC  0E57               	movlw	high _TMR6_DefaultInterruptHandler
 19272  0151BE  6F61               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19273  0151C0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 19274  0151C2  6F62               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 19275  0151C4  EC5F  F0AB         	call	_TMR6_SetInterruptHandler	;wreg free
 19276                           
 19277                           ; BSR set to: 0
 19278                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 19279  0151C8  6894               	setf	148,c	;volatile
 19280                           
 19281                           ; BSR set to: 0
 19282  0151CA  0012               	return		;funcret
 19283  0151CC                     __end_of_TMR6_Initialize:
 19284                           	callstack 0
 19285                           
 19286 ;; *************** function _TMR6_SetInterruptHandler *****************
 19287 ;; Defined at:
 19288 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 19289 ;; Parameters:    Size  Location     Type
 19290 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 19291 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 19292 ;; Auto vars:     Size  Location     Type
 19293 ;;		None
 19294 ;; Return value:  Size  Location     Type
 19295 ;;                  1    wreg      void 
 19296 ;; Registers used:
 19297 ;;		wreg, status,2, status,0
 19298 ;; Tracked objects:
 19299 ;;		On entry : 3F/0
 19300 ;;		On exit  : 3F/0
 19301 ;;		Unchanged: 3F/0
 19302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19303 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19306 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19307 ;;Total ram usage:        3 bytes
 19308 ;; Hardware stack levels used: 1
 19309 ;; Hardware stack levels required when called: 7
 19310 ;; This function calls:
 19311 ;;		Nothing
 19312 ;; This function is called by:
 19313 ;;		_TMR6_Initialize
 19314 ;;		_main
 19315 ;; This function uses a non-reentrant model
 19316 ;;
 19317                           
 19318                           	psect	text94
 19319  0156BE                     __ptext94:
 19320                           	callstack 0
 19321  0156BE                     _TMR6_SetInterruptHandler:
 19322                           	callstack 23
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 19326                           
 19327                           ; BSR set to: 0
 19328                           ;incstack = 0
 19329  0156BE  C060  F14F         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 19330  0156C2  C061  F150         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 19331  0156C6  C062  F151         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 19332                           
 19333                           ; BSR set to: 0
 19334  0156CA  0012               	return		;funcret
 19335  0156CC                     __end_of_TMR6_SetInterruptHandler:
 19336                           	callstack 0
 19337                           
 19338 ;; *************** function _TMR5_Initialize *****************
 19339 ;; Defined at:
 19340 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 19341 ;; Parameters:    Size  Location     Type
 19342 ;;		None
 19343 ;; Auto vars:     Size  Location     Type
 19344 ;;		None
 19345 ;; Return value:  Size  Location     Type
 19346 ;;                  1    wreg      void 
 19347 ;; Registers used:
 19348 ;;		wreg, status,2, status,0, cstack
 19349 ;; Tracked objects:
 19350 ;;		On entry : 3F/3E
 19351 ;;		On exit  : 3F/0
 19352 ;;		Unchanged: 0/0
 19353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19358 ;;Total ram usage:        2 bytes
 19359 ;; Hardware stack levels used: 1
 19360 ;; Hardware stack levels required when called: 8
 19361 ;; This function calls:
 19362 ;;		_TMR5_SetInterruptHandler
 19363 ;; This function is called by:
 19364 ;;		_SYSTEM_Initialize
 19365 ;; This function uses a non-reentrant model
 19366 ;;
 19367                           
 19368                           	psect	text95
 19369  014B02                     __ptext95:
 19370                           	callstack 0
 19371  014B02                     _TMR5_Initialize:
 19372                           	callstack 21
 19373                           
 19374                           ; BSR set to: 62
 19375                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 19376                           
 19377                           ; BSR set to: 0
 19378                           ;incstack = 0
 19379  014B02  0E00               	movlw	0
 19380  014B04  6E9B               	movwf	155,c	;volatile
 19381                           
 19382                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 19383  014B06  0E00               	movlw	0
 19384  014B08  6E9C               	movwf	156,c	;volatile
 19385                           
 19386                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 19387  014B0A  0E02               	movlw	2
 19388  014B0C  6E9D               	movwf	157,c	;volatile
 19389                           
 19390                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 19391  014B0E  0E83               	movlw	131
 19392  014B10  6E99               	movwf	153,c	;volatile
 19393                           
 19394                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 19395  014B12  0E00               	movlw	0
 19396  014B14  6E98               	movwf	152,c	;volatile
 19397                           
 19398                           ; BSR set to: 62
 19399                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 19400  014B16  0139               	movlb	57	; () banked
 19401  014B18  9DA8               	bcf	168,6,b	;volatile
 19402                           
 19403                           ; BSR set to: 57
 19404                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 19405  014B1A  5098               	movf	152,w,c	;volatile
 19406  014B1C  006F FE64  F020    	movff	16281,??_TMR5_Initialize	;volatile
 19407  014B22  6A21               	clrf	(??_TMR5_Initialize+1)^0,c
 19408  014B24  C020  F021         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 19409  014B28  6A20               	clrf	??_TMR5_Initialize^0,c
 19410  014B2A  1020               	iorwf	??_TMR5_Initialize^0,w,c
 19411  014B2C  6E30               	movwf	_timer5ReloadVal^0,c	;volatile
 19412  014B2E  5021               	movf	(??_TMR5_Initialize+1)^0,w,c
 19413  014B30  6E31               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 19414                           
 19415                           ; BSR set to: 57
 19416                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 19417  014B32  8D98               	bsf	152,6,b	;volatile
 19418                           
 19419                           ; BSR set to: 57
 19420                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 19421  014B34  0E6A               	movlw	low _TMR5_DefaultInterruptHandler
 19422  014B36  0100               	movlb	0	; () banked
 19423  014B38  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 19424  014B3A  0E57               	movlw	high _TMR5_DefaultInterruptHandler
 19425  014B3C  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19426  014B3E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 19427  014B40  6F62               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 19428  014B42  EC66  F0AB         	call	_TMR5_SetInterruptHandler	;wreg free
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 19432  014B46  0E01               	movlw	1
 19433  014B48  6E9A               	movwf	154,c	;volatile
 19434                           
 19435                           ; BSR set to: 0
 19436  014B4A  0012               	return		;funcret
 19437  014B4C                     __end_of_TMR5_Initialize:
 19438                           	callstack 0
 19439                           
 19440 ;; *************** function _TMR5_SetInterruptHandler *****************
 19441 ;; Defined at:
 19442 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 19443 ;; Parameters:    Size  Location     Type
 19444 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 19445 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 19446 ;; Auto vars:     Size  Location     Type
 19447 ;;		None
 19448 ;; Return value:  Size  Location     Type
 19449 ;;                  1    wreg      void 
 19450 ;; Registers used:
 19451 ;;		wreg, status,2, status,0
 19452 ;; Tracked objects:
 19453 ;;		On entry : 3F/0
 19454 ;;		On exit  : 3F/0
 19455 ;;		Unchanged: 3F/0
 19456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19457 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19460 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19461 ;;Total ram usage:        3 bytes
 19462 ;; Hardware stack levels used: 1
 19463 ;; Hardware stack levels required when called: 7
 19464 ;; This function calls:
 19465 ;;		Nothing
 19466 ;; This function is called by:
 19467 ;;		_TMR5_Initialize
 19468 ;;		_main
 19469 ;; This function uses a non-reentrant model
 19470 ;;
 19471                           
 19472                           	psect	text96
 19473  0156CC                     __ptext96:
 19474                           	callstack 0
 19475  0156CC                     _TMR5_SetInterruptHandler:
 19476                           	callstack 23
 19477                           
 19478                           ; BSR set to: 0
 19479                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 19480                           
 19481                           ; BSR set to: 0
 19482                           ;incstack = 0
 19483  0156CC  C060  F14C         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 19484  0156D0  C061  F14D         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 19485  0156D4  C062  F14E         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 19486                           
 19487                           ; BSR set to: 0
 19488  0156D8  0012               	return		;funcret
 19489  0156DA                     __end_of_TMR5_SetInterruptHandler:
 19490                           	callstack 0
 19491                           
 19492 ;; *************** function _TMR2_Initialize *****************
 19493 ;; Defined at:
 19494 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 19495 ;; Parameters:    Size  Location     Type
 19496 ;;		None
 19497 ;; Auto vars:     Size  Location     Type
 19498 ;;		None
 19499 ;; Return value:  Size  Location     Type
 19500 ;;                  1    wreg      void 
 19501 ;; Registers used:
 19502 ;;		wreg, status,2
 19503 ;; Tracked objects:
 19504 ;;		On entry : 3F/3B
 19505 ;;		On exit  : 3F/39
 19506 ;;		Unchanged: 0/0
 19507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19512 ;;Total ram usage:        0 bytes
 19513 ;; Hardware stack levels used: 1
 19514 ;; Hardware stack levels required when called: 7
 19515 ;; This function calls:
 19516 ;;		Nothing
 19517 ;; This function is called by:
 19518 ;;		_SYSTEM_Initialize
 19519 ;; This function uses a non-reentrant model
 19520 ;;
 19521                           
 19522                           	psect	text97
 19523  0154EC                     __ptext97:
 19524                           	callstack 0
 19525  0154EC                     _TMR2_Initialize:
 19526                           	callstack 22
 19527                           
 19528                           ; BSR set to: 59
 19529                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 19530                           
 19531                           ; BSR set to: 0
 19532                           ;incstack = 0
 19533  0154EC  0E01               	movlw	1
 19534  0154EE  6EAE               	movwf	174,c	;volatile
 19535                           
 19536                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 19537  0154F0  0E00               	movlw	0
 19538  0154F2  6EAD               	movwf	173,c	;volatile
 19539                           
 19540                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 19541  0154F4  0E00               	movlw	0
 19542  0154F6  6EAF               	movwf	175,c	;volatile
 19543                           
 19544                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x9F;
 19545  0154F8  0E9F               	movlw	159
 19546  0154FA  6EAB               	movwf	171,c	;volatile
 19547                           
 19548                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 19549  0154FC  0E00               	movlw	0
 19550  0154FE  6EAA               	movwf	170,c	;volatile
 19551                           
 19552                           ; BSR set to: 59
 19553                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 19554  015500  0139               	movlb	57	; () banked
 19555  015502  95A4               	bcf	164,2,b	;volatile
 19556                           
 19557                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 19558  015504  0E80               	movlw	128
 19559  015506  6EAC               	movwf	172,c	;volatile
 19560                           
 19561                           ; BSR set to: 57
 19562  015508  0012               	return		;funcret
 19563  01550A                     __end_of_TMR2_Initialize:
 19564                           	callstack 0
 19565                           
 19566 ;; *************** function _SystemArbiter_Initialize *****************
 19567 ;; Defined at:
 19568 ;;		line 108 in file "mcc_generated_files/mcc.c"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;		None
 19571 ;; Auto vars:     Size  Location     Type
 19572 ;;		None
 19573 ;; Return value:  Size  Location     Type
 19574 ;;                  1    wreg      void 
 19575 ;; Registers used:
 19576 ;;		wreg, status,2
 19577 ;; Tracked objects:
 19578 ;;		On entry : 3F/3D
 19579 ;;		On exit  : 3F/39
 19580 ;;		Unchanged: 0/0
 19581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19586 ;;Total ram usage:        0 bytes
 19587 ;; Hardware stack levels used: 1
 19588 ;; Hardware stack levels required when called: 7
 19589 ;; This function calls:
 19590 ;;		Nothing
 19591 ;; This function is called by:
 19592 ;;		_SYSTEM_Initialize
 19593 ;; This function uses a non-reentrant model
 19594 ;;
 19595                           
 19596                           	psect	text98
 19597  0156DA                     __ptext98:
 19598                           	callstack 0
 19599  0156DA                     _SystemArbiter_Initialize:
 19600                           	callstack 22
 19601                           
 19602                           ; BSR set to: 61
 19603                           ;mcc_generated_files/mcc.c: 111:     PRLOCK = 0x55;
 19604                           
 19605                           ; BSR set to: 57
 19606                           ;incstack = 0
 19607  0156DA  0E55               	movlw	85
 19608  0156DC  0139               	movlb	57	; () banked
 19609  0156DE  6FEF               	movwf	239,b	;volatile
 19610                           
 19611                           ;mcc_generated_files/mcc.c: 112:     PRLOCK = 0xAA;
 19612  0156E0  0EAA               	movlw	170
 19613  0156E2  6FEF               	movwf	239,b	;volatile
 19614                           
 19615                           ; BSR set to: 57
 19616                           ;mcc_generated_files/mcc.c: 113:     PRLOCKbits.PRLOCKED = 1;
 19617  0156E4  81EF               	bsf	239,0,b	;volatile
 19618                           
 19619                           ; BSR set to: 57
 19620  0156E6  0012               	return		;funcret
 19621  0156E8                     __end_of_SystemArbiter_Initialize:
 19622                           	callstack 0
 19623                           
 19624 ;; *************** function _SPI1_Initialize *****************
 19625 ;; Defined at:
 19626 ;;		line 64 in file "mcc_generated_files/spi1.c"
 19627 ;; Parameters:    Size  Location     Type
 19628 ;;		None
 19629 ;; Auto vars:     Size  Location     Type
 19630 ;;		None
 19631 ;; Return value:  Size  Location     Type
 19632 ;;                  1    wreg      void 
 19633 ;; Registers used:
 19634 ;;		wreg, status,2
 19635 ;; Tracked objects:
 19636 ;;		On entry : 3F/39
 19637 ;;		On exit  : 3F/3D
 19638 ;;		Unchanged: 0/0
 19639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19644 ;;Total ram usage:        0 bytes
 19645 ;; Hardware stack levels used: 1
 19646 ;; Hardware stack levels required when called: 7
 19647 ;; This function calls:
 19648 ;;		Nothing
 19649 ;; This function is called by:
 19650 ;;		_SYSTEM_Initialize
 19651 ;; This function uses a non-reentrant model
 19652 ;;
 19653                           
 19654                           	psect	text99
 19655  01557C                     __ptext99:
 19656                           	callstack 0
 19657  01557C                     _SPI1_Initialize:
 19658                           	callstack 22
 19659                           
 19660                           ; BSR set to: 57
 19661                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 19662                           
 19663                           ; BSR set to: 57
 19664                           ;incstack = 0
 19665  01557C  0E02               	movlw	2
 19666  01557E  013D               	movlb	61	; () banked
 19667  015580  6F14               	movwf	20,b	;volatile
 19668                           
 19669                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 19670  015582  0E40               	movlw	64
 19671  015584  6F15               	movwf	21,b	;volatile
 19672                           
 19673                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 19674  015586  0E00               	movlw	0
 19675  015588  6F16               	movwf	22,b	;volatile
 19676                           
 19677                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 19678  01558A  0E00               	movlw	0
 19679  01558C  6F1C               	movwf	28,b	;volatile
 19680                           
 19681                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x50;
 19682  01558E  0E50               	movlw	80
 19683  015590  6F19               	movwf	25,b	;volatile
 19684                           
 19685                           ; BSR set to: 61
 19686                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 19687  015592  96C4               	bcf	196,3,c	;volatile
 19688                           
 19689                           ; BSR set to: 61
 19690  015594  0012               	return		;funcret
 19691  015596                     __end_of_SPI1_Initialize:
 19692                           	callstack 0
 19693                           
 19694 ;; *************** function _PWM6_Initialize *****************
 19695 ;; Defined at:
 19696 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 19697 ;; Parameters:    Size  Location     Type
 19698 ;;		None
 19699 ;; Auto vars:     Size  Location     Type
 19700 ;;		None
 19701 ;; Return value:  Size  Location     Type
 19702 ;;                  1    wreg      void 
 19703 ;; Registers used:
 19704 ;;		wreg, status,2
 19705 ;; Tracked objects:
 19706 ;;		On entry : 3F/39
 19707 ;;		On exit  : 3F/3F
 19708 ;;		Unchanged: 0/0
 19709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19714 ;;Total ram usage:        0 bytes
 19715 ;; Hardware stack levels used: 1
 19716 ;; Hardware stack levels required when called: 7
 19717 ;; This function calls:
 19718 ;;		Nothing
 19719 ;; This function is called by:
 19720 ;;		_SYSTEM_Initialize
 19721 ;; This function uses a non-reentrant model
 19722 ;;
 19723                           
 19724                           	psect	text100
 19725  0155DE                     __ptext100:
 19726                           	callstack 0
 19727  0155DE                     _PWM6_Initialize:
 19728                           	callstack 22
 19729                           
 19730                           ; BSR set to: 57
 19731                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 19732                           
 19733                           ; BSR set to: 61
 19734                           ;incstack = 0
 19735  0155DE  0E80               	movlw	128
 19736  0155E0  6E6A               	movwf	106,c	;volatile
 19737                           
 19738                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x4F;
 19739  0155E2  0E4F               	movlw	79
 19740  0155E4  6E69               	movwf	105,c	;volatile
 19741                           
 19742                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 19743  0155E6  0EC0               	movlw	192
 19744  0155E8  6E68               	movwf	104,c	;volatile
 19745                           
 19746                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 19747  0155EA  013F               	movlb	63	; () banked
 19748  0155EC  515F               	movf	95,w,b	;volatile
 19749  0155EE  0BF3               	andlw	-13
 19750  0155F0  0904               	iorlw	4
 19751  0155F2  6F5F               	movwf	95,b	;volatile
 19752                           
 19753                           ; BSR set to: 63
 19754  0155F4  0012               	return		;funcret
 19755  0155F6                     __end_of_PWM6_Initialize:
 19756                           	callstack 0
 19757                           
 19758 ;; *************** function _PWM5_Initialize *****************
 19759 ;; Defined at:
 19760 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;		None
 19763 ;; Auto vars:     Size  Location     Type
 19764 ;;		None
 19765 ;; Return value:  Size  Location     Type
 19766 ;;                  1    wreg      void 
 19767 ;; Registers used:
 19768 ;;		wreg, status,2
 19769 ;; Tracked objects:
 19770 ;;		On entry : 3F/0
 19771 ;;		On exit  : 3F/3F
 19772 ;;		Unchanged: 0/0
 19773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19778 ;;Total ram usage:        0 bytes
 19779 ;; Hardware stack levels used: 1
 19780 ;; Hardware stack levels required when called: 7
 19781 ;; This function calls:
 19782 ;;		Nothing
 19783 ;; This function is called by:
 19784 ;;		_SYSTEM_Initialize
 19785 ;; This function uses a non-reentrant model
 19786 ;;
 19787                           
 19788                           	psect	text101
 19789  0155F6                     __ptext101:
 19790                           	callstack 0
 19791  0155F6                     _PWM5_Initialize:
 19792                           	callstack 22
 19793                           
 19794                           ; BSR set to: 0
 19795                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 19796                           
 19797                           ; BSR set to: 63
 19798                           ;incstack = 0
 19799  0155F6  0E80               	movlw	128
 19800  0155F8  6E6E               	movwf	110,c	;volatile
 19801                           
 19802                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x4F;
 19803  0155FA  0E4F               	movlw	79
 19804  0155FC  6E6D               	movwf	109,c	;volatile
 19805                           
 19806                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 19807  0155FE  0EC0               	movlw	192
 19808  015600  6E6C               	movwf	108,c	;volatile
 19809                           
 19810                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 19811  015602  013F               	movlb	63	; () banked
 19812  015604  515F               	movf	95,w,b	;volatile
 19813  015606  0BFC               	andlw	-4
 19814  015608  0901               	iorlw	1
 19815  01560A  6F5F               	movwf	95,b	;volatile
 19816                           
 19817                           ; BSR set to: 63
 19818  01560C  0012               	return		;funcret
 19819  01560E                     __end_of_PWM5_Initialize:
 19820                           	callstack 0
 19821                           
 19822 ;; *************** function _PMD_Initialize *****************
 19823 ;; Defined at:
 19824 ;;		line 87 in file "mcc_generated_files/mcc.c"
 19825 ;; Parameters:    Size  Location     Type
 19826 ;;		None
 19827 ;; Auto vars:     Size  Location     Type
 19828 ;;		None
 19829 ;; Return value:  Size  Location     Type
 19830 ;;                  1    wreg      void 
 19831 ;; Registers used:
 19832 ;;		wreg, status,2
 19833 ;; Tracked objects:
 19834 ;;		On entry : 3F/39
 19835 ;;		On exit  : 3F/39
 19836 ;;		Unchanged: 0/0
 19837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19842 ;;Total ram usage:        0 bytes
 19843 ;; Hardware stack levels used: 1
 19844 ;; Hardware stack levels required when called: 7
 19845 ;; This function calls:
 19846 ;;		Nothing
 19847 ;; This function is called by:
 19848 ;;		_SYSTEM_Initialize
 19849 ;; This function uses a non-reentrant model
 19850 ;;
 19851                           
 19852                           	psect	text102
 19853  015410                     __ptext102:
 19854                           	callstack 0
 19855  015410                     _PMD_Initialize:
 19856                           	callstack 22
 19857                           
 19858                           ; BSR set to: 57
 19859                           ;mcc_generated_files/mcc.c: 90:     PMD0 = 0x00;
 19860                           
 19861                           ; BSR set to: 63
 19862                           ;incstack = 0
 19863  015410  0E00               	movlw	0
 19864  015412  6FC0               	movwf	192,b	;volatile
 19865                           
 19866                           ;mcc_generated_files/mcc.c: 92:     PMD1 = 0x00;
 19867  015414  0E00               	movlw	0
 19868  015416  6FC1               	movwf	193,b	;volatile
 19869                           
 19870                           ;mcc_generated_files/mcc.c: 94:     PMD2 = 0x00;
 19871  015418  0E00               	movlw	0
 19872  01541A  6FC2               	movwf	194,b	;volatile
 19873                           
 19874                           ;mcc_generated_files/mcc.c: 96:     PMD3 = 0x00;
 19875  01541C  0E00               	movlw	0
 19876  01541E  6FC3               	movwf	195,b	;volatile
 19877                           
 19878                           ;mcc_generated_files/mcc.c: 98:     PMD4 = 0x00;
 19879  015420  0E00               	movlw	0
 19880  015422  6FC4               	movwf	196,b	;volatile
 19881                           
 19882                           ;mcc_generated_files/mcc.c: 100:     PMD5 = 0x00;
 19883  015424  0E00               	movlw	0
 19884  015426  6FC5               	movwf	197,b	;volatile
 19885                           
 19886                           ;mcc_generated_files/mcc.c: 102:     PMD6 = 0x00;
 19887  015428  0E00               	movlw	0
 19888  01542A  6FC6               	movwf	198,b	;volatile
 19889                           
 19890                           ;mcc_generated_files/mcc.c: 104:     PMD7 = 0x00;
 19891  01542C  0E00               	movlw	0
 19892  01542E  6FC7               	movwf	199,b	;volatile
 19893                           
 19894                           ; BSR set to: 57
 19895  015430  0012               	return		;funcret
 19896  015432                     __end_of_PMD_Initialize:
 19897                           	callstack 0
 19898                           
 19899 ;; *************** function _PIN_MANAGER_Initialize *****************
 19900 ;; Defined at:
 19901 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 19902 ;; Parameters:    Size  Location     Type
 19903 ;;		None
 19904 ;; Auto vars:     Size  Location     Type
 19905 ;;		None
 19906 ;; Return value:  Size  Location     Type
 19907 ;;                  1    wreg      void 
 19908 ;; Registers used:
 19909 ;;		wreg, status,2
 19910 ;; Tracked objects:
 19911 ;;		On entry : 3F/39
 19912 ;;		On exit  : 3F/3A
 19913 ;;		Unchanged: 0/0
 19914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19919 ;;Total ram usage:        0 bytes
 19920 ;; Hardware stack levels used: 1
 19921 ;; Hardware stack levels required when called: 7
 19922 ;; This function calls:
 19923 ;;		Nothing
 19924 ;; This function is called by:
 19925 ;;		_SYSTEM_Initialize
 19926 ;; This function uses a non-reentrant model
 19927 ;;
 19928                           
 19929                           	psect	text103
 19930  013D00                     __ptext103:
 19931                           	callstack 0
 19932  013D00                     _PIN_MANAGER_Initialize:
 19933                           	callstack 22
 19934                           
 19935                           ; BSR set to: 57
 19936                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 19937                           
 19938                           ; BSR set to: 57
 19939                           ;incstack = 0
 19940  013D00  0E00               	movlw	0
 19941  013D02  6EBE               	movwf	190,c	;volatile
 19942                           
 19943                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 19944  013D04  0E11               	movlw	17
 19945  013D06  6EBD               	movwf	189,c	;volatile
 19946                           
 19947                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 19948  013D08  0E20               	movlw	32
 19949  013D0A  6EBA               	movwf	186,c	;volatile
 19950                           
 19951                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 19952  013D0C  0E00               	movlw	0
 19953  013D0E  6EBF               	movwf	191,c	;volatile
 19954                           
 19955                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 19956  013D10  0E00               	movlw	0
 19957  013D12  6EBB               	movwf	187,c	;volatile
 19958                           
 19959                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x07;
 19960  013D14  0E07               	movlw	7
 19961  013D16  6EBC               	movwf	188,c	;volatile
 19962                           
 19963                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 19964  013D18  0E02               	movlw	2
 19965  013D1A  6EC6               	movwf	198,c	;volatile
 19966                           
 19967                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0B;
 19968  013D1C  0E0B               	movlw	11
 19969  013D1E  6EC7               	movwf	199,c	;volatile
 19970                           
 19971                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 19972  013D20  0EDF               	movlw	223
 19973  013D22  6EC2               	movwf	194,c	;volatile
 19974                           
 19975                           ; BSR set to: 57
 19976                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 19977  013D24  68C3               	setf	195,c	;volatile
 19978                           
 19979                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 19980  013D26  0E90               	movlw	144
 19981  013D28  6EC4               	movwf	196,c	;volatile
 19982                           
 19983                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x08;
 19984  013D2A  0E08               	movlw	8
 19985  013D2C  6EC5               	movwf	197,c	;volatile
 19986                           
 19987                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x08;
 19988  013D2E  0E08               	movlw	8
 19989  013D30  013A               	movlb	58	; () banked
 19990  013D32  6F70               	movwf	112,b	;volatile
 19991                           
 19992                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x00;
 19993  013D34  0E00               	movlw	0
 19994  013D36  6F60               	movwf	96,b	;volatile
 19995                           
 19996                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 19997  013D38  0EFE               	movlw	254
 19998  013D3A  6F50               	movwf	80,b	;volatile
 19999                           
 20000                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 20001  013D3C  0E02               	movlw	2
 20002  013D3E  6F80               	movwf	128,b	;volatile
 20003                           
 20004                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0B;
 20005  013D40  0E0B               	movlw	11
 20006  013D42  6F90               	movwf	144,b	;volatile
 20007                           
 20008                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 20009  013D44  0E8F               	movlw	143
 20010  013D46  6F40               	movwf	64,b	;volatile
 20011                           
 20012                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 20013  013D48  0E00               	movlw	0
 20014  013D4A  6F71               	movwf	113,b	;volatile
 20015                           
 20016                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 20017  013D4C  0E00               	movlw	0
 20018  013D4E  6F91               	movwf	145,b	;volatile
 20019                           
 20020                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 20021  013D50  0E00               	movlw	0
 20022  013D52  6F81               	movwf	129,b	;volatile
 20023                           
 20024                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 20025  013D54  0E01               	movlw	1
 20026  013D56  6F51               	movwf	81,b	;volatile
 20027                           
 20028                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 20029  013D58  0E50               	movlw	80
 20030  013D5A  6F41               	movwf	65,b	;volatile
 20031                           
 20032                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 20033  013D5C  0E00               	movlw	0
 20034  013D5E  6F61               	movwf	97,b	;volatile
 20035                           
 20036                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 20037  013D60  0E00               	movlw	0
 20038  013D62  6F5A               	movwf	90,b	;volatile
 20039                           
 20040                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 20041  013D64  0E00               	movlw	0
 20042  013D66  6F5B               	movwf	91,b	;volatile
 20043                           
 20044                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 20045  013D68  0E00               	movlw	0
 20046  013D6A  6F6A               	movwf	106,b	;volatile
 20047                           
 20048                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 20049  013D6C  0E00               	movlw	0
 20050  013D6E  6F6B               	movwf	107,b	;volatile
 20051                           
 20052                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 20053  013D70  0E00               	movlw	0
 20054  013D72  6F7A               	movwf	122,b	;volatile
 20055                           
 20056                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 20057  013D74  0E00               	movlw	0
 20058  013D76  6F7B               	movwf	123,b	;volatile
 20059                           
 20060                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 20061  013D78  0E00               	movlw	0
 20062  013D7A  6F82               	movwf	130,b	;volatile
 20063                           
 20064                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 20065  013D7C  0E00               	movlw	0
 20066  013D7E  6F92               	movwf	146,b	;volatile
 20067                           
 20068                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 20069  013D80  0E00               	movlw	0
 20070  013D82  6F42               	movwf	66,b	;volatile
 20071                           
 20072                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 20073  013D84  0E00               	movlw	0
 20074  013D86  6F52               	movwf	82,b	;volatile
 20075                           
 20076                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 20077  013D88  0E00               	movlw	0
 20078  013D8A  6F62               	movwf	98,b	;volatile
 20079                           
 20080                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 20081  013D8C  0E00               	movlw	0
 20082  013D8E  6F72               	movwf	114,b	;volatile
 20083                           
 20084                           ; BSR set to: 58
 20085                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 20086  013D90  6943               	setf	67,b	;volatile
 20087                           
 20088                           ; BSR set to: 58
 20089                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 20090  013D92  6953               	setf	83,b	;volatile
 20091                           
 20092                           ; BSR set to: 58
 20093                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 20094  013D94  6963               	setf	99,b	;volatile
 20095                           
 20096                           ; BSR set to: 58
 20097                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 20098  013D96  6973               	setf	115,b	;volatile
 20099                           
 20100                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 20101  013D98  0E07               	movlw	7
 20102  013D9A  6F83               	movwf	131,b	;volatile
 20103                           
 20104                           ; BSR set to: 58
 20105                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 20106  013D9C  6993               	setf	147,b	;volatile
 20107                           
 20108                           ; BSR set to: 58
 20109                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 20110  013D9E  6944               	setf	68,b	;volatile
 20111                           
 20112                           ; BSR set to: 58
 20113                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 20114  013DA0  6954               	setf	84,b	;volatile
 20115                           
 20116                           ; BSR set to: 58
 20117                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 20118  013DA2  6964               	setf	100,b	;volatile
 20119                           
 20120                           ; BSR set to: 58
 20121                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 20122  013DA4  6974               	setf	116,b	;volatile
 20123                           
 20124                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 20125  013DA6  0E0F               	movlw	15
 20126  013DA8  6F84               	movwf	132,b	;volatile
 20127                           
 20128                           ; BSR set to: 58
 20129                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 20130  013DAA  6994               	setf	148,b	;volatile
 20131                           
 20132                           ;mcc_generated_files/pin_manager.c: 144:     RD2PPS = 0x0E;
 20133  013DAC  0E0E               	movlw	14
 20134  013DAE  6F1A               	movwf	26,b	;volatile
 20135                           
 20136                           ;mcc_generated_files/pin_manager.c: 145:     SPI1SCKPPS = 0x13;
 20137  013DB0  0E13               	movlw	19
 20138  013DB2  6FDE               	movwf	222,b	;volatile
 20139                           
 20140                           ;mcc_generated_files/pin_manager.c: 146:     RC3PPS = 0x1E;
 20141  013DB4  0E1E               	movlw	30
 20142  013DB6  6F13               	movwf	19,b	;volatile
 20143                           
 20144                           ;mcc_generated_files/pin_manager.c: 147:     RC5PPS = 0x1F;
 20145  013DB8  0E1F               	movlw	31
 20146  013DBA  6F15               	movwf	21,b	;volatile
 20147                           
 20148                           ;mcc_generated_files/pin_manager.c: 148:     RC6PPS = 0x13;
 20149  013DBC  0E13               	movlw	19
 20150  013DBE  6F16               	movwf	22,b	;volatile
 20151                           
 20152                           ;mcc_generated_files/pin_manager.c: 149:     U1RXPPS = 0x17;
 20153  013DC0  0E17               	movlw	23
 20154  013DC2  6FE5               	movwf	229,b	;volatile
 20155                           
 20156                           ;mcc_generated_files/pin_manager.c: 150:     RF2PPS = 0x0D;
 20157  013DC4  0E0D               	movlw	13
 20158  013DC6  6F2A               	movwf	42,b	;volatile
 20159                           
 20160                           ;mcc_generated_files/pin_manager.c: 151:     SPI1SDIPPS = 0x14;
 20161  013DC8  0E14               	movlw	20
 20162  013DCA  6FDF               	movwf	223,b	;volatile
 20163                           
 20164                           ; BSR set to: 58
 20165  013DCC  0012               	return		;funcret
 20166  013DCE                     __end_of_PIN_MANAGER_Initialize:
 20167                           	callstack 0
 20168                           
 20169 ;; *************** function _OSCILLATOR_Initialize *****************
 20170 ;; Defined at:
 20171 ;;		line 69 in file "mcc_generated_files/mcc.c"
 20172 ;; Parameters:    Size  Location     Type
 20173 ;;		None
 20174 ;; Auto vars:     Size  Location     Type
 20175 ;;		None
 20176 ;; Return value:  Size  Location     Type
 20177 ;;                  1    wreg      void 
 20178 ;; Registers used:
 20179 ;;		wreg, status,2
 20180 ;; Tracked objects:
 20181 ;;		On entry : 3F/3A
 20182 ;;		On exit  : 3F/39
 20183 ;;		Unchanged: 0/0
 20184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20189 ;;Total ram usage:        0 bytes
 20190 ;; Hardware stack levels used: 1
 20191 ;; Hardware stack levels required when called: 7
 20192 ;; This function calls:
 20193 ;;		Nothing
 20194 ;; This function is called by:
 20195 ;;		_SYSTEM_Initialize
 20196 ;; This function uses a non-reentrant model
 20197 ;;
 20198                           
 20199                           	psect	text104
 20200  015546                     __ptext104:
 20201                           	callstack 0
 20202  015546                     _OSCILLATOR_Initialize:
 20203                           	callstack 22
 20204                           
 20205                           ; BSR set to: 58
 20206                           ;mcc_generated_files/mcc.c: 72:     OSCCON1 = 0x20;
 20207                           
 20208                           ; BSR set to: 58
 20209                           ;incstack = 0
 20210  015546  0E20               	movlw	32
 20211  015548  0139               	movlb	57	; () banked
 20212  01554A  6FD9               	movwf	217,b	;volatile
 20213                           
 20214                           ;mcc_generated_files/mcc.c: 74:     OSCCON3 = 0x00;
 20215  01554C  0E00               	movlw	0
 20216  01554E  6FDB               	movwf	219,b	;volatile
 20217                           
 20218                           ;mcc_generated_files/mcc.c: 76:     OSCEN = 0x00;
 20219  015550  0E00               	movlw	0
 20220  015552  6FDD               	movwf	221,b	;volatile
 20221                           
 20222                           ;mcc_generated_files/mcc.c: 78:     OSCFRQ = 0x05;
 20223  015554  0E05               	movlw	5
 20224  015556  6FDF               	movwf	223,b	;volatile
 20225                           
 20226                           ;mcc_generated_files/mcc.c: 80:     OSCTUNE = 0x00;
 20227  015558  0E00               	movlw	0
 20228  01555A  6FDE               	movwf	222,b	;volatile
 20229  01555C                     l209:
 20230                           
 20231                           ; BSR set to: 57
 20232                           ;mcc_generated_files/mcc.c: 82:     while(PLLR == 0)
 20233  01555C  B1DC               	btfsc	220,0,b	;volatile
 20234  01555E  0012               	return	
 20235  015560  D7FD               	goto	l209
 20236  015562                     __end_of_OSCILLATOR_Initialize:
 20237                           	callstack 0
 20238                           
 20239 ;; *************** function _INTERRUPT_Initialize *****************
 20240 ;; Defined at:
 20241 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 20242 ;; Parameters:    Size  Location     Type
 20243 ;;		None
 20244 ;; Auto vars:     Size  Location     Type
 20245 ;;  state           1   31[COMRAM] _Bool 
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  1    wreg      void 
 20248 ;; Registers used:
 20249 ;;		wreg, status,2
 20250 ;; Tracked objects:
 20251 ;;		On entry : 3F/0
 20252 ;;		On exit  : 3F/39
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20258 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20259 ;;Total ram usage:        1 bytes
 20260 ;; Hardware stack levels used: 1
 20261 ;; Hardware stack levels required when called: 7
 20262 ;; This function calls:
 20263 ;;		Nothing
 20264 ;; This function is called by:
 20265 ;;		_SYSTEM_Initialize
 20266 ;; This function uses a non-reentrant model
 20267 ;;
 20268                           
 20269                           	psect	text105
 20270  014B4C                     __ptext105:
 20271                           	callstack 0
 20272  014B4C                     _INTERRUPT_Initialize:
 20273                           	callstack 22
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 20277                           
 20278                           ; BSR set to: 57
 20279                           ;incstack = 0
 20280  014B4C  8AD2               	bsf	210,5,c	;volatile
 20281                           
 20282                           ; BSR set to: 0
 20283                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 20284  014B4E  0E00               	movlw	0
 20285  014B50  BED2               	btfsc	16338,7,c	;volatile
 20286  014B52  0E01               	movlw	1
 20287  014B54  6E20               	movwf	INTERRUPT_Initialize@state^0,c
 20288                           
 20289                           ; BSR set to: 0
 20290                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 20291  014B56  9ED2               	bcf	16338,7,c	;volatile
 20292                           
 20293                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 20294  014B58  0E55               	movlw	85
 20295  014B5A  6ED4               	movwf	212,c	;volatile
 20296                           
 20297                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 20298  014B5C  0EAA               	movlw	170
 20299  014B5E  6ED4               	movwf	212,c	;volatile
 20300                           
 20301                           ; BSR set to: 0
 20302                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 20303  014B60  90D4               	bcf	212,0,c	;volatile
 20304                           
 20305                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 20306  014B62  0E00               	movlw	0
 20307  014B64  6ED7               	movwf	215,c	;volatile
 20308                           
 20309                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 20310  014B66  0E00               	movlw	0
 20311  014B68  6ED6               	movwf	214,c	;volatile
 20312                           
 20313                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 20314  014B6A  0E08               	movlw	8
 20315  014B6C  6ED5               	movwf	213,c	;volatile
 20316                           
 20317                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 20318  014B6E  0E55               	movlw	85
 20319  014B70  6ED4               	movwf	212,c	;volatile
 20320                           
 20321                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 20322  014B72  0EAA               	movlw	170
 20323  014B74  6ED4               	movwf	212,c	;volatile
 20324                           
 20325                           ; BSR set to: 0
 20326                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 20327  014B76  80D4               	bsf	212,0,c	;volatile
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 20331  014B78  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 20332  014B7A  D002               	bra	u6445
 20333  014B7C  9ED2               	bcf	16338,7,c	;volatile
 20334  014B7E  D001               	bra	u6446
 20335  014B80                     u6445:
 20336  014B80  8ED2               	bsf	16338,7,c	;volatile
 20337  014B82                     u6446:
 20338                           
 20339                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1SCNTIP = 1;
 20340  014B82  0139               	movlb	57	; () banked
 20341  014B84  8182               	bsf	130,0,b	;volatile
 20342                           
 20343                           ; BSR set to: 57
 20344                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1IP = 1;
 20345  014B86  8D83               	bsf	131,6,b	;volatile
 20346                           
 20347                           ; BSR set to: 57
 20348                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 0;
 20349  014B88  9983               	bcf	131,4,b	;volatile
 20350                           
 20351                           ; BSR set to: 57
 20352                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1EIP = 1;
 20353  014B8A  8B83               	bsf	131,5,b	;volatile
 20354                           
 20355                           ; BSR set to: 57
 20356                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR3bits.U1RXIP = 0;
 20357  014B8C  9783               	bcf	131,3,b	;volatile
 20358                           
 20359                           ; BSR set to: 57
 20360                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR9bits.TMR6IP = 1;
 20361  014B8E  8189               	bsf	137,0,b	;volatile
 20362                           
 20363                           ; BSR set to: 57
 20364                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5IP = 1;
 20365  014B90  8D88               	bsf	136,6,b	;volatile
 20366                           
 20367                           ; BSR set to: 57
 20368                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.ADIP = 1;
 20369  014B92  8581               	bsf	129,2,b	;volatile
 20370                           
 20371                           ; BSR set to: 57
 20372  014B94  0012               	return		;funcret
 20373  014B96                     __end_of_INTERRUPT_Initialize:
 20374                           	callstack 0
 20375                           
 20376 ;; *************** function _DMA1_Initialize *****************
 20377 ;; Defined at:
 20378 ;;		line 60 in file "mcc_generated_files/dma1.c"
 20379 ;; Parameters:    Size  Location     Type
 20380 ;;		None
 20381 ;; Auto vars:     Size  Location     Type
 20382 ;;		None
 20383 ;; Return value:  Size  Location     Type
 20384 ;;                  1    wreg      void 
 20385 ;; Registers used:
 20386 ;;		wreg, status,2, status,0, cstack
 20387 ;; Tracked objects:
 20388 ;;		On entry : 3F/0
 20389 ;;		On exit  : 3F/3B
 20390 ;;		Unchanged: 0/0
 20391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20396 ;;Total ram usage:        0 bytes
 20397 ;; Hardware stack levels used: 1
 20398 ;; Hardware stack levels required when called: 8
 20399 ;; This function calls:
 20400 ;;		_DMA1_SetSCNTIInterruptHandler
 20401 ;; This function is called by:
 20402 ;;		_SYSTEM_Initialize
 20403 ;; This function uses a non-reentrant model
 20404 ;;
 20405                           
 20406                           	psect	text106
 20407  0147C0                     __ptext106:
 20408                           	callstack 0
 20409  0147C0                     _DMA1_Initialize:
 20410                           	callstack 21
 20411                           
 20412                           ; BSR set to: 0
 20413                           ;mcc_generated_files/dma1.c: 63:     DMA1SSA = &SrcVarName0;
 20414                           
 20415                           ; BSR set to: 57
 20416                           ;incstack = 0
 20417  0147C0  0E62               	movlw	low _SrcVarName0
 20418  0147C2  013B               	movlb	59	; () banked
 20419  0147C4  6FF9               	movwf	249,b	;volatile
 20420  0147C6  0E01               	movlw	high _SrcVarName0
 20421  0147C8  6FFA               	movwf	250,b	;volatile
 20422  0147CA  0E00               	movlw	low (_SrcVarName0 shr (0+16))
 20423  0147CC  6FFB               	movwf	251,b	;volatile
 20424                           
 20425                           ;mcc_generated_files/dma1.c: 65:     DMA1DSA = &SPI1TXB;
 20426  0147CE  0E3D               	movlw	61
 20427  0147D0  6FF1               	movwf	241,b	;volatile
 20428  0147D2  0E11               	movlw	17
 20429  0147D4  6FF0               	movwf	240,b	;volatile
 20430                           
 20431                           ;mcc_generated_files/dma1.c: 67:     DMA1CON1 = 0x03;
 20432  0147D6  0E03               	movlw	3
 20433  0147D8  6FFD               	movwf	253,b	;volatile
 20434                           
 20435                           ;mcc_generated_files/dma1.c: 69:     DMA1SSZ = 1;
 20436  0147DA  0E00               	movlw	0
 20437  0147DC  6FF8               	movwf	248,b	;volatile
 20438  0147DE  0E01               	movlw	1
 20439  0147E0  6FF7               	movwf	247,b	;volatile
 20440                           
 20441                           ;mcc_generated_files/dma1.c: 71:     DMA1DSZ = 1;
 20442  0147E2  0E00               	movlw	0
 20443  0147E4  6FEF               	movwf	239,b	;volatile
 20444  0147E6  0E01               	movlw	1
 20445  0147E8  6FEE               	movwf	238,b	;volatile
 20446                           
 20447                           ;mcc_generated_files/dma1.c: 73:     DMA1SIRQ = 0x15;
 20448  0147EA  0E15               	movlw	21
 20449  0147EC  6FFF               	movwf	255,b	;volatile
 20450                           
 20451                           ;mcc_generated_files/dma1.c: 75:     DMA1AIRQ = 0x00;
 20452  0147EE  0E00               	movlw	0
 20453  0147F0  6FFE               	movwf	254,b	;volatile
 20454                           
 20455                           ; BSR set to: 59
 20456                           ;mcc_generated_files/dma1.c: 78:     PIR2bits.DMA1DCNTIF = 0;
 20457  0147F2  0139               	movlb	57	; () banked
 20458  0147F4  93A2               	bcf	162,1,b	;volatile
 20459                           
 20460                           ; BSR set to: 57
 20461                           ;mcc_generated_files/dma1.c: 80:     PIR2bits.DMA1SCNTIF = 0;
 20462  0147F6  91A2               	bcf	162,0,b	;volatile
 20463                           
 20464                           ; BSR set to: 57
 20465                           ;mcc_generated_files/dma1.c: 82:     PIR2bits.DMA1AIF = 0;
 20466  0147F8  97A2               	bcf	162,3,b	;volatile
 20467                           
 20468                           ; BSR set to: 57
 20469                           ;mcc_generated_files/dma1.c: 84:     PIR2bits.DMA1ORIF =0;
 20470  0147FA  95A2               	bcf	162,2,b	;volatile
 20471                           
 20472                           ; BSR set to: 57
 20473                           ;mcc_generated_files/dma1.c: 86:     PIE2bits.DMA1DCNTIE = 0;
 20474  0147FC  9392               	bcf	146,1,b	;volatile
 20475                           
 20476                           ; BSR set to: 57
 20477                           ;mcc_generated_files/dma1.c: 87:     PIE2bits.DMA1SCNTIE = 1;
 20478  0147FE  8192               	bsf	146,0,b	;volatile
 20479                           
 20480                           ; BSR set to: 57
 20481                           ;mcc_generated_files/dma1.c: 88:  DMA1_SetSCNTIInterruptHandler(DMA1_DefaultInterruptHan
      +                          dler);
 20482  014800  0E6C               	movlw	low _DMA1_DefaultInterruptHandler
 20483  014802  0100               	movlb	0	; () banked
 20484  014804  6F60               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler& (0+255),b
 20485  014806  0E57               	movlw	high _DMA1_DefaultInterruptHandler
 20486  014808  6F61               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)& (0+255),b
 20487  01480A  0E01               	movlw	low (_DMA1_DefaultInterruptHandler shr (0+16))
 20488  01480C  6F62               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)& (0+255),b
 20489  01480E  EC74  F0AB         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
 20490                           
 20491                           ; BSR set to: 0
 20492                           ;mcc_generated_files/dma1.c: 89:     PIE2bits.DMA1AIE = 0;
 20493  014812  0139               	movlb	57	; () banked
 20494  014814  9792               	bcf	146,3,b	;volatile
 20495                           
 20496                           ; BSR set to: 57
 20497                           ;mcc_generated_files/dma1.c: 90:     PIE2bits.DMA1ORIE = 0;
 20498  014816  9592               	bcf	146,2,b	;volatile
 20499                           
 20500                           ; BSR set to: 57
 20501                           ;mcc_generated_files/dma1.c: 93:     DMA1CON0 = 0xC0;
 20502  014818  0EC0               	movlw	192
 20503  01481A  013B               	movlb	59	; () banked
 20504  01481C  6FFC               	movwf	252,b	;volatile
 20505                           
 20506                           ; BSR set to: 59
 20507  01481E  0012               	return		;funcret
 20508  014820                     __end_of_DMA1_Initialize:
 20509                           	callstack 0
 20510                           
 20511 ;; *************** function _DMA1_SetSCNTIInterruptHandler *****************
 20512 ;; Defined at:
 20513 ;;		line 179 in file "mcc_generated_files/dma1.c"
 20514 ;; Parameters:    Size  Location     Type
 20515 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 20516 ;;		 -> source_dma_done(1), DMA1_DefaultInterruptHandler(1), 
 20517 ;; Auto vars:     Size  Location     Type
 20518 ;;		None
 20519 ;; Return value:  Size  Location     Type
 20520 ;;                  1    wreg      void 
 20521 ;; Registers used:
 20522 ;;		wreg, status,2, status,0
 20523 ;; Tracked objects:
 20524 ;;		On entry : 3F/0
 20525 ;;		On exit  : 3F/0
 20526 ;;		Unchanged: 3F/0
 20527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20528 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20531 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20532 ;;Total ram usage:        3 bytes
 20533 ;; Hardware stack levels used: 1
 20534 ;; Hardware stack levels required when called: 7
 20535 ;; This function calls:
 20536 ;;		Nothing
 20537 ;; This function is called by:
 20538 ;;		_DMA1_Initialize
 20539 ;;		_main
 20540 ;; This function uses a non-reentrant model
 20541 ;;
 20542                           
 20543                           	psect	text107
 20544  0156E8                     __ptext107:
 20545                           	callstack 0
 20546  0156E8                     _DMA1_SetSCNTIInterruptHandler:
 20547                           	callstack 21
 20548                           
 20549                           ; BSR set to: 0
 20550                           ;mcc_generated_files/dma1.c: 179: void DMA1_SetSCNTIInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/dma1.c: 180: {;mcc_generated_files/dma1.c: 181:   DMA1
      +                          _SCNTI_InterruptHandler = InterruptHandler;
 20551                           
 20552                           ; BSR set to: 59
 20553                           ;incstack = 0
 20554  0156E8  C060  F149         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler,_DMA1_SCNTI_InterruptHandler
 20555  0156EC  C061  F14A         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+1,_DMA1_SCNTI_InterruptHandler+1
 20556  0156F0  C062  F14B         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+2,_DMA1_SCNTI_InterruptHandler+2
 20557                           
 20558                           ; BSR set to: 0
 20559  0156F4  0012               	return		;funcret
 20560  0156F6                     __end_of_DMA1_SetSCNTIInterruptHandler:
 20561                           	callstack 0
 20562                           
 20563 ;; *************** function _DAC1_Initialize *****************
 20564 ;; Defined at:
 20565 ;;		line 58 in file "mcc_generated_files/dac1.c"
 20566 ;; Parameters:    Size  Location     Type
 20567 ;;		None
 20568 ;; Auto vars:     Size  Location     Type
 20569 ;;		None
 20570 ;; Return value:  Size  Location     Type
 20571 ;;                  1    wreg      void 
 20572 ;; Registers used:
 20573 ;;		wreg, status,2
 20574 ;; Tracked objects:
 20575 ;;		On entry : 3F/0
 20576 ;;		On exit  : 3F/3E
 20577 ;;		Unchanged: 0/0
 20578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20583 ;;Total ram usage:        0 bytes
 20584 ;; Hardware stack levels used: 1
 20585 ;; Hardware stack levels required when called: 7
 20586 ;; This function calls:
 20587 ;;		Nothing
 20588 ;; This function is called by:
 20589 ;;		_SYSTEM_Initialize
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text108
 20594  015712                     __ptext108:
 20595                           	callstack 0
 20596  015712                     _DAC1_Initialize:
 20597                           	callstack 22
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 20601                           
 20602                           ; BSR set to: 0
 20603                           ;incstack = 0
 20604  015712  0EA4               	movlw	164
 20605  015714  013E               	movlb	62	; () banked
 20606  015716  6F9E               	movwf	158,b	;volatile
 20607                           
 20608                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 20609  015718  0E1F               	movlw	31
 20610  01571A  6F9C               	movwf	156,b	;volatile
 20611                           
 20612                           ; BSR set to: 62
 20613  01571C  0012               	return		;funcret
 20614  01571E                     __end_of_DAC1_Initialize:
 20615                           	callstack 0
 20616                           
 20617 ;; *************** function _ADCC_Initialize *****************
 20618 ;; Defined at:
 20619 ;;		line 64 in file "mcc_generated_files/adcc.c"
 20620 ;; Parameters:    Size  Location     Type
 20621 ;;		None
 20622 ;; Auto vars:     Size  Location     Type
 20623 ;;		None
 20624 ;; Return value:  Size  Location     Type
 20625 ;;                  1    wreg      void 
 20626 ;; Registers used:
 20627 ;;		wreg, status,2, status,0, cstack
 20628 ;; Tracked objects:
 20629 ;;		On entry : 3F/39
 20630 ;;		On exit  : 3F/0
 20631 ;;		Unchanged: 0/0
 20632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20637 ;;Total ram usage:        0 bytes
 20638 ;; Hardware stack levels used: 1
 20639 ;; Hardware stack levels required when called: 8
 20640 ;; This function calls:
 20641 ;;		_ADCC_SetADIInterruptHandler
 20642 ;; This function is called by:
 20643 ;;		_SYSTEM_Initialize
 20644 ;; This function uses a non-reentrant model
 20645 ;;
 20646                           
 20647                           	psect	text109
 20648  01447C                     __ptext109:
 20649                           	callstack 0
 20650  01447C                     _ADCC_Initialize:
 20651                           	callstack 21
 20652                           
 20653                           ; BSR set to: 57
 20654                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 20655                           
 20656                           ; BSR set to: 62
 20657                           ;incstack = 0
 20658  01447C  0E00               	movlw	0
 20659  01447E  013E               	movlb	62	; () banked
 20660  014480  6FDE               	movwf	222,b	;volatile
 20661                           
 20662                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 20663  014482  0E00               	movlw	0
 20664  014484  6FDF               	movwf	223,b	;volatile
 20665                           
 20666                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 20667  014486  0E00               	movlw	0
 20668  014488  6FE0               	movwf	224,b	;volatile
 20669                           
 20670                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 20671  01448A  0E00               	movlw	0
 20672  01448C  6FE1               	movwf	225,b	;volatile
 20673                           
 20674                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 20675  01448E  0E00               	movlw	0
 20676  014490  6FE4               	movwf	228,b	;volatile
 20677                           
 20678                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 20679  014492  0E00               	movlw	0
 20680  014494  6FE5               	movwf	229,b	;volatile
 20681                           
 20682                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 20683  014496  0E00               	movlw	0
 20684  014498  6FEA               	movwf	234,b	;volatile
 20685                           
 20686                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 20687  01449A  0E00               	movlw	0
 20688  01449C  6FEC               	movwf	236,b	;volatile
 20689                           
 20690                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 20691  01449E  0E00               	movlw	0
 20692  0144A0  6FF1               	movwf	241,b	;volatile
 20693                           
 20694                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 20695  0144A2  0E10               	movlw	16
 20696  0144A4  6FF3               	movwf	243,b	;volatile
 20697                           
 20698                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 20699  0144A6  0E00               	movlw	0
 20700  0144A8  6FF4               	movwf	244,b	;volatile
 20701                           
 20702                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 20703  0144AA  0E00               	movlw	0
 20704  0144AC  6FF5               	movwf	245,b	;volatile
 20705                           
 20706                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 20707  0144AE  0E00               	movlw	0
 20708  0144B0  6FF6               	movwf	246,b	;volatile
 20709                           
 20710                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 20711  0144B2  0E00               	movlw	0
 20712  0144B4  6FF7               	movwf	247,b	;volatile
 20713                           
 20714                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 20715  0144B6  0E00               	movlw	0
 20716  0144B8  6FF9               	movwf	249,b	;volatile
 20717                           
 20718                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 20719  0144BA  0E00               	movlw	0
 20720  0144BC  6FFA               	movwf	250,b	;volatile
 20721                           
 20722                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x20;
 20723  0144BE  0E20               	movlw	32
 20724  0144C0  6FFB               	movwf	251,b	;volatile
 20725                           
 20726                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 20727  0144C2  0E00               	movlw	0
 20728  0144C4  6FFC               	movwf	252,b	;volatile
 20729                           
 20730                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 20731  0144C6  0E02               	movlw	2
 20732  0144C8  6FFD               	movwf	253,b	;volatile
 20733                           
 20734                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 20735  0144CA  0E07               	movlw	7
 20736  0144CC  6FFE               	movwf	254,b	;volatile
 20737                           
 20738                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x1F;
 20739  0144CE  0E1F               	movlw	31
 20740  0144D0  6FFF               	movwf	255,b	;volatile
 20741                           
 20742                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x84;
 20743  0144D2  0E84               	movlw	132
 20744  0144D4  6FF8               	movwf	248,b	;volatile
 20745                           
 20746                           ; BSR set to: 62
 20747                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 20748  0144D6  0139               	movlb	57	; () banked
 20749  0144D8  95A1               	bcf	161,2,b	;volatile
 20750                           
 20751                           ; BSR set to: 57
 20752                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 20753  0144DA  8591               	bsf	145,2,b	;volatile
 20754                           
 20755                           ; BSR set to: 57
 20756                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 20757  0144DC  0E62               	movlw	low _ADCC_DefaultInterruptHandler
 20758  0144DE  0100               	movlb	0	; () banked
 20759  0144E0  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 20760  0144E2  0E57               	movlw	high _ADCC_DefaultInterruptHandler
 20761  0144E4  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 20762  0144E6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 20763  0144E8  6F62               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 20764  0144EA  EC7B  F0AB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 20765                           
 20766                           ; BSR set to: 0
 20767  0144EE  0012               	return		;funcret
 20768  0144F0                     __end_of_ADCC_Initialize:
 20769                           	callstack 0
 20770                           
 20771 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 20772 ;; Defined at:
 20773 ;;		line 316 in file "mcc_generated_files/adcc.c"
 20774 ;; Parameters:    Size  Location     Type
 20775 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 20776 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 20777 ;; Auto vars:     Size  Location     Type
 20778 ;;		None
 20779 ;; Return value:  Size  Location     Type
 20780 ;;                  1    wreg      void 
 20781 ;; Registers used:
 20782 ;;		wreg, status,2, status,0
 20783 ;; Tracked objects:
 20784 ;;		On entry : 3F/0
 20785 ;;		On exit  : 3F/0
 20786 ;;		Unchanged: 3F/0
 20787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20788 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20791 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20792 ;;Total ram usage:        3 bytes
 20793 ;; Hardware stack levels used: 1
 20794 ;; Hardware stack levels required when called: 7
 20795 ;; This function calls:
 20796 ;;		Nothing
 20797 ;; This function is called by:
 20798 ;;		_ADCC_Initialize
 20799 ;;		_main
 20800 ;; This function uses a non-reentrant model
 20801 ;;
 20802                           
 20803                           	psect	text110
 20804  0156F6                     __ptext110:
 20805                           	callstack 0
 20806  0156F6                     _ADCC_SetADIInterruptHandler:
 20807                           	callstack 21
 20808                           
 20809                           ; BSR set to: 0
 20810                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 20811                           
 20812                           ; BSR set to: 0
 20813                           ;incstack = 0
 20814  0156F6  C060  F152         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 20815  0156FA  C061  F153         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 20816  0156FE  C062  F154         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 20817                           
 20818                           ; BSR set to: 0
 20819  015702  0012               	return		;funcret
 20820  015704                     __end_of_ADCC_SetADIInterruptHandler:
 20821                           	callstack 0
 20822                           
 20823 ;; *************** function _PWM6_LoadDutyValue *****************
 20824 ;; Defined at:
 20825 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 20826 ;; Parameters:    Size  Location     Type
 20827 ;;  dutyValue       2   31[COMRAM] unsigned short 
 20828 ;; Auto vars:     Size  Location     Type
 20829 ;;		None
 20830 ;; Return value:  Size  Location     Type
 20831 ;;                  1    wreg      void 
 20832 ;; Registers used:
 20833 ;;		wreg, status,2, status,0
 20834 ;; Tracked objects:
 20835 ;;		On entry : 3F/0
 20836 ;;		On exit  : 3F/0
 20837 ;;		Unchanged: 0/0
 20838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20841 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20842 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20843 ;;Total ram usage:        4 bytes
 20844 ;; Hardware stack levels used: 1
 20845 ;; Hardware stack levels required when called: 7
 20846 ;; This function calls:
 20847 ;;		Nothing
 20848 ;; This function is called by:
 20849 ;;		_main
 20850 ;; This function uses a non-reentrant model
 20851 ;;
 20852                           
 20853                           	psect	text111
 20854  01513A                     __ptext111:
 20855                           	callstack 0
 20856  01513A                     _PWM6_LoadDutyValue:
 20857                           	callstack 23
 20858                           
 20859                           ; BSR set to: 0
 20860                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20861                           
 20862                           ; BSR set to: 0
 20863                           ;incstack = 0
 20864  01513A  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 20865  01513E  C021  F061         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 20866  015142  90D8               	bcf	status,0,c
 20867  015144  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 20868  015146  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
 20869  015148  90D8               	bcf	status,0,c
 20870  01514A  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 20871  01514C  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
 20872  01514E  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
 20873  015150  6E69               	movwf	105,c	;volatile
 20874                           
 20875                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 20876  015152  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 20877  015156  0E03               	movlw	3
 20878  015158  1760               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
 20879  01515A  0E06               	movlw	6
 20880  01515C  6F61               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
 20881  01515E                     u10395:
 20882  01515E  90D8               	bcf	status,0,c
 20883  015160  3760               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
 20884  015162  2F61               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 20885  015164  D7FC               	goto	u10395
 20886  015166  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
 20887  015168  6E68               	movwf	104,c	;volatile
 20888                           
 20889                           ; BSR set to: 0
 20890  01516A  0012               	return		;funcret
 20891  01516C                     __end_of_PWM6_LoadDutyValue:
 20892                           	callstack 0
 20893                           
 20894 ;; *************** function _PWM5_LoadDutyValue *****************
 20895 ;; Defined at:
 20896 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 20897 ;; Parameters:    Size  Location     Type
 20898 ;;  dutyValue       2   31[COMRAM] unsigned short 
 20899 ;; Auto vars:     Size  Location     Type
 20900 ;;		None
 20901 ;; Return value:  Size  Location     Type
 20902 ;;                  1    wreg      void 
 20903 ;; Registers used:
 20904 ;;		wreg, status,2, status,0
 20905 ;; Tracked objects:
 20906 ;;		On entry : 3F/3E
 20907 ;;		On exit  : 3F/0
 20908 ;;		Unchanged: 0/0
 20909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20913 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20914 ;;Total ram usage:        4 bytes
 20915 ;; Hardware stack levels used: 1
 20916 ;; Hardware stack levels required when called: 7
 20917 ;; This function calls:
 20918 ;;		Nothing
 20919 ;; This function is called by:
 20920 ;;		_main
 20921 ;; This function uses a non-reentrant model
 20922 ;;
 20923                           
 20924                           	psect	text112
 20925  0150A2                     __ptext112:
 20926                           	callstack 0
 20927  0150A2                     _PWM5_LoadDutyValue:
 20928                           	callstack 23
 20929                           
 20930                           ; BSR set to: 62
 20931                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20932                           
 20933                           ; BSR set to: 0
 20934                           ;incstack = 0
 20935  0150A2  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 20936  0150A6  C021  F061         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 20937  0150AA  0100               	movlb	0	; () banked
 20938  0150AC  90D8               	bcf	status,0,c
 20939  0150AE  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 20940  0150B0  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
 20941  0150B2  90D8               	bcf	status,0,c
 20942  0150B4  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 20943  0150B6  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
 20944  0150B8  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
 20945  0150BA  6E6D               	movwf	109,c	;volatile
 20946                           
 20947                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 20948  0150BC  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 20949  0150C0  0E03               	movlw	3
 20950  0150C2  1760               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
 20951  0150C4  0E06               	movlw	6
 20952  0150C6  6F61               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
 20953  0150C8                     u10385:
 20954  0150C8  90D8               	bcf	status,0,c
 20955  0150CA  3760               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
 20956  0150CC  2F61               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 20957  0150CE  D7FC               	goto	u10385
 20958  0150D0  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
 20959  0150D2  6E6C               	movwf	108,c	;volatile
 20960                           
 20961                           ; BSR set to: 0
 20962  0150D4  0012               	return		;funcret
 20963  0150D6                     __end_of_PWM5_LoadDutyValue:
 20964                           	callstack 0
 20965                           
 20966 ;; *************** function _DATAEE_ReadByte *****************
 20967 ;; Defined at:
 20968 ;;		line 187 in file "mcc_generated_files/memory.c"
 20969 ;; Parameters:    Size  Location     Type
 20970 ;;  bAdd            2   31[COMRAM] unsigned short 
 20971 ;; Auto vars:     Size  Location     Type
 20972 ;;		None
 20973 ;; Return value:  Size  Location     Type
 20974 ;;                  1    wreg      unsigned char 
 20975 ;; Registers used:
 20976 ;;		wreg, status,2, status,0
 20977 ;; Tracked objects:
 20978 ;;		On entry : 3D/3B
 20979 ;;		On exit  : 3F/39
 20980 ;;		Unchanged: 0/0
 20981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20986 ;;Total ram usage:        2 bytes
 20987 ;; Hardware stack levels used: 1
 20988 ;; Hardware stack levels required when called: 7
 20989 ;; This function calls:
 20990 ;;		Nothing
 20991 ;; This function is called by:
 20992 ;;		_main
 20993 ;; This function uses a non-reentrant model
 20994 ;;
 20995                           
 20996                           	psect	text113
 20997  01550A                     __ptext113:
 20998                           	callstack 0
 20999  01550A                     _DATAEE_ReadByte:
 21000                           	callstack 23
 21001                           
 21002                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 21003                           
 21004                           ; BSR set to: 0
 21005                           ;incstack = 0
 21006  01550A  5021               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 21007  01550C  0B03               	andlw	3
 21008  01550E  0139               	movlb	57	; () banked
 21009  015510  6FE1               	movwf	225,b	;volatile
 21010                           
 21011                           ; BSR set to: 57
 21012                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 21013  015512  0060  F083  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 21014                           
 21015                           ; BSR set to: 57
 21016                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
 21017  015518  0E3F               	movlw	-193
 21018  01551A  17E5               	andwf	229,f,b	;volsfr
 21019                           
 21020                           ; BSR set to: 57
 21021                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
 21022  01551C  81E5               	bsf	229,0,b	;volsfr
 21023                           
 21024                           ; BSR set to: 57
 21025                           ;mcc_generated_files/memory.c: 193:     __nop();
 21026  01551E  F000               	nop	
 21027                           
 21028                           ;mcc_generated_files/memory.c: 194:     __nop();
 21029  015520  F000               	nop	
 21030                           
 21031                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
 21032  015522  0139               	movlb	57	; () banked
 21033  015524  51E3               	movf	227,w,b	;volatile
 21034                           
 21035                           ; BSR set to: 57
 21036  015526  0012               	return		;funcret
 21037  015528                     __end_of_DATAEE_ReadByte:
 21038                           	callstack 0
 21039                           
 21040 ;; *************** function _DAC1_SetOutput *****************
 21041 ;; Defined at:
 21042 ;;		line 66 in file "mcc_generated_files/dac1.c"
 21043 ;; Parameters:    Size  Location     Type
 21044 ;;  inputData       1    wreg     unsigned char 
 21045 ;; Auto vars:     Size  Location     Type
 21046 ;;  inputData       1   31[COMRAM] unsigned char 
 21047 ;; Return value:  Size  Location     Type
 21048 ;;                  1    wreg      void 
 21049 ;; Registers used:
 21050 ;;		wreg
 21051 ;; Tracked objects:
 21052 ;;		On entry : 3F/0
 21053 ;;		On exit  : 0/0
 21054 ;;		Unchanged: 0/0
 21055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21060 ;;Total ram usage:        1 bytes
 21061 ;; Hardware stack levels used: 1
 21062 ;; Hardware stack levels required when called: 7
 21063 ;; This function calls:
 21064 ;;		Nothing
 21065 ;; This function is called by:
 21066 ;;		_main
 21067 ;; This function uses a non-reentrant model
 21068 ;;
 21069                           
 21070                           	psect	text114
 21071  015728                     __ptext114:
 21072                           	callstack 0
 21073  015728                     _DAC1_SetOutput:
 21074                           	callstack 23
 21075                           
 21076                           ; BSR set to: 57
 21077                           ;incstack = 0
 21078                           ;DAC1_SetOutput@inputData stored from wreg
 21079  015728  6E20               	movwf	DAC1_SetOutput@inputData^0,c
 21080                           
 21081                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 21082  01572A  0060  F083  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 21083  015730  0012               	return		;funcret
 21084  015732                     __end_of_DAC1_SetOutput:
 21085                           	callstack 0
 21086                           
 21087 ;; *************** function _DAC1_GetOutput *****************
 21088 ;; Defined at:
 21089 ;;		line 71 in file "mcc_generated_files/dac1.c"
 21090 ;; Parameters:    Size  Location     Type
 21091 ;;		None
 21092 ;; Auto vars:     Size  Location     Type
 21093 ;;		None
 21094 ;; Return value:  Size  Location     Type
 21095 ;;                  1    wreg      unsigned char 
 21096 ;; Registers used:
 21097 ;;		wreg, status,2
 21098 ;; Tracked objects:
 21099 ;;		On entry : 3F/1
 21100 ;;		On exit  : 3F/3E
 21101 ;;		Unchanged: 0/0
 21102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21107 ;;Total ram usage:        0 bytes
 21108 ;; Hardware stack levels used: 1
 21109 ;; Hardware stack levels required when called: 7
 21110 ;; This function calls:
 21111 ;;		Nothing
 21112 ;; This function is called by:
 21113 ;;		_main
 21114 ;; This function uses a non-reentrant model
 21115 ;;
 21116                           
 21117                           	psect	text115
 21118  015746                     __ptext115:
 21119                           	callstack 0
 21120  015746                     _DAC1_GetOutput:
 21121                           	callstack 23
 21122                           
 21123                           ; BSR set to: 1
 21124                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 21125                           
 21126                           ;incstack = 0
 21127  015746  013E               	movlb	62	; () banked
 21128  015748  519C               	movf	156,w,b	;volatile
 21129                           
 21130                           ; BSR set to: 62
 21131  01574A  0012               	return		;funcret
 21132  01574C                     __end_of_DAC1_GetOutput:
 21133                           	callstack 0
 21134                           
 21135 ;; *************** function _UART1_tx_vect_isr *****************
 21136 ;; Defined at:
 21137 ;;		line 243 in file "mcc_generated_files/uart1.c"
 21138 ;; Parameters:    Size  Location     Type
 21139 ;;		None
 21140 ;; Auto vars:     Size  Location     Type
 21141 ;;		None
 21142 ;; Return value:  Size  Location     Type
 21143 ;;                  1    wreg      void 
 21144 ;; Registers used:
 21145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21146 ;; Tracked objects:
 21147 ;;		On entry : 0/0
 21148 ;;		On exit  : 0/0
 21149 ;;		Unchanged: 0/0
 21150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21153 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21154 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21155 ;;Total ram usage:        3 bytes
 21156 ;; Hardware stack levels used: 1
 21157 ;; Hardware stack levels required when called: 4
 21158 ;; This function calls:
 21159 ;;		Absolute function
 21160 ;;		_UART1_Transmit_ISR
 21161 ;; This function is called by:
 21162 ;;		Interrupt level 1
 21163 ;; This function uses a non-reentrant model
 21164 ;;
 21165                           
 21166                           	psect	text116
 21167  014BE0                     __ptext116:
 21168                           	callstack 0
 21169  014BE0                     _UART1_tx_vect_isr:
 21170                           	callstack 17
 21171                           
 21172                           ; BSR set to: 62
 21173                           ;incstack = 0
 21174  014BE0  006F FF60  F01A    	movff	status,??_UART1_tx_vect_isr
 21175  014BE6  006F FFE8  F01B    	movff	pclath,??_UART1_tx_vect_isr+1
 21176  014BEC  006F FFEC  F01C    	movff	pclatu,??_UART1_tx_vect_isr+2
 21177                           
 21178                           ;mcc_generated_files/uart1.c: 245:     if(UART1_TxInterruptHandler)
 21179  014BF2  5026               	movf	_UART1_TxInterruptHandler^0,w,c
 21180  014BF4  1027               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 21181  014BF6  1028               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 21182  014BF8  B4D8               	btfsc	status,2,c
 21183  014BFA  D00C               	goto	i1u1049_29
 21184                           
 21185                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _TxInterruptHandler();
 21186  014BFC  D801               	call	i1u1049_28
 21187  014BFE  D00A               	goto	i1u1049_29
 21188  014C00                     i1u1049_28:
 21189  014C00  0005               	push	
 21190  014C02  6EFA               	movwf	pclath,c
 21191  014C04  5026               	movf	_UART1_TxInterruptHandler^0,w,c
 21192  014C06  6EFD               	movwf	tosl,c
 21193  014C08  5027               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 21194  014C0A  6EFE               	movwf	tosh,c
 21195  014C0C  5028               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 21196  014C0E  6EFF               	movwf	tosu,c
 21197  014C10  50FA               	movf	pclath,w,c
 21198  014C12  0012               	return		;indir
 21199  014C14                     i1u1049_29:
 21200  014C14  0060  F073  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 21201  014C1A  0060  F06F  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 21202  014C20  0060  F06B  FFD8   	movff	??_UART1_tx_vect_isr,status
 21203  014C26  0011               	retfie		f
 21204  014C28                     __end_of_UART1_tx_vect_isr:
 21205                           	callstack 0
 21206                           
 21207 ;; *************** function _UART1_Transmit_ISR *****************
 21208 ;; Defined at:
 21209 ;;		line 275 in file "mcc_generated_files/uart1.c"
 21210 ;; Parameters:    Size  Location     Type
 21211 ;;		None
 21212 ;; Auto vars:     Size  Location     Type
 21213 ;;		None
 21214 ;; Return value:  Size  Location     Type
 21215 ;;                  1    wreg      void 
 21216 ;; Registers used:
 21217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21218 ;; Tracked objects:
 21219 ;;		On entry : 0/0
 21220 ;;		On exit  : 3B/39
 21221 ;;		Unchanged: 0/0
 21222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21227 ;;Total ram usage:        0 bytes
 21228 ;; Hardware stack levels used: 1
 21229 ;; Hardware stack levels required when called: 3
 21230 ;; This function calls:
 21231 ;;		Nothing
 21232 ;; This function is called by:
 21233 ;;		_UART1_Initialize
 21234 ;;		_UART1_tx_vect_isr
 21235 ;; This function uses a non-reentrant model
 21236 ;;
 21237                           
 21238                           	psect	text117
 21239  0151FA                     __ptext117:
 21240                           	callstack 0
 21241  0151FA                     _UART1_Transmit_ISR:
 21242                           	callstack 17
 21243                           
 21244                           ;mcc_generated_files/uart1.c: 278:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 21245                           
 21246                           ;incstack = 0
 21247  0151FA  0E40               	movlw	64
 21248  0151FC  603E               	cpfslt	_uart1TxBufferRemaining^0,c
 21249  0151FE  D011               	goto	i1l1027
 21250                           
 21251                           ;mcc_generated_files/uart1.c: 279:     {;mcc_generated_files/uart1.c: 280:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 21252  015200  0E40               	movlw	low _uart1TxBuffer
 21253  015202  243F               	addwf	_uart1TxTail^0,w,c	;volatile
 21254  015204  6ED9               	movwf	fsr2l,c
 21255  015206  6ADA               	clrf	fsr2h,c
 21256  015208  0E03               	movlw	high _uart1TxBuffer
 21257  01520A  22DA               	addwfc	fsr2h,f,c
 21258  01520C  50DF               	movf	indf2,w,c
 21259  01520E  013D               	movlb	61	; () banked
 21260  015210  6FEA               	movwf	234,b	;volatile
 21261                           
 21262                           ; BSR set to: 61
 21263  015212  2A3F               	incf	_uart1TxTail^0,f,c	;volatile
 21264                           
 21265                           ; BSR set to: 61
 21266                           ;mcc_generated_files/uart1.c: 281:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 21267  015214  0E3F               	movlw	63
 21268  015216  643F               	cpfsgt	_uart1TxTail^0,c
 21269  015218  D002               	goto	i1l10781
 21270                           
 21271                           ; BSR set to: 61
 21272                           ;mcc_generated_files/uart1.c: 282:         {;mcc_generated_files/uart1.c: 283:          
      +                             uart1TxTail = 0;
 21273  01521A  0E00               	movlw	0
 21274  01521C  6E3F               	movwf	_uart1TxTail^0,c	;volatile
 21275  01521E                     i1l10781:
 21276                           
 21277                           ; BSR set to: 61
 21278                           ;mcc_generated_files/uart1.c: 285:         uart1TxBufferRemaining++;
 21279  01521E  2A3E               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 21280                           
 21281                           ;mcc_generated_files/uart1.c: 286:     }
 21282  015220  0012               	return	
 21283  015222                     i1l1027:
 21284                           
 21285                           ;mcc_generated_files/uart1.c: 288:     {;mcc_generated_files/uart1.c: 289:         PIE3b
      +                          its.U1TXIE = 0;
 21286  015222  0139               	movlb	57	; () banked
 21287  015224  9993               	bcf	147,4,b	;volatile
 21288  015226  0012               	return		;funcret
 21289  015228                     __end_of_UART1_Transmit_ISR:
 21290                           	callstack 0
 21291                           
 21292 ;; *************** function _UART1_rx_vect_isr *****************
 21293 ;; Defined at:
 21294 ;;		line 251 in file "mcc_generated_files/uart1.c"
 21295 ;; Parameters:    Size  Location     Type
 21296 ;;		None
 21297 ;; Auto vars:     Size  Location     Type
 21298 ;;		None
 21299 ;; Return value:  Size  Location     Type
 21300 ;;                  1    wreg      void 
 21301 ;; Registers used:
 21302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21303 ;; Tracked objects:
 21304 ;;		On entry : 0/0
 21305 ;;		On exit  : 0/0
 21306 ;;		Unchanged: 0/0
 21307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21310 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21311 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21312 ;;Total ram usage:        3 bytes
 21313 ;; Hardware stack levels used: 1
 21314 ;; Hardware stack levels required when called: 6
 21315 ;; This function calls:
 21316 ;;		Absolute function
 21317 ;;		_UART1_Receive_ISR
 21318 ;; This function is called by:
 21319 ;;		Interrupt level 1
 21320 ;; This function uses a non-reentrant model
 21321 ;;
 21322                           
 21323                           	psect	text118
 21324  014C28                     __ptext118:
 21325                           	callstack 0
 21326  014C28                     _UART1_rx_vect_isr:
 21327                           	callstack 15
 21328                           
 21329                           ;incstack = 0
 21330  014C28  006F FF60  F01D    	movff	status,??_UART1_rx_vect_isr
 21331  014C2E  006F FFE8  F01E    	movff	pclath,??_UART1_rx_vect_isr+1
 21332  014C34  006F FFEC  F01F    	movff	pclatu,??_UART1_rx_vect_isr+2
 21333                           
 21334                           ;mcc_generated_files/uart1.c: 253:     if(UART1_RxInterruptHandler)
 21335  014C3A  5029               	movf	_UART1_RxInterruptHandler^0,w,c
 21336  014C3C  102A               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 21337  014C3E  102B               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 21338  014C40  B4D8               	btfsc	status,2,c
 21339  014C42  D00C               	goto	i1u714_29
 21340                           
 21341                           ;mcc_generated_files/uart1.c: 254:     {;mcc_generated_files/uart1.c: 255:         UART1
      +                          _RxInterruptHandler();
 21342  014C44  D801               	call	i1u714_28
 21343  014C46  D00A               	goto	i1u714_29
 21344  014C48                     i1u714_28:
 21345  014C48  0005               	push	
 21346  014C4A  6EFA               	movwf	pclath,c
 21347  014C4C  5029               	movf	_UART1_RxInterruptHandler^0,w,c
 21348  014C4E  6EFD               	movwf	tosl,c
 21349  014C50  502A               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 21350  014C52  6EFE               	movwf	tosh,c
 21351  014C54  502B               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 21352  014C56  6EFF               	movwf	tosu,c
 21353  014C58  50FA               	movf	pclath,w,c
 21354  014C5A  0012               	return		;indir
 21355  014C5C                     i1u714_29:
 21356  014C5C  0060  F07F  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 21357  014C62  0060  F07B  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 21358  014C68  0060  F077  FFD8   	movff	??_UART1_rx_vect_isr,status
 21359  014C6E  0011               	retfie		f
 21360  014C70                     __end_of_UART1_rx_vect_isr:
 21361                           	callstack 0
 21362                           
 21363 ;; *************** function _UART1_Receive_ISR *****************
 21364 ;; Defined at:
 21365 ;;		line 295 in file "mcc_generated_files/uart1.c"
 21366 ;; Parameters:    Size  Location     Type
 21367 ;;		None
 21368 ;; Auto vars:     Size  Location     Type
 21369 ;;		None
 21370 ;; Return value:  Size  Location     Type
 21371 ;;                  1    wreg      void 
 21372 ;; Registers used:
 21373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21374 ;; Tracked objects:
 21375 ;;		On entry : 0/0
 21376 ;;		On exit  : 0/0
 21377 ;;		Unchanged: 0/0
 21378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21383 ;;Total ram usage:        0 bytes
 21384 ;; Hardware stack levels used: 1
 21385 ;; Hardware stack levels required when called: 5
 21386 ;; This function calls:
 21387 ;;		Absolute function
 21388 ;;		_UART1_DefaultErrorHandler
 21389 ;;		_UART1_DefaultFramingErrorHandler
 21390 ;;		_UART1_DefaultOverrunErrorHandler
 21391 ;;		_UART1_RxDataHandler
 21392 ;; This function is called by:
 21393 ;;		_UART1_Initialize
 21394 ;;		_UART1_rx_vect_isr
 21395 ;; This function uses a non-reentrant model
 21396 ;;
 21397                           
 21398                           	psect	text119
 21399  014236                     __ptext119:
 21400                           	callstack 0
 21401  014236                     _UART1_Receive_ISR:
 21402                           	callstack 15
 21403                           
 21404                           ;mcc_generated_files/uart1.c: 298:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 21405                           
 21406                           ;incstack = 0
 21407  014236  0E00               	movlw	low _uart1RxStatusBuffer
 21408  014238  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21409  01423A  6ED9               	movwf	fsr2l,c
 21410  01423C  6ADA               	clrf	fsr2h,c
 21411  01423E  0E02               	movlw	high _uart1RxStatusBuffer
 21412  014240  22DA               	addwfc	fsr2h,f,c
 21413  014242  0E00               	movlw	0
 21414  014244  6EDF               	movwf	indf2,c
 21415                           
 21416                           ;mcc_generated_files/uart1.c: 300:     if(U1ERRIRbits.FERIF){
 21417  014246  013D               	movlb	61	; () banked
 21418  014248  A7F9               	btfss	249,3,b	;volatile
 21419  01424A  D015               	goto	i1u689_29
 21420                           
 21421                           ; BSR set to: 61
 21422                           ;mcc_generated_files/uart1.c: 301:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 21423  01424C  0E00               	movlw	low _uart1RxStatusBuffer
 21424  01424E  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21425  014250  6ED9               	movwf	fsr2l,c
 21426  014252  6ADA               	clrf	fsr2h,c
 21427  014254  0E02               	movlw	high _uart1RxStatusBuffer
 21428  014256  22DA               	addwfc	fsr2h,f,c
 21429  014258  0102               	movlb	2	; () banked
 21430  01425A  82DF               	bsf	indf2,1,c
 21431                           
 21432                           ; BSR set to: 2
 21433                           ;mcc_generated_files/uart1.c: 302:         UART1_FramingErrorHandler();
 21434  01425C  D801               	call	i1u689_28
 21435  01425E  D00B               	goto	i1u689_29
 21436  014260                     i1u689_28:
 21437  014260  0005               	push	
 21438  014262  6EFA               	movwf	pclath,c
 21439  014264  0101               	movlb	1	; () banked
 21440  014266  5146               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 21441  014268  6EFD               	movwf	tosl,c
 21442  01426A  5147               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 21443  01426C  6EFE               	movwf	tosh,c
 21444  01426E  5148               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 21445  014270  6EFF               	movwf	tosu,c
 21446  014272  50FA               	movf	pclath,w,c
 21447  014274  0012               	return		;indir
 21448  014276                     i1u689_29:
 21449                           
 21450                           ;mcc_generated_files/uart1.c: 305:     if(U1ERRIRbits.RXFOIF){
 21451  014276  013D               	movlb	61	; () banked
 21452  014278  A3F9               	btfss	249,1,b	;volatile
 21453  01427A  D015               	goto	i1u691_29
 21454                           
 21455                           ; BSR set to: 61
 21456                           ;mcc_generated_files/uart1.c: 306:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 21457  01427C  0E00               	movlw	low _uart1RxStatusBuffer
 21458  01427E  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21459  014280  6ED9               	movwf	fsr2l,c
 21460  014282  6ADA               	clrf	fsr2h,c
 21461  014284  0E02               	movlw	high _uart1RxStatusBuffer
 21462  014286  22DA               	addwfc	fsr2h,f,c
 21463  014288  0102               	movlb	2	; () banked
 21464  01428A  84DF               	bsf	indf2,2,c
 21465                           
 21466                           ; BSR set to: 2
 21467                           ;mcc_generated_files/uart1.c: 307:         UART1_OverrunErrorHandler();
 21468  01428C  D801               	call	i1u691_28
 21469  01428E  D00B               	goto	i1u691_29
 21470  014290                     i1u691_28:
 21471  014290  0005               	push	
 21472  014292  6EFA               	movwf	pclath,c
 21473  014294  0101               	movlb	1	; () banked
 21474  014296  5143               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 21475  014298  6EFD               	movwf	tosl,c
 21476  01429A  5144               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 21477  01429C  6EFE               	movwf	tosh,c
 21478  01429E  5145               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 21479  0142A0  6EFF               	movwf	tosu,c
 21480  0142A2  50FA               	movf	pclath,w,c
 21481  0142A4  0012               	return		;indir
 21482  0142A6                     i1u691_29:
 21483                           
 21484                           ;mcc_generated_files/uart1.c: 310:     if(uart1RxStatusBuffer[uart1RxHead].status){
 21485  0142A6  0E00               	movlw	low _uart1RxStatusBuffer
 21486  0142A8  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21487  0142AA  6ED9               	movwf	fsr2l,c
 21488  0142AC  6ADA               	clrf	fsr2h,c
 21489  0142AE  0E02               	movlw	high _uart1RxStatusBuffer
 21490  0142B0  22DA               	addwfc	fsr2h,f,c
 21491  0142B2  50DF               	movf	indf2,w,c
 21492  0142B4  B4D8               	btfsc	status,2,c
 21493  0142B6  D00D               	goto	i1l8055
 21494                           
 21495                           ;mcc_generated_files/uart1.c: 311:         UART1_ErrorHandler();
 21496  0142B8  D801               	call	i1u693_28
 21497  0142BA  0012               	return	
 21498  0142BC                     i1u693_28:
 21499  0142BC  0005               	push	
 21500  0142BE  6EFA               	movwf	pclath,c
 21501  0142C0  0101               	movlb	1	; () banked
 21502  0142C2  5140               	movf	_UART1_ErrorHandler& (0+255),w,b
 21503  0142C4  6EFD               	movwf	tosl,c
 21504  0142C6  5141               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 21505  0142C8  6EFE               	movwf	tosh,c
 21506  0142CA  5142               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 21507  0142CC  6EFF               	movwf	tosu,c
 21508  0142CE  50FA               	movf	pclath,w,c
 21509  0142D0  0012               	return		;indir
 21510  0142D2                     i1l8055:
 21511                           
 21512                           ;mcc_generated_files/uart1.c: 313:         UART1_RxDataHandler();
 21513  0142D2  EC19  F0AA         	call	_UART1_RxDataHandler	;wreg free
 21514  0142D6  0012               	return		;funcret
 21515  0142D8                     __end_of_UART1_Receive_ISR:
 21516                           	callstack 0
 21517                           
 21518 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 21519 ;; Defined at:
 21520 ;;		line 331 in file "mcc_generated_files/uart1.c"
 21521 ;; Parameters:    Size  Location     Type
 21522 ;;		None
 21523 ;; Auto vars:     Size  Location     Type
 21524 ;;		None
 21525 ;; Return value:  Size  Location     Type
 21526 ;;                  1    wreg      void 
 21527 ;; Registers used:
 21528 ;;		None
 21529 ;; Tracked objects:
 21530 ;;		On entry : 3F/1
 21531 ;;		On exit  : 3F/1
 21532 ;;		Unchanged: 3F/0
 21533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21538 ;;Total ram usage:        0 bytes
 21539 ;; Hardware stack levels used: 1
 21540 ;; Hardware stack levels required when called: 3
 21541 ;; This function calls:
 21542 ;;		Nothing
 21543 ;; This function is called by:
 21544 ;;		_UART1_Initialize
 21545 ;;		_UART1_Receive_ISR
 21546 ;; This function uses a non-reentrant model
 21547 ;;
 21548                           
 21549                           	psect	text120
 21550  01575E                     __ptext120:
 21551                           	callstack 0
 21552  01575E                     _UART1_DefaultOverrunErrorHandler:
 21553                           	callstack 16
 21554                           
 21555                           ; BSR set to: 1
 21556                           
 21557                           ;incstack = 0
 21558  01575E  0012               	return		;funcret
 21559  015760                     __end_of_UART1_DefaultOverrunErrorHandler:
 21560                           	callstack 0
 21561                           
 21562 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 21563 ;; Defined at:
 21564 ;;		line 329 in file "mcc_generated_files/uart1.c"
 21565 ;; Parameters:    Size  Location     Type
 21566 ;;		None
 21567 ;; Auto vars:     Size  Location     Type
 21568 ;;		None
 21569 ;; Return value:  Size  Location     Type
 21570 ;;                  1    wreg      void 
 21571 ;; Registers used:
 21572 ;;		None
 21573 ;; Tracked objects:
 21574 ;;		On entry : 3F/1
 21575 ;;		On exit  : 3F/1
 21576 ;;		Unchanged: 3F/0
 21577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21582 ;;Total ram usage:        0 bytes
 21583 ;; Hardware stack levels used: 1
 21584 ;; Hardware stack levels required when called: 3
 21585 ;; This function calls:
 21586 ;;		Nothing
 21587 ;; This function is called by:
 21588 ;;		_UART1_Initialize
 21589 ;;		_UART1_Receive_ISR
 21590 ;; This function uses a non-reentrant model
 21591 ;;
 21592                           
 21593                           	psect	text121
 21594  015760                     __ptext121:
 21595                           	callstack 0
 21596  015760                     _UART1_DefaultFramingErrorHandler:
 21597                           	callstack 16
 21598                           
 21599                           ; BSR set to: 1
 21600                           
 21601                           ; BSR set to: 1
 21602                           ;incstack = 0
 21603  015760  0012               	return		;funcret
 21604  015762                     __end_of_UART1_DefaultFramingErrorHandler:
 21605                           	callstack 0
 21606                           
 21607 ;; *************** function _UART1_DefaultErrorHandler *****************
 21608 ;; Defined at:
 21609 ;;		line 333 in file "mcc_generated_files/uart1.c"
 21610 ;; Parameters:    Size  Location     Type
 21611 ;;		None
 21612 ;; Auto vars:     Size  Location     Type
 21613 ;;		None
 21614 ;; Return value:  Size  Location     Type
 21615 ;;                  1    wreg      void 
 21616 ;; Registers used:
 21617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21618 ;; Tracked objects:
 21619 ;;		On entry : 3F/1
 21620 ;;		On exit  : 0/0
 21621 ;;		Unchanged: 0/0
 21622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21627 ;;Total ram usage:        0 bytes
 21628 ;; Hardware stack levels used: 1
 21629 ;; Hardware stack levels required when called: 4
 21630 ;; This function calls:
 21631 ;;		_UART1_RxDataHandler
 21632 ;; This function is called by:
 21633 ;;		_UART1_Initialize
 21634 ;;		_UART1_Receive_ISR
 21635 ;; This function uses a non-reentrant model
 21636 ;;
 21637                           
 21638                           	psect	text122
 21639  01574C                     __ptext122:
 21640                           	callstack 0
 21641  01574C                     _UART1_DefaultErrorHandler:
 21642                           	callstack 15
 21643                           
 21644                           ; BSR set to: 1
 21645                           ;mcc_generated_files/uart1.c: 334:     UART1_RxDataHandler();
 21646                           
 21647                           ; BSR set to: 1
 21648                           ;incstack = 0
 21649  01574C  EC19  F0AA         	call	_UART1_RxDataHandler	;wreg free
 21650  015750  0012               	return		;funcret
 21651  015752                     __end_of_UART1_DefaultErrorHandler:
 21652                           	callstack 0
 21653                           
 21654 ;; *************** function _UART1_RxDataHandler *****************
 21655 ;; Defined at:
 21656 ;;		line 319 in file "mcc_generated_files/uart1.c"
 21657 ;; Parameters:    Size  Location     Type
 21658 ;;		None
 21659 ;; Auto vars:     Size  Location     Type
 21660 ;;		None
 21661 ;; Return value:  Size  Location     Type
 21662 ;;                  1    wreg      void 
 21663 ;; Registers used:
 21664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21665 ;; Tracked objects:
 21666 ;;		On entry : 0/3D
 21667 ;;		On exit  : 0/0
 21668 ;;		Unchanged: 0/0
 21669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21674 ;;Total ram usage:        0 bytes
 21675 ;; Hardware stack levels used: 1
 21676 ;; Hardware stack levels required when called: 3
 21677 ;; This function calls:
 21678 ;;		Nothing
 21679 ;; This function is called by:
 21680 ;;		_UART1_Receive_ISR
 21681 ;;		_UART1_DefaultErrorHandler
 21682 ;; This function uses a non-reentrant model
 21683 ;;
 21684                           
 21685                           	psect	text123
 21686  015432                     __ptext123:
 21687                           	callstack 0
 21688  015432                     _UART1_RxDataHandler:
 21689                           	callstack 16
 21690                           
 21691                           ;mcc_generated_files/uart1.c: 321:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 21692                           
 21693                           ;incstack = 0
 21694  015432  0E00               	movlw	low _uart1RxBuffer
 21695  015434  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21696  015436  6ED9               	movwf	fsr2l,c
 21697  015438  6ADA               	clrf	fsr2h,c
 21698  01543A  0E03               	movlw	high _uart1RxBuffer
 21699  01543C  22DA               	addwfc	fsr2h,f,c
 21700  01543E  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 21701  015444  2A3D               	incf	_uart1RxHead^0,f,c	;volatile
 21702                           
 21703                           ;mcc_generated_files/uart1.c: 322:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 21704  015446  0E3F               	movlw	63
 21705  015448  643D               	cpfsgt	_uart1RxHead^0,c
 21706  01544A  D002               	goto	i1l7281
 21707                           
 21708                           ;mcc_generated_files/uart1.c: 323:     {;mcc_generated_files/uart1.c: 324:         uart1
      +                          RxHead = 0;
 21709  01544C  0E00               	movlw	0
 21710  01544E  6E3D               	movwf	_uart1RxHead^0,c	;volatile
 21711  015450                     i1l7281:
 21712                           
 21713                           ;mcc_generated_files/uart1.c: 326:     uart1RxCount++;
 21714  015450  2A3B               	incf	_uart1RxCount^0,f,c	;volatile
 21715  015452  0012               	return		;funcret
 21716  015454                     __end_of_UART1_RxDataHandler:
 21717                           	callstack 0
 21718                           
 21719 ;; *************** function _ADCC_ISR *****************
 21720 ;; Defined at:
 21721 ;;		line 307 in file "mcc_generated_files/adcc.c"
 21722 ;; Parameters:    Size  Location     Type
 21723 ;;		None
 21724 ;; Auto vars:     Size  Location     Type
 21725 ;;		None
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  1    wreg      void 
 21728 ;; Registers used:
 21729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21739 ;;Total ram usage:        2 bytes
 21740 ;; Hardware stack levels used: 1
 21741 ;; Hardware stack levels required when called: 2
 21742 ;; This function calls:
 21743 ;;		Absolute function
 21744 ;;		_ADCC_DefaultInterruptHandler
 21745 ;;		_Adc_Isr
 21746 ;; This function is called by:
 21747 ;;		Interrupt level 2
 21748 ;; This function uses a non-reentrant model
 21749 ;;
 21750                           
 21751                           	psect	text124
 21752  014CF8                     __ptext124:
 21753                           	callstack 0
 21754  014CF8                     _ADCC_ISR:
 21755                           	callstack 15
 21756                           
 21757                           ;incstack = 0
 21758  014CF8  006F FFE8  F009    	movff	pclath,??_ADCC_ISR
 21759  014CFE  006F FFEC  F00A    	movff	pclatu,??_ADCC_ISR+1
 21760                           
 21761                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 21762  014D04  0139               	movlb	57	; () banked
 21763  014D06  95A1               	bcf	161,2,b	;volatile
 21764                           
 21765                           ; BSR set to: 57
 21766                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 21767  014D08  0101               	movlb	1	; () banked
 21768  014D0A  5152               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 21769  014D0C  1153               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 21770  014D0E  1154               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 21771  014D10  B4D8               	btfsc	status,2,c
 21772  014D12  D00C               	goto	i2u705_49
 21773                           
 21774                           ; BSR set to: 1
 21775                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 21776  014D14  D801               	call	i2u705_48
 21777  014D16  D00A               	goto	i2u705_49
 21778  014D18                     i2u705_48:
 21779  014D18  0005               	push	
 21780  014D1A  6EFA               	movwf	pclath,c
 21781  014D1C  5152               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 21782  014D1E  6EFD               	movwf	tosl,c
 21783  014D20  5153               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 21784  014D22  6EFE               	movwf	tosh,c
 21785  014D24  5154               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 21786  014D26  6EFF               	movwf	tosu,c
 21787  014D28  50FA               	movf	pclath,w,c
 21788  014D2A  0012               	return		;indir
 21789  014D2C                     i2u705_49:
 21790  014D2C  0060  F02B  FFFB   	movff	??_ADCC_ISR+1,pclatu
 21791  014D32  0060  F027  FFFA   	movff	??_ADCC_ISR,pclath
 21792  014D38  0011               	retfie		f
 21793  014D3A                     __end_of_ADCC_ISR:
 21794                           	callstack 0
 21795                           
 21796 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 21797 ;; Defined at:
 21798 ;;		line 320 in file "mcc_generated_files/adcc.c"
 21799 ;; Parameters:    Size  Location     Type
 21800 ;;		None
 21801 ;; Auto vars:     Size  Location     Type
 21802 ;;		None
 21803 ;; Return value:  Size  Location     Type
 21804 ;;                  1    wreg      void 
 21805 ;; Registers used:
 21806 ;;		None
 21807 ;; Tracked objects:
 21808 ;;		On entry : 3F/1
 21809 ;;		On exit  : 3F/1
 21810 ;;		Unchanged: 3F/0
 21811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21816 ;;Total ram usage:        0 bytes
 21817 ;; Hardware stack levels used: 1
 21818 ;; This function calls:
 21819 ;;		Nothing
 21820 ;; This function is called by:
 21821 ;;		_ADCC_Initialize
 21822 ;;		_ADCC_ISR
 21823 ;; This function uses a non-reentrant model
 21824 ;;
 21825                           
 21826                           	psect	text125
 21827  015762                     __ptext125:
 21828                           	callstack 0
 21829  015762                     _ADCC_DefaultInterruptHandler:
 21830                           	callstack 16
 21831                           
 21832                           ; BSR set to: 1
 21833                           
 21834                           ;incstack = 0
 21835  015762  0012               	return		;funcret
 21836  015764                     __end_of_ADCC_DefaultInterruptHandler:
 21837                           	callstack 0
 21838                           
 21839 ;; *************** function _Adc_Isr *****************
 21840 ;; Defined at:
 21841 ;;		line 110 in file "main.c"
 21842 ;; Parameters:    Size  Location     Type
 21843 ;;		None
 21844 ;; Auto vars:     Size  Location     Type
 21845 ;;		None
 21846 ;; Return value:  Size  Location     Type
 21847 ;;                  1    wreg      void 
 21848 ;; Registers used:
 21849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21850 ;; Tracked objects:
 21851 ;;		On entry : 3F/1
 21852 ;;		On exit  : 3F/1
 21853 ;;		Unchanged: 0/0
 21854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21859 ;;Total ram usage:        4 bytes
 21860 ;; Hardware stack levels used: 1
 21861 ;; Hardware stack levels required when called: 1
 21862 ;; This function calls:
 21863 ;;		_ADCC_GetConversionResult
 21864 ;; This function is called by:
 21865 ;;		_main
 21866 ;;		_ADCC_ISR
 21867 ;; This function uses a non-reentrant model
 21868 ;;
 21869                           
 21870                           	psect	text126
 21871  013A7A                     __ptext126:
 21872                           	callstack 0
 21873  013A7A                     _Adc_Isr:
 21874                           	callstack 15
 21875                           
 21876                           ; BSR set to: 1
 21877                           ;main.c: 112:  static adcc_channel_t c_adc_chan = PS_V_ANA;;main.c: 114:  a[a_index].ana
      +                          [c_adc_chan] = ADCC_GetConversionResult();
 21878                           
 21879                           ; BSR set to: 1
 21880                           ;incstack = 0
 21881  013A7A  EC07  F0AB         	call	_ADCC_GetConversionResult	;wreg free
 21882  013A7E  5035               	movf	Adc_Isr@c_adc_chan^0,w,c
 21883  013A80  0D02               	mullw	2
 21884  013A82  006F FFCC  F005    	movff	prodl,??_Adc_Isr
 21885  013A88  006F FFD0  F006    	movff	prodh,??_Adc_Isr+1
 21886  013A8E  5039               	movf	_a_index^0,w,c	;volatile
 21887  013A90  0D7E               	mullw	126
 21888  013A92  0E83               	movlw	low _a
 21889  013A94  6E07               	movwf	(??_Adc_Isr+2)^0,c
 21890  013A96  0E05               	movlw	high _a
 21891  013A98  6E08               	movwf	(??_Adc_Isr+3)^0,c
 21892  013A9A  50F3               	movf	243,w,c
 21893  013A9C  2607               	addwf	(??_Adc_Isr+2)^0,f,c
 21894  013A9E  50F4               	movf	244,w,c
 21895  013AA0  2208               	addwfc	(??_Adc_Isr+3)^0,f,c
 21896  013AA2  5005               	movf	??_Adc_Isr^0,w,c
 21897  013AA4  2407               	addwf	(??_Adc_Isr+2)^0,w,c
 21898  013AA6  6ED9               	movwf	fsr2l,c
 21899  013AA8  5006               	movf	(??_Adc_Isr+1)^0,w,c
 21900  013AAA  2008               	addwfc	(??_Adc_Isr+3)^0,w,c
 21901  013AAC  6EDA               	movwf	fsr2h,c
 21902  013AAE  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 21903  013AB4  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 21904                           
 21905                           ;main.c: 115:  a[i_index].ana[c_adc_chan] = ADCC_GetConversionResult();
 21906  013ABA  EC07  F0AB         	call	_ADCC_GetConversionResult	;wreg free
 21907  013ABE  5035               	movf	Adc_Isr@c_adc_chan^0,w,c
 21908  013AC0  0D02               	mullw	2
 21909  013AC2  006F FFCC  F005    	movff	prodl,??_Adc_Isr
 21910  013AC8  006F FFD0  F006    	movff	prodh,??_Adc_Isr+1
 21911  013ACE  5038               	movf	_i_index^0,w,c	;volatile
 21912  013AD0  0D7E               	mullw	126
 21913  013AD2  0E83               	movlw	low _a
 21914  013AD4  6E07               	movwf	(??_Adc_Isr+2)^0,c
 21915  013AD6  0E05               	movlw	high _a
 21916  013AD8  6E08               	movwf	(??_Adc_Isr+3)^0,c
 21917  013ADA  50F3               	movf	243,w,c
 21918  013ADC  2607               	addwf	(??_Adc_Isr+2)^0,f,c
 21919  013ADE  50F4               	movf	244,w,c
 21920  013AE0  2208               	addwfc	(??_Adc_Isr+3)^0,f,c
 21921  013AE2  5005               	movf	??_Adc_Isr^0,w,c
 21922  013AE4  2407               	addwf	(??_Adc_Isr+2)^0,w,c
 21923  013AE6  6ED9               	movwf	fsr2l,c
 21924  013AE8  5006               	movf	(??_Adc_Isr+1)^0,w,c
 21925  013AEA  2008               	addwfc	(??_Adc_Isr+3)^0,w,c
 21926  013AEC  6EDA               	movwf	fsr2h,c
 21927  013AEE  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 21928  013AF4  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 21929                           
 21930                           ;main.c: 120:  switch (c_adc_chan) {
 21931  013AFA  D014               	goto	i2l8099
 21932  013AFC                     i2l8079:
 21933                           
 21934                           ; BSR set to: 62
 21935                           ;main.c: 122:   c_adc_chan = PS_I_ANA;
 21936  013AFC  0E01               	movlw	1
 21937  013AFE  D005               	goto	L20
 21938  013B00                     i2l8081:
 21939                           
 21940                           ; BSR set to: 62
 21941                           ;main.c: 125:   c_adc_chan = channel_DAC1;
 21942  013B00  0E3D               	movlw	61
 21943  013B02  D003               	goto	L20
 21944  013B04                     i2l8083:
 21945                           
 21946                           ; BSR set to: 62
 21947                           ;main.c: 128:   c_adc_chan = PWM5_ANA;
 21948  013B04  0E28               	movlw	40
 21949  013B06  D001               	goto	L20
 21950  013B08                     i2l8085:
 21951                           
 21952                           ; BSR set to: 62
 21953                           ;main.c: 131:   c_adc_chan = PWM6_ANA;
 21954  013B08  0E29               	movlw	41
 21955  013B0A                     L20:
 21956  013B0A  6E35               	movwf	Adc_Isr@c_adc_chan^0,c
 21957                           
 21958                           ;main.c: 132:   break;
 21959  013B0C  D023               	goto	i2l1279
 21960  013B0E                     i2l8087:
 21961                           
 21962                           ; BSR set to: 62
 21963                           ;main.c: 135:   c_adc_chan = PS_V_ANA;
 21964  013B0E  0E00               	movlw	0
 21965  013B10  6E35               	movwf	Adc_Isr@c_adc_chan^0,c
 21966                           
 21967                           ; BSR set to: 62
 21968                           ;main.c: 136:   if (mode != roll_mode) {
 21969  013B12  0437               	decf	_mode^0,w,c
 21970  013B14  A4D8               	btfss	status,2,c
 21971                           
 21972                           ; BSR set to: 62
 21973                           ;main.c: 137:    i_index++;
 21974  013B16  2A38               	incf	_i_index^0,f,c	;volatile
 21975                           
 21976                           ; BSR set to: 62
 21977                           ;main.c: 139:   if (i_index >= 32) {
 21978  013B18  0E1F               	movlw	31
 21979  013B1A  6438               	cpfsgt	_i_index^0,c	;volatile
 21980  013B1C  D01B               	goto	i2l1279
 21981                           
 21982                           ; BSR set to: 62
 21983                           ;main.c: 140:    i_index = 0;
 21984  013B1E  0E00               	movlw	0
 21985  013B20  6E38               	movwf	_i_index^0,c	;volatile
 21986  013B22  D018               	goto	i2l1279
 21987  013B24                     i2l8099:
 21988                           
 21989                           ; BSR set to: 62
 21990  013B24  5035               	movf	Adc_Isr@c_adc_chan^0,w,c
 21991  013B26  6E05               	movwf	??_Adc_Isr^0,c
 21992  013B28  6A06               	clrf	(??_Adc_Isr+1)^0,c
 21993                           
 21994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21995                           ; Switch size 1, requested type "simple"
 21996                           ; Number of cases is 1, Range of values is 0 to 0
 21997                           ; switch strategies available:
 21998                           ; Name         Instructions Cycles
 21999                           ; simple_byte            4     3 (average)
 22000                           ;	Chosen strategy is simple_byte
 22001  013B2A  5006               	movf	(??_Adc_Isr+1)^0,w,c
 22002  013B2C  0A00               	xorlw	0	; case 0
 22003  013B2E  A4D8               	btfss	status,2,c
 22004  013B30  D7EE               	goto	i2l8087
 22005                           
 22006                           ; BSR set to: 62
 22007                           ; Switch size 1, requested type "simple"
 22008                           ; Number of cases is 5, Range of values is 0 to 61
 22009                           ; switch strategies available:
 22010                           ; Name         Instructions Cycles
 22011                           ; simple_byte           16     9 (average)
 22012                           ;	Chosen strategy is simple_byte
 22013  013B32  5005               	movf	??_Adc_Isr^0,w,c
 22014  013B34  0A00               	xorlw	0	; case 0
 22015  013B36  B4D8               	btfsc	status,2,c
 22016  013B38  D7E1               	goto	i2l8079
 22017  013B3A  0A01               	xorlw	1	; case 1
 22018  013B3C  B4D8               	btfsc	status,2,c
 22019  013B3E  D7E0               	goto	i2l8081
 22020  013B40  0A29               	xorlw	41	; case 40
 22021  013B42  B4D8               	btfsc	status,2,c
 22022  013B44  D7E1               	goto	i2l8085
 22023  013B46  0A01               	xorlw	1	; case 41
 22024  013B48  B4D8               	btfsc	status,2,c
 22025  013B4A  D7E1               	goto	i2l8087
 22026  013B4C  0A14               	xorlw	20	; case 61
 22027  013B4E  B4D8               	btfsc	status,2,c
 22028  013B50  D7D9               	goto	i2l8083
 22029  013B52  D7DD               	goto	i2l8087
 22030  013B54                     i2l1279:
 22031                           
 22032                           ; BSR set to: 62
 22033                           ;main.c: 144:  ADPCH = c_adc_chan;
 22034  013B54  0060  F0D7  FEF1   	movff	Adc_Isr@c_adc_chan,16113	;volatile
 22035                           
 22036                           ; BSR set to: 62
 22037                           ;main.c: 148:  adc_tick = 1;
 22038  013B5A  0E01               	movlw	1
 22039  013B5C  0101               	movlb	1	; () banked
 22040  013B5E  6F60               	movwf	_adc_tick& (0+255),b	;volatile
 22041                           
 22042                           ; BSR set to: 1
 22043  013B60  0012               	return		;funcret
 22044  013B62                     __end_of_Adc_Isr:
 22045                           	callstack 0
 22046                           
 22047 ;; *************** function _ADCC_GetConversionResult *****************
 22048 ;; Defined at:
 22049 ;;		line 139 in file "mcc_generated_files/adcc.c"
 22050 ;; Parameters:    Size  Location     Type
 22051 ;;		None
 22052 ;; Auto vars:     Size  Location     Type
 22053 ;;		None
 22054 ;; Return value:  Size  Location     Type
 22055 ;;                  2    0[COMRAM] unsigned short 
 22056 ;; Registers used:
 22057 ;;		wreg, status,2, status,0
 22058 ;; Tracked objects:
 22059 ;;		On entry : 0/1
 22060 ;;		On exit  : 3F/3E
 22061 ;;		Unchanged: 0/0
 22062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22065 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22066 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22067 ;;Total ram usage:        4 bytes
 22068 ;; Hardware stack levels used: 1
 22069 ;; This function calls:
 22070 ;;		Nothing
 22071 ;; This function is called by:
 22072 ;;		_Adc_Isr
 22073 ;; This function uses a non-reentrant model
 22074 ;;
 22075                           
 22076                           	psect	text127
 22077  01560E                     __ptext127:
 22078                           	callstack 0
 22079  01560E                     _ADCC_GetConversionResult:
 22080                           	callstack 15
 22081                           
 22082                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 22083                           
 22084                           ; BSR set to: 1
 22085                           ;incstack = 0
 22086  01560E  013E               	movlb	62	; () banked
 22087  015610  51F0               	movf	240,w,b	;volatile
 22088  015612  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 22089  015614  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 22090  015616  51EF               	movf	239,w,b	;volatile
 22091  015618  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 22092  01561A  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 22093  01561C  0E00               	movlw	0
 22094  01561E  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 22095  015620  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 22096                           
 22097                           ; BSR set to: 62
 22098  015622  0012               	return		;funcret
 22099  015624                     __end_of_ADCC_GetConversionResult:
 22100                           	callstack 0
 22101                           
 22102 ;; *************** function _TMR6_ISR *****************
 22103 ;; Defined at:
 22104 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 22105 ;; Parameters:    Size  Location     Type
 22106 ;;		None
 22107 ;; Auto vars:     Size  Location     Type
 22108 ;;		None
 22109 ;; Return value:  Size  Location     Type
 22110 ;;                  1    wreg      void 
 22111 ;; Registers used:
 22112 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22113 ;; Tracked objects:
 22114 ;;		On entry : 0/0
 22115 ;;		On exit  : 0/0
 22116 ;;		Unchanged: 0/0
 22117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22122 ;;Total ram usage:        2 bytes
 22123 ;; Hardware stack levels used: 1
 22124 ;; Hardware stack levels required when called: 2
 22125 ;; This function calls:
 22126 ;;		_TMR6_CallBack
 22127 ;; This function is called by:
 22128 ;;		Interrupt level 2
 22129 ;; This function uses a non-reentrant model
 22130 ;;
 22131                           
 22132                           	psect	text128
 22133  015068                     __ptext128:
 22134                           	callstack 0
 22135  015068                     _TMR6_ISR:
 22136                           	callstack 15
 22137                           
 22138                           ; BSR set to: 62
 22139                           ;incstack = 0
 22140  015068  006F FFE8  F00C    	movff	pclath,??_TMR6_ISR
 22141  01506E  006F FFEC  F00D    	movff	pclatu,??_TMR6_ISR+1
 22142                           
 22143                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 22144  015074  0139               	movlb	57	; () banked
 22145  015076  91A9               	bcf	169,0,b	;volatile
 22146                           
 22147                           ; BSR set to: 57
 22148                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 22149  015078  4A32               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 22150  01507A  2A33               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 22151  01507C  5033               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 22152  01507E  E104               	bnz	i2u706_40
 22153  015080  0E17               	movlw	23
 22154  015082  5C32               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 22155  015084  A0D8               	btfss	status,0,c
 22156  015086  D006               	goto	i2l481
 22157  015088                     i2u706_40:
 22158                           
 22159                           ; BSR set to: 57
 22160                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 22161  015088  ECB1  F0A9         	call	_TMR6_CallBack	;wreg free
 22162                           
 22163                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 22164  01508C  0E00               	movlw	0
 22165  01508E  6E33               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 22166  015090  0E00               	movlw	0
 22167  015092  6E32               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 22168  015094                     i2l481:
 22169  015094  0060  F037  FFFB   	movff	??_TMR6_ISR+1,pclatu
 22170  01509A  0060  F033  FFFA   	movff	??_TMR6_ISR,pclath
 22171  0150A0  0011               	retfie		f
 22172  0150A2                     __end_of_TMR6_ISR:
 22173                           	callstack 0
 22174                           
 22175 ;; *************** function _TMR6_CallBack *****************
 22176 ;; Defined at:
 22177 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 22178 ;; Parameters:    Size  Location     Type
 22179 ;;		None
 22180 ;; Auto vars:     Size  Location     Type
 22181 ;;		None
 22182 ;; Return value:  Size  Location     Type
 22183 ;;                  1    wreg      void 
 22184 ;; Registers used:
 22185 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22186 ;; Tracked objects:
 22187 ;;		On entry : 3F/39
 22188 ;;		On exit  : 0/0
 22189 ;;		Unchanged: 0/0
 22190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22195 ;;Total ram usage:        0 bytes
 22196 ;; Hardware stack levels used: 1
 22197 ;; Hardware stack levels required when called: 1
 22198 ;; This function calls:
 22199 ;;		Absolute function
 22200 ;;		_Led_Blink
 22201 ;;		_TMR6_DefaultInterruptHandler
 22202 ;; This function is called by:
 22203 ;;		_TMR6_ISR
 22204 ;; This function uses a non-reentrant model
 22205 ;;
 22206                           
 22207                           	psect	text129
 22208  015362                     __ptext129:
 22209                           	callstack 0
 22210  015362                     _TMR6_CallBack:
 22211                           	callstack 15
 22212                           
 22213                           ; BSR set to: 57
 22214                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 22215                           
 22216                           ;incstack = 0
 22217  015362  0101               	movlb	1	; () banked
 22218  015364  514F               	movf	_TMR6_InterruptHandler& (0+255),w,b
 22219  015366  1150               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 22220  015368  1151               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 22221  01536A  B4D8               	btfsc	status,2,c
 22222  01536C  0012               	return	
 22223                           
 22224                           ; BSR set to: 1
 22225                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 22226  01536E  D801               	call	i2u682_48
 22227  015370  0012               	return	
 22228  015372                     i2u682_48:
 22229  015372  0005               	push	
 22230  015374  6EFA               	movwf	pclath,c
 22231  015376  514F               	movf	_TMR6_InterruptHandler& (0+255),w,b
 22232  015378  6EFD               	movwf	tosl,c
 22233  01537A  5150               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 22234  01537C  6EFE               	movwf	tosh,c
 22235  01537E  5151               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 22236  015380  6EFF               	movwf	tosu,c
 22237  015382  50FA               	movf	pclath,w,c
 22238  015384  0012               	return		;indir
 22239  015386                     __end_of_TMR6_CallBack:
 22240                           	callstack 0
 22241                           
 22242 ;; *************** function _Led_Blink *****************
 22243 ;; Defined at:
 22244 ;;		line 94 in file "main.c"
 22245 ;; Parameters:    Size  Location     Type
 22246 ;;		None
 22247 ;; Auto vars:     Size  Location     Type
 22248 ;;		None
 22249 ;; Return value:  Size  Location     Type
 22250 ;;                  1    wreg      void 
 22251 ;; Registers used:
 22252 ;;		wreg, status,2, status,0
 22253 ;; Tracked objects:
 22254 ;;		On entry : 3F/1
 22255 ;;		On exit  : 3F/1
 22256 ;;		Unchanged: 0/0
 22257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22262 ;;Total ram usage:        1 bytes
 22263 ;; Hardware stack levels used: 1
 22264 ;; This function calls:
 22265 ;;		Nothing
 22266 ;; This function is called by:
 22267 ;;		_main
 22268 ;;		_TMR6_CallBack
 22269 ;; This function uses a non-reentrant model
 22270 ;;
 22271                           
 22272                           	psect	text130
 22273  015528                     __ptext130:
 22274                           	callstack 0
 22275  015528                     _Led_Blink:
 22276                           	callstack 15
 22277                           
 22278                           ; BSR set to: 1
 22279                           
 22280                           ; BSR set to: 1
 22281                           
 22282                           ;incstack = 0
 22283                           ;main.c: 96:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 22284  015528  A0BE               	btfss	190,0,c	;volatile
 22285  01552A  D002               	goto	i2u646_40
 22286  01552C  0E01               	movlw	1
 22287  01552E  D001               	goto	i2u646_46
 22288  015530                     i2u646_40:
 22289  015530  0E00               	movlw	0
 22290  015532                     i2u646_46:
 22291  015532  0AFF               	xorlw	255
 22292  015534  6E0B               	movwf	??_Led_Blink^0,c
 22293  015536  50BE               	movf	190,w,c	;volatile
 22294  015538  180B               	xorwf	??_Led_Blink^0,w,c
 22295  01553A  0BFE               	andlw	-2
 22296  01553C  180B               	xorwf	??_Led_Blink^0,w,c
 22297  01553E  6EBE               	movwf	190,c	;volatile
 22298                           
 22299                           ; BSR set to: 1
 22300                           ;main.c: 100:  disp_tick = 1;
 22301  015540  0E01               	movlw	1
 22302  015542  6F61               	movwf	_disp_tick& (0+255),b	;volatile
 22303                           
 22304                           ; BSR set to: 1
 22305  015544  0012               	return		;funcret
 22306  015546                     __end_of_Led_Blink:
 22307                           	callstack 0
 22308                           
 22309 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 22310 ;; Defined at:
 22311 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 22312 ;; Parameters:    Size  Location     Type
 22313 ;;		None
 22314 ;; Auto vars:     Size  Location     Type
 22315 ;;		None
 22316 ;; Return value:  Size  Location     Type
 22317 ;;                  1    wreg      void 
 22318 ;; Registers used:
 22319 ;;		None
 22320 ;; Tracked objects:
 22321 ;;		On entry : 3F/1
 22322 ;;		On exit  : 3F/1
 22323 ;;		Unchanged: 3F/0
 22324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22329 ;;Total ram usage:        0 bytes
 22330 ;; Hardware stack levels used: 1
 22331 ;; This function calls:
 22332 ;;		Nothing
 22333 ;; This function is called by:
 22334 ;;		_TMR6_Initialize
 22335 ;;		_TMR6_CallBack
 22336 ;; This function uses a non-reentrant model
 22337 ;;
 22338                           
 22339                           	psect	text131
 22340  015764                     __ptext131:
 22341                           	callstack 0
 22342  015764                     _TMR6_DefaultInterruptHandler:
 22343                           	callstack 15
 22344                           
 22345                           ; BSR set to: 1
 22346                           
 22347                           ; BSR set to: 1
 22348                           ;incstack = 0
 22349  015764  0012               	return		;funcret
 22350  015766                     __end_of_TMR6_DefaultInterruptHandler:
 22351                           	callstack 0
 22352                           
 22353 ;; *************** function _Default_ISR *****************
 22354 ;; Defined at:
 22355 ;;		line 82 in file "mcc_generated_files/interrupt_manager.c"
 22356 ;; Parameters:    Size  Location     Type
 22357 ;;		None
 22358 ;; Auto vars:     Size  Location     Type
 22359 ;;		None
 22360 ;; Return value:  Size  Location     Type
 22361 ;;                  1    wreg      void 
 22362 ;; Registers used:
 22363 ;;		None
 22364 ;; Tracked objects:
 22365 ;;		On entry : 0/0
 22366 ;;		On exit  : 0/0
 22367 ;;		Unchanged: 0/0
 22368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22373 ;;Total ram usage:        0 bytes
 22374 ;; Hardware stack levels used: 1
 22375 ;; This function calls:
 22376 ;;		Nothing
 22377 ;; This function is called by:
 22378 ;;		Interrupt level 2
 22379 ;; This function uses a non-reentrant model
 22380 ;;
 22381                           
 22382                           	psect	text132
 22383  015768                     __ptext132:
 22384                           	callstack 0
 22385  015768                     _Default_ISR:
 22386                           	callstack 17
 22387                           
 22388                           ; BSR set to: 1
 22389                           ;incstack = 0
 22390  015768  0011               	retfie		f
 22391  01576A                     __end_of_Default_ISR:
 22392                           	callstack 0
 22393                           
 22394 ;; *************** function _TMR5_ISR *****************
 22395 ;; Defined at:
 22396 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 22397 ;; Parameters:    Size  Location     Type
 22398 ;;		None
 22399 ;; Auto vars:     Size  Location     Type
 22400 ;;		None
 22401 ;; Return value:  Size  Location     Type
 22402 ;;                  1    wreg      void 
 22403 ;; Registers used:
 22404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22405 ;; Tracked objects:
 22406 ;;		On entry : 0/0
 22407 ;;		On exit  : 0/0
 22408 ;;		Unchanged: 0/0
 22409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22414 ;;Total ram usage:        2 bytes
 22415 ;; Hardware stack levels used: 1
 22416 ;; Hardware stack levels required when called: 1
 22417 ;; This function calls:
 22418 ;;		Absolute function
 22419 ;;		_TMR5_DefaultInterruptHandler
 22420 ;;		_TMR5_WriteTimer
 22421 ;;		_Timers_Isr
 22422 ;; This function is called by:
 22423 ;;		Interrupt level 2
 22424 ;; This function uses a non-reentrant model
 22425 ;;
 22426                           
 22427                           	psect	text133
 22428  014AB4                     __ptext133:
 22429                           	callstack 0
 22430  014AB4                     _TMR5_ISR:
 22431                           	callstack 16
 22432                           
 22433                           ;incstack = 0
 22434  014AB4  006F FFE8  F012    	movff	pclath,??_TMR5_ISR
 22435  014ABA  006F FFEC  F013    	movff	pclatu,??_TMR5_ISR+1
 22436                           
 22437                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 22438  014AC0  0139               	movlb	57	; () banked
 22439  014AC2  9DA8               	bcf	168,6,b	;volatile
 22440                           
 22441                           ; BSR set to: 57
 22442                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 22443  014AC4  C030  F00E         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 22444  014AC8  C031  F00F         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 22445  014ACC  ECC3  F0A9         	call	_TMR5_WriteTimer	;wreg free
 22446                           
 22447                           ; BSR set to: 57
 22448                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 22449  014AD0  0101               	movlb	1	; () banked
 22450  014AD2  514C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 22451  014AD4  114D               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 22452  014AD6  114E               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 22453  014AD8  B4D8               	btfsc	status,2,c
 22454  014ADA  D00C               	goto	i2u708_49
 22455                           
 22456                           ; BSR set to: 1
 22457                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 22458  014ADC  D801               	call	i2u708_48
 22459  014ADE  D00A               	goto	i2u708_49
 22460  014AE0                     i2u708_48:
 22461  014AE0  0005               	push	
 22462  014AE2  6EFA               	movwf	pclath,c
 22463  014AE4  514C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 22464  014AE6  6EFD               	movwf	tosl,c
 22465  014AE8  514D               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 22466  014AEA  6EFE               	movwf	tosh,c
 22467  014AEC  514E               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 22468  014AEE  6EFF               	movwf	tosu,c
 22469  014AF0  50FA               	movf	pclath,w,c
 22470  014AF2  0012               	return		;indir
 22471  014AF4                     i2u708_49:
 22472  014AF4  0060  F04F  FFFB   	movff	??_TMR5_ISR+1,pclatu
 22473  014AFA  0060  F04B  FFFA   	movff	??_TMR5_ISR,pclath
 22474  014B00  0011               	retfie		f
 22475  014B02                     __end_of_TMR5_ISR:
 22476                           	callstack 0
 22477                           
 22478 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 22479 ;; Defined at:
 22480 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 22481 ;; Parameters:    Size  Location     Type
 22482 ;;		None
 22483 ;; Auto vars:     Size  Location     Type
 22484 ;;		None
 22485 ;; Return value:  Size  Location     Type
 22486 ;;                  1    wreg      void 
 22487 ;; Registers used:
 22488 ;;		None
 22489 ;; Tracked objects:
 22490 ;;		On entry : 3F/1
 22491 ;;		On exit  : 3F/1
 22492 ;;		Unchanged: 3F/0
 22493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22498 ;;Total ram usage:        0 bytes
 22499 ;; Hardware stack levels used: 1
 22500 ;; This function calls:
 22501 ;;		Nothing
 22502 ;; This function is called by:
 22503 ;;		_TMR5_Initialize
 22504 ;;		_TMR5_ISR
 22505 ;; This function uses a non-reentrant model
 22506 ;;
 22507                           
 22508                           	psect	text134
 22509  01576A                     __ptext134:
 22510                           	callstack 0
 22511  01576A                     _TMR5_DefaultInterruptHandler:
 22512                           	callstack 16
 22513                           
 22514                           ; BSR set to: 1
 22515                           
 22516                           ;incstack = 0
 22517  01576A  0012               	return		;funcret
 22518  01576C                     __end_of_TMR5_DefaultInterruptHandler:
 22519                           	callstack 0
 22520                           
 22521 ;; *************** function _Timers_Isr *****************
 22522 ;; Defined at:
 22523 ;;		line 48 in file "timers.c"
 22524 ;; Parameters:    Size  Location     Type
 22525 ;;		None
 22526 ;; Auto vars:     Size  Location     Type
 22527 ;;  i               2   15[COMRAM] int 
 22528 ;; Return value:  Size  Location     Type
 22529 ;;                  1    wreg      void 
 22530 ;; Registers used:
 22531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22532 ;; Tracked objects:
 22533 ;;		On entry : 3F/1
 22534 ;;		On exit  : 3F/1
 22535 ;;		Unchanged: 3F/0
 22536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22540 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22541 ;;Total ram usage:        4 bytes
 22542 ;; Hardware stack levels used: 1
 22543 ;; This function calls:
 22544 ;;		Nothing
 22545 ;; This function is called by:
 22546 ;;		_main
 22547 ;;		_TMR5_ISR
 22548 ;; This function uses a non-reentrant model
 22549 ;;
 22550                           
 22551                           	psect	text135
 22552  014976                     __ptext135:
 22553                           	callstack 0
 22554  014976                     _Timers_Isr:
 22555                           	callstack 16
 22556                           
 22557                           ; BSR set to: 1
 22558                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 22559                           
 22560                           ; BSR set to: 1
 22561                           ;incstack = 0
 22562  014976  0E00               	movlw	0
 22563  014978  6E11               	movwf	(Timers_Isr@i+1)^0,c
 22564  01497A  0E00               	movlw	0
 22565  01497C  6E10               	movwf	Timers_Isr@i^0,c
 22566  01497E                     i2l8303:
 22567                           
 22568                           ; BSR set to: 1
 22569                           ;timers.c: 52:   if (tickCount[i] != 0) {
 22570  01497E  90D8               	bcf	status,0,c
 22571  014980  3410               	rlcf	Timers_Isr@i^0,w,c
 22572  014982  6ED9               	movwf	fsr2l,c
 22573  014984  3411               	rlcf	(Timers_Isr@i+1)^0,w,c
 22574  014986  6EDA               	movwf	fsr2h,c
 22575  014988  0E0C               	movlw	low _tickCount
 22576  01498A  26D9               	addwf	fsr2l,f,c
 22577  01498C  0E01               	movlw	high _tickCount
 22578  01498E  22DA               	addwfc	fsr2h,f,c
 22579  014990  50DE               	movf	postinc2,w,c
 22580  014992  10DE               	iorwf	postinc2,w,c
 22581  014994  B4D8               	btfsc	status,2,c
 22582  014996  D00C               	goto	i2l8307
 22583                           
 22584                           ; BSR set to: 1
 22585                           ;timers.c: 53:    tickCount[i]--;
 22586  014998  90D8               	bcf	status,0,c
 22587  01499A  3410               	rlcf	Timers_Isr@i^0,w,c
 22588  01499C  6ED9               	movwf	fsr2l,c
 22589  01499E  3411               	rlcf	(Timers_Isr@i+1)^0,w,c
 22590  0149A0  6EDA               	movwf	fsr2h,c
 22591  0149A2  0E0C               	movlw	low _tickCount
 22592  0149A4  26D9               	addwf	fsr2l,f,c
 22593  0149A6  0E01               	movlw	high _tickCount
 22594  0149A8  22DA               	addwfc	fsr2h,f,c
 22595  0149AA  06DE               	decf	postinc2,f,c
 22596  0149AC  0E00               	movlw	0
 22597  0149AE  5ADD               	subwfb	postdec2,f,c
 22598  0149B0                     i2l8307:
 22599                           
 22600                           ; BSR set to: 1
 22601                           ;timers.c: 55:  }
 22602  0149B0  4A10               	infsnz	Timers_Isr@i^0,f,c
 22603  0149B2  2A11               	incf	(Timers_Isr@i+1)^0,f,c
 22604                           
 22605                           ; BSR set to: 1
 22606  0149B4  BE11               	btfsc	(Timers_Isr@i+1)^0,7,c
 22607  0149B6  D7E3               	goto	i2l8303
 22608  0149B8  5011               	movf	(Timers_Isr@i+1)^0,w,c
 22609  0149BA  E105               	bnz	i2u703_40
 22610  0149BC  0E06               	movlw	6
 22611  0149BE  5C10               	subwf	Timers_Isr@i^0,w,c
 22612  0149C0  B0D8               	btfsc	status,0,c
 22613  0149C2  0012               	return	
 22614  0149C4  D7DC               	goto	i2l8303
 22615  0149C6                     i2u703_40:
 22616                           
 22617                           ; BSR set to: 1
 22618  0149C6  0012               	return		;funcret
 22619  0149C8                     __end_of_Timers_Isr:
 22620                           	callstack 0
 22621                           
 22622 ;; *************** function _TMR5_WriteTimer *****************
 22623 ;; Defined at:
 22624 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 22625 ;; Parameters:    Size  Location     Type
 22626 ;;  timerVal        2   13[COMRAM] unsigned short 
 22627 ;; Auto vars:     Size  Location     Type
 22628 ;;		None
 22629 ;; Return value:  Size  Location     Type
 22630 ;;                  1    wreg      void 
 22631 ;; Registers used:
 22632 ;;		None
 22633 ;; Tracked objects:
 22634 ;;		On entry : 3F/39
 22635 ;;		On exit  : 3F/39
 22636 ;;		Unchanged: 3E/0
 22637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22642 ;;Total ram usage:        2 bytes
 22643 ;; Hardware stack levels used: 1
 22644 ;; This function calls:
 22645 ;;		Nothing
 22646 ;; This function is called by:
 22647 ;;		_TMR5_ISR
 22648 ;; This function uses a non-reentrant model
 22649 ;;
 22650                           
 22651                           	psect	text136
 22652  015386                     __ptext136:
 22653                           	callstack 0
 22654  015386                     _TMR5_WriteTimer:
 22655                           	callstack 16
 22656                           
 22657                           ; BSR set to: 57
 22658                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 22659                           
 22660                           ; BSR set to: 1
 22661                           ;incstack = 0
 22662  015386  A49A               	btfss	154,2,c	;volatile
 22663  015388  D009               	goto	i2l576
 22664                           
 22665                           ; BSR set to: 57
 22666                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 22667  01538A  909A               	bcf	154,0,c	;volatile
 22668                           
 22669                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 22670  01538C  0060  F03F  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 22671                           
 22672                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 22673  015392  0060  F03B  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 22674                           
 22675                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 22676  015398  809A               	bsf	154,0,c	;volatile
 22677                           
 22678                           ;mcc_generated_files/tmr5.c: 141:     }
 22679  01539A  0012               	return	
 22680  01539C                     i2l576:
 22681                           
 22682                           ; BSR set to: 57
 22683                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 22684  01539C  0060  F03F  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 22685                           
 22686                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 22687  0153A2  0060  F03B  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 22688                           
 22689                           ; BSR set to: 57
 22690  0153A8  0012               	return		;funcret
 22691  0153AA                     __end_of_TMR5_WriteTimer:
 22692                           	callstack 0
 22693                           
 22694 ;; *************** function _DMA1_DMASCNTI_ISR *****************
 22695 ;; Defined at:
 22696 ;;		line 170 in file "mcc_generated_files/dma1.c"
 22697 ;; Parameters:    Size  Location     Type
 22698 ;;		None
 22699 ;; Auto vars:     Size  Location     Type
 22700 ;;		None
 22701 ;; Return value:  Size  Location     Type
 22702 ;;                  1    wreg      void 
 22703 ;; Registers used:
 22704 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22705 ;; Tracked objects:
 22706 ;;		On entry : 0/0
 22707 ;;		On exit  : 0/0
 22708 ;;		Unchanged: 0/0
 22709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22714 ;;Total ram usage:        2 bytes
 22715 ;; Hardware stack levels used: 1
 22716 ;; Hardware stack levels required when called: 1
 22717 ;; This function calls:
 22718 ;;		Absolute function
 22719 ;;		_DMA1_DefaultInterruptHandler
 22720 ;;		_source_dma_done
 22721 ;; This function is called by:
 22722 ;;		Interrupt level 2
 22723 ;; This function uses a non-reentrant model
 22724 ;;
 22725                           
 22726                           	psect	text137
 22727  014D3C                     __ptext137:
 22728                           	callstack 0
 22729  014D3C                     _DMA1_DMASCNTI_ISR:
 22730                           	callstack 16
 22731                           
 22732                           ; BSR set to: 57
 22733                           ;incstack = 0
 22734  014D3C  006F FFE8  F014    	movff	pclath,??_DMA1_DMASCNTI_ISR
 22735  014D42  006F FFEC  F015    	movff	pclatu,??_DMA1_DMASCNTI_ISR+1
 22736                           
 22737                           ;mcc_generated_files/dma1.c: 173:     PIR2bits.DMA1SCNTIF = 0;
 22738  014D48  0139               	movlb	57	; () banked
 22739  014D4A  91A2               	bcf	162,0,b	;volatile
 22740                           
 22741                           ; BSR set to: 57
 22742                           ;mcc_generated_files/dma1.c: 175:     if (DMA1_SCNTI_InterruptHandler)
 22743  014D4C  0101               	movlb	1	; () banked
 22744  014D4E  5149               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 22745  014D50  114A               	iorwf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 22746  014D52  114B               	iorwf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 22747  014D54  B4D8               	btfsc	status,2,c
 22748  014D56  D00C               	goto	i2u710_49
 22749                           
 22750                           ; BSR set to: 1
 22751                           ;mcc_generated_files/dma1.c: 176:             DMA1_SCNTI_InterruptHandler();
 22752  014D58  D801               	call	i2u710_48
 22753  014D5A  D00A               	goto	i2u710_49
 22754  014D5C                     i2u710_48:
 22755  014D5C  0005               	push	
 22756  014D5E  6EFA               	movwf	pclath,c
 22757  014D60  5149               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 22758  014D62  6EFD               	movwf	tosl,c
 22759  014D64  514A               	movf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 22760  014D66  6EFE               	movwf	tosh,c
 22761  014D68  514B               	movf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 22762  014D6A  6EFF               	movwf	tosu,c
 22763  014D6C  50FA               	movf	pclath,w,c
 22764  014D6E  0012               	return		;indir
 22765  014D70                     i2u710_49:
 22766  014D70  0060  F057  FFFB   	movff	??_DMA1_DMASCNTI_ISR+1,pclatu
 22767  014D76  0060  F053  FFFA   	movff	??_DMA1_DMASCNTI_ISR,pclath
 22768  014D7C  0011               	retfie		f
 22769  014D7E                     __end_of_DMA1_DMASCNTI_ISR:
 22770                           	callstack 0
 22771                           
 22772 ;; *************** function _DMA1_DefaultInterruptHandler *****************
 22773 ;; Defined at:
 22774 ;;		line 184 in file "mcc_generated_files/dma1.c"
 22775 ;; Parameters:    Size  Location     Type
 22776 ;;		None
 22777 ;; Auto vars:     Size  Location     Type
 22778 ;;		None
 22779 ;; Return value:  Size  Location     Type
 22780 ;;                  1    wreg      void 
 22781 ;; Registers used:
 22782 ;;		None
 22783 ;; Tracked objects:
 22784 ;;		On entry : 3F/1
 22785 ;;		On exit  : 3F/1
 22786 ;;		Unchanged: 3F/0
 22787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22792 ;;Total ram usage:        0 bytes
 22793 ;; Hardware stack levels used: 1
 22794 ;; This function calls:
 22795 ;;		Nothing
 22796 ;; This function is called by:
 22797 ;;		_DMA1_Initialize
 22798 ;;		_DMA1_DMASCNTI_ISR
 22799 ;; This function uses a non-reentrant model
 22800 ;;
 22801                           
 22802                           	psect	text138
 22803  01576C                     __ptext138:
 22804                           	callstack 0
 22805  01576C                     _DMA1_DefaultInterruptHandler:
 22806                           	callstack 16
 22807                           
 22808                           ; BSR set to: 1
 22809                           
 22810                           ;incstack = 0
 22811  01576C  0012               	return		;funcret
 22812  01576E                     __end_of_DMA1_DefaultInterruptHandler:
 22813                           	callstack 0
 22814                           
 22815 ;; *************** function _source_dma_done *****************
 22816 ;; Defined at:
 22817 ;;		line 304 in file "eadog.c"
 22818 ;; Parameters:    Size  Location     Type
 22819 ;;		None
 22820 ;; Auto vars:     Size  Location     Type
 22821 ;;		None
 22822 ;; Return value:  Size  Location     Type
 22823 ;;                  1    wreg      void 
 22824 ;; Registers used:
 22825 ;;		None
 22826 ;; Tracked objects:
 22827 ;;		On entry : 3F/1
 22828 ;;		On exit  : 3F/1
 22829 ;;		Unchanged: 0/0
 22830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22835 ;;Total ram usage:        0 bytes
 22836 ;; Hardware stack levels used: 1
 22837 ;; This function calls:
 22838 ;;		Nothing
 22839 ;; This function is called by:
 22840 ;;		_main
 22841 ;;		_DMA1_DMASCNTI_ISR
 22842 ;; This function uses a non-reentrant model
 22843 ;;
 22844                           
 22845                           	psect	text139
 22846  015758                     __ptext139:
 22847                           	callstack 0
 22848  015758                     _source_dma_done:
 22849                           	callstack 16
 22850                           
 22851                           ; BSR set to: 1
 22852                           ;eadog.c: 306:  spi_link.LCD_DATA = 0;
 22853                           
 22854                           ; BSR set to: 1
 22855                           ;incstack = 0
 22856  015758  9700               	bcf	_spi_link& (0+255),3,b	;volatile
 22857                           
 22858                           ; BSR set to: 1
 22859  01575A  0012               	return		;funcret
 22860  01575C                     __end_of_source_dma_done:
 22861                           	callstack 0
 22862                           
 22863 ;; *************** function _UART1_framing_err_vect_isr *****************
 22864 ;; Defined at:
 22865 ;;		line 259 in file "mcc_generated_files/uart1.c"
 22866 ;; Parameters:    Size  Location     Type
 22867 ;;		None
 22868 ;; Auto vars:     Size  Location     Type
 22869 ;;		None
 22870 ;; Return value:  Size  Location     Type
 22871 ;;                  1    wreg      void 
 22872 ;; Registers used:
 22873 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22874 ;; Tracked objects:
 22875 ;;		On entry : 0/0
 22876 ;;		On exit  : 0/0
 22877 ;;		Unchanged: 0/0
 22878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22881 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22883 ;;Total ram usage:        2 bytes
 22884 ;; Hardware stack levels used: 1
 22885 ;; Hardware stack levels required when called: 1
 22886 ;; This function calls:
 22887 ;;		Absolute function
 22888 ;;		_UART1_FramingError_ISR
 22889 ;; This function is called by:
 22890 ;;		Interrupt level 2
 22891 ;; This function uses a non-reentrant model
 22892 ;;
 22893                           
 22894                           	psect	text140
 22895  014F38                     __ptext140:
 22896                           	callstack 0
 22897  014F38                     _UART1_framing_err_vect_isr:
 22898                           	callstack 16
 22899                           
 22900                           ; BSR set to: 1
 22901                           ;incstack = 0
 22902  014F38  006F FFE8  F016    	movff	pclath,??_UART1_framing_err_vect_isr
 22903  014F3E  006F FFEC  F017    	movff	pclatu,??_UART1_framing_err_vect_isr+1
 22904                           
 22905                           ;mcc_generated_files/uart1.c: 261:     if(UART1_FramingErrorInterruptHandler)
 22906  014F44  0101               	movlb	1	; () banked
 22907  014F46  5158               	movf	_UART1_FramingErrorInterruptHandler& (0+255),w,b
 22908  014F48  1159               	iorwf	(_UART1_FramingErrorInterruptHandler+1)& (0+255),w,b
 22909  014F4A  115A               	iorwf	(_UART1_FramingErrorInterruptHandler+2)& (0+255),w,b
 22910  014F4C  B4D8               	btfsc	status,2,c
 22911  014F4E  D00C               	goto	i2u716_49
 22912                           
 22913                           ; BSR set to: 1
 22914                           ;mcc_generated_files/uart1.c: 262:     {;mcc_generated_files/uart1.c: 263:         UART1
      +                          _FramingErrorInterruptHandler();
 22915  014F50  D801               	call	i2u716_48
 22916  014F52  D00A               	goto	i2u716_49
 22917  014F54                     i2u716_48:
 22918  014F54  0005               	push	
 22919  014F56  6EFA               	movwf	pclath,c
 22920  014F58  5158               	movf	_UART1_FramingErrorInterruptHandler& (0+255),w,b
 22921  014F5A  6EFD               	movwf	tosl,c
 22922  014F5C  5159               	movf	(_UART1_FramingErrorInterruptHandler+1)& (0+255),w,b
 22923  014F5E  6EFE               	movwf	tosh,c
 22924  014F60  515A               	movf	(_UART1_FramingErrorInterruptHandler+2)& (0+255),w,b
 22925  014F62  6EFF               	movwf	tosu,c
 22926  014F64  50FA               	movf	pclath,w,c
 22927  014F66  0012               	return		;indir
 22928  014F68                     i2u716_49:
 22929  014F68  0060  F05F  FFFB   	movff	??_UART1_framing_err_vect_isr+1,pclatu
 22930  014F6E  0060  F05B  FFFA   	movff	??_UART1_framing_err_vect_isr,pclath
 22931  014F74  0011               	retfie		f
 22932  014F76                     __end_of_UART1_framing_err_vect_isr:
 22933                           	callstack 0
 22934                           
 22935 ;; *************** function _UART1_FramingError_ISR *****************
 22936 ;; Defined at:
 22937 ;;		line 349 in file "mcc_generated_files/uart1.c"
 22938 ;; Parameters:    Size  Location     Type
 22939 ;;		None
 22940 ;; Auto vars:     Size  Location     Type
 22941 ;;		None
 22942 ;; Return value:  Size  Location     Type
 22943 ;;                  1    wreg      void 
 22944 ;; Registers used:
 22945 ;;		wreg, status,2
 22946 ;; Tracked objects:
 22947 ;;		On entry : 3F/1
 22948 ;;		On exit  : 3F/3D
 22949 ;;		Unchanged: 0/0
 22950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22955 ;;Total ram usage:        0 bytes
 22956 ;; Hardware stack levels used: 1
 22957 ;; This function calls:
 22958 ;;		Nothing
 22959 ;; This function is called by:
 22960 ;;		_UART1_Initialize
 22961 ;;		_UART1_framing_err_vect_isr
 22962 ;; This function uses a non-reentrant model
 22963 ;;
 22964                           
 22965                           	psect	text141
 22966  015732                     __ptext141:
 22967                           	callstack 0
 22968  015732                     _UART1_FramingError_ISR:
 22969                           	callstack 16
 22970                           
 22971                           ; BSR set to: 1
 22972                           ;mcc_generated_files/uart1.c: 352:     U1ERRIR = 0;
 22973                           
 22974                           ;incstack = 0
 22975  015732  0E00               	movlw	0
 22976  015734  013D               	movlb	61	; () banked
 22977  015736  6FF9               	movwf	249,b	;volatile
 22978                           
 22979                           ; BSR set to: 61
 22980  015738  0012               	return		;funcret
 22981  01573A                     __end_of_UART1_FramingError_ISR:
 22982                           	callstack 0
 22983                           
 22984 ;; *************** function _UART1_vect_isr *****************
 22985 ;; Defined at:
 22986 ;;		line 267 in file "mcc_generated_files/uart1.c"
 22987 ;; Parameters:    Size  Location     Type
 22988 ;;		None
 22989 ;; Auto vars:     Size  Location     Type
 22990 ;;		None
 22991 ;; Return value:  Size  Location     Type
 22992 ;;                  1    wreg      void 
 22993 ;; Registers used:
 22994 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22995 ;; Tracked objects:
 22996 ;;		On entry : 0/0
 22997 ;;		On exit  : 0/0
 22998 ;;		Unchanged: 0/0
 22999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23004 ;;Total ram usage:        2 bytes
 23005 ;; Hardware stack levels used: 1
 23006 ;; Hardware stack levels required when called: 1
 23007 ;; This function calls:
 23008 ;;		Absolute function
 23009 ;;		_UART1_UartInterrupt_ISR
 23010 ;; This function is called by:
 23011 ;;		Interrupt level 2
 23012 ;; This function uses a non-reentrant model
 23013 ;;
 23014                           
 23015                           	psect	text142
 23016  014F78                     __ptext142:
 23017                           	callstack 0
 23018  014F78                     _UART1_vect_isr:
 23019                           	callstack 16
 23020                           
 23021                           ; BSR set to: 61
 23022                           ;incstack = 0
 23023  014F78  006F FFE8  F018    	movff	pclath,??_UART1_vect_isr
 23024  014F7E  006F FFEC  F019    	movff	pclatu,??_UART1_vect_isr+1
 23025                           
 23026                           ;mcc_generated_files/uart1.c: 269:     if(UART1_UARTInterruptHandler)
 23027  014F84  0101               	movlb	1	; () banked
 23028  014F86  5155               	movf	_UART1_UARTInterruptHandler& (0+255),w,b
 23029  014F88  1156               	iorwf	(_UART1_UARTInterruptHandler+1)& (0+255),w,b
 23030  014F8A  1157               	iorwf	(_UART1_UARTInterruptHandler+2)& (0+255),w,b
 23031  014F8C  B4D8               	btfsc	status,2,c
 23032  014F8E  D00C               	goto	i2u718_49
 23033                           
 23034                           ; BSR set to: 1
 23035                           ;mcc_generated_files/uart1.c: 270:     {;mcc_generated_files/uart1.c: 271:         UART1
      +                          _UARTInterruptHandler();
 23036  014F90  D801               	call	i2u718_48
 23037  014F92  D00A               	goto	i2u718_49
 23038  014F94                     i2u718_48:
 23039  014F94  0005               	push	
 23040  014F96  6EFA               	movwf	pclath,c
 23041  014F98  5155               	movf	_UART1_UARTInterruptHandler& (0+255),w,b
 23042  014F9A  6EFD               	movwf	tosl,c
 23043  014F9C  5156               	movf	(_UART1_UARTInterruptHandler+1)& (0+255),w,b
 23044  014F9E  6EFE               	movwf	tosh,c
 23045  014FA0  5157               	movf	(_UART1_UARTInterruptHandler+2)& (0+255),w,b
 23046  014FA2  6EFF               	movwf	tosu,c
 23047  014FA4  50FA               	movf	pclath,w,c
 23048  014FA6  0012               	return		;indir
 23049  014FA8                     i2u718_49:
 23050  014FA8  0060  F067  FFFB   	movff	??_UART1_vect_isr+1,pclatu
 23051  014FAE  0060  F063  FFFA   	movff	??_UART1_vect_isr,pclath
 23052  014FB4  0011               	retfie		f
 23053  014FB6                     __end_of_UART1_vect_isr:
 23054                           	callstack 0
 23055                           
 23056 ;; *************** function _UART1_UartInterrupt_ISR *****************
 23057 ;; Defined at:
 23058 ;;		line 358 in file "mcc_generated_files/uart1.c"
 23059 ;; Parameters:    Size  Location     Type
 23060 ;;		None
 23061 ;; Auto vars:     Size  Location     Type
 23062 ;;		None
 23063 ;; Return value:  Size  Location     Type
 23064 ;;                  1    wreg      void 
 23065 ;; Registers used:
 23066 ;;		None
 23067 ;; Tracked objects:
 23068 ;;		On entry : 3F/1
 23069 ;;		On exit  : 3F/3D
 23070 ;;		Unchanged: 0/0
 23071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23076 ;;Total ram usage:        0 bytes
 23077 ;; Hardware stack levels used: 1
 23078 ;; This function calls:
 23079 ;;		Nothing
 23080 ;; This function is called by:
 23081 ;;		_UART1_Initialize
 23082 ;;		_UART1_vect_isr
 23083 ;; This function uses a non-reentrant model
 23084 ;;
 23085                           
 23086                           	psect	text143
 23087  015752                     __ptext143:
 23088                           	callstack 0
 23089  015752                     _UART1_UartInterrupt_ISR:
 23090                           	callstack 16
 23091                           
 23092                           ; BSR set to: 1
 23093                           ;mcc_generated_files/uart1.c: 361:     U1UIRbits.WUIF = 0;
 23094                           
 23095                           ;incstack = 0
 23096  015752  013D               	movlb	61	; () banked
 23097  015754  9FF8               	bcf	248,7,b	;volatile
 23098                           
 23099                           ; BSR set to: 61
 23100  015756  0012               	return		;funcret
 23101  015758                     __end_of_UART1_UartInterrupt_ISR:
 23102                           	callstack 0
 23103                           
 23104                           ;
 23105                           ; Interrupt Vector Table @ 0x8
 23106                           ;
 23107                           
 23108                           	psect	ivt0x8
 23109  000008                     __pivt0x8:
 23110                           	callstack 0
 23111  000008                     ivt0x8_base:
 23112                           	callstack 0
 23113                           
 23114                           ; Vector 0 : SWINT
 23115  000008  55DA               	dw	_Default_ISR shr (0+2)
 23116                           
 23117                           ; Vector 1 : HLVD
 23118  00000A  55DA               	dw	_Default_ISR shr (0+2)
 23119                           
 23120                           ; Vector 2 : OSF
 23121  00000C  55DA               	dw	_Default_ISR shr (0+2)
 23122                           
 23123                           ; Vector 3 : CSW
 23124  00000E  55DA               	dw	_Default_ISR shr (0+2)
 23125                           
 23126                           ; Vector 4 : NVM
 23127  000010  55DA               	dw	_Default_ISR shr (0+2)
 23128                           
 23129                           ; Vector 5 : SCAN
 23130  000012  55DA               	dw	_Default_ISR shr (0+2)
 23131                           
 23132                           ; Vector 6 : CRC
 23133  000014  55DA               	dw	_Default_ISR shr (0+2)
 23134                           
 23135                           ; Vector 7 : IOC
 23136  000016  55DA               	dw	_Default_ISR shr (0+2)
 23137                           
 23138                           ; Vector 8 : INT0
 23139  000018  55DA               	dw	_Default_ISR shr (0+2)
 23140                           
 23141                           ; Vector 9 : ZCD
 23142  00001A  55DA               	dw	_Default_ISR shr (0+2)
 23143                           
 23144                           ; Vector 10 : AD
 23145  00001C  533E               	dw	_ADCC_ISR shr (0+2)
 23146                           
 23147                           ; Vector 11 : ADT
 23148  00001E  55DA               	dw	_Default_ISR shr (0+2)
 23149                           
 23150                           ; Vector 12 : CMP1
 23151  000020  55DA               	dw	_Default_ISR shr (0+2)
 23152                           
 23153                           ; Vector 13 : SMT1
 23154  000022  55DA               	dw	_Default_ISR shr (0+2)
 23155                           
 23156                           ; Vector 14 : SMT1PRA
 23157  000024  55DA               	dw	_Default_ISR shr (0+2)
 23158                           
 23159                           ; Vector 15 : SMT1PRW
 23160  000026  55DA               	dw	_Default_ISR shr (0+2)
 23161                           
 23162                           ; Vector 16 : DMA1SCNT
 23163  000028  534F               	dw	_DMA1_DMASCNTI_ISR shr (0+2)
 23164                           
 23165                           ; Vector 17 : DMA1DCNT
 23166  00002A  55DA               	dw	_Default_ISR shr (0+2)
 23167                           
 23168                           ; Vector 18 : DMA1OR
 23169  00002C  55DA               	dw	_Default_ISR shr (0+2)
 23170                           
 23171                           ; Vector 19 : DMA1A
 23172  00002E  55DA               	dw	_Default_ISR shr (0+2)
 23173                           
 23174                           ; Vector 20 : SPI1RX
 23175  000030  55DA               	dw	_Default_ISR shr (0+2)
 23176                           
 23177                           ; Vector 21 : SPI1TX
 23178  000032  55DA               	dw	_Default_ISR shr (0+2)
 23179                           
 23180                           ; Vector 22 : SPI1
 23181  000034  55DA               	dw	_Default_ISR shr (0+2)
 23182                           
 23183                           ; Vector 23 : I2C1RX
 23184  000036  55DA               	dw	_Default_ISR shr (0+2)
 23185                           
 23186                           ; Vector 24 : I2C1TX
 23187  000038  55DA               	dw	_Default_ISR shr (0+2)
 23188                           
 23189                           ; Vector 25 : I2C1
 23190  00003A  55DA               	dw	_Default_ISR shr (0+2)
 23191                           
 23192                           ; Vector 26 : I2C1E
 23193  00003C  55DA               	dw	_Default_ISR shr (0+2)
 23194                           
 23195                           ; Vector 27 : U1RX
 23196  00003E  530A               	dw	_UART1_rx_vect_isr shr (0+2)
 23197                           
 23198                           ; Vector 28 : U1TX
 23199  000040  52F8               	dw	_UART1_tx_vect_isr shr (0+2)
 23200                           
 23201                           ; Vector 29 : U1E
 23202  000042  53CE               	dw	_UART1_framing_err_vect_isr shr (0+2)
 23203                           
 23204                           ; Vector 30 : U1
 23205  000044  53DE               	dw	_UART1_vect_isr shr (0+2)
 23206                           
 23207                           ; Vector 31 : TMR0
 23208  000046  55DA               	dw	_Default_ISR shr (0+2)
 23209                           
 23210                           ; Vector 32 : TMR1
 23211  000048  55DA               	dw	_Default_ISR shr (0+2)
 23212                           
 23213                           ; Vector 33 : TMR1G
 23214  00004A  55DA               	dw	_Default_ISR shr (0+2)
 23215                           
 23216                           ; Vector 34 : TMR2
 23217  00004C  55DA               	dw	_Default_ISR shr (0+2)
 23218                           
 23219                           ; Vector 35 : CCP1
 23220  00004E  55DA               	dw	_Default_ISR shr (0+2)
 23221                           
 23222                           ; Vector 36 : Undefined
 23223  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 23224                           
 23225                           ; Vector 37 : NCO1
 23226  000052  55DA               	dw	_Default_ISR shr (0+2)
 23227                           
 23228                           ; Vector 38 : CWG1
 23229  000054  55DA               	dw	_Default_ISR shr (0+2)
 23230                           
 23231                           ; Vector 39 : CLC1
 23232  000056  55DA               	dw	_Default_ISR shr (0+2)
 23233                           
 23234                           ; Vector 40 : INT1
 23235  000058  55DA               	dw	_Default_ISR shr (0+2)
 23236                           
 23237                           ; Vector 41 : CMP2
 23238  00005A  55DA               	dw	_Default_ISR shr (0+2)
 23239                           
 23240                           ; Vector 42 : DMA2SCNT
 23241  00005C  55DA               	dw	_Default_ISR shr (0+2)
 23242                           
 23243                           ; Vector 43 : DMA2DCNT
 23244  00005E  55DA               	dw	_Default_ISR shr (0+2)
 23245                           
 23246                           ; Vector 44 : DMA2OR
 23247  000060  55DA               	dw	_Default_ISR shr (0+2)
 23248                           
 23249                           ; Vector 45 : DMA2A
 23250  000062  55DA               	dw	_Default_ISR shr (0+2)
 23251                           
 23252                           ; Vector 46 : I2C2RX
 23253  000064  55DA               	dw	_Default_ISR shr (0+2)
 23254                           
 23255                           ; Vector 47 : I2C2TX
 23256  000066  55DA               	dw	_Default_ISR shr (0+2)
 23257                           
 23258                           ; Vector 48 : I2C2
 23259  000068  55DA               	dw	_Default_ISR shr (0+2)
 23260                           
 23261                           ; Vector 49 : I2C2E
 23262  00006A  55DA               	dw	_Default_ISR shr (0+2)
 23263                           
 23264                           ; Vector 50 : U2RX
 23265  00006C  55DA               	dw	_Default_ISR shr (0+2)
 23266                           
 23267                           ; Vector 51 : U2TX
 23268  00006E  55DA               	dw	_Default_ISR shr (0+2)
 23269                           
 23270                           ; Vector 52 : U2E
 23271  000070  55DA               	dw	_Default_ISR shr (0+2)
 23272                           
 23273                           ; Vector 53 : U2
 23274  000072  55DA               	dw	_Default_ISR shr (0+2)
 23275                           
 23276                           ; Vector 54 : TMR3
 23277  000074  55DA               	dw	_Default_ISR shr (0+2)
 23278                           
 23279                           ; Vector 55 : TMR3G
 23280  000076  55DA               	dw	_Default_ISR shr (0+2)
 23281                           
 23282                           ; Vector 56 : TMR4
 23283  000078  55DA               	dw	_Default_ISR shr (0+2)
 23284                           
 23285                           ; Vector 57 : CCP2
 23286  00007A  55DA               	dw	_Default_ISR shr (0+2)
 23287                           
 23288                           ; Vector 58 : Undefined
 23289  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 23290                           
 23291                           ; Vector 59 : CWG2
 23292  00007E  55DA               	dw	_Default_ISR shr (0+2)
 23293                           
 23294                           ; Vector 60 : CLC2
 23295  000080  55DA               	dw	_Default_ISR shr (0+2)
 23296                           
 23297                           ; Vector 61 : INT2
 23298  000082  55DA               	dw	_Default_ISR shr (0+2)
 23299                           
 23300                           ; Vector 62 : Undefined
 23301  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 23302                           
 23303                           ; Vector 63 : Undefined
 23304  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 23305                           
 23306                           ; Vector 64 : Undefined
 23307  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 23308                           
 23309                           ; Vector 65 : Undefined
 23310  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 23311                           
 23312                           ; Vector 66 : Undefined
 23313  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 23314                           
 23315                           ; Vector 67 : Undefined
 23316  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 23317                           
 23318                           ; Vector 68 : Undefined
 23319  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 23320                           
 23321                           ; Vector 69 : Undefined
 23322  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 23323                           
 23324                           ; Vector 70 : TMR5
 23325  000094  52AD               	dw	_TMR5_ISR shr (0+2)
 23326                           
 23327                           ; Vector 71 : TMR5G
 23328  000096  55DA               	dw	_Default_ISR shr (0+2)
 23329                           
 23330                           ; Vector 72 : TMR6
 23331  000098  541A               	dw	_TMR6_ISR shr (0+2)
 23332                           
 23333                           ; Vector 73 : CCP3
 23334  00009A  55DA               	dw	_Default_ISR shr (0+2)
 23335                           
 23336                           ; Vector 74 : CWG3
 23337  00009C  55DA               	dw	_Default_ISR shr (0+2)
 23338                           
 23339                           ; Vector 75 : CLC3
 23340  00009E  55DA               	dw	_Default_ISR shr (0+2)
 23341                           
 23342                           ; Vector 76 : Undefined
 23343  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 23344                           
 23345                           ; Vector 77 : Undefined
 23346  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 23347                           
 23348                           ; Vector 78 : Undefined
 23349  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 23350                           
 23351                           ; Vector 79 : Undefined
 23352  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 23353                           
 23354                           ; Vector 80 : CCP4
 23355  0000A8  55DA               	dw	_Default_ISR shr (0+2)
 23356                           
 23357                           ; Vector 81 : CLC4
 23358  0000AA  55DA               	dw	_Default_ISR shr (0+2)
 23359  0000AC                     ivt0x8_undefint:
 23360                           	callstack 0
 23361  0000AC  00FF               	reset	
 23362                           
 23363                           	psect	text144
 23364  000000                     __ptext144:
 23365                           	callstack 0
 23366                           
 23367                           	psect	rparam
 23368  0000                     
 23369                           	psect	idloc
 23370                           
 23371                           ;Config register IDLOC0 @ 0x200000
 23372                           ;	unspecified, using default values
 23373  200000                     	org	2097152
 23374  200000  0FFF               	dw	4095
 23375                           
 23376                           ;Config register IDLOC1 @ 0x200002
 23377                           ;	unspecified, using default values
 23378  200002                     	org	2097154
 23379  200002  0FFF               	dw	4095
 23380                           
 23381                           ;Config register IDLOC2 @ 0x200004
 23382                           ;	unspecified, using default values
 23383  200004                     	org	2097156
 23384  200004  0FFF               	dw	4095
 23385                           
 23386                           ;Config register IDLOC3 @ 0x200006
 23387                           ;	unspecified, using default values
 23388  200006                     	org	2097158
 23389  200006  0FFF               	dw	4095
 23390                           
 23391                           ;Config register IDLOC4 @ 0x200008
 23392                           ;	unspecified, using default values
 23393  200008                     	org	2097160
 23394  200008  0FFF               	dw	4095
 23395                           
 23396                           ;Config register IDLOC5 @ 0x20000A
 23397                           ;	unspecified, using default values
 23398  20000A                     	org	2097162
 23399  20000A  0FFF               	dw	4095
 23400                           
 23401                           ;Config register IDLOC6 @ 0x20000C
 23402                           ;	unspecified, using default values
 23403  20000C                     	org	2097164
 23404  20000C  0FFF               	dw	4095
 23405                           
 23406                           ;Config register IDLOC7 @ 0x20000E
 23407                           ;	unspecified, using default values
 23408  20000E                     	org	2097166
 23409  20000E  0FFF               	dw	4095
 23410                           
 23411                           	psect	config
 23412                           
 23413                           ;Config register CONFIG1L @ 0x300000
 23414                           ;	External Oscillator Selection
 23415                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 23416                           ;	Reset Oscillator Selection
 23417                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 23418  300000                     	org	3145728
 23419  300000  AF                 	db	175
 23420                           
 23421                           ;Config register CONFIG1H @ 0x300001
 23422                           ;	Clock out Enable bit
 23423                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 23424                           ;	PRLOCKED One-Way Set Enable bit
 23425                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 23426                           ;	Clock Switch Enable bit
 23427                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 23428                           ;	Fail-Safe Clock Monitor Enable bit
 23429                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 23430  300001                     	org	3145729
 23431  300001  FF                 	db	255
 23432                           
 23433                           ;Config register CONFIG2L @ 0x300002
 23434                           ;	MCLR Enable bit
 23435                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 23436                           ;	Power-up timer selection bits
 23437                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 23438                           ;	Multi-vector enable bit
 23439                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 23440                           ;	IVTLOCK bit One-way set enable bit
 23441                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 23442                           ;	Low Power BOR Enable bit
 23443                           ;	LPBOREN = OFF, ULPBOR disabled
 23444                           ;	Brown-out Reset Enable bits
 23445                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 23446  300002                     	org	3145730
 23447  300002  FF                 	db	255
 23448                           
 23449                           ;Config register CONFIG2H @ 0x300003
 23450                           ;	Brown-out Reset Voltage Selection bits
 23451                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 23452                           ;	ZCD Disable bit
 23453                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 23454                           ;	PPSLOCK bit One-Way Set Enable bit
 23455                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 23456                           ;	Stack Full/Underflow Reset Enable bit
 23457                           ;	STVREN = ON, Stack full/underflow will cause Reset
 23458                           ;	Debugger Enable bit
 23459                           ;	DEBUG = OFF, Background debugger disabled
 23460                           ;	Extended Instruction Set Enable bit
 23461                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 23462  300003                     	org	3145731
 23463  300003  FF                 	db	255
 23464                           
 23465                           ;Config register CONFIG3L @ 0x300004
 23466                           ;	WDT Period selection bits
 23467                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 23468                           ;	WDT operating mode
 23469                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 23470  300004                     	org	3145732
 23471  300004  9F                 	db	159
 23472                           
 23473                           ;Config register CONFIG3H @ 0x300005
 23474                           ;	WDT Window Select bits
 23475                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 23476                           ;	WDT input clock selector
 23477                           ;	WDTCCS = SC, Software Control
 23478  300005                     	org	3145733
 23479  300005  FF                 	db	255
 23480                           
 23481                           ;Config register CONFIG4L @ 0x300006
 23482                           ;	Boot Block Size selection bits
 23483                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 23484                           ;	Boot Block enable bit
 23485                           ;	BBEN = OFF, Boot block disabled
 23486                           ;	Storage Area Flash enable bit
 23487                           ;	SAFEN = OFF, SAF disabled
 23488                           ;	Application Block write protection bit
 23489                           ;	WRTAPP = OFF, Application Block not write protected
 23490  300006                     	org	3145734
 23491  300006  FF                 	db	255
 23492                           
 23493                           ;Config register CONFIG4H @ 0x300007
 23494                           ;	Boot Block Write Protection bit
 23495                           ;	WRTB = OFF, Boot Block not write-protected
 23496                           ;	Configuration Register Write Protection bit
 23497                           ;	WRTC = OFF, Configuration registers not write-protected
 23498                           ;	Data EEPROM Write Protection bit
 23499                           ;	WRTD = OFF, Data EEPROM not write-protected
 23500                           ;	SAF Write protection bit
 23501                           ;	WRTSAF = OFF, SAF not Write Protected
 23502                           ;	Low Voltage Programming Enable bit
 23503                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 23504  300007                     	org	3145735
 23505  300007  DF                 	db	223
 23506                           
 23507                           ;Config register CONFIG5L @ 0x300008
 23508                           ;	PFM and Data EEPROM Code Protection bit
 23509                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 23510  300008                     	org	3145736
 23511  300008  FF                 	db	255
 23512                           
 23513                           ;Config register CONFIG5H @ 0x300009
 23514                           ;	unspecified, using default values
 23515  300009                     	org	3145737
 23516  300009  FF                 	db	255
 23517                           tosu	equ	0x3FFF
 23518                           tosh	equ	0x3FFE
 23519                           tosl	equ	0x3FFD
 23520                           stkptr	equ	0x3FFC
 23521                           pclatu	equ	0x3FFB
 23522                           pclath	equ	0x3FFA
 23523                           pcl	equ	0x3FF9
 23524                           tblptru	equ	0x3FF8
 23525                           tblptrh	equ	0x3FF7
 23526                           tblptrl	equ	0x3FF6
 23527                           tablat	equ	0x3FF5
 23528                           prodh	equ	0x3FF4
 23529                           prodl	equ	0x3FF3
 23530                           indf0	equ	0x3FEF
 23531                           postinc0	equ	0x3FEE
 23532                           postdec0	equ	0x3FED
 23533                           preinc0	equ	0x3FEC
 23534                           plusw0	equ	0x3FEB
 23535                           fsr0h	equ	0x3FEA
 23536                           fsr0l	equ	0x3FE9
 23537                           wreg	equ	0x3FE8
 23538                           indf1	equ	0x3FE7
 23539                           postinc1	equ	0x3FE6
 23540                           postdec1	equ	0x3FE5
 23541                           preinc1	equ	0x3FE4
 23542                           plusw1	equ	0x3FE3
 23543                           fsr1h	equ	0x3FE2
 23544                           fsr1l	equ	0x3FE1
 23545                           bsr	equ	0x3FE0
 23546                           indf2	equ	0x3FDF
 23547                           postinc2	equ	0x3FDE
 23548                           postdec2	equ	0x3FDD
 23549                           preinc2	equ	0x3FDC
 23550                           plusw2	equ	0x3FDB
 23551                           fsr2h	equ	0x3FDA
 23552                           fsr2l	equ	0x3FD9
 23553                           status	equ	0x3FD8

Data Sizes:
    Strings     524
    Constant    51
    Data        1129
    BSS         4899
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      64
    BANK0           160    152     157
    BANK1           256     56     177
    BANK2           256      0     234
    BANK3           256      0     195
    BANK4           256      0     255
    BANK5           256      0     131
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    fh_ps@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_po@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pp@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pu@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pd@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pl@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_p0@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_p1@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_48(CODE[1]), 

    S2698$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK5[128]), STR_45(CODE[4]), STR_40(CODE[3]), cli_ctx(BANK5[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK5[128]), STR_45(CODE[4]), STR_40(CODE[3]), cli_ctx(BANK5[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 153
		 -> vfpfcnvrt@ct(BANK1[3]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[23]), 
		 -> STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), STR_15(CODE[153]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 153
		 -> vfpfcnvrt@ct(BANK1[3]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[23]), 
		 -> STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), STR_15(CODE[153]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 255
		 -> cli_ctx.cmd(BANK5[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), cli_ctx(BANK5[131]), 
		 -> build_version(CODE[14]), buff1(BANK4[255]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 255
		 -> cli_ctx.cmd(BANK5[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), cli_ctx(BANK5[131]), 
		 -> build_version(CODE[14]), buff1(BANK4[255]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_35(CODE[4]), STR_34(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_35(CODE[4]), STR_34(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 255
		 -> STR_29(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), cli_ctx(BANK5[131]), 
		 -> buff1(BANK4[255]), STR_11(CODE[31]), STR_10(CODE[29]), STR_9(CODE[18]), 
		 -> STR_8(CODE[19]), STR_7(CODE[17]), STR_6(CODE[22]), STR_5(CODE[18]), 
		 -> STR_4(CODE[29]), STR_3(CODE[18]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 153
		 -> STR_15(CODE[153]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 255
		 -> dbuf(BANK2[80]), STR_29(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK5[131]), buff1(BANK4[255]), STR_11(CODE[31]), STR_10(CODE[29]), 
		 -> STR_9(CODE[18]), STR_8(CODE[19]), STR_7(CODE[17]), STR_6(CODE[22]), 
		 -> STR_5(CODE[18]), STR_4(CODE[29]), STR_3(CODE[18]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 153
		 -> STR_19(CODE[23]), STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[153]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 153
		 -> STR_19(CODE[23]), STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[153]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 153
		 -> STR_19(CODE[23]), STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[153]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), build_version(CODE[14]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), build_version(CODE[14]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), build_version(CODE[14]), 
		 -> STR_2(CODE[9]), STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_19(CODE[23]), STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    S4069$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4069$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    memcpy@s1	PTR const void  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    ringBufS_flush@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_put_dma_cpy@ptr	PTR const unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    ringBufS_put_dma_cpy@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_put_dma@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_init@_this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 1024
		 -> port_data(BIGRAM[1024]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    S3114spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S3114spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(1) Largest target is 1
		 -> cli_read@i(BANK0[1]), main@i(BANK0[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    S2698_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    S2698_t_cmd$cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    fh_pr@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    ps_type_ptr	PTR struct PS_TYPE size(2) Largest target is 40
		 -> ps_type(BANK2[40]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    S2705_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    UART1_SetUartInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_UartInterrupt_ISR(), 

    UART1_SetFramingErrorInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_FramingError_ISR(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_UARTInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_UartInterrupt_ISR(), Absolute function(), 

    UART1_FramingErrorInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_FramingError_ISR(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    DMA1_SetSCNTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), 

    DMA1_SCNTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_DATAEE_ReadByte
    _main->_PWM5_LoadDutyValue
    _main->_PWM6_LoadDutyValue
    _main->_display_led
    _main->_linux_getc
    _cli_init->_memset
    _ps_math->___wmul
    ___xxtofl->___wmul
    _vfpfcnvrt->_isdigit
    _vfpfcnvrt->_isupper
    _stoa->_strlen
    _efgtoa->___awmod
    _efgtoa->___fltol
    _efgtoa->_isupper
    _efgtoa->_strcpy
    _tolower->_isupper
    _pad->_strlen
    ___flsub->___wmul
    ___fladd->___wmul
    ___flmul->___wmul
    _atoi->___wmul
    _atoi->_isdigit
    _atoi->_isspace
    _init_display->_send_lcd_cmd
    _init_display->_send_lcd_cmd_long
    _init_display->_send_lcd_data
    _send_lcd_data->_SPI1_ExchangeByte
    _send_lcd_cmd_long->_SPI1_ExchangeByte
    _send_lcd_cmd->_SPI1_ExchangeByte
    _ringBufS_init->_memset
    _eaDogM_WriteString->_strlen
    _ringBufS_flush->_memset
    _cli_read->_linux_getc
    _cli_read->_memset
    _linux_getc->_UART1_Read
    __cli_interpret_cmd->_strlen
    _strncmp->_strlen
    _fputc->_putch
    _putch->_UART1_Write
    _clear_stat_buffer->___wmul
    _WaitMs->_StartTimer
    _WaitMs->_TimerDone
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _DMA1_DMASCNTI_ISR in COMRAM

    None.

Critical Paths under _UART1_framing_err_vect_isr in COMRAM

    None.

Critical Paths under _UART1_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _scmd_init->_cli_init
    _cli_init->_puts
    _ps_math->_sqrtf
    _sqrtf->___fladd
    ___xxtofl->___wmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace
    _init_display->_ringBufS_init
    _send_lcd_data->_wdtdelay
    _send_lcd_cmd_long->_wdtdelay
    _send_lcd_cmd->_wdtdelay
    _ringBufS_init->_memset
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_ringBufS_put_dma_cpy
    _ringBufS_put_dma_cpy->_memcpy
    _eaDogM_WriteCommand->_send_lcd_cmd_dma
    _send_lcd_cmd_dma->_send_lcd_data_dma
    _send_lcd_data_dma->_ringBufS_flush
    _ringBufS_flush->_memset
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    __cli_interpret_cmd->_fh_p0
    __cli_interpret_cmd->_fh_p1
    __cli_interpret_cmd->_fh_pd
    __cli_interpret_cmd->_fh_pl
    __cli_interpret_cmd->_fh_po
    __cli_interpret_cmd->_fh_pp
    __cli_interpret_cmd->_fh_pr
    __cli_interpret_cmd->_fh_ps
    __cli_interpret_cmd->_fh_pu
    _strncmp->_strlen
    _fh_pu->_puts
    _fh_ps->_puts
    _fh_pr->_puts
    _fh_pp->_puts
    _fh_po->_puts
    _fh_pl->_puts
    _fh_pd->_puts
    _fh_p1->_puts
    _fh_p0->_puts
    _puts->_fputs
    _fputs->_fputc
    _clear_stat_buffer->___wmul
    _WaitMs->_StartTimer
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorInterruptHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetUartInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _DMA1_Initialize->_DMA1_SetSCNTIInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK0

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK0

    None.

Critical Paths under _UART1_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK1

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK1

    None.

Critical Paths under _UART1_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK2

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK2

    None.

Critical Paths under _UART1_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK3

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK3

    None.

Critical Paths under _UART1_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK4

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK4

    None.

Critical Paths under _UART1_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK5

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK5

    None.

Critical Paths under _UART1_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK6

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK6

    None.

Critical Paths under _UART1_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK7

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK7

    None.

Critical Paths under _UART1_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK8

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK8

    None.

Critical Paths under _UART1_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK9

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK9

    None.

Critical Paths under _UART1_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK10

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK10

    None.

Critical Paths under _UART1_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK11

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK11

    None.

Critical Paths under _UART1_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK12

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK12

    None.

Critical Paths under _UART1_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK13

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK13

    None.

Critical Paths under _UART1_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK14

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK14

    None.

Critical Paths under _UART1_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK15

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK15

    None.

Critical Paths under _UART1_vect_isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK16

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK16

    None.

Critical Paths under _UART1_vect_isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK17

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK17

    None.

Critical Paths under _UART1_vect_isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK18

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK18

    None.

Critical Paths under _UART1_vect_isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK19

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK19

    None.

Critical Paths under _UART1_vect_isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK20

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK20

    None.

Critical Paths under _UART1_vect_isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK21

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK21

    None.

Critical Paths under _UART1_vect_isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK22

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK22

    None.

Critical Paths under _UART1_vect_isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK23

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK23

    None.

Critical Paths under _UART1_vect_isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK24

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK24

    None.

Critical Paths under _UART1_vect_isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK25

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK25

    None.

Critical Paths under _UART1_vect_isr in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK26

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK26

    None.

Critical Paths under _UART1_vect_isr in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK27

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK27

    None.

Critical Paths under _UART1_vect_isr in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK28

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK28

    None.

Critical Paths under _UART1_vect_isr in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK29

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK29

    None.

Critical Paths under _UART1_vect_isr in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK30

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK30

    None.

Critical Paths under _UART1_vect_isr in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK31

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK31

    None.

Critical Paths under _UART1_vect_isr in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  268151
                                            148 BANK0      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
      _DMA1_SetSCNTIInterruptHandler
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                             _WaitMs
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _linux_getc
                             _printf
                            _ps_math
                               _puts
                          _scmd_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    15     16   58555
                                             22 BANK1     29    13     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0    8070
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4    8070
                                             21 BANK0      4     0      4
                             _memset
                               _puts
 ---------------------------------------------------------------------------------
 (1) _ps_math                                             13     8      5   30402
                                            104 BANK0     13     8      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                             ___wmul
                           ___xxtofl
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               49    45      4   11366
                                             59 BANK0     45    41      4
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 8     4      4     124
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1016
                                              4 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              38     4     34   57160
                                            146 BANK0      2     2      0
                                             22 BANK1     34     0     34
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   56953
                                            138 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    39      5   56075
                                            129 BANK0      9     4      5
                                              0 BANK1     22    22      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7967
                                             29 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             31 COMRAM     1     1      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3396
                                              9 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   34933
                                             67 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1105
                                              4 BANK0      6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             31 COMRAM     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             31 COMRAM     2     2      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    6555
                                             18 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             43 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             31 COMRAM     2     2      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4727
                                             59 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3982
                                             43 BANK0     16     8      8
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4556
                                             18 BANK0     25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1346
                                             43 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                             18 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    2274
                                              5 BANK0     10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             31 COMRAM     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             31 COMRAM     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    5505
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     1      0     835
                                             32 COMRAM     1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     835
                                             32 COMRAM     1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     1      0     835
                                             32 COMRAM     1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4     782
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    2218
                                             10 BANK0      2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              7     4      3   12108
                                             19 BANK0      7     4      3
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   3     1      2    4560
                                             16 BANK0      3     1      2
                     _ringBufS_flush
               _ringBufS_put_dma_cpy
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _ringBufS_put_dma_cpy                                 6     1      5     996
                                             31 COMRAM     1     1      0
                                             11 BANK0      5     0      5
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6     478
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0    3211
                                             15 BANK0      1     1      0
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     1      0    3180
                                             14 BANK0      1     1      0
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data_dma                                    1     1      0    3149
                                             13 BANK0      1     1      0
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_put_dma                                     4     1      3     506
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    2612
                                             10 BANK0      3     0      3
                             _memset
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      31
                                             31 COMRAM     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   76663
                                             35 BANK0      8     6      2
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2097
                                             31 COMRAM     2     2      0
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    6091
                                             21 BANK0      3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (1) _linux_getc                                           2     1      1     235
                                             32 COMRAM     1     0      1
                                              0 BANK0      1     1      0
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  12    10      2   67636
                                             23 BANK0     12    10      2
                   Absolute function *
                              _fh_p0 *
                              _fh_p1 *
                              _fh_pd *
                              _fh_pl *
                              _fh_po *
                              _fh_pp *
                              _fh_pr *
                              _fh_ps *
                              _fh_pu *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             12     6      6    1135
                                              2 BANK0     12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     670
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _fh_pu                                                2     0      2    6932
                                             21 BANK0      2     0      2
                  _clear_stat_buffer
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_ps                                                2     0      2    6932
                                             21 BANK0      2     0      2
                  _clear_stat_buffer
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pr                                                2     0      2    6963
                                             21 BANK0      2     0      2
                  _clear_stat_buffer
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pp                                                2     0      2    6932
                                             21 BANK0      2     0      2
                  _clear_stat_buffer
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_po                                                2     0      2    6932
                                             21 BANK0      2     0      2
                  _clear_stat_buffer
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pl                                                2     0      2    6932
                                             21 BANK0      2     0      2
                  _clear_stat_buffer
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pd                                                2     0      2    6932
                                             21 BANK0      2     0      2
                  _clear_stat_buffer
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_p1                                                2     0      2    8387
                                             21 BANK0      2     0      2
                   _DATAEE_WriteByte
                  _clear_stat_buffer
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_p0                                                2     0      2    8322
                                             21 BANK0      2     0      2
                   _DATAEE_WriteByte
                  _clear_stat_buffer
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    5700
                                             18 BANK0      3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                9     5      4    2578
                                              9 BANK0      9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1874
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _clear_stat_buffer                                    5     5      0    1232
                                              4 BANK0      5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1102
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3    1390
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WaitMs                                               2     0      2     394
                                              3 BANK0      2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      31
                                             31 COMRAM     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1714
                    _ADCC_Initialize
                    _DAC1_Initialize
                    _DMA1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
           _SystemArbiter_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     847
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
_UART1_SetFramingErrorInterruptHandl
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
      _UART1_SetUartInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetUartInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorInterruptHandler                3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             31 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SystemArbiter_Initialize                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0     211
      _DMA1_SetSCNTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DMA1_SetSCNTIInterruptHandler                        3     0      3     211
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _PWM5_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     197
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_tx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_rx_vect_isr                                   3     3      0       0
                                             28 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (11) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (15) _Adc_Isr                                             4     4      0       0
                                              4 COMRAM     4     4      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            2     2      0       0
                                             11 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Led_Blink                                           1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            2     2      0     319
                                             17 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (15) _Timers_Isr                                          4     4      0      90
                                             13 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     229
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNTI_ISR                                   2     2      0       0
                                             19 COMRAM     2     2      0
                   Absolute function *
       _DMA1_DefaultInterruptHandler *
                    _source_dma_done *
 ---------------------------------------------------------------------------------
 (15) _source_dma_done                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _DMA1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_framing_err_vect_isr                          2     2      0       0
                                             21 COMRAM     2     2      0
                   Absolute function *
             _UART1_FramingError_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_FramingError_ISR                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_vect_isr                                      2     2      0       0
                                             23 COMRAM     2     2      0
                   Absolute function *
            _UART1_UartInterrupt_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_UartInterrupt_ISR                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _DMA1_SetSCNTIInterruptHandler
   _PWM5_LoadDutyValue
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _DMA1_Initialize
       _DMA1_SetSCNTIInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _SPI1_Initialize
     _SystemArbiter_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetFramingErrorInterruptHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
       _UART1_SetUartInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   ___flmul
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_p0 *
         _DATAEE_WriteByte
         _clear_stat_buffer
           ___wmul
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_p1 *
         _DATAEE_WriteByte
         _clear_stat_buffer
         _puts
       _fh_pd *
         _clear_stat_buffer
         _puts
       _fh_pl *
         _clear_stat_buffer
         _puts
       _fh_po *
         _clear_stat_buffer
         _puts
       _fh_pp *
         _clear_stat_buffer
         _puts
       _fh_pr *
         _clear_stat_buffer
         _puts
       _fh_ps *
         _clear_stat_buffer
         _puts
       _fh_pu *
         _clear_stat_buffer
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _ringBufS_flush
       _ringBufS_put_dma_cpy
         _memcpy
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
     _send_lcd_data_dma
     _wait_lcd_done
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_data
       _SPI1_ExchangeByte
       _wdtdelay
     _wdtdelay
   _linux_getc
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___flmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _ps_math
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
     ___wmul
     ___xxtofl
     _sqrtf
       ___fladd
       ___flge
       ___flmul
       _nanf
   _puts
   _scmd_init
     _cli_init
       _memset
       _puts
   _sprintf
     _vfprintf

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 _DMA1_DMASCNTI_ISR (ROOT)
   Absolute function(Fake) *
   _DMA1_DefaultInterruptHandler *
   _source_dma_done *

 _UART1_framing_err_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_FramingError_ISR *

 _UART1_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_UartInterrupt_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0    13C0     125       61.7%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllllll    181      0       0     123        0.0%
BITBIGSFRllhhhh    110      0       0      90        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      83      15       51.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C3      11       76.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EA       9       91.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     38      B1       7       69.1%
BITBIGSFRllhhhh     E8      0       0      94        0.0%
BITBIGSFRllhhhh     CB      0       0      86        0.0%
BITBIGSFRllhhhh     A1      0       0      83        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      9D       5       98.1%
BITBIGSFRllhhhh     5F      0       0      79        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      40       1       67.4%
BITBIGSFRllhhhl     49      0       0      96        0.0%
BITBIGSFRllhhhh     3F      0       0      81        0.0%
BITBIGSFRllhhhh     23      0       0      76        0.0%
BITBIGSFRllllll     1F      0       0     109        0.0%
BITBIGSFRhhhhhl     1D      0       0      69        0.0%
BITBIGSFRllllll     16      0       0     116        0.0%
BITBIGSFRllllll     15      0       0     105        0.0%
BITBIGSFRllllll     11      0       0     115        0.0%
BITBIGSFRllllll      F      0       0     106        0.0%
BITBIGSFRllhhhh      E      0       0      92        0.0%
BITBIGSFRllhhhh      C      0       0      75        0.0%
BITBIGSFRlllllh      B      0       0     104        0.0%
BITBIGSFRllhhl       B      0       0      97        0.0%
BITBIGSFRllhhhh      A      0       0      74        0.0%
BITBIGSFRllllll      8      0       0     111        0.0%
BITBIGSFRllhhhh      8      0       0      78        0.0%
BITBIGSFRhhhhhh      7      0       0      68        0.0%
BITBIGSFRllllll      7      0       0     121        0.0%
BITBIGSFRhhlh        6      0       0      71        0.0%
BITBIGSFRllllll      6      0       0     119        0.0%
BITBIGSFRllhhhh      5      0       0      93        0.0%
BITBIGSFRllhhhh      5      0       0      95        0.0%
BITBIGSFRllllhl      5      0       0     103        0.0%
BITBIGSFRlllhl       5      0       0     101        0.0%
BITBIGSFRllhll       5      0       0      99        0.0%
BITBIGSFRllllll      4      0       0     122        0.0%
BITBIGSFRllllll      4      0       0     120        0.0%
BITBIGSFRllhlh       4      0       0      98        0.0%
BITBIGSFRlllhh       4      0       0     100        0.0%
BITBIGSFRllllhh      4      0       0     102        0.0%
BITBIGSFRllllll      3      0       0     117        0.0%
BITBIGSFRllllll      3      0       0     110        0.0%
BITBIGSFRllllll      3      0       0     107        0.0%
BITBIGSFRllhhhh      2      0       0      91        0.0%
BITBIGSFRhhll        2      0       0      72        0.0%
BITBIGSFRhll         2      0       0      73        0.0%
BITBIGSFRllllll      1      0       0     112        0.0%
BITBIGSFRllllll      1      0       0     113        0.0%
BITBIGSFRllhhhh      1      0       0      85        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      77        0.0%
BITBIGSFRllhhhh      1      0       0      89        0.0%
BITBIGSFRllhhhh      1      0       0      87        0.0%
BITBIGSFRllhhhh      1      0       0      88        0.0%
BITBIGSFRhhhl        1      0       0      70        0.0%
BITBIGSFRllllll      1      0       0     118        0.0%
BITBIGSFRllhhhh      1      0       0      80        0.0%
BITBIGSFRllllll      1      0       0     114        0.0%
BITBIGSFRllhhhh      1      0       0      82        0.0%
BITBIGSFRllllll      1      0       0     108        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4BD     124        0.0%
DATA                 0      0    187D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Apr 24 17:48:01 2022

                                    _SPI1_ExchangeByte 5562  
                                         ___fldiv@aexp 008A  
                                         ___fldiv@bexp 0089  
                                                    _a 0583  
                     __end_of_TMR5_SetInterruptHandler 56DA  
                                         _stddeviation 0124  
                                         ___fldiv@sign 0082  
                                         ?_display_led 0001  
                                         ___awdiv@sign 0065  
                                   ?_SPI1_ExchangeByte 0001  
                                  ___wmul@multiplicand 0062  
                                        _build_version FDE4  
                                    ??_TMR5_WriteTimer 0010  
                                      _DAC1_Initialize 5712  
                                                  l209 555C  
                                                  l636 5570  
                                                  l991 4FCC  
                                                  _GIE 01FE97  
                                                  _pad 42D8  
                                                  _res 0034  
                                                  _sum 0130  
                        eaDogM_WriteStringAtPos@strPtr 0074  
                                         ___awmod@sign 0021  
                                  ??_SPI1_ExchangeByte 0020  
                                      _TMR2_Initialize 54EC  
                                                  prod 003FF3  
                                                  tosl 003FFD  
                                                  wreg 003FE8  
                                       _DAC1_SetOutput 5728  
                                         ___flmul@aexp 007F  
                                         ___flmul@bexp 0080  
                                      send_lcd_cmd@cmd 0021  
                         ?_ADCC_SetADIInterruptHandler 0060  
                                   _UART1_Transmit_ISR 51FA  
                                         ___flmul@sign 007E  
                                         ___flmul@temp 0089  
                                         ___flmul@prod 0085  
                                     ?_source_dma_done 0001  
                               __end_of_DAC1_GetOutput 574C  
                                         ___fltol@exp1 0021  
                                                 l1130 4E2C  
                                                 l1400 52B2  
                                                 l1440 3F6E  
                                                 l1450 3F7A  
                                                 l1435 3F68  
                                                 l1460 3F86  
                                                 l1445 3F74  
                                                 l1429 3F62  
                                                 l2413 2A88  
                                                 l1365 173E  
                                                 l1470 3F92  
                                                 l2094 3BF6  
                                                 l1455 3F80  
                                                 l1480 3F9E  
                                                 l2424 2AF6  
                                                 l1465 3F8C  
                                                 l2425 2AF2  
                                                 l2601 030A  
                                                 l1490 3FAA  
                                                 l1475 3F98  
                                                 l2443 2062  
                                                 l2267 3CDE  
                                                 l1580 2D52  
                                                 l2460 22FE  
                                                 l2452 2278  
                                                 l1485 3FA4  
                                                 l2453 2274  
                                                 l2277 4214  
                                                 l2374 2546  
                                                 l2358 2474  
                                                 l2383 25AC  
                                                 l2359 2452  
                                                 l2384 25A8  
                                                 l1594 3278  
                                                 l2491 36C4  
                                                 l2564 4306  
                                                 l2484 3646  
                                                 l1685 4BA8  
                                                 l2629 066E  
                                                 l2665 33D6  
                                                 l2915 5022  
                                                 l2684 2D74  
                                                 l2782 387E  
                                                 l2686 2D7C  
                                                 l2870 196C  
                                                 ?_pad 0072  
                                                 l2794 301A  
                                                 l2874 19C0  
                                                 l2877 1A78  
                                                 l2879 1B4E  
                                                 l9011 35FC  
                                                 l9003 35AE  
                                                 l9005 35E0  
                                                 l9101 2A86  
                                                 l7263 4EEC  
                                                 l9031 2942  
                                                 l9113 2ABC  
                                                 l9107 2A9E  
                                                 l9051 2982  
                                                 l9035 2946  
                                                 l9301 440C  
                                                 l9141 2B88  
                                                 l9133 2B3A  
                                                 l9063 29BA  
                                                 l9055 2986  
                                                 l9313 4432  
                                                 l9137 2B5E  
                                                 l9401 3BE0  
                                                 l9315 443A  
                                                 l9307 441C  
                                                 l9147 2B94  
                                                 l9171 2012  
                                                 l9333 4472  
                                                 l9325 445A  
                                                 l9149 2B96  
                                                 l9077 29E8  
                                                 l9069 29D0  
                                                 l9245 223E  
                                                 l9173 2022  
                                                 l9095 2A60  
                                                 l9087 2A38  
                                                 l9407 3C2E  
                                                 l9239 2220  
                                                 l9415 51E8  
                                                 l9511 4310  
                                                 l8721 4FB8  
                                                 l9329 4464  
                                                 l9361 453E  
                                                 l9353 451E  
                                                 l9345 4504  
                                                 l9281 231C  
                                                 l9265 22BC  
                                                 l9169 200E  
                                                 l9441 4080  
                                                 l9425 4036  
                                                 l9505 42F0  
                                                 l9355 4526  
                                                 l9187 204E  
                                                 l8803 23A6  
                                                 l9451 4098  
                                                 l9531 3E46  
                                                 l9515 4328  
                                                 l9365 4548  
                                                 l9349 4510  
                                                 l9381 43D6  
                                                 l9269 22DA  
                                                 l9197 2080  
                                                 l9189 2052  
                                                 l8901 2536  
                                                 l9453 40A4  
                                                 l9445 4090  
                                                 l9541 3E90  
                                                 l9509 42FE  
                                                 l9701 0048  
                                                 l8735 4FEC  
                                                 l8815 23CA  
                                                 l8807 23AA  
                                                 l9535 3E50  
                                                 l9519 4354  
                                                 l9471 3C6C  
                                                 l8737 4FEE  
                                                 l8753 417E  
                                                 l8761 4A74  
                                                 l9369 4556  
                                                 l9385 43F4  
                                                 l9377 43A2  
                                                 l9393 3B96  
                                                 l9713 0074  
                                                 l9721 008A  
                                                 l9481 3CC8  
                                                 l8747 40EA  
                                                 l9651 30DC  
                                                 l9459 40C0  
                                                 l9547 46AC  
                                                 l9803 0362  
                                                 l9731 00E2  
                                                 l9491 41B6  
                                                 l9629 470C  
                                                 l9653 30EC  
                                                 l9397 3BCA  
                                                 l8909 256A  
                                                 l8925 258A  
                                                 l8845 2406  
                                                 l9565 2F80  
                                                 l9821 03A8  
                                                 l9805 0366  
                                                 l9733 00FA  
                                                 l9469 3C58  
                                                 l8759 4A70  
                                                 l8919 2580  
                                                 l8783 2362  
                                                 l9583 30A0  
                                                 l9575 303C  
                                                 l9831 03E2  
                                                 l9815 0384  
                                                 l9735 0104  
                                                 l9681 4A2A  
                                                 l8953 2618  
                                                 l8945 25F2  
                                                 l8881 24BA  
                                                 l8873 2498  
                                                 l8857 2460  
                                                 l9905 0756  
                                                 l9913 077A  
                                                 l9921 0810  
                                                 l9825 03B8  
                                                 l9497 41FE  
                                                 l9489 41A2  
                                                 l8971 45D8  
                                                 l8883 24BE  
                                                 l8891 24D0  
                                                 l8859 2464  
                                                 l8779 235E  
                                                 l9579 3072  
                                                 l9763 01E0  
                                                 l9739 012C  
                                                 l8957 2620  
                                                 l9933 0852  
                                                 l9853 0580  
                                                 l9773 02A0  
                                                 l9749 0184  
                                                 l9757 019E  
                                                 l8975 45EE  
                                                 l8991 3506  
                                                 l9599 4DB6  
                                                 l8959 2622  
                                                 l9951 08A8  
                                                 l9871 0666  
                                                 l9839 04D6  
                                                 l9767 0218  
                                                 STR_1 FFB1  
                                                 STR_2 FFBD  
                                                 l9689 4A54  
                                                 l9961 08FC  
                                                 l9873 0688  
                                                 l9865 0644  
                                                 l9785 02F2  
                                                 l9769 0266  
                                                 STR_3 FF6B  
                                                 STR_4 FEC7  
                                                 l9971 0928  
                                                 l9795 031A  
                                                 STR_5 FF59  
                                                 STR_6 FF30  
                                                 l8997 3572  
                                                 l9949 089E  
                                                 l9885 0708  
                                                 l9789 0314  
                                                 STR_7 FF8F  
                                                 STR_8 FF46  
                                                 STR_9 FF7D  
                                                 l9985 0978  
                                                 l9897 0736  
                                                 _LATA 003FBA  
                                                 _LATB 003FBB  
                                                 _LATC 003FBC  
                                                 _LATD 003FBD  
                                                 _LATE 003FBE  
                                                 _LATF 003FBF  
                                                 _T2PR 003FAB  
                                                 _T6PR 003F93  
                                                 _PMD0 0039C0  
                                                 _PMD1 0039C1  
                                                 _PMD2 0039C2  
                                                 _PMD3 0039C3  
                                                 u6160 5658  
                                                 _PMD4 0039C4  
                                                 _PMD5 0039C5  
                                                 _PMD6 0039C6  
                                                 _PMD7 0039C7  
                                                 u8100 2B48  
                                                 u8110 2B6C  
                                                 u7400 4A9E  
                                                 u9000 3116  
                                                 u8200 206E  
                                                 u9020 3146  
                                                 u8060 2AEC  
                                                 u6445 4B80  
                                                 u6446 4B82  
                                                 u7510 2428  
                                                 u7407 4A90  
                                                 u9007 3108  
                                                 u8400 452A  
                                                 u8240 226E  
                                                 u7520 2438  
                                                 u7370 40E2  
                                                 u9050 3180  
                                                 u7530 243A  
                                                 u9027 3138  
                                                 u9060 31B4  
                                                 u8340 443E  
                                                 u9220 02C8  
                                                 u9140 0064  
                                                 u7390 412A  
                                                 u9070 31DE  
                                                 u7710 25A2  
                                                 u9080 320C  
                                                 u8280 22CA  
                                                 u7560 247C  
                                                 u8520 4024  
                                                 u9320 0380  
                                                 u9065 31AE  
                                                 u9057 3172  
                                                 u7810 4624  
                                                 u8450 43F0  
                                                 u8290 22E8  
                                                 u8530 4054  
                                                 u9250 0300  
                                                 u8610 3C70  
                                                 u9067 31A0  
                                                 u8700 3E0C  
                                                 u9077 31D0  
                                                 u7830 5100  
                                                 u9510 0834  
                                                 u9087 31FE  
                                                 u8535 404A  
                                                 u8800 2F4E  
                                                 u7840 5102  
                                                 u9280 0332  
                                                 u8640 41BA  
                                                 u7817 4616  
                                                 u8705 3E02  
                                                 u9601 3378  
                                                 u7770 25FE  
                                                 u7690 258E  
                                                 u8570 40AA  
                                                 u8810 2F6E  
                                                 u8900 5132  
                                                 u8805 2F44  
                                                 u8910 5134  
                                                 u8750 3E88  
                                                 u9390 0570  
                                                 u9710 2D6A  
                                                 u8591 3C38  
                                                 u8760 3E8A  
                                                 u8745 3E6A  
                                                 u8930 4DB2  
                                                 u8850 3000  
                                                 u8770 46F4  
                                                 u9570 0912  
                                                 u9650 3418  
                                                 _PLLR 01CEE0  
                                                 u8835 2F98  
                                                 u8836 2F9E  
                                                 u9660 344C  
                                                 u9740 2ECC  
                                                 u9900 0B62  
                                                 u8837 2FAC  
                                                 u9741 2ECA  
                                                 u9830 5638  
                                                 u8870 305A  
                                                 u9590 0970  
                                                 u9750 2EDA  
                                                 u8855 2FF6  
                                                 u8960 475E  
                                                 u9760 2EDE  
                                                 u8777 46E6  
                                                 u9690 34B0  
                                                 u9930 0C62  
                                                 u8955 4E3A  
                                                 u8875 3050  
                                                 u9667 343E  
                                                 u8956 4E3C  
                                                 u9790 385C  
                                                 _WPUA 003A41  
                                                 _WPUB 003A51  
                                                 _WPUC 003A61  
                                                 _WPUD 003A71  
                                                 _WPUE 003A81  
                                                 _WPUF 003A91  
                                     __end_of_ADCC_ISR 4D3A  
                                  ?_UART1_Transmit_ISR 0001  
                                                 _dbuf 0240  
                                                 _cmdm FDC8  
                                                 _atoi 3748  
                                                 _mean 0128  
                                                 _main 10C8  
                                                 _nanf 53AA  
                                                 _ival 0138  
                                                 _mode 0037  
                                      __end_of_Adc_Isr 3B62  
                                                 _prec 00F8  
                                                 _nout 015D  
                                                 pad@i 0079  
                                                 pad@p 0076  
                                                 _tiny FDC4  
                                                 fsr1h 003FE2  
                                                 fsr2h 003FDA  
                                                 indf1 003FE7  
                                                 indf2 003FDF  
                                                 fsr1l 003FE1  
                                                 pad@w 007B  
                                                 fsr2l 003FD9  
                                                 _stoa 336E  
                                                 _puts 502C  
                                                 _vval 013C  
                                                 _utoa 2D56  
                            ringBufS_put_dma_cpy@_this 006B  
                                        ___fpclassifyf 3DCE  
                                                 prodh 003FF4  
                                                 prodl 003FF3  
                                                 start 00AE  
                                      _timer5ReloadVal 0030  
                                      ___fldiv@new_exp 0083  
                                      _PWM5_Initialize 55F6  
                            __end_of_SPI1_ExchangeByte 557C  
                        ??_UART1_SetTxInterruptHandler 0020  
                                       _SPI1STATUSbits 003D17  
                                    _UART1_rx_vect_isr 4C28  
                                         ___param_bank 000000  
                           __end_of_PWM5_LoadDutyValue 50D6  
                                          ?_UART1_Read 0001  
                                   ?_UART1_rx_vect_isr 0001  
                                                ??_pad 0078  
                             __end_of_ringBufS_put_dma 4922  
                                 ??_UART1_Transmit_ISR 001A  
                        __end_of_OSCILLATOR_Initialize 5562  
                                                l10005 339A  
                                                l10023 3422  
                                                l10015 33EC  
                                                l10033 3484  
                                                l10019 3404  
                                                l10051 2DB4  
                                                l10037 349C  
                                                l10029 346A  
                                                l10061 2EA0  
                                                l11005 114E  
                                                l10303 0C28  
                                                l11031 1296  
                                                l10081 375E  
                                                l10241 0A02  
                                                l11113 174C  
                                                l11105 173A  
                                                l11041 12E6  
                                                l10091 37EC  
                                                l10323 0D8A  
                                                l10315 0D12  
                                                l10243 0A04  
                                                l11123 1760  
                                                l11051 1338  
                                                l11043 12EC  
                                                l11027 127A  
                                                l10085 37AE  
                                                l10077 375A  
                                                l10261 0A22  
                                                l10253 0A1A  
                                                l10245 0A12  
                                                l11109 1748  
                                                l11125 1786  
                                                l11061 1356  
                                                l11053 133E  
                                                l11037 12C2  
                                                l11029 1288  
                                                l10087 37B6  
                                                l10351 0F0E  
                                                l10343 0E96  
                                                l10327 0DB4  
                                                l11047 1312  
                                                l10097 3828  
                                                l10089 37BC  
                                                l10361 0F80  
                                                l10337 0E42  
                                                l10281 0B1C  
                                                l10265 0A2E  
                                                l10257 0A1E  
                                                l10249 0A16  
                                                l11065 1362  
                                                l10267 0A78  
                                                l11139 17B0  
                                                l11067 1368  
                                                l11059 1350  
                                                l10285 0B28  
                                                l10541 1940  
                                                l10525 18A4  
                                                l10533 18D2  
                                                l11093 1716  
                                                l10607 52EE  
                                                l10375 1070  
                                                l10279 0AFC  
                                                l10711 3674  
                                                l10519 185C  
                                                l10641 2CD8  
                                                l10369 1030  
                                                l10297 0BFC  
                                                l10385 1090  
                                                l10713 367A  
                                                l10705 3656  
                                                l10553 1A0C  
                                                l10537 192A  
                                                l10801 278A  
                                                l10635 2BE2  
                                                l10379 107A  
                                                l10299 0C1C  
                                                l10723 36EA  
                                                l10715 3686  
                                                l11099 172C  
                                                l10629 2BC2  
                                                l10741 3736  
                                                l10725 36F6  
                                                l10717 36AC  
                                                l10573 1B26  
                                                l10639 2CD6  
                                                l10751 479C  
                                                l10559 1A92  
                                                l10807 2890  
                                                l10593 533A  
                                                l10681 45A2  
                                                l10905 464E  
                                                l10923 3FBC  
                                                l10907 467A  
                                                l10749 4774  
                                                l10943 3232  
                                                l10947 325C  
                                                l10957 32E4  
                                                l10965 3342  
                                                l10893 463C  
                                                l10789 2672  
                                                l10895 4640  
                                                l10889 52BC  
                                                l10897 4644  
                                                l10899 4648  
                                        ___fltol@sign1 0020  
                                                _ADACT 003EFE  
                                                _ADCAP 003EF5  
                                                ?_atoi 0065  
                                      __end_of___fladd 263E  
                                                ?_main 0001  
                                                _ADCLK 003EFF  
                                                ?_nanf 0060  
                                                _ADCNT 003EEB  
                                                _ADPCH 003EF1  
                                      __end_of___fldiv 2B9E  
                                                _ADREF 003EFD  
                                      __end_of___awdiv 447C  
                                      __end_of___flneg 51FA  
                                                STR_10 FEAA  
                                                STR_11 FE8B  
                                                STR_12 FFA0  
                                                STR_20 FFF5  
                                                STR_13 FFC6  
                                                STR_21 FFF8  
                                                STR_14 FFC9  
                                                STR_30 FFCC  
                                                STR_22 FFEF  
                                                STR_31 FFD4  
                                                STR_15 FDF2  
                                                STR_23 FFF2  
                                                STR_40 FFE0  
                                                STR_16 FF01  
                                                STR_24 FFFB  
                                                STR_17 FF01  
                                                STR_25 FFE9  
                                                STR_34 FFD0  
                                                STR_18 FEE4  
                                                STR_26 FFEC  
                                                STR_43 FFDC  
                                                STR_35 FFD8  
                                                STR_19 FF19  
                                                STR_27 FFE3  
                                                STR_28 FFE6  
                                      __end_of___awmod 4560  
                                                STR_29 FF68  
                                                STR_45 FFDC  
                                                STR_38 FFE0  
                                                STR_48 FF6A  
                                                _ADRPT 003EEC  
                                      __end_of___flmul 2332  
                                      __end_of___flsub 4CB6  
                                      __end_of___fltol 40D2  
                                                ?_stoa 0069  
                                                ?_puts 0072  
                                                u10000 0EE4  
                                                ?_utoa 007D  
                                                u10050 186E  
                                                u10211 2BDC  
                                                u10240 2D12  
                                                u10330 3700  
                                                u10420 2734  
                                                u10085 18E6  
                                                u10238 2CC2  
                                                u10086 18EC  
                                                u10175 1B92  
                                                u10087 18FA  
                                      __end_of___lodiv 3D00  
                                      ___awdiv@divisor 0062  
                                                u10560 1330  
                                                u10385 50C8  
                                                _U1P1H 003DED  
                                                u10395 515E  
                                                _U1P2H 003DEF  
                             eaDogM_WriteStringAtPos@c 0073  
                                                _U1P3H 003DF1  
                                                _U1P1L 003DEC  
                                                _U1P2L 003DEE  
                                                _T2CON 003FAC  
                                                _U1P3L 003DF0  
                             eaDogM_WriteStringAtPos@r 0078  
                                                _T5CLK 003F9D  
                                      __end_of___lomod 4236  
                                                _T2HLT 003FAD  
                                                _T5CON 003F9A  
                                                _T6CON 003F94  
                                                _T6HLT 003F95  
                                                _T2TMR 003FAA  
                                                _U1UIR 003DF8  
                                                _T2RST 003FAF  
                                                _U1RXB 003DE8  
                                                _U1TXB 003DEA  
                               __end_of_DAC1_SetOutput 5732  
                                                _T6TMR 003F92  
                                                i2l481 5094  
                                                _T6RST 003F97  
                                                i2l576 539C  
                                  ??_UART1_rx_vect_isr 001D  
                                      ___awdiv@counter 0064  
                                                _OSCEN 0039DD  
                                         vfpfcnvrt@fmt 00E3  
                                         vfpfcnvrt@llu 016C  
                                                _TMR5H 003F99  
                                                _TMR5L 003F98  
                                                _TRISA 003FC2  
                                                _TRISB 003FC3  
                                                _TRISC 003FC4  
                                                _TRISD 003FC5  
                                                _TRISE 003FC6  
                                                _TRISF 003FC7  
                                          _Default_ISR 5768  
                                      _PWM6_Initialize 55DE  
                             eaDogM_WriteString@strPtr 0070  
                            ?_TMR6_SetInterruptHandler 0060  
                                    _UART1_tx_vect_isr 4BE0  
                                     __end_of_TMR5_ISR 4B02  
                                         _DMA1CON0bits 003BFC  
                                     __end_of_TMR6_ISR 50A2  
                                         _DMA1CON1bits 003BFD  
                                                _dac_v 00FA  
                                                _fh_p0 527A  
                                                _fh_p1 5252  
                                      _DATAEE_ReadByte 550A  
                                                _buff1 0400  
                                                _fh_pd 54B0  
                                                _fh_pl 5492  
                                                _fh_po 55C6  
                                                _fh_pp 55AE  
                                                _fh_pr 533E  
                                                _fh_ps 53EE  
                                                _fh_pu 54CE  
                                                _flags 002E  
                                         _DMA2CON0bits 003BDC  
                                         _DMA2CON1bits 003BDD  
                                                _errno 015B  
                                                _fputc 40D2  
                                                _fputs 45CE  
                         ??_UART1_framing_err_vect_isr 0016  
                                      __end_of_isdigit 513A  
                                      ?_DAC1_GetOutput 0001  
                                   ?_UART1_tx_vect_isr 0001  
                                                atoi@n 006D  
                                                pad@fp 0072  
                                                atoi@s 0065  
                                                _width 002C  
                                                _putch 571E  
                                                main@i 00F7  
                                                _sqrtf 17B8  
                                                nanf@s 0060  
                                                nanf@u 0064  
                                      __end_of_isspace 4DBE  
                                      __end_of_isupper 5108  
                                                pclath 003FFA  
                                                pclatu 003FFB  
                                      __end_of_ps_math 2916  
                                                tablat 003FF5  
                            ??_eaDogM_WriteStringAtPos 0076  
                                                plusw1 003FE3  
                                                plusw2 003FDB  
                                                stoa@i 0075  
                                                stoa@l 007D  
                                                stoa@p 007B  
                                                stoa@s 006B  
                                                stoa@w 0077  
                                                puts@s 0072  
                                                utoa@d 007F  
                                                utoa@i 009B  
                                                utoa@n 0093  
                                                utoa@p 008F  
                                                utoa@w 0091  
                                                status 003FD8  
                  __end_of_UART1_SetRxInterruptHandler 5686  
                          _UART1_SetRxInterruptHandler 5678  
                                      __end_of_sprintf 4A18  
                                       ?___fpclassifyf 0060  
                                      __end_of_tolower 502C  
                                      __end_of_strncmp 321E  
                                     ___lodiv@dividend 0060  
                                       _UART1_vect_isr 4F78  
             __end_of_UART1_DefaultFramingErrorHandler 5762  
                   ??_UART1_DefaultFramingErrorHandler 001D  
                    ?_UART1_DefaultFramingErrorHandler 0001  
                     _UART1_DefaultFramingErrorHandler 5760  
                                  ??_UART1_tx_vect_isr 001A  
                            __end_of_UART1_rx_vect_isr 4C70  
                           eaDogM_WriteStringAtPos@row 0079  
                       ??_TMR6_DefaultInterruptHandler 000B  
                                      _TMR5_Initialize 4B02  
                                __end_of_ringBufS_init 5474  
                                      __initialization 3888  
                                    send_lcd_data@data 0021  
                                         __end_of_cmdm FDE4  
                                         __end_of_atoi 3888  
                                         __end_of_main 17B8  
                                         __end_of_nanf 53CC  
                              __end_of_DAC1_Initialize 571E  
                                         __end_of_tiny FDC8  
                                         __end_of_stoa 34BA  
                                         __end_of_puts 5066  
                                         __end_of_utoa 2F08  
                          ??_UART1_DefaultErrorHandler 001D  
                              __end_of_TMR2_Initialize 550A  
                                __end_of_send_lcd_data 53EE  
                                         ?_UART1_Write 0001  
                                               ??_atoi 0067  
                                               ??_main 00F4  
                                               ??_nanf 0020  
                             _TMR5_SetInterruptHandler 56CC  
                                               ??_stoa 006D  
                                               ??_puts 0022  
                                               ??_utoa 0087  
                                        __activetblptr 000003  
                                      ?_DAC1_SetOutput 0001  
                            __end_of_UART1_tx_vect_isr 4C28  
                                     ___lodiv@quotient 0070  
                                      _TMR6_Initialize 519C  
                                     _UART1_Initialize 398C  
                                               ?_fh_p0 0075  
                                               ?_fh_p1 0075  
                                               ?_fh_pd 0075  
                                               _ADACCH 003EE9  
                                               _ADACCL 003EE8  
                                               ?_fh_pl 0075  
                                               ?_fh_po 0075  
                                               ?_fh_pp 0075  
                                               ?_fh_pr 0075  
                                               ?_fh_ps 0075  
                                               _ADACCU 003EEA  
                                               ?_fh_pu 0075  
                                               _ADACQH 003EF4  
                                               _ADACQL 003EF3  
                                               _ADCON0 003EF8  
                                               _ADCON1 003EF9  
                                               _ADCON2 003EFA  
                                               _ADCON3 003EFB  
                                               _ADERRH 003EE3  
                                               _ADERRL 003EE2  
                              send_lcd_data_dma@strPtr 006D  
                                            ??_Adc_Isr 0005  
                                               ?_fputc 0060  
                                               _ADLTHH 003EDF  
                                               _ADLTHL 003EDE  
                                               ?_fputs 0069  
                                               _ADRESH 003EF0  
                                               _ADRESL 003EEF  
                                               _ADPREH 003EF7  
                                               _ADPREL 003EF6  
                                               _DMA1PR 0039F3  
                                               _ADSTAT 003EFC  
                                               _ADUTHH 003EE1  
                                     ___awdiv@dividend 0060  
                                               _ADUTHL 003EE0  
                                               _ANSELA 003A40  
                                               ?_putch 0001  
                                               _ANSELB 003A50  
                                               _ANSELC 003A60  
                                               _ANSELD 003A70  
                                               _ANSELE 003A80  
                                               _ANSELF 003A90  
                                       TimerDone@timer 0060  
                                               ?_sqrtf 009B  
                                               _RB1I2C 003A5A  
                                               _RB2I2C 003A5B  
                                               _RD0I2C 003A7A  
                                               _U1CON0 003DF2  
                                               _U1CON1 003DF3  
                                               _U1CON2 003DF4  
                                               _RD1I2C 003A7B  
                                               _RC3I2C 003A6A  
                                               _RC4I2C 003A6B  
                                               _U1BRGH 003DF6  
                                               _U1FIFO 003DF7  
                                               _U1BRGL 003DF5  
                                               _T5GATE 003F9C  
                                               _T5GCON 003F9B  
                                   __cli_interpret_cmd 2B9E  
                                               _RC3PPS 003A13  
                                               i1l1027 5222  
                                               _RD2PPS 003A1A  
                                               _RC5PPS 003A15  
                                               _ODCONA 003A42  
                                               _ODCONB 003A52  
                                               _RC6PPS 003A16  
                                               _ODCONC 003A62  
                                               _ODCOND 003A72  
                                               _ODCONE 003A82  
                                               _ODCONF 003A92  
                                               _RF2PPS 003A2A  
                              __end_of_PWM5_Initialize 560E  
                                               i2l1279 3B54  
                                               i1l8055 42D2  
                                               i1l7281 5450  
                                               _INLVLA 003A44  
                                               _INLVLB 003A54  
                                               _INLVLC 003A64  
                                               _INLVLD 003A74  
                                               _INLVLE 003A84  
                                               _INLVLF 003A94  
                                               i2l8303 497E  
                                               i2l8081 3B00  
                                               i2l8307 49B0  
                                               i2l8083 3B04  
                                               i2l8085 3B08  
                                               _TABLAT 003FF5  
                                               i2l8087 3B0E  
                                               i2l8079 3AFC  
                                               i2l8099 3B24  
                               __end_of_UART1_vect_isr 4FB6  
                                        ?_init_display 0001  
                                               _OSCFRQ 0039DF  
                                        vfpfcnvrt@done 0176  
                                               _NVMDAT 0039E3  
                                               _PRLOCK 0039EF  
                                _UART1_SetErrorHandler 56B0  
                                     __end_of___xxtofl 3748  
                           ??_ADCC_GetConversionResult 0003  
                             __end_of_send_lcd_cmd_dma 5492  
                            ringBufS_flush@clearBuffer 006C  
                                  ?__cli_interpret_cmd 0077  
                      ??_DMA1_SetSCNTIInterruptHandler 0020  
                                     __end_of_cli_init 4CF8  
                                     __end_of_cli_read 336E  
                              DAC1_SetOutput@inputData 0020  
                                               _WaitMs 52A2  
                                         _CCPTMRS1bits 003F5F  
                                         vfprintf@cfmt 00F0  
                                               ___flge 3B62  
                                               ___fleq 436E  
                                            ??___fladd 0093  
                                               ___wmul 5228  
                                            ??___fldiv 007A  
                                            ??___awdiv 0020  
                                            ??___flneg 0020  
                                            ??___awmod 0020  
                                               _g_cmds 0290  
                                            ??___flmul 007A  
                                            ??___flsub 0022  
                                            ??___fltol 0064  
                                            ??___lodiv 0020  
                                       _ringBufS_flush 4922  
                                            ??___lomod 0020  
                                               _efgtoa 0000  
                                clear_stat_buffer@chan 0066  
                                 send_lcd_cmd_long@cmd 0021  
                                               _floorf 2F08  
                                               _memcpy 4A18  
                                               _memset 34BA  
                              __end_of_PWM6_Initialize 55F6  
                                               clear_0 3916  
                                               clear_1 3928  
                                               clear_2 3936  
                                               clear_3 3948  
                                               clear_4 3954  
                                               clear_5 3960  
                                               clear_6 3974  
                                     ___awdiv@quotient 0066  
                                      ___awmod@divisor 0062  
                                           _Timers_Isr 4976  
                                               isa$std 000001  
                                      ___awmod@counter 0020  
                                               _printf 52F2  
                                               pad@buf 0074  
                                   _eaDogM_WriteString 4560  
                              __end_of_DATAEE_ReadByte 5528  
                                               _strcpy 469C  
                                            ?_ADCC_ISR 0001  
                                               _strlen 4A66  
                                               _sumsqr 012C  
                                         __pdataBIGRAM 1543  
                                      _ADCC_Initialize 447C  
                                               fputc@c 0060  
                                       _PMD_Initialize 5410  
                                 ??__cli_interpret_cmd 0079  
                                               fputs@c 006F  
                                               fputs@i 0070  
                                               fputs@s 0069  
                                            ??_isdigit 0060  
                                      ___fpclassifyf@e 0068  
                                      ___fpclassifyf@u 006A  
                                      ___fpclassifyf@x 0060  
                             ??_UART1_FramingError_ISR 0016  
                                         __mediumconst FDBE  
                                            ??_isspace 0060  
                                               tblptrh 003FF7  
                                            ??_isupper 0060  
                                               tblptrl 003FF6  
                      ??_UART1_SetUartInterruptHandler 0020  
                                               tblptru 003FF8  
                                            ??_ps_math 00CD  
                                  ?_eaDogM_WriteString 0070  
                                     __end_of_wdtdelay 4BDE  
                                               stoa@cp 0079  
                                               stoa@fp 0069  
                                     __end_of_vfprintf 47C0  
                                               utoa@fp 007D  
                                        wdtdelay@delay 0060  
                                           _StartTimer 516C  
                                               sqrtf@i 00A8  
                                               sqrtf@m 00BC  
                                               sqrtf@q 00B0  
        UART1_SetUartInterruptHandler@InterruptHandler 0060  
UART1_SetFramingErrorInterruptHandler@InterruptHandler 0060  
          UART1_SetTxInterruptHandler@InterruptHandler 0060  
          UART1_SetRxInterruptHandler@InterruptHandler 0060  
        DMA1_SetSCNTIInterruptHandler@InterruptHandler 0060  
             TMR5_SetInterruptHandler@InterruptHandler 0060  
             TMR6_SetInterruptHandler@InterruptHandler 0060  
          ADCC_SetADIInterruptHandler@InterruptHandler 0060  
                                               sqrtf@r 00C0  
                                               sqrtf@s 00A4  
                                               sqrtf@t 00B4  
                 __end_of_UART1_SetOverrunErrorHandler 5694  
                         _UART1_SetOverrunErrorHandler 5686  
                                               sqrtf@x 009B  
                                               sqrtf@z 00B8  
                            _UART1_DefaultErrorHandler 574C  
                                            ??_sprintf 0022  
                                            ??_tolower 0066  
                                            ??_strncmp 0068  
                                       ??_init_display 0022  
                                           ___flge@ff1 008B  
                                           ___flge@ff2 008F  
                                      ??___fpclassifyf 0064  
                              __end_of_TMR5_Initialize 4B4C  
                                         ___xxtofl@arg 006E  
                                         ___xxtofl@exp 006D  
                                    _SYSTEM_Initialize 4EF8  
                                         ___xxtofl@val 0064  
                                           ___fleq@ff1 0060  
                                           ___fleq@ff2 0064  
                                      ?_UART1_vect_isr 0001  
                                           __accesstop 0060  
                              __end_of__initialization 3986  
                                           ___flneg@f1 0060  
                                   ?_SYSTEM_Initialize 0001  
                                        ___rparam_used 000001  
                                           ___fltol@f1 0060  
                                      _TMR5_WriteTimer 5386  
                                    __end_of_Led_Blink 5546  
                                 ??_eaDogM_WriteString 0022  
                                    ??_DMA1_Initialize 0020  
                               __end_of_ringBufS_flush 4976  
                                       __pcstackCOMRAM 0001  
                                         __pidataBANK0 575C  
                                         __pidataBANK1 5704  
                                         __pidataBANK2 4820  
                                  ??_SYSTEM_Initialize 0022  
                                     ?_DAC1_Initialize 0001  
                                        __end_of_fh_p0 52A2  
                                        __end_of_fh_p1 527A  
                                        __end_of_fh_pd 54CE  
                                        __end_of_fh_pl 54B0  
                                        __end_of_fh_po 55DE  
                                        __end_of_fh_pp 55C6  
                                        __end_of_fh_pr 5362  
                                        __end_of_fh_ps 5410  
                                        __end_of_fh_pu 54EC  
                                            ?_TMR5_ISR 0001  
                                            ?_TMR6_ISR 0001  
                                     _DATAEE_WriteByte 4DFE  
                                       ivt0x8_undefint 00AC  
                                        __end_of_fputc 4188  
                                        __end_of_fputs 4638  
                                    ??_SPI1_Initialize 0020  
                                        __end_of_putch 5728  
                                        __end_of_sqrtf 1BE2  
                                     ?_TMR2_Initialize 0001  
                              __end_of_TMR6_Initialize 51CC  
                               __end_of_PMD_Initialize 5432  
                                SPI1_ExchangeByte@data 0020  
                                           ??_ADCC_ISR 0009  
                                __end_of_TMR6_CallBack 5386  
                                   _spi1_configuration FDBF  
                                TMR6_ISR@CountCallBack 0032  
                          _DMA1_SCNTI_InterruptHandler 0149  
                            _UART1_FramingErrorHandler 0146  
                   __end_of_UART1_framing_err_vect_isr 4F76  
                           _UART1_framing_err_vect_isr 4F38  
                                              ??_fh_p0 0022  
                                              ??_fh_p1 0022  
                                              ??_fh_pd 0022  
                                              ??_fh_pl 0022  
                                              ??_fh_po 0022  
                                              ??_fh_pp 0022  
                                              ??_fh_pr 0022  
                                              ??_fh_ps 0022  
                                              ??_fh_pu 0022  
                                              ??_fputc 0064  
                            __end_of_SYSTEM_Initialize 4F36  
                                              ??_fputs 006D  
                                      linux_putc@a_len 0077  
                                              ??_putch 0021  
                                              ??_sqrtf 009F  
                                           __pbssBANK0 00F8  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           __pbssBANK4 0400  
                                           __pbssBANK5 0500  
                        ?_UART1_SetOverrunErrorHandler 0060  
                               ?_UART1_SetErrorHandler 0060  
                                     ?_PWM5_Initialize 0001  
                                   ringBufS_init@_this 006A  
                             _SystemArbiter_Initialize 56DA  
                                    __end_of_TimerDone 52F2  
                                              IVTBASEH 003FD6  
                                              IVTBASEL 003FD5  
                                              IVTBASEU 003FD7  
                                     linux_getc@a_data 0021  
                                              ?_WaitMs 0063  
                                       cli_init@a_cmds 0077  
                                      ?_ringBufS_flush 006A  
                                __end_of_wait_lcd_done 5640  
                                              ?___flge 008B  
                                              ?___fleq 0060  
                                       main@lcd_update 00F6  
                                         ??_UART1_Read 0020  
                                              ?___wmul 0060  
                     __end_of_TMR6_SetInterruptHandler 56CC  
                              __end_of_ADCC_Initialize 44F0  
                           __end_of_PWM6_LoadDutyValue 516C  
                                        ?_send_lcd_cmd 0001  
                                           ??_TMR5_ISR 0012  
                                           ??_TMR6_ISR 000C  
                                              ?_efgtoa 00A3  
                __end_of_DMA1_SetSCNTIInterruptHandler 56F6  
                        _DMA1_SetSCNTIInterruptHandler 56E8  
                                              _ADFLTRH 003EE7  
                                              ?_floorf 008B  
                                              _ADFLTRL 003EE6  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                              _DMA1DSA 003BF0  
                                              _DMA2DSA 003BD0  
                                              _DMA1DSZ 003BEE  
                                              _DMA2DSZ 003BCE  
                                              _ADPREVH 003EEE  
                                              _ADPREVL 003EED  
                                              _DMA1SSA 003BF9  
                                              _DMA2SSA 003BD9  
                                              _DMA1SSZ 003BF7  
                                     ?_PWM6_Initialize 0001  
                                              _DMA2SSZ 003BD7  
                                          ?_Timers_Isr 0001  
                                              _ADSTPTH 003EE5  
                                              _ADSTPTL 003EE4  
                                              ?_printf 0182  
                                      ?_PMD_Initialize 0001  
                                    ?_ringBufS_put_dma 0060  
                                    _UART1_Receive_ISR 4236  
                                              ?_strcpy 0060  
                                              ?_strlen 0020  
                                      StartTimer@count 0020  
                                     ?_DATAEE_ReadByte 0020  
                                              _U1ERRIE 003DFA  
                                              _U1ERRIR 003DF9  
                                      StartTimer@timer 0062  
                                              i1l10781 521E  
                                     ??_DAC1_GetOutput 0020  
                                         ?_Default_ISR 0001  
                                   ??_ringBufS_put_dma 0020  
                                   ?_UART1_Receive_ISR 0001  
                                              _U1RXPPS 003AE5  
                                            ?___xxtofl 0064  
                                   _PWM5_LoadDutyValue 50A2  
                                              _OSCCON1 0039D9  
                                              _OSCCON3 0039DB  
                                              _IVTLOCK 003FD4  
                                              _TBLPTRH 003FF7  
                                              _TBLPTRL 003FF6  
                                              _SPI1CLK 003D1C  
                                              _TBLPTRU 003FF8  
                                            ?_cli_init 0075  
                                            ?_cli_read 0083  
                                              _SPI1RXB 003D10  
                                              _NVMADRH 0039E1  
                                              _NVMADRL 0039E0  
                                              _SPI1TXB 003D11  
                                              _OSCTUNE 0039DE  
                                              _NVMCON2 0039E6  
                                              _PWM5DCH 003F6D  
                                              _PWM5DCL 003F6C  
                                              _PWM6DCH 003F69  
                                              _PWM6DCL 003F68  
                                              _PWM5CON 003F6E  
                                              _PWM6CON 003F6A  
                             ?_UART1_UartInterrupt_ISR 0001  
                                              _SLRCONA 003A43  
                                              _SLRCONB 003A53  
                                              _SLRCONC 003A63  
                                              _SLRCOND 003A73  
                                              _SLRCONE 003A83  
                                              _SLRCONF 003A93  
                                          ?_StartTimer 0020  
                           _UART1_UARTInterruptHandler 0155  
                                              _Adc_Isr 3A7A  
                                           _build_date 01AD  
                                  ??_UART1_Receive_ISR 001D  
                                           _build_time 01AB  
                                     ___lomod@dividend 0060  
                              __end_of_TMR5_WriteTimer 53AA  
                                  ?_PWM5_LoadDutyValue 0020  
                __end_of_UART1_SetUartInterruptHandler 566A  
                        _UART1_SetUartInterruptHandler 565C  
                                   __end_of_UART1_Read 4EF8  
                                     ?_TMR5_Initialize 0001  
                                 DATAEE_WriteByte@bAdd 0060  
                                ringBufS_put_dma@_this 0060  
                            INTERRUPT_Initialize@state 0020  
                         __end_of_ringBufS_put_dma_cpy 48CE  
                                              __Hparam 0000  
                                          _SrcVarName0 0162  
                                              __Lparam 0000  
                             __end_of_UART1_Initialize 3A7A  
                           ??_TMR5_SetInterruptHandler 0020  
                             __cli_interpret_cmd@a_ctx 0077  
                                       ??_send_lcd_cmd 0021  
                                              ___fladd 2332  
                                              ___fldiv 2916  
                                              ___awdiv 43F8  
                                              ___flneg 51CC  
                                              ___awmod 44F0  
                                              ___flmul 1FE2  
                                              ___flsub 4C70  
                                              ___fltol 4018  
                                            ?_wdtdelay 0060  
                                              ___lodiv 3C32  
                                              ___lomod 4188  
                                              _a_index 0039  
                                     ??_DAC1_SetOutput 0020  
                            __end_of_UART1_Receive_ISR 42D8  
                                            ?_vfprintf 00EA  
                                 ??_PWM5_LoadDutyValue 0060  
                                 __end_of_init_display 3F5C  
                                              __pcinit 3888  
                                  _eaDogM_WriteCommand 5624  
                                     ?_TMR6_Initialize 0001  
                                              __ramtop 2000  
                                              _cli_ctx 0500  
                                              _i_index 0038  
                                              __ptext0 10C8  
                                              __ptext1 49C8  
                                              __ptext2 5596  
                                              __ptext3 4CB6  
                                              __ptext4 263E  
                                              __ptext5 17B8  
                                              __ptext6 53AA  
                                              __ptext7 3606  
                                              __ptext8 52F2  
                                              __ptext9 4760  
                                _OSCILLATOR_Initialize 5546  
                                              _isdigit 5108  
                                           ??___xxtofl 0068  
                                              _mode_sw 015F  
                                     ___awmod@dividend 0060  
                                          ps_math@chan 00CC  
                             ??_PIN_MANAGER_Initialize 0020  
                                              _isspace 4D7E  
                                          Timers_Isr@i 0010  
                                            _T5CONbits 003F9A  
                                              _isupper 50D6  
                                              efgtoa@c 00A9  
                                              efgtoa@d 00C1  
                                              efgtoa@e 00D9  
                                              efgtoa@f 00A5  
                                              efgtoa@g 00D5  
                                              efgtoa@h 00CB  
                                              efgtoa@i 00D3  
                                              efgtoa@l 00CF  
                                              efgtoa@m 00BB  
                                              efgtoa@n 00DB  
                                              efgtoa@p 00C5  
                                              _ps_math 263E  
                                              efgtoa@t 00B5  
                                              efgtoa@u 00DD  
                                              efgtoa@w 00C7  
                                           ??_cli_init 0022  
                                           ??_cli_read 0085  
                                        ?_wait_lcd_set 0001  
                                              _ps_type 02C2  
                                              atoi@neg 006B  
                                           _linux_getc 5318  
                                              _sprintf 49C8  
                                              _tolower 4FF2  
                                           _linux_putc 5640  
                                    __end_of_scmd_init 55AE  
                                              _strncmp 30B2  
                                 end_of_initialization 3986  
                                            _U1UIRbits 003DF8  
                                              floorf@e 0099  
                                              floorf@m 0095  
                                              floorf@u 009B  
                                              floorf@x 008B  
                                 ?_eaDogM_WriteCommand 0001  
                                              memcpy@d 0067  
                                              memcpy@n 0064  
                                              memcpy@s 0069  
                                              fputc@fp 0062  
                                              memset@c 0062  
                                              memset@k 0066  
                                              memset@n 0064  
                                              memset@s 0068  
                                            i1u1049_28 4C00  
                                            i1u1049_29 4C14  
                  __end_of_UART1_SetTxInterruptHandler 5678  
                          _UART1_SetTxInterruptHandler 566A  
                                              fputs@fp 006B  
                                       display_led@led 0060  
                       ??_UART1_SetOverrunErrorHandler 0020  
                                    ?_send_lcd_cmd_dma 0001  
                               _UART1_FramingError_ISR 5732  
                                    __end_of_vfpfcnvrt 10C8  
                                           efgtoa@mode 00CA  
                                   ??_send_lcd_cmd_dma 0022  
                                           efgtoa@sign 00C3  
                                            _SPI1TCNTL 003D12  
                                              postdec1 003FE5  
                                              postdec2 003FDD  
                                              postinc0 003FEE  
                                              postinc1 003FE6  
                                              postinc2 003FDE  
                                           ??_wdtdelay 0020  
                                     ?_ADCC_Initialize 0001  
                                    __end_of_start_lcd 5746  
                                           ??_vfprintf 0022  
                                              sqrtf@ix 00C4  
                                       wdtdelay@dcount 0120  
                                    UART1_Write@txData 0020  
                                  _UART1_RxDataHandler 5432  
                                              strcpy@d 0066  
                                              strlen@a 0060  
                                              strcpy@s 0064  
                                              strlen@s 0020  
                                            _PORTAbits 003FCA  
                                            _PORTBbits 003FCB  
                             _TMR6_SetInterruptHandler 56BE  
                      __end_of_UART1_UartInterrupt_ISR 5758  
                       ?_DMA1_SetSCNTIInterruptHandler 0060  
                                _TMR5_InterruptHandler 014C  
                                          ___fladd@grs 009A  
                                WaitMs@numMilliseconds 0063  
                  __end_of_ADCC_SetADIInterruptHandler 5704  
                          _ADCC_SetADIInterruptHandler 56F6  
                                        ___xxtofl@sign 006C  
                                       ??_wait_lcd_set 0020  
                                            _TRISCbits 003FC4  
                                     ??_UART1_vect_isr 0018  
                             ?_eaDogM_WriteStringAtPos 0073  
                                          ___fldiv@grs 0085  
                                          ___fldiv@rem 007E  
                             __end_of_DATAEE_WriteByte 4E3E  
                                      _DMA1_Initialize 47C0  
                                 ?_UART1_RxDataHandler 0001  
                                     ?_TMR5_WriteTimer 000E  
                                ??_eaDogM_WriteCommand 0022  
                              TMR5_WriteTimer@timerVal 000E  
                                          ___flmul@grs 0081  
                       ??_DMA1_DefaultInterruptHandler 0014  
                        ??_ADCC_SetADIInterruptHandler 0020  
                   _UART1_FramingErrorInterruptHandler 0158  
                                      _SPI1_Initialize 557C  
                       ?_UART1_SetUartInterruptHandler 0060  
                                    ??_source_dma_done 0014  
                                       __end_of_WaitMs 52CA  
                         __end_of_INTERRUPT_Initialize 4B96  
                                            _Led_Blink 5528  
                                        ??_display_led 0020  
                       ??_ADCC_DefaultInterruptHandler 0001  
                                       __end_of___flge 3C32  
                                       __end_of___fleq 43F8  
                                __end_of_build_version FDF2  
                                        __pidataBIGRAM 1BE2  
                                          vfpfcnvrt@ap 00E4  
                                          vfpfcnvrt@cp 0174  
                                          vfpfcnvrt@ct 017E  
                                          vfpfcnvrt@fp 00E1  
                                       __end_of___wmul 5252  
                                       __end_of_efgtoa 09B8  
                                       __end_of_floorf 30B2  
                                       __end_of_memcpy 4A66  
                               ?_OSCILLATOR_Initialize 0001  
                                           floorf@F526 0118  
                                       __end_of_memset 3606  
                            ?_ADCC_GetConversionResult 0001  
                                       __end_of_printf 5318  
                                       __end_of_strcpy 46FE  
                                       __end_of_strlen 4AB4  
                                  start_initialization 3888  
                                      ___lodiv@divisor 0068  
                           ??_SystemArbiter_Initialize 0020  
                                      ___lodiv@counter 0078  
                                 _ringBufS_put_dma_cpy 487A  
                 __end_of_TMR5_DefaultInterruptHandler 576C  
                         _TMR5_DefaultInterruptHandler 576A  
                                          __end_of_pad 436E  
                              ??_UART1_SetErrorHandler 0020  
                          ?_UART1_framing_err_vect_isr 0001  
                                          ?_linux_getc 0021  
                                          ?_linux_putc 0075  
                                 __end_of_send_lcd_cmd 4EBA  
                                ??_UART1_RxDataHandler 001D  
                                          putch@txData 0021  
                                           ivt0x8_base 0008  
                                        _uart1RxBuffer 0300  
                                __end_of___fpclassifyf 3E9A  
                                     ??_ringBufS_flush 0022  
                                        _uart1TxBuffer 0340  
                                  DATAEE_ReadByte@bAdd 0020  
                                             ??_WaitMs 0022  
                                          vfprintf@fmt 00EC  
                                             ??___flge 0093  
                                             ??___fleq 0068  
                                     ??_PMD_Initialize 0020  
                                            _TimerDone 52CA  
                                        _ringBufS_init 5454  
                                             ??___wmul 0020  
                                           ?_Led_Blink 0001  
                                             ??_efgtoa 00AA  
                                          __pdataBANK0 00FB  
                                          __pdataBANK1 01A4  
                                          __pdataBANK2 0290  
                                             ??_floorf 008F  
                                             ??_memcpy 0020  
                                             ??_memset 0020  
                                         ??_Timers_Isr 000E  
                                           memset@dest 0060  
                              ringBufS_put_dma_cpy@len 006F  
                              ringBufS_put_dma_cpy@ptr 006D  
                                             ??_printf 0022  
                                        _send_lcd_data 53CC  
                                             ??_strcpy 0020  
                                             ??_strlen 0022  
                      __end_of_eaDogM_WriteStringAtPos 469C  
                                            ___fladd@a 008F  
                                            ___fladd@b 008B  
                                            ___fldiv@a 0076  
                                            ___fldiv@b 0072  
                                          __pbssBIGRAM 0583  
                                  __end_of_display_led 4018  
                          PWM5_LoadDutyValue@dutyValue 0020  
                              __end_of_DMA1_Initialize 4820  
                                            ___flmul@a 0076  
                                            ___flmul@b 0072  
                                          __pbssCOMRAM 0022  
                                            ___flsub@a 009F  
                                            ___flsub@b 009B  
                                ?_ringBufS_put_dma_cpy 006B  
                                   _UART1_ErrorHandler 0140  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 016C  
                                   _PWM6_LoadDutyValue 513A  
                                  ringBufS_flush@_this 006A  
                                eaDogM_WriteString@len 0072  
                                         ??_StartTimer 0060  
                              __end_of_SPI1_Initialize 5596  
                             _UART1_RxInterruptHandler 0029  
                        ?_TMR5_DefaultInterruptHandler 0001  
                                             ?_Adc_Isr 0001  
                                  ?_PWM6_LoadDutyValue 0020  
                                         _init_display 3E9A  
                                       linux_putc@data 0075  
                         ?_UART1_SetRxInterruptHandler 0060  
                                   __end_of_Timers_Isr 49C8  
                                _TMR6_InterruptHandler 014F  
                                          _efgtoa$4201 00B1  
                                          _efgtoa$4202 00B3  
                                          _efgtoa$4193 00AF  
                               _PIN_MANAGER_Initialize 3D00  
                                        cli_init@a_ctx 0075  
                                       ?_ringBufS_init 006A  
                                    ?_UART1_Initialize 0001  
                                 __end_of_wait_lcd_set 5740  
                 __end_of_UART1_SetFramingErrorHandler 56B0  
                         _UART1_SetFramingErrorHandler 56A2  
                                           ?_TimerDone 0001  
                                        __pmediumconst FDBE  
                                        cli_read@a_ctx 0083  
                                             ?___fladd 008B  
                                  UART1_Read@readValue 0020  
                                             ?___fldiv 0072  
                                             ?___awdiv 0060  
                                            __ptext100 55DE  
                                            __ptext101 55F6  
                                            __ptext110 56F6  
                                            __ptext102 5410  
                                             ?___flneg 0060  
                                            __ptext111 513A  
                                            __ptext103 3D00  
                                            __ptext120 575E  
                                            __ptext112 50A2  
                                            __ptext104 5546  
                                            __ptext121 5760  
                                            __ptext113 550A  
                                            __ptext105 4B4C  
                                            __ptext130 5528  
                                            __ptext122 574C  
                                            __ptext114 5728  
                                            __ptext106 47C0  
                                            __ptext131 5764  
                                            __ptext123 5432  
                                            __ptext115 5746  
                                            __ptext107 56E8  
                                            __ptext140 4F38  
                                            __ptext132 5768  
                                            __ptext124 4CF8  
                                            __ptext116 4BE0  
                                            __ptext108 5712  
                                            __ptext141 5732  
                                            __ptext133 4AB4  
                                            __ptext125 5762  
                                            __ptext117 51FA  
                                            __ptext109 447C  
                                            __ptext142 4F78  
                                            __ptext134 576A  
                                            __ptext126 3A7A  
                                            __ptext118 4C28  
                                            __ptext143 5752  
                                            __ptext135 4976  
                                            __ptext127 560E  
                                            __ptext119 4236  
                                            __ptext144 0000  
                                            __ptext136 5386  
                                            __ptext128 5068  
                                            __ptext137 4D3C  
                                            __ptext129 5362  
                                            __ptext138 576C  
                                            __ptext139 5758  
                                             ?___awmod 0060  
                                             ?___flmul 0072  
                                             ?___flsub 009B  
                                             ?___fltol 0060  
                                             ?___lodiv 0060  
                                             ?___lomod 0060  
                                            _deviation 0134  
                                   ??_UART1_Initialize 0020  
                                   __end_of_StartTimer 519C  
                                     _uart1RxLastError 003A  
                                        _cli_read$3101 0088  
                                        ??_UART1_Write 0020  
                                 ??_PWM6_LoadDutyValue 0060  
                                             _DAC1CON0 003E9E  
                                             _DAC1CON1 003E9C  
                                       ?_send_lcd_data 0001  
                                            _disp_tick 0161  
                                             _ADCC_ISR 4CF8  
                                      ___lomod@divisor 0068  
                                      ___lomod@counter 0020  
             __end_of_UART1_DefaultOverrunErrorHandler 5760  
                   ??_UART1_DefaultOverrunErrorHandler 001D  
                    ?_UART1_DefaultOverrunErrorHandler 0001  
                     _UART1_DefaultOverrunErrorHandler 575E  
                                             ?_isdigit 0020  
                                             _DMA1CON0 003BFC  
                                             _DMA1CON1 003BFD  
                                             _DMA1AIRQ 003BFE  
                                             _DMA1DPTR 003BEC  
                                             _DMA1SIRQ 003BFF  
                                             _DMA1SPTR 003BF4  
                                             ?_isspace 0020  
                                             ?_isupper 0020  
                                             ?_ps_math 00C8  
                                             ?_sprintf 0182  
                                             ?_tolower 0064  
                                             _T2CLKCON 003FAE  
                                    _DMA1_DMASCNTI_ISR 4D3C  
                                             ?_strncmp 0062  
                                          _U1ERRIRbits 003DF9  
                                    ringBufS_put_dma@c 0062  
                                 _INTERRUPT_Initialize 4B4C  
                                             _T6CLKCON 003F96  
                                 __cli_interpret_cmd@i 0082  
                                   ?_DMA1_DMASCNTI_ISR 0001  
                              ?_UART1_FramingError_ISR 0001  
                                       ___wmul@product 0020  
                                             _LATAbits 003FBA  
                UART1_SetErrorHandler@interruptHandler 0060  
                                             _LATCbits 003FBC  
                                             _LATDbits 003FBD  
                                             _LATEbits 003FBE  
                                            _scmd_init 5596  
                                             _LATFbits 003FBF  
                                             _IPR1bits 003981  
                                             _IPR2bits 003982  
                                             _IPR3bits 003983  
                                             _PIE1bits 003991  
                                             _PIE2bits 003992  
                                             _PIE3bits 003993  
                                            _tickCount 010C  
                                             _IPR8bits 003988  
                                             _IPR9bits 003989  
                                             _PIE8bits 003998  
                                             _PIE9bits 003999  
                                         _SPI1CON0bits 003D14  
                                             _IVTBASEH 003FD6  
                                             _IVTBASEL 003FD5  
                                             _IVTBASEU 003FD7  
                                            cli_read@i 008A  
                        ??_UART1_SetRxInterruptHandler 0020  
                                            _ring_buf1 0380  
                                             i1u714_28 4C48  
                                             i1u714_29 4C5C  
                                             _PIR0bits 0039A0  
                                             _PIR1bits 0039A1  
                                             _PIR2bits 0039A2  
                                             i1u691_28 4290  
                                             i1u691_29 42A6  
                                             _SPI1BAUD 003D19  
                                  ??_DMA1_DMASCNTI_ISR 0014  
                                             i1u693_28 42BC  
                                             i2u710_48 4D5C  
                                             i2u703_40 49C6  
                                             i2u710_49 4D70  
                                             _PIR4bits 0039A4  
                                             _SPI1CON0 003D14  
                                             _SPI1CON1 003D15  
                                             _SPI1CON2 003D16  
                                             i1u689_28 4260  
                                             i1u689_29 4276  
                                            _puts$4384 0074  
                                             i2u706_40 5088  
                                             i2u705_48 4D18  
                                             i2u705_49 4D2C  
                                             i2u716_48 4F54  
                                             i2u708_48 4AE0  
                                             i2u716_49 4F68  
                                             i2u708_49 4AF4  
                                             i2u646_40 5530  
                                             i2u646_46 5532  
                                             i2u718_48 4F94  
                                             i2u718_49 4FA8  
                                             _PIR8bits 0039A8  
                               send_lcd_cmd_dma@strPtr 006E  
                                             _PIR9bits 0039A9  
                                             i2u682_48 5372  
                           ??_TMR6_SetInterruptHandler 0020  
                                          ??_Led_Blink 000B  
                           __end_of_UART1_Transmit_ISR 5228  
                                             _TMR5_ISR 4AB4  
                                             _TMR6_ISR 5068  
                        ?_UART1_SetFramingErrorHandler 0060  
                                          _display_led 3F5C  
                                            _port_data 1543  
                                            _vfpfcnvrt 09B8  
                                         _SPI1INTFbits 003D1A  
                                    ___wmul@multiplier 0060  
                                            _static_ps 01AF  
                                            _start_lcd 5740  
                               ??_ringBufS_put_dma_cpy 0020  
                                        _TMR6_CallBack 5362  
                     __end_of_SystemArbiter_Initialize 56E8  
                                     ?_DMA1_Initialize 0001  
                                          fh_p0@a_data 0075  
                                          fh_p1@a_data 0075  
                            ?_TMR5_SetInterruptHandler 0060  
                                  __end_of_UART1_Write 4FF2  
                            __end_of_DMA1_DMASCNTI_ISR 4D7E  
                                DATAEE_WriteByte@bData 0062  
                                         _isspace$4305 0064  
                                           vfpfcnvrt@c 0181  
                                           vfpfcnvrt@f 017A  
                                     ?_SPI1_Initialize 0001  
                                          _INTCON0bits 003FD2  
                                            copy_data0 389C  
                                            copy_data1 38C2  
                                            copy_data2 38E4  
                                ?_INTERRUPT_Initialize 0001  
                                    ??_DAC1_Initialize 0020  
                       __end_of_UART1_FramingError_ISR 573A  
                                    ?_DATAEE_WriteByte 0060  
                               _uart1TxBufferRemaining 003E  
                                      _source_dma_done 5758  
                                    ??_TMR2_Initialize 0020  
                       ??_TMR5_DefaultInterruptHandler 000E  
                                   ??_DATAEE_WriteByte 0020  
                                           ?_scmd_init 0001  
                                         _uart1RxCount 003B  
                                      ??_ringBufS_init 0022  
                                             __Hrparam 0000  
                     __end_of_ADCC_GetConversionResult 5624  
                                            memcpy@tmp 0066  
                                           vfprintf@ap 00EE  
                                             __Lrparam 0000  
                                           vfprintf@fp 00EA  
                                    Adc_Isr@c_adc_chan 0035  
                                          ??_TimerDone 0020  
                                        _wait_lcd_done 5632  
                                      ??_send_lcd_data 0021  
                              ??_OSCILLATOR_Initialize 0020  
                                         _send_lcd_cmd 4E7C  
                                           ?_vfpfcnvrt 00E1  
                                    _clear_stat_buffer 46FE  
                                    ??_PWM5_Initialize 0020  
                                             _adc_tick 0160  
                                       ?_TMR6_CallBack 0001  
                                           ?_start_lcd 0001  
                                   ___fpclassifyf@F465 011C  
                                   ?_clear_stat_buffer 0001  
                                           sprintf@fmt 0184  
                                             ___xxtofl 3606  
                          __end_of_eaDogM_WriteCommand 5632  
                                             __pivt0x8 0008  
                                             _cli_init 4CB6  
                                             _cli_read 321E  
                                             __ptext10 09B8  
                                             __ptext11 2D56  
                                             __ptext20 2F08  
                                             __ptext12 4188  
                                             __ptext21 3DCE  
                                             __ptext13 3C32  
                                             __ptext30 44F0  
                                             __ptext22 4018  
                                             __ptext14 336E  
                                             __ptext31 43F8  
                                             __ptext23 4C70  
                                             __ptext15 0000  
                                             __ptext40 5562  
                                             __ptext32 3748  
                                             __ptext24 2332  
                                             __ptext16 4FF2  
                                             __ptext41 5454  
                                             __ptext33 4D7E  
                                             __ptext25 51CC  
                                             __ptext17 50D6  
                                             __ptext50 573A  
                                             __ptext42 4638  
                                             __ptext34 5108  
                                             __ptext26 1FE2  
                                             __ptext18 469C  
                                             __ptext51 5740  
                                             __ptext43 4560  
                                             __ptext35 3E9A  
                                             __ptext27 3B62  
                                             __ptext19 42D8  
                                             __ptext60 4EBA  
                                             __ptext52 48CE  
                                             __ptext44 487A  
                                             __ptext36 53CC  
                                             __ptext28 436E  
                                             __ptext61 2B9E  
                                             __ptext53 4922  
                                             __ptext45 4A18  
                                             __ptext37 4E3E  
                                             __ptext29 2916  
                                             __ptext70 53EE  
                                             __ptext62 30B2  
                                             __ptext54 3F5C  
                                             __ptext46 5624  
                                             __ptext38 4E7C  
                                             __ptext71 533E  
                                             __ptext63 4A66  
                                             __ptext55 321E  
                                             __ptext47 5474  
                                             __ptext39 4B96  
                                             __ptext80 4DFE  
                                             __ptext72 54CE  
                                             __ptext64 5252  
                                             __ptext56 34BA  
                                             __ptext48 5632  
                                             __ptext81 52A2  
                                             __ptext73 502C  
                                             __ptext65 527A  
                                             __ptext57 5640  
                                             __ptext49 4DBE  
                                             __ptext90 5694  
                                             __ptext82 52CA  
                                             __ptext74 45CE  
                                             __ptext66 5492  
                                             __ptext58 5318  
                                             __ptext91 56A2  
                                             __ptext83 516C  
                                             __ptext75 40D2  
                                             __ptext67 54B0  
                                             __ptext59 564E  
                                             __ptext92 56B0  
                                             __ptext84 4EF8  
                                             __ptext76 571E  
                                             __ptext68 55AE  
                                             __ptext93 519C  
                                             __ptext85 398C  
                                             __ptext77 4FB6  
                                             __ptext69 55C6  
                                             __ptext94 56BE  
                                             __ptext86 565C  
                                             __ptext78 46FE  
                                             __ptext95 4B02  
                                             __ptext87 566A  
                                             __ptext79 5228  
                                             __ptext96 56CC  
                                             __ptext88 5678  
                                             __ptext97 54EC  
                                             __ptext89 5686  
                                             __ptext98 56DA  
                                             __ptext99 557C  
                                         ??_linux_getc 0060  
                                  ??_clear_stat_buffer 0064  
                                         ??_linux_putc 0022  
                        __end_of_UART1_SetErrorHandler 56BE  
                          DATAEE_WriteByte@GIEBitValue 0020  
                                           strcpy@dest 0060  
                                     _ringBufS_put_dma 48CE  
                               __cli_interpret_cmd@ret 0081  
                                    ??_PWM6_Initialize 0020  
                              _UART1_UartInterrupt_ISR 5752  
                                    ??_DATAEE_ReadByte 0022  
                                          _IVTLOCKbits 003FD4  
                                         ps_math@scale 00C8  
                                             efgtoa@fp 00A3  
                                             efgtoa@ne 00B9  
                                             efgtoa@pp 00B7  
                                             efgtoa@ou 00BD  
                            _UART1_OverrunErrorHandler 0143  
                            _ADCC_ADI_InterruptHandler 0152  
                                            stoa@F1164 01A4  
         UART1_SetOverrunErrorHandler@interruptHandler 0060  
                                             _variance 0022  
                                       ?_wait_lcd_done 0001  
                                             isa$xinst 000000  
                                             _spi_link 0100  
                                             _roll_max 01B0  
                            __end_of_clear_stat_buffer 4760  
                           ?_UART1_DefaultErrorHandler 0001  
                                          fh_pd@a_data 0075  
                                             _wdtdelay 4B96  
                                             _vfprintf 4760  
                                            printf@fmt 0182  
                                   __end_of_linux_getc 533E  
                                    _UART1_is_rx_ready 564E  
                                   __end_of_linux_putc 564E  
                                          _UART1_Write 4FB6  
                           __end_of__cli_interpret_cmd 2D56  
                 __end_of_DMA1_DefaultInterruptHandler 576E  
                         _DMA1_DefaultInterruptHandler 576C  
                                    ??_TMR5_Initialize 0020  
                                   ?_UART1_is_rx_ready 0001  
                                        ??_Default_ISR 000E  
                                          fh_pl@a_data 0075  
                       ??_UART1_SetFramingErrorHandler 0020  
                                       _vfpfcnvrt$4240 0178  
                          __end_of_UART1_RxDataHandler 5454  
                                        _ps_type_index 0036  
                                          _uart1RxHead 003D  
                                          _uart1TxHead 0040  
                                          _uart1RxTail 003C  
                                          _NVMCON1bits 0039E5  
                                          fh_po@a_data 0075  
                                          _uart1TxTail 003F  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                          fh_pp@a_data 0075  
                              __end_of_source_dma_done 575C  
                                   clear_stat_buffer@i 0067  
                                             isdigit@c 0020  
                               ??_INTERRUPT_Initialize 0020  
                                          fh_pr@a_data 0075  
                                         _wait_lcd_set 573A  
                                  ??_UART1_is_rx_ready 0020  
                                          fh_ps@a_data 0075  
                 __end_of_TMR6_DefaultInterruptHandler 5766  
                         _TMR6_DefaultInterruptHandler 5764  
                                          fh_pu@a_data 0075  
                                    _send_lcd_data_dma 4DBE  
                 __end_of_ADCC_DefaultInterruptHandler 5764  
                         _ADCC_DefaultInterruptHandler 5762  
                                             intlevel1 0000  
                                             intlevel2 0000  
                                            sprintf@ap 0192  
                                    _send_lcd_cmd_long 4E3E  
                                   ?_send_lcd_data_dma 0001  
                                             isspace@c 0020  
                              ?_PIN_MANAGER_Initialize 0001  
                                    ??_TMR6_Initialize 0020  
                                          ??_scmd_init 0022  
                                   ?_send_lcd_cmd_long 0001  
                                            strcpy@src 0062  
                           __end_of_eaDogM_WriteString 45CE  
                                             isupper@c 0020  
                                            strncmp@_l 0062  
                                            strncmp@_r 0064  
                                             ps_math@i 00D3  
                                             ps_math@n 00D1  
                            ?_SystemArbiter_Initialize 0001  
                                  _uart1RxStatusBuffer 0200  
                                  ??_send_lcd_data_dma 0022  
                                          efgtoa@nmode 00C9  
                                           _SPI1SDIPPS 003ADF  
                                           _SPI1SCKPPS 003ADE  
                                  ??_send_lcd_cmd_long 0021  
                                             printf@ap 00F2  
                            __end_of_UART1_is_rx_ready 565C  
                               eaDogM_WriteCommand@cmd 006F  
                                           _UART1_Read 4EBA  
         UART1_SetFramingErrorHandler@interruptHandler 0060  
                             _ADCC_GetConversionResult 560E  
                    __end_of_UART1_DefaultErrorHandler 5752  
                                          ??_vfpfcnvrt 00E6  
                                             stoa@nuls 006E  
                                      ??_TMR6_CallBack 000C  
                                          ??_start_lcd 0020  
                                             sprintf@f 0194  
                                             tolower@c 0064  
                                             sprintf@s 0182  
                                     _send_lcd_cmd_dma 5474  
                                           _PRLOCKbits 0039EF  
                        ?_DMA1_DefaultInterruptHandler 0001  
                                             strncmp@l 006A  
                                             strncmp@n 0066  
                                             strncmp@r 006C  
                          PWM6_LoadDutyValue@dutyValue 0020  
                            __end_of_send_lcd_data_dma 4DFE  
                             _UART1_TxInterruptHandler 0026  
                            __end_of_send_lcd_cmd_long 4E7C  
                                          _ps_type_ptr 00FB  
                                        ___fladd@signs 0097  
                                  __end_of_Default_ISR 576A  
                       __end_of_PIN_MANAGER_Initialize 3DCE  
                                    ??_ADCC_Initialize 0020  
                                       _DAC1_GetOutput 5746  
                                sqrtf@__xc8_float_word 00AC  
                        ?_TMR6_DefaultInterruptHandler 0001  
                            ??_UART1_UartInterrupt_ISR 0018  
        __end_of_UART1_SetFramingErrorInterruptHandler 56A2  
              ??_UART1_SetFramingErrorInterruptHandler 0020  
               ?_UART1_SetFramingErrorInterruptHandler 0060  
                _UART1_SetFramingErrorInterruptHandler 5694  
                                         ___fladd@aexp 0098  
                                         ___fladd@bexp 0099  
                        ?_ADCC_DefaultInterruptHandler 0001  
                         ?_UART1_SetTxInterruptHandler 0060  
                              _eaDogM_WriteStringAtPos 4638  
                                      ??_wait_lcd_done 0020  
                           __end_of_spi1_configuration FDC4  
