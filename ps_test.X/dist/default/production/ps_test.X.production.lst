

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar  9 12:42:16 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=4,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=4,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=4,class=CODE,delta=1
   100                           	psect	text81,global,reloc=4,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=4,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=4,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118  0000                     
   119                           ; Version 2.40
   120                           ; Generated 17/11/2021 GMT
   121                           ; 
   122                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution. Publication is not required when
   136                           ;        this file is used in an embedded application.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC18F57K42 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     
   155                           	psect	idataBANK0
   156  005D8E                     __pidataBANK0:
   157                           	callstack 0
   158                           
   159                           ;initializer for _build_time
   160  005D8E  D0                 	db	low STR_2
   161                           
   162                           ;initializer for _build_date
   163  005D8F  C4                 	db	low STR_1
   164                           
   165                           	psect	idataBANK1
   166  005CA8                     __pidataBANK1:
   167                           	callstack 0
   168                           
   169                           ;initializer for stoa@F1164
   170  005CA8  28                 	db	40
   171  005CA9  6E                 	db	110
   172  005CAA  75                 	db	117
   173  005CAB  6C                 	db	108
   174  005CAC  6C                 	db	108
   175  005CAD  29                 	db	41
   176  005CAE  00                 	db	0
   177                           
   178                           ;initializer for _g_cmds
   179  005CAF  F3                 	db	low STR_7
   180  005CB0  3A                 	db	low _fh_pr
   181  005CB1  5B                 	db	high _fh_pr
   182  005CB2  00                 	db	low (_fh_pr shr (0+16))
   183  005CB3  F6                 	db	low STR_8
   184  005CB4  90                 	db	low _fh_ps
   185  005CB5  5C                 	db	high _fh_ps
   186  005CB6  00                 	db	low (_fh_ps shr (0+16))
   187  005CB7  F0                 	db	low STR_9
   188  005CB8  78                 	db	low _fh_po
   189  005CB9  5C                 	db	high _fh_po
   190  005CBA  00                 	db	low (_fh_po shr (0+16))
   191  005CBB  00                 	db	0
   192  005CBC  00                 	db	0
   193  005CBD  00                 	db	0
   194  005CBE  00                 	db	0
   195                           
   196                           	psect	smallconst
   197  002000                     __psmallconst:
   198                           	callstack 0
   199  002000  00                 	db	0
   200  002001  02                 	db	2
   201  002002  40                 	db	64
   202  002003  00                 	db	0
   203  002004  08                 	db	8
   204  002005  00                 	db	0
   205  002006                     __end_of_spi1_configuration:
   206                           	callstack 0
   207  002006                     _cmdm:
   208                           	callstack 0
   209  002006  0D                 	db	13
   210  002007  0A                 	db	10
   211  002008  20                 	db	32
   212  002009  43                 	db	67
   213  00200A  6F                 	db	111
   214  00200B  6D                 	db	109
   215  00200C  6D                 	db	109
   216  00200D  61                 	db	97
   217  00200E  6E                 	db	110
   218  00200F  64                 	db	100
   219  002010  20                 	db	32
   220  002011  70                 	db	112
   221  002012  72                 	db	114
   222  002013  6F                 	db	111
   223  002014  63                 	db	99
   224  002015  65                 	db	101
   225  002016  73                 	db	115
   226  002017  73                 	db	115
   227  002018  6F                 	db	111
   228  002019  72                 	db	114
   229  00201A  20                 	db	32
   230  00201B  56                 	db	86
   231  00201C  30                 	db	48
   232  00201D  2E                 	db	46
   233  00201E  31                 	db	49
   234  00201F  0D                 	db	13
   235  002020  0A                 	db	10
   236  002021  00                 	db	0
   237  002022                     __end_of_cmdm:
   238                           	callstack 0
   239  0000                     _T5CON	set	16282
   240  0000                     _TMR5L	set	16280
   241  0000                     _TMR5H	set	16281
   242  0000                     _T5GCON	set	16283
   243  0000                     _IVTBASEL	set	16341
   244  0000                     _IVTBASEH	set	16342
   245  0000                     _IVTBASEU	set	16343
   246  0000                     _T6CON	set	16276
   247  0000                     _T6RST	set	16279
   248  0000                     _ADERRL	set	16098
   249  0000                     _ADERRH	set	16099
   250  0000                     _ADPREVL	set	16109
   251  0000                     _ADPREVH	set	16110
   252  0000                     _ADFLTRL	set	16102
   253  0000                     _ADFLTRH	set	16103
   254  0000                     _ADACCL	set	16104
   255  0000                     _ADACCH	set	16105
   256  0000                     _ADCNT	set	16107
   257  0000                     _ADRESL	set	16111
   258  0000                     _ADRESH	set	16112
   259  0000                     _ADCON0	set	16120
   260  0000                     _ADCON1	set	16121
   261  0000                     _ADPREH	set	16119
   262  0000                     _ADPREL	set	16118
   263  0000                     _ADCAP	set	16117
   264  0000                     _ADACQH	set	16116
   265  0000                     _ADPCH	set	16113
   266  0000                     _ADRPT	set	16108
   267  0000                     _ADACCU	set	16106
   268  0000                     _ADSTPTH	set	16101
   269  0000                     _ADSTPTL	set	16100
   270  0000                     _ADUTHH	set	16097
   271  0000                     _ADUTHL	set	16096
   272  0000                     _ADLTHH	set	16095
   273  0000                     _OSCTUNE	set	14814
   274  0000                     _OSCFRQ	set	14815
   275  0000                     _OSCEN	set	14813
   276  0000                     _TRISD	set	16325
   277  0000                     _TRISC	set	16324
   278  0000                     _TRISB	set	16323
   279  0000                     _LATC	set	16316
   280  0000                     _LATB	set	16315
   281  0000                     _PLLR	set	118496
   282  0000                     _U1ERRIRbits	set	15865
   283  0000                     _LATFbits	set	16319
   284  0000                     _LATAbits	set	16314
   285  0000                     _LATDbits	set	16317
   286  0000                     _LATEbits	set	16318
   287  0000                     _TRISCbits	set	16324
   288  0000                     _T5CONbits	set	16282
   289  0000                     _IVTLOCKbits	set	16340
   290  0000                     _GIE	set	130711
   291  0000                     _IPR1bits	set	14721
   292  0000                     _IPR3bits	set	14723
   293  0000                     _PIE1bits	set	14737
   294  0000                     _PIR1bits	set	14753
   295  0000                     _PMD0	set	14784
   296  0000                     _OSCCON1	set	14809
   297  0000                     _RC3PPS	set	14867
   298  0000                     _ANSELA	set	14912
   299  0000                     _ANSELB	set	14928
   300  0000                     _ANSELC	set	14944
   301  0000                     _ANSELD	set	14960
   302  0000                     _LATA	set	16314
   303  0000                     _LATD	set	16317
   304  0000                     _LATE	set	16318
   305  0000                     _TRISA	set	16322
   306  0000                     _TRISE	set	16326
   307  0000                     _LATF	set	16319
   308  0000                     _PORTAbits	set	16330
   309  0000                     _INTCON0bits	set	16338
   310  0000                     _TRISF	set	16327
   311  0000                     _INLVLD	set	14964
   312  0000                     _SLRCOND	set	14963
   313  0000                     _ODCOND	set	14962
   314  0000                     _RD0I2C	set	14970
   315  0000                     _WPUD	set	14961
   316  0000                     _ANSELE	set	14976
   317  0000                     _INLVLC	set	14948
   318  0000                     _SLRCONC	set	14947
   319  0000                     _ODCONC	set	14946
   320  0000                     _RC3I2C	set	14954
   321  0000                     _WPUC	set	14945
   322  0000                     _INLVLB	set	14932
   323  0000                     _SLRCONB	set	14931
   324  0000                     _ODCONB	set	14930
   325  0000                     _RB1I2C	set	14938
   326  0000                     _WPUB	set	14929
   327  0000                     _INLVLE	set	14980
   328  0000                     _SLRCONE	set	14979
   329  0000                     _ODCONE	set	14978
   330  0000                     _WPUE	set	14977
   331  0000                     _ANSELF	set	14992
   332  0000                     _SPI1SCKPPS	set	15070
   333  0000                     _INLVLF	set	14996
   334  0000                     _SLRCONF	set	14995
   335  0000                     _ODCONF	set	14994
   336  0000                     _WPUF	set	14993
   337  0000                     _INLVLA	set	14916
   338  0000                     _SLRCONA	set	14915
   339  0000                     _ODCONA	set	14914
   340  0000                     _WPUA	set	14913
   341  0000                     _RB2I2C	set	14939
   342  0000                     _RC4I2C	set	14955
   343  0000                     _RD1I2C	set	14971
   344  0000                     _SPI1SDIPPS	set	15071
   345  0000                     _U1RXPPS	set	15077
   346  0000                     _RC5PPS	set	14869
   347  0000                     _RC6PPS	set	14870
   348  0000                     _SPI1RXB	set	15632
   349  0000                     _SPI1TXB	set	15633
   350  0000                     _SPI1TCNTL	set	15634
   351  0000                     _SPI1CON0	set	15636
   352  0000                     _U1RXB	set	15848
   353  0000                     _U1TXB	set	15850
   354  0000                     _U1P1L	set	15852
   355  0000                     _DAC1CON1	set	16028
   356  0000                     _DAC1CON0	set	16030
   357  0000                     _ADLTHL	set	16094
   358  0000                     _OSCCON3	set	14811
   359  0000                     _PMD7	set	14791
   360  0000                     _PMD6	set	14790
   361  0000                     _PMD5	set	14789
   362  0000                     _PMD4	set	14788
   363  0000                     _PMD3	set	14787
   364  0000                     _PMD2	set	14786
   365  0000                     _PMD1	set	14785
   366  0000                     _ADACQL	set	16115
   367  0000                     _T6TMR	set	16274
   368  0000                     _T6PR	set	16275
   369  0000                     _T6HLT	set	16277
   370  0000                     _T6CLKCON	set	16278
   371  0000                     _ADCLK	set	16127
   372  0000                     _ADACT	set	16126
   373  0000                     _ADREF	set	16125
   374  0000                     _ADSTAT	set	16124
   375  0000                     _ADCON3	set	16123
   376  0000                     _ADCON2	set	16122
   377  0000                     _PIR2bits	set	14754
   378  0000                     _PIR8bits	set	14760
   379  0000                     _PIR9bits	set	14761
   380  0000                     _PIE3bits	set	14739
   381  0000                     _PIE9bits	set	14745
   382  0000                     _IVTLOCK	set	16340
   383  0000                     _IPR8bits	set	14728
   384  0000                     _IPR9bits	set	14729
   385  0000                     _PIE8bits	set	14744
   386  0000                     _U1ERRIE	set	15866
   387  0000                     _U1ERRIR	set	15865
   388  0000                     _U1UIR	set	15864
   389  0000                     _U1FIFO	set	15863
   390  0000                     _U1BRGH	set	15862
   391  0000                     _U1BRGL	set	15861
   392  0000                     _U1CON2	set	15860
   393  0000                     _U1CON1	set	15859
   394  0000                     _U1CON0	set	15858
   395  0000                     _U1P3H	set	15857
   396  0000                     _U1P3L	set	15856
   397  0000                     _U1P2H	set	15855
   398  0000                     _U1P2L	set	15854
   399  0000                     _U1P1H	set	15853
   400  0000                     _T5CLK	set	16285
   401  0000                     _T5GATE	set	16284
   402  0000                     _SPI1BAUD	set	15641
   403  0000                     _SPI1CLK	set	15644
   404  0000                     _SPI1CON2	set	15638
   405  0000                     _SPI1CON1	set	15637
   406  0000                     _PORTBbits	set	16331
   407  002022                     STR_6:
   408                           
   409                           ; BSR set to: 0
   410  002022  20                 	db	32
   411  002023  50                 	db	80	;'P'
   412  002024  53                 	db	83	;'S'
   413  002025  20                 	db	32
   414  002026  54                 	db	84	;'T'
   415  002027  65                 	db	101	;'e'
   416  002028  73                 	db	115	;'s'
   417  002029  74                 	db	116	;'t'
   418  00202A  20                 	db	32
   419  00202B  25                 	db	37
   420  00202C  31                 	db	49	;'1'
   421  00202D  75                 	db	117	;'u'
   422  00202E  3A                 	db	58	;':'
   423  00202F  20                 	db	32
   424  002030  44                 	db	68	;'D'
   425  002031  41                 	db	65	;'A'
   426  002032  43                 	db	67	;'C'
   427  002033  20                 	db	32
   428  002034  4F                 	db	79	;'O'
   429  002035  55                 	db	85	;'U'
   430  002036  54                 	db	84	;'T'
   431  002037  3D                 	db	61	;'='
   432  002038  25                 	db	37
   433  002039  32                 	db	50	;'2'
   434  00203A  75                 	db	117	;'u'
   435  00203B  2C                 	db	44
   436  00203C  20                 	db	32
   437  00203D  53                 	db	83	;'S'
   438  00203E  75                 	db	117	;'u'
   439  00203F  70                 	db	112	;'p'
   440  002040  70                 	db	112	;'p'
   441  002041  6C                 	db	108	;'l'
   442  002042  79                 	db	121	;'y'
   443  002043  20                 	db	32
   444  002044  52                 	db	82	;'R'
   445  002045  65                 	db	101	;'e'
   446  002046  61                 	db	97	;'a'
   447  002047  64                 	db	100	;'d'
   448  002048  42                 	db	66	;'B'
   449  002049  61                 	db	97	;'a'
   450  00204A  63                 	db	99	;'c'
   451  00204B  6B                 	db	107	;'k'
   452  00204C  20                 	db	32
   453  00204D  25                 	db	37
   454  00204E  34                 	db	52	;'4'
   455  00204F  75                 	db	117	;'u'
   456  002050  20                 	db	32
   457  002051  56                 	db	86	;'V'
   458  002052  3D                 	db	61	;'='
   459  002053  25                 	db	37
   460  002054  2B                 	db	43
   461  002055  35                 	db	53	;'5'
   462  002056  2E                 	db	46
   463  002057  31                 	db	49	;'1'
   464  002058  66                 	db	102	;'f'
   465  002059  56                 	db	86	;'V'
   466  00205A  20                 	db	32
   467  00205B  25                 	db	37
   468  00205C  34                 	db	52	;'4'
   469  00205D  75                 	db	117	;'u'
   470  00205E  20                 	db	32
   471  00205F  49                 	db	73	;'I'
   472  002060  3D                 	db	61	;'='
   473  002061  25                 	db	37
   474  002062  2B                 	db	43
   475  002063  33                 	db	51	;'3'
   476  002064  2E                 	db	46
   477  002065  31                 	db	49	;'1'
   478  002066  66                 	db	102	;'f'
   479  002067  6D                 	db	109	;'m'
   480  002068  41                 	db	65	;'A'
   481  002069  0D                 	db	13
   482  00206A  0A                 	db	10
   483  00206B  00                 	db	0
   484  00206C                     STR_3:
   485                           
   486                           ; BSR set to: 0
   487  00206C  0D                 	db	13
   488  00206D  0A                 	db	10
   489  00206E  20                 	db	32
   490  00206F  52                 	db	82	;'R'
   491  002070  61                 	db	97	;'a'
   492  002071  6D                 	db	109	;'m'
   493  002072  70                 	db	112	;'p'
   494  002073  20                 	db	32
   495  002074  74                 	db	116	;'t'
   496  002075  6F                 	db	111	;'o'
   497  002076  20                 	db	32
   498  002077  31                 	db	49	;'1'
   499  002078  30                 	db	48	;'0'
   500  002079  30                 	db	48	;'0'
   501  00207A  30                 	db	48	;'0'
   502  00207B  56                 	db	86	;'V'
   503  00207C  44                 	db	68	;'D'
   504  00207D  43                 	db	67	;'C'
   505  00207E  20                 	db	32
   506  00207F  4F                 	db	79	;'O'
   507  002080  4E                 	db	78	;'N'
   508  002081  20                 	db	32
   509  002082  0D                 	db	13
   510  002083  0A                 	db	10
   511  002084  00                 	db	0
   512  002085                     STR_4:
   513                           
   514                           ; BSR set to: 0
   515  002085  0D                 	db	13
   516  002086  0A                 	db	10
   517  002087  20                 	db	32
   518  002088  53                 	db	83	;'S'
   519  002089  74                 	db	116	;'t'
   520  00208A  65                 	db	101	;'e'
   521  00208B  61                 	db	97	;'a'
   522  00208C  64                 	db	100	;'d'
   523  00208D  79                 	db	121	;'y'
   524  00208E  20                 	db	32
   525  00208F  31                 	db	49	;'1'
   526  002090  30                 	db	48	;'0'
   527  002091  30                 	db	48	;'0'
   528  002092  30                 	db	48	;'0'
   529  002093  56                 	db	86	;'V'
   530  002094  44                 	db	68	;'D'
   531  002095  43                 	db	67	;'C'
   532  002096  20                 	db	32
   533  002097  4F                 	db	79	;'O'
   534  002098  4E                 	db	78	;'N'
   535  002099  20                 	db	32
   536  00209A  0D                 	db	13
   537  00209B  0A                 	db	10
   538  00209C  00                 	db	0
   539  00209D                     STR_10:
   540                           
   541                           ; BSR set to: 0
   542  00209D  0D                 	db	13
   543  00209E  0A                 	db	10
   544  00209F  20                 	db	32
   545  0020A0  50                 	db	80	;'P'
   546  0020A1  73                 	db	115	;'s'
   547  0020A2  20                 	db	32
   548  0020A3  54                 	db	84	;'T'
   549  0020A4  65                 	db	101	;'e'
   550  0020A5  73                 	db	115	;'s'
   551  0020A6  74                 	db	116	;'t'
   552  0020A7  65                 	db	101	;'e'
   553  0020A8  72                 	db	114	;'r'
   554  0020A9  20                 	db	32
   555  0020AA  25                 	db	37
   556  0020AB  73                 	db	115	;'s'
   557  0020AC  20                 	db	32
   558  0020AD  25                 	db	37
   559  0020AE  73                 	db	115	;'s'
   560  0020AF  0D                 	db	13
   561  0020B0  0A                 	db	10
   562  0020B1  00                 	db	0
   563  0020B2                     STR_5:
   564                           
   565                           ; BSR set to: 0
   566  0020B2  0D                 	db	13
   567  0020B3  0A                 	db	10
   568  0020B4  20                 	db	32
   569  0020B5  56                 	db	86	;'V'
   570  0020B6  6F                 	db	111	;'o'
   571  0020B7  6C                 	db	108	;'l'
   572  0020B8  74                 	db	116	;'t'
   573  0020B9  61                 	db	97	;'a'
   574  0020BA  67                 	db	103	;'g'
   575  0020BB  65                 	db	101	;'e'
   576  0020BC  20                 	db	32
   577  0020BD  4F                 	db	79	;'O'
   578  0020BE  46                 	db	70	;'F'
   579  0020BF  46                 	db	70	;'F'
   580  0020C0  20                 	db	32
   581  0020C1  0D                 	db	13
   582  0020C2  0A                 	db	10
   583  0020C3  00                 	db	0
   584  0020C4                     STR_1:
   585                           
   586                           ; BSR set to: 0
   587  0020C4  4D                 	db	77	;'M'
   588  0020C5  61                 	db	97	;'a'
   589  0020C6  72                 	db	114	;'r'
   590  0020C7  20                 	db	32
   591  0020C8  20                 	db	32
   592  0020C9  39                 	db	57	;'9'
   593  0020CA  20                 	db	32
   594  0020CB  32                 	db	50	;'2'
   595  0020CC  30                 	db	48	;'0'
   596  0020CD  32                 	db	50	;'2'
   597  0020CE  32                 	db	50	;'2'
   598  0020CF  00                 	db	0
   599  0020D0                     STR_2:
   600                           
   601                           ; BSR set to: 0
   602  0020D0  31                 	db	49	;'1'
   603  0020D1  32                 	db	50	;'2'
   604  0020D2  3A                 	db	58	;':'
   605  0020D3  34                 	db	52	;'4'
   606  0020D4  32                 	db	50	;'2'
   607  0020D5  3A                 	db	58	;':'
   608  0020D6  31                 	db	49	;'1'
   609  0020D7  30                 	db	48	;'0'
   610  0020D8  00                 	db	0
   611  0020D9                     STR_12:
   612                           
   613                           ; BSR set to: 0
   614  0020D9  49                 	db	73	;'I'
   615  0020DA  4E                 	db	78	;'N'
   616  0020DB  46                 	db	70	;'F'
   617  0020DC  00                 	db	0
   618  0020DD                     STR_16:
   619                           
   620                           ; BSR set to: 0
   621  0020DD  4E                 	db	78	;'N'
   622  0020DE  41                 	db	65	;'A'
   623  0020DF  4E                 	db	78	;'N'
   624  0020E0  00                 	db	0
   625  0020E1                     STR_13:
   626                           
   627                           ; BSR set to: 0
   628  0020E1  69                 	db	105	;'i'
   629  0020E2  6E                 	db	110	;'n'
   630  0020E3  66                 	db	102	;'f'
   631  0020E4  00                 	db	0
   632  0020E5                     STR_17:
   633                           
   634                           ; BSR set to: 0
   635  0020E5  6E                 	db	110	;'n'
   636  0020E6  61                 	db	97	;'a'
   637  0020E7  6E                 	db	110	;'n'
   638  0020E8  00                 	db	0
   639  0020E9                     STR_25:
   640                           
   641                           ; BSR set to: 0
   642  0020E9  6C                 	db	108	;'l'
   643  0020EA  6C                 	db	108	;'l'
   644  0020EB  73                 	db	115	;'s'
   645  0020EC  00                 	db	0
   646  0020ED                     STR_20:
   647                           
   648                           ; BSR set to: 0
   649  0020ED  6C                 	db	108	;'l'
   650  0020EE  66                 	db	102	;'f'
   651  0020EF  00                 	db	0
   652  0020F0                     STR_9:
   653                           
   654                           ; BSR set to: 0
   655  0020F0  70                 	db	112	;'p'
   656  0020F1  6F                 	db	111	;'o'
   657  0020F2  00                 	db	0
   658  0020F3                     STR_7:
   659                           
   660                           ; BSR set to: 0
   661  0020F3  70                 	db	112	;'p'
   662  0020F4  72                 	db	114	;'r'
   663  0020F5  00                 	db	0
   664  0020F6                     STR_8:
   665                           
   666                           ; BSR set to: 0
   667  0020F6  70                 	db	112	;'p'
   668  0020F7  73                 	db	115	;'s'
   669  0020F8  00                 	db	0
   670  0020F9  00                 	db	0	; dummy byte at the end
   671  0000                     
   672                           ; #config settings
   673                           
   674                           	psect	cinit
   675  005148                     __pcinit:
   676                           	callstack 0
   677  005148                     start_initialization:
   678                           	callstack 0
   679  005148                     __initialization:
   680                           	callstack 0
   681                           
   682                           ; Initialize objects allocated to BANK1 (23 bytes)
   683                           ; load TBLPTR registers with __pidataBANK1
   684  005148  0EA8               	movlw	low __pidataBANK1
   685  00514A  6EF6               	movwf	tblptrl,c
   686  00514C  0E5C               	movlw	high __pidataBANK1
   687  00514E  6EF7               	movwf	tblptrh,c
   688  005150  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   689  005152  6EF8               	movwf	tblptru,c
   690  005154  EE00  F1E8         	lfsr	0,__pdataBANK1
   691  005158  EE10 F017          	lfsr	1,23
   692  00515C                     copy_data0:
   693  00515C  0009               	tblrd		*+
   694  00515E  006F FFD7 FFEE     	movff	tablat,postinc0
   695  005164  50E5               	movf	postdec1,w,c
   696  005166  50E1               	movf	fsr1l,w,c
   697  005168  E1F9               	bnz	copy_data0
   698                           
   699                           ; Initialize objects allocated to BANK0 (2 bytes)
   700                           ; load TBLPTR registers with __pidataBANK0
   701  00516A  0E8E               	movlw	low __pidataBANK0
   702  00516C  6EF6               	movwf	tblptrl,c
   703  00516E  0E5D               	movlw	high __pidataBANK0
   704  005170  6EF7               	movwf	tblptrh,c
   705  005172  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   706  005174  6EF8               	movwf	tblptru,c
   707  005176  0009               	tblrd		*+	;fetch initializer
   708  005178  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
   709  00517E  0009               	tblrd		*+	;fetch initializer
   710  005180  006F FFD4  F0FF    	movff	tablat,__pdataBANK0+1
   711                           
   712                           ; Clear objects allocated to BANK3 (255 bytes)
   713  005186  EE00  F300         	lfsr	0,__pbssBANK3
   714  00518A  EE10 F0FF          	lfsr	1,255
   715  00518E                     clear_0:
   716  00518E  6AEE               	clrf	postinc0,c
   717  005190  50E5               	movf	postdec1,w,c
   718  005192  50E1               	movf	fsr1l,w,c
   719  005194  E1FC               	bnz	clear_0
   720  005196  50E2               	movf	fsr1h,w,c
   721  005198  E1FA               	bnz	clear_0
   722                           
   723                           ; Clear objects allocated to BANK2 (195 bytes)
   724  00519A  EE00  F200         	lfsr	0,__pbssBANK2
   725  00519E  0EC3               	movlw	195
   726  0051A0                     clear_1:
   727  0051A0  6AEE               	clrf	postinc0,c
   728  0051A2  06E8               	decf	wreg,f,c
   729  0051A4  E1FD               	bnz	clear_1
   730                           
   731                           ; Clear objects allocated to BANK1 (232 bytes)
   732  0051A6  EE00  F100         	lfsr	0,__pbssBANK1
   733  0051AA  0EE8               	movlw	232
   734  0051AC                     clear_2:
   735  0051AC  6AEE               	clrf	postinc0,c
   736  0051AE  06E8               	decf	wreg,f,c
   737  0051B0  E1FD               	bnz	clear_2
   738                           
   739                           ; Clear objects allocated to BANK0 (37 bytes)
   740  0051B2  EE00  F0D9         	lfsr	0,__pbssBANK0
   741  0051B6  0E25               	movlw	37
   742  0051B8                     clear_3:
   743  0051B8  6AEE               	clrf	postinc0,c
   744  0051BA  06E8               	decf	wreg,f,c
   745  0051BC  E1FD               	bnz	clear_3
   746                           
   747                           ; Clear objects allocated to COMRAM (19 bytes)
   748  0051BE  EE00  F039         	lfsr	0,__pbssCOMRAM
   749  0051C2  0E13               	movlw	19
   750  0051C4                     clear_4:
   751  0051C4  6AEE               	clrf	postinc0,c
   752  0051C6  06E8               	decf	wreg,f,c
   753  0051C8  E1FD               	bnz	clear_4
   754                           
   755                           ;
   756                           ; Setup IVTBASE
   757                           ;
   758  0051CA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   759  0051CC  6ED5               	movwf	213,c
   760  0051CE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   761  0051D0  6ED6               	movwf	214,c
   762  0051D2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   763  0051D4  6ED7               	movwf	215,c
   764  0051D6                     end_of_initialization:
   765                           	callstack 0
   766  0051D6                     __end_of__initialization:
   767                           	callstack 0
   768  0051D6  0100               	movlb	0
   769  0051D8  EF12  F01D         	goto	_main	;jump to C main() function
   770                           
   771                           	psect	bssCOMRAM
   772  000039                     __pbssCOMRAM:
   773                           	callstack 0
   774  000039                     _ana:
   775                           	callstack 0
   776  000039                     	ds	4
   777  00003D                     _flags:
   778                           	callstack 0
   779  00003D                     	ds	2
   780  00003F                     _timer5ReloadVal:
   781                           	callstack 0
   782  00003F                     	ds	2
   783  000041                     TMR6_ISR@CountCallBack:
   784                           	callstack 0
   785  000041                     	ds	2
   786  000043                     _res:
   787                           	callstack 0
   788  000043                     	ds	1
   789  000044                     _adc_chan:
   790                           	callstack 0
   791  000044                     	ds	1
   792  000045                     _uart1RxLastError:
   793                           	callstack 0
   794  000045                     	ds	1
   795  000046                     _uart1RxCount:
   796                           	callstack 0
   797  000046                     	ds	1
   798  000047                     _uart1RxTail:
   799                           	callstack 0
   800  000047                     	ds	1
   801  000048                     _uart1RxHead:
   802                           	callstack 0
   803  000048                     	ds	1
   804  000049                     _uart1TxBufferRemaining:
   805                           	callstack 0
   806  000049                     	ds	1
   807  00004A                     _uart1TxTail:
   808                           	callstack 0
   809  00004A                     	ds	1
   810  00004B                     _uart1TxHead:
   811                           	callstack 0
   812  00004B                     	ds	1
   813                           
   814                           	psect	bssBANK0
   815  0000D9                     __pbssBANK0:
   816                           	callstack 0
   817  0000D9                     _vval:
   818                           	callstack 0
   819  0000D9                     	ds	4
   820  0000DD                     _TMR5_InterruptHandler:
   821                           	callstack 0
   822  0000DD                     	ds	3
   823  0000E0                     _UART1_ErrorHandler:
   824                           	callstack 0
   825  0000E0                     	ds	3
   826  0000E3                     _UART1_OverrunErrorHandler:
   827                           	callstack 0
   828  0000E3                     	ds	3
   829  0000E6                     _UART1_FramingErrorHandler:
   830                           	callstack 0
   831  0000E6                     	ds	3
   832  0000E9                     _TMR6_InterruptHandler:
   833                           	callstack 0
   834  0000E9                     	ds	3
   835  0000EC                     _ADCC_ADI_InterruptHandler:
   836                           	callstack 0
   837  0000EC                     	ds	3
   838  0000EF                     _UART1_TxInterruptHandler:
   839                           	callstack 0
   840  0000EF                     	ds	3
   841  0000F2                     _UART1_RxInterruptHandler:
   842                           	callstack 0
   843  0000F2                     	ds	3
   844  0000F5                     _nout:
   845                           	callstack 0
   846  0000F5                     	ds	2
   847  0000F7                     _width:
   848                           	callstack 0
   849  0000F7                     	ds	2
   850  0000F9                     _prec:
   851                           	callstack 0
   852  0000F9                     	ds	2
   853  0000FB                     _mode:
   854                           	callstack 0
   855  0000FB                     	ds	1
   856  0000FC                     _adc_tick:
   857                           	callstack 0
   858  0000FC                     	ds	1
   859  0000FD                     _disp_tick:
   860                           	callstack 0
   861  0000FD                     	ds	1
   862                           
   863                           	psect	dataBANK0
   864  0000FE                     __pdataBANK0:
   865                           	callstack 0
   866  0000FE                     _build_time:
   867                           	callstack 0
   868  0000FE                     	ds	1
   869  0000FF                     _build_date:
   870                           	callstack 0
   871  0000FF                     	ds	1
   872                           
   873                           	psect	bssBANK1
   874  000100                     __pbssBANK1:
   875                           	callstack 0
   876  000100                     _uart1RxStatusBuffer:
   877                           	callstack 0
   878  000100                     	ds	64
   879  000140                     _uart1TxBuffer:
   880                           	callstack 0
   881  000140                     	ds	64
   882  000180                     _tickCount:
   883                           	callstack 0
   884  000180                     	ds	12
   885  00018C                     floorf@F526:
   886                           	callstack 0
   887  00018C                     	ds	4
   888  000190                     ___fpclassifyf@F465:
   889                           	callstack 0
   890  000190                     	ds	4
   891  000194                     _ival:
   892                           	callstack 0
   893  000194                     	ds	4
   894  000198                     _dbuf:
   895                           	callstack 0
   896  000198                     	ds	80
   897                           
   898                           	psect	dataBANK1
   899  0001E8                     __pdataBANK1:
   900                           	callstack 0
   901  0001E8                     stoa@F1164:
   902                           	callstack 0
   903  0001E8                     	ds	7
   904  0001EF                     _g_cmds:
   905                           	callstack 0
   906  0001EF                     	ds	16
   907                           
   908                           	psect	bssBANK2
   909  000200                     __pbssBANK2:
   910                           	callstack 0
   911  000200                     _uart1RxBuffer:
   912                           	callstack 0
   913  000200                     	ds	64
   914  000240                     _cli_ctx:
   915                           	callstack 0
   916  000240                     	ds	131
   917                           
   918                           	psect	bssBANK3
   919  000300                     __pbssBANK3:
   920                           	callstack 0
   921  000300                     _buff1:
   922                           	callstack 0
   923  000300                     	ds	255
   924                           
   925                           	psect	cstackBANK2
   926  0002C3                     __pcstackBANK2:
   927                           	callstack 0
   928  0002C3                     ?_printf:
   929                           	callstack 0
   930  0002C3                     ?_sprintf:
   931                           	callstack 0
   932  0002C3                     printf@fmt:
   933                           	callstack 0
   934  0002C3                     sprintf@s:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x0
   938  0002C3                     	ds	2
   939  0002C5                     sprintf@fmt:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x2
   943  0002C5                     	ds	5
   944  0002CA                     sprintf@ap:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x7
   948  0002CA                     	ds	2
   949  0002CC                     sprintf@f:
   950                           	callstack 0
   951                           
   952                           ; 11 bytes @ 0x9
   953  0002CC                     	ds	11
   954  0002D7                     cli_init@a_ctx:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x14
   958  0002D7                     	ds	2
   959  0002D9                     cli_init@a_cmds:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x16
   963  0002D9                     	ds	2
   964                           
   965                           	psect	cstackBANK0
   966  000060                     __pcstackBANK0:
   967                           	callstack 0
   968  000060                     ??__cli_interpret_cmd:
   969  000060                     ?_utoa:
   970                           	callstack 0
   971  000060                     ___flmul@sign:
   972                           	callstack 0
   973  000060                     utoa@fp:
   974                           	callstack 0
   975  000060                     floorf@m:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x0
   979  000060                     	ds	1
   980  000061                     ___flmul@aexp:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x1
   984  000061                     	ds	1
   985  000062                     ___flmul@bexp:
   986                           	callstack 0
   987  000062                     utoa@d:
   988                           	callstack 0
   989                           
   990                           ; 8 bytes @ 0x2
   991  000062                     	ds	1
   992  000063                     ___flmul@grs:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x3
   996  000063                     	ds	1
   997  000064                     floorf@e:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x4
  1001  000064                     	ds	2
  1002  000066                     floorf@u:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x6
  1006  000066                     	ds	1
  1007  000067                     ___flmul@prod:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x7
  1011  000067                     	ds	3
  1012  00006A                     ??_utoa:
  1013  00006A                     _cli_read$2151:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0xA
  1017  00006A                     	ds	1
  1018  00006B                     ___flmul@temp:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0xB
  1022  00006B                     	ds	1
  1023  00006C                     cli_read@i:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0xC
  1027  00006C                     	ds	1
  1028  00006D                     ??___flge:
  1029                           
  1030                           ; 1 bytes @ 0xD
  1031  00006D                     	ds	4
  1032  000071                     ?_efgtoa:
  1033                           	callstack 0
  1034  000071                     efgtoa@fp:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x11
  1038  000071                     	ds	1
  1039  000072                     utoa@p:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x12
  1043  000072                     	ds	1
  1044  000073                     efgtoa@f:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x13
  1048  000073                     	ds	1
  1049  000074                     utoa@w:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x14
  1053  000074                     	ds	2
  1054  000076                     utoa@n:
  1055                           	callstack 0
  1056                           
  1057                           ; 8 bytes @ 0x16
  1058  000076                     	ds	1
  1059  000077                     efgtoa@c:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x17
  1063  000077                     	ds	1
  1064  000078                     ??_efgtoa:
  1065                           
  1066                           ; 1 bytes @ 0x18
  1067  000078                     	ds	5
  1068  00007D                     _efgtoa$2723:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x1D
  1072  00007D                     	ds	1
  1073  00007E                     utoa@i:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x1E
  1077  00007E                     	ds	1
  1078  00007F                     _efgtoa$2731:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x1F
  1082  00007F                     	ds	2
  1083  000081                     _efgtoa$2732:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x21
  1087  000081                     	ds	2
  1088  000083                     efgtoa@t:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x23
  1092  000083                     	ds	2
  1093  000085                     efgtoa@pp:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x25
  1097  000085                     	ds	2
  1098  000087                     efgtoa@ne:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x27
  1102  000087                     	ds	2
  1103  000089                     efgtoa@m:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x29
  1107  000089                     	ds	2
  1108  00008B                     efgtoa@ou:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x2B
  1112  00008B                     	ds	4
  1113  00008F                     efgtoa@d:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x2F
  1117  00008F                     	ds	2
  1118  000091                     efgtoa@sign:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x31
  1122  000091                     	ds	2
  1123  000093                     efgtoa@p:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x33
  1127  000093                     	ds	2
  1128  000095                     efgtoa@nmode:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x35
  1132  000095                     	ds	1
  1133  000096                     efgtoa@w:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x36
  1137  000096                     	ds	2
  1138  000098                     efgtoa@mode:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x38
  1142  000098                     	ds	1
  1143  000099                     efgtoa@h:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x39
  1147  000099                     	ds	4
  1148  00009D                     efgtoa@l:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x3D
  1152  00009D                     	ds	4
  1153  0000A1                     efgtoa@g:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x41
  1157  0000A1                     	ds	4
  1158  0000A5                     efgtoa@i:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x45
  1162  0000A5                     	ds	2
  1163  0000A7                     efgtoa@e:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x47
  1167  0000A7                     	ds	2
  1168  0000A9                     efgtoa@n:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x49
  1172  0000A9                     	ds	2
  1173  0000AB                     efgtoa@u:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x4B
  1177  0000AB                     	ds	4
  1178  0000AF                     ?_vfpfcnvrt:
  1179                           	callstack 0
  1180  0000AF                     vfpfcnvrt@fp:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x4F
  1184  0000AF                     	ds	2
  1185  0000B1                     vfpfcnvrt@fmt:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x51
  1189  0000B1                     	ds	1
  1190  0000B2                     vfpfcnvrt@ap:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x52
  1194  0000B2                     	ds	2
  1195  0000B4                     ??_vfpfcnvrt:
  1196                           
  1197                           ; 1 bytes @ 0x54
  1198  0000B4                     	ds	4
  1199  0000B8                     vfpfcnvrt@llu:
  1200                           	callstack 0
  1201                           
  1202                           ; 8 bytes @ 0x58
  1203  0000B8                     	ds	8
  1204  0000C0                     vfpfcnvrt@cp:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x60
  1208  0000C0                     	ds	2
  1209  0000C2                     vfpfcnvrt@done:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x62
  1213  0000C2                     	ds	2
  1214  0000C4                     _vfpfcnvrt$2770:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x64
  1218  0000C4                     	ds	2
  1219  0000C6                     vfpfcnvrt@c:
  1220                           	callstack 0
  1221                           
  1222                           ; 1 bytes @ 0x66
  1223  0000C6                     	ds	1
  1224  0000C7                     vfpfcnvrt@f:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x67
  1228  0000C7                     	ds	4
  1229  0000CB                     vfpfcnvrt@ct:
  1230                           	callstack 0
  1231                           
  1232                           ; 3 bytes @ 0x6B
  1233  0000CB                     	ds	3
  1234  0000CE                     ?_vfprintf:
  1235                           	callstack 0
  1236  0000CE                     vfprintf@fp:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x6E
  1240  0000CE                     	ds	2
  1241  0000D0                     vfprintf@fmt:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x70
  1245  0000D0                     	ds	1
  1246  0000D1                     vfprintf@ap:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x71
  1250  0000D1                     	ds	2
  1251  0000D3                     printf@ap:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x73
  1255  0000D3                     	ds	2
  1256  0000D5                     ??_main:
  1257                           
  1258                           ; 1 bytes @ 0x75
  1259  0000D5                     	ds	2
  1260  0000D7                     main@mode_sw:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x77
  1264  0000D7                     	ds	1
  1265  0000D8                     main@dac_v:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x78
  1269  0000D8                     	ds	1
  1270                           
  1271                           	psect	cstackCOMRAM
  1272  000001                     __pcstackCOMRAM:
  1273                           	callstack 0
  1274  000001                     ?_ADCC_GetConversionResult:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x0
  1278  000001                     	ds	2
  1279  000003                     ??_ADCC_GetConversionResult:
  1280                           
  1281                           ; 1 bytes @ 0x2
  1282  000003                     	ds	2
  1283  000005                     ??_Adc_Isr:
  1284                           
  1285                           ; 1 bytes @ 0x4
  1286  000005                     	ds	1
  1287  000006                     ??_ADCC_ISR:
  1288                           
  1289                           ; 1 bytes @ 0x5
  1290  000006                     	ds	2
  1291  000008                     ??_Led_Blink:
  1292                           
  1293                           ; 1 bytes @ 0x7
  1294  000008                     	ds	1
  1295  000009                     ??_TMR6_ISR:
  1296                           
  1297                           ; 1 bytes @ 0x8
  1298  000009                     	ds	2
  1299  00000B                     ??_UART1_tx_vect_isr:
  1300                           
  1301                           ; 1 bytes @ 0xA
  1302  00000B                     	ds	2
  1303  00000D                     ??_UART1_rx_vect_isr:
  1304                           
  1305                           ; 1 bytes @ 0xC
  1306  00000D                     	ds	2
  1307  00000F                     TMR5_WriteTimer@timerVal:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0xE
  1311  00000F                     	ds	2
  1312  000011                     Timers_Isr@i:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x10
  1316  000011                     	ds	2
  1317  000013                     ??_TMR5_ISR:
  1318                           
  1319                           ; 1 bytes @ 0x12
  1320  000013                     	ds	2
  1321  000015                     ??_display_led:
  1322  000015                     ?_strlen:
  1323                           	callstack 0
  1324  000015                     ?___fpclassifyf:
  1325                           	callstack 0
  1326  000015                     ?_isupper:
  1327                           	callstack 0
  1328  000015                     ?_isdigit:
  1329                           	callstack 0
  1330  000015                     ?_isspace:
  1331                           	callstack 0
  1332  000015                     ?___wmul:
  1333                           	callstack 0
  1334  000015                     ?___awdiv:
  1335                           	callstack 0
  1336  000015                     ?___awmod:
  1337                           	callstack 0
  1338  000015                     ?___fladd:
  1339                           	callstack 0
  1340  000015                     ?___fldiv:
  1341                           	callstack 0
  1342  000015                     ?___flneg:
  1343                           	callstack 0
  1344  000015                     ?___fltol:
  1345                           	callstack 0
  1346  000015                     ?___xxtofl:
  1347                           	callstack 0
  1348  000015                     ?___lodiv:
  1349                           	callstack 0
  1350  000015                     ?___lomod:
  1351                           	callstack 0
  1352  000015                     DAC1_SetOutput@inputData:
  1353                           	callstack 0
  1354  000015                     INTERRUPT_Initialize@state:
  1355                           	callstack 0
  1356  000015                     UART1_Read@readValue:
  1357                           	callstack 0
  1358  000015                     UART1_Write@txData:
  1359                           	callstack 0
  1360  000015                     ___wmul@multiplier:
  1361                           	callstack 0
  1362  000015                     ___awdiv@dividend:
  1363                           	callstack 0
  1364  000015                     ___awmod@dividend:
  1365                           	callstack 0
  1366  000015                     memset@dest:
  1367                           	callstack 0
  1368  000015                     isdigit@c:
  1369                           	callstack 0
  1370  000015                     isspace@c:
  1371                           	callstack 0
  1372  000015                     isupper@c:
  1373                           	callstack 0
  1374  000015                     strcpy@dest:
  1375                           	callstack 0
  1376  000015                     strlen@s:
  1377                           	callstack 0
  1378  000015                     ADCC_SetADIInterruptHandler@InterruptHandler:
  1379                           	callstack 0
  1380  000015                     TMR6_SetInterruptHandler@InterruptHandler:
  1381                           	callstack 0
  1382  000015                     UART1_SetFramingErrorHandler@interruptHandler:
  1383                           	callstack 0
  1384  000015                     UART1_SetOverrunErrorHandler@interruptHandler:
  1385                           	callstack 0
  1386  000015                     UART1_SetErrorHandler@interruptHandler:
  1387                           	callstack 0
  1388  000015                     UART1_SetRxInterruptHandler@InterruptHandler:
  1389                           	callstack 0
  1390  000015                     UART1_SetTxInterruptHandler@InterruptHandler:
  1391                           	callstack 0
  1392  000015                     TMR5_SetInterruptHandler@InterruptHandler:
  1393                           	callstack 0
  1394  000015                     ___fleq@ff1:
  1395                           	callstack 0
  1396  000015                     ___flneg@f1:
  1397                           	callstack 0
  1398  000015                     ___fltol@f1:
  1399                           	callstack 0
  1400  000015                     ___fladd@b:
  1401                           	callstack 0
  1402  000015                     ___fldiv@b:
  1403                           	callstack 0
  1404  000015                     ___xxtofl@val:
  1405                           	callstack 0
  1406  000015                     ___fpclassifyf@x:
  1407                           	callstack 0
  1408  000015                     ___lodiv@dividend:
  1409                           	callstack 0
  1410  000015                     ___lomod@dividend:
  1411                           	callstack 0
  1412                           
  1413                           ; 8 bytes @ 0x14
  1414  000015                     	ds	1
  1415  000016                     putch@txData:
  1416                           	callstack 0
  1417  000016                     linux_getc@a_data:
  1418                           	callstack 0
  1419                           
  1420                           ; 1 bytes @ 0x15
  1421  000016                     	ds	1
  1422  000017                     ??_isupper:
  1423  000017                     ??_isdigit:
  1424  000017                     ??_isspace:
  1425  000017                     ??_linux_getc:
  1426  000017                     ?_fputc:
  1427                           	callstack 0
  1428  000017                     display_led@led:
  1429                           	callstack 0
  1430  000017                     ___wmul@multiplicand:
  1431                           	callstack 0
  1432  000017                     ___awdiv@divisor:
  1433                           	callstack 0
  1434  000017                     ___awmod@divisor:
  1435                           	callstack 0
  1436  000017                     memset@c:
  1437                           	callstack 0
  1438  000017                     fputc@c:
  1439                           	callstack 0
  1440  000017                     strcpy@src:
  1441                           	callstack 0
  1442  000017                     strlen@a:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x16
  1446  000017                     	ds	1
  1447  000018                     ??_TMR5_Initialize:
  1448  000018                     
  1449                           ; 1 bytes @ 0x17
  1450  000018                     	ds	1
  1451  000019                     ??___fpclassifyf:
  1452  000019                     ??_strcpy:
  1453  000019                     ??___fltol:
  1454  000019                     ??___xxtofl:
  1455  000019                     ?_strncmp:
  1456                           	callstack 0
  1457  000019                     ___awdiv@counter:
  1458                           	callstack 0
  1459  000019                     ___awmod@counter:
  1460                           	callstack 0
  1461  000019                     ___wmul@product:
  1462                           	callstack 0
  1463  000019                     memset@n:
  1464                           	callstack 0
  1465  000019                     fputc@fp:
  1466                           	callstack 0
  1467  000019                     strncmp@_l:
  1468                           	callstack 0
  1469  000019                     ___fleq@ff2:
  1470                           	callstack 0
  1471  000019                     ___fladd@a:
  1472                           	callstack 0
  1473  000019                     ___fldiv@a:
  1474                           	callstack 0
  1475                           
  1476                           ; 4 bytes @ 0x18
  1477  000019                     	ds	1
  1478  00001A                     ___awdiv@sign:
  1479                           	callstack 0
  1480  00001A                     ___awmod@sign:
  1481                           	callstack 0
  1482                           
  1483                           ; 1 bytes @ 0x19
  1484  00001A                     	ds	1
  1485  00001B                     ??_memset:
  1486  00001B                     ??_fputc:
  1487  00001B                     ?_tolower:
  1488                           	callstack 0
  1489  00001B                     _isspace$2835:
  1490                           	callstack 0
  1491  00001B                     ___awdiv@quotient:
  1492                           	callstack 0
  1493  00001B                     strcpy@s:
  1494                           	callstack 0
  1495  00001B                     strncmp@_r:
  1496                           	callstack 0
  1497  00001B                     tolower@c:
  1498                           	callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x1A
  1501  00001B                     	ds	1
  1502  00001C                     ?_atoi:
  1503                           	callstack 0
  1504  00001C                     atoi@s:
  1505                           	callstack 0
  1506                           
  1507                           ; 1 bytes @ 0x1B
  1508  00001C                     	ds	1
  1509  00001D                     ??___fladd:
  1510  00001D                     ??___fldiv:
  1511  00001D                     ??_tolower:
  1512  00001D                     ??___fleq:
  1513  00001D                     ___fltol@sign1:
  1514                           	callstack 0
  1515  00001D                     ___xxtofl@sign:
  1516                           	callstack 0
  1517  00001D                     memset@k:
  1518                           	callstack 0
  1519  00001D                     ___fpclassifyf@e:
  1520                           	callstack 0
  1521  00001D                     strcpy@d:
  1522                           	callstack 0
  1523  00001D                     strncmp@n:
  1524                           	callstack 0
  1525  00001D                     ___lodiv@divisor:
  1526                           	callstack 0
  1527  00001D                     ___lomod@divisor:
  1528                           	callstack 0
  1529                           
  1530                           ; 8 bytes @ 0x1C
  1531  00001D                     	ds	1
  1532  00001E                     ??_atoi:
  1533  00001E                     ___fltol@exp1:
  1534                           	callstack 0
  1535  00001E                     ___xxtofl@exp:
  1536                           	callstack 0
  1537                           
  1538                           ; 1 bytes @ 0x1D
  1539  00001E                     	ds	1
  1540  00001F                     ??_strncmp:
  1541  00001F                     memset@s:
  1542                           	callstack 0
  1543  00001F                     ___xxtofl@arg:
  1544                           	callstack 0
  1545  00001F                     ___fpclassifyf@u:
  1546                           	callstack 0
  1547                           
  1548                           ; 4 bytes @ 0x1E
  1549  00001F                     	ds	1
  1550  000020                     ?_fputs:
  1551                           	callstack 0
  1552  000020                     ?_stoa:
  1553                           	callstack 0
  1554  000020                     stoa@fp:
  1555                           	callstack 0
  1556  000020                     fputs@s:
  1557                           	callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x1F
  1560  000020                     	ds	1
  1561  000021                     ___fladd@signs:
  1562                           	callstack 0
  1563  000021                     strncmp@l:
  1564                           	callstack 0
  1565  000021                     ___fldiv@rem:
  1566                           	callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x20
  1569  000021                     	ds	1
  1570  000022                     ___fladd@aexp:
  1571                           	callstack 0
  1572  000022                     stoa@s:
  1573                           	callstack 0
  1574  000022                     atoi@neg:
  1575                           	callstack 0
  1576  000022                     fputs@fp:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x21
  1580  000022                     	ds	1
  1581  000023                     ?___flmul:
  1582                           	callstack 0
  1583  000023                     ___fladd@bexp:
  1584                           	callstack 0
  1585  000023                     strncmp@r:
  1586                           	callstack 0
  1587  000023                     ___flmul@b:
  1588                           	callstack 0
  1589                           
  1590                           ; 4 bytes @ 0x22
  1591  000023                     	ds	1
  1592  000024                     ??_fputs:
  1593  000024                     ??_stoa:
  1594  000024                     ___fladd@grs:
  1595                           	callstack 0
  1596  000024                     atoi@n:
  1597                           	callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x23
  1600  000024                     	ds	1
  1601  000025                     ___lomod@counter:
  1602                           	callstack 0
  1603  000025                     ___fldiv@sign:
  1604                           	callstack 0
  1605  000025                     stoa@nuls:
  1606                           	callstack 0
  1607  000025                     ___lodiv@quotient:
  1608                           	callstack 0
  1609                           
  1610                           ; 8 bytes @ 0x24
  1611  000025                     	ds	1
  1612  000026                     fputs@c:
  1613                           	callstack 0
  1614  000026                     ___fldiv@new_exp:
  1615                           	callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x25
  1618  000026                     	ds	1
  1619  000027                     fputs@i:
  1620                           	callstack 0
  1621  000027                     ___flmul@a:
  1622                           	callstack 0
  1623                           
  1624                           ; 4 bytes @ 0x26
  1625  000027                     	ds	1
  1626  000028                     ___fldiv@grs:
  1627                           	callstack 0
  1628                           
  1629                           ; 4 bytes @ 0x27
  1630  000028                     	ds	1
  1631  000029                     ?_pad:
  1632                           	callstack 0
  1633  000029                     pad@fp:
  1634                           	callstack 0
  1635  000029                     puts@s:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x28
  1639  000029                     	ds	2
  1640  00002B                     ??___flmul:
  1641  00002B                     _puts$2914:
  1642                           	callstack 0
  1643  00002B                     pad@buf:
  1644                           	callstack 0
  1645                           
  1646                           ; 2 bytes @ 0x2A
  1647  00002B                     	ds	1
  1648  00002C                     ___fldiv@bexp:
  1649                           	callstack 0
  1650  00002C                     fh_pr@a_data:
  1651                           	callstack 0
  1652  00002C                     fh_po@a_data:
  1653                           	callstack 0
  1654  00002C                     linux_putc@data:
  1655                           	callstack 0
  1656  00002C                     stoa@i:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x2B
  1660  00002C                     	ds	1
  1661  00002D                     ___lodiv@counter:
  1662                           	callstack 0
  1663  00002D                     ___fldiv@aexp:
  1664                           	callstack 0
  1665  00002D                     pad@p:
  1666                           	callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x2C
  1669  00002D                     	ds	1
  1670  00002E                     ?_floorf:
  1671                           	callstack 0
  1672  00002E                     linux_putc@a_len:
  1673                           	callstack 0
  1674  00002E                     __cli_interpret_cmd@a_ctx:
  1675                           	callstack 0
  1676  00002E                     stoa@w:
  1677                           	callstack 0
  1678  00002E                     floorf@x:
  1679                           	callstack 0
  1680                           
  1681                           ; 4 bytes @ 0x2D
  1682  00002E                     	ds	1
  1683  00002F                     ??_pad:
  1684  00002F                     ?___flsub:
  1685                           	callstack 0
  1686  00002F                     ___flge@ff1:
  1687                           	callstack 0
  1688  00002F                     ___flsub@b:
  1689                           	callstack 0
  1690                           
  1691                           ; 4 bytes @ 0x2E
  1692  00002F                     	ds	1
  1693  000030                     __cli_interpret_cmd@ret:
  1694                           	callstack 0
  1695  000030                     pad@i:
  1696                           	callstack 0
  1697  000030                     stoa@cp:
  1698                           	callstack 0
  1699                           
  1700                           ; 2 bytes @ 0x2F
  1701  000030                     	ds	1
  1702  000031                     __cli_interpret_cmd@i:
  1703                           	callstack 0
  1704                           
  1705                           ; 1 bytes @ 0x30
  1706  000031                     	ds	1
  1707  000032                     ??_floorf:
  1708  000032                     cli_read@a_ctx:
  1709                           	callstack 0
  1710  000032                     pad@w:
  1711                           	callstack 0
  1712  000032                     stoa@p:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x31
  1716  000032                     	ds	1
  1717  000033                     ___flge@ff2:
  1718                           	callstack 0
  1719  000033                     ___flsub@a:
  1720                           	callstack 0
  1721                           
  1722                           ; 4 bytes @ 0x32
  1723  000033                     	ds	1
  1724  000034                     ??_cli_read:
  1725  000034                     stoa@l:
  1726                           	callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x33
  1729  000034                     	ds	3
  1730  000037                     
  1731                           ; 1 bytes @ 0x36
  1732  000037                     	ds	1
  1733  000038                     vfprintf@cfmt:
  1734                           	callstack 0
  1735                           
  1736                           ; 1 bytes @ 0x37
  1737  000038                     	ds	1
  1738  000039                     
  1739                           ; 1 bytes @ 0x38
  1740 ;;
  1741 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1742 ;;
  1743 ;; *************** function _main *****************
  1744 ;; Defined at:
  1745 ;;		line 121 in file "main.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  dac_v           1  120[BANK0 ] unsigned char 
  1750 ;;  mode_sw         1  119[BANK0 ] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 3F/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1763 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1764 ;;Total ram usage:        4 bytes
  1765 ;; Hardware stack levels required when called: 15
  1766 ;; This function calls:
  1767 ;;		_ADCC_SetADIInterruptHandler
  1768 ;;		_DAC1_GetOutput
  1769 ;;		_DAC1_SetOutput
  1770 ;;		_SYSTEM_Initialize
  1771 ;;		_TMR5_SetInterruptHandler
  1772 ;;		_TMR6_SetInterruptHandler
  1773 ;;		___flmul
  1774 ;;		___xxtofl
  1775 ;;		_cli_read
  1776 ;;		_display_led
  1777 ;;		_printf
  1778 ;;		_scmd_init
  1779 ;; This function is called by:
  1780 ;;		Startup code after reset
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text0
  1785  003A24                     __ptext0:
  1786                           	callstack 0
  1787  003A24                     _main:
  1788                           	callstack 16
  1789                           
  1790                           ;main.c: 123:  uint8_t dac_v = 0, mode_sw = 0;
  1791                           
  1792                           ;incstack = 0
  1793  003A24  0E00               	movlw	0
  1794  003A26  0100               	movlb	0	; () banked
  1795  003A28  6FD8               	movwf	main@dac_v& (0+255),b
  1796  003A2A  0E00               	movlw	0
  1797  003A2C  6FD7               	movwf	main@mode_sw& (0+255),b
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;main.c: 125:  SYSTEM_Initialize();
  1801  003A2E  EC76  F02D         	call	_SYSTEM_Initialize	;wreg free
  1802                           
  1803                           ; BSR set to: 61
  1804  003A32  92BD               	bcf	189,1,c	;volatile
  1805                           
  1806                           ; BSR set to: 61
  1807  003A34  94BE               	bcf	190,2,c	;volatile
  1808                           
  1809                           ; BSR set to: 61
  1810                           ;main.c: 129:  TMR6_SetInterruptHandler(Led_Blink);
  1811  003A36  0E0C               	movlw	low _Led_Blink
  1812  003A38  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  1813  003A3A  0E5C               	movlw	high _Led_Blink
  1814  003A3C  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  1815  003A3E  0E00               	movlw	low (_Led_Blink shr (0+16))
  1816  003A40  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  1817  003A42  EC9C  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
  1818                           
  1819                           ;main.c: 130:  TMR5_SetInterruptHandler(Timers_Isr);
  1820  003A46  0E6A               	movlw	low _Timers_Isr
  1821  003A48  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  1822  003A4A  0E55               	movlw	high _Timers_Isr
  1823  003A4C  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  1824  003A4E  0E00               	movlw	low (_Timers_Isr shr (0+16))
  1825  003A50  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  1826  003A52  ECA3  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
  1827                           
  1828                           ;main.c: 131:  ADCC_SetADIInterruptHandler(Adc_Isr);
  1829  003A56  0E66               	movlw	low _Adc_Isr
  1830  003A58  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  1831  003A5A  0E59               	movlw	high _Adc_Isr
  1832  003A5C  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  1833  003A5E  0E00               	movlw	low (_Adc_Isr shr (0+16))
  1834  003A60  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
  1835  003A62  ECAA  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
  1836                           
  1837                           ;main.c: 132:  ADPCH = adc_chan;
  1838  003A66  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
  1839                           
  1840                           ;main.c: 137:  scmd_init();
  1841  003A6C  EC30  F02E         	call	_scmd_init	;wreg free
  1842                           
  1843                           ;main.c: 140:  (INTCON0bits.GIEH = 1);
  1844  003A70  8ED2               	bsf	210,7,c	;volatile
  1845                           
  1846                           ;main.c: 145:  DAC1_SetOutput(dac_v);
  1847  003A72  0E00               	movlw	0
  1848  003A74  ECBC  F02E         	call	_DAC1_SetOutput
  1849  003A78                     l10616:
  1850                           
  1851                           ;main.c: 148:   if (adc_tick) {
  1852  003A78  0100               	movlb	0	; () banked
  1853  003A7A  51FC               	movf	_adc_tick& (0+255),w,b	;volatile
  1854  003A7C  B4D8               	btfsc	status,2,c
  1855  003A7E  D7FC               	goto	l10616
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;main.c: 149:    if (ana[0] < 900) {
  1859  003A80  0E84               	movlw	132
  1860  003A82  5C39               	subwf	_ana^0,w,c	;volatile
  1861  003A84  0E03               	movlw	3
  1862  003A86  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1863  003A88  B0D8               	btfsc	status,0,c
  1864  003A8A  D004               	goto	l10622
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 150:     display_led(oo00_off);
  1868  003A8C  0E00               	movlw	0
  1869  003A8E  ECA0  F026         	call	_display_led
  1870                           
  1871                           ;main.c: 151:    } else {
  1872  003A92  D00D               	goto	l10628
  1873  003A94                     l10622:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;main.c: 152:     if (ana[0] > 1800) {
  1877  003A94  0E09               	movlw	9
  1878  003A96  5C39               	subwf	_ana^0,w,c	;volatile
  1879  003A98  0E07               	movlw	7
  1880  003A9A  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1881  003A9C  A0D8               	btfss	status,0,c
  1882  003A9E  D004               	goto	l10626
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;main.c: 153:      display_led(oo00_g);
  1886  003AA0  0E01               	movlw	1
  1887  003AA2  ECA0  F026         	call	_display_led
  1888                           
  1889                           ;main.c: 154:     } else {
  1890  003AA6  D003               	goto	l10628
  1891  003AA8                     l10626:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;main.c: 155:      display_led(oo00_r);
  1895  003AA8  0E02               	movlw	2
  1896  003AAA  ECA0  F026         	call	_display_led
  1897  003AAE                     l10628:
  1898                           
  1899                           ;main.c: 159:    if (ana[1] < 50) {
  1900  003AAE  503C               	movf	(_ana+3)^0,w,c	;volatile
  1901  003AB0  E108               	bnz	l10632
  1902  003AB2  0E32               	movlw	50
  1903  003AB4  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1904  003AB6  B0D8               	btfsc	status,0,c
  1905  003AB8  D004               	goto	l10632
  1906                           
  1907                           ;main.c: 160:     display_led(oo10_off);
  1908  003ABA  0E03               	movlw	3
  1909  003ABC  ECA0  F026         	call	_display_led
  1910                           
  1911                           ;main.c: 161:    } else {
  1912  003AC0  D00D               	goto	l10638
  1913  003AC2                     l10632:
  1914                           
  1915                           ;main.c: 162:     if (ana[1] > 150) {
  1916  003AC2  503C               	movf	(_ana+3)^0,w,c	;volatile
  1917  003AC4  E104               	bnz	u12400
  1918  003AC6  0E97               	movlw	151
  1919  003AC8  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1920  003ACA  A0D8               	btfss	status,0,c
  1921  003ACC  D004               	goto	l10636
  1922  003ACE                     u12400:
  1923                           
  1924                           ;main.c: 163:      display_led(oo10_g);
  1925  003ACE  0E04               	movlw	4
  1926  003AD0  ECA0  F026         	call	_display_led
  1927                           
  1928                           ;main.c: 164:     } else {
  1929  003AD4  D003               	goto	l10638
  1930  003AD6                     l10636:
  1931                           
  1932                           ;main.c: 165:      display_led(oo10_r);
  1933  003AD6  0E05               	movlw	5
  1934  003AD8  ECA0  F026         	call	_display_led
  1935  003ADC                     l10638:
  1936                           
  1937                           ;main.c: 168:    adc_tick = 0;
  1938  003ADC  0E00               	movlw	0
  1939  003ADE  0100               	movlb	0	; () banked
  1940  003AE0  6FFC               	movwf	_adc_tick& (0+255),b	;volatile
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;main.c: 170:    if (!PORTAbits.RA6) {
  1944  003AE2  BCCA               	btfsc	202,6,c	;volatile
  1945  003AE4  D004               	goto	l10644
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;main.c: 171:     display_led(oo30_r);
  1949  003AE6  0E0B               	movlw	11
  1950  003AE8  ECA0  F026         	call	_display_led
  1951                           
  1952                           ;main.c: 172:    } else {
  1953  003AEC  D003               	goto	l10646
  1954  003AEE                     l10644:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;main.c: 173:     display_led(oo30_off);
  1958  003AEE  0E09               	movlw	9
  1959  003AF0  ECA0  F026         	call	_display_led
  1960  003AF4                     l10646:
  1961                           
  1962                           ;main.c: 177:    if (!PORTAbits.RA4) {
  1963  003AF4  B8CA               	btfsc	202,4,c	;volatile
  1964  003AF6  D004               	goto	l10650
  1965                           
  1966                           ;main.c: 178:     display_led(oo20_g);
  1967  003AF8  0E07               	movlw	7
  1968  003AFA  ECA0  F026         	call	_display_led
  1969                           
  1970                           ;main.c: 179:    } else {
  1971  003AFE  D003               	goto	l10652
  1972  003B00                     l10650:
  1973                           
  1974                           ;main.c: 180:     display_led(oo20_off);
  1975  003B00  0E06               	movlw	6
  1976  003B02  ECA0  F026         	call	_display_led
  1977  003B06                     l10652:
  1978                           
  1979                           ;main.c: 183:    if (disp_tick) {
  1980  003B06  0100               	movlb	0	; () banked
  1981  003B08  51FD               	movf	_disp_tick& (0+255),w,b	;volatile
  1982  003B0A  B4D8               	btfsc	status,2,c
  1983  003B0C  D7B5               	goto	l10616
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;main.c: 184:     vval = (double) ana[0] * 0.405194;
  1987  003B0E  C039  F015         	movff	_ana,___xxtofl@val	;volatile
  1988  003B12  C03A  F016         	movff	_ana+1,___xxtofl@val+1	;volatile
  1989  003B16  6A17               	clrf	(___xxtofl@val+2)^0,c
  1990  003B18  6A18               	clrf	(___xxtofl@val+3)^0,c
  1991  003B1A  0E00               	movlw	0
  1992  003B1C  EC72  F023         	call	___xxtofl
  1993  003B20  C015  F023         	movff	?___xxtofl,___flmul@b
  1994  003B24  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  1995  003B28  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  1996  003B2C  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  1997  003B30  0E97               	movlw	151
  1998  003B32  6E27               	movwf	___flmul@a^0,c
  1999  003B34  0E75               	movlw	117
  2000  003B36  6E28               	movwf	(___flmul@a+1)^0,c
  2001  003B38  0ECF               	movlw	207
  2002  003B3A  6E29               	movwf	(___flmul@a+2)^0,c
  2003  003B3C  0E3E               	movlw	62
  2004  003B3E  6E2A               	movwf	(___flmul@a+3)^0,c
  2005  003B40  EC9F  F018         	call	___flmul	;wreg free
  2006  003B44  C023  F0D9         	movff	?___flmul,_vval
  2007  003B48  C024  F0DA         	movff	?___flmul+1,_vval+1
  2008  003B4C  C025  F0DB         	movff	?___flmul+2,_vval+2
  2009  003B50  C026  F0DC         	movff	?___flmul+3,_vval+3
  2010                           
  2011                           ;main.c: 185:     ival = (double) ana[1] * 0.004;
  2012  003B54  C03B  F015         	movff	_ana+2,___xxtofl@val	;volatile
  2013  003B58  C03C  F016         	movff	_ana+3,___xxtofl@val+1	;volatile
  2014  003B5C  6A17               	clrf	(___xxtofl@val+2)^0,c
  2015  003B5E  6A18               	clrf	(___xxtofl@val+3)^0,c
  2016  003B60  0E00               	movlw	0
  2017  003B62  EC72  F023         	call	___xxtofl
  2018  003B66  C015  F023         	movff	?___xxtofl,___flmul@b
  2019  003B6A  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  2020  003B6E  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  2021  003B72  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  2022  003B76  0E6F               	movlw	111
  2023  003B78  6E27               	movwf	___flmul@a^0,c
  2024  003B7A  0E12               	movlw	18
  2025  003B7C  6E28               	movwf	(___flmul@a+1)^0,c
  2026  003B7E  0E83               	movlw	131
  2027  003B80  6E29               	movwf	(___flmul@a+2)^0,c
  2028  003B82  0E3B               	movlw	59
  2029  003B84  6E2A               	movwf	(___flmul@a+3)^0,c
  2030  003B86  EC9F  F018         	call	___flmul	;wreg free
  2031  003B8A  C023  F194         	movff	?___flmul,_ival
  2032  003B8E  C024  F195         	movff	?___flmul+1,_ival+1
  2033  003B92  C025  F196         	movff	?___flmul+2,_ival+2
  2034  003B96  C026  F197         	movff	?___flmul+3,_ival+3
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;main.c: 186:     printf(" PS Test %1u: DAC OUT=%2u, Supply ReadBack %4u V=%+5.1fV %4u I
      +                          =%+3.1fmA\r\n", mode, (uint16_t) DAC1_GetOutput(), ana[0], vval, ana[1], ival);
  2038  003B9A  0E22               	movlw	low STR_6
  2039  003B9C  0102               	movlb	2	; () banked
  2040  003B9E  6FC3               	movwf	printf@fmt& (0+255),b
  2041  003BA0  C0FB  F2C4         	movff	_mode,?_printf+1
  2042  003BA4  6BC5               	clrf	(?_printf+2)& (0+255),b
  2043  003BA6  ECC1  F02E         	call	_DAC1_GetOutput	;wreg free
  2044  003BAA  0100               	movlb	0	; () banked
  2045  003BAC  6FD5               	movwf	??_main& (0+255),b
  2046  003BAE  51D5               	movf	??_main& (0+255),w,b
  2047  003BB0  0102               	movlb	2	; () banked
  2048  003BB2  6FC6               	movwf	(?_printf+3)& (0+255),b
  2049  003BB4  6BC7               	clrf	(?_printf+4)& (0+255),b
  2050  003BB6  C039  F2C8         	movff	_ana,?_printf+5	;volatile
  2051  003BBA  C03A  F2C9         	movff	_ana+1,?_printf+6	;volatile
  2052  003BBE  C0D9  F2CA         	movff	_vval,?_printf+7
  2053  003BC2  C0DA  F2CB         	movff	_vval+1,?_printf+8
  2054  003BC6  C0DB  F2CC         	movff	_vval+2,?_printf+9
  2055  003BCA  C0DC  F2CD         	movff	_vval+3,?_printf+10
  2056  003BCE  C03B  F2CE         	movff	_ana+2,?_printf+11	;volatile
  2057  003BD2  C03C  F2CF         	movff	_ana+3,?_printf+12	;volatile
  2058  003BD6  C194  F2D0         	movff	_ival,?_printf+13
  2059  003BDA  C195  F2D1         	movff	_ival+1,?_printf+14
  2060  003BDE  C196  F2D2         	movff	_ival+2,?_printf+15
  2061  003BE2  C197  F2D3         	movff	_ival+3,?_printf+16
  2062  003BE6  ECD3  F02D         	call	_printf	;wreg free
  2063                           
  2064                           ;main.c: 191:     switch (mode) {
  2065  003BEA  D01D               	goto	l10686
  2066  003BEC                     l10658:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;main.c: 193:      if (dac_v > 19) {
  2070  003BEC  0E13               	movlw	19
  2071  003BEE  65D8               	cpfsgt	main@dac_v& (0+255),b
  2072  003BF0  D002               	goto	l10662
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 194:       dac_v = 0;
  2076  003BF2  0E00               	movlw	0
  2077  003BF4  6FD8               	movwf	main@dac_v& (0+255),b
  2078  003BF6                     l10662:
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;main.c: 196:      DAC1_SetOutput(++dac_v);
  2082  003BF6  2BD8               	incf	main@dac_v& (0+255),f,b
  2083  003BF8  51D8               	movf	main@dac_v& (0+255),w,b
  2084  003BFA  ECBC  F02E         	call	_DAC1_SetOutput
  2085  003BFE  D007               	goto	l10672
  2086  003C00                     l10666:
  2087  003C00  9ABA               	bcf	186,5,c	;volatile
  2088  003C02  D023               	goto	l10688
  2089  003C04                     l10668:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;main.c: 201:      dac_v = 20;
  2093  003C04  0E14               	movlw	20
  2094  003C06  6FD8               	movwf	main@dac_v& (0+255),b
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;main.c: 202:      DAC1_SetOutput(dac_v);
  2098  003C08  0E14               	movlw	20
  2099  003C0A  ECBC  F02E         	call	_DAC1_SetOutput
  2100  003C0E                     l10672:
  2101  003C0E  82BD               	bsf	189,1,c	;volatile
  2102  003C10  D7F7               	goto	l10666
  2103  003C12                     l10676:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;main.c: 208:      mode = off_mode;
  2107  003C12  0E00               	movlw	0
  2108  003C14  6FFB               	movwf	_mode& (0+255),b
  2109                           
  2110                           ;main.c: 209:      dac_v = 0;
  2111  003C16  0E00               	movlw	0
  2112  003C18  6FD8               	movwf	main@dac_v& (0+255),b
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;main.c: 210:      DAC1_SetOutput(dac_v);
  2116  003C1A  0E00               	movlw	0
  2117  003C1C  ECBC  F02E         	call	_DAC1_SetOutput
  2118  003C20  92BD               	bcf	189,1,c	;volatile
  2119  003C22  8ABA               	bsf	186,5,c	;volatile
  2120  003C24  D012               	goto	l10688
  2121  003C26                     l10686:
  2122                           
  2123                           ; BSR set to: 0
  2124  003C26  51FB               	movf	_mode& (0+255),w,b
  2125  003C28  6FD5               	movwf	??_main& (0+255),b
  2126  003C2A  6BD6               	clrf	(??_main+1)& (0+255),b
  2127                           
  2128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 1, Range of values is 0 to 0
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte            4     3 (average)
  2134                           ;	Chosen strategy is simple_byte
  2135  003C2C  51D6               	movf	(??_main+1)& (0+255),w,b
  2136  003C2E  0A00               	xorlw	0	; case 0
  2137  003C30  A4D8               	btfss	status,2,c
  2138  003C32  D7EF               	goto	l10676
  2139                           
  2140                           ; BSR set to: 0
  2141                           ; Switch size 1, requested type "simple"
  2142                           ; Number of cases is 3, Range of values is 0 to 2
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte           10     6 (average)
  2146                           ;	Chosen strategy is simple_byte
  2147  003C34  51D5               	movf	??_main& (0+255),w,b
  2148  003C36  0A00               	xorlw	0	; case 0
  2149  003C38  B4D8               	btfsc	status,2,c
  2150  003C3A  D7EB               	goto	l10676
  2151  003C3C  0A01               	xorlw	1	; case 1
  2152  003C3E  B4D8               	btfsc	status,2,c
  2153  003C40  D7D5               	goto	l10658
  2154  003C42  0A03               	xorlw	3	; case 2
  2155  003C44  B4D8               	btfsc	status,2,c
  2156  003C46  D7DE               	goto	l10668
  2157  003C48  D7E4               	goto	l10676
  2158  003C4A                     l10688:
  2159                           
  2160                           ;main.c: 220:     cli_read(&cli_ctx);
  2161  003C4A  0E40               	movlw	low _cli_ctx
  2162  003C4C  6E32               	movwf	cli_read@a_ctx^0,c
  2163  003C4E  0E02               	movlw	high _cli_ctx
  2164  003C50  6E33               	movwf	(cli_read@a_ctx+1)^0,c
  2165  003C52  EC7D  F021         	call	_cli_read	;wreg free
  2166                           
  2167                           ;main.c: 221:     disp_tick = 0;
  2168  003C56  0E00               	movlw	0
  2169  003C58  0100               	movlb	0	; () banked
  2170  003C5A  6FFD               	movwf	_disp_tick& (0+255),b	;volatile
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;main.c: 222:     if (!PORTBbits.RB0) {
  2174  003C5C  B0CB               	btfsc	203,0,c	;volatile
  2175  003C5E  D009               	goto	l10702
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;main.c: 223:      if (++mode_sw > 4) {
  2179  003C60  2BD7               	incf	main@mode_sw& (0+255),f,b
  2180  003C62  0E04               	movlw	4
  2181  003C64  65D7               	cpfsgt	main@mode_sw& (0+255),b
  2182  003C66  D708               	goto	l10616
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;main.c: 224:       mode++;
  2186  003C68  2BFB               	incf	_mode& (0+255),f,b
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;main.c: 225:       mode_sw = 0;
  2190  003C6A  0E00               	movlw	0
  2191  003C6C  6FD7               	movwf	main@mode_sw& (0+255),b
  2192                           
  2193                           ; BSR set to: 0
  2194  003C6E  84BE               	bsf	190,2,c	;volatile
  2195  003C70  D703               	goto	l10616
  2196  003C72                     l10702:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;main.c: 229:      mode_sw = 0;
  2200  003C72  0E00               	movlw	0
  2201  003C74  6FD7               	movwf	main@mode_sw& (0+255),b
  2202                           
  2203                           ; BSR set to: 0
  2204  003C76  94BE               	bcf	190,2,c	;volatile
  2205  003C78  D6FF               	goto	l10616
  2206  003C7A                     __end_of_main:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _scmd_init *****************
  2210 ;; Defined at:
  2211 ;;		line 32 in file "scdm.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 3B/3D
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 14
  2232 ;; This function calls:
  2233 ;;		_cli_init
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text1
  2240  005C60                     __ptext1:
  2241                           	callstack 0
  2242  005C60                     _scmd_init:
  2243                           	callstack 16
  2244                           
  2245                           ;scdm.c: 34:  cli_init(&cli_ctx, g_cmds);
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;incstack = 0
  2249  005C60  0E40               	movlw	low _cli_ctx
  2250  005C62  0102               	movlb	2	; () banked
  2251  005C64  6FD7               	movwf	cli_init@a_ctx& (0+255),b
  2252  005C66  0E02               	movlw	high _cli_ctx
  2253  005C68  6FD8               	movwf	(cli_init@a_ctx+1)& (0+255),b
  2254  005C6A  0EEF               	movlw	low _g_cmds
  2255  005C6C  6FD9               	movwf	cli_init@a_cmds& (0+255),b
  2256  005C6E  0E01               	movlw	high _g_cmds
  2257  005C70  6FDA               	movwf	(cli_init@a_cmds+1)& (0+255),b
  2258  005C72  EC33  F029         	call	_cli_init	;wreg free
  2259  005C76  0012               	return		;funcret
  2260  005C78                     __end_of_scmd_init:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function _cli_init *****************
  2264 ;; Defined at:
  2265 ;;		line 20 in file "scdm.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  a_ctx           2   20[BANK2 ] PTR struct _t_cli_ctx
  2268 ;;		 -> cli_ctx(131), 
  2269 ;;  a_cmds          2   22[BANK2 ] PTR struct _t_cmd
  2270 ;;		 -> g_cmds(16), 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 3F/2
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2282 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2285 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2286 ;;Total ram usage:        4 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 13
  2289 ;; This function calls:
  2290 ;;		_memset
  2291 ;;		_puts
  2292 ;;		_sprintf
  2293 ;; This function is called by:
  2294 ;;		_scmd_init
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text2
  2299  005266                     __ptext2:
  2300                           	callstack 0
  2301  005266                     _cli_init:
  2302                           	callstack 16
  2303                           
  2304                           ; BSR set to: 2
  2305                           ;scdm.c: 20: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 21: {;scdm.c:
      +                           22:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  2306                           
  2307                           ;incstack = 0
  2308  005266  C2D7  F015         	movff	cli_init@a_ctx,memset@dest
  2309  00526A  C2D8  F016         	movff	cli_init@a_ctx+1,memset@dest+1
  2310  00526E  0E00               	movlw	0
  2311  005270  6E18               	movwf	(memset@c+1)^0,c
  2312  005272  0E00               	movlw	0
  2313  005274  6E17               	movwf	memset@c^0,c
  2314  005276  0E00               	movlw	0
  2315  005278  6E1A               	movwf	(memset@n+1)^0,c
  2316  00527A  0E83               	movlw	131
  2317  00527C  6E19               	movwf	memset@n^0,c
  2318  00527E  EC28  F022         	call	_memset	;wreg free
  2319                           
  2320                           ;scdm.c: 23:  a_ctx->cmds = a_cmds;
  2321  005282  0060  FB5F  FFD9   	movff	cli_init@a_ctx,fsr2l
  2322  005288  0060  FB63  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  2323  00528E  0060  FB67  FFDE   	movff	cli_init@a_cmds,postinc2
  2324  005294  0060  FB6B  FFDD   	movff	cli_init@a_cmds+1,postdec2
  2325  00529A  0E02               	movlw	2
  2326  00529C  0102               	movlb	2	; () banked
  2327  00529E  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2328  0052A0  6FC3               	movwf	sprintf@s& (0+255),b
  2329  0052A2  0E00               	movlw	0
  2330  0052A4  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2331  0052A6  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  2332  0052A8  0E9D               	movlw	low STR_10
  2333  0052AA  6FC5               	movwf	sprintf@fmt& (0+255),b
  2334  0052AC  0EC4               	movlw	low STR_1
  2335  0052AE  6FC6               	movwf	(?_sprintf+3)& (0+255),b
  2336  0052B0  51C6               	movf	(?_sprintf+3)& (0+255),w,b
  2337  0052B2  A4D8               	btfss	status,2,c
  2338  0052B4  0E20               	movlw	high __smallconst
  2339  0052B6  6FC7               	movwf	(?_sprintf+4)& (0+255),b
  2340  0052B8  0ED0               	movlw	low STR_2
  2341  0052BA  6FC8               	movwf	(?_sprintf+5)& (0+255),b
  2342  0052BC  51C8               	movf	(?_sprintf+5)& (0+255),w,b
  2343  0052BE  A4D8               	btfss	status,2,c
  2344  0052C0  0E20               	movlw	high __smallconst
  2345  0052C2  6FC9               	movwf	(?_sprintf+6)& (0+255),b
  2346  0052C4  ECDE  F02A         	call	_sprintf	;wreg free
  2347                           
  2348                           ; BSR set to: 2
  2349                           ;scdm.c: 28:  puts(a_ctx->cmd);
  2350  0052C8  0E02               	movlw	2
  2351  0052CA  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2352  0052CC  6E29               	movwf	puts@s^0,c
  2353  0052CE  0E00               	movlw	0
  2354  0052D0  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2355  0052D2  6E2A               	movwf	(puts@s+1)^0,c
  2356  0052D4  EC96  F02C         	call	_puts	;wreg free
  2357                           
  2358                           ;scdm.c: 29:  puts(cmdm);
  2359  0052D8  0E06               	movlw	low _cmdm
  2360  0052DA  6E29               	movwf	puts@s^0,c
  2361  0052DC  5029               	movf	puts@s^0,w,c
  2362  0052DE  A4D8               	btfss	status,2,c
  2363  0052E0  0E20               	movlw	high __smallconst
  2364  0052E2  6E2A               	movwf	(puts@s+1)^0,c
  2365  0052E4  EC96  F02C         	call	_puts	;wreg free
  2366  0052E8  0012               	return		;funcret
  2367  0052EA                     __end_of_cli_init:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function _sprintf *****************
  2371 ;; Defined at:
  2372 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  s               2    0[BANK2 ] PTR unsigned char 
  2375 ;;		 -> cli_ctx(131), 
  2376 ;;  fmt             1    2[BANK2 ] PTR const unsigned char 
  2377 ;;		 -> STR_10(21), 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  f              11    9[BANK2 ] struct _IO_FILE
  2380 ;;  ap              2    7[BANK2 ] PTR void [1]
  2381 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2382 ;;  ret             2    0        int 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  2    0[BANK2 ] int 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 3F/2
  2389 ;;		On exit  : 3F/2
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2392 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2393 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2395 ;;      Totals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;Total ram usage:       20 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 12
  2399 ;; This function calls:
  2400 ;;		_vfprintf
  2401 ;; This function is called by:
  2402 ;;		_cli_init
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text3
  2407  0055BC                     __ptext3:
  2408                           	callstack 0
  2409  0055BC                     _sprintf:
  2410                           	callstack 16
  2411                           
  2412                           ; BSR set to: 2
  2413                           
  2414                           ;incstack = 0
  2415  0055BC  0EC6               	movlw	low (?_sprintf+3)
  2416  0055BE  6FCA               	movwf	sprintf@ap& (0+255),b
  2417  0055C0  0E02               	movlw	high (?_sprintf+3)
  2418  0055C2  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  2419  0055C4  C2C3  F2CC         	movff	sprintf@s,sprintf@f
  2420  0055C8  C2C4  F2CD         	movff	sprintf@s+1,sprintf@f+1
  2421                           
  2422                           ; BSR set to: 2
  2423  0055CC  0E00               	movlw	0
  2424  0055CE  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  2425  0055D0  0E00               	movlw	0
  2426  0055D2  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  2427                           
  2428                           ; BSR set to: 2
  2429  0055D4  0E00               	movlw	0
  2430  0055D6  6FD6               	movwf	(sprintf@f+10)& (0+255),b
  2431  0055D8  0E00               	movlw	0
  2432  0055DA  6FD5               	movwf	(sprintf@f+9)& (0+255),b
  2433                           
  2434                           ; BSR set to: 2
  2435  0055DC  0ECC               	movlw	low sprintf@f
  2436  0055DE  0100               	movlb	0	; () banked
  2437  0055E0  6FCE               	movwf	vfprintf@fp& (0+255),b
  2438  0055E2  0E02               	movlw	high sprintf@f
  2439  0055E4  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2440  0055E6  C2C5  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  2441  0055EA  0ECA               	movlw	low sprintf@ap
  2442  0055EC  6FD1               	movwf	vfprintf@ap& (0+255),b
  2443  0055EE  0E02               	movlw	high sprintf@ap
  2444  0055F0  6FD2               	movwf	(vfprintf@ap+1)& (0+255),b
  2445  0055F2  EC8C  F02A         	call	_vfprintf	;wreg free
  2446                           
  2447                           ; BSR set to: 0
  2448  0055F6  0102               	movlb	2	; () banked
  2449  0055F8  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  2450  0055FA  25C3               	addwf	sprintf@s& (0+255),w,b
  2451  0055FC  6ED9               	movwf	fsr2l,c
  2452  0055FE  51D0               	movf	(sprintf@f+4)& (0+255),w,b
  2453  005600  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  2454  005602  6EDA               	movwf	fsr2h,c
  2455  005604  0E00               	movlw	0
  2456  005606  6EDF               	movwf	indf2,c
  2457                           
  2458                           ; BSR set to: 2
  2459  005608  0012               	return		;funcret
  2460  00560A                     __end_of_sprintf:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _printf *****************
  2464 ;; Defined at:
  2465 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  fmt             1    0[BANK2 ] PTR const unsigned char 
  2468 ;;		 -> STR_6(74), 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  ap              2  115[BANK0 ] PTR void [1]
  2471 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2472 ;;  ret             2    0        int 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  2    0[BANK2 ] int 
  2475 ;; Registers used:
  2476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 3F/2
  2479 ;;		On exit  : 3F/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2482 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2483 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2485 ;;      Totals:         0       2       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2486 ;;Total ram usage:       19 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 12
  2489 ;; This function calls:
  2490 ;;		_vfprintf
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text4
  2497  005BA6                     __ptext4:
  2498                           	callstack 0
  2499  005BA6                     _printf:
  2500                           	callstack 18
  2501                           
  2502                           ; BSR set to: 2
  2503                           
  2504                           ; BSR set to: 2
  2505                           ;incstack = 0
  2506  005BA6  0EC4               	movlw	low (?_printf+1)
  2507  005BA8  0100               	movlb	0	; () banked
  2508  005BAA  6FD3               	movwf	printf@ap& (0+255),b
  2509  005BAC  0E02               	movlw	high (?_printf+1)
  2510  005BAE  6FD4               	movwf	(printf@ap+1)& (0+255),b
  2511                           
  2512                           ; BSR set to: 0
  2513  005BB0  0E00               	movlw	0
  2514  005BB2  6FCE               	movwf	vfprintf@fp& (0+255),b
  2515  005BB4  0E00               	movlw	0
  2516  005BB6  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2517  005BB8  C2C3  F0D0         	movff	printf@fmt,vfprintf@fmt
  2518  005BBC  0ED3               	movlw	low printf@ap
  2519  005BBE  6FD1               	movwf	vfprintf@ap& (0+255),b
  2520  005BC0  6BD2               	clrf	(vfprintf@ap+1)& (0+255),b
  2521  005BC2  EC8C  F02A         	call	_vfprintf	;wreg free
  2522                           
  2523                           ; BSR set to: 0
  2524  005BC6  0012               	return		;funcret
  2525  005BC8                     __end_of_printf:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _vfprintf *****************
  2529 ;; Defined at:
  2530 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  fp              2  110[BANK0 ] PTR struct _IO_FILE
  2533 ;;		 -> sprintf@f(11), NULL(0), 
  2534 ;;  fmt             1  112[BANK0 ] PTR const unsigned char 
  2535 ;;		 -> STR_10(21), STR_6(74), 
  2536 ;;  ap              2  113[BANK0 ] PTR PTR void 
  2537 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  cfmt            1   55[COMRAM] PTR unsigned char 
  2540 ;;		 -> STR_10(21), STR_6(74), 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  2  110[BANK0 ] int 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 3F/0
  2547 ;;		On exit  : 3F/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2550 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2553 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2554 ;;Total ram usage:        6 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 11
  2557 ;; This function calls:
  2558 ;;		_vfpfcnvrt
  2559 ;; This function is called by:
  2560 ;;		_sprintf
  2561 ;;		_printf
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text5
  2566  005518                     __ptext5:
  2567                           	callstack 0
  2568  005518                     _vfprintf:
  2569                           	callstack 16
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;incstack = 0
  2576  005518  C0D0  F038         	movff	vfprintf@fmt,vfprintf@cfmt
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2580  00551C  0E00               	movlw	0
  2581  00551E  6FF6               	movwf	(_nout+1)& (0+255),b
  2582  005520  0E00               	movlw	0
  2583  005522  6FF5               	movwf	_nout& (0+255),b
  2584                           
  2585                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2586  005524  D011               	goto	l10192
  2587  005526                     l10190:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2591  005526  C0CE  F0AF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2592  00552A  C0CF  F0B0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2593  00552E  0E38               	movlw	low vfprintf@cfmt
  2594  005530  6FB1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2595  005532  C0D1  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2596  005536  C0D2  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2597  00553A  EC63  F015         	call	_vfpfcnvrt	;wreg free
  2598  00553E  0100               	movlb	0	; () banked
  2599  005540  51AF               	movf	?_vfpfcnvrt& (0+255),w,b
  2600  005542  27F5               	addwf	_nout& (0+255),f,b
  2601  005544  51B0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2602  005546  23F6               	addwfc	(_nout+1)& (0+255),f,b
  2603  005548                     l10192:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2607  005548  0060  F0E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  2608  00554E                     	if	1	;There is more than 1 active tblptr byte
  2609  00554E  0E20               	movlw	high __smallconst
  2610  005550  6EF7               	movwf	tblptrh,c
  2611  005552                     	endif
  2612  005552                     	if	0	;tblptru may be non-zero
  2613  005552                     	endif
  2614  005552                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2615  005552  0E00               	movlw	low (__smallconst shr (0+16))
  2616  005554  6EF8               	movwf	tblptru,c
  2617  005556                     	endif
  2618  005556  0008               	tblrd		*
  2619  005558  50F5               	movf	tablat,w,c
  2620  00555A  0900               	iorlw	0
  2621  00555C  A4D8               	btfss	status,2,c
  2622  00555E  D7E3               	goto	l10190
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2626  005560  C0F5  F0CE         	movff	_nout,?_vfprintf
  2627  005564  C0F6  F0CF         	movff	_nout+1,?_vfprintf+1
  2628                           
  2629                           ; BSR set to: 0
  2630  005568  0012               	return		;funcret
  2631  00556A                     __end_of_vfprintf:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function _vfpfcnvrt *****************
  2635 ;; Defined at:
  2636 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  2639 ;;		 -> sprintf@f(11), NULL(0), 
  2640 ;;  fmt             1   81[BANK0 ] PTR PTR unsigned char 
  2641 ;;		 -> vfprintf@cfmt(1), 
  2642 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2643 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  llu             8   88[BANK0 ] unsigned long long 
  2646 ;;  ll              8    0        long long 
  2647 ;;  f               4  103[BANK0 ] long long 
  2648 ;;  ct              3  107[BANK0 ] unsigned char [3]
  2649 ;;  vp              3    0        PTR void 
  2650 ;;  done            2   98[BANK0 ] int 
  2651 ;;  cp              2   96[BANK0 ] PTR unsigned char 
  2652 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  2653 ;;  i               2    0        int 
  2654 ;;  c               1  102[BANK0 ] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  2   79[BANK0 ] int 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 3F/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2664 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2665 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2666 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2667 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2668 ;;Total ram usage:       31 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 10
  2671 ;; This function calls:
  2672 ;;		_atoi
  2673 ;;		_efgtoa
  2674 ;;		_fputc
  2675 ;;		_isdigit
  2676 ;;		_isupper
  2677 ;;		_stoa
  2678 ;;		_strncmp
  2679 ;;		_tolower
  2680 ;;		_utoa
  2681 ;; This function is called by:
  2682 ;;		_vfprintf
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text6
  2687  002AC6                     __ptext6:
  2688                           	callstack 0
  2689  002AC6                     _vfpfcnvrt:
  2690                           	callstack 16
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;incstack = 0
  2697  002AC6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2698  002AC8  6ED9               	movwf	fsr2l,c
  2699  002ACA  6ADA               	clrf	fsr2h,c
  2700  002ACC  006F FF7F FFF6     	movff	indf2,tblptrl
  2701  002AD2                     	if	1	;There is more than 1 active tblptr byte
  2702  002AD2  0E20               	movlw	high __smallconst
  2703  002AD4  6EF7               	movwf	tblptrh,c
  2704  002AD6                     	endif
  2705  002AD6                     	if	0	;tblptru may be non-zero
  2706  002AD6                     	endif
  2707  002AD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2708  002AD6  0E00               	movlw	low (__smallconst shr (0+16))
  2709  002AD8  6EF8               	movwf	tblptru,c
  2710  002ADA                     	endif
  2711  002ADA  0008               	tblrd		*
  2712  002ADC  50F5               	movf	tablat,w,c
  2713  002ADE  0A25               	xorlw	37
  2714  002AE0  A4D8               	btfss	status,2,c
  2715  002AE2  D313               	goto	l10164
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2719  002AE4  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2720  002AE6  6ED9               	movwf	fsr2l,c
  2721  002AE8  6ADA               	clrf	fsr2h,c
  2722  002AEA  2ADF               	incf	indf2,f,c
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2726  002AEC  0E00               	movlw	0
  2727  002AEE  6FF8               	movwf	(_width+1)& (0+255),b
  2728  002AF0  0E00               	movlw	0
  2729  002AF2  6FF7               	movwf	_width& (0+255),b
  2730  002AF4  C0F7  F03D         	movff	_width,_flags
  2731  002AF8  C0F8  F03E         	movff	_width+1,_flags+1
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2735  002AFC  69F9               	setf	_prec& (0+255),b
  2736  002AFE  69FA               	setf	(_prec+1)& (0+255),b
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  2740  002B00  0E00               	movlw	0
  2741  002B02  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2742  002B04  0E00               	movlw	0
  2743  002B06  D011               	goto	L1
  2744  002B08                     l10018:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  2748  002B08  803D               	bsf	_flags^0,0,c
  2749  002B0A                     l10020:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  2753  002B0A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2754  002B0C  6ED9               	movwf	fsr2l,c
  2755  002B0E  6ADA               	clrf	fsr2h,c
  2756  002B10  2ADF               	incf	indf2,f,c
  2757                           
  2758                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  2759  002B12  D030               	goto	l10044
  2760  002B14                     l10022:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  2764  002B14  823D               	bsf	_flags^0,1,c
  2765  002B16  D7F9               	goto	l10020
  2766  002B18                     l10026:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  2770  002B18  843D               	bsf	_flags^0,2,c
  2771  002B1A  D7F7               	goto	l10020
  2772  002B1C                     l10030:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  2776  002B1C  863D               	bsf	_flags^0,3,c
  2777  002B1E  D7F5               	goto	l10020
  2778  002B20                     l10034:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  2782  002B20  883D               	bsf	_flags^0,4,c
  2783  002B22  D7F3               	goto	l10020
  2784  002B24                     l10038:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  2788  002B24  0E00               	movlw	0
  2789  002B26  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2790  002B28  0E01               	movlw	1
  2791  002B2A                     L1:
  2792  002B2A  6FC2               	movwf	vfpfcnvrt@done& (0+255),b
  2793                           
  2794                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  2795  002B2C  D023               	goto	l10044
  2796  002B2E                     l10042:
  2797                           
  2798                           ; BSR set to: 0
  2799  002B2E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2800  002B30  6ED9               	movwf	fsr2l,c
  2801  002B32  6ADA               	clrf	fsr2h,c
  2802  002B34  006F FF7F FFF6     	movff	indf2,tblptrl
  2803  002B3A                     	if	1	;There is more than 1 active tblptr byte
  2804  002B3A  0E20               	movlw	high __smallconst
  2805  002B3C  6EF7               	movwf	tblptrh,c
  2806  002B3E                     	endif
  2807  002B3E                     	if	0	;tblptru may be non-zero
  2808  002B3E                     	endif
  2809  002B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2810  002B3E  0E00               	movlw	low (__smallconst shr (0+16))
  2811  002B40  6EF8               	movwf	tblptru,c
  2812  002B42                     	endif
  2813  002B42  0008               	tblrd		*
  2814  002B44  50F5               	movf	tablat,w,c
  2815  002B46  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2816  002B48  6BB5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2817                           
  2818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2819                           ; Switch size 1, requested type "simple"
  2820                           ; Number of cases is 1, Range of values is 0 to 0
  2821                           ; switch strategies available:
  2822                           ; Name         Instructions Cycles
  2823                           ; simple_byte            4     3 (average)
  2824                           ;	Chosen strategy is simple_byte
  2825  002B4A  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2826  002B4C  0A00               	xorlw	0	; case 0
  2827  002B4E  A4D8               	btfss	status,2,c
  2828  002B50  D7E9               	goto	l10038
  2829                           
  2830                           ; BSR set to: 0
  2831                           ; Switch size 1, requested type "simple"
  2832                           ; Number of cases is 5, Range of values is 32 to 48
  2833                           ; switch strategies available:
  2834                           ; Name         Instructions Cycles
  2835                           ; simple_byte           16     9 (average)
  2836                           ;	Chosen strategy is simple_byte
  2837  002B52  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2838  002B54  0A20               	xorlw	32	; case 32
  2839  002B56  B4D8               	btfsc	status,2,c
  2840  002B58  D7E1               	goto	l10030
  2841  002B5A  0A03               	xorlw	3	; case 35
  2842  002B5C  B4D8               	btfsc	status,2,c
  2843  002B5E  D7E0               	goto	l10034
  2844  002B60  0A08               	xorlw	8	; case 43
  2845  002B62  B4D8               	btfsc	status,2,c
  2846  002B64  D7D9               	goto	l10026
  2847  002B66  0A06               	xorlw	6	; case 45
  2848  002B68  B4D8               	btfsc	status,2,c
  2849  002B6A  D7CE               	goto	l10018
  2850  002B6C  0A1D               	xorlw	29	; case 48
  2851  002B6E  B4D8               	btfsc	status,2,c
  2852  002B70  D7D1               	goto	l10022
  2853  002B72  D7D8               	goto	l10038
  2854  002B74                     l10044:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2858  002B74  51C2               	movf	vfpfcnvrt@done& (0+255),w,b
  2859  002B76  11C3               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2860  002B78  B4D8               	btfsc	status,2,c
  2861  002B7A  D7D9               	goto	l10042
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  2865  002B7C  B03D               	btfsc	_flags^0,0,c
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  2869  002B7E  923D               	bcf	_flags^0,1,c
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  2873  002B80  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2874  002B82  6ED9               	movwf	fsr2l,c
  2875  002B84  6ADA               	clrf	fsr2h,c
  2876  002B86  006F FF7F FFF6     	movff	indf2,tblptrl
  2877  002B8C                     	if	1	;There is more than 1 active tblptr byte
  2878  002B8C  0E20               	movlw	high __smallconst
  2879  002B8E  6EF7               	movwf	tblptrh,c
  2880  002B90                     	endif
  2881  002B90                     	if	0	;tblptru may be non-zero
  2882  002B90                     	endif
  2883  002B90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2884  002B90  0E00               	movlw	low (__smallconst shr (0+16))
  2885  002B92  6EF8               	movwf	tblptru,c
  2886  002B94                     	endif
  2887  002B94  0008               	tblrd		*
  2888  002B96  50F5               	movf	tablat,w,c
  2889  002B98  0A2A               	xorlw	42
  2890  002B9A  A4D8               	btfss	status,2,c
  2891  002B9C  D028               	goto	l10056
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  2895  002B9E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2896  002BA0  6ED9               	movwf	fsr2l,c
  2897  002BA2  6ADA               	clrf	fsr2h,c
  2898  002BA4  2ADF               	incf	indf2,f,c
  2899                           
  2900                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2901  002BA6  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2902  002BAC  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2903  002BB2  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  2904  002BB8  0E02               	movlw	2
  2905  002BBA  26DE               	addwf	postinc2,f,c
  2906  002BBC  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  2907  002BC2  0E00               	movlw	0
  2908  002BC4  22DD               	addwfc	postdec2,f,c
  2909  002BC6  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2910  002BCC  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2911  002BD2  006F FF78  F0F7    	movff	postinc2,_width
  2912  002BD8  006F FF74  F0F8    	movff	postdec2,_width+1
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  2916  002BDE  AFF8               	btfss	(_width+1)& (0+255),7,b
  2917  002BE0  D033               	goto	u11880
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  2921  002BE2  803D               	bsf	_flags^0,0,c
  2922                           
  2923                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  2924  002BE4  6DF7               	negf	_width& (0+255),b
  2925  002BE6  1FF8               	comf	(_width+1)& (0+255),f,b
  2926  002BE8  B0D8               	btfsc	status,0,c
  2927  002BEA  2BF8               	incf	(_width+1)& (0+255),f,b
  2928  002BEC  D02D               	goto	u11880
  2929  002BEE                     l10056:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  2933  002BEE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2934  002BF0  6ED9               	movwf	fsr2l,c
  2935  002BF2  6ADA               	clrf	fsr2h,c
  2936  002BF4  50DF               	movf	indf2,w,c
  2937  002BF6  6E1C               	movwf	atoi@s^0,c
  2938  002BF8  EC12  F024         	call	_atoi	;wreg free
  2939  002BFC  C01C  F0F7         	movff	?_atoi,_width
  2940  002C00  C01D  F0F8         	movff	?_atoi+1,_width+1
  2941                           
  2942                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2943  002C04  D004               	goto	l10062
  2944  002C06                     l10058:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  2948  002C06  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2949  002C08  6ED9               	movwf	fsr2l,c
  2950  002C0A  6ADA               	clrf	fsr2h,c
  2951  002C0C  2ADF               	incf	indf2,f,c
  2952  002C0E                     l10062:
  2953  002C0E  0ED0               	movlw	208
  2954  002C10  0100               	movlb	0	; () banked
  2955  002C12  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2956  002C14  0EFF               	movlw	255
  2957  002C16  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2958  002C18  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2959  002C1A  6ED9               	movwf	fsr2l,c
  2960  002C1C  6ADA               	clrf	fsr2h,c
  2961  002C1E  006F FF7F FFF6     	movff	indf2,tblptrl
  2962  002C24                     	if	1	;There is more than 1 active tblptr byte
  2963  002C24  0E20               	movlw	high __smallconst
  2964  002C26  6EF7               	movwf	tblptrh,c
  2965  002C28                     	endif
  2966  002C28                     	if	0	;tblptru may be non-zero
  2967  002C28                     	endif
  2968  002C28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2969  002C28  0E00               	movlw	low (__smallconst shr (0+16))
  2970  002C2A  6EF8               	movwf	tblptru,c
  2971  002C2C                     	endif
  2972  002C2C  0008               	tblrd		*
  2973  002C2E  50F5               	movf	tablat,w,c
  2974  002C30  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2975  002C32  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2976  002C34  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2977  002C36  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2978  002C38  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2979  002C3A  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2980  002C3C  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2981  002C3E  E104               	bnz	u11880
  2982  002C40  0E0A               	movlw	10
  2983  002C42  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2984  002C44  A0D8               	btfss	status,0,c
  2985  002C46  D7DF               	goto	l10058
  2986  002C48                     u11880:
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  2990  002C48  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2991  002C4A  6ED9               	movwf	fsr2l,c
  2992  002C4C  6ADA               	clrf	fsr2h,c
  2993  002C4E  006F FF7F FFF6     	movff	indf2,tblptrl
  2994  002C54                     	if	1	;There is more than 1 active tblptr byte
  2995  002C54  0E20               	movlw	high __smallconst
  2996  002C56  6EF7               	movwf	tblptrh,c
  2997  002C58                     	endif
  2998  002C58                     	if	0	;tblptru may be non-zero
  2999  002C58                     	endif
  3000  002C58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3001  002C58  0E00               	movlw	low (__smallconst shr (0+16))
  3002  002C5A  6EF8               	movwf	tblptru,c
  3003  002C5C                     	endif
  3004  002C5C  0008               	tblrd		*
  3005  002C5E  50F5               	movf	tablat,w,c
  3006  002C60  0A2E               	xorlw	46
  3007  002C62  A4D8               	btfss	status,2,c
  3008  002C64  D065               	goto	u11910
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  3012  002C66  0E00               	movlw	0
  3013  002C68  6FFA               	movwf	(_prec+1)& (0+255),b
  3014  002C6A  0E00               	movlw	0
  3015  002C6C  6FF9               	movwf	_prec& (0+255),b
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  3019  002C6E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3020  002C70  6ED9               	movwf	fsr2l,c
  3021  002C72  6ADA               	clrf	fsr2h,c
  3022  002C74  2ADF               	incf	indf2,f,c
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  3026  002C76  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3027  002C78  6ED9               	movwf	fsr2l,c
  3028  002C7A  6ADA               	clrf	fsr2h,c
  3029  002C7C  006F FF7F FFF6     	movff	indf2,tblptrl
  3030  002C82                     	if	1	;There is more than 1 active tblptr byte
  3031  002C82  0E20               	movlw	high __smallconst
  3032  002C84  6EF7               	movwf	tblptrh,c
  3033  002C86                     	endif
  3034  002C86                     	if	0	;tblptru may be non-zero
  3035  002C86                     	endif
  3036  002C86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3037  002C86  0E00               	movlw	low (__smallconst shr (0+16))
  3038  002C88  6EF8               	movwf	tblptru,c
  3039  002C8A                     	endif
  3040  002C8A  0008               	tblrd		*
  3041  002C8C  50F5               	movf	tablat,w,c
  3042  002C8E  0A2A               	xorlw	42
  3043  002C90  A4D8               	btfss	status,2,c
  3044  002C92  D021               	goto	l10074
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  3048  002C94  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3049  002C96  6ED9               	movwf	fsr2l,c
  3050  002C98  6ADA               	clrf	fsr2h,c
  3051  002C9A  2ADF               	incf	indf2,f,c
  3052                           
  3053                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  3054  002C9C  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3055  002CA2  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3056  002CA8  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3057  002CAE  0E02               	movlw	2
  3058  002CB0  26DE               	addwf	postinc2,f,c
  3059  002CB2  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3060  002CB8  0E00               	movlw	0
  3061  002CBA  22DD               	addwfc	postdec2,f,c
  3062  002CBC  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3063  002CC2  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3064  002CC8  006F FF78  F0F9    	movff	postinc2,_prec
  3065  002CCE  006F FF74  F0FA    	movff	postdec2,_prec+1
  3066                           
  3067                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  3068  002CD4  D02D               	goto	u11910
  3069  002CD6                     l10074:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  3073  002CD6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3074  002CD8  6ED9               	movwf	fsr2l,c
  3075  002CDA  6ADA               	clrf	fsr2h,c
  3076  002CDC  50DF               	movf	indf2,w,c
  3077  002CDE  6E1C               	movwf	atoi@s^0,c
  3078  002CE0  EC12  F024         	call	_atoi	;wreg free
  3079  002CE4  C01C  F0F9         	movff	?_atoi,_prec
  3080  002CE8  C01D  F0FA         	movff	?_atoi+1,_prec+1
  3081                           
  3082                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3083  002CEC  D004               	goto	l10080
  3084  002CEE                     l10076:
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  3088  002CEE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3089  002CF0  6ED9               	movwf	fsr2l,c
  3090  002CF2  6ADA               	clrf	fsr2h,c
  3091  002CF4  2ADF               	incf	indf2,f,c
  3092  002CF6                     l10080:
  3093  002CF6  0ED0               	movlw	208
  3094  002CF8  0100               	movlb	0	; () banked
  3095  002CFA  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3096  002CFC  0EFF               	movlw	255
  3097  002CFE  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3098  002D00  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3099  002D02  6ED9               	movwf	fsr2l,c
  3100  002D04  6ADA               	clrf	fsr2h,c
  3101  002D06  006F FF7F FFF6     	movff	indf2,tblptrl
  3102  002D0C                     	if	1	;There is more than 1 active tblptr byte
  3103  002D0C  0E20               	movlw	high __smallconst
  3104  002D0E  6EF7               	movwf	tblptrh,c
  3105  002D10                     	endif
  3106  002D10                     	if	0	;tblptru may be non-zero
  3107  002D10                     	endif
  3108  002D10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3109  002D10  0E00               	movlw	low (__smallconst shr (0+16))
  3110  002D12  6EF8               	movwf	tblptru,c
  3111  002D14                     	endif
  3112  002D14  0008               	tblrd		*
  3113  002D16  50F5               	movf	tablat,w,c
  3114  002D18  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3115  002D1A  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3116  002D1C  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3117  002D1E  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3118  002D20  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3119  002D22  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3120  002D24  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3121  002D26  E104               	bnz	u11910
  3122  002D28  0E0A               	movlw	10
  3123  002D2A  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3124  002D2C  A0D8               	btfss	status,0,c
  3125  002D2E  D7DF               	goto	l10076
  3126  002D30                     u11910:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  3130  002D30  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3131  002D32  6ED9               	movwf	fsr2l,c
  3132  002D34  6ADA               	clrf	fsr2h,c
  3133  002D36  006F FF7F FFF6     	movff	indf2,tblptrl
  3134  002D3C                     	if	1	;There is more than 1 active tblptr byte
  3135  002D3C  0E20               	movlw	high __smallconst
  3136  002D3E  6EF7               	movwf	tblptrh,c
  3137  002D40                     	endif
  3138  002D40                     	if	0	;tblptru may be non-zero
  3139  002D40                     	endif
  3140  002D40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3141  002D40  0E00               	movlw	low (__smallconst shr (0+16))
  3142  002D42  6EF8               	movwf	tblptru,c
  3143  002D44                     	endif
  3144  002D44  0008               	tblrd		*
  3145  002D46  50F5               	movf	tablat,w,c
  3146  002D48  6E1B               	movwf	tolower@c^0,c
  3147  002D4A  6A1C               	clrf	(tolower@c+1)^0,c
  3148  002D4C  EC79  F02C         	call	_tolower	;wreg free
  3149  002D50  501B               	movf	?_tolower^0,w,c
  3150  002D52  6FCB               	movwf	vfpfcnvrt@ct& (0+255),b
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  3154  002D54  51CB               	movf	vfpfcnvrt@ct& (0+255),w,b
  3155  002D56  B4D8               	btfsc	status,2,c
  3156  002D58  D02F               	goto	l10092
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  3160  002D5A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3161  002D5C  6ED9               	movwf	fsr2l,c
  3162  002D5E  6ADA               	clrf	fsr2h,c
  3163  002D60  50DF               	movf	indf2,w,c
  3164  002D62  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3165  002D64  0E01               	movlw	1
  3166  002D66  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3167  002D68  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3168  002D6E                     	if	1	;There is more than 1 active tblptr byte
  3169  002D6E  0E20               	movlw	high __smallconst
  3170  002D70  6EF7               	movwf	tblptrh,c
  3171  002D72                     	endif
  3172  002D72                     	if	0	;tblptru may be non-zero
  3173  002D72                     	endif
  3174  002D72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3175  002D72  0E00               	movlw	low (__smallconst shr (0+16))
  3176  002D74  6EF8               	movwf	tblptru,c
  3177  002D76                     	endif
  3178  002D76  0008               	tblrd		*
  3179  002D78  50F5               	movf	tablat,w,c
  3180  002D7A  6E1B               	movwf	tolower@c^0,c
  3181  002D7C  6A1C               	clrf	(tolower@c+1)^0,c
  3182  002D7E  EC79  F02C         	call	_tolower	;wreg free
  3183  002D82  501B               	movf	?_tolower^0,w,c
  3184  002D84  6FCC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  3188  002D86  51CC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3189  002D88  B4D8               	btfsc	status,2,c
  3190  002D8A  D016               	goto	l10092
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  3194  002D8C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3195  002D8E  6ED9               	movwf	fsr2l,c
  3196  002D90  6ADA               	clrf	fsr2h,c
  3197  002D92  50DF               	movf	indf2,w,c
  3198  002D94  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3199  002D96  0E02               	movlw	2
  3200  002D98  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3201  002D9A  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3202  002DA0                     	if	1	;There is more than 1 active tblptr byte
  3203  002DA0  0E20               	movlw	high __smallconst
  3204  002DA2  6EF7               	movwf	tblptrh,c
  3205  002DA4                     	endif
  3206  002DA4                     	if	0	;tblptru may be non-zero
  3207  002DA4                     	endif
  3208  002DA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3209  002DA4  0E00               	movlw	low (__smallconst shr (0+16))
  3210  002DA6  6EF8               	movwf	tblptru,c
  3211  002DA8                     	endif
  3212  002DA8  0008               	tblrd		*
  3213  002DAA  50F5               	movf	tablat,w,c
  3214  002DAC  6E1B               	movwf	tolower@c^0,c
  3215  002DAE  6A1C               	clrf	(tolower@c+1)^0,c
  3216  002DB0  EC79  F02C         	call	_tolower	;wreg free
  3217  002DB4  501B               	movf	?_tolower^0,w,c
  3218  002DB6  6FCD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3219  002DB8                     l10092:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  3223  002DB8  0E66               	movlw	102
  3224  002DBA  19CB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3225  002DBC  A4D8               	btfss	status,2,c
  3226  002DBE  D049               	goto	l10104
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  3230  002DC0  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3231  002DC2  6ED9               	movwf	fsr2l,c
  3232  002DC4  6ADA               	clrf	fsr2h,c
  3233  002DC6  006F FF7F FFF6     	movff	indf2,tblptrl
  3234  002DCC                     	if	1	;There is more than 1 active tblptr byte
  3235  002DCC  0E20               	movlw	high __smallconst
  3236  002DCE  6EF7               	movwf	tblptrh,c
  3237  002DD0                     	endif
  3238  002DD0                     	if	0	;tblptru may be non-zero
  3239  002DD0                     	endif
  3240  002DD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3241  002DD0  0E00               	movlw	low (__smallconst shr (0+16))
  3242  002DD2  6EF8               	movwf	tblptru,c
  3243  002DD4                     	endif
  3244  002DD4  0008               	tblrd		*
  3245  002DD6  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  3249  002DDC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3250  002DDE  6ED9               	movwf	fsr2l,c
  3251  002DE0  6ADA               	clrf	fsr2h,c
  3252  002DE2  2ADF               	incf	indf2,f,c
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  3256  002DE4  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3257  002DEA  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3258  002DF0  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3259  002DF6  0E04               	movlw	4
  3260  002DF8  26DE               	addwf	postinc2,f,c
  3261  002DFA  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3262  002E00  0E00               	movlw	0
  3263  002E02  22DD               	addwfc	postdec2,f,c
  3264  002E04  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3265  002E0A  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3266  002E10  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3267  002E16  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3268  002E1C  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3269  002E22  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3270  002E28                     l10100:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  3274  002E28  C0AF  F071         	movff	vfpfcnvrt@fp,efgtoa@fp
  3275  002E2C  C0B0  F072         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3276  002E30  C0C7  F073         	movff	vfpfcnvrt@f,efgtoa@f
  3277  002E34  C0C8  F074         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3278  002E38  C0C9  F075         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3279  002E3C  C0CA  F076         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3280  002E40  C0C6  F077         	movff	vfpfcnvrt@c,efgtoa@c
  3281  002E44  EC7D  F010         	call	_efgtoa	;wreg free
  3282  002E48  C071  F0AF         	movff	?_efgtoa,?_vfpfcnvrt
  3283  002E4C  C072  F0B0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3284  002E50  0012               	return	
  3285  002E52                     l10104:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3289  002E52  0ECB               	movlw	low vfpfcnvrt@ct
  3290  002E54  6E19               	movwf	strncmp@_l^0,c
  3291  002E56  6A1A               	clrf	(strncmp@_l+1)^0,c
  3292  002E58  0EED               	movlw	low STR_20
  3293  002E5A  6E1B               	movwf	strncmp@_r^0,c
  3294  002E5C  501B               	movf	strncmp@_r^0,w,c
  3295  002E5E  A4D8               	btfss	status,2,c
  3296  002E60  0E20               	movlw	high __smallconst
  3297  002E62  6E1C               	movwf	(strncmp@_r+1)^0,c
  3298  002E64  0E00               	movlw	0
  3299  002E66  6E1E               	movwf	(strncmp@n+1)^0,c
  3300  002E68  0E02               	movlw	2
  3301  002E6A  6E1D               	movwf	strncmp@n^0,c
  3302  002E6C  ECCC  F020         	call	_strncmp	;wreg free
  3303  002E70  5019               	movf	?_strncmp^0,w,c
  3304  002E72  101A               	iorwf	(?_strncmp+1)^0,w,c
  3305  002E74  A4D8               	btfss	status,2,c
  3306  002E76  D055               	goto	l10122
  3307                           
  3308                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  3309  002E78  0100               	movlb	0	; () banked
  3310  002E7A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3311  002E7C  6ED9               	movwf	fsr2l,c
  3312  002E7E  6ADA               	clrf	fsr2h,c
  3313  002E80  50DF               	movf	indf2,w,c
  3314  002E82  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3315  002E84  0E01               	movlw	1
  3316  002E86  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3317  002E88  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3318  002E8E                     	if	1	;There is more than 1 active tblptr byte
  3319  002E8E  0E20               	movlw	high __smallconst
  3320  002E90  6EF7               	movwf	tblptrh,c
  3321  002E92                     	endif
  3322  002E92                     	if	0	;tblptru may be non-zero
  3323  002E92                     	endif
  3324  002E92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3325  002E92  0E00               	movlw	low (__smallconst shr (0+16))
  3326  002E94  6EF8               	movwf	tblptru,c
  3327  002E96                     	endif
  3328  002E96  0008               	tblrd		*
  3329  002E98  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3330                           
  3331                           ; BSR set to: 0
  3332                           
  3333                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3334  002E9E  0EBF               	movlw	191
  3335  002EA0  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3336  002EA2  0EFF               	movlw	255
  3337  002EA4  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3338  002EA6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3339  002EA8  6ED9               	movwf	fsr2l,c
  3340  002EAA  6ADA               	clrf	fsr2h,c
  3341  002EAC  006F FF7F FFF6     	movff	indf2,tblptrl
  3342  002EB2                     	if	1	;There is more than 1 active tblptr byte
  3343  002EB2  0E20               	movlw	high __smallconst
  3344  002EB4  6EF7               	movwf	tblptrh,c
  3345  002EB6                     	endif
  3346  002EB6                     	if	0	;tblptru may be non-zero
  3347  002EB6                     	endif
  3348  002EB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3349  002EB6  0E00               	movlw	low (__smallconst shr (0+16))
  3350  002EB8  6EF8               	movwf	tblptru,c
  3351  002EBA                     	endif
  3352  002EBA  0008               	tblrd		*
  3353  002EBC  50F5               	movf	tablat,w,c
  3354  002EBE  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3355  002EC0  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3356  002EC2  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3357  002EC4  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3358  002EC6  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3359  002EC8  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3360  002ECA  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3361  002ECC  E102               	bnz	l10114
  3362  002ECE  0E1A               	movlw	26
  3363  002ED0  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3364  002ED2                     l10114:
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3368  002ED2  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3369  002ED8  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3370  002EDE  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3371  002EE4  0E04               	movlw	4
  3372  002EE6  26DE               	addwf	postinc2,f,c
  3373  002EE8  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3374  002EEE  0E00               	movlw	0
  3375  002EF0  22DD               	addwfc	postdec2,f,c
  3376  002EF2  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3377  002EF8  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3378  002EFE  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3379  002F04  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3380  002F0A  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3381  002F10  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  3385  002F16  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3386  002F18  6ED9               	movwf	fsr2l,c
  3387  002F1A  6ADA               	clrf	fsr2h,c
  3388  002F1C  0E02               	movlw	2
  3389  002F1E  26DF               	addwf	indf2,f,c
  3390  002F20  D783               	goto	l10100
  3391  002F22                     l10122:
  3392                           
  3393                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  3394  002F22  0100               	movlb	0	; () banked
  3395  002F24  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3396  002F26  6ED9               	movwf	fsr2l,c
  3397  002F28  6ADA               	clrf	fsr2h,c
  3398  002F2A  006F FF7F FFF6     	movff	indf2,tblptrl
  3399  002F30                     	if	1	;There is more than 1 active tblptr byte
  3400  002F30  0E20               	movlw	high __smallconst
  3401  002F32  6EF7               	movwf	tblptrh,c
  3402  002F34                     	endif
  3403  002F34                     	if	0	;tblptru may be non-zero
  3404  002F34                     	endif
  3405  002F34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3406  002F34  0E00               	movlw	low (__smallconst shr (0+16))
  3407  002F36  6EF8               	movwf	tblptru,c
  3408  002F38                     	endif
  3409  002F38  0008               	tblrd		*
  3410  002F3A  50F5               	movf	tablat,w,c
  3411  002F3C  0A73               	xorlw	115
  3412  002F3E  B4D8               	btfsc	status,2,c
  3413  002F40  D01B               	goto	u11980
  3414                           
  3415                           ; BSR set to: 0
  3416  002F42  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3417  002F44  6ED9               	movwf	fsr2l,c
  3418  002F46  6ADA               	clrf	fsr2h,c
  3419  002F48  50DF               	movf	indf2,w,c
  3420  002F4A  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3421  002F4C  C0B4  F019         	movff	??_vfpfcnvrt,strncmp@_l
  3422  002F50  5019               	movf	strncmp@_l^0,w,c
  3423  002F52  A4D8               	btfss	status,2,c
  3424  002F54  0E20               	movlw	high __smallconst
  3425  002F56  6E1A               	movwf	(strncmp@_l+1)^0,c
  3426  002F58  0EE9               	movlw	low STR_25
  3427  002F5A  6E1B               	movwf	strncmp@_r^0,c
  3428  002F5C  501B               	movf	strncmp@_r^0,w,c
  3429  002F5E  A4D8               	btfss	status,2,c
  3430  002F60  0E20               	movlw	high __smallconst
  3431  002F62  6E1C               	movwf	(strncmp@_r+1)^0,c
  3432  002F64  0E00               	movlw	0
  3433  002F66  6E1E               	movwf	(strncmp@n+1)^0,c
  3434  002F68  0E03               	movlw	3
  3435  002F6A  6E1D               	movwf	strncmp@n^0,c
  3436  002F6C  ECCC  F020         	call	_strncmp	;wreg free
  3437  002F70  5019               	movf	?_strncmp^0,w,c
  3438  002F72  101A               	iorwf	(?_strncmp+1)^0,w,c
  3439  002F74  A4D8               	btfss	status,2,c
  3440  002F76  D048               	goto	l10140
  3441  002F78                     u11980:
  3442                           
  3443                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  3444  002F78  0100               	movlb	0	; () banked
  3445  002F7A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3446  002F7C  6ED9               	movwf	fsr2l,c
  3447  002F7E  6ADA               	clrf	fsr2h,c
  3448  002F80  006F FF7F FFF6     	movff	indf2,tblptrl
  3449  002F86                     	if	1	;There is more than 1 active tblptr byte
  3450  002F86  0E20               	movlw	high __smallconst
  3451  002F88  6EF7               	movwf	tblptrh,c
  3452  002F8A                     	endif
  3453  002F8A                     	if	0	;tblptru may be non-zero
  3454  002F8A                     	endif
  3455  002F8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3456  002F8A  0E00               	movlw	low (__smallconst shr (0+16))
  3457  002F8C  6EF8               	movwf	tblptru,c
  3458  002F8E                     	endif
  3459  002F8E  0008               	tblrd		*
  3460  002F90  50F5               	movf	tablat,w,c
  3461  002F92  0A73               	xorlw	115
  3462  002F94  B4D8               	btfsc	status,2,c
  3463  002F96  D004               	goto	l10130
  3464                           
  3465                           ; BSR set to: 0
  3466  002F98  0E00               	movlw	0
  3467  002F9A  6FC5               	movwf	(_vfpfcnvrt$2770+1)& (0+255),b
  3468  002F9C  0E03               	movlw	3
  3469  002F9E  D003               	goto	L2
  3470  002FA0                     l10130:
  3471                           
  3472                           ; BSR set to: 0
  3473  002FA0  0E00               	movlw	0
  3474  002FA2  6FC5               	movwf	(_vfpfcnvrt$2770+1)& (0+255),b
  3475  002FA4  0E01               	movlw	1
  3476  002FA6                     L2:
  3477  002FA6  6FC4               	movwf	_vfpfcnvrt$2770& (0+255),b
  3478                           
  3479                           ; BSR set to: 0
  3480  002FA8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3481  002FAA  6ED9               	movwf	fsr2l,c
  3482  002FAC  6ADA               	clrf	fsr2h,c
  3483  002FAE  51C4               	movf	_vfpfcnvrt$2770& (0+255),w,b
  3484  002FB0  26DF               	addwf	indf2,f,c
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3488  002FB2  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3489  002FB8  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3490  002FBE  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3491  002FC4  0E02               	movlw	2
  3492  002FC6  26DE               	addwf	postinc2,f,c
  3493  002FC8  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3494  002FCE  0E00               	movlw	0
  3495  002FD0  22DD               	addwfc	postdec2,f,c
  3496  002FD2  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3497  002FD8  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3498  002FDE  006F FF78  F0C0    	movff	postinc2,vfpfcnvrt@cp
  3499  002FE4  006F FF74  F0C1    	movff	postdec2,vfpfcnvrt@cp+1
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  3503  002FEA  C0AF  F020         	movff	vfpfcnvrt@fp,stoa@fp
  3504  002FEE  C0B0  F021         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3505  002FF2  C0C0  F022         	movff	vfpfcnvrt@cp,stoa@s
  3506  002FF6  C0C1  F023         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3507  002FFA  ECCE  F022         	call	_stoa	;wreg free
  3508  002FFE  C020  F0AF         	movff	?_stoa,?_vfpfcnvrt
  3509  003002  C021  F0B0         	movff	?_stoa+1,?_vfpfcnvrt+1
  3510  003006  0012               	return	
  3511  003008                     l10140:
  3512                           
  3513                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  3514  003008  0100               	movlb	0	; () banked
  3515  00300A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3516  00300C  6ED9               	movwf	fsr2l,c
  3517  00300E  6ADA               	clrf	fsr2h,c
  3518  003010  006F FF7F FFF6     	movff	indf2,tblptrl
  3519  003016                     	if	1	;There is more than 1 active tblptr byte
  3520  003016  0E20               	movlw	high __smallconst
  3521  003018  6EF7               	movwf	tblptrh,c
  3522  00301A                     	endif
  3523  00301A                     	if	0	;tblptru may be non-zero
  3524  00301A                     	endif
  3525  00301A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3526  00301A  0E00               	movlw	low (__smallconst shr (0+16))
  3527  00301C  6EF8               	movwf	tblptru,c
  3528  00301E                     	endif
  3529  00301E  0008               	tblrd		*
  3530  003020  50F5               	movf	tablat,w,c
  3531  003022  0A75               	xorlw	117
  3532  003024  A4D8               	btfss	status,2,c
  3533  003026  D045               	goto	l10148
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  3537  003028  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3538  00302A  6ED9               	movwf	fsr2l,c
  3539  00302C  6ADA               	clrf	fsr2h,c
  3540  00302E  2ADF               	incf	indf2,f,c
  3541                           
  3542                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  3543  003030  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3544  003036  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3545  00303C  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3546  003042  0E02               	movlw	2
  3547  003044  26DE               	addwf	postinc2,f,c
  3548  003046  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3549  00304C  0E00               	movlw	0
  3550  00304E  22DD               	addwfc	postdec2,f,c
  3551  003050  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3552  003056  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3553  00305C  006F FF78  F0B6    	movff	postinc2,??_vfpfcnvrt+2
  3554  003062  006F FF74  F0B7    	movff	postdec2,??_vfpfcnvrt+3
  3555  003068  C0B6  F0B8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3556  00306C  C0B7  F0B9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3557  003070  6BBA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3558  003072  6BBB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3559  003074  6BBC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3560  003076  6BBD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3561  003078  6BBE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3562  00307A  6BBF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  3566  00307C  C0AF  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3567  003080  C0B0  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3568  003084  C0B8  F062         	movff	vfpfcnvrt@llu,utoa@d
  3569  003088  C0B9  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3570  00308C  C0BA  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3571  003090  C0BB  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3572  003094  C0BC  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3573  003098  C0BD  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3574  00309C  C0BE  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3575  0030A0  C0BF  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3576  0030A4  EC1F  F01F         	call	_utoa	;wreg free
  3577  0030A8  C060  F0AF         	movff	?_utoa,?_vfpfcnvrt
  3578  0030AC  C061  F0B0         	movff	?_utoa+1,?_vfpfcnvrt+1
  3579  0030B0  0012               	return	
  3580  0030B2                     l10148:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3584  0030B2  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3585  0030B4  6ED9               	movwf	fsr2l,c
  3586  0030B6  6ADA               	clrf	fsr2h,c
  3587  0030B8  006F FF7F FFF6     	movff	indf2,tblptrl
  3588  0030BE                     	if	1	;There is more than 1 active tblptr byte
  3589  0030BE  0E20               	movlw	high __smallconst
  3590  0030C0  6EF7               	movwf	tblptrh,c
  3591  0030C2                     	endif
  3592  0030C2                     	if	0	;tblptru may be non-zero
  3593  0030C2                     	endif
  3594  0030C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3595  0030C2  0E00               	movlw	low (__smallconst shr (0+16))
  3596  0030C4  6EF8               	movwf	tblptru,c
  3597  0030C6                     	endif
  3598  0030C6  0008               	tblrd		*
  3599  0030C8  50F5               	movf	tablat,w,c
  3600  0030CA  0A25               	xorlw	37
  3601  0030CC  A4D8               	btfss	status,2,c
  3602  0030CE  D014               	goto	l10158
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3606  0030D0  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3607  0030D2  6ED9               	movwf	fsr2l,c
  3608  0030D4  6ADA               	clrf	fsr2h,c
  3609  0030D6  2ADF               	incf	indf2,f,c
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3613  0030D8  0E00               	movlw	0
  3614  0030DA  6E18               	movwf	(fputc@c+1)^0,c
  3615  0030DC  0E25               	movlw	37
  3616  0030DE  6E17               	movwf	fputc@c^0,c
  3617  0030E0  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3618  0030E4  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3619  0030E8  EC57  F027         	call	_fputc	;wreg free
  3620  0030EC                     l10154:
  3621                           
  3622                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3623  0030EC  0E00               	movlw	0
  3624  0030EE  0100               	movlb	0	; () banked
  3625  0030F0  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3626  0030F2  0E01               	movlw	1
  3627  0030F4  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3628  0030F6  0012               	return	
  3629  0030F8                     l10158:
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3633  0030F8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3634  0030FA  6ED9               	movwf	fsr2l,c
  3635  0030FC  6ADA               	clrf	fsr2h,c
  3636  0030FE  2ADF               	incf	indf2,f,c
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3640  003100  0E00               	movlw	0
  3641  003102  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3642  003104  0E00               	movlw	0
  3643  003106  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3644  003108  0012               	return	
  3645  00310A                     l10164:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3649  00310A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3650  00310C  6ED9               	movwf	fsr2l,c
  3651  00310E  6ADA               	clrf	fsr2h,c
  3652  003110  006F FF7F FFF6     	movff	indf2,tblptrl
  3653  003116                     	if	1	;There is more than 1 active tblptr byte
  3654  003116  0E20               	movlw	high __smallconst
  3655  003118  6EF7               	movwf	tblptrh,c
  3656  00311A                     	endif
  3657  00311A                     	if	0	;tblptru may be non-zero
  3658  00311A                     	endif
  3659  00311A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3660  00311A  0E00               	movlw	low (__smallconst shr (0+16))
  3661  00311C  6EF8               	movwf	tblptru,c
  3662  00311E                     	endif
  3663  00311E  0008               	tblrd		*
  3664  003120  50F5               	movf	tablat,w,c
  3665  003122  6E17               	movwf	fputc@c^0,c
  3666  003124  6A18               	clrf	(fputc@c+1)^0,c
  3667  003126  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3668  00312A  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3669  00312E  EC57  F027         	call	_fputc	;wreg free
  3670                           
  3671                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3672  003132  0100               	movlb	0	; () banked
  3673  003134  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3674  003136  6ED9               	movwf	fsr2l,c
  3675  003138  6ADA               	clrf	fsr2h,c
  3676  00313A  2ADF               	incf	indf2,f,c
  3677  00313C  D7D7               	goto	l10154
  3678  00313E                     __end_of_vfpfcnvrt:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function _utoa *****************
  3682 ;; Defined at:
  3683 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3686 ;;		 -> sprintf@f(11), NULL(0), 
  3687 ;;  d               8    2[BANK0 ] unsigned long long 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  n               8   22[BANK0 ] unsigned long long 
  3690 ;;  i               2   30[BANK0 ] int 
  3691 ;;  w               2   20[BANK0 ] int 
  3692 ;;  p               2   18[BANK0 ] int 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  2    0[BANK0 ] int 
  3695 ;; Registers used:
  3696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 3F/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3702 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3703 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3704 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3705 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3706 ;;Total ram usage:       32 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 9
  3709 ;; This function calls:
  3710 ;;		___lodiv
  3711 ;;		___lomod
  3712 ;;		_pad
  3713 ;; This function is called by:
  3714 ;;		_vfpfcnvrt
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text7
  3719  003E3E                     __ptext7:
  3720                           	callstack 0
  3721  003E3E                     _utoa:
  3722                           	callstack 16
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  3726                           
  3727                           ;incstack = 0
  3728  003E3E  AFFA               	btfss	(_prec+1)& (0+255),7,b
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  3732  003E40  923D               	bcf	_flags^0,1,c
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  3736  003E42  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3737  003E44  D005               	goto	u11730
  3738  003E46  51FA               	movf	(_prec+1)& (0+255),w,b
  3739  003E48  E108               	bnz	l1988
  3740  003E4A  05F9               	decf	_prec& (0+255),w,b
  3741  003E4C  B0D8               	btfsc	status,0,c
  3742  003E4E  D005               	goto	l1988
  3743  003E50                     u11730:
  3744                           
  3745                           ; BSR set to: 0
  3746  003E50  0E00               	movlw	0
  3747  003E52  6F73               	movwf	(utoa@p+1)& (0+255),b
  3748  003E54  0E01               	movlw	1
  3749  003E56  6F72               	movwf	utoa@p& (0+255),b
  3750  003E58  D004               	goto	l1990
  3751  003E5A                     l1988:
  3752                           
  3753                           ; BSR set to: 0
  3754  003E5A  C0F9  F072         	movff	_prec,utoa@p
  3755  003E5E  C0FA  F073         	movff	_prec+1,utoa@p+1
  3756  003E62                     l1990:
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  3760  003E62  C0F7  F074         	movff	_width,utoa@w
  3761  003E66  C0F8  F075         	movff	_width+1,utoa@w+1
  3762                           
  3763                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  3764  003E6A  C062  F076         	movff	utoa@d,utoa@n
  3765  003E6E  C063  F077         	movff	utoa@d+1,utoa@n+1
  3766  003E72  C064  F078         	movff	utoa@d+2,utoa@n+2
  3767  003E76  C065  F079         	movff	utoa@d+3,utoa@n+3
  3768  003E7A  C066  F07A         	movff	utoa@d+4,utoa@n+4
  3769  003E7E  C067  F07B         	movff	utoa@d+5,utoa@n+5
  3770  003E82  C068  F07C         	movff	utoa@d+6,utoa@n+6
  3771  003E86  C069  F07D         	movff	utoa@d+7,utoa@n+7
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  3775  003E8A  0E00               	movlw	0
  3776  003E8C  6F7F               	movwf	(utoa@i+1)& (0+255),b
  3777  003E8E  0E4F               	movlw	79
  3778  003E90  6F7E               	movwf	utoa@i& (0+255),b
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  3782  003E92  0E00               	movlw	0
  3783  003E94  0101               	movlb	1	; () banked
  3784  003E96  6FE7               	movwf	(_dbuf+79)& (0+255),b
  3785                           
  3786                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3787  003E98  D076               	goto	l9960
  3788  003E9A                     l9950:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  3792  003E9A  077E               	decf	utoa@i& (0+255),f,b
  3793  003E9C  A0D8               	btfss	status,0,c
  3794  003E9E  077F               	decf	(utoa@i+1)& (0+255),f,b
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  3798  003EA0  0E98               	movlw	low _dbuf
  3799  003EA2  257E               	addwf	utoa@i& (0+255),w,b
  3800  003EA4  6ED9               	movwf	fsr2l,c
  3801  003EA6  0E01               	movlw	high _dbuf
  3802  003EA8  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3803  003EAA  6EDA               	movwf	fsr2h,c
  3804  003EAC  C076  F015         	movff	utoa@n,___lomod@dividend
  3805  003EB0  C077  F016         	movff	utoa@n+1,___lomod@dividend+1
  3806  003EB4  C078  F017         	movff	utoa@n+2,___lomod@dividend+2
  3807  003EB8  C079  F018         	movff	utoa@n+3,___lomod@dividend+3
  3808  003EBC  C07A  F019         	movff	utoa@n+4,___lomod@dividend+4
  3809  003EC0  C07B  F01A         	movff	utoa@n+5,___lomod@dividend+5
  3810  003EC4  C07C  F01B         	movff	utoa@n+6,___lomod@dividend+6
  3811  003EC8  C07D  F01C         	movff	utoa@n+7,___lomod@dividend+7
  3812  003ECC  0E0A               	movlw	10
  3813  003ECE  6E1D               	movwf	___lomod@divisor^0,c
  3814  003ED0  0E00               	movlw	0
  3815  003ED2  6E1E               	movwf	(___lomod@divisor+1)^0,c
  3816  003ED4  0E00               	movlw	0
  3817  003ED6  6E1F               	movwf	(___lomod@divisor+2)^0,c
  3818  003ED8  0E00               	movlw	0
  3819  003EDA  6E20               	movwf	(___lomod@divisor+3)^0,c
  3820  003EDC  0E00               	movlw	0
  3821  003EDE  6E21               	movwf	(___lomod@divisor+4)^0,c
  3822  003EE0  0E00               	movlw	0
  3823  003EE2  6E22               	movwf	(___lomod@divisor+5)^0,c
  3824  003EE4  0E00               	movlw	0
  3825  003EE6  6E23               	movwf	(___lomod@divisor+6)^0,c
  3826  003EE8  0E00               	movlw	0
  3827  003EEA  6E24               	movwf	(___lomod@divisor+7)^0,c
  3828  003EEC  ECB1  F027         	call	___lomod	;wreg free
  3829  003EF0  C015  F06A         	movff	?___lomod,??_utoa
  3830  003EF4  C016  F06B         	movff	?___lomod+1,??_utoa+1
  3831  003EF8  C017  F06C         	movff	?___lomod+2,??_utoa+2
  3832  003EFC  C018  F06D         	movff	?___lomod+3,??_utoa+3
  3833  003F00  C019  F06E         	movff	?___lomod+4,??_utoa+4
  3834  003F04  C01A  F06F         	movff	?___lomod+5,??_utoa+5
  3835  003F08  C01B  F070         	movff	?___lomod+6,??_utoa+6
  3836  003F0C  C01C  F071         	movff	?___lomod+7,??_utoa+7
  3837  003F10  516A               	movf	??_utoa& (0+255),w,b
  3838  003F12  0F30               	addlw	48
  3839  003F14  6EDF               	movwf	indf2,c
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  3843  003F16  0772               	decf	utoa@p& (0+255),f,b
  3844  003F18  A0D8               	btfss	status,0,c
  3845  003F1A  0773               	decf	(utoa@p+1)& (0+255),f,b
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  3849  003F1C  0774               	decf	utoa@w& (0+255),f,b
  3850  003F1E  A0D8               	btfss	status,0,c
  3851  003F20  0775               	decf	(utoa@w+1)& (0+255),f,b
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  3855  003F22  C076  F015         	movff	utoa@n,___lodiv@dividend
  3856  003F26  C077  F016         	movff	utoa@n+1,___lodiv@dividend+1
  3857  003F2A  C078  F017         	movff	utoa@n+2,___lodiv@dividend+2
  3858  003F2E  C079  F018         	movff	utoa@n+3,___lodiv@dividend+3
  3859  003F32  C07A  F019         	movff	utoa@n+4,___lodiv@dividend+4
  3860  003F36  C07B  F01A         	movff	utoa@n+5,___lodiv@dividend+5
  3861  003F3A  C07C  F01B         	movff	utoa@n+6,___lodiv@dividend+6
  3862  003F3E  C07D  F01C         	movff	utoa@n+7,___lodiv@dividend+7
  3863  003F42  0E0A               	movlw	10
  3864  003F44  6E1D               	movwf	___lodiv@divisor^0,c
  3865  003F46  0E00               	movlw	0
  3866  003F48  6E1E               	movwf	(___lodiv@divisor+1)^0,c
  3867  003F4A  0E00               	movlw	0
  3868  003F4C  6E1F               	movwf	(___lodiv@divisor+2)^0,c
  3869  003F4E  0E00               	movlw	0
  3870  003F50  6E20               	movwf	(___lodiv@divisor+3)^0,c
  3871  003F52  0E00               	movlw	0
  3872  003F54  6E21               	movwf	(___lodiv@divisor+4)^0,c
  3873  003F56  0E00               	movlw	0
  3874  003F58  6E22               	movwf	(___lodiv@divisor+5)^0,c
  3875  003F5A  0E00               	movlw	0
  3876  003F5C  6E23               	movwf	(___lodiv@divisor+6)^0,c
  3877  003F5E  0E00               	movlw	0
  3878  003F60  6E24               	movwf	(___lodiv@divisor+7)^0,c
  3879  003F62  EC13  F025         	call	___lodiv	;wreg free
  3880  003F66  C015  F076         	movff	?___lodiv,utoa@n
  3881  003F6A  C016  F077         	movff	?___lodiv+1,utoa@n+1
  3882  003F6E  C017  F078         	movff	?___lodiv+2,utoa@n+2
  3883  003F72  C018  F079         	movff	?___lodiv+3,utoa@n+3
  3884  003F76  C019  F07A         	movff	?___lodiv+4,utoa@n+4
  3885  003F7A  C01A  F07B         	movff	?___lodiv+5,utoa@n+5
  3886  003F7E  C01B  F07C         	movff	?___lodiv+6,utoa@n+6
  3887  003F82  C01C  F07D         	movff	?___lodiv+7,utoa@n+7
  3888  003F86                     l9960:
  3889                           
  3890                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3891  003F86  0100               	movlb	0	; () banked
  3892  003F88  517E               	movf	utoa@i& (0+255),w,b
  3893  003F8A  117F               	iorwf	(utoa@i+1)& (0+255),w,b
  3894  003F8C  B4D8               	btfsc	status,2,c
  3895  003F8E  D01A               	goto	u11780
  3896                           
  3897                           ; BSR set to: 0
  3898  003F90  5176               	movf	utoa@n& (0+255),w,b
  3899  003F92  1177               	iorwf	(utoa@n+1)& (0+255),w,b
  3900  003F94  1178               	iorwf	(utoa@n+2)& (0+255),w,b
  3901  003F96  1179               	iorwf	(utoa@n+3)& (0+255),w,b
  3902  003F98  117A               	iorwf	(utoa@n+4)& (0+255),w,b
  3903  003F9A  117B               	iorwf	(utoa@n+5)& (0+255),w,b
  3904  003F9C  117C               	iorwf	(utoa@n+6)& (0+255),w,b
  3905  003F9E  117D               	iorwf	(utoa@n+7)& (0+255),w,b
  3906  003FA0  A4D8               	btfss	status,2,c
  3907  003FA2  D77B               	goto	l9950
  3908                           
  3909                           ; BSR set to: 0
  3910  003FA4  BF73               	btfsc	(utoa@p+1)& (0+255),7,b
  3911  003FA6  D005               	goto	u11760
  3912  003FA8  5173               	movf	(utoa@p+1)& (0+255),w,b
  3913  003FAA  E102               	bnz	u11761
  3914  003FAC  0572               	decf	utoa@p& (0+255),w,b
  3915  003FAE  B0D8               	btfsc	status,0,c
  3916  003FB0                     u11761:
  3917  003FB0  D774               	goto	l9950
  3918  003FB2                     u11760:
  3919                           
  3920                           ; BSR set to: 0
  3921  003FB2  BF75               	btfsc	(utoa@w+1)& (0+255),7,b
  3922  003FB4  D007               	goto	u11780
  3923  003FB6  5175               	movf	(utoa@w+1)& (0+255),w,b
  3924  003FB8  E103               	bnz	u11770
  3925  003FBA  0574               	decf	utoa@w& (0+255),w,b
  3926  003FBC  A0D8               	btfss	status,0,c
  3927  003FBE  D002               	goto	u11780
  3928  003FC0                     u11770:
  3929                           
  3930                           ; BSR set to: 0
  3931  003FC0  B23D               	btfsc	_flags^0,1,c
  3932  003FC2  D76B               	goto	l9950
  3933  003FC4                     u11780:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  3937  003FC4  C060  F029         	movff	utoa@fp,pad@fp
  3938  003FC8  C061  F02A         	movff	utoa@fp+1,pad@fp+1
  3939  003FCC  0E98               	movlw	low _dbuf
  3940  003FCE  257E               	addwf	utoa@i& (0+255),w,b
  3941  003FD0  6E2B               	movwf	pad@buf^0,c
  3942  003FD2  0E01               	movlw	high _dbuf
  3943  003FD4  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3944  003FD6  6E2C               	movwf	(pad@buf+1)^0,c
  3945  003FD8  C074  F02D         	movff	utoa@w,pad@p
  3946  003FDC  C075  F02E         	movff	utoa@w+1,pad@p+1
  3947  003FE0  EC59  F028         	call	_pad	;wreg free
  3948  003FE4  C029  F060         	movff	?_pad,?_utoa
  3949  003FE8  C02A  F061         	movff	?_pad+1,?_utoa+1
  3950  003FEC  0012               	return		;funcret
  3951  003FEE                     __end_of_utoa:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function ___lomod *****************
  3955 ;; Defined at:
  3956 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  dividend        8   20[COMRAM] unsigned long long 
  3959 ;;  divisor         8   28[COMRAM] unsigned long long 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  counter         1   36[COMRAM] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  8   20[COMRAM] unsigned long long 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 3F/0
  3968 ;;		On exit  : 3F/0
  3969 ;;		Unchanged: 3F/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3971 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3974 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3975 ;;Total ram usage:       17 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 4
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_utoa
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text8
  3986  004F62                     __ptext8:
  3987                           	callstack 0
  3988  004F62                     ___lomod:
  3989                           	callstack 20
  3990                           
  3991                           ; BSR set to: 0
  3992                           
  3993                           ;incstack = 0
  3994  004F62  501D               	movf	___lomod@divisor^0,w,c
  3995  004F64  101E               	iorwf	(___lomod@divisor+1)^0,w,c
  3996  004F66  101F               	iorwf	(___lomod@divisor+2)^0,w,c
  3997  004F68  1020               	iorwf	(___lomod@divisor+3)^0,w,c
  3998  004F6A  1021               	iorwf	(___lomod@divisor+4)^0,w,c
  3999  004F6C  1022               	iorwf	(___lomod@divisor+5)^0,w,c
  4000  004F6E  1023               	iorwf	(___lomod@divisor+6)^0,w,c
  4001  004F70  1024               	iorwf	(___lomod@divisor+7)^0,w,c
  4002  004F72  B4D8               	btfsc	status,2,c
  4003  004F74  D03C               	goto	l1587
  4004                           
  4005                           ; BSR set to: 0
  4006  004F76  0E01               	movlw	1
  4007  004F78  6E25               	movwf	___lomod@counter^0,c
  4008  004F7A  D00A               	goto	l9458
  4009  004F7C                     l9456:
  4010                           
  4011                           ; BSR set to: 0
  4012  004F7C  90D8               	bcf	status,0,c
  4013  004F7E  361D               	rlcf	___lomod@divisor^0,f,c
  4014  004F80  361E               	rlcf	(___lomod@divisor+1)^0,f,c
  4015  004F82  361F               	rlcf	(___lomod@divisor+2)^0,f,c
  4016  004F84  3620               	rlcf	(___lomod@divisor+3)^0,f,c
  4017  004F86  3621               	rlcf	(___lomod@divisor+4)^0,f,c
  4018  004F88  3622               	rlcf	(___lomod@divisor+5)^0,f,c
  4019  004F8A  3623               	rlcf	(___lomod@divisor+6)^0,f,c
  4020  004F8C  3624               	rlcf	(___lomod@divisor+7)^0,f,c
  4021  004F8E  2A25               	incf	___lomod@counter^0,f,c
  4022  004F90                     l9458:
  4023                           
  4024                           ; BSR set to: 0
  4025  004F90  AE24               	btfss	(___lomod@divisor+7)^0,7,c
  4026  004F92  D7F4               	goto	l9456
  4027  004F94                     u10740:
  4028                           
  4029                           ; BSR set to: 0
  4030  004F94  501D               	movf	___lomod@divisor^0,w,c
  4031  004F96  5C15               	subwf	___lomod@dividend^0,w,c
  4032  004F98  501E               	movf	(___lomod@divisor+1)^0,w,c
  4033  004F9A  5816               	subwfb	(___lomod@dividend+1)^0,w,c
  4034  004F9C  501F               	movf	(___lomod@divisor+2)^0,w,c
  4035  004F9E  5817               	subwfb	(___lomod@dividend+2)^0,w,c
  4036  004FA0  5020               	movf	(___lomod@divisor+3)^0,w,c
  4037  004FA2  5818               	subwfb	(___lomod@dividend+3)^0,w,c
  4038  004FA4  5021               	movf	(___lomod@divisor+4)^0,w,c
  4039  004FA6  5819               	subwfb	(___lomod@dividend+4)^0,w,c
  4040  004FA8  5022               	movf	(___lomod@divisor+5)^0,w,c
  4041  004FAA  581A               	subwfb	(___lomod@dividend+5)^0,w,c
  4042  004FAC  5023               	movf	(___lomod@divisor+6)^0,w,c
  4043  004FAE  581B               	subwfb	(___lomod@dividend+6)^0,w,c
  4044  004FB0  5024               	movf	(___lomod@divisor+7)^0,w,c
  4045  004FB2  581C               	subwfb	(___lomod@dividend+7)^0,w,c
  4046  004FB4  A0D8               	btfss	status,0,c
  4047  004FB6  D010               	goto	l9464
  4048                           
  4049                           ; BSR set to: 0
  4050  004FB8  501D               	movf	___lomod@divisor^0,w,c
  4051  004FBA  5E15               	subwf	___lomod@dividend^0,f,c
  4052  004FBC  501E               	movf	(___lomod@divisor+1)^0,w,c
  4053  004FBE  5A16               	subwfb	(___lomod@dividend+1)^0,f,c
  4054  004FC0  501F               	movf	(___lomod@divisor+2)^0,w,c
  4055  004FC2  5A17               	subwfb	(___lomod@dividend+2)^0,f,c
  4056  004FC4  5020               	movf	(___lomod@divisor+3)^0,w,c
  4057  004FC6  5A18               	subwfb	(___lomod@dividend+3)^0,f,c
  4058  004FC8  5021               	movf	(___lomod@divisor+4)^0,w,c
  4059  004FCA  5A19               	subwfb	(___lomod@dividend+4)^0,f,c
  4060  004FCC  5022               	movf	(___lomod@divisor+5)^0,w,c
  4061  004FCE  5A1A               	subwfb	(___lomod@dividend+5)^0,f,c
  4062  004FD0  5023               	movf	(___lomod@divisor+6)^0,w,c
  4063  004FD2  5A1B               	subwfb	(___lomod@dividend+6)^0,f,c
  4064  004FD4  5024               	movf	(___lomod@divisor+7)^0,w,c
  4065  004FD6  5A1C               	subwfb	(___lomod@dividend+7)^0,f,c
  4066  004FD8                     l9464:
  4067                           
  4068                           ; BSR set to: 0
  4069  004FD8  90D8               	bcf	status,0,c
  4070  004FDA  3224               	rrcf	(___lomod@divisor+7)^0,f,c
  4071  004FDC  3223               	rrcf	(___lomod@divisor+6)^0,f,c
  4072  004FDE  3222               	rrcf	(___lomod@divisor+5)^0,f,c
  4073  004FE0  3221               	rrcf	(___lomod@divisor+4)^0,f,c
  4074  004FE2  3220               	rrcf	(___lomod@divisor+3)^0,f,c
  4075  004FE4  321F               	rrcf	(___lomod@divisor+2)^0,f,c
  4076  004FE6  321E               	rrcf	(___lomod@divisor+1)^0,f,c
  4077  004FE8  321D               	rrcf	___lomod@divisor^0,f,c
  4078                           
  4079                           ; BSR set to: 0
  4080  004FEA  2E25               	decfsz	___lomod@counter^0,f,c
  4081  004FEC  D7D3               	goto	u10740
  4082  004FEE                     l1587:
  4083                           
  4084                           ; BSR set to: 0
  4085  004FEE  C015  F015         	movff	___lomod@dividend,?___lomod
  4086  004FF2  C016  F016         	movff	___lomod@dividend+1,?___lomod+1
  4087  004FF6  C017  F017         	movff	___lomod@dividend+2,?___lomod+2
  4088  004FFA  C018  F018         	movff	___lomod@dividend+3,?___lomod+3
  4089  004FFE  C019  F019         	movff	___lomod@dividend+4,?___lomod+4
  4090  005002  C01A  F01A         	movff	___lomod@dividend+5,?___lomod+5
  4091  005006  C01B  F01B         	movff	___lomod@dividend+6,?___lomod+6
  4092  00500A  C01C  F01C         	movff	___lomod@dividend+7,?___lomod+7
  4093                           
  4094                           ; BSR set to: 0
  4095  00500E  0012               	return		;funcret
  4096  005010                     __end_of___lomod:
  4097                           	callstack 0
  4098                           
  4099 ;; *************** function ___lodiv *****************
  4100 ;; Defined at:
  4101 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  dividend        8   20[COMRAM] unsigned long long 
  4104 ;;  divisor         8   28[COMRAM] unsigned long long 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  quotient        8   36[COMRAM] unsigned long long 
  4107 ;;  counter         1   44[COMRAM] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  8   20[COMRAM] unsigned long long 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4112 ;; Tracked objects:
  4113 ;;		On entry : 3F/0
  4114 ;;		On exit  : 3F/0
  4115 ;;		Unchanged: 3F/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4117 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4118 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4120 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4121 ;;Total ram usage:       25 bytes
  4122 ;; Hardware stack levels used: 1
  4123 ;; Hardware stack levels required when called: 4
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_utoa
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text9
  4132  004A26                     __ptext9:
  4133                           	callstack 0
  4134  004A26                     ___lodiv:
  4135                           	callstack 20
  4136                           
  4137                           ; BSR set to: 0
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;incstack = 0
  4141  004A26  EE20  F025         	lfsr	2,___lodiv@quotient
  4142  004A2A  0E07               	movlw	7
  4143  004A2C                     u10691:
  4144  004A2C  6ADE               	clrf	postinc2,c
  4145  004A2E  06E8               	decf	wreg,f,c
  4146  004A30  E2FD               	bc	u10691
  4147                           
  4148                           ; BSR set to: 0
  4149  004A32  501D               	movf	___lodiv@divisor^0,w,c
  4150  004A34  101E               	iorwf	(___lodiv@divisor+1)^0,w,c
  4151  004A36  101F               	iorwf	(___lodiv@divisor+2)^0,w,c
  4152  004A38  1020               	iorwf	(___lodiv@divisor+3)^0,w,c
  4153  004A3A  1021               	iorwf	(___lodiv@divisor+4)^0,w,c
  4154  004A3C  1022               	iorwf	(___lodiv@divisor+5)^0,w,c
  4155  004A3E  1023               	iorwf	(___lodiv@divisor+6)^0,w,c
  4156  004A40  1024               	iorwf	(___lodiv@divisor+7)^0,w,c
  4157  004A42  B4D8               	btfsc	status,2,c
  4158  004A44  D046               	goto	l1577
  4159                           
  4160                           ; BSR set to: 0
  4161  004A46  0E01               	movlw	1
  4162  004A48  6E2D               	movwf	___lodiv@counter^0,c
  4163  004A4A  D00A               	goto	l9438
  4164  004A4C                     l9436:
  4165                           
  4166                           ; BSR set to: 0
  4167  004A4C  90D8               	bcf	status,0,c
  4168  004A4E  361D               	rlcf	___lodiv@divisor^0,f,c
  4169  004A50  361E               	rlcf	(___lodiv@divisor+1)^0,f,c
  4170  004A52  361F               	rlcf	(___lodiv@divisor+2)^0,f,c
  4171  004A54  3620               	rlcf	(___lodiv@divisor+3)^0,f,c
  4172  004A56  3621               	rlcf	(___lodiv@divisor+4)^0,f,c
  4173  004A58  3622               	rlcf	(___lodiv@divisor+5)^0,f,c
  4174  004A5A  3623               	rlcf	(___lodiv@divisor+6)^0,f,c
  4175  004A5C  3624               	rlcf	(___lodiv@divisor+7)^0,f,c
  4176  004A5E  2A2D               	incf	___lodiv@counter^0,f,c
  4177  004A60                     l9438:
  4178                           
  4179                           ; BSR set to: 0
  4180  004A60  AE24               	btfss	(___lodiv@divisor+7)^0,7,c
  4181  004A62  D7F4               	goto	l9436
  4182  004A64                     u10710:
  4183                           
  4184                           ; BSR set to: 0
  4185  004A64  90D8               	bcf	status,0,c
  4186  004A66  3625               	rlcf	___lodiv@quotient^0,f,c
  4187  004A68  3626               	rlcf	(___lodiv@quotient+1)^0,f,c
  4188  004A6A  3627               	rlcf	(___lodiv@quotient+2)^0,f,c
  4189  004A6C  3628               	rlcf	(___lodiv@quotient+3)^0,f,c
  4190  004A6E  3629               	rlcf	(___lodiv@quotient+4)^0,f,c
  4191  004A70  362A               	rlcf	(___lodiv@quotient+5)^0,f,c
  4192  004A72  362B               	rlcf	(___lodiv@quotient+6)^0,f,c
  4193  004A74  362C               	rlcf	(___lodiv@quotient+7)^0,f,c
  4194                           
  4195                           ; BSR set to: 0
  4196  004A76  501D               	movf	___lodiv@divisor^0,w,c
  4197  004A78  5C15               	subwf	___lodiv@dividend^0,w,c
  4198  004A7A  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4199  004A7C  5816               	subwfb	(___lodiv@dividend+1)^0,w,c
  4200  004A7E  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4201  004A80  5817               	subwfb	(___lodiv@dividend+2)^0,w,c
  4202  004A82  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4203  004A84  5818               	subwfb	(___lodiv@dividend+3)^0,w,c
  4204  004A86  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4205  004A88  5819               	subwfb	(___lodiv@dividend+4)^0,w,c
  4206  004A8A  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4207  004A8C  581A               	subwfb	(___lodiv@dividend+5)^0,w,c
  4208  004A8E  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4209  004A90  581B               	subwfb	(___lodiv@dividend+6)^0,w,c
  4210  004A92  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4211  004A94  581C               	subwfb	(___lodiv@dividend+7)^0,w,c
  4212  004A96  A0D8               	btfss	status,0,c
  4213  004A98  D011               	goto	l9448
  4214                           
  4215                           ; BSR set to: 0
  4216  004A9A  501D               	movf	___lodiv@divisor^0,w,c
  4217  004A9C  5E15               	subwf	___lodiv@dividend^0,f,c
  4218  004A9E  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4219  004AA0  5A16               	subwfb	(___lodiv@dividend+1)^0,f,c
  4220  004AA2  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4221  004AA4  5A17               	subwfb	(___lodiv@dividend+2)^0,f,c
  4222  004AA6  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4223  004AA8  5A18               	subwfb	(___lodiv@dividend+3)^0,f,c
  4224  004AAA  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4225  004AAC  5A19               	subwfb	(___lodiv@dividend+4)^0,f,c
  4226  004AAE  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4227  004AB0  5A1A               	subwfb	(___lodiv@dividend+5)^0,f,c
  4228  004AB2  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4229  004AB4  5A1B               	subwfb	(___lodiv@dividend+6)^0,f,c
  4230  004AB6  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4231  004AB8  5A1C               	subwfb	(___lodiv@dividend+7)^0,f,c
  4232                           
  4233                           ; BSR set to: 0
  4234  004ABA  8025               	bsf	___lodiv@quotient^0,0,c
  4235  004ABC                     l9448:
  4236                           
  4237                           ; BSR set to: 0
  4238  004ABC  90D8               	bcf	status,0,c
  4239  004ABE  3224               	rrcf	(___lodiv@divisor+7)^0,f,c
  4240  004AC0  3223               	rrcf	(___lodiv@divisor+6)^0,f,c
  4241  004AC2  3222               	rrcf	(___lodiv@divisor+5)^0,f,c
  4242  004AC4  3221               	rrcf	(___lodiv@divisor+4)^0,f,c
  4243  004AC6  3220               	rrcf	(___lodiv@divisor+3)^0,f,c
  4244  004AC8  321F               	rrcf	(___lodiv@divisor+2)^0,f,c
  4245  004ACA  321E               	rrcf	(___lodiv@divisor+1)^0,f,c
  4246  004ACC  321D               	rrcf	___lodiv@divisor^0,f,c
  4247                           
  4248                           ; BSR set to: 0
  4249  004ACE  2E2D               	decfsz	___lodiv@counter^0,f,c
  4250  004AD0  D7C9               	goto	u10710
  4251  004AD2                     l1577:
  4252                           
  4253                           ; BSR set to: 0
  4254  004AD2  C025  F015         	movff	___lodiv@quotient,?___lodiv
  4255  004AD6  C026  F016         	movff	___lodiv@quotient+1,?___lodiv+1
  4256  004ADA  C027  F017         	movff	___lodiv@quotient+2,?___lodiv+2
  4257  004ADE  C028  F018         	movff	___lodiv@quotient+3,?___lodiv+3
  4258  004AE2  C029  F019         	movff	___lodiv@quotient+4,?___lodiv+4
  4259  004AE6  C02A  F01A         	movff	___lodiv@quotient+5,?___lodiv+5
  4260  004AEA  C02B  F01B         	movff	___lodiv@quotient+6,?___lodiv+6
  4261  004AEE  C02C  F01C         	movff	___lodiv@quotient+7,?___lodiv+7
  4262                           
  4263                           ; BSR set to: 0
  4264  004AF2  0012               	return		;funcret
  4265  004AF4                     __end_of___lodiv:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _stoa *****************
  4269 ;; Defined at:
  4270 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4273 ;;		 -> sprintf@f(11), NULL(0), 
  4274 ;;  s               2   33[COMRAM] PTR unsigned char 
  4275 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  nuls            7   36[COMRAM] unsigned char [7]
  4278 ;;  l               2   51[COMRAM] int 
  4279 ;;  p               2   49[COMRAM] int 
  4280 ;;  cp              2   47[COMRAM] PTR unsigned char 
  4281 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_2(9), 
  4282 ;;		 -> STR_1(12), 
  4283 ;;  w               2   45[COMRAM] int 
  4284 ;;  i               2   43[COMRAM] int 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  2   31[COMRAM] int 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 3F/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4295 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4297 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4298 ;;Total ram usage:       22 bytes
  4299 ;; Hardware stack levels used: 1
  4300 ;; Hardware stack levels required when called: 7
  4301 ;; This function calls:
  4302 ;;		_fputc
  4303 ;;		_strlen
  4304 ;; This function is called by:
  4305 ;;		_vfpfcnvrt
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           	psect	text10
  4310  00459C                     __ptext10:
  4311                           	callstack 0
  4312  00459C                     _stoa:
  4313                           	callstack 18
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;incstack = 0
  4320  00459C  EE20  F1E8         	lfsr	2,stoa@F1164
  4321  0045A0  EE10  F025         	lfsr	1,stoa@nuls
  4322  0045A4  0E06               	movlw	6
  4323  0045A6                     u11621:
  4324  0045A6  006F FF6F FFE3     	movff	plusw2,plusw1
  4325  0045AC  06E8               	decf	wreg,f,c
  4326  0045AE  E2FB               	bc	u11621
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  4330  0045B0  C022  F030         	movff	stoa@s,stoa@cp
  4331  0045B4  C023  F031         	movff	stoa@s+1,stoa@cp+1
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  4335  0045B8  5030               	movf	stoa@cp^0,w,c
  4336  0045BA  1031               	iorwf	(stoa@cp+1)^0,w,c
  4337  0045BC  A4D8               	btfss	status,2,c
  4338  0045BE  D003               	goto	l9904
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  4342  0045C0  0E25               	movlw	low stoa@nuls
  4343  0045C2  6E30               	movwf	stoa@cp^0,c
  4344  0045C4  6A31               	clrf	(stoa@cp+1)^0,c
  4345  0045C6                     l9904:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  4349  0045C6  C030  F015         	movff	stoa@cp,strlen@s
  4350  0045CA  C031  F016         	movff	stoa@cp+1,strlen@s+1
  4351  0045CE  EC2D  F02B         	call	_strlen	;wreg free
  4352  0045D2  C015  F034         	movff	?_strlen,stoa@l
  4353  0045D6  C016  F035         	movff	?_strlen+1,stoa@l+1
  4354                           
  4355                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  4356  0045DA  C0F9  F032         	movff	_prec,stoa@p
  4357  0045DE  C0FA  F033         	movff	_prec+1,stoa@p+1
  4358                           
  4359                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  4360  0045E2  BE33               	btfsc	(stoa@p+1)^0,7,c
  4361  0045E4  D00E               	goto	l1969
  4362  0045E6  5034               	movf	stoa@l^0,w,c
  4363  0045E8  5C32               	subwf	stoa@p^0,w,c
  4364  0045EA  5033               	movf	(stoa@p+1)^0,w,c
  4365  0045EC  0A80               	xorlw	128
  4366  0045EE  6E24               	movwf	??_stoa^0,c
  4367  0045F0  5035               	movf	(stoa@l+1)^0,w,c
  4368  0045F2  0A80               	xorlw	128
  4369  0045F4  5824               	subwfb	??_stoa^0,w,c
  4370  0045F6  B0D8               	btfsc	status,0,c
  4371  0045F8  D004               	goto	l1969
  4372  0045FA  C032  F034         	movff	stoa@p,stoa@l
  4373  0045FE  C033  F035         	movff	stoa@p+1,stoa@l+1
  4374  004602                     l1969:
  4375                           
  4376                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  4377  004602  C034  F032         	movff	stoa@l,stoa@p
  4378  004606  C035  F033         	movff	stoa@l+1,stoa@p+1
  4379                           
  4380                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  4381  00460A  C0F7  F02E         	movff	_width,stoa@w
  4382  00460E  C0F8  F02F         	movff	_width+1,stoa@w+1
  4383                           
  4384                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  4385  004612  A03D               	btfss	_flags^0,0,c
  4386  004614  D00D               	goto	l9918
  4387  004616  D016               	goto	u11670
  4388  004618                     l9914:
  4389                           
  4390                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  4391  004618  0E00               	movlw	0
  4392  00461A  6E18               	movwf	(fputc@c+1)^0,c
  4393  00461C  0E20               	movlw	32
  4394  00461E  6E17               	movwf	fputc@c^0,c
  4395  004620  C020  F019         	movff	stoa@fp,fputc@fp
  4396  004624  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4397  004628  EC57  F027         	call	_fputc	;wreg free
  4398                           
  4399                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  4400  00462C  4A34               	infsnz	stoa@l^0,f,c
  4401  00462E  2A35               	incf	(stoa@l+1)^0,f,c
  4402  004630                     l9918:
  4403                           
  4404                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  4405  004630  502E               	movf	stoa@w^0,w,c
  4406  004632  5C34               	subwf	stoa@l^0,w,c
  4407  004634  5035               	movf	(stoa@l+1)^0,w,c
  4408  004636  0A80               	xorlw	128
  4409  004638  6E24               	movwf	??_stoa^0,c
  4410  00463A  502F               	movf	(stoa@w+1)^0,w,c
  4411  00463C  0A80               	xorlw	128
  4412  00463E  5824               	subwfb	??_stoa^0,w,c
  4413  004640  A0D8               	btfss	status,0,c
  4414  004642  D7EA               	goto	l9914
  4415  004644                     u11670:
  4416                           
  4417                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  4418  004644  0E00               	movlw	0
  4419  004646  6E2D               	movwf	(stoa@i+1)^0,c
  4420  004648  0E00               	movlw	0
  4421  00464A  6E2C               	movwf	stoa@i^0,c
  4422                           
  4423                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4424  00464C  D023               	goto	l9928
  4425  00464E                     l9922:
  4426                           
  4427                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  4428  00464E  0060  F0C3  FFF6   	movff	stoa@cp,tblptrl
  4429  004654  0060  F0C7  FFF7   	movff	stoa@cp+1,tblptrh
  4430  00465A  0E00               	movlw	low (__smallconst shr (0+16))
  4431  00465C  6EF8               	movwf	tblptru,c
  4432  00465E  0E1F               	movlw	(high __ramtop+-1)
  4433  004660  64F7               	cpfsgt	tblptrh,c
  4434  004662  D003               	bra	u11687
  4435  004664  0008               	tblrd		*
  4436  004666  50F5               	movf	tablat,w,c
  4437  004668  D007               	bra	u11680
  4438  00466A                     u11687:
  4439  00466A  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4440  004670  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4441  004676  50E7               	movf	indf1,w,c
  4442  004678                     u11680:
  4443  004678  6E24               	movwf	??_stoa^0,c
  4444  00467A  5024               	movf	??_stoa^0,w,c
  4445  00467C  6E17               	movwf	fputc@c^0,c
  4446  00467E  6A18               	clrf	(fputc@c+1)^0,c
  4447  004680  C020  F019         	movff	stoa@fp,fputc@fp
  4448  004684  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4449  004688  EC57  F027         	call	_fputc	;wreg free
  4450                           
  4451                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  4452  00468C  4A30               	infsnz	stoa@cp^0,f,c
  4453  00468E  2A31               	incf	(stoa@cp+1)^0,f,c
  4454                           
  4455                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  4456  004690  4A2C               	infsnz	stoa@i^0,f,c
  4457  004692  2A2D               	incf	(stoa@i+1)^0,f,c
  4458  004694                     l9928:
  4459                           
  4460                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4461  004694  5032               	movf	stoa@p^0,w,c
  4462  004696  5C2C               	subwf	stoa@i^0,w,c
  4463  004698  502D               	movf	(stoa@i+1)^0,w,c
  4464  00469A  0A80               	xorlw	128
  4465  00469C  6E24               	movwf	??_stoa^0,c
  4466  00469E  5033               	movf	(stoa@p+1)^0,w,c
  4467  0046A0  0A80               	xorlw	128
  4468  0046A2  5824               	subwfb	??_stoa^0,w,c
  4469  0046A4  A0D8               	btfss	status,0,c
  4470  0046A6  D7D3               	goto	l9922
  4471                           
  4472                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  4473  0046A8  B03D               	btfsc	_flags^0,0,c
  4474  0046AA  D00D               	goto	l9936
  4475  0046AC  D016               	goto	u11710
  4476  0046AE                     l9932:
  4477                           
  4478                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  4479  0046AE  0E00               	movlw	0
  4480  0046B0  6E18               	movwf	(fputc@c+1)^0,c
  4481  0046B2  0E20               	movlw	32
  4482  0046B4  6E17               	movwf	fputc@c^0,c
  4483  0046B6  C020  F019         	movff	stoa@fp,fputc@fp
  4484  0046BA  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4485  0046BE  EC57  F027         	call	_fputc	;wreg free
  4486                           
  4487                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  4488  0046C2  4A34               	infsnz	stoa@l^0,f,c
  4489  0046C4  2A35               	incf	(stoa@l+1)^0,f,c
  4490  0046C6                     l9936:
  4491                           
  4492                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  4493  0046C6  502E               	movf	stoa@w^0,w,c
  4494  0046C8  5C34               	subwf	stoa@l^0,w,c
  4495  0046CA  5035               	movf	(stoa@l+1)^0,w,c
  4496  0046CC  0A80               	xorlw	128
  4497  0046CE  6E24               	movwf	??_stoa^0,c
  4498  0046D0  502F               	movf	(stoa@w+1)^0,w,c
  4499  0046D2  0A80               	xorlw	128
  4500  0046D4  5824               	subwfb	??_stoa^0,w,c
  4501  0046D6  A0D8               	btfss	status,0,c
  4502  0046D8  D7EA               	goto	l9932
  4503  0046DA                     u11710:
  4504                           
  4505                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  4506                           
  4507                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  4508  0046DA  C034  F020         	movff	stoa@l,?_stoa
  4509  0046DE  C035  F021         	movff	stoa@l+1,?_stoa+1
  4510  0046E2  0012               	return		;funcret
  4511  0046E4                     __end_of_stoa:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _efgtoa *****************
  4515 ;; Defined at:
  4516 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  4519 ;;		 -> sprintf@f(11), NULL(0), 
  4520 ;;  f               4   19[BANK0 ] PTR struct _IO_FILE
  4521 ;;  c               1   23[BANK0 ] unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  u               4   75[BANK0 ] unsigned char 
  4524 ;;  g               4   65[BANK0 ] unsigned char 
  4525 ;;  l               4   61[BANK0 ] unsigned char 
  4526 ;;  h               4   57[BANK0 ] unsigned char 
  4527 ;;  ou              4   43[BANK0 ] unsigned char 
  4528 ;;  n               2   73[BANK0 ] int 
  4529 ;;  e               2   71[BANK0 ] int 
  4530 ;;  i               2   69[BANK0 ] int 
  4531 ;;  w               2   54[BANK0 ] int 
  4532 ;;  p               2   51[BANK0 ] int 
  4533 ;;  sign            2   49[BANK0 ] int 
  4534 ;;  d               2   47[BANK0 ] int 
  4535 ;;  m               2   41[BANK0 ] int 
  4536 ;;  ne              2   39[BANK0 ] int 
  4537 ;;  pp              2   37[BANK0 ] int 
  4538 ;;  t               2   35[BANK0 ] int 
  4539 ;;  mode            1   56[BANK0 ] unsigned char 
  4540 ;;  nmode           1   53[BANK0 ] unsigned char 
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  2   17[BANK0 ] int 
  4543 ;; Registers used:
  4544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 3F/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4550 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4551 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4552 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4553 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4554 ;;Total ram usage:       62 bytes
  4555 ;; Hardware stack levels used: 1
  4556 ;; Hardware stack levels required when called: 9
  4557 ;; This function calls:
  4558 ;;		___awdiv
  4559 ;;		___awmod
  4560 ;;		___fladd
  4561 ;;		___fldiv
  4562 ;;		___fleq
  4563 ;;		___flge
  4564 ;;		___flmul
  4565 ;;		___flneg
  4566 ;;		___flsub
  4567 ;;		___fltol
  4568 ;;		___fpclassifyf
  4569 ;;		_floorf
  4570 ;;		_isupper
  4571 ;;		_pad
  4572 ;;		_strcpy
  4573 ;;		_tolower
  4574 ;; This function is called by:
  4575 ;;		_vfpfcnvrt
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text11
  4580  0020FA                     __ptext11:
  4581                           	callstack 0
  4582  0020FA                     _efgtoa:
  4583                           	callstack 16
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  4587                           
  4588                           ;incstack = 0
  4589  0020FA  0E00               	movlw	0
  4590  0020FC  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4591  0020FE  0E00               	movlw	0
  4592  002100  6F91               	movwf	efgtoa@sign& (0+255),b
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  4596  002102  C073  F0A1         	movff	efgtoa@f,efgtoa@g
  4597  002106  C074  F0A2         	movff	efgtoa@f+1,efgtoa@g+1
  4598  00210A  C075  F0A3         	movff	efgtoa@f+2,efgtoa@g+2
  4599  00210E  C076  F0A4         	movff	efgtoa@f+3,efgtoa@g+3
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  4603  002112  AFA4               	btfss	(efgtoa@g+3)& (0+255),7,b
  4604  002114  D016               	goto	l9600
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  4608  002116  0E00               	movlw	0
  4609  002118  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4610  00211A  0E01               	movlw	1
  4611  00211C  6F91               	movwf	efgtoa@sign& (0+255),b
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  4615  00211E  C0A1  F015         	movff	efgtoa@g,___flneg@f1
  4616  002122  C0A2  F016         	movff	efgtoa@g+1,___flneg@f1+1
  4617  002126  C0A3  F017         	movff	efgtoa@g+2,___flneg@f1+2
  4618  00212A  C0A4  F018         	movff	efgtoa@g+3,___flneg@f1+3
  4619  00212E  EC1D  F02D         	call	___flneg	;wreg free
  4620  002132  C015  F0A1         	movff	?___flneg,efgtoa@g
  4621  002136  C016  F0A2         	movff	?___flneg+1,efgtoa@g+1
  4622  00213A  C017  F0A3         	movff	?___flneg+2,efgtoa@g+2
  4623  00213E  C018  F0A4         	movff	?___flneg+3,efgtoa@g+3
  4624  002142                     l9600:
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  4628  002142  0E00               	movlw	0
  4629  002144  6FAA               	movwf	(efgtoa@n+1)& (0+255),b
  4630  002146  0E00               	movlw	0
  4631  002148  6FA9               	movwf	efgtoa@n& (0+255),b
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  4635  00214A  C0F7  F096         	movff	_width,efgtoa@w
  4636  00214E  C0F8  F097         	movff	_width+1,efgtoa@w+1
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  4640  002152  5191               	movf	efgtoa@sign& (0+255),w,b
  4641  002154  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4642  002156  A4D8               	btfss	status,2,c
  4643  002158  D002               	goto	u11160
  4644                           
  4645                           ; BSR set to: 0
  4646  00215A  A43D               	btfss	_flags^0,2,c
  4647  00215C  D013               	goto	l9620
  4648  00215E                     u11160:
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  4652  00215E  5191               	movf	efgtoa@sign& (0+255),w,b
  4653  002160  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4654  002162  A4D8               	btfss	status,2,c
  4655  002164  D004               	goto	l9612
  4656                           
  4657                           ; BSR set to: 0
  4658  002166  0E00               	movlw	0
  4659  002168  6F7E               	movwf	(_efgtoa$2723+1)& (0+255),b
  4660  00216A  0E2B               	movlw	43
  4661  00216C  D003               	goto	L3
  4662  00216E                     l9612:
  4663                           
  4664                           ; BSR set to: 0
  4665  00216E  0E00               	movlw	0
  4666  002170  6F7E               	movwf	(_efgtoa$2723+1)& (0+255),b
  4667  002172  0E2D               	movlw	45
  4668  002174                     L3:
  4669  002174  6F7D               	movwf	_efgtoa$2723& (0+255),b
  4670                           
  4671                           ; BSR set to: 0
  4672  002176  C07D  F198         	movff	_efgtoa$2723,_dbuf
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  4676  00217A  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  4677  00217C  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  4681  00217E  0796               	decf	efgtoa@w& (0+255),f,b
  4682  002180  A0D8               	btfss	status,0,c
  4683  002182  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  4684  002184                     l9620:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  4688  002184  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4689  002188  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4690  00218C  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4691  002190  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4692  002194  EC7A  F025         	call	___fpclassifyf	;wreg free
  4693  002198  0415               	decf	?___fpclassifyf^0,w,c
  4694  00219A  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4695  00219C  A4D8               	btfss	status,2,c
  4696  00219E  D047               	goto	l9638
  4697  0021A0  0EBF               	movlw	191
  4698  0021A2  0100               	movlb	0	; () banked
  4699  0021A4  6F78               	movwf	??_efgtoa& (0+255),b
  4700  0021A6  0EFF               	movlw	255
  4701  0021A8  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4702  0021AA  5177               	movf	efgtoa@c& (0+255),w,b
  4703  0021AC  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4704  0021AE  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4705  0021B0  5178               	movf	??_efgtoa& (0+255),w,b
  4706  0021B2  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4707  0021B4  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4708  0021B6  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4709  0021B8  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4710  0021BA  E113               	bnz	l9630
  4711  0021BC  0E1A               	movlw	26
  4712  0021BE  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4713  0021C0  B0D8               	btfsc	status,0,c
  4714  0021C2  D00F               	goto	l9630
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  4718  0021C4  0E98               	movlw	low _dbuf
  4719  0021C6  25A9               	addwf	efgtoa@n& (0+255),w,b
  4720  0021C8  6E15               	movwf	strcpy@dest^0,c
  4721  0021CA  0E01               	movlw	high _dbuf
  4722  0021CC  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4723  0021CE  6E16               	movwf	(strcpy@dest+1)^0,c
  4724  0021D0  0ED9               	movlw	low STR_12
  4725  0021D2  6E17               	movwf	strcpy@src^0,c
  4726  0021D4  5017               	movf	strcpy@src^0,w,c
  4727  0021D6  A4D8               	btfss	status,2,c
  4728  0021D8  0E20               	movlw	high __smallconst
  4729  0021DA  6E18               	movwf	(strcpy@src+1)^0,c
  4730  0021DC  EC5C  F02A         	call	_strcpy	;wreg free
  4731                           
  4732                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  4733  0021E0  D00E               	goto	l9632
  4734  0021E2                     l9630:
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  4738  0021E2  0E98               	movlw	low _dbuf
  4739  0021E4  25A9               	addwf	efgtoa@n& (0+255),w,b
  4740  0021E6  6E15               	movwf	strcpy@dest^0,c
  4741  0021E8  0E01               	movlw	high _dbuf
  4742  0021EA  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4743  0021EC  6E16               	movwf	(strcpy@dest+1)^0,c
  4744  0021EE  0EE1               	movlw	low STR_13
  4745  0021F0  6E17               	movwf	strcpy@src^0,c
  4746  0021F2  5017               	movf	strcpy@src^0,w,c
  4747  0021F4  A4D8               	btfss	status,2,c
  4748  0021F6  0E20               	movlw	high __smallconst
  4749  0021F8  6E18               	movwf	(strcpy@src+1)^0,c
  4750  0021FA  EC5C  F02A         	call	_strcpy	;wreg free
  4751  0021FE                     l9632:
  4752                           
  4753                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  4754  0021FE  0100               	movlb	0	; () banked
  4755  002200  0EFD               	movlw	253
  4756  002202  2796               	addwf	efgtoa@w& (0+255),f,b
  4757  002204  0EFF               	movlw	255
  4758  002206  2397               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4759  002208                     l9634:
  4760                           
  4761                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  4762  002208  C071  F029         	movff	efgtoa@fp,pad@fp
  4763  00220C  C072  F02A         	movff	efgtoa@fp+1,pad@fp+1
  4764  002210  0E98               	movlw	low _dbuf
  4765  002212  6E2B               	movwf	pad@buf^0,c
  4766  002214  0E01               	movlw	high _dbuf
  4767  002216  6E2C               	movwf	(pad@buf+1)^0,c
  4768  002218  C096  F02D         	movff	efgtoa@w,pad@p
  4769  00221C  C097  F02E         	movff	efgtoa@w+1,pad@p+1
  4770  002220  EC59  F028         	call	_pad	;wreg free
  4771  002224  C029  F071         	movff	?_pad,?_efgtoa
  4772  002228  C02A  F072         	movff	?_pad+1,?_efgtoa+1
  4773  00222C  0012               	return	
  4774  00222E                     l9638:
  4775                           
  4776                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  4777  00222E  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4778  002232  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4779  002236  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4780  00223A  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4781  00223E  EC7A  F025         	call	___fpclassifyf	;wreg free
  4782  002242  5015               	movf	?___fpclassifyf^0,w,c
  4783  002244  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4784  002246  A4D8               	btfss	status,2,c
  4785  002248  D030               	goto	l9656
  4786  00224A  0EBF               	movlw	191
  4787  00224C  0100               	movlb	0	; () banked
  4788  00224E  6F78               	movwf	??_efgtoa& (0+255),b
  4789  002250  0EFF               	movlw	255
  4790  002252  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4791  002254  5177               	movf	efgtoa@c& (0+255),w,b
  4792  002256  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4793  002258  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4794  00225A  5178               	movf	??_efgtoa& (0+255),w,b
  4795  00225C  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4796  00225E  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4797  002260  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4798  002262  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4799  002264  E113               	bnz	l9648
  4800  002266  0E1A               	movlw	26
  4801  002268  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4802  00226A  B0D8               	btfsc	status,0,c
  4803  00226C  D00F               	goto	l9648
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  4807  00226E  0E98               	movlw	low _dbuf
  4808  002270  25A9               	addwf	efgtoa@n& (0+255),w,b
  4809  002272  6E15               	movwf	strcpy@dest^0,c
  4810  002274  0E01               	movlw	high _dbuf
  4811  002276  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4812  002278  6E16               	movwf	(strcpy@dest+1)^0,c
  4813  00227A  0EDD               	movlw	low STR_16
  4814  00227C  6E17               	movwf	strcpy@src^0,c
  4815  00227E  5017               	movf	strcpy@src^0,w,c
  4816  002280  A4D8               	btfss	status,2,c
  4817  002282  0E20               	movlw	high __smallconst
  4818  002284  6E18               	movwf	(strcpy@src+1)^0,c
  4819  002286  EC5C  F02A         	call	_strcpy	;wreg free
  4820                           
  4821                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  4822  00228A  D7B9               	goto	l9632
  4823  00228C                     l9648:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  4827  00228C  0E98               	movlw	low _dbuf
  4828  00228E  25A9               	addwf	efgtoa@n& (0+255),w,b
  4829  002290  6E15               	movwf	strcpy@dest^0,c
  4830  002292  0E01               	movlw	high _dbuf
  4831  002294  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4832  002296  6E16               	movwf	(strcpy@dest+1)^0,c
  4833  002298  0EE5               	movlw	low STR_17
  4834  00229A  6E17               	movwf	strcpy@src^0,c
  4835  00229C  5017               	movf	strcpy@src^0,w,c
  4836  00229E  A4D8               	btfss	status,2,c
  4837  0022A0  0E20               	movlw	high __smallconst
  4838  0022A2  6E18               	movwf	(strcpy@src+1)^0,c
  4839  0022A4  EC5C  F02A         	call	_strcpy	;wreg free
  4840  0022A8  D7AA               	goto	l9632
  4841  0022AA                     l9656:
  4842                           
  4843                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  4844  0022AA  0E00               	movlw	0
  4845  0022AC  0100               	movlb	0	; () banked
  4846  0022AE  6FAB               	movwf	efgtoa@u& (0+255),b
  4847  0022B0  0E00               	movlw	0
  4848  0022B2  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  4849  0022B4  0E80               	movlw	128
  4850  0022B6  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  4851  0022B8  0E3F               	movlw	63
  4852  0022BA  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  4853                           
  4854                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  4855  0022BC  0E00               	movlw	0
  4856  0022BE  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  4857  0022C0  0E00               	movlw	0
  4858  0022C2  6FA7               	movwf	efgtoa@e& (0+255),b
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  4862  0022C4  C0A1  F015         	movff	efgtoa@g,___fleq@ff1
  4863  0022C8  C0A2  F016         	movff	efgtoa@g+1,___fleq@ff1+1
  4864  0022CC  C0A3  F017         	movff	efgtoa@g+2,___fleq@ff1+2
  4865  0022D0  C0A4  F018         	movff	efgtoa@g+3,___fleq@ff1+3
  4866  0022D4  0E00               	movlw	0
  4867  0022D6  6E19               	movwf	___fleq@ff2^0,c
  4868  0022D8  0E00               	movlw	0
  4869  0022DA  6E1A               	movwf	(___fleq@ff2+1)^0,c
  4870  0022DC  0E00               	movlw	0
  4871  0022DE  6E1B               	movwf	(___fleq@ff2+2)^0,c
  4872  0022E0  0E00               	movlw	0
  4873  0022E2  6E1C               	movwf	(___fleq@ff2+3)^0,c
  4874  0022E4  ECEE  F028         	call	___fleq	;wreg free
  4875  0022E8  A0D8               	btfss	status,0,c
  4876  0022EA  D01D               	goto	l9666
  4877  0022EC  D074               	goto	u11240
  4878  0022EE                     l9662:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  4882  0022EE  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4883  0022F2  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4884  0022F6  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4885  0022FA  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4886  0022FE  0E00               	movlw	0
  4887  002300  6E27               	movwf	___flmul@a^0,c
  4888  002302  0E00               	movlw	0
  4889  002304  6E28               	movwf	(___flmul@a+1)^0,c
  4890  002306  0E20               	movlw	32
  4891  002308  6E29               	movwf	(___flmul@a+2)^0,c
  4892  00230A  0E41               	movlw	65
  4893  00230C  6E2A               	movwf	(___flmul@a+3)^0,c
  4894  00230E  EC9F  F018         	call	___flmul	;wreg free
  4895  002312  C023  F0AB         	movff	?___flmul,efgtoa@u
  4896  002316  C024  F0AC         	movff	?___flmul+1,efgtoa@u+1
  4897  00231A  C025  F0AD         	movff	?___flmul+2,efgtoa@u+2
  4898  00231E  C026  F0AE         	movff	?___flmul+3,efgtoa@u+3
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  4902  002322  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  4903  002324  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  4904  002326                     l9666:
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  4908  002326  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4909  00232A  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4910  00232E  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4911  002332  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4912  002336  0E00               	movlw	0
  4913  002338  6E27               	movwf	___flmul@a^0,c
  4914  00233A  0E00               	movlw	0
  4915  00233C  6E28               	movwf	(___flmul@a+1)^0,c
  4916  00233E  0E20               	movlw	32
  4917  002340  6E29               	movwf	(___flmul@a+2)^0,c
  4918  002342  0E41               	movlw	65
  4919  002344  6E2A               	movwf	(___flmul@a+3)^0,c
  4920  002346  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4921  00234A  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4922  00234E  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4923  002352  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4924  002356  EC9F  F018         	call	___flmul	;wreg free
  4925  00235A  C023  F033         	movff	?___flmul,___flge@ff2
  4926  00235E  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  4927  002362  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  4928  002366  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  4929  00236A  ECAB  F024         	call	___flge	;wreg free
  4930  00236E  A0D8               	btfss	status,0,c
  4931  002370  D01E               	goto	l9672
  4932  002372  D7BD               	goto	l9662
  4933  002374                     l9668:
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  4937  002374  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  4938  002378  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  4939  00237C  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  4940  002380  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  4941  002384  0E00               	movlw	0
  4942  002386  6E19               	movwf	___fldiv@a^0,c
  4943  002388  0E00               	movlw	0
  4944  00238A  6E1A               	movwf	(___fldiv@a+1)^0,c
  4945  00238C  0E20               	movlw	32
  4946  00238E  6E1B               	movwf	(___fldiv@a+2)^0,c
  4947  002390  0E41               	movlw	65
  4948  002392  6E1C               	movwf	(___fldiv@a+3)^0,c
  4949  002394  ECCE  F01B         	call	___fldiv	;wreg free
  4950  002398  C015  F0AB         	movff	?___fldiv,efgtoa@u
  4951  00239C  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  4952  0023A0  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  4953  0023A4  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  4957  0023A8  07A7               	decf	efgtoa@e& (0+255),f,b
  4958  0023AA  A0D8               	btfss	status,0,c
  4959  0023AC  07A8               	decf	(efgtoa@e+1)& (0+255),f,b
  4960  0023AE                     l9672:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  4964  0023AE  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4965  0023B2  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4966  0023B6  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4967  0023BA  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4968  0023BE  C0AB  F033         	movff	efgtoa@u,___flge@ff2
  4969  0023C2  C0AC  F034         	movff	efgtoa@u+1,___flge@ff2+1
  4970  0023C6  C0AD  F035         	movff	efgtoa@u+2,___flge@ff2+2
  4971  0023CA  C0AE  F036         	movff	efgtoa@u+3,___flge@ff2+3
  4972  0023CE  ECAB  F024         	call	___flge	;wreg free
  4973  0023D2  A0D8               	btfss	status,0,c
  4974  0023D4  D7CF               	goto	l9668
  4975  0023D6                     u11240:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  4979  0023D6  C077  F01B         	movff	efgtoa@c,tolower@c
  4980  0023DA  6A1C               	clrf	(tolower@c+1)^0,c
  4981  0023DC  EC79  F02C         	call	_tolower	;wreg free
  4982  0023E0  501B               	movf	?_tolower^0,w,c
  4983  0023E2  6F98               	movwf	efgtoa@mode& (0+255),b
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  4987  0023E4  C098  F095         	movff	efgtoa@mode,efgtoa@nmode
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  4991  0023E8  0E67               	movlw	103
  4992  0023EA  1998               	xorwf	efgtoa@mode& (0+255),w,b
  4993  0023EC  A4D8               	btfss	status,2,c
  4994  0023EE  D019               	goto	l9688
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  4998  0023F0  51F9               	movf	_prec& (0+255),w,b
  4999  0023F2  11FA               	iorwf	(_prec+1)& (0+255),w,b
  5000  0023F4  A4D8               	btfss	status,2,c
  5001  0023F6  D004               	goto	l9684
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  5005  0023F8  0E00               	movlw	0
  5006  0023FA  6FFA               	movwf	(_prec+1)& (0+255),b
  5007  0023FC  0E01               	movlw	1
  5008  0023FE  6FF9               	movwf	_prec& (0+255),b
  5009  002400                     l9684:
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  5013  002400  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  5014  002402  D005               	goto	u11270
  5015  002404  51FA               	movf	(_prec+1)& (0+255),w,b
  5016  002406  E108               	bnz	l1905
  5017  002408  05F9               	decf	_prec& (0+255),w,b
  5018  00240A  B0D8               	btfsc	status,0,c
  5019  00240C  D005               	goto	l1905
  5020  00240E                     u11270:
  5021                           
  5022                           ; BSR set to: 0
  5023  00240E  0E00               	movlw	0
  5024  002410  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5025  002412  0E06               	movlw	6
  5026  002414  6F93               	movwf	efgtoa@p& (0+255),b
  5027  002416  D008               	goto	l9694
  5028  002418                     l1905:
  5029                           
  5030                           ; BSR set to: 0
  5031  002418  C0F9  F093         	movff	_prec,efgtoa@p
  5032  00241C  C0FA  F094         	movff	_prec+1,efgtoa@p+1
  5033  002420  D003               	goto	l9694
  5034  002422                     l9688:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  5038  002422  AFFA               	btfss	(_prec+1)& (0+255),7,b
  5039  002424  D7F9               	goto	l1905
  5040  002426  D7F3               	goto	u11270
  5041  002428                     l9694:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  5045  002428  0E67               	movlw	103
  5046  00242A  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5047  00242C  A4D8               	btfss	status,2,c
  5048  00242E  D022               	goto	l9704
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  5052  002430  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5053  002432  D006               	goto	u11300
  5054  002434  0EFC               	movlw	252
  5055  002436  5DA7               	subwf	efgtoa@e& (0+255),w,b
  5056  002438  0EFF               	movlw	255
  5057  00243A  59A8               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5058  00243C  A0D8               	btfss	status,0,c
  5059  00243E  D018               	goto	l9702
  5060  002440                     u11300:
  5061                           
  5062                           ; BSR set to: 0
  5063  002440  0EFF               	movlw	255
  5064  002442  6F78               	movwf	??_efgtoa& (0+255),b
  5065  002444  0EFF               	movlw	255
  5066  002446  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5067  002448  C093  F07A         	movff	efgtoa@p,??_efgtoa+2
  5068  00244C  C094  F07B         	movff	efgtoa@p+1,??_efgtoa+3
  5069  002450  5178               	movf	??_efgtoa& (0+255),w,b
  5070  002452  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5071  002454  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5072  002456  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5073  002458  51A7               	movf	efgtoa@e& (0+255),w,b
  5074  00245A  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5075  00245C  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5076  00245E  0A80               	xorlw	128
  5077  002460  6F7C               	movwf	(??_efgtoa+4)& (0+255),b
  5078  002462  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5079  002464  0A80               	xorlw	128
  5080  002466  597C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5081  002468  A0D8               	btfss	status,0,c
  5082  00246A  D002               	goto	l9702
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  5086  00246C  0E66               	movlw	102
  5087  00246E  D001               	goto	L4
  5088  002470                     l9702:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  5092  002470  0E65               	movlw	101
  5093  002472                     L4:
  5094  002472  6F95               	movwf	efgtoa@nmode& (0+255),b
  5095  002474                     l9704:
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  5099  002474  C093  F089         	movff	efgtoa@p,efgtoa@m
  5100  002478  C094  F08A         	movff	efgtoa@p+1,efgtoa@m+1
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  5104  00247C  0E67               	movlw	103
  5105  00247E  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5106  002480  A4D8               	btfss	status,2,c
  5107  002482  D005               	goto	u11340
  5108                           
  5109                           ; BSR set to: 0
  5110  002484  0E66               	movlw	102
  5111  002486  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5112  002488  B4D8               	btfsc	status,2,c
  5113                           
  5114                           ; BSR set to: 0
  5115  00248A  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5116  00248C  D002               	goto	l9714
  5117  00248E                     u11340:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  5121  00248E  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5122  002490  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5123  002492                     l9714:
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  5127  002492  0E66               	movlw	102
  5128  002494  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5129  002496  A4D8               	btfss	status,2,c
  5130  002498  D016               	goto	l9724
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  5134  00249A  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5135  00249C  D00C               	goto	l9720
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  5139  00249E  0E00               	movlw	0
  5140  0024A0  6FAB               	movwf	efgtoa@u& (0+255),b
  5141  0024A2  0E00               	movlw	0
  5142  0024A4  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  5143  0024A6  0E80               	movlw	128
  5144  0024A8  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  5145  0024AA  0E3F               	movlw	63
  5146  0024AC  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  5147                           
  5148                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  5149  0024AE  0E00               	movlw	0
  5150  0024B0  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  5151  0024B2  0E00               	movlw	0
  5152  0024B4  6FA7               	movwf	efgtoa@e& (0+255),b
  5153  0024B6                     l9720:
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  5157  0024B6  0E67               	movlw	103
  5158  0024B8  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5159  0024BA  B4D8               	btfsc	status,2,c
  5160  0024BC  D004               	goto	l9724
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  5164  0024BE  51A7               	movf	efgtoa@e& (0+255),w,b
  5165  0024C0  2789               	addwf	efgtoa@m& (0+255),f,b
  5166  0024C2  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5167  0024C4  238A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5168  0024C6                     l9724:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  5172  0024C6  0E00               	movlw	0
  5173  0024C8  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5174  0024CA  0E00               	movlw	0
  5175  0024CC  6FA5               	movwf	efgtoa@i& (0+255),b
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  5179  0024CE  C0A1  F099         	movff	efgtoa@g,efgtoa@h
  5180  0024D2  C0A2  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  5181  0024D6  C0A3  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  5182  0024DA  C0A4  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  5186  0024DE  C0AB  F08B         	movff	efgtoa@u,efgtoa@ou
  5187  0024E2  C0AC  F08C         	movff	efgtoa@u+1,efgtoa@ou+1
  5188  0024E6  C0AD  F08D         	movff	efgtoa@u+2,efgtoa@ou+2
  5189  0024EA  C0AE  F08E         	movff	efgtoa@u+3,efgtoa@ou+3
  5190                           
  5191                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5192  0024EE  D07A               	goto	l9738
  5193  0024F0                     l9730:
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  5197  0024F0  C099  F015         	movff	efgtoa@h,___fldiv@b
  5198  0024F4  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5199  0024F8  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5200  0024FC  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5201  002500  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5202  002504  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5203  002508  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5204  00250C  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5205  002510  ECCE  F01B         	call	___fldiv	;wreg free
  5206  002514  C015  F02E         	movff	?___fldiv,floorf@x
  5207  002518  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5208  00251C  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5209  002520  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5210  002524  ECF7  F01F         	call	_floorf	;wreg free
  5211  002528  C02E  F09D         	movff	?_floorf,efgtoa@l
  5212  00252C  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5213  002530  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5214  002534  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5215                           
  5216                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  5217  002538  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5218  00253C  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5219  002540  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5220  002544  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5221  002548  EC43  F026         	call	___fltol	;wreg free
  5222  00254C  C015  F08F         	movff	?___fltol,efgtoa@d
  5223  002550  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  5227  002554  C099  F02F         	movff	efgtoa@h,___flsub@b
  5228  002558  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5229  00255C  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5230  002560  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5231  002564  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5232  002568  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5233  00256C  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5234  002570  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5235  002574  C09D  F023         	movff	efgtoa@l,___flmul@b
  5236  002578  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5237  00257C  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5238  002580  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5239  002584  EC9F  F018         	call	___flmul	;wreg free
  5240  002588  C023  F033         	movff	?___flmul,___flsub@a
  5241  00258C  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5242  002590  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5243  002594  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5244  002598  EC77  F02B         	call	___flsub	;wreg free
  5245  00259C  C02F  F099         	movff	?___flsub,efgtoa@h
  5246  0025A0  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5247  0025A4  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5248  0025A8  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  5252  0025AC  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5253  0025B0  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5254  0025B4  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5255  0025B8  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5256  0025BC  0E00               	movlw	0
  5257  0025BE  6E19               	movwf	___fldiv@a^0,c
  5258  0025C0  0E00               	movlw	0
  5259  0025C2  6E1A               	movwf	(___fldiv@a+1)^0,c
  5260  0025C4  0E20               	movlw	32
  5261  0025C6  6E1B               	movwf	(___fldiv@a+2)^0,c
  5262  0025C8  0E41               	movlw	65
  5263  0025CA  6E1C               	movwf	(___fldiv@a+3)^0,c
  5264  0025CC  ECCE  F01B         	call	___fldiv	;wreg free
  5265  0025D0  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5266  0025D4  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5267  0025D8  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5268  0025DC  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  5272  0025E0  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5273  0025E2  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5274  0025E4                     l9738:
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5278  0025E4  5189               	movf	efgtoa@m& (0+255),w,b
  5279  0025E6  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5280  0025E8  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5281  0025EA  0A80               	xorlw	128
  5282  0025EC  6F78               	movwf	??_efgtoa& (0+255),b
  5283  0025EE  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5284  0025F0  0A80               	xorlw	128
  5285  0025F2  5978               	subwfb	??_efgtoa& (0+255),w,b
  5286  0025F4  A0D8               	btfss	status,0,c
  5287  0025F6  D77C               	goto	l9730
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  5291  0025F8  C0AB  F023         	movff	efgtoa@u,___flmul@b
  5292  0025FC  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  5293  002600  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  5294  002604  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  5295  002608  0E00               	movlw	0
  5296  00260A  6E27               	movwf	___flmul@a^0,c
  5297  00260C  0E00               	movlw	0
  5298  00260E  6E28               	movwf	(___flmul@a+1)^0,c
  5299  002610  0EA0               	movlw	160
  5300  002612  6E29               	movwf	(___flmul@a+2)^0,c
  5301  002614  0E40               	movlw	64
  5302  002616  6E2A               	movwf	(___flmul@a+3)^0,c
  5303  002618  EC9F  F018         	call	___flmul	;wreg free
  5304  00261C  C023  F09D         	movff	?___flmul,efgtoa@l
  5305  002620  C024  F09E         	movff	?___flmul+1,efgtoa@l+1
  5306  002624  C025  F09F         	movff	?___flmul+2,efgtoa@l+2
  5307  002628  C026  F0A0         	movff	?___flmul+3,efgtoa@l+3
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  5311  00262C  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5312  002630  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5313  002634  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5314  002638  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5315  00263C  C09D  F033         	movff	efgtoa@l,___flge@ff2
  5316  002640  C09E  F034         	movff	efgtoa@l+1,___flge@ff2+1
  5317  002644  C09F  F035         	movff	efgtoa@l+2,___flge@ff2+2
  5318  002648  C0A0  F036         	movff	efgtoa@l+3,___flge@ff2+3
  5319  00264C  ECAB  F024         	call	___flge	;wreg free
  5320  002650  A0D8               	btfss	status,0,c
  5321  002652  D015               	goto	u11410
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  5325                           
  5326                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  5330  002654  C099  F015         	movff	efgtoa@h,___fleq@ff1
  5331  002658  C09A  F016         	movff	efgtoa@h+1,___fleq@ff1+1
  5332  00265C  C09B  F017         	movff	efgtoa@h+2,___fleq@ff1+2
  5333  002660  C09C  F018         	movff	efgtoa@h+3,___fleq@ff1+3
  5334  002664  C09D  F019         	movff	efgtoa@l,___fleq@ff2
  5335  002668  C09E  F01A         	movff	efgtoa@l+1,___fleq@ff2+1
  5336  00266C  C09F  F01B         	movff	efgtoa@l+2,___fleq@ff2+2
  5337  002670  C0A0  F01C         	movff	efgtoa@l+3,___fleq@ff2+3
  5338  002674  ECEE  F028         	call	___fleq	;wreg free
  5339  002678  B0D8               	btfsc	status,0,c
  5340                           
  5341                           ; BSR set to: 0
  5342  00267A  B18F               	btfsc	efgtoa@d& (0+255),0,b
  5343  00267C  D008               	goto	l9752
  5344  00267E                     u11410:
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  5348  00267E  0E00               	movlw	0
  5349  002680  6F9D               	movwf	efgtoa@l& (0+255),b
  5350  002682  0E00               	movlw	0
  5351  002684  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  5352  002686  0E00               	movlw	0
  5353  002688  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  5354  00268A  0E00               	movlw	0
  5355  00268C  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  5356  00268E                     l9752:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  5360  00268E  C0A1  F015         	movff	efgtoa@g,___fladd@b
  5361  002692  C0A2  F016         	movff	efgtoa@g+1,___fladd@b+1
  5362  002696  C0A3  F017         	movff	efgtoa@g+2,___fladd@b+2
  5363  00269A  C0A4  F018         	movff	efgtoa@g+3,___fladd@b+3
  5364  00269E  C09D  F019         	movff	efgtoa@l,___fladd@a
  5365  0026A2  C09E  F01A         	movff	efgtoa@l+1,___fladd@a+1
  5366  0026A6  C09F  F01B         	movff	efgtoa@l+2,___fladd@a+2
  5367  0026AA  C0A0  F01C         	movff	efgtoa@l+3,___fladd@a+3
  5368  0026AE  EC48  F01A         	call	___fladd	;wreg free
  5369  0026B2  C015  F099         	movff	?___fladd,efgtoa@h
  5370  0026B6  C016  F09A         	movff	?___fladd+1,efgtoa@h+1
  5371  0026BA  C017  F09B         	movff	?___fladd+2,efgtoa@h+2
  5372  0026BE  C018  F09C         	movff	?___fladd+3,efgtoa@h+3
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  5376  0026C2  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5377  0026C6  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5378  0026CA  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5379  0026CE  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5380  0026D2  0E00               	movlw	0
  5381  0026D4  6E27               	movwf	___flmul@a^0,c
  5382  0026D6  0E00               	movlw	0
  5383  0026D8  6E28               	movwf	(___flmul@a+1)^0,c
  5384  0026DA  0E20               	movlw	32
  5385  0026DC  6E29               	movwf	(___flmul@a+2)^0,c
  5386  0026DE  0E41               	movlw	65
  5387  0026E0  6E2A               	movwf	(___flmul@a+3)^0,c
  5388  0026E2  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5389  0026E6  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5390  0026EA  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5391  0026EE  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5392  0026F2  EC9F  F018         	call	___flmul	;wreg free
  5393  0026F6  C023  F033         	movff	?___flmul,___flge@ff2
  5394  0026FA  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  5395  0026FE  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  5396  002702  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  5397  002706  ECAB  F024         	call	___flge	;wreg free
  5398  00270A  A0D8               	btfss	status,0,c
  5399  00270C  D022               	goto	l9764
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  5403  00270E  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  5404  002710  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  5408  002712  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5409  002716  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5410  00271A  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5411  00271E  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5412  002722  0E00               	movlw	0
  5413  002724  6E27               	movwf	___flmul@a^0,c
  5414  002726  0E00               	movlw	0
  5415  002728  6E28               	movwf	(___flmul@a+1)^0,c
  5416  00272A  0E20               	movlw	32
  5417  00272C  6E29               	movwf	(___flmul@a+2)^0,c
  5418  00272E  0E41               	movlw	65
  5419  002730  6E2A               	movwf	(___flmul@a+3)^0,c
  5420  002732  EC9F  F018         	call	___flmul	;wreg free
  5421  002736  C023  F08B         	movff	?___flmul,efgtoa@ou
  5422  00273A  C024  F08C         	movff	?___flmul+1,efgtoa@ou+1
  5423  00273E  C025  F08D         	movff	?___flmul+2,efgtoa@ou+2
  5424  002742  C026  F08E         	movff	?___flmul+3,efgtoa@ou+3
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  5428  002746  0E66               	movlw	102
  5429  002748  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5430  00274A  A4D8               	btfss	status,2,c
  5431  00274C  D002               	goto	l9764
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  5435  00274E  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5436  002750  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5437  002752                     l9764:
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  5441  002752  C08B  F0AB         	movff	efgtoa@ou,efgtoa@u
  5442  002756  C08C  F0AC         	movff	efgtoa@ou+1,efgtoa@u+1
  5443  00275A  C08D  F0AD         	movff	efgtoa@ou+2,efgtoa@u+2
  5444  00275E  C08E  F0AE         	movff	efgtoa@ou+3,efgtoa@u+3
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  5448  002762  0E65               	movlw	101
  5449  002764  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5450  002766  B4D8               	btfsc	status,2,c
  5451  002768  D005               	goto	l9770
  5452                           
  5453                           ; BSR set to: 0
  5454  00276A  C0A7  F087         	movff	efgtoa@e,efgtoa@ne
  5455  00276E  C0A8  F088         	movff	efgtoa@e+1,efgtoa@ne+1
  5456  002772  D004               	goto	l1933
  5457  002774                     l9770:
  5458                           
  5459                           ; BSR set to: 0
  5460  002774  0E00               	movlw	0
  5461  002776  6F88               	movwf	(efgtoa@ne+1)& (0+255),b
  5462  002778  0E00               	movlw	0
  5463  00277A  6F87               	movwf	efgtoa@ne& (0+255),b
  5464  00277C                     l1933:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  5468  00277C  0E00               	movlw	0
  5469  00277E  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5470  002780  0E00               	movlw	0
  5471  002782  6F85               	movwf	efgtoa@pp& (0+255),b
  5472                           
  5473                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  5474  002784  0E00               	movlw	0
  5475  002786  6F84               	movwf	(efgtoa@t+1)& (0+255),b
  5476  002788  0E00               	movlw	0
  5477  00278A  6F83               	movwf	efgtoa@t& (0+255),b
  5478                           
  5479                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  5480  00278C  0E00               	movlw	0
  5481  00278E  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5482  002790  0E00               	movlw	0
  5483  002792  6FA5               	movwf	efgtoa@i& (0+255),b
  5484                           
  5485                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5486  002794  D0C4               	goto	l9820
  5487  002796                     l9772:
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  5491  002796  C099  F015         	movff	efgtoa@h,___fldiv@b
  5492  00279A  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5493  00279E  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5494  0027A2  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5495  0027A6  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5496  0027AA  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5497  0027AE  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5498  0027B2  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5499  0027B6  ECCE  F01B         	call	___fldiv	;wreg free
  5500  0027BA  C015  F02E         	movff	?___fldiv,floorf@x
  5501  0027BE  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5502  0027C2  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5503  0027C6  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5504  0027CA  ECF7  F01F         	call	_floorf	;wreg free
  5505  0027CE  C02E  F09D         	movff	?_floorf,efgtoa@l
  5506  0027D2  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5507  0027D6  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5508  0027DA  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5509                           
  5510                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  5511  0027DE  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5512  0027E2  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5513  0027E6  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5514  0027EA  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5515  0027EE  EC43  F026         	call	___fltol	;wreg free
  5516  0027F2  C015  F08F         	movff	?___fltol,efgtoa@d
  5517  0027F6  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5521  0027FA  B83D               	btfsc	_flags^0,4,c
  5522  0027FC  D00C               	goto	l9784
  5523                           
  5524                           ; BSR set to: 0
  5525  0027FE  518F               	movf	efgtoa@d& (0+255),w,b
  5526  002800  1190               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5527  002802  A4D8               	btfss	status,2,c
  5528  002804  D008               	goto	l9784
  5529                           
  5530                           ; BSR set to: 0
  5531  002806  0E67               	movlw	103
  5532  002808  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5533  00280A  B4D8               	btfsc	status,2,c
  5534                           
  5535                           ; BSR set to: 0
  5536  00280C  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5537  00280E  D003               	goto	l9784
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  5541  002810  4B83               	infsnz	efgtoa@t& (0+255),f,b
  5542  002812  2B84               	incf	(efgtoa@t+1)& (0+255),f,b
  5543                           
  5544                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  5545  002814  D039               	goto	l9812
  5546  002816                     l9784:
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  5550  002816  5185               	movf	efgtoa@pp& (0+255),w,b
  5551  002818  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5552  00281A  B4D8               	btfsc	status,2,c
  5553                           
  5554                           ; BSR set to: 0
  5555  00281C  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5556  00281E  D022               	goto	l9804
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  5560  002820  0E98               	movlw	low _dbuf
  5561  002822  25A9               	addwf	efgtoa@n& (0+255),w,b
  5562  002824  6ED9               	movwf	fsr2l,c
  5563  002826  0E01               	movlw	high _dbuf
  5564  002828  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5565  00282A  6EDA               	movwf	fsr2h,c
  5566  00282C  0E2E               	movlw	46
  5567  00282E  6EDF               	movwf	indf2,c
  5568                           
  5569                           ; BSR set to: 0
  5570  002830  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5571  002832  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  5575  002834  0796               	decf	efgtoa@w& (0+255),f,b
  5576  002836  A0D8               	btfss	status,0,c
  5577  002838  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  5581  00283A  0E00               	movlw	0
  5582  00283C  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5583  00283E  0E01               	movlw	1
  5584  002840  6F85               	movwf	efgtoa@pp& (0+255),b
  5585  002842  D010               	goto	l9804
  5586  002844                     l9796:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  5590  002844  0E98               	movlw	low _dbuf
  5591  002846  25A9               	addwf	efgtoa@n& (0+255),w,b
  5592  002848  6ED9               	movwf	fsr2l,c
  5593  00284A  0E01               	movlw	high _dbuf
  5594  00284C  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5595  00284E  6EDA               	movwf	fsr2h,c
  5596  002850  0E30               	movlw	48
  5597  002852  6EDF               	movwf	indf2,c
  5598                           
  5599                           ; BSR set to: 0
  5600  002854  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5601  002856  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  5605  002858  0796               	decf	efgtoa@w& (0+255),f,b
  5606  00285A  A0D8               	btfss	status,0,c
  5607  00285C  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  5611  00285E  0783               	decf	efgtoa@t& (0+255),f,b
  5612  002860  A0D8               	btfss	status,0,c
  5613  002862  0784               	decf	(efgtoa@t+1)& (0+255),f,b
  5614  002864                     l9804:
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  5618  002864  5183               	movf	efgtoa@t& (0+255),w,b
  5619  002866  1184               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5620  002868  A4D8               	btfss	status,2,c
  5621  00286A  D7EC               	goto	l9796
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  5625  00286C  0E98               	movlw	low _dbuf
  5626  00286E  25A9               	addwf	efgtoa@n& (0+255),w,b
  5627  002870  6ED9               	movwf	fsr2l,c
  5628  002872  0E01               	movlw	high _dbuf
  5629  002874  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5630  002876  6EDA               	movwf	fsr2h,c
  5631  002878  518F               	movf	efgtoa@d& (0+255),w,b
  5632  00287A  0F30               	addlw	48
  5633  00287C  6EDF               	movwf	indf2,c
  5634                           
  5635                           ; BSR set to: 0
  5636  00287E  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5637  002880  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  5641  002882  0796               	decf	efgtoa@w& (0+255),f,b
  5642  002884  A0D8               	btfss	status,0,c
  5643  002886  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5644  002888                     l9812:
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  5648  002888  C099  F02F         	movff	efgtoa@h,___flsub@b
  5649  00288C  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5650  002890  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5651  002894  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5652  002898  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5653  00289C  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5654  0028A0  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5655  0028A4  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5656  0028A8  C09D  F023         	movff	efgtoa@l,___flmul@b
  5657  0028AC  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5658  0028B0  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5659  0028B4  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5660  0028B8  EC9F  F018         	call	___flmul	;wreg free
  5661  0028BC  C023  F033         	movff	?___flmul,___flsub@a
  5662  0028C0  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5663  0028C4  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5664  0028C8  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5665  0028CC  EC77  F02B         	call	___flsub	;wreg free
  5666  0028D0  C02F  F099         	movff	?___flsub,efgtoa@h
  5667  0028D4  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5668  0028D8  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5669  0028DC  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  5673  0028E0  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5674  0028E4  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5675  0028E8  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5676  0028EC  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5677  0028F0  0E00               	movlw	0
  5678  0028F2  6E19               	movwf	___fldiv@a^0,c
  5679  0028F4  0E00               	movlw	0
  5680  0028F6  6E1A               	movwf	(___fldiv@a+1)^0,c
  5681  0028F8  0E20               	movlw	32
  5682  0028FA  6E1B               	movwf	(___fldiv@a+2)^0,c
  5683  0028FC  0E41               	movlw	65
  5684  0028FE  6E1C               	movwf	(___fldiv@a+3)^0,c
  5685  002900  ECCE  F01B         	call	___fldiv	;wreg free
  5686  002904  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5687  002908  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5688  00290C  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5689  002910  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  5693  002914  0787               	decf	efgtoa@ne& (0+255),f,b
  5694  002916  A0D8               	btfss	status,0,c
  5695  002918  0788               	decf	(efgtoa@ne+1)& (0+255),f,b
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  5699  00291A  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5700  00291C  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5701  00291E                     l9820:
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5705  00291E  5189               	movf	efgtoa@m& (0+255),w,b
  5706  002920  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5707  002922  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5708  002924  0A80               	xorlw	128
  5709  002926  6F78               	movwf	??_efgtoa& (0+255),b
  5710  002928  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5711  00292A  0A80               	xorlw	128
  5712  00292C  5978               	subwfb	??_efgtoa& (0+255),w,b
  5713  00292E  B0D8               	btfsc	status,0,c
  5714  002930  D008               	goto	u11530
  5715                           
  5716                           ; BSR set to: 0
  5717  002932  BFAA               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5718  002934  D730               	goto	l9772
  5719  002936  51AA               	movf	(efgtoa@n+1)& (0+255),w,b
  5720  002938  E104               	bnz	u11530
  5721  00293A  0E4B               	movlw	75
  5722  00293C  5DA9               	subwf	efgtoa@n& (0+255),w,b
  5723  00293E  A0D8               	btfss	status,0,c
  5724  002940  D72A               	goto	l9772
  5725  002942                     u11530:
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  5729  002942  5185               	movf	efgtoa@pp& (0+255),w,b
  5730  002944  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5731  002946  B4D8               	btfsc	status,2,c
  5732                           
  5733                           ; BSR set to: 0
  5734  002948  A83D               	btfss	_flags^0,4,c
  5735  00294A  D00A               	goto	l9832
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  5739  00294C  0E98               	movlw	low _dbuf
  5740  00294E  25A9               	addwf	efgtoa@n& (0+255),w,b
  5741  002950  6ED9               	movwf	fsr2l,c
  5742  002952  0E01               	movlw	high _dbuf
  5743  002954  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5744  002956  6EDA               	movwf	fsr2h,c
  5745  002958  0E2E               	movlw	46
  5746  00295A  6EDF               	movwf	indf2,c
  5747                           
  5748                           ; BSR set to: 0
  5749  00295C  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5750  00295E  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5751  002960                     l9832:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  5755  002960  0E98               	movlw	low _dbuf
  5756  002962  25A9               	addwf	efgtoa@n& (0+255),w,b
  5757  002964  6ED9               	movwf	fsr2l,c
  5758  002966  0E01               	movlw	high _dbuf
  5759  002968  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5760  00296A  6EDA               	movwf	fsr2h,c
  5761  00296C  0E00               	movlw	0
  5762  00296E  6EDF               	movwf	indf2,c
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  5766  002970  0E65               	movlw	101
  5767  002972  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5768  002974  A4D8               	btfss	status,2,c
  5769  002976  D448               	goto	l9634
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  5773  002978  0E00               	movlw	0
  5774  00297A  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5775  00297C  0E4F               	movlw	79
  5776  00297E  6FA5               	movwf	efgtoa@i& (0+255),b
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  5780  002980  0E98               	movlw	low _dbuf
  5781  002982  25A5               	addwf	efgtoa@i& (0+255),w,b
  5782  002984  6ED9               	movwf	fsr2l,c
  5783  002986  0E01               	movlw	high _dbuf
  5784  002988  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5785  00298A  6EDA               	movwf	fsr2h,c
  5786  00298C  0E00               	movlw	0
  5787  00298E  6EDF               	movwf	indf2,c
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  5791  002990  0E00               	movlw	0
  5792  002992  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5793  002994  0E00               	movlw	0
  5794  002996  6F91               	movwf	efgtoa@sign& (0+255),b
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  5798  002998  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5799  00299A  D008               	goto	l9848
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  5803  00299C  0E00               	movlw	0
  5804  00299E  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5805  0029A0  0E01               	movlw	1
  5806  0029A2  6F91               	movwf	efgtoa@sign& (0+255),b
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  5810  0029A4  6DA7               	negf	efgtoa@e& (0+255),b
  5811  0029A6  1FA8               	comf	(efgtoa@e+1)& (0+255),f,b
  5812  0029A8  B0D8               	btfsc	status,0,c
  5813  0029AA  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5814  0029AC                     l9848:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  5818  0029AC  0E00               	movlw	0
  5819  0029AE  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5820  0029B0  0E02               	movlw	2
  5821  0029B2  6F93               	movwf	efgtoa@p& (0+255),b
  5822                           
  5823                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5824  0029B4  D02A               	goto	l9860
  5825  0029B6                     l9850:
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  5829  0029B6  07A5               	decf	efgtoa@i& (0+255),f,b
  5830  0029B8  A0D8               	btfss	status,0,c
  5831  0029BA  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  5835  0029BC  0E98               	movlw	low _dbuf
  5836  0029BE  25A5               	addwf	efgtoa@i& (0+255),w,b
  5837  0029C0  6ED9               	movwf	fsr2l,c
  5838  0029C2  0E01               	movlw	high _dbuf
  5839  0029C4  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5840  0029C6  6EDA               	movwf	fsr2h,c
  5841  0029C8  C0A7  F015         	movff	efgtoa@e,___awmod@dividend
  5842  0029CC  C0A8  F016         	movff	efgtoa@e+1,___awmod@dividend+1
  5843  0029D0  0E00               	movlw	0
  5844  0029D2  6E18               	movwf	(___awmod@divisor+1)^0,c
  5845  0029D4  0E0A               	movlw	10
  5846  0029D6  6E17               	movwf	___awmod@divisor^0,c
  5847  0029D8  ECF0  F029         	call	___awmod	;wreg free
  5848  0029DC  5015               	movf	?___awmod^0,w,c
  5849  0029DE  0F30               	addlw	48
  5850  0029E0  6EDF               	movwf	indf2,c
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  5854  0029E2  C0A7  F015         	movff	efgtoa@e,___awdiv@dividend
  5855  0029E6  C0A8  F016         	movff	efgtoa@e+1,___awdiv@dividend+1
  5856  0029EA  0E00               	movlw	0
  5857  0029EC  6E18               	movwf	(___awdiv@divisor+1)^0,c
  5858  0029EE  0E0A               	movlw	10
  5859  0029F0  6E17               	movwf	___awdiv@divisor^0,c
  5860  0029F2  EC75  F029         	call	___awdiv	;wreg free
  5861  0029F6  C015  F0A7         	movff	?___awdiv,efgtoa@e
  5862  0029FA  C016  F0A8         	movff	?___awdiv+1,efgtoa@e+1
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  5866  0029FE  0793               	decf	efgtoa@p& (0+255),f,b
  5867  002A00  A0D8               	btfss	status,0,c
  5868  002A02  0794               	decf	(efgtoa@p+1)& (0+255),f,b
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  5872  002A04  0796               	decf	efgtoa@w& (0+255),f,b
  5873  002A06  A0D8               	btfss	status,0,c
  5874  002A08  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5875  002A0A                     l9860:
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5879  002A0A  51A7               	movf	efgtoa@e& (0+255),w,b
  5880  002A0C  11A8               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5881  002A0E  A4D8               	btfss	status,2,c
  5882  002A10  D7D2               	goto	l9850
  5883                           
  5884                           ; BSR set to: 0
  5885  002A12  BF94               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5886  002A14  D005               	goto	u11590
  5887  002A16  5194               	movf	(efgtoa@p+1)& (0+255),w,b
  5888  002A18  E1CE               	bnz	l9850
  5889  002A1A  0593               	decf	efgtoa@p& (0+255),w,b
  5890  002A1C  B0D8               	btfsc	status,0,c
  5891  002A1E  D7CB               	goto	l9850
  5892  002A20                     u11590:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  5896  002A20  07A5               	decf	efgtoa@i& (0+255),f,b
  5897  002A22  A0D8               	btfss	status,0,c
  5898  002A24  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  5902  002A26  5191               	movf	efgtoa@sign& (0+255),w,b
  5903  002A28  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5904  002A2A  A4D8               	btfss	status,2,c
  5905  002A2C  D004               	goto	l9870
  5906                           
  5907                           ; BSR set to: 0
  5908  002A2E  0E00               	movlw	0
  5909  002A30  6F80               	movwf	(_efgtoa$2731+1)& (0+255),b
  5910  002A32  0E2B               	movlw	43
  5911  002A34  D003               	goto	L5
  5912  002A36                     l9870:
  5913                           
  5914                           ; BSR set to: 0
  5915  002A36  0E00               	movlw	0
  5916  002A38  6F80               	movwf	(_efgtoa$2731+1)& (0+255),b
  5917  002A3A  0E2D               	movlw	45
  5918  002A3C                     L5:
  5919  002A3C  6F7F               	movwf	_efgtoa$2731& (0+255),b
  5920                           
  5921                           ; BSR set to: 0
  5922  002A3E  0E98               	movlw	low _dbuf
  5923  002A40  25A5               	addwf	efgtoa@i& (0+255),w,b
  5924  002A42  6ED9               	movwf	fsr2l,c
  5925  002A44  0E01               	movlw	high _dbuf
  5926  002A46  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5927  002A48  6EDA               	movwf	fsr2h,c
  5928  002A4A  0060  F1FF  FFDF   	movff	_efgtoa$2731,indf2
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  5932  002A50  0796               	decf	efgtoa@w& (0+255),f,b
  5933  002A52  A0D8               	btfss	status,0,c
  5934  002A54  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  5938  002A56  07A5               	decf	efgtoa@i& (0+255),f,b
  5939  002A58  A0D8               	btfss	status,0,c
  5940  002A5A  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5941                           
  5942                           ; BSR set to: 0
  5943                           
  5944                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5945  002A5C  0EBF               	movlw	191
  5946  002A5E  6F78               	movwf	??_efgtoa& (0+255),b
  5947  002A60  0EFF               	movlw	255
  5948  002A62  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5949  002A64  5177               	movf	efgtoa@c& (0+255),w,b
  5950  002A66  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  5951  002A68  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  5952  002A6A  5178               	movf	??_efgtoa& (0+255),w,b
  5953  002A6C  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5954  002A6E  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5955  002A70  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5956  002A72  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5957  002A74  E104               	bnz	u11610
  5958  002A76  0E1A               	movlw	26
  5959  002A78  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5960  002A7A  A0D8               	btfss	status,0,c
  5961  002A7C  D004               	goto	l9884
  5962  002A7E                     u11610:
  5963                           
  5964                           ; BSR set to: 0
  5965  002A7E  0E00               	movlw	0
  5966  002A80  6F82               	movwf	(_efgtoa$2732+1)& (0+255),b
  5967  002A82  0E65               	movlw	101
  5968  002A84  D003               	goto	L6
  5969  002A86                     l9884:
  5970                           
  5971                           ; BSR set to: 0
  5972  002A86  0E00               	movlw	0
  5973  002A88  6F82               	movwf	(_efgtoa$2732+1)& (0+255),b
  5974  002A8A  0E45               	movlw	69
  5975  002A8C                     L6:
  5976  002A8C  6F81               	movwf	_efgtoa$2732& (0+255),b
  5977                           
  5978                           ; BSR set to: 0
  5979  002A8E  0E98               	movlw	low _dbuf
  5980  002A90  25A5               	addwf	efgtoa@i& (0+255),w,b
  5981  002A92  6ED9               	movwf	fsr2l,c
  5982  002A94  0E01               	movlw	high _dbuf
  5983  002A96  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5984  002A98  6EDA               	movwf	fsr2h,c
  5985  002A9A  0060  F207  FFDF   	movff	_efgtoa$2732,indf2
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  5989  002AA0  0796               	decf	efgtoa@w& (0+255),f,b
  5990  002AA2  A0D8               	btfss	status,0,c
  5991  002AA4  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  5995  002AA6  0E98               	movlw	low _dbuf
  5996  002AA8  25A9               	addwf	efgtoa@n& (0+255),w,b
  5997  002AAA  6E15               	movwf	strcpy@dest^0,c
  5998  002AAC  0E01               	movlw	high _dbuf
  5999  002AAE  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6000  002AB0  6E16               	movwf	(strcpy@dest+1)^0,c
  6001  002AB2  0E98               	movlw	low _dbuf
  6002  002AB4  25A5               	addwf	efgtoa@i& (0+255),w,b
  6003  002AB6  6E17               	movwf	strcpy@src^0,c
  6004  002AB8  0E01               	movlw	high _dbuf
  6005  002ABA  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6006  002ABC  6E18               	movwf	(strcpy@src+1)^0,c
  6007  002ABE  EC5C  F02A         	call	_strcpy	;wreg free
  6008  002AC2  EF04  F011         	goto	l9634
  6009  002AC6                     __end_of_efgtoa:
  6010                           	callstack 0
  6011                           
  6012 ;; *************** function _tolower *****************
  6013 ;; Defined at:
  6014 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  c               2   26[COMRAM] int 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  2   26[COMRAM] int 
  6021 ;; Registers used:
  6022 ;;		wreg, status,2, status,0
  6023 ;; Tracked objects:
  6024 ;;		On entry : 3F/0
  6025 ;;		On exit  : 3F/0
  6026 ;;		Unchanged: 3F/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6030 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6032 ;;Total ram usage:        6 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; Hardware stack levels required when called: 5
  6035 ;; This function calls:
  6036 ;;		_isupper
  6037 ;; This function is called by:
  6038 ;;		_efgtoa
  6039 ;;		_vfpfcnvrt
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text12
  6044  0058F2                     __ptext12:
  6045                           	callstack 0
  6046  0058F2                     _tolower:
  6047                           	callstack 20
  6048                           
  6049                           ; BSR set to: 0
  6050                           
  6051                           ; BSR set to: 0
  6052                           
  6053                           ;incstack = 0
  6054  0058F2  0EBF               	movlw	191
  6055  0058F4  6E1D               	movwf	??_tolower^0,c
  6056  0058F6  0EFF               	movlw	255
  6057  0058F8  6E1E               	movwf	(??_tolower+1)^0,c
  6058  0058FA  C01B  F01F         	movff	tolower@c,??_tolower+2
  6059  0058FE  C01C  F020         	movff	tolower@c+1,??_tolower+3
  6060  005902  501D               	movf	??_tolower^0,w,c
  6061  005904  261F               	addwf	(??_tolower+2)^0,f,c
  6062  005906  501E               	movf	(??_tolower+1)^0,w,c
  6063  005908  2220               	addwfc	(??_tolower+3)^0,f,c
  6064  00590A  5020               	movf	(??_tolower+3)^0,w,c
  6065  00590C  E10A               	bnz	l2184
  6066  00590E  0E1A               	movlw	26
  6067  005910  5C1F               	subwf	(??_tolower+2)^0,w,c
  6068  005912  B0D8               	btfsc	status,0,c
  6069  005914  D006               	goto	l2184
  6070                           
  6071                           ; BSR set to: 0
  6072  005916  0E20               	movlw	32
  6073  005918  101B               	iorwf	tolower@c^0,w,c
  6074  00591A  6E1B               	movwf	?_tolower^0,c
  6075  00591C  501C               	movf	(tolower@c+1)^0,w,c
  6076  00591E  6E1C               	movwf	(?_tolower+1)^0,c
  6077  005920  0012               	return	
  6078  005922                     l2184:
  6079                           
  6080                           ; BSR set to: 0
  6081  005922  C01B  F01B         	movff	tolower@c,?_tolower
  6082  005926  C01C  F01C         	movff	tolower@c+1,?_tolower+1
  6083                           
  6084                           ; BSR set to: 0
  6085  00592A  0012               	return		;funcret
  6086  00592C                     __end_of_tolower:
  6087                           	callstack 0
  6088                           
  6089 ;; *************** function _isupper *****************
  6090 ;; Defined at:
  6091 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  c               2   20[COMRAM] int 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  2   20[COMRAM] int 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6107 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6108 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6109 ;;Total ram usage:        6 bytes
  6110 ;; Hardware stack levels used: 1
  6111 ;; Hardware stack levels required when called: 4
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_efgtoa
  6116 ;;		_vfpfcnvrt
  6117 ;;		_tolower
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text13
  6122  0059DA                     __ptext13:
  6123                           	callstack 0
  6124  0059DA                     _isupper:
  6125                           	callstack 20
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;incstack = 0
  6129  0059DA  0EBF               	movlw	191
  6130  0059DC  6E17               	movwf	??_isupper^0,c
  6131  0059DE  0EFF               	movlw	255
  6132  0059E0  6E18               	movwf	(??_isupper+1)^0,c
  6133  0059E2  C015  F019         	movff	isupper@c,??_isupper+2
  6134  0059E6  C016  F01A         	movff	isupper@c+1,??_isupper+3
  6135  0059EA  5017               	movf	??_isupper^0,w,c
  6136  0059EC  2619               	addwf	(??_isupper+2)^0,f,c
  6137  0059EE  5018               	movf	(??_isupper+1)^0,w,c
  6138  0059F0  221A               	addwfc	(??_isupper+3)^0,f,c
  6139  0059F2  501A               	movf	(??_isupper+3)^0,w,c
  6140  0059F4  E106               	bnz	u9980
  6141  0059F6  0E1A               	movlw	26
  6142  0059F8  5C19               	subwf	(??_isupper+2)^0,w,c
  6143  0059FA  B0D8               	btfsc	status,0,c
  6144  0059FC  D002               	goto	u9980
  6145  0059FE  0E01               	movlw	1
  6146  005A00  D001               	goto	u9990
  6147  005A02                     u9980:
  6148  005A02  0E00               	movlw	0
  6149  005A04                     u9990:
  6150  005A04  6E15               	movwf	?_isupper^0,c
  6151  005A06  6A16               	clrf	(?_isupper+1)^0,c
  6152  005A08  0012               	return		;funcret
  6153  005A0A                     __end_of_isupper:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function _strcpy *****************
  6157 ;; Defined at:
  6158 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  dest            2   20[COMRAM] PTR unsigned char 
  6161 ;;		 -> dbuf(80), 
  6162 ;;  src             2   22[COMRAM] PTR const unsigned char 
  6163 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  6164 ;;		 -> dbuf(80), 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  d               2   28[COMRAM] PTR unsigned char 
  6167 ;;		 -> dbuf(80), 
  6168 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6169 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  6170 ;;		 -> dbuf(80), 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  2   20[COMRAM] PTR unsigned char 
  6173 ;; Registers used:
  6174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6175 ;; Tracked objects:
  6176 ;;		On entry : 3F/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6181 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6183 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6184 ;;Total ram usage:       10 bytes
  6185 ;; Hardware stack levels used: 1
  6186 ;; Hardware stack levels required when called: 4
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_efgtoa
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text14
  6195  0054B8                     __ptext14:
  6196                           	callstack 0
  6197  0054B8                     _strcpy:
  6198                           	callstack 20
  6199                           
  6200                           ; BSR set to: 0
  6201                           
  6202                           ;incstack = 0
  6203  0054B8  C017  F01B         	movff	strcpy@src,strcpy@s
  6204  0054BC  C018  F01C         	movff	strcpy@src+1,strcpy@s+1
  6205  0054C0  C015  F01D         	movff	strcpy@dest,strcpy@d
  6206  0054C4  C016  F01E         	movff	strcpy@dest+1,strcpy@d+1
  6207  0054C8                     l9514:
  6208  0054C8  501B               	movf	strcpy@s^0,w,c
  6209  0054CA  6E19               	movwf	??_strcpy^0,c
  6210  0054CC  501C               	movf	(strcpy@s+1)^0,w,c
  6211  0054CE  6E1A               	movwf	(??_strcpy+1)^0,c
  6212  0054D0  4A1B               	infsnz	strcpy@s^0,f,c
  6213  0054D2  2A1C               	incf	(strcpy@s+1)^0,f,c
  6214  0054D4  0060  F067  FFF6   	movff	??_strcpy,tblptrl
  6215  0054DA  0060  F06B  FFF7   	movff	??_strcpy+1,tblptrh
  6216  0054E0  0E00               	movlw	low (__smallconst shr (0+16))
  6217  0054E2  6EF8               	movwf	tblptru,c
  6218  0054E4  0060  F077  FFD9   	movff	strcpy@d,fsr2l
  6219  0054EA  0060  F07B  FFDA   	movff	strcpy@d+1,fsr2h
  6220  0054F0  4A1D               	infsnz	strcpy@d^0,f,c
  6221  0054F2  2A1E               	incf	(strcpy@d+1)^0,f,c
  6222  0054F4  0E1F               	movlw	(high __ramtop+-1)
  6223  0054F6  64F7               	cpfsgt	tblptrh,c
  6224  0054F8  D003               	bra	u10877
  6225  0054FA  0008               	tblrd		*
  6226  0054FC  50F5               	movf	tablat,w,c
  6227  0054FE  D007               	bra	u10870
  6228  005500                     u10877:
  6229  005500  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6230  005506  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6231  00550C  50E7               	movf	indf1,w,c
  6232  00550E                     u10870:
  6233  00550E  6EDF               	movwf	indf2,c
  6234  005510  50DF               	movf	indf2,w,c
  6235  005512  B4D8               	btfsc	status,2,c
  6236  005514  0012               	return	
  6237  005516  D7D8               	goto	l9514
  6238  005518                     __end_of_strcpy:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _pad *****************
  6242 ;; Defined at:
  6243 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  6246 ;;		 -> sprintf@f(11), NULL(0), 
  6247 ;;  buf             2   42[COMRAM] PTR unsigned char 
  6248 ;;		 -> dbuf(80), 
  6249 ;;  p               2   44[COMRAM] int 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  w               2   49[COMRAM] int 
  6252 ;;  i               2   47[COMRAM] int 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  2   40[COMRAM] int 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6262 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6263 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6265 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6266 ;;Total ram usage:       11 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; Hardware stack levels required when called: 8
  6269 ;; This function calls:
  6270 ;;		_fputc
  6271 ;;		_fputs
  6272 ;;		_strlen
  6273 ;; This function is called by:
  6274 ;;		_efgtoa
  6275 ;;		_utoa
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text15
  6280  0050B2                     __ptext15:
  6281                           	callstack 0
  6282  0050B2                     _pad:
  6283                           	callstack 16
  6284                           
  6285                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6286                           
  6287                           ;incstack = 0
  6288  0050B2  A03D               	btfss	_flags^0,0,c
  6289  0050B4  D00A               	goto	l9472
  6290                           
  6291                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6292  0050B6  C02B  F020         	movff	pad@buf,fputs@s
  6293  0050BA  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6294  0050BE  C029  F022         	movff	pad@fp,fputs@fp
  6295  0050C2  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6296  0050C6  EC28  F02A         	call	_fputs	;wreg free
  6297  0050CA                     l9472:
  6298                           
  6299                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6300  0050CA  BE2E               	btfsc	(pad@p+1)^0,7,c
  6301  0050CC  D005               	goto	l9476
  6302  0050CE  C02D  F032         	movff	pad@p,pad@w
  6303  0050D2  C02E  F033         	movff	pad@p+1,pad@w+1
  6304  0050D6  D004               	goto	l1868
  6305  0050D8                     l9476:
  6306  0050D8  0E00               	movlw	0
  6307  0050DA  6E33               	movwf	(pad@w+1)^0,c
  6308  0050DC  0E00               	movlw	0
  6309  0050DE  6E32               	movwf	pad@w^0,c
  6310  0050E0                     l1868:
  6311                           
  6312                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6313  0050E0  0E00               	movlw	0
  6314  0050E2  6E31               	movwf	(pad@i+1)^0,c
  6315  0050E4  0E00               	movlw	0
  6316  0050E6  6E30               	movwf	pad@i^0,c
  6317                           
  6318                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6319  0050E8  D00C               	goto	l9482
  6320  0050EA                     l9478:
  6321                           
  6322                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6323  0050EA  0E00               	movlw	0
  6324  0050EC  6E18               	movwf	(fputc@c+1)^0,c
  6325  0050EE  0E20               	movlw	32
  6326  0050F0  6E17               	movwf	fputc@c^0,c
  6327  0050F2  C029  F019         	movff	pad@fp,fputc@fp
  6328  0050F6  C02A  F01A         	movff	pad@fp+1,fputc@fp+1
  6329  0050FA  EC57  F027         	call	_fputc	;wreg free
  6330                           
  6331                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6332  0050FE  4A30               	infsnz	pad@i^0,f,c
  6333  005100  2A31               	incf	(pad@i+1)^0,f,c
  6334  005102                     l9482:
  6335                           
  6336                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6337  005102  5032               	movf	pad@w^0,w,c
  6338  005104  5C30               	subwf	pad@i^0,w,c
  6339  005106  5031               	movf	(pad@i+1)^0,w,c
  6340  005108  0A80               	xorlw	128
  6341  00510A  6E2F               	movwf	??_pad^0,c
  6342  00510C  5033               	movf	(pad@w+1)^0,w,c
  6343  00510E  0A80               	xorlw	128
  6344  005110  582F               	subwfb	??_pad^0,w,c
  6345  005112  A0D8               	btfss	status,0,c
  6346  005114  D7EA               	goto	l9478
  6347                           
  6348                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6349  005116  B03D               	btfsc	_flags^0,0,c
  6350  005118  D00A               	goto	l9486
  6351                           
  6352                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6353  00511A  C02B  F020         	movff	pad@buf,fputs@s
  6354  00511E  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6355  005122  C029  F022         	movff	pad@fp,fputs@fp
  6356  005126  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6357  00512A  EC28  F02A         	call	_fputs	;wreg free
  6358  00512E                     l9486:
  6359                           
  6360                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  6361  00512E  C02B  F015         	movff	pad@buf,strlen@s
  6362  005132  C02C  F016         	movff	pad@buf+1,strlen@s+1
  6363  005136  EC2D  F02B         	call	_strlen	;wreg free
  6364  00513A  5032               	movf	pad@w^0,w,c
  6365  00513C  2415               	addwf	?_strlen^0,w,c
  6366  00513E  6E29               	movwf	?_pad^0,c
  6367  005140  5033               	movf	(pad@w+1)^0,w,c
  6368  005142  2016               	addwfc	(?_strlen+1)^0,w,c
  6369  005144  6E2A               	movwf	(?_pad+1)^0,c
  6370  005146  0012               	return		;funcret
  6371  005148                     __end_of_pad:
  6372                           	callstack 0
  6373                           
  6374 ;; *************** function _floorf *****************
  6375 ;; Defined at:
  6376 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  x               4   45[COMRAM] float 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  u               4    6[BANK0 ] struct .
  6381 ;;  m               4    0[BANK0 ] unsigned long 
  6382 ;;  e               2    4[BANK0 ] int 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  4   45[COMRAM] float 
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, status,0
  6387 ;; Tracked objects:
  6388 ;;		On entry : 3F/0
  6389 ;;		On exit  : 3F/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6393 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6394 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6395 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6396 ;;Total ram usage:       20 bytes
  6397 ;; Hardware stack levels used: 1
  6398 ;; Hardware stack levels required when called: 4
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_efgtoa
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text16
  6407  003FEE                     __ptext16:
  6408                           	callstack 0
  6409  003FEE                     _floorf:
  6410                           	callstack 20
  6411                           
  6412                           ; BSR set to: 0
  6413                           
  6414                           ;incstack = 0
  6415  003FEE  C18C  F066         	movff	floorf@F526,floorf@u
  6416  003FF2  C18D  F067         	movff	floorf@F526+1,floorf@u+1
  6417  003FF6  C18E  F068         	movff	floorf@F526+2,floorf@u+2
  6418  003FFA  C18F  F069         	movff	floorf@F526+3,floorf@u+3
  6419  003FFE  C02E  F066         	movff	floorf@x,floorf@u
  6420  004002  C02F  F067         	movff	floorf@x+1,floorf@u+1
  6421  004006  C030  F068         	movff	floorf@x+2,floorf@u+2
  6422  00400A  C031  F069         	movff	floorf@x+3,floorf@u+3
  6423                           
  6424                           ; BSR set to: 0
  6425  00400E  0E81               	movlw	129
  6426  004010  6E32               	movwf	??_floorf^0,c
  6427  004012  0EFF               	movlw	255
  6428  004014  6E33               	movwf	(??_floorf+1)^0,c
  6429  004016  C066  F034         	movff	floorf@u,??_floorf+2
  6430  00401A  C067  F035         	movff	floorf@u+1,??_floorf+3
  6431  00401E  C068  F036         	movff	floorf@u+2,??_floorf+4
  6432  004022  C069  F037         	movff	floorf@u+3,??_floorf+5
  6433  004026  0E18               	movlw	24
  6434  004028  D005               	goto	u10900
  6435  00402A                     u10905:
  6436  00402A  90D8               	bcf	status,0,c
  6437  00402C  3237               	rrcf	(??_floorf+5)^0,f,c
  6438  00402E  3236               	rrcf	(??_floorf+4)^0,f,c
  6439  004030  3235               	rrcf	(??_floorf+3)^0,f,c
  6440  004032  3234               	rrcf	(??_floorf+2)^0,f,c
  6441  004034                     u10900:
  6442  004034  2EE8               	decfsz	wreg,f,c
  6443  004036  D7F9               	goto	u10905
  6444  004038  5034               	movf	(??_floorf+2)^0,w,c
  6445  00403A  2432               	addwf	??_floorf^0,w,c
  6446  00403C  6F64               	movwf	floorf@e& (0+255),b
  6447  00403E  0E00               	movlw	0
  6448  004040  2033               	addwfc	(??_floorf+1)^0,w,c
  6449  004042  6F65               	movwf	(floorf@e+1)& (0+255),b
  6450  004044  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6451  004046  D00F               	goto	l9532
  6452  004048  5165               	movf	(floorf@e+1)& (0+255),w,b
  6453  00404A  E104               	bnz	u10910
  6454  00404C  0E17               	movlw	23
  6455  00404E  5D64               	subwf	floorf@e& (0+255),w,b
  6456  004050  A0D8               	btfss	status,0,c
  6457  004052  D009               	goto	l9532
  6458  004054                     u10910:
  6459                           
  6460                           ; BSR set to: 0
  6461  004054  C02E  F02E         	movff	floorf@x,?_floorf
  6462  004058  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  6463  00405C  C030  F030         	movff	floorf@x+2,?_floorf+2
  6464  004060  C031  F031         	movff	floorf@x+3,?_floorf+3
  6465  004064  0012               	return	
  6466  004066                     l9532:
  6467                           
  6468                           ; BSR set to: 0
  6469  004066  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6470  004068  D05C               	goto	l9542
  6471                           
  6472                           ; BSR set to: 0
  6473  00406A  C064  F032         	movff	floorf@e,??_floorf
  6474  00406E  0EFF               	movlw	255
  6475  004070  6E33               	movwf	(??_floorf+1)^0,c
  6476  004072  0EFF               	movlw	255
  6477  004074  6E34               	movwf	(??_floorf+2)^0,c
  6478  004076  0E7F               	movlw	127
  6479  004078  6E35               	movwf	(??_floorf+3)^0,c
  6480  00407A  0E00               	movlw	0
  6481  00407C  6E36               	movwf	(??_floorf+4)^0,c
  6482  00407E                     u10935:
  6483  00407E  6632               	tstfsz	??_floorf^0,c
  6484  004080  D001               	goto	u10936
  6485  004082  D007               	goto	u10937
  6486  004084                     u10936:
  6487  004084  3436               	rlcf	(??_floorf+4)^0,w,c
  6488  004086  3236               	rrcf	(??_floorf+4)^0,f,c
  6489  004088  3235               	rrcf	(??_floorf+3)^0,f,c
  6490  00408A  3234               	rrcf	(??_floorf+2)^0,f,c
  6491  00408C  3233               	rrcf	(??_floorf+1)^0,f,c
  6492  00408E  2E32               	decfsz	??_floorf^0,f,c
  6493  004090  D7F6               	goto	u10935
  6494  004092                     u10937:
  6495  004092  C033  F060         	movff	??_floorf+1,floorf@m
  6496  004096  C034  F061         	movff	??_floorf+2,floorf@m+1
  6497  00409A  C035  F062         	movff	??_floorf+3,floorf@m+2
  6498  00409E  C036  F063         	movff	??_floorf+4,floorf@m+3
  6499  0040A2  0100               	movlb	0	; () banked
  6500  0040A4  5160               	movf	floorf@m& (0+255),w,b
  6501  0040A6  1566               	andwf	floorf@u& (0+255),w,b
  6502  0040A8  6E32               	movwf	??_floorf^0,c
  6503  0040AA  5161               	movf	(floorf@m+1)& (0+255),w,b
  6504  0040AC  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6505  0040AE  6E33               	movwf	(??_floorf+1)^0,c
  6506  0040B0  5162               	movf	(floorf@m+2)& (0+255),w,b
  6507  0040B2  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6508  0040B4  6E34               	movwf	(??_floorf+2)^0,c
  6509  0040B6  5163               	movf	(floorf@m+3)& (0+255),w,b
  6510  0040B8  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6511  0040BA  6E35               	movwf	(??_floorf+3)^0,c
  6512  0040BC  5032               	movf	??_floorf^0,w,c
  6513  0040BE  1033               	iorwf	(??_floorf+1)^0,w,c
  6514  0040C0  1034               	iorwf	(??_floorf+2)^0,w,c
  6515  0040C2  1035               	iorwf	(??_floorf+3)^0,w,c
  6516  0040C4  B4D8               	btfsc	status,2,c
  6517  0040C6  D7C6               	goto	u10910
  6518                           
  6519                           ; BSR set to: 0
  6520  0040C8  C066  F032         	movff	floorf@u,??_floorf
  6521  0040CC  C067  F033         	movff	floorf@u+1,??_floorf+1
  6522  0040D0  C068  F034         	movff	floorf@u+2,??_floorf+2
  6523  0040D4  C069  F035         	movff	floorf@u+3,??_floorf+3
  6524  0040D8  0E20               	movlw	32
  6525  0040DA  D005               	goto	u10950
  6526  0040DC                     u10955:
  6527  0040DC  90D8               	bcf	status,0,c
  6528  0040DE  3235               	rrcf	(??_floorf+3)^0,f,c
  6529  0040E0  3234               	rrcf	(??_floorf+2)^0,f,c
  6530  0040E2  3233               	rrcf	(??_floorf+1)^0,f,c
  6531  0040E4  3232               	rrcf	??_floorf^0,f,c
  6532  0040E6                     u10950:
  6533  0040E6  2EE8               	decfsz	wreg,f,c
  6534  0040E8  D7F9               	goto	u10955
  6535  0040EA  5032               	movf	??_floorf^0,w,c
  6536  0040EC  B4D8               	btfsc	status,2,c
  6537  0040EE  D008               	goto	l2098
  6538                           
  6539                           ; BSR set to: 0
  6540  0040F0  5160               	movf	floorf@m& (0+255),w,b
  6541  0040F2  2766               	addwf	floorf@u& (0+255),f,b
  6542  0040F4  5161               	movf	(floorf@m+1)& (0+255),w,b
  6543  0040F6  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6544  0040F8  5162               	movf	(floorf@m+2)& (0+255),w,b
  6545  0040FA  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6546  0040FC  5163               	movf	(floorf@m+3)& (0+255),w,b
  6547  0040FE  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6548  004100                     l2098:
  6549                           
  6550                           ; BSR set to: 0
  6551  004100  1D60               	comf	floorf@m& (0+255),w,b
  6552  004102  6E32               	movwf	??_floorf^0,c
  6553  004104  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6554  004106  6E33               	movwf	(??_floorf+1)^0,c
  6555  004108  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6556  00410A  6E34               	movwf	(??_floorf+2)^0,c
  6557  00410C  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6558  00410E  6E35               	movwf	(??_floorf+3)^0,c
  6559  004110  5032               	movf	??_floorf^0,w,c
  6560  004112  1766               	andwf	floorf@u& (0+255),f,b
  6561  004114  5033               	movf	(??_floorf+1)^0,w,c
  6562  004116  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6563  004118  5034               	movf	(??_floorf+2)^0,w,c
  6564  00411A  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6565  00411C  5035               	movf	(??_floorf+3)^0,w,c
  6566  00411E  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6567  004120  D032               	goto	l9550
  6568  004122                     l9542:
  6569                           
  6570                           ; BSR set to: 0
  6571  004122  C066  F032         	movff	floorf@u,??_floorf
  6572  004126  C067  F033         	movff	floorf@u+1,??_floorf+1
  6573  00412A  C068  F034         	movff	floorf@u+2,??_floorf+2
  6574  00412E  C069  F035         	movff	floorf@u+3,??_floorf+3
  6575  004132  0E20               	movlw	32
  6576  004134  D005               	goto	u10970
  6577  004136                     u10975:
  6578  004136  90D8               	bcf	status,0,c
  6579  004138  3235               	rrcf	(??_floorf+3)^0,f,c
  6580  00413A  3234               	rrcf	(??_floorf+2)^0,f,c
  6581  00413C  3233               	rrcf	(??_floorf+1)^0,f,c
  6582  00413E  3232               	rrcf	??_floorf^0,f,c
  6583  004140                     u10970:
  6584  004140  2EE8               	decfsz	wreg,f,c
  6585  004142  D7F9               	goto	u10975
  6586  004144  6632               	tstfsz	??_floorf^0,c
  6587  004146  D008               	goto	l9546
  6588                           
  6589                           ; BSR set to: 0
  6590  004148  0E00               	movlw	0
  6591  00414A  6F66               	movwf	floorf@u& (0+255),b
  6592  00414C  0E00               	movlw	0
  6593  00414E  6F67               	movwf	(floorf@u+1)& (0+255),b
  6594  004150  0E00               	movlw	0
  6595  004152  6F68               	movwf	(floorf@u+2)& (0+255),b
  6596  004154  0E00               	movlw	0
  6597  004156  D016               	goto	L7
  6598  004158                     l9546:
  6599                           
  6600                           ; BSR set to: 0
  6601  004158  90D8               	bcf	status,0,c
  6602  00415A  3566               	rlcf	floorf@u& (0+255),w,b
  6603  00415C  6E32               	movwf	??_floorf^0,c
  6604  00415E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6605  004160  6E33               	movwf	(??_floorf+1)^0,c
  6606  004162  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6607  004164  6E34               	movwf	(??_floorf+2)^0,c
  6608  004166  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6609  004168  6E35               	movwf	(??_floorf+3)^0,c
  6610  00416A  5032               	movf	??_floorf^0,w,c
  6611  00416C  1033               	iorwf	(??_floorf+1)^0,w,c
  6612  00416E  1034               	iorwf	(??_floorf+2)^0,w,c
  6613  004170  1035               	iorwf	(??_floorf+3)^0,w,c
  6614  004172  B4D8               	btfsc	status,2,c
  6615  004174  D008               	goto	l9550
  6616                           
  6617                           ; BSR set to: 0
  6618  004176  0E00               	movlw	0
  6619  004178  6F66               	movwf	floorf@u& (0+255),b
  6620  00417A  0E00               	movlw	0
  6621  00417C  6F67               	movwf	(floorf@u+1)& (0+255),b
  6622  00417E  0E80               	movlw	128
  6623  004180  6F68               	movwf	(floorf@u+2)& (0+255),b
  6624  004182  0EBF               	movlw	191
  6625  004184                     L7:
  6626  004184  6F69               	movwf	(floorf@u+3)& (0+255),b
  6627  004186                     l9550:
  6628                           
  6629                           ; BSR set to: 0
  6630  004186  C066  F02E         	movff	floorf@u,?_floorf
  6631  00418A  C067  F02F         	movff	floorf@u+1,?_floorf+1
  6632  00418E  C068  F030         	movff	floorf@u+2,?_floorf+2
  6633  004192  C069  F031         	movff	floorf@u+3,?_floorf+3
  6634                           
  6635                           ; BSR set to: 0
  6636  004196  0012               	return		;funcret
  6637  004198                     __end_of_floorf:
  6638                           	callstack 0
  6639                           
  6640 ;; *************** function ___fpclassifyf *****************
  6641 ;; Defined at:
  6642 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  x               4   20[COMRAM] float 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  u               4   30[COMRAM] struct .
  6647 ;;  e               2   28[COMRAM] int 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  2   20[COMRAM] int 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6658 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6660 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6661 ;;Total ram usage:       14 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; Hardware stack levels required when called: 4
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_efgtoa
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text17
  6672  004AF4                     __ptext17:
  6673                           	callstack 0
  6674  004AF4                     ___fpclassifyf:
  6675                           	callstack 20
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;incstack = 0
  6679  004AF4  C190  F01F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6680  004AF8  C191  F020         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6681  004AFC  C192  F021         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6682  004B00  C193  F022         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6683  004B04  C015  F01F         	movff	___fpclassifyf@x,___fpclassifyf@u
  6684  004B08  C016  F020         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6685  004B0C  C017  F021         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6686  004B10  C018  F022         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6687  004B14  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6688  004B18  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6689  004B1C  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6690  004B20  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6691  004B24  0E18               	movlw	24
  6692  004B26  D005               	goto	u10800
  6693  004B28                     u10805:
  6694  004B28  90D8               	bcf	status,0,c
  6695  004B2A  321C               	rrcf	(??___fpclassifyf+3)^0,f,c
  6696  004B2C  321B               	rrcf	(??___fpclassifyf+2)^0,f,c
  6697  004B2E  321A               	rrcf	(??___fpclassifyf+1)^0,f,c
  6698  004B30  3219               	rrcf	??___fpclassifyf^0,f,c
  6699  004B32                     u10800:
  6700  004B32  2EE8               	decfsz	wreg,f,c
  6701  004B34  D7F9               	goto	u10805
  6702  004B36  5019               	movf	??___fpclassifyf^0,w,c
  6703  004B38  6E1D               	movwf	___fpclassifyf@e^0,c
  6704  004B3A  6A1E               	clrf	(___fpclassifyf@e+1)^0,c
  6705  004B3C  501D               	movf	___fpclassifyf@e^0,w,c
  6706  004B3E  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6707  004B40  A4D8               	btfss	status,2,c
  6708  004B42  D019               	goto	l9502
  6709  004B44  90D8               	bcf	status,0,c
  6710  004B46  341F               	rlcf	___fpclassifyf@u^0,w,c
  6711  004B48  6E19               	movwf	??___fpclassifyf^0,c
  6712  004B4A  3420               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6713  004B4C  6E1A               	movwf	(??___fpclassifyf+1)^0,c
  6714  004B4E  3421               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6715  004B50  6E1B               	movwf	(??___fpclassifyf+2)^0,c
  6716  004B52  3422               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6717  004B54  6E1C               	movwf	(??___fpclassifyf+3)^0,c
  6718  004B56  5019               	movf	??___fpclassifyf^0,w,c
  6719  004B58  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6720  004B5A  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6721  004B5C  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6722  004B5E  A4D8               	btfss	status,2,c
  6723  004B60  D005               	goto	l9498
  6724  004B62  0E00               	movlw	0
  6725  004B64  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6726  004B66  0E02               	movlw	2
  6727  004B68  6E15               	movwf	?___fpclassifyf^0,c
  6728  004B6A  0012               	return	
  6729  004B6C                     l9498:
  6730  004B6C  0E00               	movlw	0
  6731  004B6E  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6732  004B70  0E03               	movlw	3
  6733  004B72  6E15               	movwf	?___fpclassifyf^0,c
  6734  004B74  0012               	return	
  6735  004B76                     l9502:
  6736  004B76  281D               	incf	___fpclassifyf@e^0,w,c
  6737  004B78  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6738  004B7A  A4D8               	btfss	status,2,c
  6739  004B7C  D01C               	goto	l9508
  6740  004B7E  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6741  004B82  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6742  004B86  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6743  004B8A  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6744  004B8E  0E09               	movlw	9
  6745  004B90                     u10845:
  6746  004B90  90D8               	bcf	status,0,c
  6747  004B92  3619               	rlcf	??___fpclassifyf^0,f,c
  6748  004B94  361A               	rlcf	(??___fpclassifyf+1)^0,f,c
  6749  004B96  361B               	rlcf	(??___fpclassifyf+2)^0,f,c
  6750  004B98  361C               	rlcf	(??___fpclassifyf+3)^0,f,c
  6751  004B9A  2EE8               	decfsz	wreg,f,c
  6752  004B9C  D7F9               	goto	u10845
  6753  004B9E  5019               	movf	??___fpclassifyf^0,w,c
  6754  004BA0  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6755  004BA2  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6756  004BA4  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6757  004BA6  A4D8               	btfss	status,2,c
  6758  004BA8  D002               	goto	u10850
  6759  004BAA  0E01               	movlw	1
  6760  004BAC  D001               	goto	u10860
  6761  004BAE                     u10850:
  6762  004BAE  0E00               	movlw	0
  6763  004BB0                     u10860:
  6764  004BB0  6E15               	movwf	?___fpclassifyf^0,c
  6765  004BB2  6A16               	clrf	(?___fpclassifyf+1)^0,c
  6766  004BB4  0012               	return	
  6767  004BB6                     l9508:
  6768  004BB6  0E00               	movlw	0
  6769  004BB8  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6770  004BBA  0E04               	movlw	4
  6771  004BBC  6E15               	movwf	?___fpclassifyf^0,c
  6772  004BBE  0012               	return		;funcret
  6773  004BC0                     __end_of___fpclassifyf:
  6774                           	callstack 0
  6775                           
  6776 ;; *************** function ___fltol *****************
  6777 ;; Defined at:
  6778 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  f1              4   20[COMRAM] int 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  exp1            1   29[COMRAM] unsigned char 
  6783 ;;  sign1           1   28[COMRAM] unsigned char 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  4   20[COMRAM] long 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2, status,0
  6788 ;; Tracked objects:
  6789 ;;		On entry : 3F/0
  6790 ;;		On exit  : 3F/0
  6791 ;;		Unchanged: 3F/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6795 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6796 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6797 ;;Total ram usage:       10 bytes
  6798 ;; Hardware stack levels used: 1
  6799 ;; Hardware stack levels required when called: 4
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_efgtoa
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text18
  6808  004C86                     __ptext18:
  6809                           	callstack 0
  6810  004C86                     ___fltol:
  6811                           	callstack 20
  6812                           
  6813                           ; BSR set to: 0
  6814                           
  6815                           ;incstack = 0
  6816  004C86  3417               	rlcf	(___fltol@f1+2)^0,w,c
  6817  004C88  3418               	rlcf	(___fltol@f1+3)^0,w,c
  6818  004C8A  6E1E               	movwf	___fltol@exp1^0,c
  6819  004C8C  501E               	movf	___fltol@exp1^0,w,c
  6820  004C8E  A4D8               	btfss	status,2,c
  6821  004C90  D009               	goto	l9392
  6822  004C92                     u10620:
  6823                           
  6824                           ; BSR set to: 0
  6825  004C92  0E00               	movlw	0
  6826  004C94  6E15               	movwf	?___fltol^0,c
  6827  004C96  0E00               	movlw	0
  6828  004C98  6E16               	movwf	(?___fltol+1)^0,c
  6829  004C9A  0E00               	movlw	0
  6830  004C9C  6E17               	movwf	(?___fltol+2)^0,c
  6831  004C9E  0E00               	movlw	0
  6832  004CA0  6E18               	movwf	(?___fltol+3)^0,c
  6833  004CA2  0012               	return	
  6834  004CA4                     l9392:
  6835                           
  6836                           ; BSR set to: 0
  6837  004CA4  C015  F019         	movff	___fltol@f1,??___fltol
  6838  004CA8  C016  F01A         	movff	___fltol@f1+1,??___fltol+1
  6839  004CAC  C017  F01B         	movff	___fltol@f1+2,??___fltol+2
  6840  004CB0  C018  F01C         	movff	___fltol@f1+3,??___fltol+3
  6841  004CB4  0E20               	movlw	32
  6842  004CB6  D005               	goto	u10630
  6843  004CB8                     u10635:
  6844  004CB8  90D8               	bcf	status,0,c
  6845  004CBA  321C               	rrcf	(??___fltol+3)^0,f,c
  6846  004CBC  321B               	rrcf	(??___fltol+2)^0,f,c
  6847  004CBE  321A               	rrcf	(??___fltol+1)^0,f,c
  6848  004CC0  3219               	rrcf	??___fltol^0,f,c
  6849  004CC2                     u10630:
  6850  004CC2  2EE8               	decfsz	wreg,f,c
  6851  004CC4  D7F9               	goto	u10635
  6852  004CC6  5019               	movf	??___fltol^0,w,c
  6853  004CC8  6E1D               	movwf	___fltol@sign1^0,c
  6854                           
  6855                           ; BSR set to: 0
  6856  004CCA  8E17               	bsf	(___fltol@f1+2)^0,7,c
  6857                           
  6858                           ; BSR set to: 0
  6859  004CCC  0EFF               	movlw	255
  6860  004CCE  1615               	andwf	___fltol@f1^0,f,c
  6861  004CD0  0EFF               	movlw	255
  6862  004CD2  1616               	andwf	(___fltol@f1+1)^0,f,c
  6863  004CD4  0EFF               	movlw	255
  6864  004CD6  1617               	andwf	(___fltol@f1+2)^0,f,c
  6865  004CD8  0E00               	movlw	0
  6866  004CDA  1618               	andwf	(___fltol@f1+3)^0,f,c
  6867                           
  6868                           ; BSR set to: 0
  6869  004CDC  0E96               	movlw	150
  6870  004CDE  5E1E               	subwf	___fltol@exp1^0,f,c
  6871                           
  6872                           ; BSR set to: 0
  6873  004CE0  AE1E               	btfss	___fltol@exp1^0,7,c
  6874  004CE2  D00D               	goto	l9412
  6875                           
  6876                           ; BSR set to: 0
  6877  004CE4  501E               	movf	___fltol@exp1^0,w,c
  6878  004CE6  0A80               	xorlw	128
  6879  004CE8  0F97               	addlw	151
  6880  004CEA  A0D8               	btfss	status,0,c
  6881  004CEC  D7D2               	goto	u10620
  6882  004CEE                     l9408:
  6883                           
  6884                           ; BSR set to: 0
  6885  004CEE  90D8               	bcf	status,0,c
  6886  004CF0  3218               	rrcf	(___fltol@f1+3)^0,f,c
  6887  004CF2  3217               	rrcf	(___fltol@f1+2)^0,f,c
  6888  004CF4  3216               	rrcf	(___fltol@f1+1)^0,f,c
  6889  004CF6  3215               	rrcf	___fltol@f1^0,f,c
  6890                           
  6891                           ; BSR set to: 0
  6892  004CF8  3E1E               	incfsz	___fltol@exp1^0,f,c
  6893  004CFA  D7F9               	goto	l9408
  6894  004CFC  D00D               	goto	u10670
  6895  004CFE                     l9412:
  6896                           
  6897                           ; BSR set to: 0
  6898  004CFE  0E1F               	movlw	31
  6899  004D00  641E               	cpfsgt	___fltol@exp1^0,c
  6900  004D02  D007               	goto	l9420
  6901  004D04  D7C6               	goto	u10620
  6902  004D06                     l9418:
  6903                           
  6904                           ; BSR set to: 0
  6905  004D06  90D8               	bcf	status,0,c
  6906  004D08  3615               	rlcf	___fltol@f1^0,f,c
  6907  004D0A  3616               	rlcf	(___fltol@f1+1)^0,f,c
  6908  004D0C  3617               	rlcf	(___fltol@f1+2)^0,f,c
  6909  004D0E  3618               	rlcf	(___fltol@f1+3)^0,f,c
  6910  004D10  061E               	decf	___fltol@exp1^0,f,c
  6911  004D12                     l9420:
  6912                           
  6913                           ; BSR set to: 0
  6914  004D12  501E               	movf	___fltol@exp1^0,w,c
  6915  004D14  A4D8               	btfss	status,2,c
  6916  004D16  D7F7               	goto	l9418
  6917  004D18                     u10670:
  6918                           
  6919                           ; BSR set to: 0
  6920  004D18  501D               	movf	___fltol@sign1^0,w,c
  6921  004D1A  B4D8               	btfsc	status,2,c
  6922  004D1C  D008               	goto	l9426
  6923                           
  6924                           ; BSR set to: 0
  6925  004D1E  1E18               	comf	(___fltol@f1+3)^0,f,c
  6926  004D20  1E17               	comf	(___fltol@f1+2)^0,f,c
  6927  004D22  1E16               	comf	(___fltol@f1+1)^0,f,c
  6928  004D24  6C15               	negf	___fltol@f1^0,c
  6929  004D26  0E00               	movlw	0
  6930  004D28  2216               	addwfc	(___fltol@f1+1)^0,f,c
  6931  004D2A  2217               	addwfc	(___fltol@f1+2)^0,f,c
  6932  004D2C  2218               	addwfc	(___fltol@f1+3)^0,f,c
  6933  004D2E                     l9426:
  6934                           
  6935                           ; BSR set to: 0
  6936  004D2E  C015  F015         	movff	___fltol@f1,?___fltol
  6937  004D32  C016  F016         	movff	___fltol@f1+1,?___fltol+1
  6938  004D36  C017  F017         	movff	___fltol@f1+2,?___fltol+2
  6939  004D3A  C018  F018         	movff	___fltol@f1+3,?___fltol+3
  6940                           
  6941                           ; BSR set to: 0
  6942  004D3E  0012               	return		;funcret
  6943  004D40                     __end_of___fltol:
  6944                           	callstack 0
  6945                           
  6946 ;; *************** function ___flsub *****************
  6947 ;; Defined at:
  6948 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  b               4   46[COMRAM] long 
  6951 ;;  a               4   50[COMRAM] long 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;		None
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  4   46[COMRAM] long 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 3F/0
  6960 ;;		On exit  : 3F/0
  6961 ;;		Unchanged: 3F/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6963 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6966 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6967 ;;Total ram usage:        8 bytes
  6968 ;; Hardware stack levels used: 1
  6969 ;; Hardware stack levels required when called: 5
  6970 ;; This function calls:
  6971 ;;		___fladd
  6972 ;; This function is called by:
  6973 ;;		_efgtoa
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text19
  6978  0056EE                     __ptext19:
  6979                           	callstack 0
  6980  0056EE                     ___flsub:
  6981                           	callstack 19
  6982                           
  6983                           ; BSR set to: 0
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;incstack = 0
  6987  0056EE  0E00               	movlw	0
  6988  0056F0  1A33               	xorwf	___flsub@a^0,f,c
  6989  0056F2  0E00               	movlw	0
  6990  0056F4  1A34               	xorwf	(___flsub@a+1)^0,f,c
  6991  0056F6  0E00               	movlw	0
  6992  0056F8  1A35               	xorwf	(___flsub@a+2)^0,f,c
  6993  0056FA  0E80               	movlw	128
  6994  0056FC  1A36               	xorwf	(___flsub@a+3)^0,f,c
  6995                           
  6996                           ; BSR set to: 0
  6997  0056FE  C02F  F015         	movff	___flsub@b,___fladd@b
  6998  005702  C030  F016         	movff	___flsub@b+1,___fladd@b+1
  6999  005706  C031  F017         	movff	___flsub@b+2,___fladd@b+2
  7000  00570A  C032  F018         	movff	___flsub@b+3,___fladd@b+3
  7001  00570E  C033  F019         	movff	___flsub@a,___fladd@a
  7002  005712  C034  F01A         	movff	___flsub@a+1,___fladd@a+1
  7003  005716  C035  F01B         	movff	___flsub@a+2,___fladd@a+2
  7004  00571A  C036  F01C         	movff	___flsub@a+3,___fladd@a+3
  7005  00571E  EC48  F01A         	call	___fladd	;wreg free
  7006  005722  C015  F02F         	movff	?___fladd,?___flsub
  7007  005726  C016  F030         	movff	?___fladd+1,?___flsub+1
  7008  00572A  C017  F031         	movff	?___fladd+2,?___flsub+2
  7009  00572E  C018  F032         	movff	?___fladd+3,?___flsub+3
  7010                           
  7011                           ; BSR set to: 0
  7012  005732  0012               	return		;funcret
  7013  005734                     __end_of___flsub:
  7014                           	callstack 0
  7015                           
  7016 ;; *************** function ___fladd *****************
  7017 ;; Defined at:
  7018 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  b               4   20[COMRAM] long 
  7021 ;;  a               4   24[COMRAM] long 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  grs             1   35[COMRAM] unsigned char 
  7024 ;;  bexp            1   34[COMRAM] unsigned char 
  7025 ;;  aexp            1   33[COMRAM] unsigned char 
  7026 ;;  signs           1   32[COMRAM] unsigned char 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  4   20[COMRAM] unsigned char 
  7029 ;; Registers used:
  7030 ;;		wreg, status,2, status,0
  7031 ;; Tracked objects:
  7032 ;;		On entry : 3F/0
  7033 ;;		On exit  : 3F/0
  7034 ;;		Unchanged: 3F/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7036 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7038 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7039 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7040 ;;Total ram usage:       16 bytes
  7041 ;; Hardware stack levels used: 1
  7042 ;; Hardware stack levels required when called: 4
  7043 ;; This function calls:
  7044 ;;		Nothing
  7045 ;; This function is called by:
  7046 ;;		___flsub
  7047 ;;		_efgtoa
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text20
  7052  003490                     __ptext20:
  7053                           	callstack 0
  7054  003490                     ___fladd:
  7055                           	callstack 19
  7056                           
  7057                           ; BSR set to: 0
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;incstack = 0
  7061  003490  5018               	movf	(___fladd@b+3)^0,w,c
  7062  003492  0B80               	andlw	128
  7063  003494  6E21               	movwf	___fladd@signs^0,c
  7064  003496  5018               	movf	(___fladd@b+3)^0,w,c
  7065  003498  2418               	addwf	(___fladd@b+3)^0,w,c
  7066  00349A  6E23               	movwf	___fladd@bexp^0,c
  7067                           
  7068                           ; BSR set to: 0
  7069  00349C  BE17               	btfsc	(___fladd@b+2)^0,7,c
  7070                           
  7071                           ; BSR set to: 0
  7072  00349E  8023               	bsf	___fladd@bexp^0,0,c
  7073                           
  7074                           ; BSR set to: 0
  7075  0034A0  5023               	movf	___fladd@bexp^0,w,c
  7076  0034A2  B4D8               	btfsc	status,2,c
  7077  0034A4  D00D               	goto	l8782
  7078                           
  7079                           ; BSR set to: 0
  7080  0034A6  2823               	incf	___fladd@bexp^0,w,c
  7081  0034A8  A4D8               	btfss	status,2,c
  7082  0034AA  D008               	goto	l8778
  7083                           
  7084                           ; BSR set to: 0
  7085  0034AC  0E00               	movlw	0
  7086  0034AE  6E15               	movwf	___fladd@b^0,c
  7087  0034B0  0E00               	movlw	0
  7088  0034B2  6E16               	movwf	(___fladd@b+1)^0,c
  7089  0034B4  0E00               	movlw	0
  7090  0034B6  6E17               	movwf	(___fladd@b+2)^0,c
  7091  0034B8  0E00               	movlw	0
  7092  0034BA  6E18               	movwf	(___fladd@b+3)^0,c
  7093  0034BC                     l8778:
  7094                           
  7095                           ; BSR set to: 0
  7096  0034BC  8E17               	bsf	(___fladd@b+2)^0,7,c
  7097  0034BE  D006               	goto	L8
  7098  0034C0                     l8782:
  7099                           
  7100                           ; BSR set to: 0
  7101  0034C0  0E00               	movlw	0
  7102  0034C2  6E15               	movwf	___fladd@b^0,c
  7103  0034C4  0E00               	movlw	0
  7104  0034C6  6E16               	movwf	(___fladd@b+1)^0,c
  7105  0034C8  0E00               	movlw	0
  7106  0034CA  6E17               	movwf	(___fladd@b+2)^0,c
  7107  0034CC                     L8:
  7108  0034CC  0E00               	movlw	0
  7109  0034CE  6E18               	movwf	(___fladd@b+3)^0,c
  7110                           
  7111                           ; BSR set to: 0
  7112  0034D0  501C               	movf	(___fladd@a+3)^0,w,c
  7113  0034D2  0B80               	andlw	128
  7114  0034D4  6E22               	movwf	___fladd@aexp^0,c
  7115                           
  7116                           ; BSR set to: 0
  7117  0034D6  5021               	movf	___fladd@signs^0,w,c
  7118  0034D8  1822               	xorwf	___fladd@aexp^0,w,c
  7119  0034DA  A4D8               	btfss	status,2,c
  7120                           
  7121                           ; BSR set to: 0
  7122  0034DC  8C21               	bsf	___fladd@signs^0,6,c
  7123                           
  7124                           ; BSR set to: 0
  7125  0034DE  501C               	movf	(___fladd@a+3)^0,w,c
  7126  0034E0  241C               	addwf	(___fladd@a+3)^0,w,c
  7127  0034E2  6E22               	movwf	___fladd@aexp^0,c
  7128                           
  7129                           ; BSR set to: 0
  7130  0034E4  BE1B               	btfsc	(___fladd@a+2)^0,7,c
  7131                           
  7132                           ; BSR set to: 0
  7133  0034E6  8022               	bsf	___fladd@aexp^0,0,c
  7134                           
  7135                           ; BSR set to: 0
  7136  0034E8  5022               	movf	___fladd@aexp^0,w,c
  7137  0034EA  B4D8               	btfsc	status,2,c
  7138  0034EC  D00D               	goto	l8806
  7139                           
  7140                           ; BSR set to: 0
  7141  0034EE  2822               	incf	___fladd@aexp^0,w,c
  7142  0034F0  A4D8               	btfss	status,2,c
  7143  0034F2  D008               	goto	l8802
  7144                           
  7145                           ; BSR set to: 0
  7146  0034F4  0E00               	movlw	0
  7147  0034F6  6E19               	movwf	___fladd@a^0,c
  7148  0034F8  0E00               	movlw	0
  7149  0034FA  6E1A               	movwf	(___fladd@a+1)^0,c
  7150  0034FC  0E00               	movlw	0
  7151  0034FE  6E1B               	movwf	(___fladd@a+2)^0,c
  7152  003500  0E00               	movlw	0
  7153  003502  6E1C               	movwf	(___fladd@a+3)^0,c
  7154  003504                     l8802:
  7155                           
  7156                           ; BSR set to: 0
  7157  003504  8E1B               	bsf	(___fladd@a+2)^0,7,c
  7158  003506  D006               	goto	L9
  7159  003508                     l8806:
  7160                           
  7161                           ; BSR set to: 0
  7162  003508  0E00               	movlw	0
  7163  00350A  6E19               	movwf	___fladd@a^0,c
  7164  00350C  0E00               	movlw	0
  7165  00350E  6E1A               	movwf	(___fladd@a+1)^0,c
  7166  003510  0E00               	movlw	0
  7167  003512  6E1B               	movwf	(___fladd@a+2)^0,c
  7168  003514                     L9:
  7169  003514  0E00               	movlw	0
  7170  003516  6E1C               	movwf	(___fladd@a+3)^0,c
  7171                           
  7172                           ; BSR set to: 0
  7173  003518  5023               	movf	___fladd@bexp^0,w,c
  7174  00351A  5C22               	subwf	___fladd@aexp^0,w,c
  7175  00351C  B0D8               	btfsc	status,0,c
  7176  00351E  D022               	goto	l8844
  7177                           
  7178                           ; BSR set to: 0
  7179  003520  AC21               	btfss	___fladd@signs^0,6,c
  7180  003522  D002               	goto	l8814
  7181                           
  7182                           ; BSR set to: 0
  7183  003524  0E80               	movlw	128
  7184  003526  1A21               	xorwf	___fladd@signs^0,f,c
  7185  003528                     l8814:
  7186                           
  7187                           ; BSR set to: 0
  7188  003528  C023  F024         	movff	___fladd@bexp,___fladd@grs
  7189                           
  7190                           ; BSR set to: 0
  7191  00352C  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7192                           
  7193                           ; BSR set to: 0
  7194  003530  C024  F022         	movff	___fladd@grs,___fladd@aexp
  7195                           
  7196                           ; BSR set to: 0
  7197  003534  C015  F024         	movff	___fladd@b,___fladd@grs
  7198                           
  7199                           ; BSR set to: 0
  7200  003538  C019  F015         	movff	___fladd@a,___fladd@b
  7201                           
  7202                           ; BSR set to: 0
  7203  00353C  C024  F019         	movff	___fladd@grs,___fladd@a
  7204                           
  7205                           ; BSR set to: 0
  7206  003540  C016  F024         	movff	___fladd@b+1,___fladd@grs
  7207                           
  7208                           ; BSR set to: 0
  7209  003544  C01A  F016         	movff	___fladd@a+1,___fladd@b+1
  7210                           
  7211                           ; BSR set to: 0
  7212  003548  C024  F01A         	movff	___fladd@grs,___fladd@a+1
  7213                           
  7214                           ; BSR set to: 0
  7215  00354C  C017  F024         	movff	___fladd@b+2,___fladd@grs
  7216                           
  7217                           ; BSR set to: 0
  7218  003550  C01B  F017         	movff	___fladd@a+2,___fladd@b+2
  7219                           
  7220                           ; BSR set to: 0
  7221  003554  C024  F01B         	movff	___fladd@grs,___fladd@a+2
  7222                           
  7223                           ; BSR set to: 0
  7224  003558  C018  F024         	movff	___fladd@b+3,___fladd@grs
  7225                           
  7226                           ; BSR set to: 0
  7227  00355C  C01C  F018         	movff	___fladd@a+3,___fladd@b+3
  7228                           
  7229                           ; BSR set to: 0
  7230  003560  C024  F01C         	movff	___fladd@grs,___fladd@a+3
  7231  003564                     l8844:
  7232                           
  7233                           ; BSR set to: 0
  7234  003564  0E00               	movlw	0
  7235  003566  6E24               	movwf	___fladd@grs^0,c
  7236                           
  7237                           ; BSR set to: 0
  7238  003568  5023               	movf	___fladd@bexp^0,w,c
  7239  00356A  C022  F01D         	movff	___fladd@aexp,??___fladd
  7240  00356E  6A1E               	clrf	(??___fladd+1)^0,c
  7241  003570  5E1D               	subwf	??___fladd^0,f,c
  7242  003572  0E00               	movlw	0
  7243  003574  5A1E               	subwfb	(??___fladd+1)^0,f,c
  7244  003576  BE1E               	btfsc	(??___fladd+1)^0,7,c
  7245  003578  D02C               	goto	l1668
  7246  00357A  501E               	movf	(??___fladd+1)^0,w,c
  7247  00357C  E104               	bnz	u9660
  7248  00357E  0E1A               	movlw	26
  7249  003580  5C1D               	subwf	??___fladd^0,w,c
  7250  003582  A0D8               	btfss	status,0,c
  7251  003584  D026               	goto	l1668
  7252  003586                     u9660:
  7253                           
  7254                           ; BSR set to: 0
  7255  003586  5015               	movf	___fladd@b^0,w,c
  7256  003588  1016               	iorwf	(___fladd@b+1)^0,w,c
  7257  00358A  1017               	iorwf	(___fladd@b+2)^0,w,c
  7258  00358C  1018               	iorwf	(___fladd@b+3)^0,w,c
  7259  00358E  B4D8               	btfsc	status,2,c
  7260  003590  D002               	goto	u9670
  7261  003592  0E01               	movlw	1
  7262  003594  D001               	goto	u9680
  7263  003596                     u9670:
  7264  003596  0E00               	movlw	0
  7265  003598                     u9680:
  7266  003598  6E24               	movwf	___fladd@grs^0,c
  7267                           
  7268                           ; BSR set to: 0
  7269  00359A  0E00               	movlw	0
  7270  00359C  6E15               	movwf	___fladd@b^0,c
  7271  00359E  0E00               	movlw	0
  7272  0035A0  6E16               	movwf	(___fladd@b+1)^0,c
  7273  0035A2  0E00               	movlw	0
  7274  0035A4  6E17               	movwf	(___fladd@b+2)^0,c
  7275  0035A6  0E00               	movlw	0
  7276  0035A8  6E18               	movwf	(___fladd@b+3)^0,c
  7277                           
  7278                           ; BSR set to: 0
  7279  0035AA  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7280  0035AE  D015               	goto	u9710
  7281  0035B0                     l1669:
  7282                           
  7283                           ; BSR set to: 0
  7284  0035B0  A024               	btfss	___fladd@grs^0,0,c
  7285  0035B2  D005               	goto	l8856
  7286                           
  7287                           ; BSR set to: 0
  7288  0035B4  90D8               	bcf	status,0,c
  7289  0035B6  3024               	rrcf	___fladd@grs^0,w,c
  7290  0035B8  0901               	iorlw	1
  7291  0035BA  6E24               	movwf	___fladd@grs^0,c
  7292  0035BC  D002               	goto	l8858
  7293  0035BE                     l8856:
  7294                           
  7295                           ; BSR set to: 0
  7296  0035BE  90D8               	bcf	status,0,c
  7297  0035C0  3224               	rrcf	___fladd@grs^0,f,c
  7298  0035C2                     l8858:
  7299                           
  7300                           ; BSR set to: 0
  7301  0035C2  B015               	btfsc	___fladd@b^0,0,c
  7302                           
  7303                           ; BSR set to: 0
  7304  0035C4  8E24               	bsf	___fladd@grs^0,7,c
  7305                           
  7306                           ; BSR set to: 0
  7307  0035C6  3418               	rlcf	(___fladd@b+3)^0,w,c
  7308  0035C8  3218               	rrcf	(___fladd@b+3)^0,f,c
  7309  0035CA  3217               	rrcf	(___fladd@b+2)^0,f,c
  7310  0035CC  3216               	rrcf	(___fladd@b+1)^0,f,c
  7311  0035CE  3215               	rrcf	___fladd@b^0,f,c
  7312                           
  7313                           ; BSR set to: 0
  7314  0035D0  2A23               	incf	___fladd@bexp^0,f,c
  7315  0035D2                     l1668:
  7316                           
  7317                           ; BSR set to: 0
  7318  0035D2  5022               	movf	___fladd@aexp^0,w,c
  7319  0035D4  5C23               	subwf	___fladd@bexp^0,w,c
  7320  0035D6  A0D8               	btfss	status,0,c
  7321  0035D8  D7EB               	goto	l1669
  7322  0035DA                     u9710:
  7323                           
  7324                           ; BSR set to: 0
  7325  0035DA  BC21               	btfsc	___fladd@signs^0,6,c
  7326  0035DC  D028               	goto	l8890
  7327                           
  7328                           ; BSR set to: 0
  7329  0035DE  5023               	movf	___fladd@bexp^0,w,c
  7330  0035E0  A4D8               	btfss	status,2,c
  7331  0035E2  D009               	goto	l8872
  7332                           
  7333                           ; BSR set to: 0
  7334  0035E4  0E00               	movlw	0
  7335  0035E6  6E15               	movwf	?___fladd^0,c
  7336  0035E8  0E00               	movlw	0
  7337  0035EA  6E16               	movwf	(?___fladd+1)^0,c
  7338  0035EC  0E00               	movlw	0
  7339  0035EE  6E17               	movwf	(?___fladd+2)^0,c
  7340  0035F0  0E00               	movlw	0
  7341  0035F2  6E18               	movwf	(?___fladd+3)^0,c
  7342  0035F4  0012               	return	
  7343  0035F6                     l8872:
  7344                           
  7345                           ; BSR set to: 0
  7346  0035F6  5019               	movf	___fladd@a^0,w,c
  7347  0035F8  2615               	addwf	___fladd@b^0,f,c
  7348  0035FA  501A               	movf	(___fladd@a+1)^0,w,c
  7349  0035FC  2216               	addwfc	(___fladd@b+1)^0,f,c
  7350  0035FE  501B               	movf	(___fladd@a+2)^0,w,c
  7351  003600  2217               	addwfc	(___fladd@b+2)^0,f,c
  7352  003602  501C               	movf	(___fladd@a+3)^0,w,c
  7353  003604  2218               	addwfc	(___fladd@b+3)^0,f,c
  7354                           
  7355                           ; BSR set to: 0
  7356  003606  A018               	btfss	(___fladd@b+3)^0,0,c
  7357  003608  D071               	goto	u9840
  7358                           
  7359                           ; BSR set to: 0
  7360  00360A  A024               	btfss	___fladd@grs^0,0,c
  7361  00360C  D005               	goto	l8880
  7362                           
  7363                           ; BSR set to: 0
  7364  00360E  90D8               	bcf	status,0,c
  7365  003610  3024               	rrcf	___fladd@grs^0,w,c
  7366  003612  0901               	iorlw	1
  7367  003614  6E24               	movwf	___fladd@grs^0,c
  7368  003616  D002               	goto	l8882
  7369  003618                     l8880:
  7370                           
  7371                           ; BSR set to: 0
  7372  003618  90D8               	bcf	status,0,c
  7373  00361A  3224               	rrcf	___fladd@grs^0,f,c
  7374  00361C                     l8882:
  7375                           
  7376                           ; BSR set to: 0
  7377  00361C  B015               	btfsc	___fladd@b^0,0,c
  7378                           
  7379                           ; BSR set to: 0
  7380  00361E  8E24               	bsf	___fladd@grs^0,7,c
  7381                           
  7382                           ; BSR set to: 0
  7383  003620  3418               	rlcf	(___fladd@b+3)^0,w,c
  7384  003622  3218               	rrcf	(___fladd@b+3)^0,f,c
  7385  003624  3217               	rrcf	(___fladd@b+2)^0,f,c
  7386  003626  3216               	rrcf	(___fladd@b+1)^0,f,c
  7387  003628  3215               	rrcf	___fladd@b^0,f,c
  7388                           
  7389                           ; BSR set to: 0
  7390  00362A  2A23               	incf	___fladd@bexp^0,f,c
  7391  00362C  D05F               	goto	u9840
  7392  00362E                     l8890:
  7393                           
  7394                           ; BSR set to: 0
  7395  00362E  5019               	movf	___fladd@a^0,w,c
  7396  003630  5C15               	subwf	___fladd@b^0,w,c
  7397  003632  501A               	movf	(___fladd@a+1)^0,w,c
  7398  003634  5816               	subwfb	(___fladd@b+1)^0,w,c
  7399  003636  501B               	movf	(___fladd@a+2)^0,w,c
  7400  003638  5817               	subwfb	(___fladd@b+2)^0,w,c
  7401  00363A  5018               	movf	(___fladd@b+3)^0,w,c
  7402  00363C  0A80               	xorlw	128
  7403  00363E  6E1D               	movwf	??___fladd^0,c
  7404  003640  501C               	movf	(___fladd@a+3)^0,w,c
  7405  003642  0A80               	xorlw	128
  7406  003644  581D               	subwfb	??___fladd^0,w,c
  7407  003646  B0D8               	btfsc	status,0,c
  7408  003648  D025               	goto	l8900
  7409                           
  7410                           ; BSR set to: 0
  7411  00364A  5015               	movf	___fladd@b^0,w,c
  7412  00364C  5C19               	subwf	___fladd@a^0,w,c
  7413  00364E  6E1D               	movwf	??___fladd^0,c
  7414  003650  5016               	movf	(___fladd@b+1)^0,w,c
  7415  003652  581A               	subwfb	(___fladd@a+1)^0,w,c
  7416  003654  6E1E               	movwf	(??___fladd+1)^0,c
  7417  003656  5017               	movf	(___fladd@b+2)^0,w,c
  7418  003658  581B               	subwfb	(___fladd@a+2)^0,w,c
  7419  00365A  6E1F               	movwf	(??___fladd+2)^0,c
  7420  00365C  5018               	movf	(___fladd@b+3)^0,w,c
  7421  00365E  581C               	subwfb	(___fladd@a+3)^0,w,c
  7422  003660  6E20               	movwf	(??___fladd+3)^0,c
  7423  003662  0EFF               	movlw	255
  7424  003664  241D               	addwf	??___fladd^0,w,c
  7425  003666  6E15               	movwf	___fladd@b^0,c
  7426  003668  0EFF               	movlw	255
  7427  00366A  201E               	addwfc	(??___fladd+1)^0,w,c
  7428  00366C  6E16               	movwf	(___fladd@b+1)^0,c
  7429  00366E  0EFF               	movlw	255
  7430  003670  201F               	addwfc	(??___fladd+2)^0,w,c
  7431  003672  6E17               	movwf	(___fladd@b+2)^0,c
  7432  003674  0EFF               	movlw	255
  7433  003676  2020               	addwfc	(??___fladd+3)^0,w,c
  7434  003678  6E18               	movwf	(___fladd@b+3)^0,c
  7435  00367A  0E80               	movlw	128
  7436  00367C  1A21               	xorwf	___fladd@signs^0,f,c
  7437                           
  7438                           ; BSR set to: 0
  7439  00367E  6C24               	negf	___fladd@grs^0,c
  7440                           
  7441                           ; BSR set to: 0
  7442  003680  5024               	movf	___fladd@grs^0,w,c
  7443  003682  A4D8               	btfss	status,2,c
  7444  003684  D00F               	goto	l1684
  7445                           
  7446                           ; BSR set to: 0
  7447  003686  0E01               	movlw	1
  7448  003688  2615               	addwf	___fladd@b^0,f,c
  7449  00368A  0E00               	movlw	0
  7450  00368C  2216               	addwfc	(___fladd@b+1)^0,f,c
  7451  00368E  2217               	addwfc	(___fladd@b+2)^0,f,c
  7452  003690  2218               	addwfc	(___fladd@b+3)^0,f,c
  7453  003692  D008               	goto	l1684
  7454  003694                     l8900:
  7455                           
  7456                           ; BSR set to: 0
  7457  003694  5019               	movf	___fladd@a^0,w,c
  7458  003696  5E15               	subwf	___fladd@b^0,f,c
  7459  003698  501A               	movf	(___fladd@a+1)^0,w,c
  7460  00369A  5A16               	subwfb	(___fladd@b+1)^0,f,c
  7461  00369C  501B               	movf	(___fladd@a+2)^0,w,c
  7462  00369E  5A17               	subwfb	(___fladd@b+2)^0,f,c
  7463  0036A0  501C               	movf	(___fladd@a+3)^0,w,c
  7464  0036A2  5A18               	subwfb	(___fladd@b+3)^0,f,c
  7465  0036A4                     l1684:
  7466                           
  7467                           ; BSR set to: 0
  7468  0036A4  5015               	movf	___fladd@b^0,w,c
  7469  0036A6  1016               	iorwf	(___fladd@b+1)^0,w,c
  7470  0036A8  1017               	iorwf	(___fladd@b+2)^0,w,c
  7471  0036AA  1018               	iorwf	(___fladd@b+3)^0,w,c
  7472  0036AC  A4D8               	btfss	status,2,c
  7473  0036AE  D01C               	goto	l8924
  7474                           
  7475                           ; BSR set to: 0
  7476  0036B0  5024               	movf	___fladd@grs^0,w,c
  7477  0036B2  A4D8               	btfss	status,2,c
  7478  0036B4  D019               	goto	l8924
  7479                           
  7480                           ; BSR set to: 0
  7481  0036B6  0E00               	movlw	0
  7482  0036B8  6E15               	movwf	?___fladd^0,c
  7483  0036BA  0E00               	movlw	0
  7484  0036BC  6E16               	movwf	(?___fladd+1)^0,c
  7485  0036BE  0E00               	movlw	0
  7486  0036C0  6E17               	movwf	(?___fladd+2)^0,c
  7487  0036C2  0E00               	movlw	0
  7488  0036C4  6E18               	movwf	(?___fladd+3)^0,c
  7489  0036C6  0012               	return	
  7490  0036C8                     l8908:
  7491                           
  7492                           ; BSR set to: 0
  7493  0036C8  90D8               	bcf	status,0,c
  7494  0036CA  3615               	rlcf	___fladd@b^0,f,c
  7495  0036CC  3616               	rlcf	(___fladd@b+1)^0,f,c
  7496  0036CE  3617               	rlcf	(___fladd@b+2)^0,f,c
  7497  0036D0  3618               	rlcf	(___fladd@b+3)^0,f,c
  7498                           
  7499                           ; BSR set to: 0
  7500  0036D2  BE24               	btfsc	___fladd@grs^0,7,c
  7501                           
  7502                           ; BSR set to: 0
  7503  0036D4  8015               	bsf	___fladd@b^0,0,c
  7504                           
  7505                           ; BSR set to: 0
  7506  0036D6  A024               	btfss	___fladd@grs^0,0,c
  7507  0036D8  D002               	goto	l8918
  7508                           
  7509                           ; BSR set to: 0
  7510  0036DA  80D8               	bsf	status,0,c
  7511  0036DC  D001               	goto	L10
  7512  0036DE                     l8918:
  7513                           
  7514                           ; BSR set to: 0
  7515  0036DE  90D8               	bcf	status,0,c
  7516  0036E0                     L10:
  7517  0036E0  3624               	rlcf	___fladd@grs^0,f,c
  7518                           
  7519                           ; BSR set to: 0
  7520  0036E2  5023               	movf	___fladd@bexp^0,w,c
  7521  0036E4  A4D8               	btfss	status,2,c
  7522                           
  7523                           ; BSR set to: 0
  7524  0036E6  0623               	decf	___fladd@bexp^0,f,c
  7525  0036E8                     l8924:
  7526                           
  7527                           ; BSR set to: 0
  7528  0036E8  AE17               	btfss	(___fladd@b+2)^0,7,c
  7529  0036EA  D7EE               	goto	l8908
  7530  0036EC                     u9840:
  7531                           
  7532                           ; BSR set to: 0
  7533  0036EC  0E00               	movlw	0
  7534  0036EE  6E22               	movwf	___fladd@aexp^0,c
  7535                           
  7536                           ; BSR set to: 0
  7537  0036F0  AE24               	btfss	___fladd@grs^0,7,c
  7538  0036F2  D00B               	goto	l1693
  7539                           
  7540                           ; BSR set to: 0
  7541  0036F4  C024  F01D         	movff	___fladd@grs,??___fladd
  7542  0036F8  0E7F               	movlw	127
  7543  0036FA  161D               	andwf	??___fladd^0,f,c
  7544  0036FC  B4D8               	btfsc	status,2,c
  7545  0036FE  D003               	goto	l1694
  7546  003700                     u9860:
  7547                           
  7548                           ; BSR set to: 0
  7549  003700  0E01               	movlw	1
  7550  003702  6E22               	movwf	___fladd@aexp^0,c
  7551  003704  D002               	goto	l1693
  7552  003706                     l1694:
  7553                           
  7554                           ; BSR set to: 0
  7555  003706  B015               	btfsc	___fladd@b^0,0,c
  7556  003708  D7FB               	goto	u9860
  7557  00370A                     l1693:
  7558                           
  7559                           ; BSR set to: 0
  7560  00370A  5022               	movf	___fladd@aexp^0,w,c
  7561  00370C  B4D8               	btfsc	status,2,c
  7562  00370E  D020               	goto	l8944
  7563                           
  7564                           ; BSR set to: 0
  7565  003710  0E01               	movlw	1
  7566  003712  2615               	addwf	___fladd@b^0,f,c
  7567  003714  0E00               	movlw	0
  7568  003716  2216               	addwfc	(___fladd@b+1)^0,f,c
  7569  003718  2217               	addwfc	(___fladd@b+2)^0,f,c
  7570  00371A  2218               	addwfc	(___fladd@b+3)^0,f,c
  7571                           
  7572                           ; BSR set to: 0
  7573  00371C  A018               	btfss	(___fladd@b+3)^0,0,c
  7574  00371E  D018               	goto	l8944
  7575                           
  7576                           ; BSR set to: 0
  7577  003720  C015  F01D         	movff	___fladd@b,??___fladd
  7578  003724  C016  F01E         	movff	___fladd@b+1,??___fladd+1
  7579  003728  C017  F01F         	movff	___fladd@b+2,??___fladd+2
  7580  00372C  C018  F020         	movff	___fladd@b+3,??___fladd+3
  7581  003730  3420               	rlcf	(??___fladd+3)^0,w,c
  7582  003732  3220               	rrcf	(??___fladd+3)^0,f,c
  7583  003734  321F               	rrcf	(??___fladd+2)^0,f,c
  7584  003736  321E               	rrcf	(??___fladd+1)^0,f,c
  7585  003738  321D               	rrcf	??___fladd^0,f,c
  7586  00373A  C01D  F015         	movff	??___fladd,___fladd@b
  7587  00373E  C01E  F016         	movff	??___fladd+1,___fladd@b+1
  7588  003742  C01F  F017         	movff	??___fladd+2,___fladd@b+2
  7589  003746  C020  F018         	movff	??___fladd+3,___fladd@b+3
  7590  00374A  2823               	incf	___fladd@bexp^0,w,c
  7591  00374C  A4D8               	btfss	status,2,c
  7592                           
  7593                           ; BSR set to: 0
  7594  00374E  2A23               	incf	___fladd@bexp^0,f,c
  7595  003750                     l8944:
  7596                           
  7597                           ; BSR set to: 0
  7598  003750  2823               	incf	___fladd@bexp^0,w,c
  7599  003752  B4D8               	btfsc	status,2,c
  7600  003754  D003               	goto	u9920
  7601                           
  7602                           ; BSR set to: 0
  7603  003756  5023               	movf	___fladd@bexp^0,w,c
  7604  003758  A4D8               	btfss	status,2,c
  7605  00375A  D00D               	goto	l8952
  7606  00375C                     u9920:
  7607                           
  7608                           ; BSR set to: 0
  7609  00375C  0E00               	movlw	0
  7610  00375E  6E15               	movwf	___fladd@b^0,c
  7611  003760  0E00               	movlw	0
  7612  003762  6E16               	movwf	(___fladd@b+1)^0,c
  7613  003764  0E00               	movlw	0
  7614  003766  6E17               	movwf	(___fladd@b+2)^0,c
  7615  003768  0E00               	movlw	0
  7616  00376A  6E18               	movwf	(___fladd@b+3)^0,c
  7617  00376C  5023               	movf	___fladd@bexp^0,w,c
  7618  00376E  A4D8               	btfss	status,2,c
  7619  003770  D002               	goto	l8952
  7620                           
  7621                           ; BSR set to: 0
  7622  003772  0E00               	movlw	0
  7623  003774  6E21               	movwf	___fladd@signs^0,c
  7624  003776                     l8952:
  7625                           
  7626                           ; BSR set to: 0
  7627  003776  A023               	btfss	___fladd@bexp^0,0,c
  7628  003778  D002               	goto	l8956
  7629                           
  7630                           ; BSR set to: 0
  7631  00377A  8E17               	bsf	(___fladd@b+2)^0,7,c
  7632  00377C  D001               	goto	l8958
  7633  00377E                     l8956:
  7634                           
  7635                           ; BSR set to: 0
  7636  00377E  9E17               	bcf	(___fladd@b+2)^0,7,c
  7637  003780                     l8958:
  7638                           
  7639                           ; BSR set to: 0
  7640  003780  90D8               	bcf	status,0,c
  7641  003782  3023               	rrcf	___fladd@bexp^0,w,c
  7642  003784  6E18               	movwf	(___fladd@b+3)^0,c
  7643                           
  7644                           ; BSR set to: 0
  7645  003786  BE21               	btfsc	___fladd@signs^0,7,c
  7646                           
  7647                           ; BSR set to: 0
  7648  003788  8E18               	bsf	(___fladd@b+3)^0,7,c
  7649                           
  7650                           ; BSR set to: 0
  7651  00378A  C015  F015         	movff	___fladd@b,?___fladd
  7652  00378E  C016  F016         	movff	___fladd@b+1,?___fladd+1
  7653  003792  C017  F017         	movff	___fladd@b+2,?___fladd+2
  7654  003796  C018  F018         	movff	___fladd@b+3,?___fladd+3
  7655                           
  7656                           ; BSR set to: 0
  7657  00379A  0012               	return		;funcret
  7658  00379C                     __end_of___fladd:
  7659                           	callstack 0
  7660                           
  7661 ;; *************** function ___flneg *****************
  7662 ;; Defined at:
  7663 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  f1              4   20[COMRAM] unsigned char 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  4   20[COMRAM] unsigned char 
  7670 ;; Registers used:
  7671 ;;		wreg, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 3F/0
  7674 ;;		On exit  : 3F/0
  7675 ;;		Unchanged: 3F/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7680 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7681 ;;Total ram usage:        4 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; Hardware stack levels required when called: 4
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_efgtoa
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text21
  7692  005A3A                     __ptext21:
  7693                           	callstack 0
  7694  005A3A                     ___flneg:
  7695                           	callstack 20
  7696                           
  7697                           ; BSR set to: 0
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;incstack = 0
  7701  005A3A  5015               	movf	___flneg@f1^0,w,c
  7702  005A3C  1016               	iorwf	(___flneg@f1+1)^0,w,c
  7703  005A3E  1017               	iorwf	(___flneg@f1+2)^0,w,c
  7704  005A40  1018               	iorwf	(___flneg@f1+3)^0,w,c
  7705  005A42  B4D8               	btfsc	status,2,c
  7706  005A44  D008               	goto	l9382
  7707                           
  7708                           ; BSR set to: 0
  7709  005A46  0E00               	movlw	0
  7710  005A48  1A15               	xorwf	___flneg@f1^0,f,c
  7711  005A4A  0E00               	movlw	0
  7712  005A4C  1A16               	xorwf	(___flneg@f1+1)^0,f,c
  7713  005A4E  0E00               	movlw	0
  7714  005A50  1A17               	xorwf	(___flneg@f1+2)^0,f,c
  7715  005A52  0E80               	movlw	128
  7716  005A54  1A18               	xorwf	(___flneg@f1+3)^0,f,c
  7717  005A56                     l9382:
  7718                           
  7719                           ; BSR set to: 0
  7720  005A56  C015  F015         	movff	___flneg@f1,?___flneg
  7721  005A5A  C016  F016         	movff	___flneg@f1+1,?___flneg+1
  7722  005A5E  C017  F017         	movff	___flneg@f1+2,?___flneg+2
  7723  005A62  C018  F018         	movff	___flneg@f1+3,?___flneg+3
  7724                           
  7725                           ; BSR set to: 0
  7726  005A66  0012               	return		;funcret
  7727  005A68                     __end_of___flneg:
  7728                           	callstack 0
  7729                           
  7730 ;; *************** function ___flmul *****************
  7731 ;; Defined at:
  7732 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  b               4   34[COMRAM] unsigned char 
  7735 ;;  a               4   38[COMRAM] unsigned char 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  prod            4    7[BANK0 ] struct .
  7738 ;;  grs             4    3[BANK0 ] unsigned long 
  7739 ;;  temp            2   11[BANK0 ] struct .
  7740 ;;  bexp            1    2[BANK0 ] unsigned char 
  7741 ;;  aexp            1    1[BANK0 ] unsigned char 
  7742 ;;  sign            1    0[BANK0 ] unsigned char 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  4   34[COMRAM] unsigned char 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0, prodl, prodh
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 3F/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7752 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7753 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7755 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7756 ;;Total ram usage:       25 bytes
  7757 ;; Hardware stack levels used: 1
  7758 ;; Hardware stack levels required when called: 4
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_main
  7763 ;;		_efgtoa
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text22
  7768  00313E                     __ptext22:
  7769                           	callstack 0
  7770  00313E                     ___flmul:
  7771                           	callstack 20
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;incstack = 0
  7775  00313E  5026               	movf	(___flmul@b+3)^0,w,c
  7776  003140  0B80               	andlw	128
  7777  003142  0100               	movlb	0	; () banked
  7778  003144  6F60               	movwf	___flmul@sign& (0+255),b
  7779  003146  5026               	movf	(___flmul@b+3)^0,w,c
  7780  003148  2426               	addwf	(___flmul@b+3)^0,w,c
  7781  00314A  6F62               	movwf	___flmul@bexp& (0+255),b
  7782                           
  7783                           ; BSR set to: 0
  7784  00314C  BE25               	btfsc	(___flmul@b+2)^0,7,c
  7785                           
  7786                           ; BSR set to: 0
  7787  00314E  8162               	bsf	___flmul@bexp& (0+255),0,b
  7788                           
  7789                           ; BSR set to: 0
  7790  003150  5162               	movf	___flmul@bexp& (0+255),w,b
  7791  003152  B4D8               	btfsc	status,2,c
  7792  003154  D00D               	goto	l9138
  7793                           
  7794                           ; BSR set to: 0
  7795  003156  2962               	incf	___flmul@bexp& (0+255),w,b
  7796  003158  A4D8               	btfss	status,2,c
  7797  00315A  D008               	goto	l9136
  7798                           
  7799                           ; BSR set to: 0
  7800  00315C  0E00               	movlw	0
  7801  00315E  6E23               	movwf	___flmul@b^0,c
  7802  003160  0E00               	movlw	0
  7803  003162  6E24               	movwf	(___flmul@b+1)^0,c
  7804  003164  0E00               	movlw	0
  7805  003166  6E25               	movwf	(___flmul@b+2)^0,c
  7806  003168  0E00               	movlw	0
  7807  00316A  6E26               	movwf	(___flmul@b+3)^0,c
  7808  00316C                     l9136:
  7809                           
  7810                           ; BSR set to: 0
  7811  00316C  8E25               	bsf	(___flmul@b+2)^0,7,c
  7812  00316E  D008               	goto	l9140
  7813  003170                     l9138:
  7814                           
  7815                           ; BSR set to: 0
  7816  003170  0E00               	movlw	0
  7817  003172  6E23               	movwf	___flmul@b^0,c
  7818  003174  0E00               	movlw	0
  7819  003176  6E24               	movwf	(___flmul@b+1)^0,c
  7820  003178  0E00               	movlw	0
  7821  00317A  6E25               	movwf	(___flmul@b+2)^0,c
  7822  00317C  0E00               	movlw	0
  7823  00317E  6E26               	movwf	(___flmul@b+3)^0,c
  7824  003180                     l9140:
  7825                           
  7826                           ; BSR set to: 0
  7827  003180  502A               	movf	(___flmul@a+3)^0,w,c
  7828  003182  0B80               	andlw	128
  7829  003184  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7830                           
  7831                           ; BSR set to: 0
  7832  003186  502A               	movf	(___flmul@a+3)^0,w,c
  7833  003188  242A               	addwf	(___flmul@a+3)^0,w,c
  7834  00318A  6F61               	movwf	___flmul@aexp& (0+255),b
  7835                           
  7836                           ; BSR set to: 0
  7837  00318C  BE29               	btfsc	(___flmul@a+2)^0,7,c
  7838                           
  7839                           ; BSR set to: 0
  7840  00318E  8161               	bsf	___flmul@aexp& (0+255),0,b
  7841                           
  7842                           ; BSR set to: 0
  7843  003190  5161               	movf	___flmul@aexp& (0+255),w,b
  7844  003192  B4D8               	btfsc	status,2,c
  7845  003194  D00D               	goto	l9156
  7846                           
  7847                           ; BSR set to: 0
  7848  003196  2961               	incf	___flmul@aexp& (0+255),w,b
  7849  003198  A4D8               	btfss	status,2,c
  7850  00319A  D008               	goto	l9154
  7851                           
  7852                           ; BSR set to: 0
  7853  00319C  0E00               	movlw	0
  7854  00319E  6E27               	movwf	___flmul@a^0,c
  7855  0031A0  0E00               	movlw	0
  7856  0031A2  6E28               	movwf	(___flmul@a+1)^0,c
  7857  0031A4  0E00               	movlw	0
  7858  0031A6  6E29               	movwf	(___flmul@a+2)^0,c
  7859  0031A8  0E00               	movlw	0
  7860  0031AA  6E2A               	movwf	(___flmul@a+3)^0,c
  7861  0031AC                     l9154:
  7862                           
  7863                           ; BSR set to: 0
  7864  0031AC  8E29               	bsf	(___flmul@a+2)^0,7,c
  7865  0031AE  D008               	goto	l1753
  7866  0031B0                     l9156:
  7867                           
  7868                           ; BSR set to: 0
  7869  0031B0  0E00               	movlw	0
  7870  0031B2  6E27               	movwf	___flmul@a^0,c
  7871  0031B4  0E00               	movlw	0
  7872  0031B6  6E28               	movwf	(___flmul@a+1)^0,c
  7873  0031B8  0E00               	movlw	0
  7874  0031BA  6E29               	movwf	(___flmul@a+2)^0,c
  7875  0031BC  0E00               	movlw	0
  7876  0031BE  6E2A               	movwf	(___flmul@a+3)^0,c
  7877  0031C0                     l1753:
  7878                           
  7879                           ; BSR set to: 0
  7880  0031C0  5161               	movf	___flmul@aexp& (0+255),w,b
  7881  0031C2  B4D8               	btfsc	status,2,c
  7882  0031C4  D003               	goto	u10300
  7883                           
  7884                           ; BSR set to: 0
  7885  0031C6  5162               	movf	___flmul@bexp& (0+255),w,b
  7886  0031C8  A4D8               	btfss	status,2,c
  7887  0031CA  D009               	goto	l9164
  7888  0031CC                     u10300:
  7889                           
  7890                           ; BSR set to: 0
  7891  0031CC  0E00               	movlw	0
  7892  0031CE  6E23               	movwf	?___flmul^0,c
  7893  0031D0  0E00               	movlw	0
  7894  0031D2  6E24               	movwf	(?___flmul+1)^0,c
  7895  0031D4  0E00               	movlw	0
  7896  0031D6  6E25               	movwf	(?___flmul+2)^0,c
  7897  0031D8  0E00               	movlw	0
  7898  0031DA  6E26               	movwf	(?___flmul+3)^0,c
  7899  0031DC  0012               	return	
  7900  0031DE                     l9164:
  7901                           
  7902                           ; BSR set to: 0
  7903  0031DE  5029               	movf	(___flmul@a+2)^0,w,c
  7904  0031E0  0223               	mulwf	___flmul@b^0,c
  7905  0031E2  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7906  0031E8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7907                           
  7908                           ; BSR set to: 0
  7909  0031EE  516B               	movf	___flmul@temp& (0+255),w,b
  7910  0031F0  6F63               	movwf	___flmul@grs& (0+255),b
  7911  0031F2  6B64               	clrf	(___flmul@grs+1)& (0+255),b
  7912  0031F4  6B65               	clrf	(___flmul@grs+2)& (0+255),b
  7913  0031F6  6B66               	clrf	(___flmul@grs+3)& (0+255),b
  7914                           
  7915                           ; BSR set to: 0
  7916  0031F8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7917  0031FA  6F67               	movwf	___flmul@prod& (0+255),b
  7918  0031FC  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7919  0031FE  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7920  003200  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7921  003202  5028               	movf	(___flmul@a+1)^0,w,c
  7922  003204  0224               	mulwf	(___flmul@b+1)^0,c
  7923  003206  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7924  00320C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7925                           
  7926                           ; BSR set to: 0
  7927  003212  516B               	movf	___flmul@temp& (0+255),w,b
  7928  003214  2763               	addwf	___flmul@grs& (0+255),f,b
  7929  003216  0E00               	movlw	0
  7930  003218  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7931  00321A  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7932  00321C  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7933                           
  7934                           ; BSR set to: 0
  7935  00321E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7936  003220  2767               	addwf	___flmul@prod& (0+255),f,b
  7937  003222  0E00               	movlw	0
  7938  003224  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7939  003226  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7940  003228  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7941  00322A  5027               	movf	___flmul@a^0,w,c
  7942  00322C  0225               	mulwf	(___flmul@b+2)^0,c
  7943  00322E  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7944  003234  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7945                           
  7946                           ; BSR set to: 0
  7947  00323A  516B               	movf	___flmul@temp& (0+255),w,b
  7948  00323C  2763               	addwf	___flmul@grs& (0+255),f,b
  7949  00323E  0E00               	movlw	0
  7950  003240  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7951  003242  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7952  003244  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7953                           
  7954                           ; BSR set to: 0
  7955  003246  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7956  003248  2767               	addwf	___flmul@prod& (0+255),f,b
  7957  00324A  0E00               	movlw	0
  7958  00324C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7959  00324E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7960  003250  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7961                           
  7962                           ; BSR set to: 0
  7963  003252  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  7964  003256  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  7965  00325A  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  7966  00325E  6B63               	clrf	___flmul@grs& (0+255),b
  7967                           
  7968                           ; BSR set to: 0
  7969  003260  5027               	movf	___flmul@a^0,w,c
  7970  003262  0224               	mulwf	(___flmul@b+1)^0,c
  7971  003264  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7972  00326A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7973                           
  7974                           ; BSR set to: 0
  7975  003270  516B               	movf	___flmul@temp& (0+255),w,b
  7976  003272  2763               	addwf	___flmul@grs& (0+255),f,b
  7977  003274  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7978  003276  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7979  003278  0E00               	movlw	0
  7980  00327A  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7981  00327C  0E00               	movlw	0
  7982  00327E  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7983                           
  7984                           ; BSR set to: 0
  7985  003280  5028               	movf	(___flmul@a+1)^0,w,c
  7986  003282  0223               	mulwf	___flmul@b^0,c
  7987  003284  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7988  00328A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7989                           
  7990                           ; BSR set to: 0
  7991  003290  516B               	movf	___flmul@temp& (0+255),w,b
  7992  003292  2763               	addwf	___flmul@grs& (0+255),f,b
  7993  003294  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7994  003296  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7995  003298  0E00               	movlw	0
  7996  00329A  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7997  00329C  0E00               	movlw	0
  7998  00329E  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7999                           
  8000                           ; BSR set to: 0
  8001  0032A0  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8002  0032A4  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8003  0032A8  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8004  0032AC  6B63               	clrf	___flmul@grs& (0+255),b
  8005  0032AE  5027               	movf	___flmul@a^0,w,c
  8006  0032B0  0223               	mulwf	___flmul@b^0,c
  8007  0032B2  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8008  0032B8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8009                           
  8010                           ; BSR set to: 0
  8011  0032BE  516B               	movf	___flmul@temp& (0+255),w,b
  8012  0032C0  2763               	addwf	___flmul@grs& (0+255),f,b
  8013  0032C2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8014  0032C4  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8015  0032C6  0E00               	movlw	0
  8016  0032C8  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8017  0032CA  0E00               	movlw	0
  8018  0032CC  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8019                           
  8020                           ; BSR set to: 0
  8021  0032CE  5029               	movf	(___flmul@a+2)^0,w,c
  8022  0032D0  0224               	mulwf	(___flmul@b+1)^0,c
  8023  0032D2  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8024  0032D8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8025  0032DE  516B               	movf	___flmul@temp& (0+255),w,b
  8026  0032E0  2767               	addwf	___flmul@prod& (0+255),f,b
  8027  0032E2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8028  0032E4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8029  0032E6  0E00               	movlw	0
  8030  0032E8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8031  0032EA  0E00               	movlw	0
  8032  0032EC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8033                           
  8034                           ; BSR set to: 0
  8035  0032EE  5028               	movf	(___flmul@a+1)^0,w,c
  8036  0032F0  0225               	mulwf	(___flmul@b+2)^0,c
  8037  0032F2  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8038  0032F8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8039                           
  8040                           ; BSR set to: 0
  8041  0032FE  516B               	movf	___flmul@temp& (0+255),w,b
  8042  003300  2767               	addwf	___flmul@prod& (0+255),f,b
  8043  003302  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8044  003304  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8045  003306  0E00               	movlw	0
  8046  003308  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8047  00330A  0E00               	movlw	0
  8048  00330C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8049  00330E  5029               	movf	(___flmul@a+2)^0,w,c
  8050  003310  0225               	mulwf	(___flmul@b+2)^0,c
  8051  003312  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8052  003318  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8053                           
  8054                           ; BSR set to: 0
  8055  00331E  516B               	movf	___flmul@temp& (0+255),w,b
  8056  003320  6E2B               	movwf	??___flmul^0,c
  8057  003322  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8058  003324  6E2C               	movwf	(??___flmul+1)^0,c
  8059  003326  6A2D               	clrf	(??___flmul+2)^0,c
  8060  003328  6A2E               	clrf	(??___flmul+3)^0,c
  8061  00332A  C02D  F02E         	movff	??___flmul+2,??___flmul+3
  8062  00332E  C02C  F02D         	movff	??___flmul+1,??___flmul+2
  8063  003332  C02B  F02C         	movff	??___flmul,??___flmul+1
  8064  003336  6A2B               	clrf	??___flmul^0,c
  8065  003338  502B               	movf	??___flmul^0,w,c
  8066  00333A  2767               	addwf	___flmul@prod& (0+255),f,b
  8067  00333C  502C               	movf	(??___flmul+1)^0,w,c
  8068  00333E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8069  003340  502D               	movf	(??___flmul+2)^0,w,c
  8070  003342  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8071  003344  502E               	movf	(??___flmul+3)^0,w,c
  8072  003346  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8073                           
  8074                           ; BSR set to: 0
  8075  003348  5166               	movf	(___flmul@grs+3)& (0+255),w,b
  8076  00334A  2767               	addwf	___flmul@prod& (0+255),f,b
  8077  00334C  0E00               	movlw	0
  8078  00334E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8079  003350  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8080  003352  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8081                           
  8082                           ; BSR set to: 0
  8083  003354  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8084  003358  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8085  00335C  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8086  003360  6B63               	clrf	___flmul@grs& (0+255),b
  8087                           
  8088                           ; BSR set to: 0
  8089  003362  5161               	movf	___flmul@aexp& (0+255),w,b
  8090  003364  C062  F02B         	movff	___flmul@bexp,??___flmul
  8091  003368  6A2C               	clrf	(??___flmul+1)^0,c
  8092  00336A  262B               	addwf	??___flmul^0,f,c
  8093  00336C  0E00               	movlw	0
  8094  00336E  222C               	addwfc	(??___flmul+1)^0,f,c
  8095  003370  0E82               	movlw	130
  8096  003372  242B               	addwf	??___flmul^0,w,c
  8097  003374  6F6B               	movwf	___flmul@temp& (0+255),b
  8098  003376  0EFF               	movlw	255
  8099  003378  202C               	addwfc	(??___flmul+1)^0,w,c
  8100  00337A  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  8101  00337C  D00F               	goto	l9212
  8102  00337E                     l9206:
  8103                           
  8104                           ; BSR set to: 0
  8105  00337E  90D8               	bcf	status,0,c
  8106  003380  3767               	rlcf	___flmul@prod& (0+255),f,b
  8107  003382  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8108  003384  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8109  003386  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8110                           
  8111                           ; BSR set to: 0
  8112  003388  BF66               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8113                           
  8114                           ; BSR set to: 0
  8115  00338A  8167               	bsf	___flmul@prod& (0+255),0,b
  8116                           
  8117                           ; BSR set to: 0
  8118  00338C  90D8               	bcf	status,0,c
  8119  00338E  3763               	rlcf	___flmul@grs& (0+255),f,b
  8120  003390  3764               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8121  003392  3765               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8122  003394  3766               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8123  003396  076B               	decf	___flmul@temp& (0+255),f,b
  8124  003398  A0D8               	btfss	status,0,c
  8125  00339A  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  8126  00339C                     l9212:
  8127                           
  8128                           ; BSR set to: 0
  8129  00339C  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  8130  00339E  D7EF               	goto	l9206
  8131                           
  8132                           ; BSR set to: 0
  8133  0033A0  0E00               	movlw	0
  8134  0033A2  6F61               	movwf	___flmul@aexp& (0+255),b
  8135                           
  8136                           ; BSR set to: 0
  8137  0033A4  AF66               	btfss	(___flmul@grs+3)& (0+255),7,b
  8138  0033A6  D017               	goto	l1762
  8139                           
  8140                           ; BSR set to: 0
  8141  0033A8  0EFF               	movlw	255
  8142  0033AA  1563               	andwf	___flmul@grs& (0+255),w,b
  8143  0033AC  6E2B               	movwf	??___flmul^0,c
  8144  0033AE  0EFF               	movlw	255
  8145  0033B0  1564               	andwf	(___flmul@grs+1)& (0+255),w,b
  8146  0033B2  6E2C               	movwf	(??___flmul+1)^0,c
  8147  0033B4  0EFF               	movlw	255
  8148  0033B6  1565               	andwf	(___flmul@grs+2)& (0+255),w,b
  8149  0033B8  6E2D               	movwf	(??___flmul+2)^0,c
  8150  0033BA  0E7F               	movlw	127
  8151  0033BC  1566               	andwf	(___flmul@grs+3)& (0+255),w,b
  8152  0033BE  6E2E               	movwf	(??___flmul+3)^0,c
  8153  0033C0  502B               	movf	??___flmul^0,w,c
  8154  0033C2  102C               	iorwf	(??___flmul+1)^0,w,c
  8155  0033C4  102D               	iorwf	(??___flmul+2)^0,w,c
  8156  0033C6  102E               	iorwf	(??___flmul+3)^0,w,c
  8157  0033C8  B4D8               	btfsc	status,2,c
  8158  0033CA  D003               	goto	l1763
  8159  0033CC                     u10340:
  8160                           
  8161                           ; BSR set to: 0
  8162  0033CC  0E01               	movlw	1
  8163  0033CE  6F61               	movwf	___flmul@aexp& (0+255),b
  8164  0033D0  D002               	goto	l1762
  8165  0033D2                     l1763:
  8166                           
  8167                           ; BSR set to: 0
  8168  0033D2  B167               	btfsc	___flmul@prod& (0+255),0,b
  8169  0033D4  D7FB               	goto	u10340
  8170  0033D6                     l1762:
  8171                           
  8172                           ; BSR set to: 0
  8173  0033D6  5161               	movf	___flmul@aexp& (0+255),w,b
  8174  0033D8  B4D8               	btfsc	status,2,c
  8175  0033DA  D01F               	goto	l9232
  8176                           
  8177                           ; BSR set to: 0
  8178  0033DC  0E01               	movlw	1
  8179  0033DE  2767               	addwf	___flmul@prod& (0+255),f,b
  8180  0033E0  0E00               	movlw	0
  8181  0033E2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8182  0033E4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8183  0033E6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8184                           
  8185                           ; BSR set to: 0
  8186  0033E8  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  8187  0033EA  D017               	goto	l9232
  8188                           
  8189                           ; BSR set to: 0
  8190  0033EC  C067  F02B         	movff	___flmul@prod,??___flmul
  8191  0033F0  C068  F02C         	movff	___flmul@prod+1,??___flmul+1
  8192  0033F4  C069  F02D         	movff	___flmul@prod+2,??___flmul+2
  8193  0033F8  C06A  F02E         	movff	___flmul@prod+3,??___flmul+3
  8194  0033FC  342E               	rlcf	(??___flmul+3)^0,w,c
  8195  0033FE  322E               	rrcf	(??___flmul+3)^0,f,c
  8196  003400  322D               	rrcf	(??___flmul+2)^0,f,c
  8197  003402  322C               	rrcf	(??___flmul+1)^0,f,c
  8198  003404  322B               	rrcf	??___flmul^0,f,c
  8199  003406  C02B  F067         	movff	??___flmul,___flmul@prod
  8200  00340A  C02C  F068         	movff	??___flmul+1,___flmul@prod+1
  8201  00340E  C02D  F069         	movff	??___flmul+2,___flmul@prod+2
  8202  003412  C02E  F06A         	movff	??___flmul+3,___flmul@prod+3
  8203                           
  8204                           ; BSR set to: 0
  8205  003416  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  8206  003418  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  8207  00341A                     l9232:
  8208                           
  8209                           ; BSR set to: 0
  8210  00341A  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8211  00341C  D00D               	goto	l9236
  8212  00341E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8213  003420  E103               	bnz	u10380
  8214  003422  296B               	incf	___flmul@temp& (0+255),w,b
  8215  003424  A0D8               	btfss	status,0,c
  8216  003426  D008               	goto	l9236
  8217  003428                     u10380:
  8218                           
  8219                           ; BSR set to: 0
  8220  003428  0E00               	movlw	0
  8221  00342A  6F67               	movwf	___flmul@prod& (0+255),b
  8222  00342C  0E00               	movlw	0
  8223  00342E  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8224  003430  0E80               	movlw	128
  8225  003432  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8226  003434  0E7F               	movlw	127
  8227  003436  D020               	goto	L11
  8228  003438                     l9236:
  8229                           
  8230                           ; BSR set to: 0
  8231  003438  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8232  00343A  D005               	goto	u10390
  8233  00343C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8234  00343E  E10E               	bnz	l1770
  8235  003440  056B               	decf	___flmul@temp& (0+255),w,b
  8236  003442  B0D8               	btfsc	status,0,c
  8237  003444  D00B               	goto	l1770
  8238  003446                     u10390:
  8239                           
  8240                           ; BSR set to: 0
  8241  003446  0E00               	movlw	0
  8242  003448  6F67               	movwf	___flmul@prod& (0+255),b
  8243  00344A  0E00               	movlw	0
  8244  00344C  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8245  00344E  0E00               	movlw	0
  8246  003450  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8247  003452  0E00               	movlw	0
  8248  003454  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8249  003456  0E00               	movlw	0
  8250  003458  6F60               	movwf	___flmul@sign& (0+255),b
  8251  00345A  D00F               	goto	l9248
  8252  00345C                     l1770:
  8253                           
  8254                           ; BSR set to: 0
  8255  00345C  C06B  F062         	movff	___flmul@temp,___flmul@bexp
  8256                           
  8257                           ; BSR set to: 0
  8258  003460  0EFF               	movlw	255
  8259  003462  1767               	andwf	___flmul@prod& (0+255),f,b
  8260  003464  0EFF               	movlw	255
  8261  003466  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  8262  003468  0E7F               	movlw	127
  8263  00346A  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  8264  00346C  0E00               	movlw	0
  8265  00346E  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  8266                           
  8267                           ; BSR set to: 0
  8268  003470  B162               	btfsc	___flmul@bexp& (0+255),0,b
  8269                           
  8270                           ; BSR set to: 0
  8271  003472  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  8272                           
  8273                           ; BSR set to: 0
  8274  003474  90D8               	bcf	status,0,c
  8275  003476  3162               	rrcf	___flmul@bexp& (0+255),w,b
  8276  003478                     L11:
  8277  003478  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8278  00347A                     l9248:
  8279                           
  8280                           ; BSR set to: 0
  8281  00347A  5160               	movf	___flmul@sign& (0+255),w,b
  8282  00347C  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8283                           
  8284                           ; BSR set to: 0
  8285  00347E  C067  F023         	movff	___flmul@prod,?___flmul
  8286  003482  C068  F024         	movff	___flmul@prod+1,?___flmul+1
  8287  003486  C069  F025         	movff	___flmul@prod+2,?___flmul+2
  8288  00348A  C06A  F026         	movff	___flmul@prod+3,?___flmul+3
  8289                           
  8290                           ; BSR set to: 0
  8291  00348E  0012               	return		;funcret
  8292  003490                     __end_of___flmul:
  8293                           	callstack 0
  8294                           
  8295 ;; *************** function ___flge *****************
  8296 ;; Defined at:
  8297 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;  ff1             4   46[COMRAM] unsigned char 
  8300 ;;  ff2             4   50[COMRAM] unsigned char 
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;		None               void
  8305 ;; Registers used:
  8306 ;;		wreg, status,2, status,0
  8307 ;; Tracked objects:
  8308 ;;		On entry : 3F/0
  8309 ;;		On exit  : 3F/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8312 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8314 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8315 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8316 ;;Total ram usage:       12 bytes
  8317 ;; Hardware stack levels used: 1
  8318 ;; Hardware stack levels required when called: 4
  8319 ;; This function calls:
  8320 ;;		Nothing
  8321 ;; This function is called by:
  8322 ;;		_efgtoa
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           	psect	text23
  8327  004956                     __ptext23:
  8328                           	callstack 0
  8329  004956                     ___flge:
  8330                           	callstack 20
  8331                           
  8332                           ; BSR set to: 0
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;incstack = 0
  8336  004956  0E00               	movlw	0
  8337  004958  142F               	andwf	___flge@ff1^0,w,c
  8338  00495A  6F6D               	movwf	??___flge& (0+255),b
  8339  00495C  0E00               	movlw	0
  8340  00495E  1430               	andwf	(___flge@ff1+1)^0,w,c
  8341  004960  6F6E               	movwf	(??___flge+1)& (0+255),b
  8342  004962  0E80               	movlw	128
  8343  004964  1431               	andwf	(___flge@ff1+2)^0,w,c
  8344  004966  6F6F               	movwf	(??___flge+2)& (0+255),b
  8345  004968  0E7F               	movlw	127
  8346  00496A  1432               	andwf	(___flge@ff1+3)^0,w,c
  8347  00496C  6F70               	movwf	(??___flge+3)& (0+255),b
  8348  00496E  516D               	movf	??___flge& (0+255),w,b
  8349  004970  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8350  004972  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8351  004974  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8352  004976  A4D8               	btfss	status,2,c
  8353  004978  D008               	goto	l9360
  8354                           
  8355                           ; BSR set to: 0
  8356  00497A  0E00               	movlw	0
  8357  00497C  6E2F               	movwf	___flge@ff1^0,c
  8358  00497E  0E00               	movlw	0
  8359  004980  6E30               	movwf	(___flge@ff1+1)^0,c
  8360  004982  0E00               	movlw	0
  8361  004984  6E31               	movwf	(___flge@ff1+2)^0,c
  8362  004986  0E00               	movlw	0
  8363  004988  6E32               	movwf	(___flge@ff1+3)^0,c
  8364  00498A                     l9360:
  8365                           
  8366                           ; BSR set to: 0
  8367  00498A  0E00               	movlw	0
  8368  00498C  1433               	andwf	___flge@ff2^0,w,c
  8369  00498E  6F6D               	movwf	??___flge& (0+255),b
  8370  004990  0E00               	movlw	0
  8371  004992  1434               	andwf	(___flge@ff2+1)^0,w,c
  8372  004994  6F6E               	movwf	(??___flge+1)& (0+255),b
  8373  004996  0E80               	movlw	128
  8374  004998  1435               	andwf	(___flge@ff2+2)^0,w,c
  8375  00499A  6F6F               	movwf	(??___flge+2)& (0+255),b
  8376  00499C  0E7F               	movlw	127
  8377  00499E  1436               	andwf	(___flge@ff2+3)^0,w,c
  8378  0049A0  6F70               	movwf	(??___flge+3)& (0+255),b
  8379  0049A2  516D               	movf	??___flge& (0+255),w,b
  8380  0049A4  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8381  0049A6  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8382  0049A8  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8383  0049AA  A4D8               	btfss	status,2,c
  8384  0049AC  D008               	goto	l9364
  8385                           
  8386                           ; BSR set to: 0
  8387  0049AE  0E00               	movlw	0
  8388  0049B0  6E33               	movwf	___flge@ff2^0,c
  8389  0049B2  0E00               	movlw	0
  8390  0049B4  6E34               	movwf	(___flge@ff2+1)^0,c
  8391  0049B6  0E00               	movlw	0
  8392  0049B8  6E35               	movwf	(___flge@ff2+2)^0,c
  8393  0049BA  0E00               	movlw	0
  8394  0049BC  6E36               	movwf	(___flge@ff2+3)^0,c
  8395  0049BE                     l9364:
  8396                           
  8397                           ; BSR set to: 0
  8398  0049BE  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8399  0049C0  D009               	goto	l9368
  8400                           
  8401                           ; BSR set to: 0
  8402  0049C2  6C2F               	negf	___flge@ff1^0,c
  8403  0049C4  1E30               	comf	(___flge@ff1+1)^0,f,c
  8404  0049C6  B0D8               	btfsc	status,0,c
  8405  0049C8  2A30               	incf	(___flge@ff1+1)^0,f,c
  8406  0049CA  1E31               	comf	(___flge@ff1+2)^0,f,c
  8407  0049CC  B0D8               	btfsc	status,0,c
  8408  0049CE  2A31               	incf	(___flge@ff1+2)^0,f,c
  8409  0049D0  0E80               	movlw	128
  8410  0049D2  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8411  0049D4                     l9368:
  8412                           
  8413                           ; BSR set to: 0
  8414  0049D4  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8415  0049D6  D009               	goto	l1404
  8416                           
  8417                           ; BSR set to: 0
  8418  0049D8  6C33               	negf	___flge@ff2^0,c
  8419  0049DA  1E34               	comf	(___flge@ff2+1)^0,f,c
  8420  0049DC  B0D8               	btfsc	status,0,c
  8421  0049DE  2A34               	incf	(___flge@ff2+1)^0,f,c
  8422  0049E0  1E35               	comf	(___flge@ff2+2)^0,f,c
  8423  0049E2  B0D8               	btfsc	status,0,c
  8424  0049E4  2A35               	incf	(___flge@ff2+2)^0,f,c
  8425  0049E6  0E80               	movlw	128
  8426  0049E8  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8427  0049EA                     l1404:
  8428                           
  8429                           ; BSR set to: 0
  8430  0049EA  0E00               	movlw	0
  8431  0049EC  1A2F               	xorwf	___flge@ff1^0,f,c
  8432  0049EE  0E00               	movlw	0
  8433  0049F0  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8434  0049F2  0E00               	movlw	0
  8435  0049F4  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8436  0049F6  0E80               	movlw	128
  8437  0049F8  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8438  0049FA  0E00               	movlw	0
  8439  0049FC  1A33               	xorwf	___flge@ff2^0,f,c
  8440  0049FE  0E00               	movlw	0
  8441  004A00  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8442  004A02  0E00               	movlw	0
  8443  004A04  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8444  004A06  0E80               	movlw	128
  8445  004A08  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8446  004A0A  5033               	movf	___flge@ff2^0,w,c
  8447  004A0C  5C2F               	subwf	___flge@ff1^0,w,c
  8448  004A0E  5034               	movf	(___flge@ff2+1)^0,w,c
  8449  004A10  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8450  004A12  5035               	movf	(___flge@ff2+2)^0,w,c
  8451  004A14  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8452  004A16  5036               	movf	(___flge@ff2+3)^0,w,c
  8453  004A18  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8454  004A1A  B0D8               	btfsc	status,0,c
  8455  004A1C  D002               	goto	l9374
  8456                           
  8457                           ; BSR set to: 0
  8458  004A1E  90D8               	bcf	status,0,c
  8459  004A20  0012               	return	
  8460  004A22                     l9374:
  8461                           
  8462                           ; BSR set to: 0
  8463  004A22  80D8               	bsf	status,0,c
  8464                           
  8465                           ; BSR set to: 0
  8466  004A24  0012               	return		;funcret
  8467  004A26                     __end_of___flge:
  8468                           	callstack 0
  8469                           
  8470 ;; *************** function ___fleq *****************
  8471 ;; Defined at:
  8472 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;  ff1             4   20[COMRAM] unsigned char 
  8475 ;;  ff2             4   24[COMRAM] unsigned char 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;		None
  8478 ;; Return value:  Size  Location     Type
  8479 ;;		None               void
  8480 ;; Registers used:
  8481 ;;		wreg, status,2, status,0
  8482 ;; Tracked objects:
  8483 ;;		On entry : 3F/0
  8484 ;;		On exit  : 3F/0
  8485 ;;		Unchanged: 3F/0
  8486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8487 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8490 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8491 ;;Total ram usage:       12 bytes
  8492 ;; Hardware stack levels used: 1
  8493 ;; Hardware stack levels required when called: 4
  8494 ;; This function calls:
  8495 ;;		Nothing
  8496 ;; This function is called by:
  8497 ;;		_efgtoa
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           	psect	text24
  8502  0051DC                     __ptext24:
  8503                           	callstack 0
  8504  0051DC                     ___fleq:
  8505                           	callstack 20
  8506                           
  8507                           ; BSR set to: 0
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;incstack = 0
  8511  0051DC  0E00               	movlw	0
  8512  0051DE  1415               	andwf	___fleq@ff1^0,w,c
  8513  0051E0  6E1D               	movwf	??___fleq^0,c
  8514  0051E2  0E00               	movlw	0
  8515  0051E4  1416               	andwf	(___fleq@ff1+1)^0,w,c
  8516  0051E6  6E1E               	movwf	(??___fleq+1)^0,c
  8517  0051E8  0E80               	movlw	128
  8518  0051EA  1417               	andwf	(___fleq@ff1+2)^0,w,c
  8519  0051EC  6E1F               	movwf	(??___fleq+2)^0,c
  8520  0051EE  0E7F               	movlw	127
  8521  0051F0  1418               	andwf	(___fleq@ff1+3)^0,w,c
  8522  0051F2  6E20               	movwf	(??___fleq+3)^0,c
  8523  0051F4  501D               	movf	??___fleq^0,w,c
  8524  0051F6  101E               	iorwf	(??___fleq+1)^0,w,c
  8525  0051F8  101F               	iorwf	(??___fleq+2)^0,w,c
  8526  0051FA  1020               	iorwf	(??___fleq+3)^0,w,c
  8527  0051FC  A4D8               	btfss	status,2,c
  8528  0051FE  D008               	goto	l9344
  8529                           
  8530                           ; BSR set to: 0
  8531  005200  0E00               	movlw	0
  8532  005202  6E15               	movwf	___fleq@ff1^0,c
  8533  005204  0E00               	movlw	0
  8534  005206  6E16               	movwf	(___fleq@ff1+1)^0,c
  8535  005208  0E00               	movlw	0
  8536  00520A  6E17               	movwf	(___fleq@ff1+2)^0,c
  8537  00520C  0E00               	movlw	0
  8538  00520E  6E18               	movwf	(___fleq@ff1+3)^0,c
  8539  005210                     l9344:
  8540                           
  8541                           ; BSR set to: 0
  8542  005210  0E00               	movlw	0
  8543  005212  1419               	andwf	___fleq@ff2^0,w,c
  8544  005214  6E1D               	movwf	??___fleq^0,c
  8545  005216  0E00               	movlw	0
  8546  005218  141A               	andwf	(___fleq@ff2+1)^0,w,c
  8547  00521A  6E1E               	movwf	(??___fleq+1)^0,c
  8548  00521C  0E80               	movlw	128
  8549  00521E  141B               	andwf	(___fleq@ff2+2)^0,w,c
  8550  005220  6E1F               	movwf	(??___fleq+2)^0,c
  8551  005222  0E7F               	movlw	127
  8552  005224  141C               	andwf	(___fleq@ff2+3)^0,w,c
  8553  005226  6E20               	movwf	(??___fleq+3)^0,c
  8554  005228  501D               	movf	??___fleq^0,w,c
  8555  00522A  101E               	iorwf	(??___fleq+1)^0,w,c
  8556  00522C  101F               	iorwf	(??___fleq+2)^0,w,c
  8557  00522E  1020               	iorwf	(??___fleq+3)^0,w,c
  8558  005230  A4D8               	btfss	status,2,c
  8559  005232  D008               	goto	l9348
  8560                           
  8561                           ; BSR set to: 0
  8562  005234  0E00               	movlw	0
  8563  005236  6E19               	movwf	___fleq@ff2^0,c
  8564  005238  0E00               	movlw	0
  8565  00523A  6E1A               	movwf	(___fleq@ff2+1)^0,c
  8566  00523C  0E00               	movlw	0
  8567  00523E  6E1B               	movwf	(___fleq@ff2+2)^0,c
  8568  005240  0E00               	movlw	0
  8569  005242  6E1C               	movwf	(___fleq@ff2+3)^0,c
  8570  005244                     l9348:
  8571                           
  8572                           ; BSR set to: 0
  8573  005244  5019               	movf	___fleq@ff2^0,w,c
  8574  005246  1815               	xorwf	___fleq@ff1^0,w,c
  8575  005248  E10A               	bnz	u10550
  8576  00524A  501A               	movf	(___fleq@ff2+1)^0,w,c
  8577  00524C  1816               	xorwf	(___fleq@ff1+1)^0,w,c
  8578  00524E  E107               	bnz	u10550
  8579  005250  501B               	movf	(___fleq@ff2+2)^0,w,c
  8580  005252  1817               	xorwf	(___fleq@ff1+2)^0,w,c
  8581  005254  E104               	bnz	u10550
  8582  005256  501C               	movf	(___fleq@ff2+3)^0,w,c
  8583  005258  1818               	xorwf	(___fleq@ff1+3)^0,w,c
  8584  00525A  B4D8               	btfsc	status,2,c
  8585  00525C  D002               	goto	l9352
  8586  00525E                     u10550:
  8587                           
  8588                           ; BSR set to: 0
  8589  00525E  90D8               	bcf	status,0,c
  8590  005260  0012               	return	
  8591  005262                     l9352:
  8592                           
  8593                           ; BSR set to: 0
  8594  005262  80D8               	bsf	status,0,c
  8595                           
  8596                           ; BSR set to: 0
  8597  005264  0012               	return		;funcret
  8598  005266                     __end_of___fleq:
  8599                           	callstack 0
  8600                           
  8601 ;; *************** function ___fldiv *****************
  8602 ;; Defined at:
  8603 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;  b               4   20[COMRAM] unsigned char 
  8606 ;;  a               4   24[COMRAM] unsigned char 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;  grs             4   39[COMRAM] unsigned long 
  8609 ;;  rem             4   32[COMRAM] unsigned long 
  8610 ;;  new_exp         2   37[COMRAM] short 
  8611 ;;  aexp            1   44[COMRAM] unsigned char 
  8612 ;;  bexp            1   43[COMRAM] unsigned char 
  8613 ;;  sign            1   36[COMRAM] unsigned char 
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  4   20[COMRAM] unsigned char 
  8616 ;; Registers used:
  8617 ;;		wreg, status,2, status,0
  8618 ;; Tracked objects:
  8619 ;;		On entry : 3F/0
  8620 ;;		On exit  : 3F/0
  8621 ;;		Unchanged: 3F/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8623 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8624 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8625 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8626 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8627 ;;Total ram usage:       25 bytes
  8628 ;; Hardware stack levels used: 1
  8629 ;; Hardware stack levels required when called: 4
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_efgtoa
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text25
  8638  00379C                     __ptext25:
  8639                           	callstack 0
  8640  00379C                     ___fldiv:
  8641                           	callstack 20
  8642                           
  8643                           ; BSR set to: 0
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;incstack = 0
  8647  00379C  5018               	movf	(___fldiv@b+3)^0,w,c
  8648  00379E  0B80               	andlw	128
  8649  0037A0  6E25               	movwf	___fldiv@sign^0,c
  8650  0037A2  5018               	movf	(___fldiv@b+3)^0,w,c
  8651  0037A4  2418               	addwf	(___fldiv@b+3)^0,w,c
  8652  0037A6  6E2C               	movwf	___fldiv@bexp^0,c
  8653                           
  8654                           ; BSR set to: 0
  8655  0037A8  BE17               	btfsc	(___fldiv@b+2)^0,7,c
  8656                           
  8657                           ; BSR set to: 0
  8658  0037AA  802C               	bsf	___fldiv@bexp^0,0,c
  8659                           
  8660                           ; BSR set to: 0
  8661  0037AC  502C               	movf	___fldiv@bexp^0,w,c
  8662  0037AE  B4D8               	btfsc	status,2,c
  8663  0037B0  D00D               	goto	l9002
  8664                           
  8665                           ; BSR set to: 0
  8666  0037B2  282C               	incf	___fldiv@bexp^0,w,c
  8667  0037B4  A4D8               	btfss	status,2,c
  8668  0037B6  D008               	goto	l8998
  8669                           
  8670                           ; BSR set to: 0
  8671  0037B8  0E00               	movlw	0
  8672  0037BA  6E15               	movwf	___fldiv@b^0,c
  8673  0037BC  0E00               	movlw	0
  8674  0037BE  6E16               	movwf	(___fldiv@b+1)^0,c
  8675  0037C0  0E00               	movlw	0
  8676  0037C2  6E17               	movwf	(___fldiv@b+2)^0,c
  8677  0037C4  0E00               	movlw	0
  8678  0037C6  6E18               	movwf	(___fldiv@b+3)^0,c
  8679  0037C8                     l8998:
  8680                           
  8681                           ; BSR set to: 0
  8682  0037C8  8E17               	bsf	(___fldiv@b+2)^0,7,c
  8683  0037CA  D006               	goto	L12
  8684  0037CC                     l9002:
  8685                           
  8686                           ; BSR set to: 0
  8687  0037CC  0E00               	movlw	0
  8688  0037CE  6E15               	movwf	___fldiv@b^0,c
  8689  0037D0  0E00               	movlw	0
  8690  0037D2  6E16               	movwf	(___fldiv@b+1)^0,c
  8691  0037D4  0E00               	movlw	0
  8692  0037D6  6E17               	movwf	(___fldiv@b+2)^0,c
  8693  0037D8                     L12:
  8694  0037D8  0E00               	movlw	0
  8695  0037DA  6E18               	movwf	(___fldiv@b+3)^0,c
  8696                           
  8697                           ; BSR set to: 0
  8698  0037DC  501C               	movf	(___fldiv@a+3)^0,w,c
  8699  0037DE  0B80               	andlw	128
  8700  0037E0  1A25               	xorwf	___fldiv@sign^0,f,c
  8701                           
  8702                           ; BSR set to: 0
  8703  0037E2  501C               	movf	(___fldiv@a+3)^0,w,c
  8704  0037E4  241C               	addwf	(___fldiv@a+3)^0,w,c
  8705  0037E6  6E2D               	movwf	___fldiv@aexp^0,c
  8706                           
  8707                           ; BSR set to: 0
  8708  0037E8  BE1B               	btfsc	(___fldiv@a+2)^0,7,c
  8709                           
  8710                           ; BSR set to: 0
  8711  0037EA  802D               	bsf	___fldiv@aexp^0,0,c
  8712                           
  8713                           ; BSR set to: 0
  8714  0037EC  502D               	movf	___fldiv@aexp^0,w,c
  8715  0037EE  B4D8               	btfsc	status,2,c
  8716  0037F0  D00D               	goto	l9022
  8717                           
  8718                           ; BSR set to: 0
  8719  0037F2  282D               	incf	___fldiv@aexp^0,w,c
  8720  0037F4  A4D8               	btfss	status,2,c
  8721  0037F6  D008               	goto	l9018
  8722                           
  8723                           ; BSR set to: 0
  8724  0037F8  0E00               	movlw	0
  8725  0037FA  6E19               	movwf	___fldiv@a^0,c
  8726  0037FC  0E00               	movlw	0
  8727  0037FE  6E1A               	movwf	(___fldiv@a+1)^0,c
  8728  003800  0E00               	movlw	0
  8729  003802  6E1B               	movwf	(___fldiv@a+2)^0,c
  8730  003804  0E00               	movlw	0
  8731  003806  6E1C               	movwf	(___fldiv@a+3)^0,c
  8732  003808                     l9018:
  8733                           
  8734                           ; BSR set to: 0
  8735  003808  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  8736  00380A  D006               	goto	L13
  8737  00380C                     l9022:
  8738                           
  8739                           ; BSR set to: 0
  8740  00380C  0E00               	movlw	0
  8741  00380E  6E19               	movwf	___fldiv@a^0,c
  8742  003810  0E00               	movlw	0
  8743  003812  6E1A               	movwf	(___fldiv@a+1)^0,c
  8744  003814  0E00               	movlw	0
  8745  003816  6E1B               	movwf	(___fldiv@a+2)^0,c
  8746  003818                     L13:
  8747  003818  0E00               	movlw	0
  8748  00381A  6E1C               	movwf	(___fldiv@a+3)^0,c
  8749                           
  8750                           ; BSR set to: 0
  8751  00381C  5019               	movf	___fldiv@a^0,w,c
  8752  00381E  101A               	iorwf	(___fldiv@a+1)^0,w,c
  8753  003820  101B               	iorwf	(___fldiv@a+2)^0,w,c
  8754  003822  101C               	iorwf	(___fldiv@a+3)^0,w,c
  8755  003824  A4D8               	btfss	status,2,c
  8756  003826  D017               	goto	l9036
  8757                           
  8758                           ; BSR set to: 0
  8759  003828  0E00               	movlw	0
  8760  00382A  6E15               	movwf	___fldiv@b^0,c
  8761  00382C  0E00               	movlw	0
  8762  00382E  6E16               	movwf	(___fldiv@b+1)^0,c
  8763  003830  0E00               	movlw	0
  8764  003832  6E17               	movwf	(___fldiv@b+2)^0,c
  8765  003834  0E00               	movlw	0
  8766  003836  6E18               	movwf	(___fldiv@b+3)^0,c
  8767                           
  8768                           ; BSR set to: 0
  8769  003838  0E80               	movlw	128
  8770  00383A  1217               	iorwf	(___fldiv@b+2)^0,f,c
  8771  00383C  0E7F               	movlw	127
  8772  00383E  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8773  003840                     l9030:
  8774                           
  8775                           ; BSR set to: 0
  8776  003840  5025               	movf	___fldiv@sign^0,w,c
  8777  003842  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8778                           
  8779                           ; BSR set to: 0
  8780  003844  C015  F015         	movff	___fldiv@b,?___fldiv
  8781  003848  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  8782  00384C  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  8783  003850  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  8784  003854  0012               	return	
  8785  003856                     l9036:
  8786                           
  8787                           ; BSR set to: 0
  8788  003856  502C               	movf	___fldiv@bexp^0,w,c
  8789  003858  A4D8               	btfss	status,2,c
  8790  00385A  D009               	goto	l9044
  8791                           
  8792                           ; BSR set to: 0
  8793                           
  8794                           ; BSR set to: 0
  8795  00385C  0E00               	movlw	0
  8796  00385E  6E15               	movwf	?___fldiv^0,c
  8797  003860  0E00               	movlw	0
  8798  003862  6E16               	movwf	(?___fldiv+1)^0,c
  8799  003864  0E00               	movlw	0
  8800  003866  6E17               	movwf	(?___fldiv+2)^0,c
  8801  003868  0E00               	movlw	0
  8802  00386A  6E18               	movwf	(?___fldiv+3)^0,c
  8803  00386C  0012               	return	
  8804  00386E                     l9044:
  8805                           
  8806                           ; BSR set to: 0
  8807  00386E  502D               	movf	___fldiv@aexp^0,w,c
  8808  003870  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  8809  003874  6A1E               	clrf	(??___fldiv+1)^0,c
  8810  003876  5E1D               	subwf	??___fldiv^0,f,c
  8811  003878  0E00               	movlw	0
  8812  00387A  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  8813  00387C  0E7F               	movlw	127
  8814  00387E  241D               	addwf	??___fldiv^0,w,c
  8815  003880  6E26               	movwf	___fldiv@new_exp^0,c
  8816  003882  0E00               	movlw	0
  8817  003884  201E               	addwfc	(??___fldiv+1)^0,w,c
  8818  003886  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  8819                           
  8820                           ; BSR set to: 0
  8821  003888  C015  F021         	movff	___fldiv@b,___fldiv@rem
  8822  00388C  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  8823  003890  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  8824  003894  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  8825                           
  8826                           ; BSR set to: 0
  8827  003898  0E00               	movlw	0
  8828  00389A  6E15               	movwf	___fldiv@b^0,c
  8829  00389C  0E00               	movlw	0
  8830  00389E  6E16               	movwf	(___fldiv@b+1)^0,c
  8831  0038A0  0E00               	movlw	0
  8832  0038A2  6E17               	movwf	(___fldiv@b+2)^0,c
  8833  0038A4  0E00               	movlw	0
  8834  0038A6  6E18               	movwf	(___fldiv@b+3)^0,c
  8835                           
  8836                           ; BSR set to: 0
  8837  0038A8  0E00               	movlw	0
  8838  0038AA  6E28               	movwf	___fldiv@grs^0,c
  8839  0038AC  0E00               	movlw	0
  8840  0038AE  6E29               	movwf	(___fldiv@grs+1)^0,c
  8841  0038B0  0E00               	movlw	0
  8842  0038B2  6E2A               	movwf	(___fldiv@grs+2)^0,c
  8843  0038B4  0E00               	movlw	0
  8844  0038B6  6E2B               	movwf	(___fldiv@grs+3)^0,c
  8845                           
  8846                           ; BSR set to: 0
  8847  0038B8  0E00               	movlw	0
  8848  0038BA  6E2D               	movwf	___fldiv@aexp^0,c
  8849  0038BC  D028               	goto	l1723
  8850  0038BE                     l9054:
  8851                           
  8852                           ; BSR set to: 0
  8853  0038BE  502D               	movf	___fldiv@aexp^0,w,c
  8854  0038C0  B4D8               	btfsc	status,2,c
  8855  0038C2  D011               	goto	l9062
  8856                           
  8857                           ; BSR set to: 0
  8858  0038C4  90D8               	bcf	status,0,c
  8859  0038C6  3621               	rlcf	___fldiv@rem^0,f,c
  8860  0038C8  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  8861  0038CA  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  8862  0038CC  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  8863  0038CE  90D8               	bcf	status,0,c
  8864  0038D0  3615               	rlcf	___fldiv@b^0,f,c
  8865  0038D2  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8866  0038D4  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8867  0038D6  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8868                           
  8869                           ; BSR set to: 0
  8870  0038D8  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8871                           
  8872                           ; BSR set to: 0
  8873  0038DA  8015               	bsf	___fldiv@b^0,0,c
  8874                           
  8875                           ; BSR set to: 0
  8876  0038DC  90D8               	bcf	status,0,c
  8877  0038DE  3628               	rlcf	___fldiv@grs^0,f,c
  8878  0038E0  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8879  0038E2  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8880  0038E4  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8881  0038E6                     l9062:
  8882                           
  8883                           ; BSR set to: 0
  8884  0038E6  5019               	movf	___fldiv@a^0,w,c
  8885  0038E8  5C21               	subwf	___fldiv@rem^0,w,c
  8886  0038EA  501A               	movf	(___fldiv@a+1)^0,w,c
  8887  0038EC  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  8888  0038EE  501B               	movf	(___fldiv@a+2)^0,w,c
  8889  0038F0  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  8890  0038F2  501C               	movf	(___fldiv@a+3)^0,w,c
  8891  0038F4  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  8892  0038F6  A0D8               	btfss	status,0,c
  8893  0038F8  D009               	goto	l9068
  8894                           
  8895                           ; BSR set to: 0
  8896  0038FA  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  8897                           
  8898                           ; BSR set to: 0
  8899  0038FC  5019               	movf	___fldiv@a^0,w,c
  8900  0038FE  5E21               	subwf	___fldiv@rem^0,f,c
  8901  003900  501A               	movf	(___fldiv@a+1)^0,w,c
  8902  003902  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  8903  003904  501B               	movf	(___fldiv@a+2)^0,w,c
  8904  003906  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  8905  003908  501C               	movf	(___fldiv@a+3)^0,w,c
  8906  00390A  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  8907  00390C                     l9068:
  8908                           
  8909                           ; BSR set to: 0
  8910  00390C  2A2D               	incf	___fldiv@aexp^0,f,c
  8911  00390E                     l1723:
  8912                           
  8913                           ; BSR set to: 0
  8914  00390E  0E19               	movlw	25
  8915  003910  642D               	cpfsgt	___fldiv@aexp^0,c
  8916  003912  D7D5               	goto	l9054
  8917                           
  8918                           ; BSR set to: 0
  8919  003914  5021               	movf	___fldiv@rem^0,w,c
  8920  003916  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  8921  003918  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  8922  00391A  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  8923  00391C  B4D8               	btfsc	status,2,c
  8924  00391E  D011               	goto	l9080
  8925                           
  8926                           ; BSR set to: 0
  8927  003920  8028               	bsf	___fldiv@grs^0,0,c
  8928  003922  D00F               	goto	l9080
  8929  003924                     l9074:
  8930                           
  8931                           ; BSR set to: 0
  8932  003924  90D8               	bcf	status,0,c
  8933  003926  3615               	rlcf	___fldiv@b^0,f,c
  8934  003928  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8935  00392A  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8936  00392C  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8937                           
  8938                           ; BSR set to: 0
  8939  00392E  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8940                           
  8941                           ; BSR set to: 0
  8942  003930  8015               	bsf	___fldiv@b^0,0,c
  8943                           
  8944                           ; BSR set to: 0
  8945  003932  90D8               	bcf	status,0,c
  8946  003934  3628               	rlcf	___fldiv@grs^0,f,c
  8947  003936  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8948  003938  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8949  00393A  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8950  00393C  0626               	decf	___fldiv@new_exp^0,f,c
  8951  00393E  A0D8               	btfss	status,0,c
  8952  003940  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  8953  003942                     l9080:
  8954                           
  8955                           ; BSR set to: 0
  8956  003942  AE17               	btfss	(___fldiv@b+2)^0,7,c
  8957  003944  D7EF               	goto	l9074
  8958                           
  8959                           ; BSR set to: 0
  8960  003946  0E00               	movlw	0
  8961  003948  6E2D               	movwf	___fldiv@aexp^0,c
  8962                           
  8963                           ; BSR set to: 0
  8964  00394A  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  8965  00394C  D017               	goto	l1734
  8966                           
  8967                           ; BSR set to: 0
  8968  00394E  0EFF               	movlw	255
  8969  003950  1428               	andwf	___fldiv@grs^0,w,c
  8970  003952  6E1D               	movwf	??___fldiv^0,c
  8971  003954  0EFF               	movlw	255
  8972  003956  1429               	andwf	(___fldiv@grs+1)^0,w,c
  8973  003958  6E1E               	movwf	(??___fldiv+1)^0,c
  8974  00395A  0EFF               	movlw	255
  8975  00395C  142A               	andwf	(___fldiv@grs+2)^0,w,c
  8976  00395E  6E1F               	movwf	(??___fldiv+2)^0,c
  8977  003960  0E7F               	movlw	127
  8978  003962  142B               	andwf	(___fldiv@grs+3)^0,w,c
  8979  003964  6E20               	movwf	(??___fldiv+3)^0,c
  8980  003966  501D               	movf	??___fldiv^0,w,c
  8981  003968  101E               	iorwf	(??___fldiv+1)^0,w,c
  8982  00396A  101F               	iorwf	(??___fldiv+2)^0,w,c
  8983  00396C  1020               	iorwf	(??___fldiv+3)^0,w,c
  8984  00396E  B4D8               	btfsc	status,2,c
  8985  003970  D003               	goto	l1735
  8986  003972                     u10160:
  8987                           
  8988                           ; BSR set to: 0
  8989  003972  0E01               	movlw	1
  8990  003974  6E2D               	movwf	___fldiv@aexp^0,c
  8991  003976  D002               	goto	l1734
  8992  003978                     l1735:
  8993                           
  8994                           ; BSR set to: 0
  8995  003978  B015               	btfsc	___fldiv@b^0,0,c
  8996  00397A  D7FB               	goto	u10160
  8997  00397C                     l1734:
  8998                           
  8999                           ; BSR set to: 0
  9000  00397C  502D               	movf	___fldiv@aexp^0,w,c
  9001  00397E  B4D8               	btfsc	status,2,c
  9002  003980  D01F               	goto	l9100
  9003                           
  9004                           ; BSR set to: 0
  9005  003982  0E01               	movlw	1
  9006  003984  2615               	addwf	___fldiv@b^0,f,c
  9007  003986  0E00               	movlw	0
  9008  003988  2216               	addwfc	(___fldiv@b+1)^0,f,c
  9009  00398A  2217               	addwfc	(___fldiv@b+2)^0,f,c
  9010  00398C  2218               	addwfc	(___fldiv@b+3)^0,f,c
  9011                           
  9012                           ; BSR set to: 0
  9013  00398E  A018               	btfss	(___fldiv@b+3)^0,0,c
  9014  003990  D017               	goto	l9100
  9015                           
  9016                           ; BSR set to: 0
  9017  003992  C015  F01D         	movff	___fldiv@b,??___fldiv
  9018  003996  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  9019  00399A  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  9020  00399E  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  9021  0039A2  3420               	rlcf	(??___fldiv+3)^0,w,c
  9022  0039A4  3220               	rrcf	(??___fldiv+3)^0,f,c
  9023  0039A6  321F               	rrcf	(??___fldiv+2)^0,f,c
  9024  0039A8  321E               	rrcf	(??___fldiv+1)^0,f,c
  9025  0039AA  321D               	rrcf	??___fldiv^0,f,c
  9026  0039AC  C01D  F015         	movff	??___fldiv,___fldiv@b
  9027  0039B0  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  9028  0039B4  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  9029  0039B8  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  9030                           
  9031                           ; BSR set to: 0
  9032  0039BC  4A26               	infsnz	___fldiv@new_exp^0,f,c
  9033  0039BE  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  9034  0039C0                     l9100:
  9035                           
  9036                           ; BSR set to: 0
  9037  0039C0  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9038  0039C2  D010               	goto	l9104
  9039  0039C4  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9040  0039C6  E103               	bnz	u10200
  9041  0039C8  2826               	incf	___fldiv@new_exp^0,w,c
  9042  0039CA  A0D8               	btfss	status,0,c
  9043  0039CC  D00B               	goto	l9104
  9044  0039CE                     u10200:
  9045                           
  9046                           ; BSR set to: 0
  9047  0039CE  0E00               	movlw	0
  9048  0039D0  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9049  0039D2  6826               	setf	___fldiv@new_exp^0,c
  9050  0039D4  0E00               	movlw	0
  9051  0039D6  6E15               	movwf	___fldiv@b^0,c
  9052  0039D8  0E00               	movlw	0
  9053  0039DA  6E16               	movwf	(___fldiv@b+1)^0,c
  9054  0039DC  0E00               	movlw	0
  9055  0039DE  6E17               	movwf	(___fldiv@b+2)^0,c
  9056  0039E0  0E00               	movlw	0
  9057  0039E2  6E18               	movwf	(___fldiv@b+3)^0,c
  9058  0039E4                     l9104:
  9059                           
  9060                           ; BSR set to: 0
  9061  0039E4  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9062  0039E6  D005               	goto	u10210
  9063  0039E8  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9064  0039EA  E111               	bnz	l9108
  9065  0039EC  0426               	decf	___fldiv@new_exp^0,w,c
  9066  0039EE  B0D8               	btfsc	status,0,c
  9067  0039F0  D00E               	goto	l9108
  9068  0039F2                     u10210:
  9069                           
  9070                           ; BSR set to: 0
  9071  0039F2  0E00               	movlw	0
  9072  0039F4  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9073  0039F6  0E00               	movlw	0
  9074  0039F8  6E26               	movwf	___fldiv@new_exp^0,c
  9075  0039FA  0E00               	movlw	0
  9076  0039FC  6E15               	movwf	___fldiv@b^0,c
  9077  0039FE  0E00               	movlw	0
  9078  003A00  6E16               	movwf	(___fldiv@b+1)^0,c
  9079  003A02  0E00               	movlw	0
  9080  003A04  6E17               	movwf	(___fldiv@b+2)^0,c
  9081  003A06  0E00               	movlw	0
  9082  003A08  6E18               	movwf	(___fldiv@b+3)^0,c
  9083  003A0A  0E00               	movlw	0
  9084  003A0C  6E25               	movwf	___fldiv@sign^0,c
  9085  003A0E                     l9108:
  9086                           
  9087                           ; BSR set to: 0
  9088  003A0E  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  9089                           
  9090                           ; BSR set to: 0
  9091  003A12  A02C               	btfss	___fldiv@bexp^0,0,c
  9092  003A14  D002               	goto	l9114
  9093                           
  9094                           ; BSR set to: 0
  9095  003A16  8E17               	bsf	(___fldiv@b+2)^0,7,c
  9096  003A18  D001               	goto	l9116
  9097  003A1A                     l9114:
  9098                           
  9099                           ; BSR set to: 0
  9100  003A1A  9E17               	bcf	(___fldiv@b+2)^0,7,c
  9101  003A1C                     l9116:
  9102                           
  9103                           ; BSR set to: 0
  9104  003A1C  90D8               	bcf	status,0,c
  9105  003A1E  302C               	rrcf	___fldiv@bexp^0,w,c
  9106  003A20  6E18               	movwf	(___fldiv@b+3)^0,c
  9107  003A22  D70E               	goto	l9030
  9108  003A24                     __end_of___fldiv:
  9109                           	callstack 0
  9110                           
  9111 ;; *************** function ___awmod *****************
  9112 ;; Defined at:
  9113 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  dividend        2   20[COMRAM] int 
  9116 ;;  divisor         2   22[COMRAM] int 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  sign            1   25[COMRAM] unsigned char 
  9119 ;;  counter         1   24[COMRAM] unsigned char 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  2   20[COMRAM] int 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0
  9124 ;; Tracked objects:
  9125 ;;		On entry : 3F/0
  9126 ;;		On exit  : 3F/0
  9127 ;;		Unchanged: 3F/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9133 ;;Total ram usage:        6 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; Hardware stack levels required when called: 4
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_efgtoa
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           	psect	text26
  9144  0053E0                     __ptext26:
  9145                           	callstack 0
  9146  0053E0                     ___awmod:
  9147                           	callstack 20
  9148                           
  9149                           ; BSR set to: 0
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;incstack = 0
  9153  0053E0  0E00               	movlw	0
  9154  0053E2  6E1A               	movwf	___awmod@sign^0,c
  9155                           
  9156                           ; BSR set to: 0
  9157  0053E4  AE16               	btfss	(___awmod@dividend+1)^0,7,c
  9158  0053E6  D006               	goto	l9312
  9159                           
  9160                           ; BSR set to: 0
  9161  0053E8  6C15               	negf	___awmod@dividend^0,c
  9162  0053EA  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9163  0053EC  B0D8               	btfsc	status,0,c
  9164  0053EE  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9165                           
  9166                           ; BSR set to: 0
  9167  0053F0  0E01               	movlw	1
  9168  0053F2  6E1A               	movwf	___awmod@sign^0,c
  9169  0053F4                     l9312:
  9170                           
  9171                           ; BSR set to: 0
  9172  0053F4  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9173  0053F6  D004               	goto	l9316
  9174                           
  9175                           ; BSR set to: 0
  9176  0053F8  6C17               	negf	___awmod@divisor^0,c
  9177  0053FA  1E18               	comf	(___awmod@divisor+1)^0,f,c
  9178  0053FC  B0D8               	btfsc	status,0,c
  9179  0053FE  2A18               	incf	(___awmod@divisor+1)^0,f,c
  9180  005400                     l9316:
  9181                           
  9182                           ; BSR set to: 0
  9183  005400  5017               	movf	___awmod@divisor^0,w,c
  9184  005402  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  9185  005404  B4D8               	btfsc	status,2,c
  9186  005406  D018               	goto	l9332
  9187                           
  9188                           ; BSR set to: 0
  9189  005408  0E01               	movlw	1
  9190  00540A  6E19               	movwf	___awmod@counter^0,c
  9191  00540C  D004               	goto	l9322
  9192  00540E                     l9320:
  9193                           
  9194                           ; BSR set to: 0
  9195  00540E  90D8               	bcf	status,0,c
  9196  005410  3617               	rlcf	___awmod@divisor^0,f,c
  9197  005412  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  9198  005414  2A19               	incf	___awmod@counter^0,f,c
  9199  005416                     l9322:
  9200                           
  9201                           ; BSR set to: 0
  9202  005416  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9203  005418  D7FA               	goto	l9320
  9204  00541A                     u10500:
  9205                           
  9206                           ; BSR set to: 0
  9207  00541A  5017               	movf	___awmod@divisor^0,w,c
  9208  00541C  5C15               	subwf	___awmod@dividend^0,w,c
  9209  00541E  5018               	movf	(___awmod@divisor+1)^0,w,c
  9210  005420  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  9211  005422  A0D8               	btfss	status,0,c
  9212  005424  D004               	goto	l9328
  9213                           
  9214                           ; BSR set to: 0
  9215  005426  5017               	movf	___awmod@divisor^0,w,c
  9216  005428  5E15               	subwf	___awmod@dividend^0,f,c
  9217  00542A  5018               	movf	(___awmod@divisor+1)^0,w,c
  9218  00542C  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  9219  00542E                     l9328:
  9220                           
  9221                           ; BSR set to: 0
  9222  00542E  90D8               	bcf	status,0,c
  9223  005430  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  9224  005432  3217               	rrcf	___awmod@divisor^0,f,c
  9225                           
  9226                           ; BSR set to: 0
  9227  005434  2E19               	decfsz	___awmod@counter^0,f,c
  9228  005436  D7F1               	goto	u10500
  9229  005438                     l9332:
  9230                           
  9231                           ; BSR set to: 0
  9232  005438  501A               	movf	___awmod@sign^0,w,c
  9233  00543A  B4D8               	btfsc	status,2,c
  9234  00543C  D004               	goto	l9336
  9235                           
  9236                           ; BSR set to: 0
  9237  00543E  6C15               	negf	___awmod@dividend^0,c
  9238  005440  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9239  005442  B0D8               	btfsc	status,0,c
  9240  005444  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9241  005446                     l9336:
  9242                           
  9243                           ; BSR set to: 0
  9244  005446  C015  F015         	movff	___awmod@dividend,?___awmod
  9245  00544A  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  9246                           
  9247                           ; BSR set to: 0
  9248  00544E  0012               	return		;funcret
  9249  005450                     __end_of___awmod:
  9250                           	callstack 0
  9251                           
  9252 ;; *************** function ___awdiv *****************
  9253 ;; Defined at:
  9254 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;  dividend        2   20[COMRAM] int 
  9257 ;;  divisor         2   22[COMRAM] int 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  quotient        2   26[COMRAM] int 
  9260 ;;  sign            1   25[COMRAM] unsigned char 
  9261 ;;  counter         1   24[COMRAM] unsigned char 
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  2   20[COMRAM] int 
  9264 ;; Registers used:
  9265 ;;		wreg, status,2, status,0
  9266 ;; Tracked objects:
  9267 ;;		On entry : 3F/0
  9268 ;;		On exit  : 3F/0
  9269 ;;		Unchanged: 3F/0
  9270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9272 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9274 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9275 ;;Total ram usage:        8 bytes
  9276 ;; Hardware stack levels used: 1
  9277 ;; Hardware stack levels required when called: 4
  9278 ;; This function calls:
  9279 ;;		Nothing
  9280 ;; This function is called by:
  9281 ;;		_efgtoa
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           	psect	text27
  9286  0052EA                     __ptext27:
  9287                           	callstack 0
  9288  0052EA                     ___awdiv:
  9289                           	callstack 20
  9290                           
  9291                           ; BSR set to: 0
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;incstack = 0
  9295  0052EA  0E00               	movlw	0
  9296  0052EC  6E1A               	movwf	___awdiv@sign^0,c
  9297                           
  9298                           ; BSR set to: 0
  9299  0052EE  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9300  0052F0  D006               	goto	l9268
  9301                           
  9302                           ; BSR set to: 0
  9303  0052F2  6C17               	negf	___awdiv@divisor^0,c
  9304  0052F4  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  9305  0052F6  B0D8               	btfsc	status,0,c
  9306  0052F8  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  9307                           
  9308                           ; BSR set to: 0
  9309  0052FA  0E01               	movlw	1
  9310  0052FC  6E1A               	movwf	___awdiv@sign^0,c
  9311  0052FE                     l9268:
  9312                           
  9313                           ; BSR set to: 0
  9314  0052FE  AE16               	btfss	(___awdiv@dividend+1)^0,7,c
  9315  005300  D006               	goto	l9274
  9316                           
  9317                           ; BSR set to: 0
  9318  005302  6C15               	negf	___awdiv@dividend^0,c
  9319  005304  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  9320  005306  B0D8               	btfsc	status,0,c
  9321  005308  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  9322                           
  9323                           ; BSR set to: 0
  9324  00530A  0E01               	movlw	1
  9325  00530C  1A1A               	xorwf	___awdiv@sign^0,f,c
  9326  00530E                     l9274:
  9327                           
  9328                           ; BSR set to: 0
  9329  00530E  0E00               	movlw	0
  9330  005310  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  9331  005312  0E00               	movlw	0
  9332  005314  6E1B               	movwf	___awdiv@quotient^0,c
  9333                           
  9334                           ; BSR set to: 0
  9335  005316  5017               	movf	___awdiv@divisor^0,w,c
  9336  005318  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  9337  00531A  B4D8               	btfsc	status,2,c
  9338  00531C  D01C               	goto	l9296
  9339                           
  9340                           ; BSR set to: 0
  9341  00531E  0E01               	movlw	1
  9342  005320  6E19               	movwf	___awdiv@counter^0,c
  9343  005322  D004               	goto	l9282
  9344  005324                     l9280:
  9345                           
  9346                           ; BSR set to: 0
  9347  005324  90D8               	bcf	status,0,c
  9348  005326  3617               	rlcf	___awdiv@divisor^0,f,c
  9349  005328  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  9350  00532A  2A19               	incf	___awdiv@counter^0,f,c
  9351  00532C                     l9282:
  9352                           
  9353                           ; BSR set to: 0
  9354  00532C  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9355  00532E  D7FA               	goto	l9280
  9356  005330                     u10440:
  9357                           
  9358                           ; BSR set to: 0
  9359  005330  90D8               	bcf	status,0,c
  9360  005332  361B               	rlcf	___awdiv@quotient^0,f,c
  9361  005334  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  9362                           
  9363                           ; BSR set to: 0
  9364  005336  5017               	movf	___awdiv@divisor^0,w,c
  9365  005338  5C15               	subwf	___awdiv@dividend^0,w,c
  9366  00533A  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9367  00533C  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  9368  00533E  A0D8               	btfss	status,0,c
  9369  005340  D005               	goto	l9292
  9370                           
  9371                           ; BSR set to: 0
  9372  005342  5017               	movf	___awdiv@divisor^0,w,c
  9373  005344  5E15               	subwf	___awdiv@dividend^0,f,c
  9374  005346  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9375  005348  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  9376                           
  9377                           ; BSR set to: 0
  9378  00534A  801B               	bsf	___awdiv@quotient^0,0,c
  9379  00534C                     l9292:
  9380                           
  9381                           ; BSR set to: 0
  9382  00534C  90D8               	bcf	status,0,c
  9383  00534E  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  9384  005350  3217               	rrcf	___awdiv@divisor^0,f,c
  9385                           
  9386                           ; BSR set to: 0
  9387  005352  2E19               	decfsz	___awdiv@counter^0,f,c
  9388  005354  D7ED               	goto	u10440
  9389  005356                     l9296:
  9390                           
  9391                           ; BSR set to: 0
  9392  005356  501A               	movf	___awdiv@sign^0,w,c
  9393  005358  B4D8               	btfsc	status,2,c
  9394  00535A  D004               	goto	l9300
  9395                           
  9396                           ; BSR set to: 0
  9397  00535C  6C1B               	negf	___awdiv@quotient^0,c
  9398  00535E  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  9399  005360  B0D8               	btfsc	status,0,c
  9400  005362  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  9401  005364                     l9300:
  9402                           
  9403                           ; BSR set to: 0
  9404  005364  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  9405  005368  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  9406                           
  9407                           ; BSR set to: 0
  9408  00536C  0012               	return		;funcret
  9409  00536E                     __end_of___awdiv:
  9410                           	callstack 0
  9411                           
  9412 ;; *************** function _atoi *****************
  9413 ;; Defined at:
  9414 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  s               1   27[COMRAM] PTR const unsigned char 
  9417 ;;		 -> STR_10(21), STR_6(74), 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  n               2   35[COMRAM] int 
  9420 ;;  neg             2   33[COMRAM] int 
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  2   27[COMRAM] int 
  9423 ;; Registers used:
  9424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9425 ;; Tracked objects:
  9426 ;;		On entry : 3F/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9431 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9432 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9433 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9434 ;;Total ram usage:       10 bytes
  9435 ;; Hardware stack levels used: 1
  9436 ;; Hardware stack levels required when called: 5
  9437 ;; This function calls:
  9438 ;;		___wmul
  9439 ;;		_isdigit
  9440 ;;		_isspace
  9441 ;; This function is called by:
  9442 ;;		_vfpfcnvrt
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text28
  9447  004824                     __ptext28:
  9448                           	callstack 0
  9449  004824                     _atoi:
  9450                           	callstack 20
  9451                           
  9452                           ; BSR set to: 0
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;incstack = 0
  9456  004824  0E00               	movlw	0
  9457  004826  6E25               	movwf	(atoi@n+1)^0,c
  9458  004828  0E00               	movlw	0
  9459  00482A  6E24               	movwf	atoi@n^0,c
  9460  00482C  0E00               	movlw	0
  9461  00482E  6E23               	movwf	(atoi@neg+1)^0,c
  9462  004830  0E00               	movlw	0
  9463  004832  6E22               	movwf	atoi@neg^0,c
  9464  004834  D001               	goto	l9980
  9465  004836                     l9976:
  9466                           
  9467                           ; BSR set to: 0
  9468  004836  2A1C               	incf	atoi@s^0,f,c
  9469  004838                     l9980:
  9470                           
  9471                           ; BSR set to: 0
  9472  004838  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9473  00483E                     	if	1	;There is more than 1 active tblptr byte
  9474  00483E  0E20               	movlw	high __smallconst
  9475  004840  6EF7               	movwf	tblptrh,c
  9476  004842                     	endif
  9477  004842                     	if	0	;tblptru may be non-zero
  9478  004842                     	endif
  9479  004842                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9480  004842  0E00               	movlw	low (__smallconst shr (0+16))
  9481  004844  6EF8               	movwf	tblptru,c
  9482  004846                     	endif
  9483  004846  0008               	tblrd		*
  9484  004848  50F5               	movf	tablat,w,c
  9485  00484A  0A20               	xorlw	32
  9486  00484C  B4D8               	btfsc	status,2,c
  9487  00484E  D7F3               	goto	l9976
  9488                           
  9489                           ; BSR set to: 0
  9490  004850  0EF7               	movlw	247
  9491  004852  6E1E               	movwf	??_atoi^0,c
  9492  004854  0EFF               	movlw	255
  9493  004856  6E1F               	movwf	(??_atoi+1)^0,c
  9494  004858  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9495  00485E                     	if	1	;There is more than 1 active tblptr byte
  9496  00485E  0E20               	movlw	high __smallconst
  9497  004860  6EF7               	movwf	tblptrh,c
  9498  004862                     	endif
  9499  004862                     	if	0	;tblptru may be non-zero
  9500  004862                     	endif
  9501  004862                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9502  004862  0E00               	movlw	low (__smallconst shr (0+16))
  9503  004864  6EF8               	movwf	tblptru,c
  9504  004866                     	endif
  9505  004866  0008               	tblrd		*
  9506  004868  50F5               	movf	tablat,w,c
  9507  00486A  6E20               	movwf	(??_atoi+2)^0,c
  9508  00486C  6A21               	clrf	(??_atoi+3)^0,c
  9509  00486E  501E               	movf	??_atoi^0,w,c
  9510  004870  2620               	addwf	(??_atoi+2)^0,f,c
  9511  004872  501F               	movf	(??_atoi+1)^0,w,c
  9512  004874  2221               	addwfc	(??_atoi+3)^0,f,c
  9513  004876  5021               	movf	(??_atoi+3)^0,w,c
  9514  004878  E10B               	bnz	l9988
  9515  00487A  0E05               	movlw	5
  9516  00487C  5C20               	subwf	(??_atoi+2)^0,w,c
  9517  00487E  B0D8               	btfsc	status,0,c
  9518  004880  D007               	goto	l9988
  9519  004882  D7D9               	goto	l9976
  9520  004884                     l9984:
  9521                           
  9522                           ; BSR set to: 0
  9523  004884  0E00               	movlw	0
  9524  004886  6E23               	movwf	(atoi@neg+1)^0,c
  9525  004888  0E01               	movlw	1
  9526  00488A  6E22               	movwf	atoi@neg^0,c
  9527  00488C                     l9986:
  9528  00488C  2A1C               	incf	atoi@s^0,f,c
  9529  00488E  D034               	goto	l9996
  9530  004890                     l9988:
  9531                           
  9532                           ; BSR set to: 0
  9533  004890  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9534  004896                     	if	1	;There is more than 1 active tblptr byte
  9535  004896  0E20               	movlw	high __smallconst
  9536  004898  6EF7               	movwf	tblptrh,c
  9537  00489A                     	endif
  9538  00489A                     	if	0	;tblptru may be non-zero
  9539  00489A                     	endif
  9540  00489A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9541  00489A  0E00               	movlw	low (__smallconst shr (0+16))
  9542  00489C  6EF8               	movwf	tblptru,c
  9543  00489E                     	endif
  9544  00489E  0008               	tblrd		*
  9545  0048A0  50F5               	movf	tablat,w,c
  9546  0048A2  6E1E               	movwf	??_atoi^0,c
  9547  0048A4  6A1F               	clrf	(??_atoi+1)^0,c
  9548                           
  9549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9550                           ; Switch size 1, requested type "simple"
  9551                           ; Number of cases is 1, Range of values is 0 to 0
  9552                           ; switch strategies available:
  9553                           ; Name         Instructions Cycles
  9554                           ; simple_byte            4     3 (average)
  9555                           ;	Chosen strategy is simple_byte
  9556  0048A6  501F               	movf	(??_atoi+1)^0,w,c
  9557  0048A8  0A00               	xorlw	0	; case 0
  9558  0048AA  A4D8               	btfss	status,2,c
  9559  0048AC  D025               	goto	l9996
  9560                           
  9561                           ; BSR set to: 0
  9562                           ; Switch size 1, requested type "simple"
  9563                           ; Number of cases is 2, Range of values is 43 to 45
  9564                           ; switch strategies available:
  9565                           ; Name         Instructions Cycles
  9566                           ; simple_byte            7     4 (average)
  9567                           ;	Chosen strategy is simple_byte
  9568  0048AE  501E               	movf	??_atoi^0,w,c
  9569  0048B0  0A2B               	xorlw	43	; case 43
  9570  0048B2  B4D8               	btfsc	status,2,c
  9571  0048B4  D7EB               	goto	l9986
  9572  0048B6  0A06               	xorlw	6	; case 45
  9573  0048B8  B4D8               	btfsc	status,2,c
  9574  0048BA  D7E4               	goto	l9984
  9575  0048BC  D01D               	goto	l9996
  9576  0048BE                     l9990:
  9577  0048BE  C024  F015         	movff	atoi@n,___wmul@multiplier
  9578  0048C2  C025  F016         	movff	atoi@n+1,___wmul@multiplier+1
  9579  0048C6  0E00               	movlw	0
  9580  0048C8  6E18               	movwf	(___wmul@multiplicand+1)^0,c
  9581  0048CA  0E0A               	movlw	10
  9582  0048CC  6E17               	movwf	___wmul@multiplicand^0,c
  9583  0048CE  EC61  F02D         	call	___wmul	;wreg free
  9584  0048D2  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9585  0048D8                     	if	1	;There is more than 1 active tblptr byte
  9586  0048D8  0E20               	movlw	high __smallconst
  9587  0048DA  6EF7               	movwf	tblptrh,c
  9588  0048DC                     	endif
  9589  0048DC                     	if	0	;tblptru may be non-zero
  9590  0048DC                     	endif
  9591  0048DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9592  0048DC  0E00               	movlw	low (__smallconst shr (0+16))
  9593  0048DE  6EF8               	movwf	tblptru,c
  9594  0048E0                     	endif
  9595  0048E0  0008               	tblrd		*
  9596  0048E2  50F5               	movf	tablat,w,c
  9597  0048E4  5E15               	subwf	?___wmul^0,f,c
  9598  0048E6  0E00               	movlw	0
  9599  0048E8  5A16               	subwfb	(?___wmul+1)^0,f,c
  9600  0048EA  0E30               	movlw	48
  9601  0048EC  2415               	addwf	?___wmul^0,w,c
  9602  0048EE  6E24               	movwf	atoi@n^0,c
  9603  0048F0  0E00               	movlw	0
  9604  0048F2  2016               	addwfc	(?___wmul+1)^0,w,c
  9605  0048F4  6E25               	movwf	(atoi@n+1)^0,c
  9606  0048F6  D7CA               	goto	l9986
  9607  0048F8                     l9996:
  9608  0048F8  0ED0               	movlw	208
  9609  0048FA  6E1E               	movwf	??_atoi^0,c
  9610  0048FC  0EFF               	movlw	255
  9611  0048FE  6E1F               	movwf	(??_atoi+1)^0,c
  9612  004900  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9613  004906                     	if	1	;There is more than 1 active tblptr byte
  9614  004906  0E20               	movlw	high __smallconst
  9615  004908  6EF7               	movwf	tblptrh,c
  9616  00490A                     	endif
  9617  00490A                     	if	0	;tblptru may be non-zero
  9618  00490A                     	endif
  9619  00490A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9620  00490A  0E00               	movlw	low (__smallconst shr (0+16))
  9621  00490C  6EF8               	movwf	tblptru,c
  9622  00490E                     	endif
  9623  00490E  0008               	tblrd		*
  9624  004910  50F5               	movf	tablat,w,c
  9625  004912  6E20               	movwf	(??_atoi+2)^0,c
  9626  004914  6A21               	clrf	(??_atoi+3)^0,c
  9627  004916  501E               	movf	??_atoi^0,w,c
  9628  004918  2620               	addwf	(??_atoi+2)^0,f,c
  9629  00491A  501F               	movf	(??_atoi+1)^0,w,c
  9630  00491C  2221               	addwfc	(??_atoi+3)^0,f,c
  9631  00491E  5021               	movf	(??_atoi+3)^0,w,c
  9632  004920  E104               	bnz	u11810
  9633  004922  0E0A               	movlw	10
  9634  004924  5C20               	subwf	(??_atoi+2)^0,w,c
  9635  004926  A0D8               	btfss	status,0,c
  9636  004928  D7CA               	goto	l9990
  9637  00492A                     u11810:
  9638  00492A  5022               	movf	atoi@neg^0,w,c
  9639  00492C  1023               	iorwf	(atoi@neg+1)^0,w,c
  9640  00492E  A4D8               	btfss	status,2,c
  9641  004930  D00D               	goto	l2086
  9642  004932  C024  F01E         	movff	atoi@n,??_atoi
  9643  004936  C025  F01F         	movff	atoi@n+1,??_atoi+1
  9644  00493A  1E1E               	comf	??_atoi^0,f,c
  9645  00493C  1E1F               	comf	(??_atoi+1)^0,f,c
  9646  00493E  4A1E               	infsnz	??_atoi^0,f,c
  9647  004940  2A1F               	incf	(??_atoi+1)^0,f,c
  9648  004942  C01E  F01C         	movff	??_atoi,?_atoi
  9649  004946  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9650  00494A  0012               	return	
  9651  00494C                     l2086:
  9652  00494C  C024  F01C         	movff	atoi@n,?_atoi
  9653  004950  C025  F01D         	movff	atoi@n+1,?_atoi+1
  9654  004954  0012               	return		;funcret
  9655  004956                     __end_of_atoi:
  9656                           	callstack 0
  9657                           
  9658 ;; *************** function _isspace *****************
  9659 ;; Defined at:
  9660 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  c               2   20[COMRAM] int 
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;		None
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  2   20[COMRAM] int 
  9667 ;; Registers used:
  9668 ;;		wreg, status,2, status,0
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9676 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9677 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9678 ;;Total ram usage:        7 bytes
  9679 ;; Hardware stack levels used: 1
  9680 ;; Hardware stack levels required when called: 4
  9681 ;; This function calls:
  9682 ;;		Nothing
  9683 ;; This function is called by:
  9684 ;;		_atoi
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text29
  9689  0057BA                     __ptext29:
  9690                           	callstack 0
  9691  0057BA                     _isspace:
  9692                           	callstack 20
  9693                           
  9694                           ;incstack = 0
  9695  0057BA  0E01               	movlw	1
  9696  0057BC  6E1B               	movwf	_isspace$2835^0,c
  9697  0057BE  0E20               	movlw	32
  9698  0057C0  1815               	xorwf	isspace@c^0,w,c
  9699  0057C2  1016               	iorwf	(isspace@c+1)^0,w,c
  9700  0057C4  B4D8               	btfsc	status,2,c
  9701  0057C6  D014               	goto	l9566
  9702  0057C8  0EF7               	movlw	247
  9703  0057CA  6E17               	movwf	??_isspace^0,c
  9704  0057CC  0EFF               	movlw	255
  9705  0057CE  6E18               	movwf	(??_isspace+1)^0,c
  9706  0057D0  C015  F019         	movff	isspace@c,??_isspace+2
  9707  0057D4  C016  F01A         	movff	isspace@c+1,??_isspace+3
  9708  0057D8  5017               	movf	??_isspace^0,w,c
  9709  0057DA  2619               	addwf	(??_isspace+2)^0,f,c
  9710  0057DC  5018               	movf	(??_isspace+1)^0,w,c
  9711  0057DE  221A               	addwfc	(??_isspace+3)^0,f,c
  9712  0057E0  501A               	movf	(??_isspace+3)^0,w,c
  9713  0057E2  E104               	bnz	u11030
  9714  0057E4  0E05               	movlw	5
  9715  0057E6  5C19               	subwf	(??_isspace+2)^0,w,c
  9716  0057E8  A0D8               	btfss	status,0,c
  9717  0057EA  D002               	goto	l9566
  9718  0057EC                     u11030:
  9719  0057EC  0E00               	movlw	0
  9720  0057EE  6E1B               	movwf	_isspace$2835^0,c
  9721  0057F0                     l9566:
  9722  0057F0  C01B  F015         	movff	_isspace$2835,?_isspace
  9723  0057F4  6A16               	clrf	(?_isspace+1)^0,c
  9724  0057F6  0012               	return		;funcret
  9725  0057F8                     __end_of_isspace:
  9726                           	callstack 0
  9727                           
  9728 ;; *************** function _isdigit *****************
  9729 ;; Defined at:
  9730 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  c               2   20[COMRAM] int 
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;		None
  9735 ;; Return value:  Size  Location     Type
  9736 ;;                  2   20[COMRAM] int 
  9737 ;; Registers used:
  9738 ;;		wreg, status,2, status,0
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9746 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9747 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9748 ;;Total ram usage:        6 bytes
  9749 ;; Hardware stack levels used: 1
  9750 ;; Hardware stack levels required when called: 4
  9751 ;; This function calls:
  9752 ;;		Nothing
  9753 ;; This function is called by:
  9754 ;;		_vfpfcnvrt
  9755 ;;		_atoi
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           	psect	text30
  9760  005A0A                     __ptext30:
  9761                           	callstack 0
  9762  005A0A                     _isdigit:
  9763                           	callstack 21
  9764                           
  9765                           ;incstack = 0
  9766  005A0A  0ED0               	movlw	208
  9767  005A0C  6E17               	movwf	??_isdigit^0,c
  9768  005A0E  0EFF               	movlw	255
  9769  005A10  6E18               	movwf	(??_isdigit+1)^0,c
  9770  005A12  C015  F019         	movff	isdigit@c,??_isdigit+2
  9771  005A16  C016  F01A         	movff	isdigit@c+1,??_isdigit+3
  9772  005A1A  5017               	movf	??_isdigit^0,w,c
  9773  005A1C  2619               	addwf	(??_isdigit+2)^0,f,c
  9774  005A1E  5018               	movf	(??_isdigit+1)^0,w,c
  9775  005A20  221A               	addwfc	(??_isdigit+3)^0,f,c
  9776  005A22  501A               	movf	(??_isdigit+3)^0,w,c
  9777  005A24  E106               	bnz	u11000
  9778  005A26  0E0A               	movlw	10
  9779  005A28  5C19               	subwf	(??_isdigit+2)^0,w,c
  9780  005A2A  B0D8               	btfsc	status,0,c
  9781  005A2C  D002               	goto	u11000
  9782  005A2E  0E01               	movlw	1
  9783  005A30  D001               	goto	u11010
  9784  005A32                     u11000:
  9785  005A32  0E00               	movlw	0
  9786  005A34                     u11010:
  9787  005A34  6E15               	movwf	?_isdigit^0,c
  9788  005A36  6A16               	clrf	(?_isdigit+1)^0,c
  9789  005A38  0012               	return		;funcret
  9790  005A3A                     __end_of_isdigit:
  9791                           	callstack 0
  9792                           
  9793 ;; *************** function ___wmul *****************
  9794 ;; Defined at:
  9795 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;  multiplier      2   20[COMRAM] unsigned int 
  9798 ;;  multiplicand    2   22[COMRAM] unsigned int 
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  product         2   24[COMRAM] unsigned int 
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  2   20[COMRAM] unsigned int 
  9803 ;; Registers used:
  9804 ;;		wreg, status,2, status,0, prodl, prodh
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9813 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9814 ;;Total ram usage:        6 bytes
  9815 ;; Hardware stack levels used: 1
  9816 ;; Hardware stack levels required when called: 4
  9817 ;; This function calls:
  9818 ;;		Nothing
  9819 ;; This function is called by:
  9820 ;;		_atoi
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           	psect	text31
  9825  005AC2                     __ptext31:
  9826                           	callstack 0
  9827  005AC2                     ___wmul:
  9828                           	callstack 20
  9829                           
  9830                           ;incstack = 0
  9831  005AC2  5015               	movf	___wmul@multiplier^0,w,c
  9832  005AC4  0217               	mulwf	___wmul@multiplicand^0,c
  9833  005AC6  006F FFCC  F019    	movff	prodl,___wmul@product
  9834  005ACC  006F FFD0  F01A    	movff	prodh,___wmul@product+1
  9835  005AD2  5015               	movf	___wmul@multiplier^0,w,c
  9836  005AD4  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  9837  005AD6  50F3               	movf	243,w,c
  9838  005AD8  261A               	addwf	(___wmul@product+1)^0,f,c
  9839  005ADA  5016               	movf	(___wmul@multiplier+1)^0,w,c
  9840  005ADC  0217               	mulwf	___wmul@multiplicand^0,c
  9841  005ADE  50F3               	movf	243,w,c
  9842  005AE0  261A               	addwf	(___wmul@product+1)^0,f,c
  9843  005AE2  C019  F015         	movff	___wmul@product,?___wmul
  9844  005AE6  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  9845  005AEA  0012               	return		;funcret
  9846  005AEC                     __end_of___wmul:
  9847                           	callstack 0
  9848                           
  9849 ;; *************** function _display_led *****************
  9850 ;; Defined at:
  9851 ;;		line 3 in file "disp_led.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  led             1    wreg     enum E17121
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;  led             1   22[COMRAM] enum E17121
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1    wreg      void 
  9858 ;; Registers used:
  9859 ;;		wreg, status,2, status,0
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9868 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9869 ;;Total ram usage:        3 bytes
  9870 ;; Hardware stack levels used: 1
  9871 ;; Hardware stack levels required when called: 4
  9872 ;; This function calls:
  9873 ;;		Nothing
  9874 ;; This function is called by:
  9875 ;;		_main
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           	psect	text32
  9880  004D40                     __ptext32:
  9881                           	callstack 0
  9882  004D40                     _display_led:
  9883                           	callstack 26
  9884                           
  9885                           ;incstack = 0
  9886                           ;display_led@led stored from wreg
  9887  004D40  6E17               	movwf	display_led@led^0,c
  9888                           
  9889                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
  9890  004D42  D02D               	goto	l10500
  9891  004D44                     l983:
  9892  004D44  98BD               	bcf	189,4,c	;volatile
  9893                           
  9894                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
  9895  004D46  9ABD               	bcf	189,5,c	;volatile
  9896  004D48  0012               	return	
  9897  004D4A                     l989:
  9898  004D4A  98BD               	bcf	189,4,c	;volatile
  9899                           
  9900                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
  9901  004D4C  8ABD               	bsf	189,5,c	;volatile
  9902  004D4E  0012               	return	
  9903  004D50                     l994:
  9904  004D50  88BD               	bsf	189,4,c	;volatile
  9905                           
  9906                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
  9907  004D52  9ABD               	bcf	189,5,c	;volatile
  9908  004D54  0012               	return	
  9909  004D56                     l999:
  9910  004D56  9CBD               	bcf	189,6,c	;volatile
  9911                           
  9912                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
  9913  004D58  9EBD               	bcf	189,7,c	;volatile
  9914  004D5A  0012               	return	
  9915  004D5C                     l1004:
  9916  004D5C  9CBD               	bcf	189,6,c	;volatile
  9917                           
  9918                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
  9919  004D5E  8EBD               	bsf	189,7,c	;volatile
  9920  004D60  0012               	return	
  9921  004D62                     l1009:
  9922  004D62  8CBD               	bsf	189,6,c	;volatile
  9923                           
  9924                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
  9925  004D64  9EBD               	bcf	189,7,c	;volatile
  9926  004D66  0012               	return	
  9927  004D68                     l1014:
  9928  004D68  98BF               	bcf	191,4,c	;volatile
  9929                           
  9930                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
  9931  004D6A  9ABF               	bcf	191,5,c	;volatile
  9932  004D6C  0012               	return	
  9933  004D6E                     l1019:
  9934  004D6E  98BF               	bcf	191,4,c	;volatile
  9935                           
  9936                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
  9937  004D70  8ABF               	bsf	191,5,c	;volatile
  9938  004D72  0012               	return	
  9939  004D74                     l1024:
  9940  004D74  88BF               	bsf	191,4,c	;volatile
  9941                           
  9942                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
  9943  004D76  9ABF               	bcf	191,5,c	;volatile
  9944  004D78  0012               	return	
  9945  004D7A                     l1029:
  9946  004D7A  9CBF               	bcf	191,6,c	;volatile
  9947                           
  9948                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
  9949  004D7C  9EBF               	bcf	191,7,c	;volatile
  9950  004D7E  0012               	return	
  9951  004D80                     l1034:
  9952  004D80  9CBF               	bcf	191,6,c	;volatile
  9953                           
  9954                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
  9955  004D82  8EBF               	bsf	191,7,c	;volatile
  9956  004D84  0012               	return	
  9957  004D86                     l1039:
  9958  004D86  8CBF               	bsf	191,6,c	;volatile
  9959                           
  9960                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
  9961  004D88  9EBF               	bcf	191,7,c	;volatile
  9962  004D8A  0012               	return	
  9963  004D8C                     l1044:
  9964  004D8C  98BD               	bcf	189,4,c	;volatile
  9965                           
  9966                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
  9967  004D8E  9ABD               	bcf	189,5,c	;volatile
  9968                           
  9969                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
  9970  004D90  9CBD               	bcf	189,6,c	;volatile
  9971                           
  9972                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
  9973  004D92  9EBD               	bcf	189,7,c	;volatile
  9974                           
  9975                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
  9976  004D94  98BF               	bcf	191,4,c	;volatile
  9977                           
  9978                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
  9979  004D96  9ABF               	bcf	191,5,c	;volatile
  9980                           
  9981                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
  9982  004D98  9CBF               	bcf	191,6,c	;volatile
  9983                           
  9984                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
  9985  004D9A  9EBF               	bcf	191,7,c	;volatile
  9986  004D9C  0012               	return	
  9987  004D9E                     l10500:
  9988  004D9E  5017               	movf	display_led@led^0,w,c
  9989  004DA0  6E15               	movwf	??_display_led^0,c
  9990  004DA2  6A16               	clrf	(??_display_led+1)^0,c
  9991                           
  9992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9993                           ; Switch size 1, requested type "simple"
  9994                           ; Number of cases is 1, Range of values is 0 to 0
  9995                           ; switch strategies available:
  9996                           ; Name         Instructions Cycles
  9997                           ; simple_byte            4     3 (average)
  9998                           ;	Chosen strategy is simple_byte
  9999  004DA4  5016               	movf	(??_display_led+1)^0,w,c
 10000  004DA6  0A00               	xorlw	0	; case 0
 10001  004DA8  A4D8               	btfss	status,2,c
 10002  004DAA  D7F0               	goto	l1044
 10003                           
 10004                           ; Switch size 1, requested type "simple"
 10005                           ; Number of cases is 12, Range of values is 0 to 11
 10006                           ; switch strategies available:
 10007                           ; Name         Instructions Cycles
 10008                           ; simple_byte           37    19 (average)
 10009                           ;	Chosen strategy is simple_byte
 10010  004DAC  5015               	movf	??_display_led^0,w,c
 10011  004DAE  0A00               	xorlw	0	; case 0
 10012  004DB0  B4D8               	btfsc	status,2,c
 10013  004DB2  D7C8               	goto	l983
 10014  004DB4  0A01               	xorlw	1	; case 1
 10015  004DB6  B4D8               	btfsc	status,2,c
 10016  004DB8  D7CB               	goto	l994
 10017  004DBA  0A03               	xorlw	3	; case 2
 10018  004DBC  B4D8               	btfsc	status,2,c
 10019  004DBE  D7C5               	goto	l989
 10020  004DC0  0A01               	xorlw	1	; case 3
 10021  004DC2  B4D8               	btfsc	status,2,c
 10022  004DC4  D7C8               	goto	l999
 10023  004DC6  0A07               	xorlw	7	; case 4
 10024  004DC8  B4D8               	btfsc	status,2,c
 10025  004DCA  D7CB               	goto	l1009
 10026  004DCC  0A01               	xorlw	1	; case 5
 10027  004DCE  B4D8               	btfsc	status,2,c
 10028  004DD0  D7C5               	goto	l1004
 10029  004DD2  0A03               	xorlw	3	; case 6
 10030  004DD4  B4D8               	btfsc	status,2,c
 10031  004DD6  D7C8               	goto	l1014
 10032  004DD8  0A01               	xorlw	1	; case 7
 10033  004DDA  B4D8               	btfsc	status,2,c
 10034  004DDC  D7CB               	goto	l1024
 10035  004DDE  0A0F               	xorlw	15	; case 8
 10036  004DE0  B4D8               	btfsc	status,2,c
 10037  004DE2  D7C5               	goto	l1019
 10038  004DE4  0A01               	xorlw	1	; case 9
 10039  004DE6  B4D8               	btfsc	status,2,c
 10040  004DE8  D7C8               	goto	l1029
 10041  004DEA  0A03               	xorlw	3	; case 10
 10042  004DEC  B4D8               	btfsc	status,2,c
 10043  004DEE  D7CB               	goto	l1039
 10044  004DF0  0A01               	xorlw	1	; case 11
 10045  004DF2  B4D8               	btfsc	status,2,c
 10046  004DF4  D7C5               	goto	l1034
 10047  004DF6  D7CA               	goto	l1044
 10048  004DF8                     __end_of_display_led:
 10049                           	callstack 0
 10050                           
 10051 ;; *************** function _cli_read *****************
 10052 ;; Defined at:
 10053 ;;		line 82 in file "scdm.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  a_ctx           2   49[COMRAM] PTR struct _t_cli_ctx
 10056 ;;		 -> cli_ctx(131), 
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;  i               1   12[BANK0 ] unsigned char 
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  1    wreg      void 
 10061 ;; Registers used:
 10062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10069 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10070 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10071 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10072 ;;Total ram usage:        8 bytes
 10073 ;; Hardware stack levels used: 1
 10074 ;; Hardware stack levels required when called: 11
 10075 ;; This function calls:
 10076 ;;		__cli_interpret_cmd
 10077 ;;		_linux_getc
 10078 ;;		_linux_putc
 10079 ;;		_memset
 10080 ;; This function is called by:
 10081 ;;		_main
 10082 ;; This function uses a non-reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text33
 10086  0042FA                     __ptext33:
 10087                           	callstack 0
 10088  0042FA                     _cli_read:
 10089                           	callstack 19
 10090                           
 10091                           ;scdm.c: 82: void cli_read(t_cli_ctx *a_ctx);scdm.c: 83: {;scdm.c: 84:  uint8_t i = 0x00
      +                          ;
 10092                           
 10093                           ;incstack = 0
 10094  0042FA  0E00               	movlw	0
 10095  0042FC  0100               	movlb	0	; () banked
 10096  0042FE  6F6C               	movwf	cli_read@i& (0+255),b
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;scdm.c: 87:  if (!linux_getc(&i)) {
 10100  004300  0E6C               	movlw	low cli_read@i
 10101  004302  6E16               	movwf	linux_getc@a_data^0,c
 10102  004304  EC8B  F02D         	call	_linux_getc	;wreg free
 10103  004308  0900               	iorlw	0
 10104  00430A  B4D8               	btfsc	status,2,c
 10105  00430C  0012               	return	
 10106  00430E  D08A               	goto	l10540
 10107  004310                     l10518:
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;scdm.c: 99:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cpo
      +                          s))] = '\0';
 10111  004310  EE20 F082          	lfsr	2,130
 10112  004314  5032               	movf	cli_read@a_ctx^0,w,c
 10113  004316  26D9               	addwf	fsr2l,f,c
 10114  004318  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10115  00431A  22DA               	addwfc	fsr2h,f,c
 10116  00431C  0E7E               	movlw	126
 10117  00431E  64DF               	cpfsgt	indf2,c
 10118  004320  D00C               	goto	l10522
 10119                           
 10120                           ; BSR set to: 0
 10121  004322  EE20 F082          	lfsr	2,130
 10122  004326  5032               	movf	cli_read@a_ctx^0,w,c
 10123  004328  26D9               	addwf	fsr2l,f,c
 10124  00432A  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10125  00432C  22DA               	addwfc	fsr2h,f,c
 10126  00432E  50DF               	movf	indf2,w,c
 10127  004330  6E34               	movwf	??_cli_read^0,c
 10128  004332  5034               	movf	??_cli_read^0,w,c
 10129  004334  6F6A               	movwf	_cli_read$2151& (0+255),b
 10130  004336  6B6B               	clrf	(_cli_read$2151+1)& (0+255),b
 10131  004338  D00E               	goto	l1134
 10132  00433A                     l10522:
 10133                           
 10134                           ; BSR set to: 0
 10135  00433A  EE20 F082          	lfsr	2,130
 10136  00433E  5032               	movf	cli_read@a_ctx^0,w,c
 10137  004340  26D9               	addwf	fsr2l,f,c
 10138  004342  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10139  004344  22DA               	addwfc	fsr2h,f,c
 10140  004346  50DF               	movf	indf2,w,c
 10141  004348  6E34               	movwf	??_cli_read^0,c
 10142  00434A  0E01               	movlw	1
 10143  00434C  2434               	addwf	??_cli_read^0,w,c
 10144  00434E  6F6A               	movwf	_cli_read$2151& (0+255),b
 10145  004350  6B6B               	clrf	(_cli_read$2151+1)& (0+255),b
 10146  004352  0E00               	movlw	0
 10147  004354  236B               	addwfc	(_cli_read$2151+1)& (0+255),f,b
 10148  004356                     l1134:
 10149                           
 10150                           ; BSR set to: 0
 10151  004356  516A               	movf	_cli_read$2151& (0+255),w,b
 10152  004358  2432               	addwf	cli_read@a_ctx^0,w,c
 10153  00435A  6E34               	movwf	??_cli_read^0,c
 10154  00435C  516B               	movf	(_cli_read$2151+1)& (0+255),w,b
 10155  00435E  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10156  004360  6E35               	movwf	(??_cli_read+1)^0,c
 10157  004362  0E02               	movlw	2
 10158  004364  2434               	addwf	??_cli_read^0,w,c
 10159  004366  6ED9               	movwf	fsr2l,c
 10160  004368  0E00               	movlw	0
 10161  00436A  2035               	addwfc	(??_cli_read+1)^0,w,c
 10162  00436C  6EDA               	movwf	fsr2h,c
 10163  00436E  0E00               	movlw	0
 10164  004370  6EDF               	movwf	indf2,c
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;scdm.c: 100:   linux_putc((unsigned char *) "\r\n", 2);
 10168  004372  0EC1               	movlw	low (STR_5+15)
 10169  004374  6E2C               	movwf	linux_putc@data^0,c
 10170  004376  502C               	movf	linux_putc@data^0,w,c
 10171  004378  A4D8               	btfss	status,2,c
 10172  00437A  0E20               	movlw	high __smallconst
 10173  00437C  6E2D               	movwf	(linux_putc@data+1)^0,c
 10174  00437E  0E02               	movlw	2
 10175  004380  6E2E               	movwf	linux_putc@a_len^0,c
 10176  004382  EC6B  F02E         	call	_linux_putc	;wreg free
 10177                           
 10178                           ;scdm.c: 101:   res = _cli_interpret_cmd(a_ctx);
 10179  004386  C032  F02E         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 10180  00438A  C033  F02F         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 10181  00438E  EC3D  F01E         	call	__cli_interpret_cmd	;wreg free
 10182  004392  6E43               	movwf	_res^0,c
 10183                           
 10184                           ;scdm.c: 102:   a_ctx->cpos = 0;
 10185  004394  EE20 F082          	lfsr	2,130
 10186  004398  5032               	movf	cli_read@a_ctx^0,w,c
 10187  00439A  26D9               	addwf	fsr2l,f,c
 10188  00439C  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10189  00439E  22DA               	addwfc	fsr2h,f,c
 10190  0043A0  0E00               	movlw	0
 10191  0043A2  6EDF               	movwf	indf2,c
 10192                           
 10193                           ;scdm.c: 103:   memset(a_ctx->cmd, 0x00, 128);
 10194  0043A4  0E02               	movlw	2
 10195  0043A6  2432               	addwf	cli_read@a_ctx^0,w,c
 10196  0043A8  6E15               	movwf	memset@dest^0,c
 10197  0043AA  0E00               	movlw	0
 10198  0043AC  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10199  0043AE  6E16               	movwf	(memset@dest+1)^0,c
 10200  0043B0  0E00               	movlw	0
 10201  0043B2  6E18               	movwf	(memset@c+1)^0,c
 10202  0043B4  0E00               	movlw	0
 10203  0043B6  6E17               	movwf	memset@c^0,c
 10204  0043B8  0E00               	movlw	0
 10205  0043BA  6E1A               	movwf	(memset@n+1)^0,c
 10206  0043BC  0E80               	movlw	128
 10207  0043BE  6E19               	movwf	memset@n^0,c
 10208  0043C0  EC28  F022         	call	_memset	;wreg free
 10209                           
 10210                           ;scdm.c: 104:   break;
 10211  0043C4  0012               	return	
 10212  0043C6                     l10532:
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;scdm.c: 107:   if (a_ctx->cpos < (128 - 1)) {
 10216  0043C6  EE20 F082          	lfsr	2,130
 10217  0043CA  5032               	movf	cli_read@a_ctx^0,w,c
 10218  0043CC  26D9               	addwf	fsr2l,f,c
 10219  0043CE  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10220  0043D0  22DA               	addwfc	fsr2h,f,c
 10221  0043D2  0E7F               	movlw	127
 10222  0043D4  60DF               	cpfslt	indf2,c
 10223  0043D6  0012               	return	
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;scdm.c: 108:    a_ctx->cmd[a_ctx->cpos++] = i;
 10227  0043D8  EE20 F082          	lfsr	2,130
 10228  0043DC  5032               	movf	cli_read@a_ctx^0,w,c
 10229  0043DE  26D9               	addwf	fsr2l,f,c
 10230  0043E0  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10231  0043E2  22DA               	addwfc	fsr2h,f,c
 10232  0043E4  50DF               	movf	indf2,w,c
 10233  0043E6  6E34               	movwf	??_cli_read^0,c
 10234  0043E8  5034               	movf	??_cli_read^0,w,c
 10235  0043EA  2432               	addwf	cli_read@a_ctx^0,w,c
 10236  0043EC  6E35               	movwf	(??_cli_read+1)^0,c
 10237  0043EE  0E00               	movlw	0
 10238  0043F0  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10239  0043F2  6E36               	movwf	(??_cli_read+2)^0,c
 10240  0043F4  0E02               	movlw	2
 10241  0043F6  2435               	addwf	(??_cli_read+1)^0,w,c
 10242  0043F8  6ED9               	movwf	fsr2l,c
 10243  0043FA  0E00               	movlw	0
 10244  0043FC  2036               	addwfc	(??_cli_read+2)^0,w,c
 10245  0043FE  6EDA               	movwf	fsr2h,c
 10246  004400  0060  F1B3  FFDF   	movff	cli_read@i,indf2
 10247  004406  EE20 F082          	lfsr	2,130
 10248  00440A  5032               	movf	cli_read@a_ctx^0,w,c
 10249  00440C  26D9               	addwf	fsr2l,f,c
 10250  00440E  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10251  004410  22DA               	addwfc	fsr2h,f,c
 10252  004412  2ADF               	incf	indf2,f,c
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;scdm.c: 109:    linux_putc(&i, 1);
 10256  004414  0E6C               	movlw	low cli_read@i
 10257  004416  6E2C               	movwf	linux_putc@data^0,c
 10258  004418  6A2D               	clrf	(linux_putc@data+1)^0,c
 10259  00441A  0E01               	movlw	1
 10260  00441C  6E2E               	movwf	linux_putc@a_len^0,c
 10261  00441E  EC6B  F02E         	call	_linux_putc	;wreg free
 10262  004422  0012               	return	
 10263  004424                     l10540:
 10264  004424  0100               	movlb	0	; () banked
 10265  004426  516C               	movf	cli_read@i& (0+255),w,b
 10266  004428  6E34               	movwf	??_cli_read^0,c
 10267  00442A  6A35               	clrf	(??_cli_read+1)^0,c
 10268                           
 10269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10270                           ; Switch size 1, requested type "simple"
 10271                           ; Number of cases is 1, Range of values is 0 to 0
 10272                           ; switch strategies available:
 10273                           ; Name         Instructions Cycles
 10274                           ; simple_byte            4     3 (average)
 10275                           ;	Chosen strategy is simple_byte
 10276  00442C  5035               	movf	(??_cli_read+1)^0,w,c
 10277  00442E  0A00               	xorlw	0	; case 0
 10278  004430  A4D8               	btfss	status,2,c
 10279  004432  D7C9               	goto	l10532
 10280                           
 10281                           ; BSR set to: 0
 10282                           ; Switch size 1, requested type "simple"
 10283                           ; Number of cases is 4, Range of values is 13 to 127
 10284                           ; switch strategies available:
 10285                           ; Name         Instructions Cycles
 10286                           ; simple_byte           13     7 (average)
 10287                           ;	Chosen strategy is simple_byte
 10288  004434  5034               	movf	??_cli_read^0,w,c
 10289  004436  0A0D               	xorlw	13	; case 13
 10290  004438  B4D8               	btfsc	status,2,c
 10291  00443A  D76A               	goto	l10518
 10292  00443C  0A16               	xorlw	22	; case 27
 10293  00443E  B4D8               	btfsc	status,2,c
 10294  004440  0012               	return	
 10295  004442  0A65               	xorlw	101	; case 126
 10296  004444  B4D8               	btfsc	status,2,c
 10297  004446  0012               	return	
 10298  004448  0A01               	xorlw	1	; case 127
 10299  00444A  B4D8               	btfsc	status,2,c
 10300  00444C  0012               	return		;funcret
 10301  00444E  D7BB               	goto	l10532
 10302  004450                     __end_of_cli_read:
 10303                           	callstack 0
 10304                           
 10305 ;; *************** function _memset *****************
 10306 ;; Defined at:
 10307 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  dest            2   20[COMRAM] PTR void 
 10310 ;;		 -> cli_ctx(131), 
 10311 ;;  c               2   22[COMRAM] int 
 10312 ;;  n               2   24[COMRAM] unsigned int 
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;  s               2   30[COMRAM] PTR unsigned char 
 10315 ;;		 -> cli_ctx(131), 
 10316 ;;  k               2   28[COMRAM] unsigned int 
 10317 ;; Return value:  Size  Location     Type
 10318 ;;                  2   20[COMRAM] PTR void 
 10319 ;; Registers used:
 10320 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10321 ;; Tracked objects:
 10322 ;;		On entry : 0/2
 10323 ;;		On exit  : 0/0
 10324 ;;		Unchanged: 0/0
 10325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10326 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10327 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10329 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10330 ;;Total ram usage:       12 bytes
 10331 ;; Hardware stack levels used: 1
 10332 ;; Hardware stack levels required when called: 4
 10333 ;; This function calls:
 10334 ;;		Nothing
 10335 ;; This function is called by:
 10336 ;;		_cli_init
 10337 ;;		_cli_read
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text34
 10342  004450                     __ptext34:
 10343                           	callstack 0
 10344  004450                     _memset:
 10345                           	callstack 24
 10346                           
 10347                           ;incstack = 0
 10348  004450  C015  F01F         	movff	memset@dest,memset@s
 10349  004454  C016  F020         	movff	memset@dest+1,memset@s+1
 10350  004458  5019               	movf	memset@n^0,w,c
 10351  00445A  101A               	iorwf	(memset@n+1)^0,w,c
 10352  00445C  B4D8               	btfsc	status,2,c
 10353  00445E  0012               	return	
 10354  004460  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10355  004466  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10356  00446C  0060  F05F  FFDF   	movff	memset@c,indf2
 10357  004472  5019               	movf	memset@n^0,w,c
 10358  004474  241F               	addwf	memset@s^0,w,c
 10359  004476  6E1B               	movwf	??_memset^0,c
 10360  004478  501A               	movf	(memset@n+1)^0,w,c
 10361  00447A  2020               	addwfc	(memset@s+1)^0,w,c
 10362  00447C  6E1C               	movwf	(??_memset+1)^0,c
 10363  00447E  0EFF               	movlw	255
 10364  004480  241B               	addwf	??_memset^0,w,c
 10365  004482  6ED9               	movwf	fsr2l,c
 10366  004484  0EFF               	movlw	255
 10367  004486  201C               	addwfc	(??_memset+1)^0,w,c
 10368  004488  6EDA               	movwf	fsr2h,c
 10369  00448A  0060  F05F  FFDF   	movff	memset@c,indf2
 10370  004490  501A               	movf	(memset@n+1)^0,w,c
 10371  004492  E104               	bnz	l10258
 10372  004494  0E03               	movlw	3
 10373  004496  5C19               	subwf	memset@n^0,w,c
 10374  004498  A0D8               	btfss	status,0,c
 10375  00449A  0012               	return	
 10376  00449C                     l10258:
 10377  00449C  EE20 F001          	lfsr	2,1
 10378  0044A0  501F               	movf	memset@s^0,w,c
 10379  0044A2  26D9               	addwf	fsr2l,f,c
 10380  0044A4  5020               	movf	(memset@s+1)^0,w,c
 10381  0044A6  22DA               	addwfc	fsr2h,f,c
 10382  0044A8  0060  F05F  FFDF   	movff	memset@c,indf2
 10383  0044AE  EE20 F002          	lfsr	2,2
 10384  0044B2  501F               	movf	memset@s^0,w,c
 10385  0044B4  26D9               	addwf	fsr2l,f,c
 10386  0044B6  5020               	movf	(memset@s+1)^0,w,c
 10387  0044B8  22DA               	addwfc	fsr2h,f,c
 10388  0044BA  0060  F05F  FFDF   	movff	memset@c,indf2
 10389  0044C0  5019               	movf	memset@n^0,w,c
 10390  0044C2  241F               	addwf	memset@s^0,w,c
 10391  0044C4  6E1B               	movwf	??_memset^0,c
 10392  0044C6  501A               	movf	(memset@n+1)^0,w,c
 10393  0044C8  2020               	addwfc	(memset@s+1)^0,w,c
 10394  0044CA  6E1C               	movwf	(??_memset+1)^0,c
 10395  0044CC  0EFE               	movlw	254
 10396  0044CE  241B               	addwf	??_memset^0,w,c
 10397  0044D0  6ED9               	movwf	fsr2l,c
 10398  0044D2  0EFF               	movlw	255
 10399  0044D4  201C               	addwfc	(??_memset+1)^0,w,c
 10400  0044D6  6EDA               	movwf	fsr2h,c
 10401  0044D8  0060  F05F  FFDF   	movff	memset@c,indf2
 10402  0044DE  5019               	movf	memset@n^0,w,c
 10403  0044E0  241F               	addwf	memset@s^0,w,c
 10404  0044E2  6E1B               	movwf	??_memset^0,c
 10405  0044E4  501A               	movf	(memset@n+1)^0,w,c
 10406  0044E6  2020               	addwfc	(memset@s+1)^0,w,c
 10407  0044E8  6E1C               	movwf	(??_memset+1)^0,c
 10408  0044EA  0EFD               	movlw	253
 10409  0044EC  241B               	addwf	??_memset^0,w,c
 10410  0044EE  6ED9               	movwf	fsr2l,c
 10411  0044F0  0EFF               	movlw	255
 10412  0044F2  201C               	addwfc	(??_memset+1)^0,w,c
 10413  0044F4  6EDA               	movwf	fsr2h,c
 10414  0044F6  0060  F05F  FFDF   	movff	memset@c,indf2
 10415  0044FC  501A               	movf	(memset@n+1)^0,w,c
 10416  0044FE  E104               	bnz	l10264
 10417  004500  0E07               	movlw	7
 10418  004502  5C19               	subwf	memset@n^0,w,c
 10419  004504  A0D8               	btfss	status,0,c
 10420  004506  0012               	return	
 10421  004508                     l10264:
 10422  004508  EE20 F003          	lfsr	2,3
 10423  00450C  501F               	movf	memset@s^0,w,c
 10424  00450E  26D9               	addwf	fsr2l,f,c
 10425  004510  5020               	movf	(memset@s+1)^0,w,c
 10426  004512  22DA               	addwfc	fsr2h,f,c
 10427  004514  0060  F05F  FFDF   	movff	memset@c,indf2
 10428  00451A  5019               	movf	memset@n^0,w,c
 10429  00451C  241F               	addwf	memset@s^0,w,c
 10430  00451E  6E1B               	movwf	??_memset^0,c
 10431  004520  501A               	movf	(memset@n+1)^0,w,c
 10432  004522  2020               	addwfc	(memset@s+1)^0,w,c
 10433  004524  6E1C               	movwf	(??_memset+1)^0,c
 10434  004526  0EFC               	movlw	252
 10435  004528  241B               	addwf	??_memset^0,w,c
 10436  00452A  6ED9               	movwf	fsr2l,c
 10437  00452C  0EFF               	movlw	255
 10438  00452E  201C               	addwfc	(??_memset+1)^0,w,c
 10439  004530  6EDA               	movwf	fsr2h,c
 10440  004532  0060  F05F  FFDF   	movff	memset@c,indf2
 10441  004538  501A               	movf	(memset@n+1)^0,w,c
 10442  00453A  E104               	bnz	l10270
 10443  00453C  0E09               	movlw	9
 10444  00453E  5C19               	subwf	memset@n^0,w,c
 10445  004540  A0D8               	btfss	status,0,c
 10446  004542  0012               	return	
 10447  004544                     l10270:
 10448  004544  C01F  F01B         	movff	memset@s,??_memset
 10449  004548  C020  F01C         	movff	memset@s+1,??_memset+1
 10450  00454C  1E1B               	comf	??_memset^0,f,c
 10451  00454E  1E1C               	comf	(??_memset+1)^0,f,c
 10452  004550  4A1B               	infsnz	??_memset^0,f,c
 10453  004552  2A1C               	incf	(??_memset+1)^0,f,c
 10454  004554  0E03               	movlw	3
 10455  004556  141B               	andwf	??_memset^0,w,c
 10456  004558  6E1D               	movwf	memset@k^0,c
 10457  00455A  6A1E               	clrf	(memset@k+1)^0,c
 10458  00455C  501D               	movf	memset@k^0,w,c
 10459  00455E  261F               	addwf	memset@s^0,f,c
 10460  004560  501E               	movf	(memset@k+1)^0,w,c
 10461  004562  2220               	addwfc	(memset@s+1)^0,f,c
 10462  004564  501D               	movf	memset@k^0,w,c
 10463  004566  5E19               	subwf	memset@n^0,f,c
 10464  004568  501E               	movf	(memset@k+1)^0,w,c
 10465  00456A  5A1A               	subwfb	(memset@n+1)^0,f,c
 10466  00456C  0EFC               	movlw	252
 10467  00456E  1619               	andwf	memset@n^0,f,c
 10468  004570  0EFF               	movlw	255
 10469  004572  161A               	andwf	(memset@n+1)^0,f,c
 10470  004574  D00E               	goto	l10278
 10471  004576                     l10272:
 10472  004576  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10473  00457C  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10474  004582  0060  F05F  FFDF   	movff	memset@c,indf2
 10475  004588  0619               	decf	memset@n^0,f,c
 10476  00458A  A0D8               	btfss	status,0,c
 10477  00458C  061A               	decf	(memset@n+1)^0,f,c
 10478  00458E  4A1F               	infsnz	memset@s^0,f,c
 10479  004590  2A20               	incf	(memset@s+1)^0,f,c
 10480  004592                     l10278:
 10481  004592  5019               	movf	memset@n^0,w,c
 10482  004594  101A               	iorwf	(memset@n+1)^0,w,c
 10483  004596  B4D8               	btfsc	status,2,c
 10484  004598  0012               	return	
 10485  00459A  D7ED               	goto	l10272
 10486  00459C                     __end_of_memset:
 10487                           	callstack 0
 10488                           
 10489 ;; *************** function _linux_putc *****************
 10490 ;; Defined at:
 10491 ;;		line 47 in file "scdm.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;  data            2   43[COMRAM] PTR unsigned char 
 10494 ;;		 -> STR_11(3), cli_read@i(1), 
 10495 ;;  a_len           1   45[COMRAM] unsigned char 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;		None
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      unsigned char 
 10500 ;; Registers used:
 10501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10507 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10510 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10511 ;;Total ram usage:        3 bytes
 10512 ;; Hardware stack levels used: 1
 10513 ;; Hardware stack levels required when called: 9
 10514 ;; This function calls:
 10515 ;;		_puts
 10516 ;; This function is called by:
 10517 ;;		_cli_read
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           	psect	text35
 10522  005CD6                     __ptext35:
 10523                           	callstack 0
 10524  005CD6                     _linux_putc:
 10525                           	callstack 20
 10526                           
 10527                           ;scdm.c: 47: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 48: {;scdm.c: 49: 
      +                           puts((const char *) data);
 10528                           
 10529                           ;incstack = 0
 10530  005CD6  C02C  F029         	movff	linux_putc@data,puts@s
 10531  005CDA  C02D  F02A         	movff	linux_putc@data+1,puts@s+1
 10532  005CDE  EC96  F02C         	call	_puts	;wreg free
 10533  005CE2  0012               	return		;funcret
 10534  005CE4                     __end_of_linux_putc:
 10535                           	callstack 0
 10536                           
 10537 ;; *************** function _linux_getc *****************
 10538 ;; Defined at:
 10539 ;;		line 37 in file "scdm.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  a_data          1   21[COMRAM] PTR unsigned char 
 10542 ;;		 -> cli_read@i(1), 
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;		None
 10545 ;; Return value:  Size  Location     Type
 10546 ;;                  1    wreg      unsigned char 
 10547 ;; Registers used:
 10548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10549 ;; Tracked objects:
 10550 ;;		On entry : 3F/0
 10551 ;;		On exit  : 6/0
 10552 ;;		Unchanged: 0/0
 10553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10554 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10558 ;;Total ram usage:        2 bytes
 10559 ;; Hardware stack levels used: 1
 10560 ;; Hardware stack levels required when called: 5
 10561 ;; This function calls:
 10562 ;;		_UART1_Read
 10563 ;;		_UART1_is_rx_ready
 10564 ;; This function is called by:
 10565 ;;		_cli_read
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text36
 10570  005B16                     __ptext36:
 10571                           	callstack 0
 10572  005B16                     _linux_getc:
 10573                           	callstack 24
 10574                           
 10575                           ; BSR set to: 0
 10576                           ;scdm.c: 37: uint8_t linux_getc(uint8_t *a_data);scdm.c: 38: {;scdm.c: 39:  if (UART1_is
      +                          _rx_ready()) {
 10577                           
 10578                           ;incstack = 0
 10579  005B16  EC72  F02E         	call	_UART1_is_rx_ready	;wreg free
 10580  005B1A  0900               	iorlw	0
 10581  005B1C  B4D8               	btfsc	status,2,c
 10582  005B1E  D00B               	goto	l10442
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;scdm.c: 40:   a_data[0] = UART1_Read();
 10586  005B20  ECFC  F02B         	call	_UART1_Read	;wreg free
 10587  005B24  6E17               	movwf	??_linux_getc^0,c
 10588  005B26  5016               	movf	linux_getc@a_data^0,w,c
 10589  005B28  6ED9               	movwf	fsr2l,c
 10590  005B2A  6ADA               	clrf	fsr2h,c
 10591  005B2C  0060  F05F  FFDF   	movff	??_linux_getc,indf2
 10592                           
 10593                           ; BSR set to: 57
 10594                           ;scdm.c: 41:   return 1;
 10595  005B32  0E01               	movlw	1
 10596  005B34  0012               	return	
 10597  005B36                     l10442:
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;scdm.c: 43:   return 0;
 10601  005B36  0E00               	movlw	0
 10602  005B38  0012               	return		;funcret
 10603  005B3A                     __end_of_linux_getc:
 10604                           	callstack 0
 10605                           
 10606 ;; *************** function _UART1_is_rx_ready *****************
 10607 ;; Defined at:
 10608 ;;		line 161 in file "mcc_generated_files/uart1.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;		None
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;		None
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      _Bool 
 10615 ;; Registers used:
 10616 ;;		wreg, status,2
 10617 ;; Tracked objects:
 10618 ;;		On entry : 3F/0
 10619 ;;		On exit  : 3F/0
 10620 ;;		Unchanged: 3F/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10626 ;;Total ram usage:        0 bytes
 10627 ;; Hardware stack levels used: 1
 10628 ;; Hardware stack levels required when called: 4
 10629 ;; This function calls:
 10630 ;;		Nothing
 10631 ;; This function is called by:
 10632 ;;		_linux_getc
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text37
 10637  005CE4                     __ptext37:
 10638                           	callstack 0
 10639  005CE4                     _UART1_is_rx_ready:
 10640                           	callstack 24
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;mcc_generated_files/uart1.c: 163:     return (uart1RxCount ? 1 : 0);
 10644                           
 10645                           ;incstack = 0
 10646  005CE4  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10647  005CE6  B4D8               	btfsc	status,2,c
 10648  005CE8  D002               	goto	u12050
 10649  005CEA  0E01               	movlw	1
 10650  005CEC  0012               	return	
 10651  005CEE                     u12050:
 10652  005CEE  0E00               	movlw	0
 10653                           
 10654                           ; BSR set to: 0
 10655  005CF0  0012               	return		;funcret
 10656  005CF2                     __end_of_UART1_is_rx_ready:
 10657                           	callstack 0
 10658                           
 10659 ;; *************** function _UART1_Read *****************
 10660 ;; Defined at:
 10661 ;;		line 180 in file "mcc_generated_files/uart1.c"
 10662 ;; Parameters:    Size  Location     Type
 10663 ;;		None
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;  readValue       1   20[COMRAM] unsigned char 
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      unsigned char 
 10668 ;; Registers used:
 10669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10670 ;; Tracked objects:
 10671 ;;		On entry : 3F/0
 10672 ;;		On exit  : 3F/39
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10679 ;;Total ram usage:        1 bytes
 10680 ;; Hardware stack levels used: 1
 10681 ;; Hardware stack levels required when called: 4
 10682 ;; This function calls:
 10683 ;;		Nothing
 10684 ;; This function is called by:
 10685 ;;		_linux_getc
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           	psect	text38
 10690  0057F8                     __ptext38:
 10691                           	callstack 0
 10692  0057F8                     _UART1_Read:
 10693                           	callstack 24
 10694                           
 10695                           ; BSR set to: 0
 10696                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10697                           
 10698                           ; BSR set to: 0
 10699                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10700                           
 10701                           ; BSR set to: 0
 10702                           ;incstack = 0
 10703  0057F8  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10704  0057FA  B4D8               	btfsc	status,2,c
 10705  0057FC  D7FD               	goto	__ptext38
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;mcc_generated_files/uart1.c: 188:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10709  0057FE  0E00               	movlw	low _uart1RxStatusBuffer
 10710  005800  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10711  005802  6ED9               	movwf	fsr2l,c
 10712  005804  6ADA               	clrf	fsr2h,c
 10713  005806  0E01               	movlw	high _uart1RxStatusBuffer
 10714  005808  22DA               	addwfc	fsr2h,f,c
 10715  00580A  50DF               	movf	indf2,w,c
 10716  00580C  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 10717                           
 10718                           ;mcc_generated_files/uart1.c: 190:     readValue = uart1RxBuffer[uart1RxTail++];
 10719  00580E  0E00               	movlw	low _uart1RxBuffer
 10720  005810  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10721  005812  6ED9               	movwf	fsr2l,c
 10722  005814  6ADA               	clrf	fsr2h,c
 10723  005816  0E02               	movlw	high _uart1RxBuffer
 10724  005818  22DA               	addwfc	fsr2h,f,c
 10725  00581A  50DF               	movf	indf2,w,c
 10726  00581C  6E15               	movwf	UART1_Read@readValue^0,c
 10727                           
 10728                           ; BSR set to: 0
 10729  00581E  2A47               	incf	_uart1RxTail^0,f,c	;volatile
 10730                           
 10731                           ; BSR set to: 0
 10732                           ;mcc_generated_files/uart1.c: 191:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10733  005820  0E3F               	movlw	63
 10734  005822  6447               	cpfsgt	_uart1RxTail^0,c
 10735  005824  D002               	goto	l10224
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;mcc_generated_files/uart1.c: 192:     {;mcc_generated_files/uart1.c: 193:         uart1
      +                          RxTail = 0;
 10739  005826  0E00               	movlw	0
 10740  005828  6E47               	movwf	_uart1RxTail^0,c	;volatile
 10741  00582A                     l10224:
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;mcc_generated_files/uart1.c: 195:     PIE3bits.U1RXIE = 0;
 10745  00582A  0139               	movlb	57	; () banked
 10746  00582C  9793               	bcf	147,3,b	;volatile
 10747                           
 10748                           ; BSR set to: 57
 10749                           ;mcc_generated_files/uart1.c: 196:     uart1RxCount--;
 10750  00582E  0646               	decf	_uart1RxCount^0,f,c	;volatile
 10751                           
 10752                           ; BSR set to: 57
 10753                           ;mcc_generated_files/uart1.c: 197:     PIE3bits.U1RXIE = 1;
 10754  005830  8793               	bsf	147,3,b	;volatile
 10755                           
 10756                           ; BSR set to: 57
 10757                           ;mcc_generated_files/uart1.c: 199:     return readValue;
 10758  005832  5015               	movf	UART1_Read@readValue^0,w,c
 10759                           
 10760                           ; BSR set to: 57
 10761  005834  0012               	return		;funcret
 10762  005836                     __end_of_UART1_Read:
 10763                           	callstack 0
 10764                           
 10765 ;; *************** function __cli_interpret_cmd *****************
 10766 ;; Defined at:
 10767 ;;		line 53 in file "scdm.c"
 10768 ;; Parameters:    Size  Location     Type
 10769 ;;  a_ctx           2   45[COMRAM] PTR struct _t_cli_ctx
 10770 ;;		 -> cli_ctx(131), 
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;  i               1   48[COMRAM] unsigned char 
 10773 ;;  ret             1   47[COMRAM] unsigned char 
 10774 ;; Return value:  Size  Location     Type
 10775 ;;                  1    wreg      unsigned char 
 10776 ;; Registers used:
 10777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10778 ;; Tracked objects:
 10779 ;;		On entry : 0/0
 10780 ;;		On exit  : 0/0
 10781 ;;		Unchanged: 0/0
 10782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10785 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10786 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10787 ;;Total ram usage:       14 bytes
 10788 ;; Hardware stack levels used: 1
 10789 ;; Hardware stack levels required when called: 10
 10790 ;; This function calls:
 10791 ;;		Absolute function
 10792 ;;		_fh_po
 10793 ;;		_fh_pr
 10794 ;;		_fh_ps
 10795 ;;		_strlen
 10796 ;;		_strncmp
 10797 ;; This function is called by:
 10798 ;;		_cli_read
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           	psect	text39
 10803  003C7A                     __ptext39:
 10804                           	callstack 0
 10805  003C7A                     __cli_interpret_cmd:
 10806                           	callstack 19
 10807                           
 10808                           ;scdm.c: 53: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 54: {;scdm.c: 5
      +                          5:  uint8_t i = 0;
 10809                           
 10810                           ; BSR set to: 57
 10811                           ;incstack = 0
 10812  003C7A  0E00               	movlw	0
 10813  003C7C  6E31               	movwf	__cli_interpret_cmd@i^0,c
 10814                           
 10815                           ;scdm.c: 56:  uint8_t ret = E_CMD_OK;
 10816  003C7E  0E00               	movlw	0
 10817  003C80  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 10818                           
 10819                           ;scdm.c: 58:  if (!strlen(a_ctx->cmd)) {
 10820  003C82  0E02               	movlw	2
 10821  003C84  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10822  003C86  6E15               	movwf	strlen@s^0,c
 10823  003C88  0E00               	movlw	0
 10824  003C8A  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10825  003C8C  6E16               	movwf	(strlen@s+1)^0,c
 10826  003C8E  EC2D  F02B         	call	_strlen	;wreg free
 10827  003C92  5015               	movf	?_strlen^0,w,c
 10828  003C94  1016               	iorwf	(?_strlen+1)^0,w,c
 10829  003C96  A4D8               	btfss	status,2,c
 10830  003C98  D002               	goto	l10458
 10831                           
 10832                           ;scdm.c: 59:   return E_CMD_EMPTY;
 10833  003C9A  0E03               	movlw	3
 10834  003C9C  0012               	return	
 10835  003C9E                     l10458:
 10836                           
 10837                           ;scdm.c: 62:  if (strlen(a_ctx->cmd) < 2) {
 10838  003C9E  0E02               	movlw	2
 10839  003CA0  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10840  003CA2  6E15               	movwf	strlen@s^0,c
 10841  003CA4  0E00               	movlw	0
 10842  003CA6  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10843  003CA8  6E16               	movwf	(strlen@s+1)^0,c
 10844  003CAA  EC2D  F02B         	call	_strlen	;wreg free
 10845  003CAE  5016               	movf	(?_strlen+1)^0,w,c
 10846  003CB0  E103               	bnz	u12181
 10847  003CB2  0E02               	movlw	2
 10848  003CB4  5C15               	subwf	?_strlen^0,w,c
 10849  003CB6  B0D8               	btfsc	status,0,c
 10850  003CB8                     u12181:
 10851  003CB8  D082               	goto	l10470
 10852                           
 10853                           ;scdm.c: 63:   return E_CMD_TOO_SHORT;
 10854  003CBA  0E02               	movlw	2
 10855  003CBC  0012               	return	
 10856  003CBE                     l10464:
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;scdm.c: 67:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 10860  003CBE  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10861  003CC0  0D04               	mullw	4
 10862  003CC2  006F FFCC  F060    	movff	prodl,??__cli_interpret_cmd
 10863  003CC8  006F FFD0  F061    	movff	prodh,??__cli_interpret_cmd+1
 10864  003CCE  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10865  003CD4  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10866  003CDA  006F FF78  F062    	movff	postinc2,??__cli_interpret_cmd+2
 10867  003CE0  006F FF74  F063    	movff	postdec2,??__cli_interpret_cmd+3
 10868  003CE6  5160               	movf	??__cli_interpret_cmd& (0+255),w,b
 10869  003CE8  2562               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 10870  003CEA  6ED9               	movwf	fsr2l,c
 10871  003CEC  5161               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 10872  003CEE  2163               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 10873  003CF0  6EDA               	movwf	fsr2h,c
 10874  003CF2  50DF               	movf	indf2,w,c
 10875  003CF4  6F64               	movwf	(??__cli_interpret_cmd+4)& (0+255),b
 10876  003CF6  C064  F019         	movff	??__cli_interpret_cmd+4,strncmp@_l
 10877  003CFA  5019               	movf	strncmp@_l^0,w,c
 10878  003CFC  A4D8               	btfss	status,2,c
 10879  003CFE  0E20               	movlw	high __smallconst
 10880  003D00  6E1A               	movwf	(strncmp@_l+1)^0,c
 10881  003D02  0E02               	movlw	2
 10882  003D04  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10883  003D06  6E1B               	movwf	strncmp@_r^0,c
 10884  003D08  0E00               	movlw	0
 10885  003D0A  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10886  003D0C  6E1C               	movwf	(strncmp@_r+1)^0,c
 10887  003D0E  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10888  003D10  0D04               	mullw	4
 10889  003D12  006F FFCC  F065    	movff	prodl,??__cli_interpret_cmd+5
 10890  003D18  006F FFD0  F066    	movff	prodh,??__cli_interpret_cmd+6
 10891  003D1E  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10892  003D24  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10893  003D2A  006F FF78  F067    	movff	postinc2,??__cli_interpret_cmd+7
 10894  003D30  006F FF74  F068    	movff	postdec2,??__cli_interpret_cmd+8
 10895  003D36  5165               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 10896  003D38  2567               	addwf	(??__cli_interpret_cmd+7)& (0+255),w,b
 10897  003D3A  6ED9               	movwf	fsr2l,c
 10898  003D3C  5166               	movf	(??__cli_interpret_cmd+6)& (0+255),w,b
 10899  003D3E  2168               	addwfc	(??__cli_interpret_cmd+8)& (0+255),w,b
 10900  003D40  6EDA               	movwf	fsr2h,c
 10901  003D42  50DF               	movf	indf2,w,c
 10902  003D44  6F69               	movwf	(??__cli_interpret_cmd+9)& (0+255),b
 10903  003D46  C069  F015         	movff	??__cli_interpret_cmd+9,strlen@s
 10904  003D4A  5015               	movf	strlen@s^0,w,c
 10905  003D4C  A4D8               	btfss	status,2,c
 10906  003D4E  0E20               	movlw	high __smallconst
 10907  003D50  6E16               	movwf	(strlen@s+1)^0,c
 10908  003D52  EC2D  F02B         	call	_strlen	;wreg free
 10909  003D56  C015  F01D         	movff	?_strlen,strncmp@n
 10910  003D5A  C016  F01E         	movff	?_strlen+1,strncmp@n+1
 10911  003D5E  ECCC  F020         	call	_strncmp	;wreg free
 10912  003D62  5019               	movf	?_strncmp^0,w,c
 10913  003D64  101A               	iorwf	(?_strncmp+1)^0,w,c
 10914  003D66  A4D8               	btfss	status,2,c
 10915  003D68  D029               	goto	l10468
 10916                           
 10917                           ;scdm.c: 69:    a_ctx->cmds[i].fh((void *) a_ctx);
 10918  003D6A  C02E  F02C         	movff	__cli_interpret_cmd@a_ctx,fh_po@a_data
 10919  003D6E  C02F  F02D         	movff	__cli_interpret_cmd@a_ctx+1,fh_po@a_data+1
 10920  003D72  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10921  003D74  0D04               	mullw	4
 10922  003D76  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10923  003D7C  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10924  003D82  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10925  003D88  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10926  003D8E  50F3               	movf	243,w,c
 10927  003D90  0100               	movlb	0	; () banked
 10928  003D92  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10929  003D94  50F4               	movf	244,w,c
 10930  003D96  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10931  003D98  0E01               	movlw	1
 10932  003D9A  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10933  003D9C  6ED9               	movwf	fsr2l,c
 10934  003D9E  0E00               	movlw	0
 10935  003DA0  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10936  003DA2  6EDA               	movwf	fsr2h,c
 10937  003DA4  D801               	call	u12208
 10938  003DA6  D029               	goto	u12210
 10939  003DA8                     u12208:
 10940  003DA8  0005               	push	
 10941  003DAA  6EFA               	movwf	pclath,c
 10942  003DAC  50DE               	movf	postinc2,w,c
 10943  003DAE  6EFD               	movwf	tosl,c
 10944  003DB0  50DE               	movf	postinc2,w,c
 10945  003DB2  6EFE               	movwf	tosh,c
 10946  003DB4  50DE               	movf	postinc2,w,c
 10947  003DB6  6EFF               	movwf	tosu,c
 10948  003DB8  50FA               	movf	pclath,w,c
 10949  003DBA  0012               	return		;indir
 10950  003DBC                     l10468:
 10951                           
 10952                           ;scdm.c: 72:   i++;
 10953  003DBC  2A31               	incf	__cli_interpret_cmd@i^0,f,c
 10954  003DBE                     l10470:
 10955                           
 10956                           ;scdm.c: 66:  while (a_ctx->cmds[i].fh) {
 10957  003DBE  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10958  003DC0  0D04               	mullw	4
 10959  003DC2  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10960  003DC8  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10961  003DCE  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10962  003DD4  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10963  003DDA  50F3               	movf	243,w,c
 10964  003DDC  0100               	movlb	0	; () banked
 10965  003DDE  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10966  003DE0  50F4               	movf	244,w,c
 10967  003DE2  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10968  003DE4  0E01               	movlw	1
 10969  003DE6  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10970  003DE8  6ED9               	movwf	fsr2l,c
 10971  003DEA  0E00               	movlw	0
 10972  003DEC  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10973  003DEE  6EDA               	movwf	fsr2h,c
 10974  003DF0  50DE               	movf	postinc2,w,c
 10975  003DF2  10DE               	iorwf	postinc2,w,c
 10976  003DF4  10DE               	iorwf	postinc2,w,c
 10977  003DF6  A4D8               	btfss	status,2,c
 10978  003DF8  D762               	goto	l10464
 10979  003DFA                     u12210:
 10980                           
 10981                           ;scdm.c: 75:  if (!a_ctx->cmds[i].fh) {
 10982  003DFA  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10983  003DFC  0D04               	mullw	4
 10984  003DFE  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10985  003E04  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10986  003E0A  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10987  003E10  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10988  003E16  50F3               	movf	243,w,c
 10989  003E18  0100               	movlb	0	; () banked
 10990  003E1A  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10991  003E1C  50F4               	movf	244,w,c
 10992  003E1E  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10993  003E20  0E01               	movlw	1
 10994  003E22  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10995  003E24  6ED9               	movwf	fsr2l,c
 10996  003E26  0E00               	movlw	0
 10997  003E28  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10998  003E2A  6EDA               	movwf	fsr2h,c
 10999  003E2C  50DE               	movf	postinc2,w,c
 11000  003E2E  10DE               	iorwf	postinc2,w,c
 11001  003E30  10DE               	iorwf	postinc2,w,c
 11002  003E32  A4D8               	btfss	status,2,c
 11003  003E34  D002               	goto	l1120
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;scdm.c: 76:   ret = E_CMD_NOT_FOUND;
 11007  003E36  0E01               	movlw	1
 11008  003E38  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 11009  003E3A                     l1120:
 11010                           
 11011                           ; BSR set to: 0
 11012                           ;scdm.c: 79:  return ret;
 11013  003E3A  5030               	movf	__cli_interpret_cmd@ret^0,w,c
 11014  003E3C  0012               	return		;funcret
 11015  003E3E                     __end_of__cli_interpret_cmd:
 11016                           	callstack 0
 11017                           
 11018 ;; *************** function _strncmp *****************
 11019 ;; Defined at:
 11020 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;  _l              2   24[COMRAM] PTR const unsigned char 
 11023 ;;		 -> vfpfcnvrt@ct(3), STR_10(21), NULL(0), STR_9(3), 
 11024 ;;		 -> STR_8(3), STR_7(3), STR_6(74), 
 11025 ;;  _r              2   26[COMRAM] PTR const unsigned char 
 11026 ;;		 -> cli_ctx.cmd(128), STR_27(4), STR_22(3), cli_ctx(131), 
 11027 ;;  n               2   28[COMRAM] unsigned int 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  r               2   34[COMRAM] PTR const unsigned char 
 11030 ;;		 -> cli_ctx.cmd(128), STR_27(4), STR_22(3), cli_ctx(131), 
 11031 ;;  l               2   32[COMRAM] PTR const unsigned char 
 11032 ;;		 -> vfpfcnvrt@ct(3), STR_10(21), NULL(0), STR_9(3), 
 11033 ;;		 -> STR_8(3), STR_7(3), STR_6(74), 
 11034 ;; Return value:  Size  Location     Type
 11035 ;;                  2   24[COMRAM] int 
 11036 ;; Registers used:
 11037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11038 ;; Tracked objects:
 11039 ;;		On entry : 0/0
 11040 ;;		On exit  : 0/0
 11041 ;;		Unchanged: 0/0
 11042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11043 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11045 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11046 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11047 ;;Total ram usage:       12 bytes
 11048 ;; Hardware stack levels used: 1
 11049 ;; Hardware stack levels required when called: 4
 11050 ;; This function calls:
 11051 ;;		Nothing
 11052 ;; This function is called by:
 11053 ;;		__cli_interpret_cmd
 11054 ;;		_vfpfcnvrt
 11055 ;; This function uses a non-reentrant model
 11056 ;;
 11057                           
 11058                           	psect	text40
 11059  004198                     __ptext40:
 11060                           	callstack 0
 11061  004198                     _strncmp:
 11062                           	callstack 21
 11063                           
 11064                           ;incstack = 0
 11065  004198  C019  F021         	movff	strncmp@_l,strncmp@l
 11066  00419C  C01A  F022         	movff	strncmp@_l+1,strncmp@l+1
 11067  0041A0  C01B  F023         	movff	strncmp@_r,strncmp@r
 11068  0041A4  C01C  F024         	movff	strncmp@_r+1,strncmp@r+1
 11069  0041A8  061D               	decf	strncmp@n^0,f,c
 11070  0041AA  A0D8               	btfss	status,0,c
 11071  0041AC  061E               	decf	(strncmp@n+1)^0,f,c
 11072  0041AE  281D               	incf	strncmp@n^0,w,c
 11073  0041B0  E10F               	bnz	l9578
 11074  0041B2  281E               	incf	(strncmp@n+1)^0,w,c
 11075  0041B4  A4D8               	btfss	status,2,c
 11076  0041B6  D00C               	goto	l9578
 11077  0041B8  0E00               	movlw	0
 11078  0041BA  6E1A               	movwf	(?_strncmp+1)^0,c
 11079  0041BC  0E00               	movlw	0
 11080  0041BE  6E19               	movwf	?_strncmp^0,c
 11081  0041C0  0012               	return	
 11082  0041C2                     l9576:
 11083  0041C2  4A21               	infsnz	strncmp@l^0,f,c
 11084  0041C4  2A22               	incf	(strncmp@l+1)^0,f,c
 11085  0041C6  4A23               	infsnz	strncmp@r^0,f,c
 11086  0041C8  2A24               	incf	(strncmp@r+1)^0,f,c
 11087  0041CA  061D               	decf	strncmp@n^0,f,c
 11088  0041CC  A0D8               	btfss	status,0,c
 11089  0041CE  061E               	decf	(strncmp@n+1)^0,f,c
 11090  0041D0                     l9578:
 11091  0041D0  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11092  0041D6  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11093  0041DC  0E00               	movlw	low (__smallconst shr (0+16))
 11094  0041DE  6EF8               	movwf	tblptru,c
 11095  0041E0  0E1F               	movlw	(high __ramtop+-1)
 11096  0041E2  64F7               	cpfsgt	tblptrh,c
 11097  0041E4  D003               	bra	u11057
 11098  0041E6  0008               	tblrd		*
 11099  0041E8  50F5               	movf	tablat,w,c
 11100  0041EA  D007               	bra	u11050
 11101  0041EC                     u11057:
 11102  0041EC  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11103  0041F2  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11104  0041F8  50E7               	movf	indf1,w,c
 11105  0041FA                     u11050:
 11106  0041FA  0900               	iorlw	0
 11107  0041FC  B4D8               	btfsc	status,2,c
 11108  0041FE  D04A               	goto	u11110
 11109  004200  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11110  004206  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11111  00420C  0E00               	movlw	low (__smallconst shr (0+16))
 11112  00420E  6EF8               	movwf	tblptru,c
 11113  004210  0E1F               	movlw	(high __ramtop+-1)
 11114  004212  64F7               	cpfsgt	tblptrh,c
 11115  004214  D003               	bra	u11077
 11116  004216  0008               	tblrd		*
 11117  004218  50F5               	movf	tablat,w,c
 11118  00421A  D007               	bra	u11070
 11119  00421C                     u11077:
 11120  00421C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11121  004222  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11122  004228  50E7               	movf	indf1,w,c
 11123  00422A                     u11070:
 11124  00422A  0900               	iorlw	0
 11125  00422C  B4D8               	btfsc	status,2,c
 11126  00422E  D032               	goto	u11110
 11127  004230  501D               	movf	strncmp@n^0,w,c
 11128  004232  101E               	iorwf	(strncmp@n+1)^0,w,c
 11129  004234  B4D8               	btfsc	status,2,c
 11130  004236  D02E               	goto	u11110
 11131  004238  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11132  00423E  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11133  004244  0E00               	movlw	low (__smallconst shr (0+16))
 11134  004246  6EF8               	movwf	tblptru,c
 11135  004248  0E1F               	movlw	(high __ramtop+-1)
 11136  00424A  64F7               	cpfsgt	tblptrh,c
 11137  00424C  D003               	bra	u11107
 11138  00424E  0008               	tblrd		*
 11139  004250  50F5               	movf	tablat,w,c
 11140  004252  D007               	bra	u11100
 11141  004254                     u11107:
 11142  004254  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11143  00425A  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11144  004260  50E7               	movf	indf1,w,c
 11145  004262                     u11100:
 11146  004262  6E1F               	movwf	??_strncmp^0,c
 11147  004264  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11148  00426A  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11149  004270  0E00               	movlw	low (__smallconst shr (0+16))
 11150  004272  6EF8               	movwf	tblptru,c
 11151  004274  0E1F               	movlw	(high __ramtop+-1)
 11152  004276  64F7               	cpfsgt	tblptrh,c
 11153  004278  D003               	bra	u11117
 11154  00427A  0008               	tblrd		*
 11155  00427C  50F5               	movf	tablat,w,c
 11156  00427E  D007               	bra	u11115
 11157  004280                     u11117:
 11158  004280  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11159  004286  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11160  00428C  50E7               	movf	indf1,w,c
 11161  00428E                     u11115:
 11162  00428E  181F               	xorwf	??_strncmp^0,w,c
 11163  004290  B4D8               	btfsc	status,2,c
 11164  004292  D797               	goto	l9576
 11165  004294                     u11110:
 11166  004294  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11167  00429A  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11168  0042A0  0E00               	movlw	low (__smallconst shr (0+16))
 11169  0042A2  6EF8               	movwf	tblptru,c
 11170  0042A4  0E1F               	movlw	(high __ramtop+-1)
 11171  0042A6  64F7               	cpfsgt	tblptrh,c
 11172  0042A8  D003               	bra	u11127
 11173  0042AA  0008               	tblrd		*
 11174  0042AC  50F5               	movf	tablat,w,c
 11175  0042AE  D007               	bra	u11120
 11176  0042B0                     u11127:
 11177  0042B0  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11178  0042B6  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11179  0042BC  50E7               	movf	indf1,w,c
 11180  0042BE                     u11120:
 11181  0042BE  6E1F               	movwf	??_strncmp^0,c
 11182  0042C0  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11183  0042C6  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11184  0042CC  0E00               	movlw	low (__smallconst shr (0+16))
 11185  0042CE  6EF8               	movwf	tblptru,c
 11186  0042D0  0E1F               	movlw	(high __ramtop+-1)
 11187  0042D2  64F7               	cpfsgt	tblptrh,c
 11188  0042D4  D003               	bra	u11137
 11189  0042D6  0008               	tblrd		*
 11190  0042D8  50F5               	movf	tablat,w,c
 11191  0042DA  D007               	bra	u11130
 11192  0042DC                     u11137:
 11193  0042DC  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11194  0042E2  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11195  0042E8  50E7               	movf	indf1,w,c
 11196  0042EA                     u11130:
 11197  0042EA  6E20               	movwf	(??_strncmp+1)^0,c
 11198  0042EC  5020               	movf	(??_strncmp+1)^0,w,c
 11199  0042EE  5C1F               	subwf	??_strncmp^0,w,c
 11200  0042F0  6E19               	movwf	?_strncmp^0,c
 11201  0042F2  6A1A               	clrf	(?_strncmp+1)^0,c
 11202  0042F4  A0D8               	btfss	status,0,c
 11203  0042F6  061A               	decf	(?_strncmp+1)^0,f,c
 11204  0042F8  0012               	return		;funcret
 11205  0042FA                     __end_of_strncmp:
 11206                           	callstack 0
 11207                           
 11208 ;; *************** function _strlen *****************
 11209 ;; Defined at:
 11210 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;  s               2   20[COMRAM] PTR const unsigned char 
 11213 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11214 ;;		 -> ?_sprintf(2), NULL(0), STR_9(3), STR_8(3), 
 11215 ;;		 -> STR_7(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11216 ;; Auto vars:     Size  Location     Type
 11217 ;;  a               2   22[COMRAM] PTR const unsigned char 
 11218 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11219 ;;		 -> ?_sprintf(2), NULL(0), STR_9(3), STR_8(3), 
 11220 ;;		 -> STR_7(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11221 ;; Return value:  Size  Location     Type
 11222 ;;                  2   20[COMRAM] unsigned int 
 11223 ;; Registers used:
 11224 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11225 ;; Tracked objects:
 11226 ;;		On entry : 0/0
 11227 ;;		On exit  : 0/0
 11228 ;;		Unchanged: 0/0
 11229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11234 ;;Total ram usage:        4 bytes
 11235 ;; Hardware stack levels used: 1
 11236 ;; Hardware stack levels required when called: 4
 11237 ;; This function calls:
 11238 ;;		Nothing
 11239 ;; This function is called by:
 11240 ;;		__cli_interpret_cmd
 11241 ;;		_pad
 11242 ;;		_stoa
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           	psect	text41
 11247  00565A                     __ptext41:
 11248                           	callstack 0
 11249  00565A                     _strlen:
 11250                           	callstack 19
 11251                           
 11252                           ;incstack = 0
 11253  00565A  C015  F017         	movff	strlen@s,strlen@a
 11254  00565E  C016  F018         	movff	strlen@s+1,strlen@a+1
 11255  005662  D002               	goto	l8760
 11256  005664                     l8758:
 11257  005664  4A15               	infsnz	strlen@s^0,f,c
 11258  005666  2A16               	incf	(strlen@s+1)^0,f,c
 11259  005668                     l8760:
 11260  005668  0060  F057  FFF6   	movff	strlen@s,tblptrl
 11261  00566E  0060  F05B  FFF7   	movff	strlen@s+1,tblptrh
 11262  005674  0E00               	movlw	low (__smallconst shr (0+16))
 11263  005676  6EF8               	movwf	tblptru,c
 11264  005678  0E1F               	movlw	(high __ramtop+-1)
 11265  00567A  64F7               	cpfsgt	tblptrh,c
 11266  00567C  D003               	bra	u9557
 11267  00567E  0008               	tblrd		*
 11268  005680  50F5               	movf	tablat,w,c
 11269  005682  D007               	bra	u9550
 11270  005684                     u9557:
 11271  005684  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11272  00568A  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11273  005690  50E7               	movf	indf1,w,c
 11274  005692                     u9550:
 11275  005692  0900               	iorlw	0
 11276  005694  A4D8               	btfss	status,2,c
 11277  005696  D7E6               	goto	l8758
 11278  005698  5017               	movf	strlen@a^0,w,c
 11279  00569A  5C15               	subwf	strlen@s^0,w,c
 11280  00569C  6E15               	movwf	?_strlen^0,c
 11281  00569E  5018               	movf	(strlen@a+1)^0,w,c
 11282  0056A0  5816               	subwfb	(strlen@s+1)^0,w,c
 11283  0056A2  6E16               	movwf	(?_strlen+1)^0,c
 11284  0056A4  0012               	return		;funcret
 11285  0056A6                     __end_of_strlen:
 11286                           	callstack 0
 11287                           
 11288 ;; *************** function _fh_po *****************
 11289 ;; Defined at:
 11290 ;;		line 112 in file "main.c"
 11291 ;; Parameters:    Size  Location     Type
 11292 ;;  a_data          2   43[COMRAM] PTR void 
 11293 ;;		 -> cli_ctx(131), 
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;		None
 11296 ;; Return value:  Size  Location     Type
 11297 ;;                  1    wreg      void 
 11298 ;; Registers used:
 11299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11300 ;; Tracked objects:
 11301 ;;		On entry : 3F/0
 11302 ;;		On exit  : 3F/0
 11303 ;;		Unchanged: 0/0
 11304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11309 ;;Total ram usage:        2 bytes
 11310 ;; Hardware stack levels used: 1
 11311 ;; Hardware stack levels required when called: 9
 11312 ;; This function calls:
 11313 ;;		_puts
 11314 ;; This function is called by:
 11315 ;;		__cli_interpret_cmd
 11316 ;; This function uses a non-reentrant model
 11317 ;;
 11318                           
 11319                           	psect	text42
 11320  005C78                     __ptext42:
 11321                           	callstack 0
 11322  005C78                     _fh_po:
 11323                           	callstack 19
 11324                           
 11325                           ; BSR set to: 0
 11326                           ;main.c: 112: void fh_po(void *a_data);main.c: 113: {;main.c: 114:  puts("\r\n Voltage O
      +                          FF \r\n");
 11327                           
 11328                           ;incstack = 0
 11329  005C78  0EB2               	movlw	low STR_5
 11330  005C7A  6E29               	movwf	puts@s^0,c
 11331  005C7C  5029               	movf	puts@s^0,w,c
 11332  005C7E  A4D8               	btfss	status,2,c
 11333  005C80  0E20               	movlw	high __smallconst
 11334  005C82  6E2A               	movwf	(puts@s+1)^0,c
 11335  005C84  EC96  F02C         	call	_puts	;wreg free
 11336                           
 11337                           ;main.c: 115:  mode = off_mode;
 11338  005C88  0E00               	movlw	0
 11339  005C8A  0100               	movlb	0	; () banked
 11340  005C8C  6FFB               	movwf	_mode& (0+255),b
 11341                           
 11342                           ; BSR set to: 0
 11343  005C8E  0012               	return		;funcret
 11344  005C90                     __end_of_fh_po:
 11345                           	callstack 0
 11346                           
 11347 ;; *************** function _fh_pr *****************
 11348 ;; Defined at:
 11349 ;;		line 99 in file "main.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  a_data          2   43[COMRAM] PTR void 
 11352 ;;		 -> cli_ctx(131), 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  1    wreg      void 
 11357 ;; Registers used:
 11358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11359 ;; Tracked objects:
 11360 ;;		On entry : 3F/0
 11361 ;;		On exit  : 3F/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11368 ;;Total ram usage:        2 bytes
 11369 ;; Hardware stack levels used: 1
 11370 ;; Hardware stack levels required when called: 9
 11371 ;; This function calls:
 11372 ;;		_puts
 11373 ;; This function is called by:
 11374 ;;		__cli_interpret_cmd
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text43
 11379  005B3A                     __ptext43:
 11380                           	callstack 0
 11381  005B3A                     _fh_pr:
 11382                           	callstack 19
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;main.c: 99: void fh_pr(void *a_data);main.c: 100: {;main.c: 101:  puts((const char *) a
      +                          _data);
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;incstack = 0
 11389  005B3A  C02C  F029         	movff	fh_pr@a_data,puts@s
 11390  005B3E  C02D  F02A         	movff	fh_pr@a_data+1,puts@s+1
 11391  005B42  EC96  F02C         	call	_puts	;wreg free
 11392                           
 11393                           ;main.c: 102:  puts("\r\n Ramp to 1000VDC ON \r\n");
 11394  005B46  0E6C               	movlw	low STR_3
 11395  005B48  6E29               	movwf	puts@s^0,c
 11396  005B4A  5029               	movf	puts@s^0,w,c
 11397  005B4C  A4D8               	btfss	status,2,c
 11398  005B4E  0E20               	movlw	high __smallconst
 11399  005B50  6E2A               	movwf	(puts@s+1)^0,c
 11400  005B52  EC96  F02C         	call	_puts	;wreg free
 11401                           
 11402                           ;main.c: 103:  mode = roll_mode;
 11403  005B56  0E01               	movlw	1
 11404  005B58  0100               	movlb	0	; () banked
 11405  005B5A  6FFB               	movwf	_mode& (0+255),b
 11406                           
 11407                           ; BSR set to: 0
 11408  005B5C  0012               	return		;funcret
 11409  005B5E                     __end_of_fh_pr:
 11410                           	callstack 0
 11411                           
 11412 ;; *************** function _fh_ps *****************
 11413 ;; Defined at:
 11414 ;;		line 106 in file "main.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;  a_data          2   43[COMRAM] PTR void 
 11417 ;;		 -> cli_ctx(131), 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;		None
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  1    wreg      void 
 11422 ;; Registers used:
 11423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11424 ;; Tracked objects:
 11425 ;;		On entry : 3F/0
 11426 ;;		On exit  : 3F/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11433 ;;Total ram usage:        2 bytes
 11434 ;; Hardware stack levels used: 1
 11435 ;; Hardware stack levels required when called: 9
 11436 ;; This function calls:
 11437 ;;		_puts
 11438 ;; This function is called by:
 11439 ;;		__cli_interpret_cmd
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text44
 11444  005C90                     __ptext44:
 11445                           	callstack 0
 11446  005C90                     _fh_ps:
 11447                           	callstack 19
 11448                           
 11449                           ; BSR set to: 0
 11450                           ;main.c: 106: void fh_ps(void *a_data);main.c: 107: {;main.c: 108:  puts("\r\n Steady 10
      +                          00VDC ON \r\n");
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;incstack = 0
 11454  005C90  0E85               	movlw	low STR_4
 11455  005C92  6E29               	movwf	puts@s^0,c
 11456  005C94  5029               	movf	puts@s^0,w,c
 11457  005C96  A4D8               	btfss	status,2,c
 11458  005C98  0E20               	movlw	high __smallconst
 11459  005C9A  6E2A               	movwf	(puts@s+1)^0,c
 11460  005C9C  EC96  F02C         	call	_puts	;wreg free
 11461                           
 11462                           ;main.c: 109:  mode = static_mode;
 11463  005CA0  0E02               	movlw	2
 11464  005CA2  0100               	movlb	0	; () banked
 11465  005CA4  6FFB               	movwf	_mode& (0+255),b
 11466                           
 11467                           ; BSR set to: 0
 11468  005CA6  0012               	return		;funcret
 11469  005CA8                     __end_of_fh_ps:
 11470                           	callstack 0
 11471                           
 11472 ;; *************** function _puts *****************
 11473 ;; Defined at:
 11474 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;  s               2   40[COMRAM] PTR const unsigned char 
 11477 ;;		 -> cli_ctx.cmd(128), STR_11(3), cli_read@i(1), cmdm(28), 
 11478 ;;		 -> cli_ctx(131), STR_5(18), STR_4(24), STR_3(25), 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;  r               2    0        int 
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  2   40[COMRAM] int 
 11483 ;; Registers used:
 11484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/2
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11493 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11494 ;;Total ram usage:        3 bytes
 11495 ;; Hardware stack levels used: 1
 11496 ;; Hardware stack levels required when called: 8
 11497 ;; This function calls:
 11498 ;;		_fputc
 11499 ;;		_fputs
 11500 ;; This function is called by:
 11501 ;;		_fh_pr
 11502 ;;		_fh_ps
 11503 ;;		_fh_po
 11504 ;;		_cli_init
 11505 ;;		_linux_putc
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text45
 11510  00592C                     __ptext45:
 11511                           	callstack 0
 11512  00592C                     _puts:
 11513                           	callstack 20
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;incstack = 0
 11517  00592C  0E01               	movlw	1
 11518  00592E  6E2B               	movwf	_puts$2914^0,c
 11519  005930  C029  F020         	movff	puts@s,fputs@s
 11520  005934  C02A  F021         	movff	puts@s+1,fputs@s+1
 11521  005938  0E00               	movlw	0
 11522  00593A  6E22               	movwf	fputs@fp^0,c
 11523  00593C  0E00               	movlw	0
 11524  00593E  6E23               	movwf	(fputs@fp+1)^0,c
 11525  005940  EC28  F02A         	call	_fputs	;wreg free
 11526  005944  BE21               	btfsc	(?_fputs+1)^0,7,c
 11527  005946  0012               	return	
 11528  005948  0E00               	movlw	0
 11529  00594A  6E18               	movwf	(fputc@c+1)^0,c
 11530  00594C  0E0A               	movlw	10
 11531  00594E  6E17               	movwf	fputc@c^0,c
 11532  005950  0E00               	movlw	0
 11533  005952  6E19               	movwf	fputc@fp^0,c
 11534  005954  0E00               	movlw	0
 11535  005956  6E1A               	movwf	(fputc@fp+1)^0,c
 11536  005958  EC57  F027         	call	_fputc	;wreg free
 11537  00595C  BE18               	btfsc	(?_fputc+1)^0,7,c
 11538  00595E  0012               	return	
 11539  005960  0E00               	movlw	0
 11540  005962  6E2B               	movwf	_puts$2914^0,c
 11541  005964  0012               	return		;funcret
 11542  005966                     __end_of_puts:
 11543                           	callstack 0
 11544                           
 11545 ;; *************** function _fputs *****************
 11546 ;; Defined at:
 11547 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;  s               2   31[COMRAM] PTR const unsigned char 
 11550 ;;		 -> cli_ctx.cmd(128), dbuf(80), STR_11(3), cli_read@i(1), 
 11551 ;;		 -> cmdm(28), cli_ctx(131), STR_5(18), STR_4(24), 
 11552 ;;		 -> STR_3(25), 
 11553 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11554 ;;		 -> sprintf@f(11), NULL(0), 
 11555 ;; Auto vars:     Size  Location     Type
 11556 ;;  i               2   38[COMRAM] int 
 11557 ;;  c               1   37[COMRAM] unsigned char 
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  2   31[COMRAM] int 
 11560 ;; Registers used:
 11561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11568 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11570 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11571 ;;Total ram usage:        9 bytes
 11572 ;; Hardware stack levels used: 1
 11573 ;; Hardware stack levels required when called: 7
 11574 ;; This function calls:
 11575 ;;		_fputc
 11576 ;; This function is called by:
 11577 ;;		_pad
 11578 ;;		_puts
 11579 ;; This function uses a non-reentrant model
 11580 ;;
 11581                           
 11582                           	psect	text46
 11583  005450                     __ptext46:
 11584                           	callstack 0
 11585  005450                     _fputs:
 11586                           	callstack 16
 11587                           
 11588                           ;incstack = 0
 11589  005450  0E00               	movlw	0
 11590  005452  6E28               	movwf	(fputs@i+1)^0,c
 11591  005454  0E00               	movlw	0
 11592  005456  6E27               	movwf	fputs@i^0,c
 11593  005458  D00B               	goto	l8974
 11594  00545A                     l8970:
 11595  00545A  C026  F017         	movff	fputs@c,fputc@c
 11596  00545E  6A18               	clrf	(fputc@c+1)^0,c
 11597  005460  C022  F019         	movff	fputs@fp,fputc@fp
 11598  005464  C023  F01A         	movff	fputs@fp+1,fputc@fp+1
 11599  005468  EC57  F027         	call	_fputc	;wreg free
 11600  00546C  4A27               	infsnz	fputs@i^0,f,c
 11601  00546E  2A28               	incf	(fputs@i+1)^0,f,c
 11602  005470                     l8974:
 11603  005470  5027               	movf	fputs@i^0,w,c
 11604  005472  2420               	addwf	fputs@s^0,w,c
 11605  005474  6E24               	movwf	??_fputs^0,c
 11606  005476  5028               	movf	(fputs@i+1)^0,w,c
 11607  005478  2021               	addwfc	(fputs@s+1)^0,w,c
 11608  00547A  6E25               	movwf	(??_fputs+1)^0,c
 11609  00547C  0060  F093  FFF6   	movff	??_fputs,tblptrl
 11610  005482  0060  F097  FFF7   	movff	??_fputs+1,tblptrh
 11611  005488  0E00               	movlw	low (__smallconst shr (0+16))
 11612  00548A  6EF8               	movwf	tblptru,c
 11613  00548C  0E1F               	movlw	(high __ramtop+-1)
 11614  00548E  64F7               	cpfsgt	tblptrh,c
 11615  005490  D003               	bra	u9967
 11616  005492  0008               	tblrd		*
 11617  005494  50F5               	movf	tablat,w,c
 11618  005496  D007               	bra	u9960
 11619  005498                     u9967:
 11620  005498  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11621  00549E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11622  0054A4  50E7               	movf	indf1,w,c
 11623  0054A6                     u9960:
 11624  0054A6  6E26               	movwf	fputs@c^0,c
 11625  0054A8  5026               	movf	fputs@c^0,w,c
 11626  0054AA  A4D8               	btfss	status,2,c
 11627  0054AC  D7D6               	goto	l8970
 11628  0054AE  C027  F020         	movff	fputs@i,?_fputs
 11629  0054B2  C028  F021         	movff	fputs@i+1,?_fputs+1
 11630  0054B6  0012               	return		;funcret
 11631  0054B8                     __end_of_fputs:
 11632                           	callstack 0
 11633                           
 11634 ;; *************** function _fputc *****************
 11635 ;; Defined at:
 11636 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 11637 ;; Parameters:    Size  Location     Type
 11638 ;;  c               2   22[COMRAM] int 
 11639 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
 11640 ;;		 -> sprintf@f(11), NULL(0), 
 11641 ;; Auto vars:     Size  Location     Type
 11642 ;;		None
 11643 ;; Return value:  Size  Location     Type
 11644 ;;                  2   22[COMRAM] int 
 11645 ;; Registers used:
 11646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11647 ;; Tracked objects:
 11648 ;;		On entry : 0/0
 11649 ;;		On exit  : 0/0
 11650 ;;		Unchanged: 0/0
 11651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11652 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11654 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11655 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11656 ;;Total ram usage:        9 bytes
 11657 ;; Hardware stack levels used: 1
 11658 ;; Hardware stack levels required when called: 6
 11659 ;; This function calls:
 11660 ;;		_putch
 11661 ;; This function is called by:
 11662 ;;		_pad
 11663 ;;		_stoa
 11664 ;;		_vfpfcnvrt
 11665 ;;		_fputs
 11666 ;;		_puts
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670                           	psect	text47
 11671  004EAE                     __ptext47:
 11672                           	callstack 0
 11673  004EAE                     _fputc:
 11674                           	callstack 16
 11675                           
 11676                           ;incstack = 0
 11677  004EAE  5019               	movf	fputc@fp^0,w,c
 11678  004EB0  101A               	iorwf	(fputc@fp+1)^0,w,c
 11679  004EB2  B4D8               	btfsc	status,2,c
 11680  004EB4  D004               	goto	u9520
 11681  004EB6  5019               	movf	fputc@fp^0,w,c
 11682  004EB8  101A               	iorwf	(fputc@fp+1)^0,w,c
 11683  004EBA  A4D8               	btfss	status,2,c
 11684  004EBC  D004               	goto	l8746
 11685  004EBE                     u9520:
 11686  004EBE  5017               	movf	fputc@c^0,w,c
 11687  004EC0  ECB7  F02E         	call	_putch
 11688  004EC4  D04A               	goto	l8752
 11689  004EC6                     l8746:
 11690  004EC6  EE20 F009          	lfsr	2,9
 11691  004ECA  5019               	movf	fputc@fp^0,w,c
 11692  004ECC  26D9               	addwf	fsr2l,f,c
 11693  004ECE  501A               	movf	(fputc@fp+1)^0,w,c
 11694  004ED0  22DA               	addwfc	fsr2h,f,c
 11695  004ED2  50DE               	movf	postinc2,w,c
 11696  004ED4  10DE               	iorwf	postinc2,w,c
 11697  004ED6  B4D8               	btfsc	status,2,c
 11698  004ED8  D016               	goto	u9540
 11699  004EDA  EE20 F009          	lfsr	2,9
 11700  004EDE  5019               	movf	fputc@fp^0,w,c
 11701  004EE0  26D9               	addwf	fsr2l,f,c
 11702  004EE2  501A               	movf	(fputc@fp+1)^0,w,c
 11703  004EE4  22DA               	addwfc	fsr2h,f,c
 11704  004EE6  EE10 F003          	lfsr	1,3
 11705  004EEA  5019               	movf	fputc@fp^0,w,c
 11706  004EEC  26E1               	addwf	fsr1l,f,c
 11707  004EEE  501A               	movf	(fputc@fp+1)^0,w,c
 11708  004EF0  22E2               	addwfc	fsr1h,f,c
 11709  004EF2  50DE               	movf	postinc2,w,c
 11710  004EF4  5CE6               	subwf	postinc1,w,c
 11711  004EF6  50E6               	movf	postinc1,w,c
 11712  004EF8  0A80               	xorlw	128
 11713  004EFA  6E1F               	movwf	(??_fputc+4)^0,c
 11714  004EFC  50DE               	movf	postinc2,w,c
 11715  004EFE  0A80               	xorlw	128
 11716  004F00  581F               	subwfb	(??_fputc+4)^0,w,c
 11717  004F02  B0D8               	btfsc	status,0,c
 11718  004F04  D02A               	goto	l8752
 11719  004F06                     u9540:
 11720  004F06  EE20 F003          	lfsr	2,3
 11721  004F0A  5019               	movf	fputc@fp^0,w,c
 11722  004F0C  26D9               	addwf	fsr2l,f,c
 11723  004F0E  501A               	movf	(fputc@fp+1)^0,w,c
 11724  004F10  22DA               	addwfc	fsr2h,f,c
 11725  004F12  006F FF78  F01B    	movff	postinc2,??_fputc
 11726  004F18  006F FF74  F01C    	movff	postdec2,??_fputc+1
 11727  004F1E  0060  F067  FFD9   	movff	fputc@fp,fsr2l
 11728  004F24  0060  F06B  FFDA   	movff	fputc@fp+1,fsr2h
 11729  004F2A  006F FF78  F01D    	movff	postinc2,??_fputc+2
 11730  004F30  006F FF74  F01E    	movff	postdec2,??_fputc+3
 11731  004F36  501B               	movf	??_fputc^0,w,c
 11732  004F38  241D               	addwf	(??_fputc+2)^0,w,c
 11733  004F3A  6ED9               	movwf	fsr2l,c
 11734  004F3C  501C               	movf	(??_fputc+1)^0,w,c
 11735  004F3E  201E               	addwfc	(??_fputc+3)^0,w,c
 11736  004F40  6EDA               	movwf	fsr2h,c
 11737  004F42  0060  F05F  FFDF   	movff	fputc@c,indf2
 11738  004F48  EE20 F003          	lfsr	2,3
 11739  004F4C  5019               	movf	fputc@fp^0,w,c
 11740  004F4E  26D9               	addwf	fsr2l,f,c
 11741  004F50  501A               	movf	(fputc@fp+1)^0,w,c
 11742  004F52  22DA               	addwfc	fsr2h,f,c
 11743  004F54  2ADE               	incf	postinc2,f,c
 11744  004F56  0E00               	movlw	0
 11745  004F58  22DD               	addwfc	postdec2,f,c
 11746  004F5A                     l8752:
 11747  004F5A  C017  F017         	movff	fputc@c,?_fputc
 11748  004F5E  6A18               	clrf	(?_fputc+1)^0,c
 11749  004F60  0012               	return		;funcret
 11750  004F62                     __end_of_fputc:
 11751                           	callstack 0
 11752                           
 11753 ;; *************** function _putch *****************
 11754 ;; Defined at:
 11755 ;;		line 230 in file "mcc_generated_files/uart1.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;  txData          1    wreg     unsigned char 
 11758 ;; Auto vars:     Size  Location     Type
 11759 ;;  txData          1   21[COMRAM] unsigned char 
 11760 ;; Return value:  Size  Location     Type
 11761 ;;                  1    wreg      void 
 11762 ;; Registers used:
 11763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11764 ;; Tracked objects:
 11765 ;;		On entry : 0/0
 11766 ;;		On exit  : 3F/39
 11767 ;;		Unchanged: 0/0
 11768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11773 ;;Total ram usage:        1 bytes
 11774 ;; Hardware stack levels used: 1
 11775 ;; Hardware stack levels required when called: 5
 11776 ;; This function calls:
 11777 ;;		_UART1_Write
 11778 ;; This function is called by:
 11779 ;;		_fputc
 11780 ;; This function uses a non-reentrant model
 11781 ;;
 11782                           
 11783                           	psect	text48
 11784  005D6E                     __ptext48:
 11785                           	callstack 0
 11786  005D6E                     _putch:
 11787                           	callstack 16
 11788                           
 11789                           ;incstack = 0
 11790                           ;putch@txData stored from wreg
 11791  005D6E  6E16               	movwf	putch@txData^0,c
 11792                           
 11793                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
 11794  005D70  5016               	movf	putch@txData^0,w,c
 11795  005D72  EC5B  F02C         	call	_UART1_Write
 11796                           
 11797                           ; BSR set to: 57
 11798  005D76  0012               	return		;funcret
 11799  005D78                     __end_of_putch:
 11800                           	callstack 0
 11801                           
 11802 ;; *************** function _UART1_Write *****************
 11803 ;; Defined at:
 11804 ;;		line 202 in file "mcc_generated_files/uart1.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;  txData          1    wreg     unsigned char 
 11807 ;; Auto vars:     Size  Location     Type
 11808 ;;  txData          1   20[COMRAM] unsigned char 
 11809 ;; Return value:  Size  Location     Type
 11810 ;;                  1    wreg      void 
 11811 ;; Registers used:
 11812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11813 ;; Tracked objects:
 11814 ;;		On entry : 0/0
 11815 ;;		On exit  : 3F/39
 11816 ;;		Unchanged: 0/0
 11817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11822 ;;Total ram usage:        1 bytes
 11823 ;; Hardware stack levels used: 1
 11824 ;; Hardware stack levels required when called: 4
 11825 ;; This function calls:
 11826 ;;		Nothing
 11827 ;; This function is called by:
 11828 ;;		_putch
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           	psect	text49
 11833  0058B6                     __ptext49:
 11834                           	callstack 0
 11835  0058B6                     _UART1_Write:
 11836                           	callstack 16
 11837                           
 11838                           ; BSR set to: 57
 11839                           ;incstack = 0
 11840                           ;UART1_Write@txData stored from wreg
 11841  0058B6  6E15               	movwf	UART1_Write@txData^0,c
 11842  0058B8                     
 11843                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11844                           
 11845                           ;mcc_generated_files/uart1.c: 202: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 203: {;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11846  0058B8  5049               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 11847  0058BA  B4D8               	btfsc	status,2,c
 11848  0058BC  D7FD               	goto	l8720
 11849                           
 11850                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
 11851  0058BE  0139               	movlb	57	; () banked
 11852  0058C0  B993               	btfsc	147,4,b	;volatile
 11853  0058C2  D004               	goto	l616
 11854                           
 11855                           ; BSR set to: 57
 11856                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
 11857  0058C4  0060  F057  FDEA   	movff	UART1_Write@txData,15850	;volatile
 11858                           
 11859                           ;mcc_generated_files/uart1.c: 211:     }
 11860  0058CA  D011               	goto	l8736
 11861  0058CC                     l616:
 11862                           
 11863                           ; BSR set to: 57
 11864                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
 11865  0058CC  9993               	bcf	147,4,b	;volatile
 11866                           
 11867                           ; BSR set to: 57
 11868                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
 11869  0058CE  0E40               	movlw	low _uart1TxBuffer
 11870  0058D0  244B               	addwf	_uart1TxHead^0,w,c	;volatile
 11871  0058D2  6ED9               	movwf	fsr2l,c
 11872  0058D4  6ADA               	clrf	fsr2h,c
 11873  0058D6  0E01               	movlw	high _uart1TxBuffer
 11874  0058D8  22DA               	addwfc	fsr2h,f,c
 11875  0058DA  0060  F057  FFDF   	movff	UART1_Write@txData,indf2
 11876                           
 11877                           ; BSR set to: 57
 11878  0058E0  2A4B               	incf	_uart1TxHead^0,f,c	;volatile
 11879                           
 11880                           ; BSR set to: 57
 11881                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 11882  0058E2  0E3F               	movlw	63
 11883  0058E4  644B               	cpfsgt	_uart1TxHead^0,c
 11884  0058E6  D002               	goto	l8734
 11885                           
 11886                           ; BSR set to: 57
 11887                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
 11888  0058E8  0E00               	movlw	0
 11889  0058EA  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 11890  0058EC                     l8734:
 11891                           
 11892                           ; BSR set to: 57
 11893                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
 11894  0058EC  0649               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 11895  0058EE                     l8736:
 11896                           
 11897                           ; BSR set to: 57
 11898                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
 11899  0058EE  8993               	bsf	147,4,b	;volatile
 11900                           
 11901                           ; BSR set to: 57
 11902  0058F0  0012               	return		;funcret
 11903  0058F2                     __end_of_UART1_Write:
 11904                           	callstack 0
 11905                           
 11906 ;; *************** function ___xxtofl *****************
 11907 ;; Defined at:
 11908 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 11909 ;; Parameters:    Size  Location     Type
 11910 ;;  sign            1    wreg     unsigned char 
 11911 ;;  val             4   20[COMRAM] long 
 11912 ;; Auto vars:     Size  Location     Type
 11913 ;;  sign            1   28[COMRAM] unsigned char 
 11914 ;;  arg             4   30[COMRAM] unsigned long 
 11915 ;;  exp             1   29[COMRAM] unsigned char 
 11916 ;; Return value:  Size  Location     Type
 11917 ;;                  4   20[COMRAM] unsigned char 
 11918 ;; Registers used:
 11919 ;;		wreg, status,2, status,0
 11920 ;; Tracked objects:
 11921 ;;		On entry : 3F/0
 11922 ;;		On exit  : 0/0
 11923 ;;		Unchanged: 0/0
 11924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11926 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11928 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11929 ;;Total ram usage:       14 bytes
 11930 ;; Hardware stack levels used: 1
 11931 ;; Hardware stack levels required when called: 4
 11932 ;; This function calls:
 11933 ;;		Nothing
 11934 ;; This function is called by:
 11935 ;;		_main
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           	psect	text50
 11940  0046E4                     __ptext50:
 11941                           	callstack 0
 11942  0046E4                     ___xxtofl:
 11943                           	callstack 26
 11944                           
 11945                           ; BSR set to: 57
 11946                           ;incstack = 0
 11947                           ;___xxtofl@sign stored from wreg
 11948  0046E4  6E1D               	movwf	___xxtofl@sign^0,c
 11949  0046E6  501D               	movf	___xxtofl@sign^0,w,c
 11950  0046E8  A4D8               	btfss	status,2,c
 11951  0046EA  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 11952  0046EC  D01A               	goto	l1794
 11953  0046EE  C015  F019         	movff	___xxtofl@val,??___xxtofl
 11954  0046F2  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
 11955  0046F6  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
 11956  0046FA  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
 11957  0046FE  1E19               	comf	??___xxtofl^0,f,c
 11958  004700  1E1A               	comf	(??___xxtofl+1)^0,f,c
 11959  004702  1E1B               	comf	(??___xxtofl+2)^0,f,c
 11960  004704  1E1C               	comf	(??___xxtofl+3)^0,f,c
 11961  004706  2A19               	incf	??___xxtofl^0,f,c
 11962  004708  0E00               	movlw	0
 11963  00470A  221A               	addwfc	(??___xxtofl+1)^0,f,c
 11964  00470C  221B               	addwfc	(??___xxtofl+2)^0,f,c
 11965  00470E  221C               	addwfc	(??___xxtofl+3)^0,f,c
 11966  004710  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
 11967  004714  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
 11968  004718  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
 11969  00471C  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
 11970  004720  D008               	goto	l10554
 11971  004722                     l1794:
 11972  004722  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
 11973  004726  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11974  00472A  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11975  00472E  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11976  004732                     l10554:
 11977  004732  5015               	movf	___xxtofl@val^0,w,c
 11978  004734  1016               	iorwf	(___xxtofl@val+1)^0,w,c
 11979  004736  1017               	iorwf	(___xxtofl@val+2)^0,w,c
 11980  004738  1018               	iorwf	(___xxtofl@val+3)^0,w,c
 11981  00473A  A4D8               	btfss	status,2,c
 11982  00473C  D009               	goto	l10560
 11983  00473E  0E00               	movlw	0
 11984  004740  6E15               	movwf	?___xxtofl^0,c
 11985  004742  0E00               	movlw	0
 11986  004744  6E16               	movwf	(?___xxtofl+1)^0,c
 11987  004746  0E00               	movlw	0
 11988  004748  6E17               	movwf	(?___xxtofl+2)^0,c
 11989  00474A  0E00               	movlw	0
 11990  00474C  6E18               	movwf	(?___xxtofl+3)^0,c
 11991  00474E  0012               	return	
 11992  004750                     l10560:
 11993  004750  0E96               	movlw	150
 11994  004752  6E1E               	movwf	___xxtofl@exp^0,c
 11995  004754  D006               	goto	l10564
 11996  004756                     l10562:
 11997  004756  2A1E               	incf	___xxtofl@exp^0,f,c
 11998  004758  90D8               	bcf	status,0,c
 11999  00475A  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 12000  00475C  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 12001  00475E  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 12002  004760  321F               	rrcf	___xxtofl@arg^0,f,c
 12003  004762                     l10564:
 12004  004762  0E00               	movlw	0
 12005  004764  141F               	andwf	___xxtofl@arg^0,w,c
 12006  004766  6E19               	movwf	??___xxtofl^0,c
 12007  004768  0E00               	movlw	0
 12008  00476A  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 12009  00476C  6E1A               	movwf	(??___xxtofl+1)^0,c
 12010  00476E  0E00               	movlw	0
 12011  004770  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 12012  004772  6E1B               	movwf	(??___xxtofl+2)^0,c
 12013  004774  0EFE               	movlw	254
 12014  004776  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 12015  004778  6E1C               	movwf	(??___xxtofl+3)^0,c
 12016  00477A  5019               	movf	??___xxtofl^0,w,c
 12017  00477C  101A               	iorwf	(??___xxtofl+1)^0,w,c
 12018  00477E  101B               	iorwf	(??___xxtofl+2)^0,w,c
 12019  004780  101C               	iorwf	(??___xxtofl+3)^0,w,c
 12020  004782  B4D8               	btfsc	status,2,c
 12021  004784  D00D               	goto	l1801
 12022  004786  D7E7               	goto	l10562
 12023  004788                     l10566:
 12024  004788  2A1E               	incf	___xxtofl@exp^0,f,c
 12025  00478A  0E01               	movlw	1
 12026  00478C  261F               	addwf	___xxtofl@arg^0,f,c
 12027  00478E  0E00               	movlw	0
 12028  004790  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
 12029  004792  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
 12030  004794  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
 12031  004796  90D8               	bcf	status,0,c
 12032  004798  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 12033  00479A  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 12034  00479C  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 12035  00479E  321F               	rrcf	___xxtofl@arg^0,f,c
 12036  0047A0                     l1801:
 12037  0047A0  0E00               	movlw	0
 12038  0047A2  141F               	andwf	___xxtofl@arg^0,w,c
 12039  0047A4  6E19               	movwf	??___xxtofl^0,c
 12040  0047A6  0E00               	movlw	0
 12041  0047A8  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 12042  0047AA  6E1A               	movwf	(??___xxtofl+1)^0,c
 12043  0047AC  0E00               	movlw	0
 12044  0047AE  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 12045  0047B0  6E1B               	movwf	(??___xxtofl+2)^0,c
 12046  0047B2  0EFF               	movlw	255
 12047  0047B4  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 12048  0047B6  6E1C               	movwf	(??___xxtofl+3)^0,c
 12049  0047B8  5019               	movf	??___xxtofl^0,w,c
 12050  0047BA  101A               	iorwf	(??___xxtofl+1)^0,w,c
 12051  0047BC  101B               	iorwf	(??___xxtofl+2)^0,w,c
 12052  0047BE  101C               	iorwf	(??___xxtofl+3)^0,w,c
 12053  0047C0  B4D8               	btfsc	status,2,c
 12054  0047C2  D007               	goto	l10574
 12055  0047C4  D7E1               	goto	l10566
 12056  0047C6                     l10572:
 12057  0047C6  061E               	decf	___xxtofl@exp^0,f,c
 12058  0047C8  90D8               	bcf	status,0,c
 12059  0047CA  361F               	rlcf	___xxtofl@arg^0,f,c
 12060  0047CC  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
 12061  0047CE  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
 12062  0047D0  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
 12063  0047D2                     l10574:
 12064  0047D2  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
 12065  0047D4  D003               	goto	u12320
 12066  0047D6  0E02               	movlw	2
 12067  0047D8  601E               	cpfslt	___xxtofl@exp^0,c
 12068  0047DA  D7F5               	goto	l10572
 12069  0047DC                     u12320:
 12070  0047DC  A01E               	btfss	___xxtofl@exp^0,0,c
 12071  0047DE  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
 12072  0047E0  90D8               	bcf	status,0,c
 12073  0047E2  321E               	rrcf	___xxtofl@exp^0,f,c
 12074  0047E4  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
 12075  0047E8  6A1A               	clrf	(??___xxtofl+1)^0,c
 12076  0047EA  6A1B               	clrf	(??___xxtofl+2)^0,c
 12077  0047EC  6A1C               	clrf	(??___xxtofl+3)^0,c
 12078  0047EE  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
 12079  0047F2  6A1B               	clrf	(??___xxtofl+2)^0,c
 12080  0047F4  6A1A               	clrf	(??___xxtofl+1)^0,c
 12081  0047F6  6A19               	clrf	??___xxtofl^0,c
 12082  0047F8  5019               	movf	??___xxtofl^0,w,c
 12083  0047FA  121F               	iorwf	___xxtofl@arg^0,f,c
 12084  0047FC  501A               	movf	(??___xxtofl+1)^0,w,c
 12085  0047FE  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
 12086  004800  501B               	movf	(??___xxtofl+2)^0,w,c
 12087  004802  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
 12088  004804  501C               	movf	(??___xxtofl+3)^0,w,c
 12089  004806  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
 12090  004808  501D               	movf	___xxtofl@sign^0,w,c
 12091  00480A  A4D8               	btfss	status,2,c
 12092  00480C  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 12093  00480E  D001               	goto	l10590
 12094  004810  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
 12095  004812                     l10590:
 12096  004812  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
 12097  004816  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
 12098  00481A  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
 12099  00481E  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
 12100  004822  0012               	return		;funcret
 12101  004824                     __end_of___xxtofl:
 12102                           	callstack 0
 12103                           
 12104 ;; *************** function _SYSTEM_Initialize *****************
 12105 ;; Defined at:
 12106 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;		None
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;		None
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1    wreg      void 
 12113 ;; Registers used:
 12114 ;;		wreg, status,2, status,0, cstack
 12115 ;; Tracked objects:
 12116 ;;		On entry : 3F/0
 12117 ;;		On exit  : 3F/3D
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12124 ;;Total ram usage:        0 bytes
 12125 ;; Hardware stack levels used: 1
 12126 ;; Hardware stack levels required when called: 6
 12127 ;; This function calls:
 12128 ;;		_ADCC_Initialize
 12129 ;;		_DAC1_Initialize
 12130 ;;		_INTERRUPT_Initialize
 12131 ;;		_OSCILLATOR_Initialize
 12132 ;;		_PIN_MANAGER_Initialize
 12133 ;;		_PMD_Initialize
 12134 ;;		_SPI1_Initialize
 12135 ;;		_TMR5_Initialize
 12136 ;;		_TMR6_Initialize
 12137 ;;		_UART1_Initialize
 12138 ;; This function is called by:
 12139 ;;		_main
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text51
 12144  005AEC                     __ptext51:
 12145                           	callstack 0
 12146  005AEC                     _SYSTEM_Initialize:
 12147                           	callstack 24
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12151                           
 12152                           ;incstack = 0
 12153  005AEC  EC9A  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12154                           
 12155                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12156  005AF0  ECE4  F02D         	call	_PMD_Initialize	;wreg free
 12157                           
 12158                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12159  005AF4  ECE0  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 12160                           
 12161                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12162  005AF8  EC15  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 12163                           
 12164                           ; BSR set to: 57
 12165                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
 12166  005AFC  EC4B  F02D         	call	_TMR6_Initialize	;wreg free
 12167                           
 12168                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 12169  005B00  ECB7  F029         	call	_ADCC_Initialize	;wreg free
 12170                           
 12171                           ;mcc_generated_files/mcc.c: 58:     DAC1_Initialize();
 12172  005B04  ECB1  F02E         	call	_DAC1_Initialize	;wreg free
 12173                           
 12174                           ; BSR set to: 62
 12175                           ;mcc_generated_files/mcc.c: 59:     TMR5_Initialize();
 12176  005B08  EC53  F02B         	call	_TMR5_Initialize	;wreg free
 12177                           
 12178                           ;mcc_generated_files/mcc.c: 60:     UART1_Initialize();
 12179  005B0C  ECFC  F026         	call	_UART1_Initialize	;wreg free
 12180                           
 12181                           ;mcc_generated_files/mcc.c: 61:     SPI1_Initialize();
 12182  005B10  EC23  F02E         	call	_SPI1_Initialize	;wreg free
 12183                           
 12184                           ; BSR set to: 61
 12185  005B14  0012               	return		;funcret
 12186  005B16                     __end_of_SYSTEM_Initialize:
 12187                           	callstack 0
 12188                           
 12189 ;; *************** function _UART1_Initialize *****************
 12190 ;; Defined at:
 12191 ;;		line 87 in file "mcc_generated_files/uart1.c"
 12192 ;; Parameters:    Size  Location     Type
 12193 ;;		None
 12194 ;; Auto vars:     Size  Location     Type
 12195 ;;		None
 12196 ;; Return value:  Size  Location     Type
 12197 ;;                  1    wreg      void 
 12198 ;; Registers used:
 12199 ;;		wreg, status,2, status,0, cstack
 12200 ;; Tracked objects:
 12201 ;;		On entry : 3B/3D
 12202 ;;		On exit  : 3F/39
 12203 ;;		Unchanged: 0/0
 12204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12209 ;;Total ram usage:        0 bytes
 12210 ;; Hardware stack levels used: 1
 12211 ;; Hardware stack levels required when called: 5
 12212 ;; This function calls:
 12213 ;;		_UART1_SetErrorHandler
 12214 ;;		_UART1_SetFramingErrorHandler
 12215 ;;		_UART1_SetOverrunErrorHandler
 12216 ;;		_UART1_SetRxInterruptHandler
 12217 ;;		_UART1_SetTxInterruptHandler
 12218 ;; This function is called by:
 12219 ;;		_SYSTEM_Initialize
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223                           	psect	text52
 12224  004DF8                     __ptext52:
 12225                           	callstack 0
 12226  004DF8                     _UART1_Initialize:
 12227                           	callstack 24
 12228                           
 12229                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 12230                           
 12231                           ; BSR set to: 61
 12232                           ;incstack = 0
 12233  004DF8  0139               	movlb	57	; () banked
 12234  004DFA  9793               	bcf	147,3,b	;volatile
 12235                           
 12236                           ; BSR set to: 57
 12237                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12238  004DFC  0E10               	movlw	low _UART1_Receive_ISR
 12239  004DFE  6E15               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 12240  004E00  0E50               	movlw	high _UART1_Receive_ISR
 12241  004E02  6E16               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 12242  004E04  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12243  004E06  6E17               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
 12244  004E08  EC80  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12245                           
 12246                           ; BSR set to: 57
 12247                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 12248  004E0C  9993               	bcf	147,4,b	;volatile
 12249                           
 12250                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12251  004E0E  0E68               	movlw	low _UART1_Transmit_ISR
 12252  004E10  6E15               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 12253  004E12  0E5A               	movlw	high _UART1_Transmit_ISR
 12254  004E14  6E16               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 12255  004E16  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12256  004E18  6E17               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
 12257  004E1A  EC79  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12258                           
 12259                           ; BSR set to: 57
 12260                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 12261  004E1E  0E00               	movlw	0
 12262  004E20  013D               	movlb	61	; () banked
 12263  004E22  6FEC               	movwf	236,b	;volatile
 12264                           
 12265                           ; BSR set to: 61
 12266                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 12267  004E24  0E00               	movlw	0
 12268  004E26  6FED               	movwf	237,b	;volatile
 12269                           
 12270                           ; BSR set to: 61
 12271                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 12272  004E28  0E00               	movlw	0
 12273  004E2A  6FEE               	movwf	238,b	;volatile
 12274                           
 12275                           ; BSR set to: 61
 12276                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 12277  004E2C  0E00               	movlw	0
 12278  004E2E  6FEF               	movwf	239,b	;volatile
 12279                           
 12280                           ; BSR set to: 61
 12281                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 12282  004E30  0E00               	movlw	0
 12283  004E32  6FF0               	movwf	240,b	;volatile
 12284                           
 12285                           ; BSR set to: 61
 12286                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 12287  004E34  0E00               	movlw	0
 12288  004E36  6FF1               	movwf	241,b	;volatile
 12289                           
 12290                           ; BSR set to: 61
 12291                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 12292  004E38  0EB0               	movlw	176
 12293  004E3A  6FF2               	movwf	242,b	;volatile
 12294                           
 12295                           ; BSR set to: 61
 12296                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 12297  004E3C  0E80               	movlw	128
 12298  004E3E  6FF3               	movwf	243,b	;volatile
 12299                           
 12300                           ; BSR set to: 61
 12301                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 12302  004E40  0E00               	movlw	0
 12303  004E42  6FF4               	movwf	244,b	;volatile
 12304                           
 12305                           ; BSR set to: 61
 12306                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 12307  004E44  0E8A               	movlw	138
 12308  004E46  6FF5               	movwf	245,b	;volatile
 12309                           
 12310                           ; BSR set to: 61
 12311                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 12312  004E48  0E00               	movlw	0
 12313  004E4A  6FF6               	movwf	246,b	;volatile
 12314                           
 12315                           ; BSR set to: 61
 12316                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 12317  004E4C  0E00               	movlw	0
 12318  004E4E  6FF7               	movwf	247,b	;volatile
 12319                           
 12320                           ; BSR set to: 61
 12321                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 12322  004E50  0E00               	movlw	0
 12323  004E52  6FF8               	movwf	248,b	;volatile
 12324                           
 12325                           ; BSR set to: 61
 12326                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 12327  004E54  0E00               	movlw	0
 12328  004E56  6FF9               	movwf	249,b	;volatile
 12329                           
 12330                           ; BSR set to: 61
 12331                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 12332  004E58  0E00               	movlw	0
 12333  004E5A  6FFA               	movwf	250,b	;volatile
 12334                           
 12335                           ; BSR set to: 61
 12336                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 12337  004E5C  0E98               	movlw	low _UART1_DefaultFramingErrorHandler
 12338  004E5E  6E15               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 12339  004E60  0E5D               	movlw	high _UART1_DefaultFramingErrorHandler
 12340  004E62  6E16               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 12341  004E64  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 12342  004E66  6E17               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
 12343  004E68  EC8E  F02E         	call	_UART1_SetFramingErrorHandler	;wreg free
 12344                           
 12345                           ; BSR set to: 61
 12346                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 12347  004E6C  0E96               	movlw	low _UART1_DefaultOverrunErrorHandler
 12348  004E6E  6E15               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 12349  004E70  0E5D               	movlw	high _UART1_DefaultOverrunErrorHandler
 12350  004E72  6E16               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 12351  004E74  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 12352  004E76  6E17               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
 12353  004E78  EC87  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 12354                           
 12355                           ; BSR set to: 61
 12356                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 12357  004E7C  0E88               	movlw	low _UART1_DefaultErrorHandler
 12358  004E7E  6E15               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 12359  004E80  0E5D               	movlw	high _UART1_DefaultErrorHandler
 12360  004E82  6E16               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 12361  004E84  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 12362  004E86  6E17               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
 12363  004E88  EC95  F02E         	call	_UART1_SetErrorHandler	;wreg free
 12364                           
 12365                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 12366  004E8C  0E00               	movlw	0
 12367  004E8E  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 12368                           
 12369                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 12370  004E90  0E00               	movlw	0
 12371  004E92  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 12372                           
 12373                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 12374  004E94  0E00               	movlw	0
 12375  004E96  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 12376                           
 12377                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12378  004E98  0E40               	movlw	64
 12379  004E9A  6E49               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 12380                           
 12381                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 12382  004E9C  0E00               	movlw	0
 12383  004E9E  6E48               	movwf	_uart1RxHead^0,c	;volatile
 12384                           
 12385                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 12386  004EA0  0E00               	movlw	0
 12387  004EA2  6E47               	movwf	_uart1RxTail^0,c	;volatile
 12388                           
 12389                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 12390  004EA4  0E00               	movlw	0
 12391  004EA6  6E46               	movwf	_uart1RxCount^0,c	;volatile
 12392                           
 12393                           ; BSR set to: 61
 12394                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 12395  004EA8  0139               	movlb	57	; () banked
 12396  004EAA  8793               	bsf	147,3,b	;volatile
 12397                           
 12398                           ; BSR set to: 57
 12399  004EAC  0012               	return		;funcret
 12400  004EAE                     __end_of_UART1_Initialize:
 12401                           	callstack 0
 12402                           
 12403 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12404 ;; Defined at:
 12405 ;;		line 333 in file "mcc_generated_files/uart1.c"
 12406 ;; Parameters:    Size  Location     Type
 12407 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12408 ;;		 -> UART1_Transmit_ISR(1), 
 12409 ;; Auto vars:     Size  Location     Type
 12410 ;;		None
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      void 
 12413 ;; Registers used:
 12414 ;;		wreg, status,2, status,0
 12415 ;; Tracked objects:
 12416 ;;		On entry : 3F/39
 12417 ;;		On exit  : 3F/39
 12418 ;;		Unchanged: 3E/0
 12419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12420 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12423 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12424 ;;Total ram usage:        3 bytes
 12425 ;; Hardware stack levels used: 1
 12426 ;; Hardware stack levels required when called: 4
 12427 ;; This function calls:
 12428 ;;		Nothing
 12429 ;; This function is called by:
 12430 ;;		_UART1_Initialize
 12431 ;; This function uses a non-reentrant model
 12432 ;;
 12433                           
 12434                           	psect	text53
 12435  005CF2                     __ptext53:
 12436                           	callstack 0
 12437  005CF2                     _UART1_SetTxInterruptHandler:
 12438                           	callstack 24
 12439                           
 12440                           ; BSR set to: 57
 12441                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 12442                           
 12443                           ; BSR set to: 57
 12444                           ;incstack = 0
 12445  005CF2  C015  F0EF         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 12446  005CF6  C016  F0F0         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 12447  005CFA  C017  F0F1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 12448                           
 12449                           ; BSR set to: 57
 12450  005CFE  0012               	return		;funcret
 12451  005D00                     __end_of_UART1_SetTxInterruptHandler:
 12452                           	callstack 0
 12453                           
 12454 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12455 ;; Defined at:
 12456 ;;		line 329 in file "mcc_generated_files/uart1.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12459 ;;		 -> UART1_Receive_ISR(1), 
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;		None
 12462 ;; Return value:  Size  Location     Type
 12463 ;;                  1    wreg      void 
 12464 ;; Registers used:
 12465 ;;		wreg, status,2, status,0
 12466 ;; Tracked objects:
 12467 ;;		On entry : 3F/39
 12468 ;;		On exit  : 3F/39
 12469 ;;		Unchanged: 3E/0
 12470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12471 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12474 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12475 ;;Total ram usage:        3 bytes
 12476 ;; Hardware stack levels used: 1
 12477 ;; Hardware stack levels required when called: 4
 12478 ;; This function calls:
 12479 ;;		Nothing
 12480 ;; This function is called by:
 12481 ;;		_UART1_Initialize
 12482 ;; This function uses a non-reentrant model
 12483 ;;
 12484                           
 12485                           	psect	text54
 12486  005D00                     __ptext54:
 12487                           	callstack 0
 12488  005D00                     _UART1_SetRxInterruptHandler:
 12489                           	callstack 24
 12490                           
 12491                           ; BSR set to: 57
 12492                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 12493                           
 12494                           ; BSR set to: 57
 12495                           ;incstack = 0
 12496  005D00  C015  F0F2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 12497  005D04  C016  F0F3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 12498  005D08  C017  F0F4         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 12499                           
 12500                           ; BSR set to: 57
 12501  005D0C  0012               	return		;funcret
 12502  005D0E                     __end_of_UART1_SetRxInterruptHandler:
 12503                           	callstack 0
 12504                           
 12505 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 12506 ;; Defined at:
 12507 ;;		line 319 in file "mcc_generated_files/uart1.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12510 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 12511 ;; Auto vars:     Size  Location     Type
 12512 ;;		None
 12513 ;; Return value:  Size  Location     Type
 12514 ;;                  1    wreg      void 
 12515 ;; Registers used:
 12516 ;;		wreg, status,2, status,0
 12517 ;; Tracked objects:
 12518 ;;		On entry : 3F/3D
 12519 ;;		On exit  : 3F/3D
 12520 ;;		Unchanged: 3E/0
 12521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12522 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12525 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12526 ;;Total ram usage:        3 bytes
 12527 ;; Hardware stack levels used: 1
 12528 ;; Hardware stack levels required when called: 4
 12529 ;; This function calls:
 12530 ;;		Nothing
 12531 ;; This function is called by:
 12532 ;;		_UART1_Initialize
 12533 ;; This function uses a non-reentrant model
 12534 ;;
 12535                           
 12536                           	psect	text55
 12537  005D0E                     __ptext55:
 12538                           	callstack 0
 12539  005D0E                     _UART1_SetOverrunErrorHandler:
 12540                           	callstack 24
 12541                           
 12542                           ; BSR set to: 61
 12543                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 12544                           
 12545                           ; BSR set to: 57
 12546                           ;incstack = 0
 12547  005D0E  C015  F0E3         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 12548  005D12  C016  F0E4         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 12549  005D16  C017  F0E5         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 12550                           
 12551                           ; BSR set to: 61
 12552  005D1A  0012               	return		;funcret
 12553  005D1C                     __end_of_UART1_SetOverrunErrorHandler:
 12554                           	callstack 0
 12555                           
 12556 ;; *************** function _UART1_SetFramingErrorHandler *****************
 12557 ;; Defined at:
 12558 ;;		line 315 in file "mcc_generated_files/uart1.c"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12561 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;		None
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      void 
 12566 ;; Registers used:
 12567 ;;		wreg, status,2, status,0
 12568 ;; Tracked objects:
 12569 ;;		On entry : 3F/3D
 12570 ;;		On exit  : 3F/3D
 12571 ;;		Unchanged: 3E/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12573 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12576 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12577 ;;Total ram usage:        3 bytes
 12578 ;; Hardware stack levels used: 1
 12579 ;; Hardware stack levels required when called: 4
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_UART1_Initialize
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           	psect	text56
 12588  005D1C                     __ptext56:
 12589                           	callstack 0
 12590  005D1C                     _UART1_SetFramingErrorHandler:
 12591                           	callstack 24
 12592                           
 12593                           ; BSR set to: 61
 12594                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 12595                           
 12596                           ; BSR set to: 61
 12597                           ;incstack = 0
 12598  005D1C  C015  F0E6         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 12599  005D20  C016  F0E7         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 12600  005D24  C017  F0E8         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 12601                           
 12602                           ; BSR set to: 61
 12603  005D28  0012               	return		;funcret
 12604  005D2A                     __end_of_UART1_SetFramingErrorHandler:
 12605                           	callstack 0
 12606                           
 12607 ;; *************** function _UART1_SetErrorHandler *****************
 12608 ;; Defined at:
 12609 ;;		line 323 in file "mcc_generated_files/uart1.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12612 ;;		 -> UART1_DefaultErrorHandler(1), 
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;		None
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  1    wreg      void 
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, status,0
 12619 ;; Tracked objects:
 12620 ;;		On entry : 3F/3D
 12621 ;;		On exit  : 3F/3D
 12622 ;;		Unchanged: 3E/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12624 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12627 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12628 ;;Total ram usage:        3 bytes
 12629 ;; Hardware stack levels used: 1
 12630 ;; Hardware stack levels required when called: 4
 12631 ;; This function calls:
 12632 ;;		Nothing
 12633 ;; This function is called by:
 12634 ;;		_UART1_Initialize
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638                           	psect	text57
 12639  005D2A                     __ptext57:
 12640                           	callstack 0
 12641  005D2A                     _UART1_SetErrorHandler:
 12642                           	callstack 24
 12643                           
 12644                           ; BSR set to: 61
 12645                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 12646                           
 12647                           ; BSR set to: 61
 12648                           ;incstack = 0
 12649  005D2A  C015  F0E0         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 12650  005D2E  C016  F0E1         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 12651  005D32  C017  F0E2         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 12652                           
 12653                           ; BSR set to: 61
 12654  005D36  0012               	return		;funcret
 12655  005D38                     __end_of_UART1_SetErrorHandler:
 12656                           	callstack 0
 12657                           
 12658 ;; *************** function _TMR6_Initialize *****************
 12659 ;; Defined at:
 12660 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;		None
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;		None
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      void 
 12667 ;; Registers used:
 12668 ;;		wreg, status,2, status,0, cstack
 12669 ;; Tracked objects:
 12670 ;;		On entry : 3F/39
 12671 ;;		On exit  : 3B/39
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12678 ;;Total ram usage:        0 bytes
 12679 ;; Hardware stack levels used: 1
 12680 ;; Hardware stack levels required when called: 5
 12681 ;; This function calls:
 12682 ;;		_TMR6_SetInterruptHandler
 12683 ;; This function is called by:
 12684 ;;		_SYSTEM_Initialize
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688                           	psect	text58
 12689  005A96                     __ptext58:
 12690                           	callstack 0
 12691  005A96                     _TMR6_Initialize:
 12692                           	callstack 24
 12693                           
 12694                           ; BSR set to: 57
 12695                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 12696                           
 12697                           ; BSR set to: 61
 12698                           ;incstack = 0
 12699  005A96  0E01               	movlw	1
 12700  005A98  6E96               	movwf	150,c	;volatile
 12701                           
 12702                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 12703  005A9A  0E20               	movlw	32
 12704  005A9C  6E95               	movwf	149,c	;volatile
 12705                           
 12706                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 12707  005A9E  0E00               	movlw	0
 12708  005AA0  6E97               	movwf	151,c	;volatile
 12709                           
 12710                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 12711  005AA2  0E4D               	movlw	77
 12712  005AA4  6E93               	movwf	147,c	;volatile
 12713                           
 12714                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 12715  005AA6  0E00               	movlw	0
 12716  005AA8  6E92               	movwf	146,c	;volatile
 12717                           
 12718                           ; BSR set to: 57
 12719                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 12720  005AAA  91A9               	bcf	169,0,b	;volatile
 12721                           
 12722                           ; BSR set to: 57
 12723                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 12724  005AAC  8199               	bsf	153,0,b	;volatile
 12725                           
 12726                           ; BSR set to: 57
 12727                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 12728  005AAE  0E92               	movlw	low _TMR6_DefaultInterruptHandler
 12729  005AB0  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
 12730  005AB2  0E5D               	movlw	high _TMR6_DefaultInterruptHandler
 12731  005AB4  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
 12732  005AB6  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12733  005AB8  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
 12734  005ABA  EC9C  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12735                           
 12736                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 12737  005ABE  6894               	setf	148,c	;volatile
 12738  005AC0  0012               	return		;funcret
 12739  005AC2                     __end_of_TMR6_Initialize:
 12740                           	callstack 0
 12741                           
 12742 ;; *************** function _TMR6_SetInterruptHandler *****************
 12743 ;; Defined at:
 12744 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 12745 ;; Parameters:    Size  Location     Type
 12746 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12747 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 12748 ;; Auto vars:     Size  Location     Type
 12749 ;;		None
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  1    wreg      void 
 12752 ;; Registers used:
 12753 ;;		wreg, status,2, status,0
 12754 ;; Tracked objects:
 12755 ;;		On entry : 3B/3D
 12756 ;;		On exit  : 3B/39
 12757 ;;		Unchanged: 3A/0
 12758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12759 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12762 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12763 ;;Total ram usage:        3 bytes
 12764 ;; Hardware stack levels used: 1
 12765 ;; Hardware stack levels required when called: 4
 12766 ;; This function calls:
 12767 ;;		Nothing
 12768 ;; This function is called by:
 12769 ;;		_TMR6_Initialize
 12770 ;;		_main
 12771 ;; This function uses a non-reentrant model
 12772 ;;
 12773                           
 12774                           	psect	text59
 12775  005D38                     __ptext59:
 12776                           	callstack 0
 12777  005D38                     _TMR6_SetInterruptHandler:
 12778                           	callstack 26
 12779                           
 12780                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 12781                           
 12782                           ;incstack = 0
 12783  005D38  C015  F0E9         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 12784  005D3C  C016  F0EA         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 12785  005D40  C017  F0EB         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 12786  005D44  0012               	return		;funcret
 12787  005D46                     __end_of_TMR6_SetInterruptHandler:
 12788                           	callstack 0
 12789                           
 12790 ;; *************** function _TMR5_Initialize *****************
 12791 ;; Defined at:
 12792 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;		None
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;		None
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  1    wreg      void 
 12799 ;; Registers used:
 12800 ;;		wreg, status,2, status,0, cstack
 12801 ;; Tracked objects:
 12802 ;;		On entry : 3F/3E
 12803 ;;		On exit  : 3B/39
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12810 ;;Total ram usage:        2 bytes
 12811 ;; Hardware stack levels used: 1
 12812 ;; Hardware stack levels required when called: 5
 12813 ;; This function calls:
 12814 ;;		_TMR5_SetInterruptHandler
 12815 ;; This function is called by:
 12816 ;;		_SYSTEM_Initialize
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820                           	psect	text60
 12821  0056A6                     __ptext60:
 12822                           	callstack 0
 12823  0056A6                     _TMR5_Initialize:
 12824                           	callstack 24
 12825                           
 12826                           ; BSR set to: 62
 12827                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 12828                           
 12829                           ;incstack = 0
 12830  0056A6  0E00               	movlw	0
 12831  0056A8  6E9B               	movwf	155,c	;volatile
 12832                           
 12833                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 12834  0056AA  0E00               	movlw	0
 12835  0056AC  6E9C               	movwf	156,c	;volatile
 12836                           
 12837                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 12838  0056AE  0E02               	movlw	2
 12839  0056B0  6E9D               	movwf	157,c	;volatile
 12840                           
 12841                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 12842  0056B2  0E83               	movlw	131
 12843  0056B4  6E99               	movwf	153,c	;volatile
 12844                           
 12845                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 12846  0056B6  0E00               	movlw	0
 12847  0056B8  6E98               	movwf	152,c	;volatile
 12848                           
 12849                           ; BSR set to: 62
 12850                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 12851  0056BA  0139               	movlb	57	; () banked
 12852  0056BC  9DA8               	bcf	168,6,b	;volatile
 12853                           
 12854                           ; BSR set to: 57
 12855                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 12856  0056BE  5098               	movf	152,w,c	;volatile
 12857  0056C0  006F FE64  F018    	movff	16281,??_TMR5_Initialize	;volatile
 12858  0056C6  6A19               	clrf	(??_TMR5_Initialize+1)^0,c
 12859  0056C8  C018  F019         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 12860  0056CC  6A18               	clrf	??_TMR5_Initialize^0,c
 12861  0056CE  1018               	iorwf	??_TMR5_Initialize^0,w,c
 12862  0056D0  6E3F               	movwf	_timer5ReloadVal^0,c	;volatile
 12863  0056D2  5019               	movf	(??_TMR5_Initialize+1)^0,w,c
 12864  0056D4  6E40               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 12865                           
 12866                           ; BSR set to: 57
 12867                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 12868  0056D6  8D98               	bsf	152,6,b	;volatile
 12869                           
 12870                           ; BSR set to: 57
 12871                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 12872  0056D8  0E9A               	movlw	low _TMR5_DefaultInterruptHandler
 12873  0056DA  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
 12874  0056DC  0E5D               	movlw	high _TMR5_DefaultInterruptHandler
 12875  0056DE  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
 12876  0056E0  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12877  0056E2  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
 12878  0056E4  ECA3  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 12879                           
 12880                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 12881  0056E8  0E01               	movlw	1
 12882  0056EA  6E9A               	movwf	154,c	;volatile
 12883  0056EC  0012               	return		;funcret
 12884  0056EE                     __end_of_TMR5_Initialize:
 12885                           	callstack 0
 12886                           
 12887 ;; *************** function _TMR5_SetInterruptHandler *****************
 12888 ;; Defined at:
 12889 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12892 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;		None
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		wreg, status,2, status,0
 12899 ;; Tracked objects:
 12900 ;;		On entry : 3B/3D
 12901 ;;		On exit  : 3B/39
 12902 ;;		Unchanged: 3A/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12904 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12907 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12908 ;;Total ram usage:        3 bytes
 12909 ;; Hardware stack levels used: 1
 12910 ;; Hardware stack levels required when called: 4
 12911 ;; This function calls:
 12912 ;;		Nothing
 12913 ;; This function is called by:
 12914 ;;		_TMR5_Initialize
 12915 ;;		_main
 12916 ;; This function uses a non-reentrant model
 12917 ;;
 12918                           
 12919                           	psect	text61
 12920  005D46                     __ptext61:
 12921                           	callstack 0
 12922  005D46                     _TMR5_SetInterruptHandler:
 12923                           	callstack 26
 12924                           
 12925                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 12926                           
 12927                           ;incstack = 0
 12928  005D46  C015  F0DD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 12929  005D4A  C016  F0DE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 12930  005D4E  C017  F0DF         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 12931  005D52  0012               	return		;funcret
 12932  005D54                     __end_of_TMR5_SetInterruptHandler:
 12933                           	callstack 0
 12934                           
 12935 ;; *************** function _SPI1_Initialize *****************
 12936 ;; Defined at:
 12937 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12938 ;; Parameters:    Size  Location     Type
 12939 ;;		None
 12940 ;; Auto vars:     Size  Location     Type
 12941 ;;		None
 12942 ;; Return value:  Size  Location     Type
 12943 ;;                  1    wreg      void 
 12944 ;; Registers used:
 12945 ;;		wreg, status,2
 12946 ;; Tracked objects:
 12947 ;;		On entry : 3F/39
 12948 ;;		On exit  : 3F/3D
 12949 ;;		Unchanged: 0/0
 12950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12955 ;;Total ram usage:        0 bytes
 12956 ;; Hardware stack levels used: 1
 12957 ;; Hardware stack levels required when called: 4
 12958 ;; This function calls:
 12959 ;;		Nothing
 12960 ;; This function is called by:
 12961 ;;		_SYSTEM_Initialize
 12962 ;; This function uses a non-reentrant model
 12963 ;;
 12964                           
 12965                           	psect	text62
 12966  005C46                     __ptext62:
 12967                           	callstack 0
 12968  005C46                     _SPI1_Initialize:
 12969                           	callstack 25
 12970                           
 12971                           ; BSR set to: 57
 12972                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 12973                           
 12974                           ;incstack = 0
 12975  005C46  0E02               	movlw	2
 12976  005C48  013D               	movlb	61	; () banked
 12977  005C4A  6F14               	movwf	20,b	;volatile
 12978                           
 12979                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 12980  005C4C  0E40               	movlw	64
 12981  005C4E  6F15               	movwf	21,b	;volatile
 12982                           
 12983                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 12984  005C50  0E00               	movlw	0
 12985  005C52  6F16               	movwf	22,b	;volatile
 12986                           
 12987                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 12988  005C54  0E00               	movlw	0
 12989  005C56  6F1C               	movwf	28,b	;volatile
 12990                           
 12991                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x08;
 12992  005C58  0E08               	movlw	8
 12993  005C5A  6F19               	movwf	25,b	;volatile
 12994                           
 12995                           ; BSR set to: 61
 12996                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 12997  005C5C  96C4               	bcf	196,3,c	;volatile
 12998                           
 12999                           ; BSR set to: 61
 13000  005C5E  0012               	return		;funcret
 13001  005C60                     __end_of_SPI1_Initialize:
 13002                           	callstack 0
 13003                           
 13004 ;; *************** function _PMD_Initialize *****************
 13005 ;; Defined at:
 13006 ;;		line 82 in file "mcc_generated_files/mcc.c"
 13007 ;; Parameters:    Size  Location     Type
 13008 ;;		None
 13009 ;; Auto vars:     Size  Location     Type
 13010 ;;		None
 13011 ;; Return value:  Size  Location     Type
 13012 ;;                  1    wreg      void 
 13013 ;; Registers used:
 13014 ;;		wreg, status,2
 13015 ;; Tracked objects:
 13016 ;;		On entry : 3F/39
 13017 ;;		On exit  : 3F/39
 13018 ;;		Unchanged: 0/0
 13019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13024 ;;Total ram usage:        0 bytes
 13025 ;; Hardware stack levels used: 1
 13026 ;; Hardware stack levels required when called: 4
 13027 ;; This function calls:
 13028 ;;		Nothing
 13029 ;; This function is called by:
 13030 ;;		_SYSTEM_Initialize
 13031 ;; This function uses a non-reentrant model
 13032 ;;
 13033                           
 13034                           	psect	text63
 13035  005BC8                     __ptext63:
 13036                           	callstack 0
 13037  005BC8                     _PMD_Initialize:
 13038                           	callstack 25
 13039                           
 13040                           ; BSR set to: 57
 13041                           ;mcc_generated_files/mcc.c: 85:     PMD0 = 0x00;
 13042                           
 13043                           ; BSR set to: 61
 13044                           ;incstack = 0
 13045  005BC8  0E00               	movlw	0
 13046  005BCA  6FC0               	movwf	192,b	;volatile
 13047                           
 13048                           ;mcc_generated_files/mcc.c: 87:     PMD1 = 0x00;
 13049  005BCC  0E00               	movlw	0
 13050  005BCE  6FC1               	movwf	193,b	;volatile
 13051                           
 13052                           ;mcc_generated_files/mcc.c: 89:     PMD2 = 0x00;
 13053  005BD0  0E00               	movlw	0
 13054  005BD2  6FC2               	movwf	194,b	;volatile
 13055                           
 13056                           ;mcc_generated_files/mcc.c: 91:     PMD3 = 0x00;
 13057  005BD4  0E00               	movlw	0
 13058  005BD6  6FC3               	movwf	195,b	;volatile
 13059                           
 13060                           ;mcc_generated_files/mcc.c: 93:     PMD4 = 0x00;
 13061  005BD8  0E00               	movlw	0
 13062  005BDA  6FC4               	movwf	196,b	;volatile
 13063                           
 13064                           ;mcc_generated_files/mcc.c: 95:     PMD5 = 0x00;
 13065  005BDC  0E00               	movlw	0
 13066  005BDE  6FC5               	movwf	197,b	;volatile
 13067                           
 13068                           ;mcc_generated_files/mcc.c: 97:     PMD6 = 0x00;
 13069  005BE0  0E00               	movlw	0
 13070  005BE2  6FC6               	movwf	198,b	;volatile
 13071                           
 13072                           ;mcc_generated_files/mcc.c: 99:     PMD7 = 0x00;
 13073  005BE4  0E00               	movlw	0
 13074  005BE6  6FC7               	movwf	199,b	;volatile
 13075                           
 13076                           ; BSR set to: 57
 13077  005BE8  0012               	return		;funcret
 13078  005BEA                     __end_of_PMD_Initialize:
 13079                           	callstack 0
 13080                           
 13081 ;; *************** function _PIN_MANAGER_Initialize *****************
 13082 ;; Defined at:
 13083 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;		None
 13086 ;; Auto vars:     Size  Location     Type
 13087 ;;		None
 13088 ;; Return value:  Size  Location     Type
 13089 ;;                  1    wreg      void 
 13090 ;; Registers used:
 13091 ;;		wreg, status,2
 13092 ;; Tracked objects:
 13093 ;;		On entry : 3F/39
 13094 ;;		On exit  : 3F/3A
 13095 ;;		Unchanged: 0/0
 13096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13101 ;;Total ram usage:        0 bytes
 13102 ;; Hardware stack levels used: 1
 13103 ;; Hardware stack levels required when called: 4
 13104 ;; This function calls:
 13105 ;;		Nothing
 13106 ;; This function is called by:
 13107 ;;		_SYSTEM_Initialize
 13108 ;; This function uses a non-reentrant model
 13109 ;;
 13110                           
 13111                           	psect	text64
 13112  004BC0                     __ptext64:
 13113                           	callstack 0
 13114  004BC0                     _PIN_MANAGER_Initialize:
 13115                           	callstack 25
 13116                           
 13117                           ; BSR set to: 57
 13118                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13119                           
 13120                           ; BSR set to: 57
 13121                           ;incstack = 0
 13122  004BC0  0E00               	movlw	0
 13123  004BC2  6EBE               	movwf	190,c	;volatile
 13124                           
 13125                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 13126  004BC4  0E11               	movlw	17
 13127  004BC6  6EBD               	movwf	189,c	;volatile
 13128                           
 13129                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 13130  004BC8  0E20               	movlw	32
 13131  004BCA  6EBA               	movwf	186,c	;volatile
 13132                           
 13133                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 13134  004BCC  0E00               	movlw	0
 13135  004BCE  6EBF               	movwf	191,c	;volatile
 13136                           
 13137                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 13138  004BD0  0E00               	movlw	0
 13139  004BD2  6EBB               	movwf	187,c	;volatile
 13140                           
 13141                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
 13142  004BD4  0E00               	movlw	0
 13143  004BD6  6EBC               	movwf	188,c	;volatile
 13144                           
 13145                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 13146  004BD8  0E02               	movlw	2
 13147  004BDA  6EC6               	movwf	198,c	;volatile
 13148                           
 13149                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0F;
 13150  004BDC  0E0F               	movlw	15
 13151  004BDE  6EC7               	movwf	199,c	;volatile
 13152                           
 13153                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 13154  004BE0  0EDF               	movlw	223
 13155  004BE2  6EC2               	movwf	194,c	;volatile
 13156                           
 13157                           ; BSR set to: 57
 13158                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 13159  004BE4  68C3               	setf	195,c	;volatile
 13160                           
 13161                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 13162  004BE6  0E90               	movlw	144
 13163  004BE8  6EC4               	movwf	196,c	;volatile
 13164                           
 13165                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x0C;
 13166  004BEA  0E0C               	movlw	12
 13167  004BEC  6EC5               	movwf	197,c	;volatile
 13168                           
 13169                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x0C;
 13170  004BEE  0E0C               	movlw	12
 13171  004BF0  013A               	movlb	58	; () banked
 13172  004BF2  6F70               	movwf	112,b	;volatile
 13173                           
 13174                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x60;
 13175  004BF4  0E60               	movlw	96
 13176  004BF6  6F60               	movwf	96,b	;volatile
 13177                           
 13178                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 13179  004BF8  0EFE               	movlw	254
 13180  004BFA  6F50               	movwf	80,b	;volatile
 13181                           
 13182                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 13183  004BFC  0E02               	movlw	2
 13184  004BFE  6F80               	movwf	128,b	;volatile
 13185                           
 13186                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0F;
 13187  004C00  0E0F               	movlw	15
 13188  004C02  6F90               	movwf	144,b	;volatile
 13189                           
 13190                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 13191  004C04  0E8F               	movlw	143
 13192  004C06  6F40               	movwf	64,b	;volatile
 13193                           
 13194                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 13195  004C08  0E00               	movlw	0
 13196  004C0A  6F71               	movwf	113,b	;volatile
 13197                           
 13198                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 13199  004C0C  0E00               	movlw	0
 13200  004C0E  6F91               	movwf	145,b	;volatile
 13201                           
 13202                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 13203  004C10  0E00               	movlw	0
 13204  004C12  6F81               	movwf	129,b	;volatile
 13205                           
 13206                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 13207  004C14  0E01               	movlw	1
 13208  004C16  6F51               	movwf	81,b	;volatile
 13209                           
 13210                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 13211  004C18  0E50               	movlw	80
 13212  004C1A  6F41               	movwf	65,b	;volatile
 13213                           
 13214                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 13215  004C1C  0E00               	movlw	0
 13216  004C1E  6F61               	movwf	97,b	;volatile
 13217                           
 13218                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 13219  004C20  0E00               	movlw	0
 13220  004C22  6F5A               	movwf	90,b	;volatile
 13221                           
 13222                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 13223  004C24  0E00               	movlw	0
 13224  004C26  6F5B               	movwf	91,b	;volatile
 13225                           
 13226                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 13227  004C28  0E00               	movlw	0
 13228  004C2A  6F6A               	movwf	106,b	;volatile
 13229                           
 13230                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 13231  004C2C  0E00               	movlw	0
 13232  004C2E  6F6B               	movwf	107,b	;volatile
 13233                           
 13234                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 13235  004C30  0E00               	movlw	0
 13236  004C32  6F7A               	movwf	122,b	;volatile
 13237                           
 13238                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 13239  004C34  0E00               	movlw	0
 13240  004C36  6F7B               	movwf	123,b	;volatile
 13241                           
 13242                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 13243  004C38  0E00               	movlw	0
 13244  004C3A  6F82               	movwf	130,b	;volatile
 13245                           
 13246                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 13247  004C3C  0E00               	movlw	0
 13248  004C3E  6F92               	movwf	146,b	;volatile
 13249                           
 13250                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 13251  004C40  0E00               	movlw	0
 13252  004C42  6F42               	movwf	66,b	;volatile
 13253                           
 13254                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 13255  004C44  0E00               	movlw	0
 13256  004C46  6F52               	movwf	82,b	;volatile
 13257                           
 13258                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 13259  004C48  0E00               	movlw	0
 13260  004C4A  6F62               	movwf	98,b	;volatile
 13261                           
 13262                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 13263  004C4C  0E00               	movlw	0
 13264  004C4E  6F72               	movwf	114,b	;volatile
 13265                           
 13266                           ; BSR set to: 58
 13267                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 13268  004C50  6943               	setf	67,b	;volatile
 13269                           
 13270                           ; BSR set to: 58
 13271                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 13272  004C52  6953               	setf	83,b	;volatile
 13273                           
 13274                           ; BSR set to: 58
 13275                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 13276  004C54  6963               	setf	99,b	;volatile
 13277                           
 13278                           ; BSR set to: 58
 13279                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 13280  004C56  6973               	setf	115,b	;volatile
 13281                           
 13282                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 13283  004C58  0E07               	movlw	7
 13284  004C5A  6F83               	movwf	131,b	;volatile
 13285                           
 13286                           ; BSR set to: 58
 13287                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 13288  004C5C  6993               	setf	147,b	;volatile
 13289                           
 13290                           ; BSR set to: 58
 13291                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 13292  004C5E  6944               	setf	68,b	;volatile
 13293                           
 13294                           ; BSR set to: 58
 13295                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 13296  004C60  6954               	setf	84,b	;volatile
 13297                           
 13298                           ; BSR set to: 58
 13299                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 13300  004C62  6964               	setf	100,b	;volatile
 13301                           
 13302                           ; BSR set to: 58
 13303                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 13304  004C64  6974               	setf	116,b	;volatile
 13305                           
 13306                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 13307  004C66  0E0F               	movlw	15
 13308  004C68  6F84               	movwf	132,b	;volatile
 13309                           
 13310                           ; BSR set to: 58
 13311                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 13312  004C6A  6994               	setf	148,b	;volatile
 13313                           
 13314                           ;mcc_generated_files/pin_manager.c: 144:     SPI1SCKPPS = 0x13;
 13315  004C6C  0E13               	movlw	19
 13316  004C6E  6FDE               	movwf	222,b	;volatile
 13317                           
 13318                           ;mcc_generated_files/pin_manager.c: 145:     RC3PPS = 0x1E;
 13319  004C70  0E1E               	movlw	30
 13320  004C72  6F13               	movwf	19,b	;volatile
 13321                           
 13322                           ;mcc_generated_files/pin_manager.c: 146:     RC5PPS = 0x1F;
 13323  004C74  0E1F               	movlw	31
 13324  004C76  6F15               	movwf	21,b	;volatile
 13325                           
 13326                           ;mcc_generated_files/pin_manager.c: 147:     RC6PPS = 0x13;
 13327  004C78  0E13               	movlw	19
 13328  004C7A  6F16               	movwf	22,b	;volatile
 13329                           
 13330                           ;mcc_generated_files/pin_manager.c: 148:     U1RXPPS = 0x17;
 13331  004C7C  0E17               	movlw	23
 13332  004C7E  6FE5               	movwf	229,b	;volatile
 13333                           
 13334                           ;mcc_generated_files/pin_manager.c: 149:     SPI1SDIPPS = 0x14;
 13335  004C80  0E14               	movlw	20
 13336  004C82  6FDF               	movwf	223,b	;volatile
 13337                           
 13338                           ; BSR set to: 58
 13339  004C84  0012               	return		;funcret
 13340  004C86                     __end_of_PIN_MANAGER_Initialize:
 13341                           	callstack 0
 13342                           
 13343 ;; *************** function _OSCILLATOR_Initialize *****************
 13344 ;; Defined at:
 13345 ;;		line 64 in file "mcc_generated_files/mcc.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;		None
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;		None
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1    wreg      void 
 13352 ;; Registers used:
 13353 ;;		wreg, status,2
 13354 ;; Tracked objects:
 13355 ;;		On entry : 3F/3A
 13356 ;;		On exit  : 3F/39
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13363 ;;Total ram usage:        0 bytes
 13364 ;; Hardware stack levels used: 1
 13365 ;; Hardware stack levels required when called: 4
 13366 ;; This function calls:
 13367 ;;		Nothing
 13368 ;; This function is called by:
 13369 ;;		_SYSTEM_Initialize
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text65
 13374  005C2A                     __ptext65:
 13375                           	callstack 0
 13376  005C2A                     _OSCILLATOR_Initialize:
 13377                           	callstack 25
 13378                           
 13379                           ; BSR set to: 58
 13380                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x20;
 13381                           
 13382                           ; BSR set to: 58
 13383                           ;incstack = 0
 13384  005C2A  0E20               	movlw	32
 13385  005C2C  0139               	movlb	57	; () banked
 13386  005C2E  6FD9               	movwf	217,b	;volatile
 13387                           
 13388                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 13389  005C30  0E00               	movlw	0
 13390  005C32  6FDB               	movwf	219,b	;volatile
 13391                           
 13392                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 13393  005C34  0E00               	movlw	0
 13394  005C36  6FDD               	movwf	221,b	;volatile
 13395                           
 13396                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x05;
 13397  005C38  0E05               	movlw	5
 13398  005C3A  6FDF               	movwf	223,b	;volatile
 13399                           
 13400                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 13401  005C3C  0E00               	movlw	0
 13402  005C3E  6FDE               	movwf	222,b	;volatile
 13403  005C40                     l185:
 13404                           
 13405                           ; BSR set to: 57
 13406                           ;mcc_generated_files/mcc.c: 77:     while(PLLR == 0)
 13407  005C40  B1DC               	btfsc	220,0,b	;volatile
 13408  005C42  0012               	return	
 13409  005C44  D7FD               	goto	l185
 13410  005C46                     __end_of_OSCILLATOR_Initialize:
 13411                           	callstack 0
 13412                           
 13413 ;; *************** function _INTERRUPT_Initialize *****************
 13414 ;; Defined at:
 13415 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;		None
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;  state           1   20[COMRAM] _Bool 
 13420 ;; Return value:  Size  Location     Type
 13421 ;;                  1    wreg      void 
 13422 ;; Registers used:
 13423 ;;		wreg, status,2
 13424 ;; Tracked objects:
 13425 ;;		On entry : 3F/0
 13426 ;;		On exit  : 3F/39
 13427 ;;		Unchanged: 0/0
 13428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13433 ;;Total ram usage:        1 bytes
 13434 ;; Hardware stack levels used: 1
 13435 ;; Hardware stack levels required when called: 4
 13436 ;; This function calls:
 13437 ;;		Nothing
 13438 ;; This function is called by:
 13439 ;;		_SYSTEM_Initialize
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           	psect	text66
 13444  005734                     __ptext66:
 13445                           	callstack 0
 13446  005734                     _INTERRUPT_Initialize:
 13447                           	callstack 25
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13451                           
 13452                           ; BSR set to: 57
 13453                           ;incstack = 0
 13454  005734  8AD2               	bsf	210,5,c	;volatile
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13458  005736  0E00               	movlw	0
 13459  005738  BED2               	btfsc	16338,7,c	;volatile
 13460  00573A  0E01               	movlw	1
 13461  00573C  6E15               	movwf	INTERRUPT_Initialize@state^0,c
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13465  00573E  9ED2               	bcf	16338,7,c	;volatile
 13466                           
 13467                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13468  005740  0E55               	movlw	85
 13469  005742  6ED4               	movwf	212,c	;volatile
 13470                           
 13471                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13472  005744  0EAA               	movlw	170
 13473  005746  6ED4               	movwf	212,c	;volatile
 13474                           
 13475                           ; BSR set to: 0
 13476                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13477  005748  90D4               	bcf	212,0,c	;volatile
 13478                           
 13479                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 13480  00574A  0E00               	movlw	0
 13481  00574C  6ED7               	movwf	215,c	;volatile
 13482                           
 13483                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 13484  00574E  0E00               	movlw	0
 13485  005750  6ED6               	movwf	214,c	;volatile
 13486                           
 13487                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 13488  005752  0E08               	movlw	8
 13489  005754  6ED5               	movwf	213,c	;volatile
 13490                           
 13491                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13492  005756  0E55               	movlw	85
 13493  005758  6ED4               	movwf	212,c	;volatile
 13494                           
 13495                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13496  00575A  0EAA               	movlw	170
 13497  00575C  6ED4               	movwf	212,c	;volatile
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13501  00575E  80D4               	bsf	212,0,c	;volatile
 13502                           
 13503                           ; BSR set to: 0
 13504                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13505  005760  B015               	btfsc	INTERRUPT_Initialize@state^0,0,c
 13506  005762  D002               	bra	u12145
 13507  005764  9ED2               	bcf	16338,7,c	;volatile
 13508  005766  D001               	bra	u12146
 13509  005768                     u12145:
 13510  005768  8ED2               	bsf	16338,7,c	;volatile
 13511  00576A                     u12146:
 13512                           
 13513                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 13514  00576A  0139               	movlb	57	; () banked
 13515  00576C  8983               	bsf	131,4,b	;volatile
 13516                           
 13517                           ; BSR set to: 57
 13518                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 13519  00576E  8783               	bsf	131,3,b	;volatile
 13520                           
 13521                           ; BSR set to: 57
 13522                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR9bits.TMR6IP = 1;
 13523  005770  8189               	bsf	137,0,b	;volatile
 13524                           
 13525                           ; BSR set to: 57
 13526                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR8bits.TMR5IP = 1;
 13527  005772  8D88               	bsf	136,6,b	;volatile
 13528                           
 13529                           ; BSR set to: 57
 13530                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.ADIP = 1;
 13531  005774  8581               	bsf	129,2,b	;volatile
 13532                           
 13533                           ; BSR set to: 57
 13534  005776  0012               	return		;funcret
 13535  005778                     __end_of_INTERRUPT_Initialize:
 13536                           	callstack 0
 13537                           
 13538 ;; *************** function _DAC1_Initialize *****************
 13539 ;; Defined at:
 13540 ;;		line 58 in file "mcc_generated_files/dac1.c"
 13541 ;; Parameters:    Size  Location     Type
 13542 ;;		None
 13543 ;; Auto vars:     Size  Location     Type
 13544 ;;		None
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  1    wreg      void 
 13547 ;; Registers used:
 13548 ;;		wreg, status,2
 13549 ;; Tracked objects:
 13550 ;;		On entry : 3B/39
 13551 ;;		On exit  : 3F/3E
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13558 ;;Total ram usage:        0 bytes
 13559 ;; Hardware stack levels used: 1
 13560 ;; Hardware stack levels required when called: 4
 13561 ;; This function calls:
 13562 ;;		Nothing
 13563 ;; This function is called by:
 13564 ;;		_SYSTEM_Initialize
 13565 ;; This function uses a non-reentrant model
 13566 ;;
 13567                           
 13568                           	psect	text67
 13569  005D62                     __ptext67:
 13570                           	callstack 0
 13571  005D62                     _DAC1_Initialize:
 13572                           	callstack 25
 13573                           
 13574                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 13575                           
 13576                           ; BSR set to: 57
 13577                           ;incstack = 0
 13578  005D62  0EA4               	movlw	164
 13579  005D64  013E               	movlb	62	; () banked
 13580  005D66  6F9E               	movwf	158,b	;volatile
 13581                           
 13582                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 13583  005D68  0E1F               	movlw	31
 13584  005D6A  6F9C               	movwf	156,b	;volatile
 13585                           
 13586                           ; BSR set to: 62
 13587  005D6C  0012               	return		;funcret
 13588  005D6E                     __end_of_DAC1_Initialize:
 13589                           	callstack 0
 13590                           
 13591 ;; *************** function _ADCC_Initialize *****************
 13592 ;; Defined at:
 13593 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13594 ;; Parameters:    Size  Location     Type
 13595 ;;		None
 13596 ;; Auto vars:     Size  Location     Type
 13597 ;;		None
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  1    wreg      void 
 13600 ;; Registers used:
 13601 ;;		wreg, status,2, status,0, cstack
 13602 ;; Tracked objects:
 13603 ;;		On entry : 3B/39
 13604 ;;		On exit  : 3B/39
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13611 ;;Total ram usage:        0 bytes
 13612 ;; Hardware stack levels used: 1
 13613 ;; Hardware stack levels required when called: 5
 13614 ;; This function calls:
 13615 ;;		_ADCC_SetADIInterruptHandler
 13616 ;; This function is called by:
 13617 ;;		_SYSTEM_Initialize
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text68
 13622  00536E                     __ptext68:
 13623                           	callstack 0
 13624  00536E                     _ADCC_Initialize:
 13625                           	callstack 24
 13626                           
 13627                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13628                           
 13629                           ; BSR set to: 62
 13630                           ;incstack = 0
 13631  00536E  0E00               	movlw	0
 13632  005370  013E               	movlb	62	; () banked
 13633  005372  6FDE               	movwf	222,b	;volatile
 13634                           
 13635                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13636  005374  0E00               	movlw	0
 13637  005376  6FDF               	movwf	223,b	;volatile
 13638                           
 13639                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13640  005378  0E00               	movlw	0
 13641  00537A  6FE0               	movwf	224,b	;volatile
 13642                           
 13643                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13644  00537C  0E00               	movlw	0
 13645  00537E  6FE1               	movwf	225,b	;volatile
 13646                           
 13647                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13648  005380  0E00               	movlw	0
 13649  005382  6FE4               	movwf	228,b	;volatile
 13650                           
 13651                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13652  005384  0E00               	movlw	0
 13653  005386  6FE5               	movwf	229,b	;volatile
 13654                           
 13655                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13656  005388  0E00               	movlw	0
 13657  00538A  6FEA               	movwf	234,b	;volatile
 13658                           
 13659                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13660  00538C  0E00               	movlw	0
 13661  00538E  6FEC               	movwf	236,b	;volatile
 13662                           
 13663                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13664  005390  0E00               	movlw	0
 13665  005392  6FF1               	movwf	241,b	;volatile
 13666                           
 13667                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 13668  005394  0E10               	movlw	16
 13669  005396  6FF3               	movwf	243,b	;volatile
 13670                           
 13671                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13672  005398  0E00               	movlw	0
 13673  00539A  6FF4               	movwf	244,b	;volatile
 13674                           
 13675                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13676  00539C  0E00               	movlw	0
 13677  00539E  6FF5               	movwf	245,b	;volatile
 13678                           
 13679                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13680  0053A0  0E00               	movlw	0
 13681  0053A2  6FF6               	movwf	246,b	;volatile
 13682                           
 13683                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13684  0053A4  0E00               	movlw	0
 13685  0053A6  6FF7               	movwf	247,b	;volatile
 13686                           
 13687                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13688  0053A8  0E00               	movlw	0
 13689  0053AA  6FF9               	movwf	249,b	;volatile
 13690                           
 13691                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13692  0053AC  0E00               	movlw	0
 13693  0053AE  6FFA               	movwf	250,b	;volatile
 13694                           
 13695                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 13696  0053B0  0E00               	movlw	0
 13697  0053B2  6FFB               	movwf	251,b	;volatile
 13698                           
 13699                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13700  0053B4  0E00               	movlw	0
 13701  0053B6  6FFC               	movwf	252,b	;volatile
 13702                           
 13703                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13704  0053B8  0E02               	movlw	2
 13705  0053BA  6FFD               	movwf	253,b	;volatile
 13706                           
 13707                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 13708  0053BC  0E07               	movlw	7
 13709  0053BE  6FFE               	movwf	254,b	;volatile
 13710                           
 13711                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13712  0053C0  0E00               	movlw	0
 13713  0053C2  6FFF               	movwf	255,b	;volatile
 13714                           
 13715                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 13716  0053C4  0E94               	movlw	148
 13717  0053C6  6FF8               	movwf	248,b	;volatile
 13718                           
 13719                           ; BSR set to: 62
 13720                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 13721  0053C8  0139               	movlb	57	; () banked
 13722  0053CA  95A1               	bcf	161,2,b	;volatile
 13723                           
 13724                           ; BSR set to: 57
 13725                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 13726  0053CC  8591               	bsf	145,2,b	;volatile
 13727                           
 13728                           ; BSR set to: 57
 13729                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 13730  0053CE  0E90               	movlw	low _ADCC_DefaultInterruptHandler
 13731  0053D0  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
 13732  0053D2  0E5D               	movlw	high _ADCC_DefaultInterruptHandler
 13733  0053D4  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
 13734  0053D6  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 13735  0053D8  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
 13736  0053DA  ECAA  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 13737  0053DE  0012               	return		;funcret
 13738  0053E0                     __end_of_ADCC_Initialize:
 13739                           	callstack 0
 13740                           
 13741 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 13742 ;; Defined at:
 13743 ;;		line 316 in file "mcc_generated_files/adcc.c"
 13744 ;; Parameters:    Size  Location     Type
 13745 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 13746 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 13747 ;; Auto vars:     Size  Location     Type
 13748 ;;		None
 13749 ;; Return value:  Size  Location     Type
 13750 ;;                  1    wreg      void 
 13751 ;; Registers used:
 13752 ;;		wreg, status,2, status,0
 13753 ;; Tracked objects:
 13754 ;;		On entry : 3B/3D
 13755 ;;		On exit  : 3B/39
 13756 ;;		Unchanged: 3A/0
 13757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13758 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13761 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13762 ;;Total ram usage:        3 bytes
 13763 ;; Hardware stack levels used: 1
 13764 ;; Hardware stack levels required when called: 4
 13765 ;; This function calls:
 13766 ;;		Nothing
 13767 ;; This function is called by:
 13768 ;;		_ADCC_Initialize
 13769 ;;		_main
 13770 ;; This function uses a non-reentrant model
 13771 ;;
 13772                           
 13773                           	psect	text69
 13774  005D54                     __ptext69:
 13775                           	callstack 0
 13776  005D54                     _ADCC_SetADIInterruptHandler:
 13777                           	callstack 24
 13778                           
 13779                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 13780                           
 13781                           ;incstack = 0
 13782  005D54  C015  F0EC         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 13783  005D58  C016  F0ED         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 13784  005D5C  C017  F0EE         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 13785  005D60  0012               	return		;funcret
 13786  005D62                     __end_of_ADCC_SetADIInterruptHandler:
 13787                           	callstack 0
 13788                           
 13789 ;; *************** function _DAC1_SetOutput *****************
 13790 ;; Defined at:
 13791 ;;		line 66 in file "mcc_generated_files/dac1.c"
 13792 ;; Parameters:    Size  Location     Type
 13793 ;;  inputData       1    wreg     unsigned char 
 13794 ;; Auto vars:     Size  Location     Type
 13795 ;;  inputData       1   20[COMRAM] unsigned char 
 13796 ;; Return value:  Size  Location     Type
 13797 ;;                  1    wreg      void 
 13798 ;; Registers used:
 13799 ;;		wreg
 13800 ;; Tracked objects:
 13801 ;;		On entry : 0/3D
 13802 ;;		On exit  : 0/0
 13803 ;;		Unchanged: 0/0
 13804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13809 ;;Total ram usage:        1 bytes
 13810 ;; Hardware stack levels used: 1
 13811 ;; Hardware stack levels required when called: 4
 13812 ;; This function calls:
 13813 ;;		Nothing
 13814 ;; This function is called by:
 13815 ;;		_main
 13816 ;; This function uses a non-reentrant model
 13817 ;;
 13818                           
 13819                           	psect	text70
 13820  005D78                     __ptext70:
 13821                           	callstack 0
 13822  005D78                     _DAC1_SetOutput:
 13823                           	callstack 26
 13824                           
 13825                           ;incstack = 0
 13826                           ;DAC1_SetOutput@inputData stored from wreg
 13827  005D78  6E15               	movwf	DAC1_SetOutput@inputData^0,c
 13828                           
 13829                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 13830  005D7A  0060  F057  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 13831  005D80  0012               	return		;funcret
 13832  005D82                     __end_of_DAC1_SetOutput:
 13833                           	callstack 0
 13834                           
 13835 ;; *************** function _DAC1_GetOutput *****************
 13836 ;; Defined at:
 13837 ;;		line 71 in file "mcc_generated_files/dac1.c"
 13838 ;; Parameters:    Size  Location     Type
 13839 ;;		None
 13840 ;; Auto vars:     Size  Location     Type
 13841 ;;		None
 13842 ;; Return value:  Size  Location     Type
 13843 ;;                  1    wreg      unsigned char 
 13844 ;; Registers used:
 13845 ;;		wreg, status,2
 13846 ;; Tracked objects:
 13847 ;;		On entry : 3F/2
 13848 ;;		On exit  : 3F/3E
 13849 ;;		Unchanged: 0/0
 13850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13855 ;;Total ram usage:        0 bytes
 13856 ;; Hardware stack levels used: 1
 13857 ;; Hardware stack levels required when called: 4
 13858 ;; This function calls:
 13859 ;;		Nothing
 13860 ;; This function is called by:
 13861 ;;		_main
 13862 ;; This function uses a non-reentrant model
 13863 ;;
 13864                           
 13865                           	psect	text71
 13866  005D82                     __ptext71:
 13867                           	callstack 0
 13868  005D82                     _DAC1_GetOutput:
 13869                           	callstack 26
 13870                           
 13871                           ; BSR set to: 2
 13872                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 13873                           
 13874                           ;incstack = 0
 13875  005D82  013E               	movlb	62	; () banked
 13876  005D84  519C               	movf	156,w,b	;volatile
 13877                           
 13878                           ; BSR set to: 62
 13879  005D86  0012               	return		;funcret
 13880  005D88                     __end_of_DAC1_GetOutput:
 13881                           	callstack 0
 13882                           
 13883 ;; *************** function _ADCC_ISR *****************
 13884 ;; Defined at:
 13885 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;		None
 13888 ;; Auto vars:     Size  Location     Type
 13889 ;;		None
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  1    wreg      void 
 13892 ;; Registers used:
 13893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 0/0
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13903 ;;Total ram usage:        2 bytes
 13904 ;; Hardware stack levels used: 1
 13905 ;; Hardware stack levels required when called: 2
 13906 ;; This function calls:
 13907 ;;		Absolute function
 13908 ;;		_ADCC_DefaultInterruptHandler
 13909 ;;		_Adc_Isr
 13910 ;; This function is called by:
 13911 ;;		Interrupt level 2
 13912 ;; This function uses a non-reentrant model
 13913 ;;
 13914                           
 13915                           	psect	text72
 13916  005778                     __ptext72:
 13917                           	callstack 0
 13918  005778                     _ADCC_ISR:
 13919                           	callstack 17
 13920                           
 13921                           ; BSR set to: 62
 13922                           ;incstack = 0
 13923  005778  006F FFE8  F006    	movff	pclath,??_ADCC_ISR
 13924  00577E  006F FFEC  F007    	movff	pclatu,??_ADCC_ISR+1
 13925                           
 13926                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13927  005784  0139               	movlb	57	; () banked
 13928  005786  95A1               	bcf	161,2,b	;volatile
 13929                           
 13930                           ; BSR set to: 57
 13931                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13932  005788  0100               	movlb	0	; () banked
 13933  00578A  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 13934  00578C  11ED               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 13935  00578E  11EE               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 13936  005790  B4D8               	btfsc	status,2,c
 13937  005792  D00C               	goto	i2u630_49
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13941  005794  D801               	call	i2u630_48
 13942  005796  D00A               	goto	i2u630_49
 13943  005798                     i2u630_48:
 13944  005798  0005               	push	
 13945  00579A  6EFA               	movwf	pclath,c
 13946  00579C  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 13947  00579E  6EFD               	movwf	tosl,c
 13948  0057A0  51ED               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 13949  0057A2  6EFE               	movwf	tosh,c
 13950  0057A4  51EE               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 13951  0057A6  6EFF               	movwf	tosu,c
 13952  0057A8  50FA               	movf	pclath,w,c
 13953  0057AA  0012               	return		;indir
 13954  0057AC                     i2u630_49:
 13955  0057AC  0060  F01F  FFFB   	movff	??_ADCC_ISR+1,pclatu
 13956  0057B2  0060  F01B  FFFA   	movff	??_ADCC_ISR,pclath
 13957  0057B8  0011               	retfie		f
 13958  0057BA                     __end_of_ADCC_ISR:
 13959                           	callstack 0
 13960                           
 13961 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13962 ;; Defined at:
 13963 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;		None
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;		None
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  1    wreg      void 
 13970 ;; Registers used:
 13971 ;;		None
 13972 ;; Tracked objects:
 13973 ;;		On entry : 3F/0
 13974 ;;		On exit  : 3F/0
 13975 ;;		Unchanged: 3F/0
 13976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13981 ;;Total ram usage:        0 bytes
 13982 ;; Hardware stack levels used: 1
 13983 ;; This function calls:
 13984 ;;		Nothing
 13985 ;; This function is called by:
 13986 ;;		_ADCC_Initialize
 13987 ;;		_ADCC_ISR
 13988 ;; This function uses a non-reentrant model
 13989 ;;
 13990                           
 13991                           	psect	text73
 13992  005D90                     __ptext73:
 13993                           	callstack 0
 13994  005D90                     _ADCC_DefaultInterruptHandler:
 13995                           	callstack 18
 13996                           
 13997                           ; BSR set to: 0
 13998                           
 13999                           ;incstack = 0
 14000  005D90  0012               	return		;funcret
 14001  005D92                     __end_of_ADCC_DefaultInterruptHandler:
 14002                           	callstack 0
 14003                           
 14004 ;; *************** function _Adc_Isr *****************
 14005 ;; Defined at:
 14006 ;;		line 83 in file "main.c"
 14007 ;; Parameters:    Size  Location     Type
 14008 ;;		None
 14009 ;; Auto vars:     Size  Location     Type
 14010 ;;		None
 14011 ;; Return value:  Size  Location     Type
 14012 ;;                  1    wreg      void 
 14013 ;; Registers used:
 14014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14015 ;; Tracked objects:
 14016 ;;		On entry : 3F/0
 14017 ;;		On exit  : 3F/0
 14018 ;;		Unchanged: 0/0
 14019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14024 ;;Total ram usage:        1 bytes
 14025 ;; Hardware stack levels used: 1
 14026 ;; Hardware stack levels required when called: 1
 14027 ;; This function calls:
 14028 ;;		_ADCC_GetConversionResult
 14029 ;; This function is called by:
 14030 ;;		_main
 14031 ;;		_ADCC_ISR
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           	psect	text74
 14036  005966                     __ptext74:
 14037                           	callstack 0
 14038  005966                     _Adc_Isr:
 14039                           	callstack 17
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;main.c: 85:  ana[adc_chan] = ADCC_GetConversionResult();
 14043                           
 14044                           ; BSR set to: 0
 14045                           ;incstack = 0
 14046  005966  EC60  F02E         	call	_ADCC_GetConversionResult	;wreg free
 14047  00596A  5044               	movf	_adc_chan^0,w,c
 14048  00596C  0D02               	mullw	2
 14049  00596E  50F3               	movf	243,w,c
 14050  005970  0F39               	addlw	low _ana
 14051  005972  6ED9               	movwf	fsr2l,c
 14052  005974  6ADA               	clrf	fsr2h,c
 14053  005976  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 14054  00597C  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 14055                           
 14056                           ; BSR set to: 62
 14057                           ;main.c: 86:  if (adc_chan++ >= 2) {
 14058  005982  2A44               	incf	_adc_chan^0,f,c	;volatile
 14059  005984  0444               	decf	_adc_chan^0,w,c	;volatile
 14060  005986  6E05               	movwf	??_Adc_Isr^0,c
 14061  005988  0E01               	movlw	1
 14062  00598A  6405               	cpfsgt	??_Adc_Isr^0,c
 14063  00598C  D002               	goto	i2l6240
 14064                           
 14065                           ; BSR set to: 62
 14066                           ;main.c: 87:   adc_chan = 0;
 14067  00598E  0E00               	movlw	0
 14068  005990  6E44               	movwf	_adc_chan^0,c	;volatile
 14069  005992                     i2l6240:
 14070                           
 14071                           ; BSR set to: 62
 14072                           ;main.c: 89:  ADPCH = adc_chan;
 14073  005992  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
 14074                           
 14075                           ;main.c: 93:  adc_tick = 1;
 14076  005998  0E01               	movlw	1
 14077  00599A  0100               	movlb	0	; () banked
 14078  00599C  6FFC               	movwf	_adc_tick& (0+255),b	;volatile
 14079                           
 14080                           ; BSR set to: 0
 14081  00599E  0012               	return		;funcret
 14082  0059A0                     __end_of_Adc_Isr:
 14083                           	callstack 0
 14084                           
 14085 ;; *************** function _ADCC_GetConversionResult *****************
 14086 ;; Defined at:
 14087 ;;		line 139 in file "mcc_generated_files/adcc.c"
 14088 ;; Parameters:    Size  Location     Type
 14089 ;;		None
 14090 ;; Auto vars:     Size  Location     Type
 14091 ;;		None
 14092 ;; Return value:  Size  Location     Type
 14093 ;;                  2    0[COMRAM] unsigned short 
 14094 ;; Registers used:
 14095 ;;		wreg, status,2, status,0
 14096 ;; Tracked objects:
 14097 ;;		On entry : 3F/0
 14098 ;;		On exit  : 3F/3E
 14099 ;;		Unchanged: 0/0
 14100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;Total ram usage:        4 bytes
 14106 ;; Hardware stack levels used: 1
 14107 ;; This function calls:
 14108 ;;		Nothing
 14109 ;; This function is called by:
 14110 ;;		_Adc_Isr
 14111 ;; This function uses a non-reentrant model
 14112 ;;
 14113                           
 14114                           	psect	text75
 14115  005CC0                     __ptext75:
 14116                           	callstack 0
 14117  005CC0                     _ADCC_GetConversionResult:
 14118                           	callstack 17
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;incstack = 0
 14125  005CC0  013E               	movlb	62	; () banked
 14126  005CC2  51F0               	movf	240,w,b	;volatile
 14127  005CC4  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 14128  005CC6  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 14129  005CC8  51EF               	movf	239,w,b	;volatile
 14130  005CCA  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 14131  005CCC  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 14132  005CCE  0E00               	movlw	0
 14133  005CD0  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 14134  005CD2  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 14135                           
 14136                           ; BSR set to: 62
 14137  005CD4  0012               	return		;funcret
 14138  005CD6                     __end_of_ADCC_GetConversionResult:
 14139                           	callstack 0
 14140                           
 14141 ;; *************** function _TMR6_ISR *****************
 14142 ;; Defined at:
 14143 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 14144 ;; Parameters:    Size  Location     Type
 14145 ;;		None
 14146 ;; Auto vars:     Size  Location     Type
 14147 ;;		None
 14148 ;; Return value:  Size  Location     Type
 14149 ;;                  1    wreg      void 
 14150 ;; Registers used:
 14151 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14152 ;; Tracked objects:
 14153 ;;		On entry : 0/0
 14154 ;;		On exit  : 0/0
 14155 ;;		Unchanged: 0/0
 14156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14161 ;;Total ram usage:        2 bytes
 14162 ;; Hardware stack levels used: 1
 14163 ;; Hardware stack levels required when called: 2
 14164 ;; This function calls:
 14165 ;;		_TMR6_CallBack
 14166 ;; This function is called by:
 14167 ;;		Interrupt level 2
 14168 ;; This function uses a non-reentrant model
 14169 ;;
 14170                           
 14171                           	psect	text76
 14172  0059A0                     __ptext76:
 14173                           	callstack 0
 14174  0059A0                     _TMR6_ISR:
 14175                           	callstack 17
 14176                           
 14177                           ; BSR set to: 62
 14178                           ;incstack = 0
 14179  0059A0  006F FFE8  F009    	movff	pclath,??_TMR6_ISR
 14180  0059A6  006F FFEC  F00A    	movff	pclatu,??_TMR6_ISR+1
 14181                           
 14182                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 14183  0059AC  0139               	movlb	57	; () banked
 14184  0059AE  91A9               	bcf	169,0,b	;volatile
 14185                           
 14186                           ; BSR set to: 57
 14187                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 14188  0059B0  4A41               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 14189  0059B2  2A42               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 14190  0059B4  5042               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 14191  0059B6  E104               	bnz	i2u631_40
 14192  0059B8  0E17               	movlw	23
 14193  0059BA  5C41               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 14194  0059BC  A0D8               	btfss	status,0,c
 14195  0059BE  D006               	goto	i2l454
 14196  0059C0                     i2u631_40:
 14197                           
 14198                           ; BSR set to: 57
 14199                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 14200  0059C0  ECAF  F02D         	call	_TMR6_CallBack	;wreg free
 14201                           
 14202                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 14203  0059C4  0E00               	movlw	0
 14204  0059C6  6E42               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 14205  0059C8  0E00               	movlw	0
 14206  0059CA  6E41               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 14207  0059CC                     i2l454:
 14208  0059CC  0060  F02B  FFFB   	movff	??_TMR6_ISR+1,pclatu
 14209  0059D2  0060  F027  FFFA   	movff	??_TMR6_ISR,pclath
 14210  0059D8  0011               	retfie		f
 14211  0059DA                     __end_of_TMR6_ISR:
 14212                           	callstack 0
 14213                           
 14214 ;; *************** function _TMR6_CallBack *****************
 14215 ;; Defined at:
 14216 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;		None
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;		None
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  1    wreg      void 
 14223 ;; Registers used:
 14224 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14225 ;; Tracked objects:
 14226 ;;		On entry : 3F/39
 14227 ;;		On exit  : 0/0
 14228 ;;		Unchanged: 0/0
 14229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14234 ;;Total ram usage:        0 bytes
 14235 ;; Hardware stack levels used: 1
 14236 ;; Hardware stack levels required when called: 1
 14237 ;; This function calls:
 14238 ;;		Absolute function
 14239 ;;		_Led_Blink
 14240 ;;		_TMR6_DefaultInterruptHandler
 14241 ;; This function is called by:
 14242 ;;		_TMR6_ISR
 14243 ;; This function uses a non-reentrant model
 14244 ;;
 14245                           
 14246                           	psect	text77
 14247  005B5E                     __ptext77:
 14248                           	callstack 0
 14249  005B5E                     _TMR6_CallBack:
 14250                           	callstack 17
 14251                           
 14252                           ; BSR set to: 57
 14253                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 14254                           
 14255                           ;incstack = 0
 14256  005B5E  0100               	movlb	0	; () banked
 14257  005B60  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14258  005B62  11EA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14259  005B64  11EB               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14260  005B66  B4D8               	btfsc	status,2,c
 14261  005B68  0012               	return	
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 14265  005B6A  D801               	call	i2u603_48
 14266  005B6C  0012               	return	
 14267  005B6E                     i2u603_48:
 14268  005B6E  0005               	push	
 14269  005B70  6EFA               	movwf	pclath,c
 14270  005B72  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14271  005B74  6EFD               	movwf	tosl,c
 14272  005B76  51EA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14273  005B78  6EFE               	movwf	tosh,c
 14274  005B7A  51EB               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14275  005B7C  6EFF               	movwf	tosu,c
 14276  005B7E  50FA               	movf	pclath,w,c
 14277  005B80  0012               	return		;indir
 14278  005B82                     __end_of_TMR6_CallBack:
 14279                           	callstack 0
 14280                           
 14281 ;; *************** function _Led_Blink *****************
 14282 ;; Defined at:
 14283 ;;		line 67 in file "main.c"
 14284 ;; Parameters:    Size  Location     Type
 14285 ;;		None
 14286 ;; Auto vars:     Size  Location     Type
 14287 ;;		None
 14288 ;; Return value:  Size  Location     Type
 14289 ;;                  1    wreg      void 
 14290 ;; Registers used:
 14291 ;;		wreg, status,2, status,0
 14292 ;; Tracked objects:
 14293 ;;		On entry : 3F/0
 14294 ;;		On exit  : 3F/0
 14295 ;;		Unchanged: 0/0
 14296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14301 ;;Total ram usage:        1 bytes
 14302 ;; Hardware stack levels used: 1
 14303 ;; This function calls:
 14304 ;;		Nothing
 14305 ;; This function is called by:
 14306 ;;		_main
 14307 ;;		_TMR6_CallBack
 14308 ;; This function uses a non-reentrant model
 14309 ;;
 14310                           
 14311                           	psect	text78
 14312  005C0C                     __ptext78:
 14313                           	callstack 0
 14314  005C0C                     _Led_Blink:
 14315                           	callstack 17
 14316                           
 14317                           ; BSR set to: 0
 14318                           
 14319                           ; BSR set to: 0
 14320                           
 14321                           ;incstack = 0
 14322                           ;main.c: 69:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 14323  005C0C  A0BE               	btfss	190,0,c	;volatile
 14324  005C0E  D002               	goto	i2u594_40
 14325  005C10  0E01               	movlw	1
 14326  005C12  D001               	goto	i2u594_46
 14327  005C14                     i2u594_40:
 14328  005C14  0E00               	movlw	0
 14329  005C16                     i2u594_46:
 14330  005C16  0AFF               	xorlw	255
 14331  005C18  6E08               	movwf	??_Led_Blink^0,c
 14332  005C1A  50BE               	movf	190,w,c	;volatile
 14333  005C1C  1808               	xorwf	??_Led_Blink^0,w,c
 14334  005C1E  0BFE               	andlw	-2
 14335  005C20  1808               	xorwf	??_Led_Blink^0,w,c
 14336  005C22  6EBE               	movwf	190,c	;volatile
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;main.c: 73:  disp_tick = 1;
 14340  005C24  0E01               	movlw	1
 14341  005C26  6FFD               	movwf	_disp_tick& (0+255),b	;volatile
 14342                           
 14343                           ; BSR set to: 0
 14344  005C28  0012               	return		;funcret
 14345  005C2A                     __end_of_Led_Blink:
 14346                           	callstack 0
 14347                           
 14348 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14349 ;; Defined at:
 14350 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;		None
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;		None
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  1    wreg      void 
 14357 ;; Registers used:
 14358 ;;		None
 14359 ;; Tracked objects:
 14360 ;;		On entry : 3F/0
 14361 ;;		On exit  : 3F/0
 14362 ;;		Unchanged: 3F/0
 14363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14368 ;;Total ram usage:        0 bytes
 14369 ;; Hardware stack levels used: 1
 14370 ;; This function calls:
 14371 ;;		Nothing
 14372 ;; This function is called by:
 14373 ;;		_TMR6_Initialize
 14374 ;;		_TMR6_CallBack
 14375 ;; This function uses a non-reentrant model
 14376 ;;
 14377                           
 14378                           	psect	text79
 14379  005D92                     __ptext79:
 14380                           	callstack 0
 14381  005D92                     _TMR6_DefaultInterruptHandler:
 14382                           	callstack 17
 14383                           
 14384                           ; BSR set to: 0
 14385                           
 14386                           ; BSR set to: 0
 14387                           ;incstack = 0
 14388  005D92  0012               	return		;funcret
 14389  005D94                     __end_of_TMR6_DefaultInterruptHandler:
 14390                           	callstack 0
 14391                           
 14392 ;; *************** function _Default_ISR *****************
 14393 ;; Defined at:
 14394 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
 14395 ;; Parameters:    Size  Location     Type
 14396 ;;		None
 14397 ;; Auto vars:     Size  Location     Type
 14398 ;;		None
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  1    wreg      void 
 14401 ;; Registers used:
 14402 ;;		None
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14412 ;;Total ram usage:        0 bytes
 14413 ;; Hardware stack levels used: 1
 14414 ;; This function calls:
 14415 ;;		Nothing
 14416 ;; This function is called by:
 14417 ;;		Interrupt level 2
 14418 ;; This function uses a non-reentrant model
 14419 ;;
 14420                           
 14421                           	psect	text80
 14422  005D94                     __ptext80:
 14423                           	callstack 0
 14424  005D94                     _Default_ISR:
 14425                           	callstack 19
 14426                           
 14427                           ; BSR set to: 0
 14428                           ;incstack = 0
 14429  005D94  0011               	retfie		f
 14430  005D96                     __end_of_Default_ISR:
 14431                           	callstack 0
 14432                           
 14433 ;; *************** function _UART1_tx_vect_isr *****************
 14434 ;; Defined at:
 14435 ;;		line 235 in file "mcc_generated_files/uart1.c"
 14436 ;; Parameters:    Size  Location     Type
 14437 ;;		None
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;		None
 14440 ;; Return value:  Size  Location     Type
 14441 ;;                  1    wreg      void 
 14442 ;; Registers used:
 14443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14444 ;; Tracked objects:
 14445 ;;		On entry : 0/0
 14446 ;;		On exit  : 0/0
 14447 ;;		Unchanged: 0/0
 14448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14452 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14453 ;;Total ram usage:        2 bytes
 14454 ;; Hardware stack levels used: 1
 14455 ;; Hardware stack levels required when called: 1
 14456 ;; This function calls:
 14457 ;;		Absolute function
 14458 ;;		_UART1_Transmit_ISR
 14459 ;; This function is called by:
 14460 ;;		Interrupt level 2
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           	psect	text81
 14465  005838                     __ptext81:
 14466                           	callstack 0
 14467  005838                     _UART1_tx_vect_isr:
 14468                           	callstack 18
 14469                           
 14470                           ;incstack = 0
 14471  005838  006F FFE8  F00B    	movff	pclath,??_UART1_tx_vect_isr
 14472  00583E  006F FFEC  F00C    	movff	pclatu,??_UART1_tx_vect_isr+1
 14473                           
 14474                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 14475  005844  0100               	movlb	0	; () banked
 14476  005846  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14477  005848  11F0               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14478  00584A  11F1               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14479  00584C  B4D8               	btfsc	status,2,c
 14480  00584E  D00C               	goto	i2u633_49
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 14484  005850  D801               	call	i2u633_48
 14485  005852  D00A               	goto	i2u633_49
 14486  005854                     i2u633_48:
 14487  005854  0005               	push	
 14488  005856  6EFA               	movwf	pclath,c
 14489  005858  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14490  00585A  6EFD               	movwf	tosl,c
 14491  00585C  51F0               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14492  00585E  6EFE               	movwf	tosh,c
 14493  005860  51F1               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14494  005862  6EFF               	movwf	tosu,c
 14495  005864  50FA               	movf	pclath,w,c
 14496  005866  0012               	return		;indir
 14497  005868                     i2u633_49:
 14498  005868  0060  F033  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 14499  00586E  0060  F02F  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 14500  005874  0011               	retfie		f
 14501  005876                     __end_of_UART1_tx_vect_isr:
 14502                           	callstack 0
 14503                           
 14504 ;; *************** function _UART1_Transmit_ISR *****************
 14505 ;; Defined at:
 14506 ;;		line 253 in file "mcc_generated_files/uart1.c"
 14507 ;; Parameters:    Size  Location     Type
 14508 ;;		None
 14509 ;; Auto vars:     Size  Location     Type
 14510 ;;		None
 14511 ;; Return value:  Size  Location     Type
 14512 ;;                  1    wreg      void 
 14513 ;; Registers used:
 14514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14515 ;; Tracked objects:
 14516 ;;		On entry : 3F/0
 14517 ;;		On exit  : 3B/39
 14518 ;;		Unchanged: 0/0
 14519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14524 ;;Total ram usage:        0 bytes
 14525 ;; Hardware stack levels used: 1
 14526 ;; This function calls:
 14527 ;;		Nothing
 14528 ;; This function is called by:
 14529 ;;		_UART1_Initialize
 14530 ;;		_UART1_tx_vect_isr
 14531 ;; This function uses a non-reentrant model
 14532 ;;
 14533                           
 14534                           	psect	text82
 14535  005A68                     __ptext82:
 14536                           	callstack 0
 14537  005A68                     _UART1_Transmit_ISR:
 14538                           	callstack 18
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 14542                           
 14543                           ;incstack = 0
 14544  005A68  0E40               	movlw	64
 14545  005A6A  6049               	cpfslt	_uart1TxBufferRemaining^0,c
 14546  005A6C  D011               	goto	i2l640
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 14550  005A6E  0E40               	movlw	low _uart1TxBuffer
 14551  005A70  244A               	addwf	_uart1TxTail^0,w,c	;volatile
 14552  005A72  6ED9               	movwf	fsr2l,c
 14553  005A74  6ADA               	clrf	fsr2h,c
 14554  005A76  0E01               	movlw	high _uart1TxBuffer
 14555  005A78  22DA               	addwfc	fsr2h,f,c
 14556  005A7A  50DF               	movf	indf2,w,c
 14557  005A7C  013D               	movlb	61	; () banked
 14558  005A7E  6FEA               	movwf	234,b	;volatile
 14559                           
 14560                           ; BSR set to: 61
 14561  005A80  2A4A               	incf	_uart1TxTail^0,f,c	;volatile
 14562                           
 14563                           ; BSR set to: 61
 14564                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 14565  005A82  0E3F               	movlw	63
 14566  005A84  644A               	cpfsgt	_uart1TxTail^0,c
 14567  005A86  D002               	goto	i2l6208
 14568                           
 14569                           ; BSR set to: 61
 14570                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 14571  005A88  0E00               	movlw	0
 14572  005A8A  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 14573  005A8C                     i2l6208:
 14574                           
 14575                           ; BSR set to: 61
 14576                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 14577  005A8C  2A49               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 14578                           
 14579                           ;mcc_generated_files/uart1.c: 264:     }
 14580  005A8E  0012               	return	
 14581  005A90                     i2l640:
 14582                           
 14583                           ; BSR set to: 0
 14584                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 14585  005A90  0139               	movlb	57	; () banked
 14586  005A92  9993               	bcf	147,4,b	;volatile
 14587  005A94  0012               	return		;funcret
 14588  005A96                     __end_of_UART1_Transmit_ISR:
 14589                           	callstack 0
 14590                           
 14591 ;; *************** function _UART1_rx_vect_isr *****************
 14592 ;; Defined at:
 14593 ;;		line 243 in file "mcc_generated_files/uart1.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;		None
 14596 ;; Auto vars:     Size  Location     Type
 14597 ;;		None
 14598 ;; Return value:  Size  Location     Type
 14599 ;;                  1    wreg      void 
 14600 ;; Registers used:
 14601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14602 ;; Tracked objects:
 14603 ;;		On entry : 0/0
 14604 ;;		On exit  : 0/0
 14605 ;;		Unchanged: 0/0
 14606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14611 ;;Total ram usage:        2 bytes
 14612 ;; Hardware stack levels used: 1
 14613 ;; Hardware stack levels required when called: 3
 14614 ;; This function calls:
 14615 ;;		Absolute function
 14616 ;;		_UART1_Receive_ISR
 14617 ;; This function is called by:
 14618 ;;		Interrupt level 2
 14619 ;; This function uses a non-reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text83
 14623  005878                     __ptext83:
 14624                           	callstack 0
 14625  005878                     _UART1_rx_vect_isr:
 14626                           	callstack 16
 14627                           
 14628                           ;incstack = 0
 14629  005878  006F FFE8  F00D    	movff	pclath,??_UART1_rx_vect_isr
 14630  00587E  006F FFEC  F00E    	movff	pclatu,??_UART1_rx_vect_isr+1
 14631                           
 14632                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 14633  005884  0100               	movlb	0	; () banked
 14634  005886  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14635  005888  11F3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14636  00588A  11F4               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14637  00588C  B4D8               	btfsc	status,2,c
 14638  00588E  D00C               	goto	i2u635_49
 14639                           
 14640                           ; BSR set to: 0
 14641                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 14642  005890  D801               	call	i2u635_48
 14643  005892  D00A               	goto	i2u635_49
 14644  005894                     i2u635_48:
 14645  005894  0005               	push	
 14646  005896  6EFA               	movwf	pclath,c
 14647  005898  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14648  00589A  6EFD               	movwf	tosl,c
 14649  00589C  51F3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14650  00589E  6EFE               	movwf	tosh,c
 14651  0058A0  51F4               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14652  0058A2  6EFF               	movwf	tosu,c
 14653  0058A4  50FA               	movf	pclath,w,c
 14654  0058A6  0012               	return		;indir
 14655  0058A8                     i2u635_49:
 14656  0058A8  0060  F03B  FFFB   	movff	??_UART1_rx_vect_isr+1,pclatu
 14657  0058AE  0060  F037  FFFA   	movff	??_UART1_rx_vect_isr,pclath
 14658  0058B4  0011               	retfie		f
 14659  0058B6                     __end_of_UART1_rx_vect_isr:
 14660                           	callstack 0
 14661                           
 14662 ;; *************** function _UART1_Receive_ISR *****************
 14663 ;; Defined at:
 14664 ;;		line 273 in file "mcc_generated_files/uart1.c"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;		None
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;		None
 14669 ;; Return value:  Size  Location     Type
 14670 ;;                  1    wreg      void 
 14671 ;; Registers used:
 14672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14673 ;; Tracked objects:
 14674 ;;		On entry : 3F/0
 14675 ;;		On exit  : 0/0
 14676 ;;		Unchanged: 0/0
 14677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14682 ;;Total ram usage:        0 bytes
 14683 ;; Hardware stack levels used: 1
 14684 ;; Hardware stack levels required when called: 2
 14685 ;; This function calls:
 14686 ;;		Absolute function
 14687 ;;		_UART1_DefaultErrorHandler
 14688 ;;		_UART1_DefaultFramingErrorHandler
 14689 ;;		_UART1_DefaultOverrunErrorHandler
 14690 ;;		_UART1_RxDataHandler
 14691 ;; This function is called by:
 14692 ;;		_UART1_Initialize
 14693 ;;		_UART1_rx_vect_isr
 14694 ;; This function uses a non-reentrant model
 14695 ;;
 14696                           
 14697                           	psect	text84
 14698  005010                     __ptext84:
 14699                           	callstack 0
 14700  005010                     _UART1_Receive_ISR:
 14701                           	callstack 16
 14702                           
 14703                           ; BSR set to: 0
 14704                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 14705                           
 14706                           ;incstack = 0
 14707  005010  0E00               	movlw	low _uart1RxStatusBuffer
 14708  005012  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14709  005014  6ED9               	movwf	fsr2l,c
 14710  005016  6ADA               	clrf	fsr2h,c
 14711  005018  0E01               	movlw	high _uart1RxStatusBuffer
 14712  00501A  22DA               	addwfc	fsr2h,f,c
 14713  00501C  0E00               	movlw	0
 14714  00501E  6EDF               	movwf	indf2,c
 14715                           
 14716                           ; BSR set to: 0
 14717                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 14718  005020  013D               	movlb	61	; () banked
 14719  005022  A7F9               	btfss	249,3,b	;volatile
 14720  005024  D015               	goto	i2u607_49
 14721                           
 14722                           ; BSR set to: 61
 14723                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 14724  005026  0E00               	movlw	low _uart1RxStatusBuffer
 14725  005028  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14726  00502A  6ED9               	movwf	fsr2l,c
 14727  00502C  6ADA               	clrf	fsr2h,c
 14728  00502E  0E01               	movlw	high _uart1RxStatusBuffer
 14729  005030  22DA               	addwfc	fsr2h,f,c
 14730  005032  0101               	movlb	1	; () banked
 14731  005034  82DF               	bsf	indf2,1,c
 14732                           
 14733                           ; BSR set to: 1
 14734                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 14735  005036  D801               	call	i2u607_48
 14736  005038  D00B               	goto	i2u607_49
 14737  00503A                     i2u607_48:
 14738  00503A  0005               	push	
 14739  00503C  6EFA               	movwf	pclath,c
 14740  00503E  0100               	movlb	0	; () banked
 14741  005040  51E6               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 14742  005042  6EFD               	movwf	tosl,c
 14743  005044  51E7               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 14744  005046  6EFE               	movwf	tosh,c
 14745  005048  51E8               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 14746  00504A  6EFF               	movwf	tosu,c
 14747  00504C  50FA               	movf	pclath,w,c
 14748  00504E  0012               	return		;indir
 14749  005050                     i2u607_49:
 14750                           
 14751                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 14752  005050  013D               	movlb	61	; () banked
 14753  005052  A3F9               	btfss	249,1,b	;volatile
 14754  005054  D015               	goto	i2u609_49
 14755                           
 14756                           ; BSR set to: 61
 14757                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 14758  005056  0E00               	movlw	low _uart1RxStatusBuffer
 14759  005058  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14760  00505A  6ED9               	movwf	fsr2l,c
 14761  00505C  6ADA               	clrf	fsr2h,c
 14762  00505E  0E01               	movlw	high _uart1RxStatusBuffer
 14763  005060  22DA               	addwfc	fsr2h,f,c
 14764  005062  0101               	movlb	1	; () banked
 14765  005064  84DF               	bsf	indf2,2,c
 14766                           
 14767                           ; BSR set to: 1
 14768                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 14769  005066  D801               	call	i2u609_48
 14770  005068  D00B               	goto	i2u609_49
 14771  00506A                     i2u609_48:
 14772  00506A  0005               	push	
 14773  00506C  6EFA               	movwf	pclath,c
 14774  00506E  0100               	movlb	0	; () banked
 14775  005070  51E3               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 14776  005072  6EFD               	movwf	tosl,c
 14777  005074  51E4               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 14778  005076  6EFE               	movwf	tosh,c
 14779  005078  51E5               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 14780  00507A  6EFF               	movwf	tosu,c
 14781  00507C  50FA               	movf	pclath,w,c
 14782  00507E  0012               	return		;indir
 14783  005080                     i2u609_49:
 14784                           
 14785                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 14786  005080  0E00               	movlw	low _uart1RxStatusBuffer
 14787  005082  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14788  005084  6ED9               	movwf	fsr2l,c
 14789  005086  6ADA               	clrf	fsr2h,c
 14790  005088  0E01               	movlw	high _uart1RxStatusBuffer
 14791  00508A  22DA               	addwfc	fsr2h,f,c
 14792  00508C  50DF               	movf	indf2,w,c
 14793  00508E  B4D8               	btfsc	status,2,c
 14794  005090  D00D               	goto	i2l6228
 14795                           
 14796                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 14797  005092  D801               	call	i2u611_48
 14798  005094  0012               	return	
 14799  005096                     i2u611_48:
 14800  005096  0005               	push	
 14801  005098  6EFA               	movwf	pclath,c
 14802  00509A  0100               	movlb	0	; () banked
 14803  00509C  51E0               	movf	_UART1_ErrorHandler& (0+255),w,b
 14804  00509E  6EFD               	movwf	tosl,c
 14805  0050A0  51E1               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 14806  0050A2  6EFE               	movwf	tosh,c
 14807  0050A4  51E2               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 14808  0050A6  6EFF               	movwf	tosu,c
 14809  0050A8  50FA               	movf	pclath,w,c
 14810  0050AA  0012               	return		;indir
 14811  0050AC                     i2l6228:
 14812                           
 14813                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 14814  0050AC  ECF5  F02D         	call	_UART1_RxDataHandler	;wreg free
 14815  0050B0  0012               	return		;funcret
 14816  0050B2                     __end_of_UART1_Receive_ISR:
 14817                           	callstack 0
 14818                           
 14819 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 14820 ;; Defined at:
 14821 ;;		line 309 in file "mcc_generated_files/uart1.c"
 14822 ;; Parameters:    Size  Location     Type
 14823 ;;		None
 14824 ;; Auto vars:     Size  Location     Type
 14825 ;;		None
 14826 ;; Return value:  Size  Location     Type
 14827 ;;                  1    wreg      void 
 14828 ;; Registers used:
 14829 ;;		None
 14830 ;; Tracked objects:
 14831 ;;		On entry : 3F/0
 14832 ;;		On exit  : 3F/0
 14833 ;;		Unchanged: 3F/0
 14834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14839 ;;Total ram usage:        0 bytes
 14840 ;; Hardware stack levels used: 1
 14841 ;; This function calls:
 14842 ;;		Nothing
 14843 ;; This function is called by:
 14844 ;;		_UART1_Initialize
 14845 ;;		_UART1_Receive_ISR
 14846 ;; This function uses a non-reentrant model
 14847 ;;
 14848                           
 14849                           	psect	text85
 14850  005D96                     __ptext85:
 14851                           	callstack 0
 14852  005D96                     _UART1_DefaultOverrunErrorHandler:
 14853                           	callstack 17
 14854                           
 14855                           ; BSR set to: 0
 14856                           
 14857                           ;incstack = 0
 14858  005D96  0012               	return		;funcret
 14859  005D98                     __end_of_UART1_DefaultOverrunErrorHandler:
 14860                           	callstack 0
 14861                           
 14862 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 14863 ;; Defined at:
 14864 ;;		line 307 in file "mcc_generated_files/uart1.c"
 14865 ;; Parameters:    Size  Location     Type
 14866 ;;		None
 14867 ;; Auto vars:     Size  Location     Type
 14868 ;;		None
 14869 ;; Return value:  Size  Location     Type
 14870 ;;                  1    wreg      void 
 14871 ;; Registers used:
 14872 ;;		None
 14873 ;; Tracked objects:
 14874 ;;		On entry : 3F/0
 14875 ;;		On exit  : 3F/0
 14876 ;;		Unchanged: 3F/0
 14877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14882 ;;Total ram usage:        0 bytes
 14883 ;; Hardware stack levels used: 1
 14884 ;; This function calls:
 14885 ;;		Nothing
 14886 ;; This function is called by:
 14887 ;;		_UART1_Initialize
 14888 ;;		_UART1_Receive_ISR
 14889 ;; This function uses a non-reentrant model
 14890 ;;
 14891                           
 14892                           	psect	text86
 14893  005D98                     __ptext86:
 14894                           	callstack 0
 14895  005D98                     _UART1_DefaultFramingErrorHandler:
 14896                           	callstack 17
 14897                           
 14898                           ; BSR set to: 0
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;incstack = 0
 14902  005D98  0012               	return		;funcret
 14903  005D9A                     __end_of_UART1_DefaultFramingErrorHandler:
 14904                           	callstack 0
 14905                           
 14906 ;; *************** function _UART1_DefaultErrorHandler *****************
 14907 ;; Defined at:
 14908 ;;		line 311 in file "mcc_generated_files/uart1.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;		None
 14911 ;; Auto vars:     Size  Location     Type
 14912 ;;		None
 14913 ;; Return value:  Size  Location     Type
 14914 ;;                  1    wreg      void 
 14915 ;; Registers used:
 14916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14917 ;; Tracked objects:
 14918 ;;		On entry : 3F/0
 14919 ;;		On exit  : 0/0
 14920 ;;		Unchanged: 0/0
 14921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14926 ;;Total ram usage:        0 bytes
 14927 ;; Hardware stack levels used: 1
 14928 ;; Hardware stack levels required when called: 1
 14929 ;; This function calls:
 14930 ;;		_UART1_RxDataHandler
 14931 ;; This function is called by:
 14932 ;;		_UART1_Initialize
 14933 ;;		_UART1_Receive_ISR
 14934 ;; This function uses a non-reentrant model
 14935 ;;
 14936                           
 14937                           	psect	text87
 14938  005D88                     __ptext87:
 14939                           	callstack 0
 14940  005D88                     _UART1_DefaultErrorHandler:
 14941                           	callstack 16
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 14945                           
 14946                           ; BSR set to: 0
 14947                           ;incstack = 0
 14948  005D88  ECF5  F02D         	call	_UART1_RxDataHandler	;wreg free
 14949  005D8C  0012               	return		;funcret
 14950  005D8E                     __end_of_UART1_DefaultErrorHandler:
 14951                           	callstack 0
 14952                           
 14953 ;; *************** function _UART1_RxDataHandler *****************
 14954 ;; Defined at:
 14955 ;;		line 297 in file "mcc_generated_files/uart1.c"
 14956 ;; Parameters:    Size  Location     Type
 14957 ;;		None
 14958 ;; Auto vars:     Size  Location     Type
 14959 ;;		None
 14960 ;; Return value:  Size  Location     Type
 14961 ;;                  1    wreg      void 
 14962 ;; Registers used:
 14963 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14964 ;; Tracked objects:
 14965 ;;		On entry : 0/3D
 14966 ;;		On exit  : 0/0
 14967 ;;		Unchanged: 0/0
 14968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14973 ;;Total ram usage:        0 bytes
 14974 ;; Hardware stack levels used: 1
 14975 ;; This function calls:
 14976 ;;		Nothing
 14977 ;; This function is called by:
 14978 ;;		_UART1_Receive_ISR
 14979 ;;		_UART1_DefaultErrorHandler
 14980 ;; This function uses a non-reentrant model
 14981 ;;
 14982                           
 14983                           	psect	text88
 14984  005BEA                     __ptext88:
 14985                           	callstack 0
 14986  005BEA                     _UART1_RxDataHandler:
 14987                           	callstack 17
 14988                           
 14989                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 14990                           
 14991                           ;incstack = 0
 14992  005BEA  0E00               	movlw	low _uart1RxBuffer
 14993  005BEC  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14994  005BEE  6ED9               	movwf	fsr2l,c
 14995  005BF0  6ADA               	clrf	fsr2h,c
 14996  005BF2  0E02               	movlw	high _uart1RxBuffer
 14997  005BF4  22DA               	addwfc	fsr2h,f,c
 14998  005BF6  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 14999  005BFC  2A48               	incf	_uart1RxHead^0,f,c	;volatile
 15000                           
 15001                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15002  005BFE  0E3F               	movlw	63
 15003  005C00  6448               	cpfsgt	_uart1RxHead^0,c
 15004  005C02  D002               	goto	i2l5922
 15005                           
 15006                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15007  005C04  0E00               	movlw	0
 15008  005C06  6E48               	movwf	_uart1RxHead^0,c	;volatile
 15009  005C08                     i2l5922:
 15010                           
 15011                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15012  005C08  2A46               	incf	_uart1RxCount^0,f,c	;volatile
 15013  005C0A  0012               	return		;funcret
 15014  005C0C                     __end_of_UART1_RxDataHandler:
 15015                           	callstack 0
 15016                           
 15017 ;; *************** function _TMR5_ISR *****************
 15018 ;; Defined at:
 15019 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;		None
 15022 ;; Auto vars:     Size  Location     Type
 15023 ;;		None
 15024 ;; Return value:  Size  Location     Type
 15025 ;;                  1    wreg      void 
 15026 ;; Registers used:
 15027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15028 ;; Tracked objects:
 15029 ;;		On entry : 0/0
 15030 ;;		On exit  : 0/0
 15031 ;;		Unchanged: 0/0
 15032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15037 ;;Total ram usage:        2 bytes
 15038 ;; Hardware stack levels used: 1
 15039 ;; Hardware stack levels required when called: 1
 15040 ;; This function calls:
 15041 ;;		Absolute function
 15042 ;;		_TMR5_DefaultInterruptHandler
 15043 ;;		_TMR5_WriteTimer
 15044 ;;		_Timers_Isr
 15045 ;; This function is called by:
 15046 ;;		Interrupt level 2
 15047 ;; This function uses a non-reentrant model
 15048 ;;
 15049                           
 15050                           	psect	text89
 15051  00560C                     __ptext89:
 15052                           	callstack 0
 15053  00560C                     _TMR5_ISR:
 15054                           	callstack 18
 15055                           
 15056                           ;incstack = 0
 15057  00560C  006F FFE8  F013    	movff	pclath,??_TMR5_ISR
 15058  005612  006F FFEC  F014    	movff	pclatu,??_TMR5_ISR+1
 15059                           
 15060                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 15061  005618  0139               	movlb	57	; () banked
 15062  00561A  9DA8               	bcf	168,6,b	;volatile
 15063                           
 15064                           ; BSR set to: 57
 15065                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 15066  00561C  C03F  F00F         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 15067  005620  C040  F010         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 15068  005624  ECC1  F02D         	call	_TMR5_WriteTimer	;wreg free
 15069                           
 15070                           ; BSR set to: 57
 15071                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 15072  005628  0100               	movlb	0	; () banked
 15073  00562A  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 15074  00562C  11DE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 15075  00562E  11DF               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 15076  005630  B4D8               	btfsc	status,2,c
 15077  005632  D00C               	goto	i2u637_49
 15078                           
 15079                           ; BSR set to: 0
 15080                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 15081  005634  D801               	call	i2u637_48
 15082  005636  D00A               	goto	i2u637_49
 15083  005638                     i2u637_48:
 15084  005638  0005               	push	
 15085  00563A  6EFA               	movwf	pclath,c
 15086  00563C  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 15087  00563E  6EFD               	movwf	tosl,c
 15088  005640  51DE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 15089  005642  6EFE               	movwf	tosh,c
 15090  005644  51DF               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 15091  005646  6EFF               	movwf	tosu,c
 15092  005648  50FA               	movf	pclath,w,c
 15093  00564A  0012               	return		;indir
 15094  00564C                     i2u637_49:
 15095  00564C  0060  F053  FFFB   	movff	??_TMR5_ISR+1,pclatu
 15096  005652  0060  F04F  FFFA   	movff	??_TMR5_ISR,pclath
 15097  005658  0011               	retfie		f
 15098  00565A                     __end_of_TMR5_ISR:
 15099                           	callstack 0
 15100                           
 15101 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15102 ;; Defined at:
 15103 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 15104 ;; Parameters:    Size  Location     Type
 15105 ;;		None
 15106 ;; Auto vars:     Size  Location     Type
 15107 ;;		None
 15108 ;; Return value:  Size  Location     Type
 15109 ;;                  1    wreg      void 
 15110 ;; Registers used:
 15111 ;;		None
 15112 ;; Tracked objects:
 15113 ;;		On entry : 3F/0
 15114 ;;		On exit  : 3F/0
 15115 ;;		Unchanged: 3F/0
 15116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15121 ;;Total ram usage:        0 bytes
 15122 ;; Hardware stack levels used: 1
 15123 ;; This function calls:
 15124 ;;		Nothing
 15125 ;; This function is called by:
 15126 ;;		_TMR5_Initialize
 15127 ;;		_TMR5_ISR
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           	psect	text90
 15132  005D9A                     __ptext90:
 15133                           	callstack 0
 15134  005D9A                     _TMR5_DefaultInterruptHandler:
 15135                           	callstack 18
 15136                           
 15137                           ; BSR set to: 0
 15138                           
 15139                           ;incstack = 0
 15140  005D9A  0012               	return		;funcret
 15141  005D9C                     __end_of_TMR5_DefaultInterruptHandler:
 15142                           	callstack 0
 15143                           
 15144 ;; *************** function _Timers_Isr *****************
 15145 ;; Defined at:
 15146 ;;		line 48 in file "timers.c"
 15147 ;; Parameters:    Size  Location     Type
 15148 ;;		None
 15149 ;; Auto vars:     Size  Location     Type
 15150 ;;  i               2   16[COMRAM] int 
 15151 ;; Return value:  Size  Location     Type
 15152 ;;                  1    wreg      void 
 15153 ;; Registers used:
 15154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15155 ;; Tracked objects:
 15156 ;;		On entry : 3F/0
 15157 ;;		On exit  : 3F/0
 15158 ;;		Unchanged: 3F/0
 15159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15163 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15164 ;;Total ram usage:        4 bytes
 15165 ;; Hardware stack levels used: 1
 15166 ;; This function calls:
 15167 ;;		Nothing
 15168 ;; This function is called by:
 15169 ;;		_main
 15170 ;;		_TMR5_ISR
 15171 ;; This function uses a non-reentrant model
 15172 ;;
 15173                           
 15174                           	psect	text91
 15175  00556A                     __ptext91:
 15176                           	callstack 0
 15177  00556A                     _Timers_Isr:
 15178                           	callstack 18
 15179                           
 15180                           ; BSR set to: 0
 15181                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 15182                           
 15183                           ; BSR set to: 0
 15184                           ;incstack = 0
 15185  00556A  0E00               	movlw	0
 15186  00556C  6E12               	movwf	(Timers_Isr@i+1)^0,c
 15187  00556E  0E00               	movlw	0
 15188  005570  6E11               	movwf	Timers_Isr@i^0,c
 15189  005572                     i2l6300:
 15190                           
 15191                           ; BSR set to: 0
 15192                           ;timers.c: 52:   if (tickCount[i] != 0) {
 15193  005572  90D8               	bcf	status,0,c
 15194  005574  3411               	rlcf	Timers_Isr@i^0,w,c
 15195  005576  6ED9               	movwf	fsr2l,c
 15196  005578  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15197  00557A  6EDA               	movwf	fsr2h,c
 15198  00557C  0E80               	movlw	low _tickCount
 15199  00557E  26D9               	addwf	fsr2l,f,c
 15200  005580  0E01               	movlw	high _tickCount
 15201  005582  22DA               	addwfc	fsr2h,f,c
 15202  005584  50DE               	movf	postinc2,w,c
 15203  005586  10DE               	iorwf	postinc2,w,c
 15204  005588  B4D8               	btfsc	status,2,c
 15205  00558A  D00C               	goto	i2l6304
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;timers.c: 53:    tickCount[i]--;
 15209  00558C  90D8               	bcf	status,0,c
 15210  00558E  3411               	rlcf	Timers_Isr@i^0,w,c
 15211  005590  6ED9               	movwf	fsr2l,c
 15212  005592  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15213  005594  6EDA               	movwf	fsr2h,c
 15214  005596  0E80               	movlw	low _tickCount
 15215  005598  26D9               	addwf	fsr2l,f,c
 15216  00559A  0E01               	movlw	high _tickCount
 15217  00559C  22DA               	addwfc	fsr2h,f,c
 15218  00559E  06DE               	decf	postinc2,f,c
 15219  0055A0  0E00               	movlw	0
 15220  0055A2  5ADD               	subwfb	postdec2,f,c
 15221  0055A4                     i2l6304:
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;timers.c: 55:  }
 15225  0055A4  4A11               	infsnz	Timers_Isr@i^0,f,c
 15226  0055A6  2A12               	incf	(Timers_Isr@i+1)^0,f,c
 15227                           
 15228                           ; BSR set to: 0
 15229  0055A8  BE12               	btfsc	(Timers_Isr@i+1)^0,7,c
 15230  0055AA  D7E3               	goto	i2l6300
 15231  0055AC  5012               	movf	(Timers_Isr@i+1)^0,w,c
 15232  0055AE  E105               	bnz	i2u618_40
 15233  0055B0  0E06               	movlw	6
 15234  0055B2  5C11               	subwf	Timers_Isr@i^0,w,c
 15235  0055B4  B0D8               	btfsc	status,0,c
 15236  0055B6  0012               	return	
 15237  0055B8  D7DC               	goto	i2l6300
 15238  0055BA                     i2u618_40:
 15239                           
 15240                           ; BSR set to: 0
 15241  0055BA  0012               	return		;funcret
 15242  0055BC                     __end_of_Timers_Isr:
 15243                           	callstack 0
 15244                           
 15245 ;; *************** function _TMR5_WriteTimer *****************
 15246 ;; Defined at:
 15247 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 15248 ;; Parameters:    Size  Location     Type
 15249 ;;  timerVal        2   14[COMRAM] unsigned short 
 15250 ;; Auto vars:     Size  Location     Type
 15251 ;;		None
 15252 ;; Return value:  Size  Location     Type
 15253 ;;                  1    wreg      void 
 15254 ;; Registers used:
 15255 ;;		None
 15256 ;; Tracked objects:
 15257 ;;		On entry : 3F/39
 15258 ;;		On exit  : 3F/39
 15259 ;;		Unchanged: 3E/0
 15260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15265 ;;Total ram usage:        2 bytes
 15266 ;; Hardware stack levels used: 1
 15267 ;; This function calls:
 15268 ;;		Nothing
 15269 ;; This function is called by:
 15270 ;;		_TMR5_ISR
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274                           	psect	text92
 15275  005B82                     __ptext92:
 15276                           	callstack 0
 15277  005B82                     _TMR5_WriteTimer:
 15278                           	callstack 18
 15279                           
 15280                           ; BSR set to: 57
 15281                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 15282                           
 15283                           ; BSR set to: 0
 15284                           ;incstack = 0
 15285  005B82  A49A               	btfss	154,2,c	;volatile
 15286  005B84  D009               	goto	i2l721
 15287                           
 15288                           ; BSR set to: 57
 15289                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 15290  005B86  909A               	bcf	154,0,c	;volatile
 15291                           
 15292                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 15293  005B88  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15294                           
 15295                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 15296  005B8E  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15297                           
 15298                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 15299  005B94  809A               	bsf	154,0,c	;volatile
 15300                           
 15301                           ;mcc_generated_files/tmr5.c: 141:     }
 15302  005B96  0012               	return	
 15303  005B98                     i2l721:
 15304                           
 15305                           ; BSR set to: 57
 15306                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 15307  005B98  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15308                           
 15309                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 15310  005B9E  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15311                           
 15312                           ; BSR set to: 57
 15313  005BA4  0012               	return		;funcret
 15314  005BA6                     __end_of_TMR5_WriteTimer:
 15315                           	callstack 0
 15316                           
 15317                           ;
 15318                           ; Interrupt Vector Table @ 0x8
 15319                           ;
 15320                           
 15321                           	psect	ivt0x8
 15322  000008                     __pivt0x8:
 15323                           	callstack 0
 15324  000008                     ivt0x8_base:
 15325                           	callstack 0
 15326                           
 15327                           ; Vector 0 : SWINT
 15328  000008  1765               	dw	_Default_ISR shr (0+2)
 15329                           
 15330                           ; Vector 1 : HLVD
 15331  00000A  1765               	dw	_Default_ISR shr (0+2)
 15332                           
 15333                           ; Vector 2 : OSF
 15334  00000C  1765               	dw	_Default_ISR shr (0+2)
 15335                           
 15336                           ; Vector 3 : CSW
 15337  00000E  1765               	dw	_Default_ISR shr (0+2)
 15338                           
 15339                           ; Vector 4 : NVM
 15340  000010  1765               	dw	_Default_ISR shr (0+2)
 15341                           
 15342                           ; Vector 5 : SCAN
 15343  000012  1765               	dw	_Default_ISR shr (0+2)
 15344                           
 15345                           ; Vector 6 : CRC
 15346  000014  1765               	dw	_Default_ISR shr (0+2)
 15347                           
 15348                           ; Vector 7 : IOC
 15349  000016  1765               	dw	_Default_ISR shr (0+2)
 15350                           
 15351                           ; Vector 8 : INT0
 15352  000018  1765               	dw	_Default_ISR shr (0+2)
 15353                           
 15354                           ; Vector 9 : ZCD
 15355  00001A  1765               	dw	_Default_ISR shr (0+2)
 15356                           
 15357                           ; Vector 10 : AD
 15358  00001C  15DE               	dw	_ADCC_ISR shr (0+2)
 15359                           
 15360                           ; Vector 11 : ADT
 15361  00001E  1765               	dw	_Default_ISR shr (0+2)
 15362                           
 15363                           ; Vector 12 : CMP1
 15364  000020  1765               	dw	_Default_ISR shr (0+2)
 15365                           
 15366                           ; Vector 13 : SMT1
 15367  000022  1765               	dw	_Default_ISR shr (0+2)
 15368                           
 15369                           ; Vector 14 : SMT1PRA
 15370  000024  1765               	dw	_Default_ISR shr (0+2)
 15371                           
 15372                           ; Vector 15 : SMT1PRW
 15373  000026  1765               	dw	_Default_ISR shr (0+2)
 15374                           
 15375                           ; Vector 16 : DMA1SCNT
 15376  000028  1765               	dw	_Default_ISR shr (0+2)
 15377                           
 15378                           ; Vector 17 : DMA1DCNT
 15379  00002A  1765               	dw	_Default_ISR shr (0+2)
 15380                           
 15381                           ; Vector 18 : DMA1OR
 15382  00002C  1765               	dw	_Default_ISR shr (0+2)
 15383                           
 15384                           ; Vector 19 : DMA1A
 15385  00002E  1765               	dw	_Default_ISR shr (0+2)
 15386                           
 15387                           ; Vector 20 : SPI1RX
 15388  000030  1765               	dw	_Default_ISR shr (0+2)
 15389                           
 15390                           ; Vector 21 : SPI1TX
 15391  000032  1765               	dw	_Default_ISR shr (0+2)
 15392                           
 15393                           ; Vector 22 : SPI1
 15394  000034  1765               	dw	_Default_ISR shr (0+2)
 15395                           
 15396                           ; Vector 23 : I2C1RX
 15397  000036  1765               	dw	_Default_ISR shr (0+2)
 15398                           
 15399                           ; Vector 24 : I2C1TX
 15400  000038  1765               	dw	_Default_ISR shr (0+2)
 15401                           
 15402                           ; Vector 25 : I2C1
 15403  00003A  1765               	dw	_Default_ISR shr (0+2)
 15404                           
 15405                           ; Vector 26 : I2C1E
 15406  00003C  1765               	dw	_Default_ISR shr (0+2)
 15407                           
 15408                           ; Vector 27 : U1RX
 15409  00003E  161E               	dw	_UART1_rx_vect_isr shr (0+2)
 15410                           
 15411                           ; Vector 28 : U1TX
 15412  000040  160E               	dw	_UART1_tx_vect_isr shr (0+2)
 15413                           
 15414                           ; Vector 29 : U1E
 15415  000042  1765               	dw	_Default_ISR shr (0+2)
 15416                           
 15417                           ; Vector 30 : U1
 15418  000044  1765               	dw	_Default_ISR shr (0+2)
 15419                           
 15420                           ; Vector 31 : TMR0
 15421  000046  1765               	dw	_Default_ISR shr (0+2)
 15422                           
 15423                           ; Vector 32 : TMR1
 15424  000048  1765               	dw	_Default_ISR shr (0+2)
 15425                           
 15426                           ; Vector 33 : TMR1G
 15427  00004A  1765               	dw	_Default_ISR shr (0+2)
 15428                           
 15429                           ; Vector 34 : TMR2
 15430  00004C  1765               	dw	_Default_ISR shr (0+2)
 15431                           
 15432                           ; Vector 35 : CCP1
 15433  00004E  1765               	dw	_Default_ISR shr (0+2)
 15434                           
 15435                           ; Vector 36 : Undefined
 15436  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15437                           
 15438                           ; Vector 37 : NCO1
 15439  000052  1765               	dw	_Default_ISR shr (0+2)
 15440                           
 15441                           ; Vector 38 : CWG1
 15442  000054  1765               	dw	_Default_ISR shr (0+2)
 15443                           
 15444                           ; Vector 39 : CLC1
 15445  000056  1765               	dw	_Default_ISR shr (0+2)
 15446                           
 15447                           ; Vector 40 : INT1
 15448  000058  1765               	dw	_Default_ISR shr (0+2)
 15449                           
 15450                           ; Vector 41 : CMP2
 15451  00005A  1765               	dw	_Default_ISR shr (0+2)
 15452                           
 15453                           ; Vector 42 : DMA2SCNT
 15454  00005C  1765               	dw	_Default_ISR shr (0+2)
 15455                           
 15456                           ; Vector 43 : DMA2DCNT
 15457  00005E  1765               	dw	_Default_ISR shr (0+2)
 15458                           
 15459                           ; Vector 44 : DMA2OR
 15460  000060  1765               	dw	_Default_ISR shr (0+2)
 15461                           
 15462                           ; Vector 45 : DMA2A
 15463  000062  1765               	dw	_Default_ISR shr (0+2)
 15464                           
 15465                           ; Vector 46 : I2C2RX
 15466  000064  1765               	dw	_Default_ISR shr (0+2)
 15467                           
 15468                           ; Vector 47 : I2C2TX
 15469  000066  1765               	dw	_Default_ISR shr (0+2)
 15470                           
 15471                           ; Vector 48 : I2C2
 15472  000068  1765               	dw	_Default_ISR shr (0+2)
 15473                           
 15474                           ; Vector 49 : I2C2E
 15475  00006A  1765               	dw	_Default_ISR shr (0+2)
 15476                           
 15477                           ; Vector 50 : U2RX
 15478  00006C  1765               	dw	_Default_ISR shr (0+2)
 15479                           
 15480                           ; Vector 51 : U2TX
 15481  00006E  1765               	dw	_Default_ISR shr (0+2)
 15482                           
 15483                           ; Vector 52 : U2E
 15484  000070  1765               	dw	_Default_ISR shr (0+2)
 15485                           
 15486                           ; Vector 53 : U2
 15487  000072  1765               	dw	_Default_ISR shr (0+2)
 15488                           
 15489                           ; Vector 54 : TMR3
 15490  000074  1765               	dw	_Default_ISR shr (0+2)
 15491                           
 15492                           ; Vector 55 : TMR3G
 15493  000076  1765               	dw	_Default_ISR shr (0+2)
 15494                           
 15495                           ; Vector 56 : TMR4
 15496  000078  1765               	dw	_Default_ISR shr (0+2)
 15497                           
 15498                           ; Vector 57 : CCP2
 15499  00007A  1765               	dw	_Default_ISR shr (0+2)
 15500                           
 15501                           ; Vector 58 : Undefined
 15502  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15503                           
 15504                           ; Vector 59 : CWG2
 15505  00007E  1765               	dw	_Default_ISR shr (0+2)
 15506                           
 15507                           ; Vector 60 : CLC2
 15508  000080  1765               	dw	_Default_ISR shr (0+2)
 15509                           
 15510                           ; Vector 61 : INT2
 15511  000082  1765               	dw	_Default_ISR shr (0+2)
 15512                           
 15513                           ; Vector 62 : Undefined
 15514  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15515                           
 15516                           ; Vector 63 : Undefined
 15517  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15518                           
 15519                           ; Vector 64 : Undefined
 15520  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15521                           
 15522                           ; Vector 65 : Undefined
 15523  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15524                           
 15525                           ; Vector 66 : Undefined
 15526  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15527                           
 15528                           ; Vector 67 : Undefined
 15529  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15530                           
 15531                           ; Vector 68 : Undefined
 15532  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15533                           
 15534                           ; Vector 69 : Undefined
 15535  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15536                           
 15537                           ; Vector 70 : TMR5
 15538  000094  1583               	dw	_TMR5_ISR shr (0+2)
 15539                           
 15540                           ; Vector 71 : TMR5G
 15541  000096  1765               	dw	_Default_ISR shr (0+2)
 15542                           
 15543                           ; Vector 72 : TMR6
 15544  000098  1668               	dw	_TMR6_ISR shr (0+2)
 15545                           
 15546                           ; Vector 73 : CCP3
 15547  00009A  1765               	dw	_Default_ISR shr (0+2)
 15548                           
 15549                           ; Vector 74 : CWG3
 15550  00009C  1765               	dw	_Default_ISR shr (0+2)
 15551                           
 15552                           ; Vector 75 : CLC3
 15553  00009E  1765               	dw	_Default_ISR shr (0+2)
 15554                           
 15555                           ; Vector 76 : Undefined
 15556  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15557                           
 15558                           ; Vector 77 : Undefined
 15559  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15560                           
 15561                           ; Vector 78 : Undefined
 15562  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15563                           
 15564                           ; Vector 79 : Undefined
 15565  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15566                           
 15567                           ; Vector 80 : CCP4
 15568  0000A8  1765               	dw	_Default_ISR shr (0+2)
 15569                           
 15570                           ; Vector 81 : CLC4
 15571  0000AA  1765               	dw	_Default_ISR shr (0+2)
 15572  0000AC                     ivt0x8_undefint:
 15573                           	callstack 0
 15574  0000AC  00FF               	reset	
 15575                           
 15576                           	psect	text93
 15577  000000                     __ptext93:
 15578                           	callstack 0
 15579                           
 15580                           	psect	rparam
 15581  0000                     
 15582                           	psect	idloc
 15583                           
 15584                           ;Config register IDLOC0 @ 0x200000
 15585                           ;	unspecified, using default values
 15586  200000                     	org	2097152
 15587  200000  0FFF               	dw	4095
 15588                           
 15589                           ;Config register IDLOC1 @ 0x200002
 15590                           ;	unspecified, using default values
 15591  200002                     	org	2097154
 15592  200002  0FFF               	dw	4095
 15593                           
 15594                           ;Config register IDLOC2 @ 0x200004
 15595                           ;	unspecified, using default values
 15596  200004                     	org	2097156
 15597  200004  0FFF               	dw	4095
 15598                           
 15599                           ;Config register IDLOC3 @ 0x200006
 15600                           ;	unspecified, using default values
 15601  200006                     	org	2097158
 15602  200006  0FFF               	dw	4095
 15603                           
 15604                           ;Config register IDLOC4 @ 0x200008
 15605                           ;	unspecified, using default values
 15606  200008                     	org	2097160
 15607  200008  0FFF               	dw	4095
 15608                           
 15609                           ;Config register IDLOC5 @ 0x20000A
 15610                           ;	unspecified, using default values
 15611  20000A                     	org	2097162
 15612  20000A  0FFF               	dw	4095
 15613                           
 15614                           ;Config register IDLOC6 @ 0x20000C
 15615                           ;	unspecified, using default values
 15616  20000C                     	org	2097164
 15617  20000C  0FFF               	dw	4095
 15618                           
 15619                           ;Config register IDLOC7 @ 0x20000E
 15620                           ;	unspecified, using default values
 15621  20000E                     	org	2097166
 15622  20000E  0FFF               	dw	4095
 15623                           
 15624                           	psect	config
 15625                           
 15626                           ;Config register CONFIG1L @ 0x300000
 15627                           ;	External Oscillator Selection
 15628                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 15629                           ;	Reset Oscillator Selection
 15630                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15631  300000                     	org	3145728
 15632  300000  AF                 	db	175
 15633                           
 15634                           ;Config register CONFIG1H @ 0x300001
 15635                           ;	Clock out Enable bit
 15636                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 15637                           ;	PRLOCKED One-Way Set Enable bit
 15638                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 15639                           ;	Clock Switch Enable bit
 15640                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15641                           ;	Fail-Safe Clock Monitor Enable bit
 15642                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 15643  300001                     	org	3145729
 15644  300001  FF                 	db	255
 15645                           
 15646                           ;Config register CONFIG2L @ 0x300002
 15647                           ;	MCLR Enable bit
 15648                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 15649                           ;	Power-up timer selection bits
 15650                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 15651                           ;	Multi-vector enable bit
 15652                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 15653                           ;	IVTLOCK bit One-way set enable bit
 15654                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 15655                           ;	Low Power BOR Enable bit
 15656                           ;	LPBOREN = OFF, ULPBOR disabled
 15657                           ;	Brown-out Reset Enable bits
 15658                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 15659  300002                     	org	3145730
 15660  300002  FF                 	db	255
 15661                           
 15662                           ;Config register CONFIG2H @ 0x300003
 15663                           ;	Brown-out Reset Voltage Selection bits
 15664                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 15665                           ;	ZCD Disable bit
 15666                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 15667                           ;	PPSLOCK bit One-Way Set Enable bit
 15668                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 15669                           ;	Stack Full/Underflow Reset Enable bit
 15670                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15671                           ;	Debugger Enable bit
 15672                           ;	DEBUG = OFF, Background debugger disabled
 15673                           ;	Extended Instruction Set Enable bit
 15674                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 15675  300003                     	org	3145731
 15676  300003  FF                 	db	255
 15677                           
 15678                           ;Config register CONFIG3L @ 0x300004
 15679                           ;	WDT Period selection bits
 15680                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15681                           ;	WDT operating mode
 15682                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 15683  300004                     	org	3145732
 15684  300004  9F                 	db	159
 15685                           
 15686                           ;Config register CONFIG3H @ 0x300005
 15687                           ;	WDT Window Select bits
 15688                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15689                           ;	WDT input clock selector
 15690                           ;	WDTCCS = SC, Software Control
 15691  300005                     	org	3145733
 15692  300005  FF                 	db	255
 15693                           
 15694                           ;Config register CONFIG4L @ 0x300006
 15695                           ;	Boot Block Size selection bits
 15696                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 15697                           ;	Boot Block enable bit
 15698                           ;	BBEN = OFF, Boot block disabled
 15699                           ;	Storage Area Flash enable bit
 15700                           ;	SAFEN = OFF, SAF disabled
 15701                           ;	Application Block write protection bit
 15702                           ;	WRTAPP = OFF, Application Block not write protected
 15703  300006                     	org	3145734
 15704  300006  FF                 	db	255
 15705                           
 15706                           ;Config register CONFIG4H @ 0x300007
 15707                           ;	Boot Block Write Protection bit
 15708                           ;	WRTB = OFF, Boot Block not write-protected
 15709                           ;	Configuration Register Write Protection bit
 15710                           ;	WRTC = OFF, Configuration registers not write-protected
 15711                           ;	Data EEPROM Write Protection bit
 15712                           ;	WRTD = OFF, Data EEPROM not write-protected
 15713                           ;	SAF Write protection bit
 15714                           ;	WRTSAF = OFF, SAF not Write Protected
 15715                           ;	Low Voltage Programming Enable bit
 15716                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 15717  300007                     	org	3145735
 15718  300007  FF                 	db	255
 15719                           
 15720                           ;Config register CONFIG5L @ 0x300008
 15721                           ;	PFM and Data EEPROM Code Protection bit
 15722                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 15723  300008                     	org	3145736
 15724  300008  FF                 	db	255
 15725                           
 15726                           ;Config register CONFIG5H @ 0x300009
 15727                           ;	unspecified, using default values
 15728  300009                     	org	3145737
 15729  300009  FF                 	db	255
 15730                           tosu	equ	0x3FFF
 15731                           tosh	equ	0x3FFE
 15732                           tosl	equ	0x3FFD
 15733                           stkptr	equ	0x3FFC
 15734                           pclatu	equ	0x3FFB
 15735                           pclath	equ	0x3FFA
 15736                           pcl	equ	0x3FF9
 15737                           tblptru	equ	0x3FF8
 15738                           tblptrh	equ	0x3FF7
 15739                           tblptrl	equ	0x3FF6
 15740                           tablat	equ	0x3FF5
 15741                           prodh	equ	0x3FF4
 15742                           prodl	equ	0x3FF3
 15743                           indf0	equ	0x3FEF
 15744                           postinc0	equ	0x3FEE
 15745                           postdec0	equ	0x3FED
 15746                           preinc0	equ	0x3FEC
 15747                           plusw0	equ	0x3FEB
 15748                           fsr0h	equ	0x3FEA
 15749                           fsr0l	equ	0x3FE9
 15750                           wreg	equ	0x3FE8
 15751                           indf1	equ	0x3FE7
 15752                           postinc1	equ	0x3FE6
 15753                           postdec1	equ	0x3FE5
 15754                           preinc1	equ	0x3FE4
 15755                           plusw1	equ	0x3FE3
 15756                           fsr1h	equ	0x3FE2
 15757                           fsr1l	equ	0x3FE1
 15758                           bsr	equ	0x3FE0
 15759                           indf2	equ	0x3FDF
 15760                           postinc2	equ	0x3FDE
 15761                           postdec2	equ	0x3FDD
 15762                           preinc2	equ	0x3FDC
 15763                           plusw2	equ	0x3FDB
 15764                           fsr2h	equ	0x3FDA
 15765                           fsr2l	equ	0x3FD9
 15766                           status	equ	0x3FD8

Data Sizes:
    Strings     215
    Constant    33
    Data        25
    BSS         738
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     56      75
    BANK0           160    121     160
    BANK1           256      0     255
    BANK2           256     24     219
    BANK3           256      0     255
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    fh_ps@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_po@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1822$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_27(CODE[4]), STR_22(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_27(CODE[4]), STR_22(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 74
		 -> vfpfcnvrt@ct(BANK0[3]), STR_10(CODE[21]), NULL(NULL[0]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[74]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 74
		 -> vfpfcnvrt@ct(BANK0[3]), STR_10(CODE[21]), NULL(NULL[0]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[74]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_11(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK2[131]), STR_5(CODE[18]), STR_4(CODE[24]), STR_3(CODE[25]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_6(CODE[74]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), dbuf(BANK1[80]), STR_11(CODE[3]), cli_read@i(BANK0[1]), 
		 -> cmdm(CODE[28]), cli_ctx(BANK2[131]), STR_5(CODE[18]), STR_4(CODE[24]), 
		 -> STR_3(CODE[25]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_10(CODE[21]), STR_6(CODE[74]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_10(CODE[21]), STR_6(CODE[74]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 74
		 -> STR_10(CODE[21]), STR_6(CODE[74]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_10(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    S2599$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2599$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(1) Largest target is 1
		 -> cli_read@i(BANK0[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1822_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    S1822_t_cmd$cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    fh_pr@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    build_time	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    S1829_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _printf->_vfprintf
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    _linux_getc->_UART1_Read
    __cli_interpret_cmd->_fh_po
    __cli_interpret_cmd->_fh_pr
    __cli_interpret_cmd->_fh_ps
    _strncmp->_strlen
    _fh_ps->_puts
    _fh_pr->_puts
    _fh_po->_puts
    _puts->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _cli_read->__cli_interpret_cmd

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _scmd_init->_cli_init
    _cli_init->_sprintf

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  187537
                                            117 BANK0      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                             _printf
                          _scmd_init
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0   78149
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4   78149
                                             20 BANK2      4     0      4
                             _memset
                               _puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7   69423
                                              0 BANK2     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21     4     17   68987
                                            115 BANK0      2     2      0
                                              0 BANK2     17     0     17
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     1      5   68693
                                             55 COMRAM     1     1      0
                                            110 BANK0      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           44    39      5   67481
                                             79 BANK0     31    26      5
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    9760
                                              0 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     536
                                             20 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     554
                                             20 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    4144
                                             31 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              62    55      7   41977
                                             17 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              6     4      2    1318
                                             26 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     649
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1248
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    7900
                                             40 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     890
                                             45 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     482
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     686
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    5410
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    4742
                                             20 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     196
                                             20 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    5194
                                             34 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1220
                                             46 COMRAM     8     0      8
                                             13 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     912
                                             20 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3620
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     818
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     842
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                10     8      2    2172
                                             27 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     321
                                             20 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     437
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     698
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      42
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   31633
                                             49 COMRAM     5     3      2
                                             10 BANK0      3     3      0
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2020
                                             20 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    6750
                                             43 COMRAM     3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (2) _linux_getc                                           2     1      1     202
                                             21 COMRAM     2     1      1
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Read                                           1     1      0      54
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  14    12      2   21847
                                             45 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                   Absolute function *
                              _fh_po *
                              _fh_pr *
                              _fh_ps *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             12     6      6    1404
                                             24 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     710
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _fh_ps                                                2     0      2    6284
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pr                                                2     0      2    6326
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_po                                                2     0      2    6363
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    6284
                                             40 COMRAM     3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                9     5      4    3148
                                             31 COMRAM     9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    2284
                                             22 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0     126
                                             21 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      84
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     884
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1550
                    _ADCC_Initialize
                    _DAC1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     740
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     254
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     254
                                             23 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      48
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     254
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      42
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            2     2      0       0
                                              5 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (13) _Adc_Isr                                             1     1      0       0
                                              4 COMRAM     1     1      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (14) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Led_Blink                                           1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   2     2      0       0
                                             12 COMRAM     2     2      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            2     2      0     319
                                             18 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (13) _Timers_Isr                                          4     4      0      90
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     229
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_po *
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_pr *
         _puts
       _fh_ps *
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _scmd_init
     _cli_init
       _memset
       _puts
       _sprintf
         _vfprintf

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0     111        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhh    22A      0       0      85        0.0%
BITBIGSFRllllll    181      0       0     109        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     18      DB       9       85.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBIGSFRllhhhh     CB      0       0      81        0.0%
BITBIGSFRllhhhh     A1      0       0      78        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     79      A0       5      100.0%
BITBIGSFRllhhhh     92      0       0      74        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     38      4B       1       78.9%
BITBIGSFRllhhhl     49      0       0      87        0.0%
BITBIGSFRllhhhh     3F      0       0      76        0.0%
BITBIGSFRllllll     33      0       0      98        0.0%
BITBIGSFRllllll     29      0       0      96        0.0%
BITBIGSFRhhhhh      28      0       0      68        0.0%
BITBIGSFRllhhhh     1C      0       0      73        0.0%
BITBIGSFRllllll     16      0       0     101        0.0%
BITBIGSFRllllll     11      0       0     100        0.0%
BITBIGSFRlllllh      B      0       0      95        0.0%
BITBIGSFRllhhl       B      0       0      88        0.0%
BITBIGSFRllllll      7      0       0     106        0.0%
BITBIGSFRllllll      7      0       0     103        0.0%
BITBIGSFRhhlh        6      0       0      70        0.0%
BITBIGSFRllllll      5      0       0     102        0.0%
BITBIGSFRllhhhh      5      0       0      86        0.0%
BITBIGSFRllllhl      5      0       0      94        0.0%
BITBIGSFRlllhl       5      0       0      92        0.0%
BITBIGSFRllhll       5      0       0      90        0.0%
BITBIGSFRllllll      4      0       0     104        0.0%
BITBIGSFRllllll      4      0       0     107        0.0%
BITBIGSFRllhlh       4      0       0      89        0.0%
BITBIGSFRlllhh       4      0       0      91        0.0%
BITBIGSFRllllhh      4      0       0      93        0.0%
BITBIGSFRllhhhh      2      0       0      82        0.0%
BITBIGSFRllhhhh      2      0       0      83        0.0%
BITBIGSFRhhll        2      0       0      71        0.0%
BITBIGSFRhll         2      0       0      72        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      80        0.0%
BITBIGSFRllhhhh      1      0       0      79        0.0%
BITBIGSFRllllll      1      0       0     108        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRllllll      1      0       0     105        0.0%
BITBIGSFRllhhhh      1      0       0      75        0.0%
BITBIGSFRllllll      1      0       0      99        0.0%
BITBIGSFRllhhhh      1      0       0      77        0.0%
BITBIGSFRllllll      1      0       0      97        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C4     110        0.0%
DATA                 0      0     3C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar  9 12:42:16 2022

                                ___fldiv@aexp 002D                                  ___fldiv@bexp 002C  
            __end_of_TMR5_SetInterruptHandler 5D54                                  ___fldiv@sign 0025  
                                ?_display_led 0001                                  ___awdiv@sign 001A  
                         ___wmul@multiplicand 0017                             ??_TMR5_WriteTimer 0011  
                             _DAC1_Initialize 5D62                                           l185 5C40  
                                         l616 58CC                                           l983 4D44  
                                         l994 4D50                                           _GIE 01FE97  
                                         l989 4D4A                                           l999 4D56  
                                         _ana 0039                                           _pad 50B2  
                                         _res 0043                                  ___awmod@sign 001A  
                                         tosl 003FFD                                           wreg 003FE8  
                              _DAC1_SetOutput 5D78                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0062                  ?_ADCC_SetADIInterruptHandler 0015  
                          _UART1_Transmit_ISR 5A68                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                      __end_of_DAC1_GetOutput 5D88                                  ___fltol@exp1 001E  
                                        l1004 4D5C                                          l1014 4D68  
                                        l1120 3E3A                                          l1024 4D74  
                                        l1009 4D62                                          l1034 4D80  
                                        l1019 4D6E                                          l1044 4D8C  
                                        l1029 4D7A                                          l1134 4356  
                                        l1039 4D86                                          l1404 49EA  
                                        l2086 494C                                          l2184 5922  
                                        l1801 47A0                                          l2098 4100  
                                        l1723 390E                                          l1734 397C  
                                        l1735 3978                                          l1753 31C0  
                                        l1905 2418                                          l1577 4AD2  
                                        l1770 345C                                          l1762 33D6  
                                        l1763 33D2                                          l1587 4FEE  
                                        l1684 36A4                                          l1668 35D2  
                                        l1693 370A                                          l1669 35B0  
                                        l1933 277C                                          l1694 3706  
                                        l1794 4722                                          l1868 50E0  
                                        l1990 3E62                                          ?_pad 0029  
                                        l1969 4602                                          l1988 3E5A  
                                        l9002 37CC                                          l9100 39C0  
                                        l9030 3840                                          l9022 380C  
                                        l9104 39E4                                          l9114 3A1A  
                                        l9018 3808                                          l9300 5364  
                                        l9116 3A1C                                          l9108 3A0E  
                                        l9044 386E                                          l9036 3856  
                                        l9212 339C                                          l9140 3180  
                                        l9062 38E6                                          l9054 38BE  
                                        l9206 337E                                          l9320 540E  
                                        l9312 53F4                                          l9080 3942  
                                        l9232 341A                                          l9136 316C  
                                        l9322 5416                                          l9074 3924  
                                        l9154 31AC                                          l9138 3170  
                                        l9332 5438                                          l9316 5400  
                                        l9068 390C                                          l9236 3438  
                                        l9164 31DE                                          l9156 31B0  
                                        l9420 4D12                                          l9412 4CFE  
                                        l9502 4B76                                          l8720 58B8  
                                        l9280 5324                                          l9336 5446  
                                        l9328 542E                                          l9352 5262  
                                        l9344 5210                                          l9360 498A  
                                        l9248 347A                                          l9408 4CEE  
                                        l9600 2142                                          l9282 532C  
                                        l9274 530E                                          l8802 3504  
                                        l9426 4D2E                                          l9418 4D06  
                                        l9514 54C8                                          l9292 534C  
                                        l9268 52FE                                          l9348 5244  
                                        l9364 49BE                                          l8900 3694  
                                        l9508 4BB6                                          l9532 4066  
                                        l9612 216E                                          l9620 2184  
                                        l9436 4A4C                                          l8734 58EC  
                                        l9374 4A22                                          l9382 5A56  
                                        l8814 3528                                          l8806 3508  
                                        l9550 4186                                          l9542 4122  
                                        l9702 2470                                          l9630 21E2  
                                        l9438 4A60                                          l8736 58EE  
                                        l8752 4F5A                                          l8760 5668  
                                        l9296 5356                                          l9368 49D4  
                                        l9392 4CA4                                          l9472 50CA  
                                        l9720 24B6                                          l9704 2474  
                                        l9632 21FE                                          l9448 4ABC  
                                        l9464 4FD8                                          l9456 4F7C  
                                        l8746 4EC6                                          l9546 4158  
                                        l9482 5102                                          l9730 24F0  
                                        l9714 2492                                          l9634 2208  
                                        l9458 4F90                                          l8908 36C8  
                                        l8924 36E8                                          l8844 3564  
                                        l9476 50D8                                          l9804 2864  
                                        l9812 2888                                          l9820 291E  
                                        l9724 24C6                                          l8758 5664  
                                        l9566 57F0                                          l8918 36DE  
                                        l8782 34C0                                          l9486 512E  
                                        l9478 50EA                                          l9662 22EE  
                                        l9638 222E                                          l9576 41C2  
                                        l8952 3776                                          l8944 3750  
                                        l8880 3618                                          l8872 35F6  
                                        l8856 35BE                                          l9832 2960  
                                        l9752 268E                                          l9672 23AE  
                                        l9648 228C                                          l9656 22AA  
                                        l9904 45C6                                          l8970 545A  
                                        l9578 41D0                                          l8882 361C  
                                        l8890 362E                                          l8858 35C2  
                                        l8778 34BC                                          l9498 4B6C  
                                        l9850 29B6                                          l9770 2774  
                                        l9738 25E4                                          l9666 2326  
                                        l9922 464E                                          l9914 4618  
                                        l8956 377E                                          l9860 2A0A  
                                        l9772 2796                                          l9764 2752  
                                        l9684 2400                                          l9668 2374  
                                        l9932 46AE                                          l8974 5470  
                                        l8958 3780                                          l9870 2A36  
                                        l9694 2428                                          l9918 4630  
                                        l9950 3E9A                                          STR_1 20C4  
                                        l9848 29AC                                          l9784 2816  
                                        l9688 2422                                          l9936 46C6  
                                        l9928 4694                                          l9960 3F86  
                                        STR_2 20D0                                          STR_3 206C  
                                        STR_4 2085                                          STR_5 20B2  
                                        l9980 4838                                          l9884 2A86  
                                        l9796 2844                                          STR_6 2022  
                                        STR_7 20F3                                          l9990 48BE  
                                        l8998 37C8                                          STR_8 20F6  
                                        STR_9 20F0                                          l9984 4884  
                                        l9976 4836                                          l9986 488C  
                                        l9996 48F8                                          l9988 4890  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _LATF 003FBF  
                                        _T6PR 003F93                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u9520 4EBE  
                                        u9540 4F06                                          u9550 5692  
                                        u9710 35DA                                          _PLLR 01CEE0  
                                        u9660 3586                                          u9557 5684  
                                        u9670 3596                                          u9920 375C  
                                        u9840 36EC                                          u9680 3598  
                                        u9860 3700                                          u9960 54A6  
                                        u9980 5A02                                          u9990 5A04  
                                        u9967 5498                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                                        _WPUF 003A91                              __end_of_ADCC_ISR 57BA  
                                 main@mode_sw 00D7                           ?_UART1_Transmit_ISR 0001  
                                        _dbuf 0198                                          _cmdm 2006  
                                        _atoi 4824                                          _main 3A24  
                                        _ival 0194                                          _mode 00FB  
                             __end_of_Adc_Isr 59A0                                          _prec 00F9  
                                        _nout 00F5                                          pad@i 0030  
                                        pad@p 002D                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 0032                                          fsr2l 003FD9  
                                        _stoa 459C                                          _puts 592C  
                                        _vval 00D9                                          _utoa 3E3E  
                               ___fpclassifyf 4AF4                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 003F                               ___fldiv@new_exp 0026  
               ??_UART1_SetTxInterruptHandler 0018                             _UART1_rx_vect_isr 5878  
                                ___param_bank 000000                                   ?_UART1_Read 0001  
                          ?_UART1_rx_vect_isr 0001                                         ??_pad 002F  
                        ??_UART1_Transmit_ISR 000B                 __end_of_OSCILLATOR_Initialize 5C46  
                                       l10100 2E28                                         l10020 2B0A  
                                       l10030 2B1C                                         l10022 2B14  
                                       l10104 2E52                                         l10130 2FA0  
                                       l10114 2ED2                                         l10122 2F22  
                                       l10042 2B2E                                         l10034 2B20  
                                       l10026 2B18                                         l10018 2B08  
                                       l10140 3008                                         l10044 2B74  
                                       l10062 2C0E                                         l10038 2B24  
                                       l10224 582A                                         l10080 2CF6  
                                       l10056 2BEE                                         l10154 30EC  
                                       l10074 2CD6                                         l10058 2C06  
                                       l10500 4D9E                                         l10148 30B2  
                                       l10092 2DB8                                         l10076 2CEE  
                                       l10164 310A                                         l10270 4544  
                                       l10158 30F8                                         l10190 5526  
                                       l10272 4576                                         l10264 4508  
                                       l10192 5548                                         l10442 5B36  
                                       l10258 449C                                         l10522 433A  
                                       l10532 43C6                                         l10540 4424  
                                       l10470 3DBE                                         l10278 4592  
                                       l10518 4310                                         l10702 3C72  
                                       l10622 3A94                                         l10560 4750  
                                       l10464 3CBE                                         l10632 3AC2  
                                       l10616 3A78                                         l10562 4756  
                                       l10554 4732                                         l10458 3C9E  
                                       l10650 3B00                                         l10626 3AA8  
                                       l10572 47C6                                         l10564 4762  
                                       l10468 3DBC                                         l10652 3B06  
                                       l10644 3AEE                                         l10636 3AD6  
                                       l10628 3AAE                                         l10590 4812  
                                       l10574 47D2                                         l10566 4788  
                                       l10662 3BF6                                         l10646 3AF4  
                                       l10638 3ADC                                         l10672 3C0E  
                                       l10666 3C00                                         l10658 3BEC  
                                       l10676 3C12                                         l10668 3C04  
                                       l10686 3C26                                         l10688 3C4A  
                               ___fltol@sign1 001D                                         _ADACT 003EFE  
                                       _ADCAP 003EF5                                         ?_atoi 001C  
                             __end_of___fladd 379C                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 3A24  
                                       _ADREF 003EFD                               __end_of___awdiv 536E  
                             __end_of___flneg 5A68                                         STR_10 209D  
                                       STR_11 20C1                                         STR_20 20ED  
                                       STR_12 20D9                                         STR_13 20E1  
                                       STR_22 20ED                                         STR_16 20DD  
                                       STR_25 20E9                                         STR_17 20E5  
                                       STR_27 20E9                               __end_of___awmod 5450  
                                       _ADRPT 003EEC                               __end_of___flmul 3490  
                             __end_of___flsub 5734                               __end_of___fltol 4D40  
                                       ?_stoa 0020                                         ?_puts 0029  
                                       ?_utoa 0060                                         u11000 5A32  
                                       u10200 39CE                                         u11010 5A34  
                                       u10210 39F2                                         u11100 4262  
                                       u10300 31CC                                         u11110 4294  
                                       u11030 57EC                                         u11120 42BE  
                                       u10160 3972                                         u11130 42EA  
                                       u11050 41FA                                         u11115 428E  
                                       u11107 4254                                         u10500 541A  
                                       u10340 33CC                                         u11300 2440  
                                       u11117 4280                                         u11070 422A  
                                       u11127 42B0                                         u10440 5330  
                                       u11240 23D6                                         u11160 215E  
                                       u11137 42DC                                         u11057 41EC  
                                       u12210 3DFA                                         u12050 5CEE  
                                       u11410 267E                               __end_of___lodiv 4AF4  
                                       u10380 3428                                         u10620 4C92  
                                       u11340 248E                               ___awdiv@divisor 0017  
                                       u11077 421C                                         u10550 525E  
                                       u10390 3446                                         u10630 4CC2  
                                       u11270 240E                                         u10710 4A64  
                                       u12320 47DC                                         u12208 3DA8  
                                       u10800 4B32                                         u12400 3ACE  
                                       u12145 5768                                         u12146 576A  
                                       u11610 2A7E                                         u11530 2942  
                                       _U1P1H 003DED                                         u10635 4CB8  
                                       u10900 4034                                         u10740 4F94  
                                       _U1P2H 003DEF                                         u12181 3CB8  
                                       u10805 4B28                                         u11621 45A6  
                                       u10670 4D18                                         u10910 4054  
                                       u11710 46DA                                         _U1P3H 003DF1  
                                       _U1P1L 003DEC                                         _U1P2L 003DEE  
                                       u10905 402A                                         u11810 492A  
                                       u10850 4BAE                                         u11730 3E50  
                                       _U1P3L 003DF0                                         u10691 4A2C  
                                       u10860 4BB0                                         u10845 4B90  
                                       u10950 40E6                                         u10870 550E  
                                       u11590 2A20                                         u11670 4644  
                                       u11910 2D30                                         u10935 407E  
                                       u10936 4084                                         u11680 4678  
                                       u11760 3FB2                                         u10937 4092  
                                       u11761 3FB0                                         u10970 4140  
                                       u11770 3FC0                                         u10955 40DC  
                                       u11780 3FC4                                         u10877 5500  
                                       u10975 4136                                         u11687 466A  
                                       _T5CLK 003F9D                                         u11880 2C48  
                             __end_of___lomod 5010                                         u11980 2F78  
                                       _T5CON 003F9A                                         _T6CON 003F94  
                                       _T6HLT 003F95                                         _U1UIR 003DF8  
                                       _U1RXB 003DE8                                         _U1TXB 003DEA  
                      __end_of_DAC1_SetOutput 5D82                                         _T6TMR 003F92  
                                       i2l454 59CC                                         i2l640 5A90  
                                       i2l721 5B98                                         _T6RST 003F97  
                         ??_UART1_rx_vect_isr 000D                               ___awdiv@counter 0019  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00B1  
                                vfpfcnvrt@llu 00B8                                         _TMR5H 003F99  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                       _TRISF 003FC7                                   _Default_ISR 5D94  
                   ?_TMR6_SetInterruptHandler 0015                             _UART1_tx_vect_isr 5838  
                            __end_of_TMR5_ISR 565A                              __end_of_TMR6_ISR 59DA  
                                       _buff1 0300                                         _fh_po 5C78  
                                       _fh_pr 5B3A                                         _fh_ps 5C90  
                                       _flags 003D                                         _fputc 4EAE  
                                       _fputs 5450                               __end_of_isdigit 5A3A  
                             ?_DAC1_GetOutput 0001                            ?_UART1_tx_vect_isr 0001  
                                       atoi@n 0024                                         pad@fp 0029  
                                       atoi@s 001C                                         _width 00F7  
                                       _putch 5D6E                               __end_of_isspace 57F8  
                             __end_of_isupper 5A0A                                         pclath 003FFA  
                                       pclatu 003FFB                                         tablat 003FF5  
                                       plusw1 003FE3                                         plusw2 003FDB  
                                       stoa@i 002C                                         stoa@l 0034  
                                       stoa@p 0032                                         stoa@s 0022  
                                       stoa@w 002E                                         puts@s 0029  
                                       utoa@d 0062                                         utoa@i 007E  
                                       utoa@n 0076                                         utoa@p 0072  
                                       utoa@w 0074                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 5D0E                   _UART1_SetRxInterruptHandler 5D00  
                             __end_of_sprintf 560A                                ?___fpclassifyf 0015  
                             __end_of_tolower 592C                               __end_of_strncmp 42FA  
                            ___lodiv@dividend 0015      __end_of_UART1_DefaultFramingErrorHandler 5D9A  
          ??_UART1_DefaultFramingErrorHandler 000D             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5D98                           ??_UART1_tx_vect_isr 000B  
                   __end_of_UART1_rx_vect_isr 58B6                ??_TMR6_DefaultInterruptHandler 0008  
                             _TMR5_Initialize 56A6                               __initialization 5148  
                                __end_of_cmdm 2022                                  __end_of_atoi 4956  
                                __end_of_main 3C7A                       __end_of_DAC1_Initialize 5D6E  
                                __end_of_stoa 46E4                                  __end_of_puts 5966  
                                __end_of_utoa 3FEE                   ??_UART1_DefaultErrorHandler 000D  
                                ?_UART1_Write 0001                                        ??_atoi 001E  
                                      ??_main 00D5                      _TMR5_SetInterruptHandler 5D46  
                                      ??_stoa 0024                                        ??_puts 002B  
                                      ??_utoa 006A                                 __activetblptr 000003  
                             ?_DAC1_SetOutput 0001                     __end_of_UART1_tx_vect_isr 5876  
                            ___lodiv@quotient 0025                               _TMR6_Initialize 5A96  
                            _UART1_Initialize 4DF8                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        ?_fh_po 002C  
                                      ?_fh_pr 002C                                        ?_fh_ps 002C  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                     ??_Adc_Isr 0005  
                                      ?_fputc 0017                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 0020  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0015                                        _ADUTHL 003EE0  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _ANSELF 003A90                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RD1I2C 003A7B  
                                      _RC3I2C 003A6A                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                            __cli_interpret_cmd 3C7A  
                                      _RC3PPS 003A13                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _RC6PPS 003A16                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      _ODCONF 003A92                                        i2l6300 5572  
                                      i2l6304 55A4                                        i2l6208 5A8C  
                                      i2l6240 5992                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l6228 50AC                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        _INLVLF 003A94  
                                      i2l5922 5C08                                        _OSCFRQ 0039DF  
                               vfpfcnvrt@done 00C2                         _UART1_SetErrorHandler 5D2A  
                            __end_of___xxtofl 4824                    ??_ADCC_GetConversionResult 0003  
                         ?__cli_interpret_cmd 002E                              __end_of_cli_init 52EA  
                            __end_of_cli_read 4450                       DAC1_SetOutput@inputData 0015  
                                vfprintf@cfmt 0038                                        ___flge 4956  
                                      ___fleq 51DC                                     ??___fladd 001D  
                                      ___wmul 5AC2                                     ??___fldiv 001D  
                                   ??___awdiv 0019                                     ??___flneg 0019  
                                   ??___awmod 0019                                        _g_cmds 01EF  
                                   ??___flmul 002B                                     ??___flsub 0037  
                                   ??___fltol 0019                                     ??___lodiv 0025  
                                   ??___lomod 0025                                        _efgtoa 20FA  
                                      _floorf 3FEE                                        _memset 4450  
                                      clear_0 518E                                        clear_1 51A0  
                                      clear_2 51AC                                        clear_3 51B8  
                                      clear_4 51C4                              ___awdiv@quotient 001B  
                             ___awmod@divisor 0017                                    _Timers_Isr 556A  
                                      isa$std 000001                               ___awmod@counter 0019  
                                      _printf 5BA6                                        pad@buf 002B  
                                      _strcpy 54B8                                     ?_ADCC_ISR 0001  
                                      _strlen 565A                               _ADCC_Initialize 536E  
                                      fputc@c 0017                                _PMD_Initialize 5BC8  
                        ??__cli_interpret_cmd 0060                                        fputs@c 0026  
                                      fputs@i 0027                                        fputs@s 0020  
                                   ??_isdigit 0017                               ___fpclassifyf@e 001D  
                             ___fpclassifyf@u 001F                               ___fpclassifyf@x 0015  
                                __mediumconst 0000                                     ??_isspace 0017  
                                      tblptrh 003FF7                                     ??_isupper 0017  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                                      stoa@cp 0030                                        stoa@fp 0020  
                            __end_of_vfprintf 556A                                        utoa@fp 0060  
    TMR5_SetInterruptHandler@InterruptHandler 0015   UART1_SetTxInterruptHandler@InterruptHandler 0015  
 UART1_SetRxInterruptHandler@InterruptHandler 0015      TMR6_SetInterruptHandler@InterruptHandler 0015  
 ADCC_SetADIInterruptHandler@InterruptHandler 0015          __end_of_UART1_SetOverrunErrorHandler 5D1C  
                _UART1_SetOverrunErrorHandler 5D0E                     _UART1_DefaultErrorHandler 5D88  
                                   ??_sprintf 0039                                     ??_tolower 001D  
                                   ??_strncmp 001F                                    ___flge@ff1 002F  
                                  ___flge@ff2 0033                               ??___fpclassifyf 0019  
                     __end_of_TMR5_Initialize 56EE                                  ___xxtofl@arg 001F  
                                ___xxtofl@exp 001E                             _SYSTEM_Initialize 5AEC  
                                ___xxtofl@val 0015                                    ___fleq@ff1 0015  
                                  ___fleq@ff2 0019                                    __accesstop 0060  
                     __end_of__initialization 51D6                                    ___flneg@f1 0015  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                                  ___fltol@f1 0015                               _TMR5_WriteTimer 5B82  
                           __end_of_Led_Blink 5C2A                                __pcstackCOMRAM 0001  
                                __pidataBANK0 5D8E                                  __pidataBANK1 5CA8  
                         ??_SYSTEM_Initialize 001A                              ?_DAC1_Initialize 0001  
                               __end_of_fh_po 5C90                                 __end_of_fh_pr 5B5E  
                               __end_of_fh_ps 5CA8                                     ?_TMR5_ISR 0001  
                                   ?_TMR6_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 4F62                                 __end_of_fputs 54B8  
                           ??_SPI1_Initialize 0015                                 __end_of_putch 5D78  
                     __end_of_TMR6_Initialize 5AC2                        __end_of_PMD_Initialize 5BEA  
                                  ??_ADCC_ISR 0006                         __end_of_TMR6_CallBack 5B82  
                          _spi1_configuration 2001                         TMR6_ISR@CountCallBack 0041  
                   _UART1_FramingErrorHandler 00E6                                       ??_fh_po 002E  
                                     ??_fh_pr 002E                                       ??_fh_ps 002E  
                                     ??_fputc 001B                     __end_of_SYSTEM_Initialize 5B16  
                                     ??_fputs 0024                               linux_putc@a_len 002E  
                                     ??_putch 0016                                    __pbssBANK0 00D9  
                                  __pbssBANK1 0100                                    __pbssBANK2 0200  
                                  __pbssBANK3 0300                 ?_UART1_SetOverrunErrorHandler 0015  
                      ?_UART1_SetErrorHandler 0015                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                            linux_getc@a_data 0016                                cli_init@a_cmds 02D9  
                                     ?___flge 002F                                       ?___fleq 0015  
                                ??_UART1_Read 0015                                       ?___wmul 0015  
            __end_of_TMR6_SetInterruptHandler 5D46                       __end_of_ADCC_Initialize 53E0  
                                  ??_TMR5_ISR 0013                                    ??_TMR6_ISR 0009  
                                     ?_efgtoa 0071                                       _ADFLTRH 003EE7  
                                     ?_floorf 002E                                       _ADFLTRL 003EE6  
                                     ?_memset 0015                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                                   ?_Timers_Isr 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 02C3                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 5010                                       ?_strcpy 0015  
                                     ?_strlen 0015                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                              ??_DAC1_GetOutput 0015  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0015  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                     _IVTLOCK 003FD4                                       _SPI1CLK 003D1C  
                                   ?_cli_init 02D7                                     ?_cli_read 0032  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                     _SLRCONF 003A93                                       _Adc_Isr 5966  
                                  _build_date 00FF                           ??_UART1_Receive_ISR 000D  
                                  _build_time 00FE                              ___lomod@dividend 0015  
                     __end_of_TMR5_WriteTimer 5BA6                            __end_of_UART1_Read 5836  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0015  
                                     __Hparam 0000                                       __Lparam 0000  
                    __end_of_UART1_Initialize 4EAE                    ??_TMR5_SetInterruptHandler 0018  
                    __cli_interpret_cmd@a_ctx 002E                                       ___fladd 3490  
                                     ___fldiv 379C                                       ___awdiv 52EA  
                                     ___flneg 5A3A                                       ___awmod 53E0  
                                     ___flmul 313E                                       ___flsub 56EE  
                                     ___fltol 4C86                                       ___lodiv 4A26  
                                     ___lomod 4F62                              ??_DAC1_SetOutput 0015  
                   __end_of_UART1_Receive_ISR 50B2                                     ?_vfprintf 00CE  
                                __psmallconst 2000                                       __pcinit 5148  
                            ?_TMR6_Initialize 0001                                       __ramtop 2000  
                                     _cli_ctx 0240                                       __ptext0 3A24  
                                     __ptext1 5C60                                       __ptext2 5266  
                                     __ptext3 55BC                                       __ptext4 5BA6  
                                     __ptext5 5518                                       __ptext6 2AC6  
                                     __ptext7 3E3E                                       __ptext8 4F62  
                                     __ptext9 4A26                         _OSCILLATOR_Initialize 5C2A  
                                     _isdigit 5A0A                                    ??___xxtofl 0019  
                            ___awmod@dividend 0015                      ??_PIN_MANAGER_Initialize 0015  
                                     _isspace 57BA                                   Timers_Isr@i 0011  
                                   _T5CONbits 003F9A                                       _isupper 59DA  
                                     efgtoa@c 0077                                       efgtoa@d 008F  
                                     efgtoa@e 00A7                                       efgtoa@f 0073  
                                     efgtoa@g 00A1                                       efgtoa@h 0099  
                                     efgtoa@i 00A5                                       efgtoa@l 009D  
                                     efgtoa@m 0089                                       efgtoa@n 00A9  
                                     efgtoa@p 0093                                       efgtoa@t 0083  
                                     efgtoa@u 00AB                                       efgtoa@w 0096  
                                  ??_cli_init 0039                                    ??_cli_read 0034  
                                     atoi@neg 0022                                    _linux_getc 5B16  
                                     _sprintf 55BC                                       _tolower 58F2  
                                  _linux_putc 5CD6                             __end_of_scmd_init 5C78  
                                     _strncmp 4198                          end_of_initialization 51D6  
                                     floorf@e 0064                                       floorf@m 0060  
                                     floorf@u 0066                                       floorf@x 002E  
                                     fputc@fp 0019                                       memset@c 0017  
                                     memset@k 001D                                       memset@n 0019  
                                     memset@s 001F           __end_of_UART1_SetTxInterruptHandler 5D00  
                 _UART1_SetTxInterruptHandler 5CF2                                       fputs@fp 0022  
                              display_led@led 0017                ??_UART1_SetOverrunErrorHandler 0018  
                           __end_of_vfpfcnvrt 313E                                    efgtoa@mode 0098  
                                  efgtoa@sign 0091                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                                  ??_vfprintf 0038                             UART1_Write@txData 0015  
                         _UART1_RxDataHandler 5BEA                                       strcpy@d 001D  
                                     strlen@a 0017                                       strcpy@s 001B  
                                     strlen@s 0015                                     _PORTAbits 003FCA  
                                   _PORTBbits 003FCB                      _TMR6_SetInterruptHandler 5D38  
                       _TMR5_InterruptHandler 00DD                                   ___fladd@grs 0024  
         __end_of_ADCC_SetADIInterruptHandler 5D62                   _ADCC_SetADIInterruptHandler 5D54  
                               ___xxtofl@sign 001D                                     _TRISCbits 003FC4  
                                 ___fldiv@grs 0028                                   ___fldiv@rem 0021  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 000F  
                     TMR5_WriteTimer@timerVal 000F                                   ___flmul@grs 0063  
               ??_ADCC_SetADIInterruptHandler 0018                               _SPI1_Initialize 5C46  
                __end_of_INTERRUPT_Initialize 5778                                     _Led_Blink 5C0C  
                               ??_display_led 0015                ??_ADCC_DefaultInterruptHandler 0001  
                              __end_of___flge 4A26                                __end_of___fleq 5266  
                                 vfpfcnvrt@ap 00B2                                   vfpfcnvrt@cp 00C0  
                                 vfpfcnvrt@ct 00CB                                   vfpfcnvrt@fp 00AF  
                              __end_of___wmul 5AEC                                __end_of_efgtoa 2AC6  
                              __end_of_floorf 4198                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F526 018C                                __end_of_memset 459C  
                   ?_ADCC_GetConversionResult 0001                                __end_of_printf 5BC8  
                              __end_of_strcpy 5518                                __end_of_strlen 56A6  
                         start_initialization 5148                               ___lodiv@divisor 001D  
                             ___lodiv@counter 002D          __end_of_TMR5_DefaultInterruptHandler 5D9C  
                _TMR5_DefaultInterruptHandler 5D9A                                   __end_of_pad 5148  
                     ??_UART1_SetErrorHandler 0018                                   ?_linux_getc 0016  
                                 ?_linux_putc 002C                         ??_UART1_RxDataHandler 000D  
                                 putch@txData 0016                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0200                         __end_of___fpclassifyf 4BC0  
                               _uart1TxBuffer 0140                                   vfprintf@fmt 00D0  
                                    ??___flge 006D                                      ??___fleq 001D  
                            ??_PMD_Initialize 0015                                      ??___wmul 0019  
                                  ?_Led_Blink 0001                                      ??_efgtoa 0078  
                                 __pdataBANK0 00FE                                   __pdataBANK1 01E8  
                                    ??_floorf 0032                                      ??_memset 001B  
                                ??_Timers_Isr 000F                                    memset@dest 0015  
                                    ??_printf 0039                                      ??_strcpy 0019  
                                    ??_strlen 0017                                     ___fladd@a 0019  
                                   ___fladd@b 0015                                     ___fldiv@a 0019  
                                   ___fldiv@b 0015                           __end_of_display_led 4DF8  
                                   ___flmul@a 0027                                     ___flmul@b 0023  
                                 __pbssCOMRAM 0039                                     ___flsub@a 0033  
                                   ___flsub@b 002F                            _UART1_ErrorHandler 00E0  
                               __pcstackBANK0 0060                                 __pcstackBANK2 02C3  
                     __end_of_SPI1_Initialize 5C60                      _UART1_RxInterruptHandler 00F2  
               ?_TMR5_DefaultInterruptHandler 0001                                      ?_Adc_Isr 0001  
                              linux_putc@data 002C                  ?_UART1_SetRxInterruptHandler 0015  
                          __end_of_Timers_Isr 55BC                         _TMR6_InterruptHandler 00E9  
                                 _efgtoa$2731 007F                                   _efgtoa$2723 007D  
                                 _efgtoa$2732 0081                        _PIN_MANAGER_Initialize 4BC0  
                               cli_init@a_ctx 02D7                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 5D2A                  _UART1_SetFramingErrorHandler 5D1C  
                               cli_read@a_ctx 0032                                      ?___fladd 0015  
                         UART1_Read@readValue 0015                                      ?___fldiv 0015  
                                    ?___awdiv 0015                                      ?___flneg 0015  
                                    ?___awmod 0015                                      ?___flmul 0023  
                                    ?___flsub 002F                                      ?___fltol 0015  
                                    ?___lodiv 0015                                      ?___lomod 0015  
                          ??_UART1_Initialize 0018                              _uart1RxLastError 0045  
                               _cli_read$2151 006A                                 ??_UART1_Write 0015  
                                    _DAC1CON0 003E9E                                      _DAC1CON1 003E9C  
                                   _disp_tick 00FD                                      _ADCC_ISR 5778  
                             ___lomod@divisor 001D                                   __smallconst 2000  
                             ___lomod@counter 0025      __end_of_UART1_DefaultOverrunErrorHandler 5D98  
          ??_UART1_DefaultOverrunErrorHandler 000D             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 5D96                                      ?_isdigit 0015  
                                    ?_isspace 0015                                      ?_isupper 0015  
                                    ?_sprintf 02C3                                      ?_tolower 001B  
                                    ?_strncmp 0019                                   _U1ERRIRbits 003DF9  
                        _INTERRUPT_Initialize 5734                                      _T6CLKCON 003F96  
                        __cli_interpret_cmd@i 0031                                ___wmul@product 0019  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0015  
                                    _LATDbits 003FBD                                      _LATEbits 003FBE  
                                   _scmd_init 5C60                                      _LATFbits 003FBF  
                                    _IPR1bits 003981                                      _PIE1bits 003991  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                   _tickCount 0180                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                   cli_read@i 006C                 ??_UART1_SetRxInterruptHandler 0018  
                                    _PIR1bits 0039A1                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      i2u611_48 5096  
                                    i2u603_48 5B6E                                      i2u631_40 59C0  
                                    i2u630_48 5798                                      i2u630_49 57AC  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                      i2u607_48 503A  
                                    i2u607_49 5050                                     _puts$2914 002B  
                                    i2u618_40 55BA                                      i2u609_48 506A  
                                    i2u633_48 5854                                      i2u609_49 5080  
                                    i2u633_49 5868                                      i2u635_48 5894  
                                    i2u635_49 58A8                                      i2u637_48 5638  
                                    i2u637_49 564C                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      i2u594_40 5C14  
                                    i2u594_46 5C16                    ??_TMR6_SetInterruptHandler 0018  
                                 ??_Led_Blink 0008                    __end_of_UART1_Transmit_ISR 5A96  
                                    _TMR5_ISR 560C                                      _TMR6_ISR 59A0  
               ?_UART1_SetFramingErrorHandler 0015                                   _display_led 4D40  
                                   _vfpfcnvrt 2AC6                             ___wmul@multiplier 0015  
                                   main@dac_v 00D8                                 _TMR6_CallBack 5B5E  
                   ?_TMR5_SetInterruptHandler 0015                           __end_of_UART1_Write 58F2  
                                _isspace$2835 001B                                    vfpfcnvrt@c 00C6  
                                  vfpfcnvrt@f 00C7                              ?_SPI1_Initialize 0001  
                                 _INTCON0bits 003FD2                                     copy_data0 515C  
                       ?_INTERRUPT_Initialize 0001                             ??_DAC1_Initialize 0015  
                      _uart1TxBufferRemaining 0049                ??_TMR5_DefaultInterruptHandler 000F  
                                  ?_scmd_init 0001                                  _uart1RxCount 0046  
                                    __Hrparam 0000              __end_of_ADCC_GetConversionResult 5CD6  
                                  vfprintf@ap 00D1                                      __Lrparam 0000  
                                  vfprintf@fp 00CE                       ??_OSCILLATOR_Initialize 0015  
                                  ?_vfpfcnvrt 00AF                                      _adc_chan 0044  
                                    _adc_tick 00FC                                ?_TMR6_CallBack 0001  
                          ___fpclassifyf@F465 0190                                    sprintf@fmt 02C5  
                                    ___xxtofl 46E4                                      __pivt0x8 0008  
                                    _cli_init 5266                                      _cli_read 42FA  
                                    __ptext10 459C                                      __ptext11 20FA  
                                    __ptext20 3490                                      __ptext12 58F2  
                                    __ptext21 5A3A                                      __ptext13 59DA  
                                    __ptext30 5A0A                                      __ptext22 313E  
                                    __ptext14 54B8                                      __ptext31 5AC2  
                                    __ptext23 4956                                      __ptext15 50B2  
                                    __ptext40 4198                                      __ptext32 4D40  
                                    __ptext24 51DC                                      __ptext16 3FEE  
                                    __ptext41 565A                                      __ptext33 42FA  
                                    __ptext25 379C                                      __ptext17 4AF4  
                                    __ptext50 46E4                                      __ptext42 5C78  
                                    __ptext34 4450                                      __ptext26 53E0  
                                    __ptext18 4C86                                      __ptext51 5AEC  
                                    __ptext43 5B3A                                      __ptext35 5CD6  
                                    __ptext27 52EA                                      __ptext19 56EE  
                                    __ptext60 56A6                                      __ptext52 4DF8  
                                    __ptext44 5C90                                      __ptext36 5B16  
                                    __ptext28 4824                                      __ptext61 5D46  
                                    __ptext53 5CF2                                      __ptext45 592C  
                                    __ptext37 5CE4                                      __ptext29 57BA  
                                    __ptext70 5D78                                      __ptext62 5C46  
                                    __ptext54 5D00                                      __ptext46 5450  
                                    __ptext38 57F8                                      __ptext71 5D82  
                                    __ptext63 5BC8                                      __ptext55 5D0E  
                                    __ptext47 4EAE                                      __ptext39 3C7A  
                                    __ptext80 5D94                                      __ptext72 5778  
                                    __ptext64 4BC0                                      __ptext56 5D1C  
                                    __ptext48 5D6E                                      __ptext81 5838  
                                    __ptext73 5D90                                      __ptext65 5C2A  
                                    __ptext57 5D2A                                      __ptext49 58B6  
                                    __ptext90 5D9A                                      __ptext82 5A68  
                                    __ptext74 5966                                      __ptext66 5734  
                                    __ptext58 5A96                                      __ptext91 556A  
                                    __ptext83 5878                                      __ptext75 5CC0  
                                    __ptext67 5D62                                      __ptext59 5D38  
                                    __ptext92 5B82                                      __ptext84 5010  
                                    __ptext76 59A0                                      __ptext68 536E  
                                    __ptext93 0000                                      __ptext85 5D96  
                                    __ptext77 5B5E                                      __ptext69 5D54  
                                    __ptext86 5D98                                      __ptext78 5C0C  
                                    __ptext87 5D88                                      __ptext79 5D92  
                                    __ptext88 5BEA                                      __ptext89 560C  
                                ??_linux_getc 0017                                  ??_linux_putc 002F  
               __end_of_UART1_SetErrorHandler 5D38                                    strcpy@dest 0015  
                      __cli_interpret_cmd@ret 0030                                   _IVTLOCKbits 003FD4  
                                    efgtoa@fp 0071                                      efgtoa@ne 0087  
                                    efgtoa@pp 0085                                      efgtoa@ou 008B  
                   _UART1_OverrunErrorHandler 00E3                     _ADCC_ADI_InterruptHandler 00EC  
                                   stoa@F1164 01E8  UART1_SetOverrunErrorHandler@interruptHandler 0015  
                                    isa$xinst 000000                    ?_UART1_DefaultErrorHandler 0001  
                                    _vfprintf 5518                                     printf@fmt 02C3  
                          __end_of_linux_getc 5B3A                             _UART1_is_rx_ready 5CE4  
                          __end_of_linux_putc 5CE4                                   _UART1_Write 58B6  
                  __end_of__cli_interpret_cmd 3E3E                             ??_TMR5_Initialize 0018  
                          ?_UART1_is_rx_ready 0001                                 ??_Default_ISR 000B  
              ??_UART1_SetFramingErrorHandler 0018                                _vfpfcnvrt$2770 00C4  
                 __end_of_UART1_RxDataHandler 5C0C                                   _uart1RxHead 0048  
                                 _uart1TxHead 004B                                   _uart1RxTail 0047  
                                 fh_po@a_data 002C                                   _uart1TxTail 004A  
                                    isdigit@c 0015                        ??_INTERRUPT_Initialize 0015  
                                 fh_pr@a_data 002C                           ??_UART1_is_rx_ready 0015  
                                 fh_ps@a_data 002C          __end_of_TMR6_DefaultInterruptHandler 5D94  
                _TMR6_DefaultInterruptHandler 5D92          __end_of_ADCC_DefaultInterruptHandler 5D92  
                _ADCC_DefaultInterruptHandler 5D90                                      intlevel2 0000  
                                   sprintf@ap 02CA                                      isspace@c 0015  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0018  
                                 ??_scmd_init 0039                                     strcpy@src 0017  
                                    isupper@c 0015                                     strncmp@_l 0019  
                                   strncmp@_r 001B                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 0095                                    _SPI1SDIPPS 003ADF  
                                  _SPI1SCKPPS 003ADE                                      printf@ap 00D3  
                   __end_of_UART1_is_rx_ready 5CF2                                    _UART1_Read 57F8  
UART1_SetFramingErrorHandler@interruptHandler 0015                      _ADCC_GetConversionResult 5CC0  
           __end_of_UART1_DefaultErrorHandler 5D8E                                   ??_vfpfcnvrt 00B4  
                                    stoa@nuls 0025                               ??_TMR6_CallBack 0009  
                                    sprintf@f 02CC                                      tolower@c 001B  
                                    sprintf@s 02C3                                      strncmp@l 0021  
                                    strncmp@n 001D                                      strncmp@r 0023  
                    _UART1_TxInterruptHandler 00EF                                 ___fladd@signs 0021  
                         __end_of_Default_ISR 5D96                __end_of_PIN_MANAGER_Initialize 4C86  
                           ??_ADCC_Initialize 0018                                _DAC1_GetOutput 5D82  
               ?_TMR6_DefaultInterruptHandler 0001                                  ___fladd@aexp 0022  
                                ___fladd@bexp 0023                 ?_ADCC_DefaultInterruptHandler 0001  
                ?_UART1_SetTxInterruptHandler 0015                    __end_of_spi1_configuration 2006  
