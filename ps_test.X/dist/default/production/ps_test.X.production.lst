

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr  5 10:16:27 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    27                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    28                           	psect	text0,global,reloc=2,class=CODE,delta=1
    29                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text2,global,reloc=2,class=CODE,delta=1
    31                           	psect	text3,global,reloc=2,class=CODE,delta=1
    32                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text32,global,reloc=2,class=CODE,delta=1
    61                           	psect	text33,global,reloc=2,class=CODE,delta=1
    62                           	psect	text34,global,reloc=2,class=CODE,delta=1
    63                           	psect	text35,global,reloc=2,class=CODE,delta=1
    64                           	psect	text36,global,reloc=2,class=CODE,delta=1
    65                           	psect	text37,global,reloc=2,class=CODE,delta=1
    66                           	psect	text38,global,reloc=2,class=CODE,delta=1
    67                           	psect	text39,global,reloc=2,class=CODE,delta=1
    68                           	psect	text40,global,reloc=2,class=CODE,delta=1
    69                           	psect	text41,global,reloc=2,class=CODE,delta=1
    70                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text43,global,reloc=2,class=CODE,delta=1
    72                           	psect	text44,global,reloc=2,class=CODE,delta=1
    73                           	psect	text45,global,reloc=2,class=CODE,delta=1
    74                           	psect	text46,global,reloc=2,class=CODE,delta=1
    75                           	psect	text47,global,reloc=2,class=CODE,delta=1
    76                           	psect	text48,global,reloc=2,class=CODE,delta=1
    77                           	psect	text49,global,reloc=2,class=CODE,delta=1
    78                           	psect	text50,global,reloc=2,class=CODE,delta=1
    79                           	psect	text51,global,reloc=2,class=CODE,delta=1
    80                           	psect	text52,global,reloc=2,class=CODE,delta=1
    81                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text54,global,reloc=2,class=CODE,delta=1
    83                           	psect	text55,global,reloc=2,class=CODE,delta=1
    84                           	psect	text56,global,reloc=2,class=CODE,delta=1
    85                           	psect	text57,global,reloc=2,class=CODE,delta=1
    86                           	psect	text58,global,reloc=2,class=CODE,delta=1
    87                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text61,global,reloc=2,class=CODE,delta=1
    90                           	psect	text62,global,reloc=2,class=CODE,delta=1
    91                           	psect	text63,global,reloc=2,class=CODE,delta=1
    92                           	psect	text64,global,reloc=2,class=CODE,delta=1
    93                           	psect	text65,global,reloc=2,class=CODE,delta=1
    94                           	psect	text66,global,reloc=2,class=CODE,delta=1
    95                           	psect	text67,global,reloc=2,class=CODE,delta=1
    96                           	psect	text68,global,reloc=2,class=CODE,delta=1
    97                           	psect	text69,global,reloc=2,class=CODE,delta=1
    98                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=3
    99                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=3
   100                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=3
   101                           	psect	text73,global,reloc=2,class=CODE,delta=1
   102                           	psect	text74,global,reloc=2,class=CODE,delta=1
   103                           	psect	text75,global,reloc=2,class=CODE,delta=1
   104                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text77,global,reloc=2,class=CODE,delta=1
   106                           	psect	text78,global,reloc=2,class=CODE,delta=1
   107                           	psect	text79,global,reloc=2,class=CODE,delta=1
   108                           	psect	text80,global,reloc=2,class=CODE,delta=1
   109                           	psect	text81,global,reloc=2,class=CODE,delta=1
   110                           	psect	text82,global,reloc=2,class=CODE,delta=1
   111                           	psect	text83,global,reloc=2,class=CODE,delta=1
   112                           	psect	text84,global,reloc=2,class=CODE,delta=1
   113                           	psect	text85,global,reloc=2,class=CODE,delta=1
   114                           	psect	text86,global,reloc=2,class=CODE,delta=1
   115                           	psect	text87,global,reloc=2,class=CODE,delta=1
   116                           	psect	text88,global,reloc=2,class=CODE,delta=1
   117                           	psect	text89,global,reloc=2,class=CODE,delta=1
   118                           	psect	text90,global,reloc=2,class=CODE,delta=1
   119                           	psect	text91,global,reloc=2,class=CODE,delta=1
   120                           	psect	text92,global,reloc=2,class=CODE,delta=1
   121                           	psect	text93,global,reloc=2,class=CODE,delta=1
   122                           	psect	text94,global,reloc=2,class=CODE,delta=1
   123                           	psect	text95,global,reloc=2,class=CODE,delta=1
   124                           	psect	text96,global,reloc=2,class=CODE,delta=1
   125                           	psect	text97,global,reloc=2,class=CODE,delta=1
   126                           	psect	text98,global,reloc=2,class=CODE,delta=1
   127                           	psect	text99,global,reloc=2,class=CODE,delta=1
   128                           	psect	text100,global,reloc=2,class=CODE,delta=1
   129                           	psect	text101,global,reloc=2,class=CODE,delta=1
   130                           	psect	text102,global,reloc=2,class=CODE,delta=1
   131                           	psect	text103,global,reloc=2,class=CODE,delta=1
   132                           	psect	text104,global,reloc=2,class=CODE,delta=1
   133                           	psect	text105,global,reloc=2,class=CODE,delta=1
   134                           	psect	text106,global,reloc=2,class=CODE,delta=1
   135                           	psect	text107,global,reloc=2,class=CODE,delta=1
   136                           	psect	text108,global,reloc=2,class=CODE,delta=1
   137                           	psect	text109,global,reloc=2,class=CODE,delta=1
   138                           	psect	text110,global,reloc=2,class=CODE,delta=1
   139                           	psect	text111,global,reloc=2,class=CODE,delta=1
   140                           	psect	text112,global,reloc=4,class=CODE,delta=1
   141                           	psect	text113,global,reloc=2,class=CODE,delta=1
   142                           	psect	text114,global,reloc=4,class=CODE,delta=1
   143                           	psect	text115,global,reloc=2,class=CODE,delta=1
   144                           	psect	text116,global,reloc=2,class=CODE,delta=1
   145                           	psect	text117,global,reloc=2,class=CODE,delta=1
   146                           	psect	text118,global,reloc=2,class=CODE,delta=1
   147                           	psect	text119,global,reloc=2,class=CODE,delta=1
   148                           	psect	text120,global,reloc=4,class=CODE,delta=1
   149                           	psect	text121,global,reloc=2,class=CODE,delta=1
   150                           	psect	text122,global,reloc=2,class=CODE,delta=1
   151                           	psect	text123,global,reloc=2,class=CODE,delta=1
   152                           	psect	text124,global,reloc=4,class=CODE,delta=1
   153                           	psect	text125,global,reloc=2,class=CODE,delta=1
   154                           	psect	text126,global,reloc=2,class=CODE,delta=1
   155                           	psect	text127,global,reloc=2,class=CODE,delta=1
   156                           	psect	text128,global,reloc=4,class=CODE,delta=1
   157                           	psect	text129,global,reloc=4,class=CODE,delta=1
   158                           	psect	text130,global,reloc=2,class=CODE,delta=1
   159                           	psect	text131,global,reloc=2,class=CODE,delta=1
   160                           	psect	text132,global,reloc=2,class=CODE,delta=1
   161                           	psect	text133,global,reloc=4,class=CODE,delta=1
   162                           	psect	text134,global,reloc=2,class=CODE,delta=1
   163                           	psect	text135,global,reloc=2,class=CODE,delta=1
   164                           	psect	text136,global,reloc=4,class=CODE,delta=1
   165                           	psect	text137,global,reloc=2,class=CODE,delta=1
   166                           	psect	text138,global,reloc=4,class=CODE,delta=1
   167                           	psect	text139,global,reloc=2,class=CODE,delta=1
   168                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   169                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   170                           	psect	text140,global,reloc=2,class=CODE,delta=1
   171                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   172                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   173                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   174  0000                     
   175                           ; Version 2.40
   176                           ; Generated 17/11/2021 GMT
   177                           ; 
   178                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   179                           ; All rights reserved.
   180                           ; 
   181                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   182                           ; 
   183                           ; Redistribution and use in source and binary forms, with or without modification, are
   184                           ; permitted provided that the following conditions are met:
   185                           ; 
   186                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   187                           ;        conditions and the following disclaimer.
   188                           ; 
   189                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   190                           ;        of conditions and the following disclaimer in the documentation and/or other
   191                           ;        materials provided with the distribution. Publication is not required when
   192                           ;        this file is used in an embedded application.
   193                           ; 
   194                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   195                           ;        software without specific prior written permission.
   196                           ; 
   197                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   198                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   199                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   200                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   201                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   202                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   203                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   204                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   205                           ; 
   206                           ; 
   207                           ; Code-generator required, PIC18F57K42 Definitions
   208                           ; 
   209                           ; SFR Addresses
   210  0000                     
   211                           	psect	idataCOMRAM
   212  014F1E                     __pidataCOMRAM:
   213                           	callstack 0
   214                           
   215                           ;initializer for _ps_type_ptr
   216  014F1E  B2                 	db	low _ps_type
   217  014F1F  02                 	db	high _ps_type
   218                           
   219                           	psect	idataBIGRAM
   220  01172A                     __pidataBIGRAM:
   221                           	callstack 0
   222                           
   223                           ;initializer for _port_data
   224  01172A  FF                 	db	255
   225  01172B  00                 	db	0
   226  01172C  FF                 	db	255
   227  01172D  00                 	db	0
   228  01172E  FF                 	db	255
   229  01172F  00                 	db	0
   230  011730  FF                 	db	255
   231  011731  00                 	db	0
   232  011732  FF                 	db	255
   233  011733  00                 	db	0
   234  011734  FF                 	db	255
   235  011735  00                 	db	0
   236  011736  FF                 	db	255
   237  011737  00                 	db	0
   238  011738  FF                 	db	255
   239  011739  00                 	db	0
   240  01173A  00                 	db	0
   241  01173B  00                 	db	0
   242  01173C  00                 	db	0
   243  01173D  00                 	db	0
   244  01173E  00                 	db	0
   245  01173F  00                 	db	0
   246  011740  00                 	db	0
   247  011741  00                 	db	0
   248  011742  00                 	db	0
   249  011743  00                 	db	0
   250  011744  00                 	db	0
   251  011745  00                 	db	0
   252  011746  00                 	db	0
   253  011747  00                 	db	0
   254  011748  00                 	db	0
   255  011749  00                 	db	0
   256  01174A  00                 	db	0
   257  01174B  00                 	db	0
   258  01174C  00                 	db	0
   259  01174D  00                 	db	0
   260  01174E  00                 	db	0
   261  01174F  00                 	db	0
   262  011750  00                 	db	0
   263  011751  00                 	db	0
   264  011752  00                 	db	0
   265  011753  00                 	db	0
   266  011754  00                 	db	0
   267  011755  00                 	db	0
   268  011756  00                 	db	0
   269  011757  00                 	db	0
   270  011758  00                 	db	0
   271  011759  00                 	db	0
   272  01175A  00                 	db	0
   273  01175B  00                 	db	0
   274  01175C  00                 	db	0
   275  01175D  00                 	db	0
   276  01175E  00                 	db	0
   277  01175F  00                 	db	0
   278  011760  00                 	db	0
   279  011761  00                 	db	0
   280  011762  00                 	db	0
   281  011763  00                 	db	0
   282  011764  00                 	db	0
   283  011765  00                 	db	0
   284  011766  00                 	db	0
   285  011767  00                 	db	0
   286  011768  00                 	db	0
   287  011769  00                 	db	0
   288  01176A  00                 	db	0
   289  01176B  00                 	db	0
   290  01176C  00                 	db	0
   291  01176D  00                 	db	0
   292  01176E  00                 	db	0
   293  01176F  00                 	db	0
   294  011770  00                 	db	0
   295  011771  00                 	db	0
   296  011772  00                 	db	0
   297  011773  00                 	db	0
   298  011774  00                 	db	0
   299  011775  00                 	db	0
   300  011776  00                 	db	0
   301  011777  00                 	db	0
   302  011778  00                 	db	0
   303  011779  00                 	db	0
   304  01177A  00                 	db	0
   305  01177B  00                 	db	0
   306  01177C  00                 	db	0
   307  01177D  00                 	db	0
   308  01177E  00                 	db	0
   309  01177F  00                 	db	0
   310  011780  00                 	db	0
   311  011781  00                 	db	0
   312  011782  00                 	db	0
   313  011783  00                 	db	0
   314  011784  00                 	db	0
   315  011785  00                 	db	0
   316  011786  00                 	db	0
   317  011787  00                 	db	0
   318  011788  00                 	db	0
   319  011789  00                 	db	0
   320  01178A  00                 	db	0
   321  01178B  00                 	db	0
   322  01178C  00                 	db	0
   323  01178D  00                 	db	0
   324  01178E  00                 	db	0
   325  01178F  00                 	db	0
   326  011790  00                 	db	0
   327  011791  00                 	db	0
   328  011792  00                 	db	0
   329  011793  00                 	db	0
   330  011794  00                 	db	0
   331  011795  00                 	db	0
   332  011796  00                 	db	0
   333  011797  00                 	db	0
   334  011798  00                 	db	0
   335  011799  00                 	db	0
   336  01179A  00                 	db	0
   337  01179B  00                 	db	0
   338  01179C  00                 	db	0
   339  01179D  00                 	db	0
   340  01179E  00                 	db	0
   341  01179F  00                 	db	0
   342  0117A0  00                 	db	0
   343  0117A1  00                 	db	0
   344  0117A2  00                 	db	0
   345  0117A3  00                 	db	0
   346  0117A4  00                 	db	0
   347  0117A5  00                 	db	0
   348  0117A6  00                 	db	0
   349  0117A7  00                 	db	0
   350  0117A8  00                 	db	0
   351  0117A9  00                 	db	0
   352  0117AA  00                 	db	0
   353  0117AB  00                 	db	0
   354  0117AC  00                 	db	0
   355  0117AD  00                 	db	0
   356  0117AE  00                 	db	0
   357  0117AF  00                 	db	0
   358  0117B0  00                 	db	0
   359  0117B1  00                 	db	0
   360  0117B2  00                 	db	0
   361  0117B3  00                 	db	0
   362  0117B4  00                 	db	0
   363  0117B5  00                 	db	0
   364  0117B6  00                 	db	0
   365  0117B7  00                 	db	0
   366  0117B8  00                 	db	0
   367  0117B9  00                 	db	0
   368  0117BA  00                 	db	0
   369  0117BB  00                 	db	0
   370  0117BC  00                 	db	0
   371  0117BD  00                 	db	0
   372  0117BE  00                 	db	0
   373  0117BF  00                 	db	0
   374  0117C0  00                 	db	0
   375  0117C1  00                 	db	0
   376  0117C2  00                 	db	0
   377  0117C3  00                 	db	0
   378  0117C4  00                 	db	0
   379  0117C5  00                 	db	0
   380  0117C6  00                 	db	0
   381  0117C7  00                 	db	0
   382  0117C8  00                 	db	0
   383  0117C9  00                 	db	0
   384  0117CA  00                 	db	0
   385  0117CB  00                 	db	0
   386  0117CC  00                 	db	0
   387  0117CD  00                 	db	0
   388  0117CE  00                 	db	0
   389  0117CF  00                 	db	0
   390  0117D0  00                 	db	0
   391  0117D1  00                 	db	0
   392  0117D2  00                 	db	0
   393  0117D3  00                 	db	0
   394  0117D4  00                 	db	0
   395  0117D5  00                 	db	0
   396  0117D6  00                 	db	0
   397  0117D7  00                 	db	0
   398  0117D8  00                 	db	0
   399  0117D9  00                 	db	0
   400  0117DA  00                 	db	0
   401  0117DB  00                 	db	0
   402  0117DC  00                 	db	0
   403  0117DD  00                 	db	0
   404  0117DE  00                 	db	0
   405  0117DF  00                 	db	0
   406  0117E0  00                 	db	0
   407  0117E1  00                 	db	0
   408  0117E2  00                 	db	0
   409  0117E3  00                 	db	0
   410  0117E4  00                 	db	0
   411  0117E5  00                 	db	0
   412  0117E6  00                 	db	0
   413  0117E7  00                 	db	0
   414  0117E8  00                 	db	0
   415  0117E9  00                 	db	0
   416  0117EA  00                 	db	0
   417  0117EB  00                 	db	0
   418  0117EC  00                 	db	0
   419  0117ED  00                 	db	0
   420  0117EE  00                 	db	0
   421  0117EF  00                 	db	0
   422  0117F0  00                 	db	0
   423  0117F1  00                 	db	0
   424  0117F2  00                 	db	0
   425  0117F3  00                 	db	0
   426  0117F4  00                 	db	0
   427  0117F5  00                 	db	0
   428  0117F6  00                 	db	0
   429  0117F7  00                 	db	0
   430  0117F8  00                 	db	0
   431  0117F9  00                 	db	0
   432  0117FA  00                 	db	0
   433  0117FB  00                 	db	0
   434  0117FC  00                 	db	0
   435  0117FD  00                 	db	0
   436  0117FE  00                 	db	0
   437  0117FF  00                 	db	0
   438  011800  00                 	db	0
   439  011801  00                 	db	0
   440  011802  00                 	db	0
   441  011803  00                 	db	0
   442  011804  00                 	db	0
   443  011805  00                 	db	0
   444  011806  00                 	db	0
   445  011807  00                 	db	0
   446  011808  00                 	db	0
   447  011809  00                 	db	0
   448  01180A  00                 	db	0
   449  01180B  00                 	db	0
   450  01180C  00                 	db	0
   451  01180D  00                 	db	0
   452  01180E  00                 	db	0
   453  01180F  00                 	db	0
   454  011810  00                 	db	0
   455  011811  00                 	db	0
   456  011812  00                 	db	0
   457  011813  00                 	db	0
   458  011814  00                 	db	0
   459  011815  00                 	db	0
   460  011816  00                 	db	0
   461  011817  00                 	db	0
   462  011818  00                 	db	0
   463  011819  00                 	db	0
   464  01181A  00                 	db	0
   465  01181B  00                 	db	0
   466  01181C  00                 	db	0
   467  01181D  00                 	db	0
   468  01181E  00                 	db	0
   469  01181F  00                 	db	0
   470  011820  00                 	db	0
   471  011821  00                 	db	0
   472  011822  00                 	db	0
   473  011823  00                 	db	0
   474  011824  00                 	db	0
   475  011825  00                 	db	0
   476  011826  00                 	db	0
   477  011827  00                 	db	0
   478  011828  00                 	db	0
   479  011829  00                 	db	0
   480  01182A  00                 	db	0
   481  01182B  00                 	db	0
   482  01182C  00                 	db	0
   483  01182D  00                 	db	0
   484  01182E  00                 	db	0
   485  01182F  00                 	db	0
   486  011830  00                 	db	0
   487  011831  00                 	db	0
   488  011832  00                 	db	0
   489  011833  00                 	db	0
   490  011834  00                 	db	0
   491  011835  00                 	db	0
   492  011836  00                 	db	0
   493  011837  00                 	db	0
   494  011838  00                 	db	0
   495  011839  00                 	db	0
   496  01183A  00                 	db	0
   497  01183B  00                 	db	0
   498  01183C  00                 	db	0
   499  01183D  00                 	db	0
   500  01183E  00                 	db	0
   501  01183F  00                 	db	0
   502  011840  00                 	db	0
   503  011841  00                 	db	0
   504  011842  00                 	db	0
   505  011843  00                 	db	0
   506  011844  00                 	db	0
   507  011845  00                 	db	0
   508  011846  00                 	db	0
   509  011847  00                 	db	0
   510  011848  00                 	db	0
   511  011849  00                 	db	0
   512  01184A  00                 	db	0
   513  01184B  00                 	db	0
   514  01184C  00                 	db	0
   515  01184D  00                 	db	0
   516  01184E  00                 	db	0
   517  01184F  00                 	db	0
   518  011850  00                 	db	0
   519  011851  00                 	db	0
   520  011852  00                 	db	0
   521  011853  00                 	db	0
   522  011854  00                 	db	0
   523  011855  00                 	db	0
   524  011856  00                 	db	0
   525  011857  00                 	db	0
   526  011858  00                 	db	0
   527  011859  00                 	db	0
   528  01185A  00                 	db	0
   529  01185B  00                 	db	0
   530  01185C  00                 	db	0
   531  01185D  00                 	db	0
   532  01185E  00                 	db	0
   533  01185F  00                 	db	0
   534  011860  00                 	db	0
   535  011861  00                 	db	0
   536  011862  00                 	db	0
   537  011863  00                 	db	0
   538  011864  00                 	db	0
   539  011865  00                 	db	0
   540  011866  00                 	db	0
   541  011867  00                 	db	0
   542  011868  00                 	db	0
   543  011869  00                 	db	0
   544  01186A  00                 	db	0
   545  01186B  00                 	db	0
   546  01186C  00                 	db	0
   547  01186D  00                 	db	0
   548  01186E  00                 	db	0
   549  01186F  00                 	db	0
   550  011870  00                 	db	0
   551  011871  00                 	db	0
   552  011872  00                 	db	0
   553  011873  00                 	db	0
   554  011874  00                 	db	0
   555  011875  00                 	db	0
   556  011876  00                 	db	0
   557  011877  00                 	db	0
   558  011878  00                 	db	0
   559  011879  00                 	db	0
   560  01187A  00                 	db	0
   561  01187B  00                 	db	0
   562  01187C  00                 	db	0
   563  01187D  00                 	db	0
   564  01187E  00                 	db	0
   565  01187F  00                 	db	0
   566  011880  00                 	db	0
   567  011881  00                 	db	0
   568  011882  00                 	db	0
   569  011883  00                 	db	0
   570  011884  00                 	db	0
   571  011885  00                 	db	0
   572  011886  00                 	db	0
   573  011887  00                 	db	0
   574  011888  00                 	db	0
   575  011889  00                 	db	0
   576  01188A  00                 	db	0
   577  01188B  00                 	db	0
   578  01188C  00                 	db	0
   579  01188D  00                 	db	0
   580  01188E  00                 	db	0
   581  01188F  00                 	db	0
   582  011890  00                 	db	0
   583  011891  00                 	db	0
   584  011892  00                 	db	0
   585  011893  00                 	db	0
   586  011894  00                 	db	0
   587  011895  00                 	db	0
   588  011896  00                 	db	0
   589  011897  00                 	db	0
   590  011898  00                 	db	0
   591  011899  00                 	db	0
   592  01189A  00                 	db	0
   593  01189B  00                 	db	0
   594  01189C  00                 	db	0
   595  01189D  00                 	db	0
   596  01189E  00                 	db	0
   597  01189F  00                 	db	0
   598  0118A0  00                 	db	0
   599  0118A1  00                 	db	0
   600  0118A2  00                 	db	0
   601  0118A3  00                 	db	0
   602  0118A4  00                 	db	0
   603  0118A5  00                 	db	0
   604  0118A6  00                 	db	0
   605  0118A7  00                 	db	0
   606  0118A8  00                 	db	0
   607  0118A9  00                 	db	0
   608  0118AA  00                 	db	0
   609  0118AB  00                 	db	0
   610  0118AC  00                 	db	0
   611  0118AD  00                 	db	0
   612  0118AE  00                 	db	0
   613  0118AF  00                 	db	0
   614  0118B0  00                 	db	0
   615  0118B1  00                 	db	0
   616  0118B2  00                 	db	0
   617  0118B3  00                 	db	0
   618  0118B4  00                 	db	0
   619  0118B5  00                 	db	0
   620  0118B6  00                 	db	0
   621  0118B7  00                 	db	0
   622  0118B8  00                 	db	0
   623  0118B9  00                 	db	0
   624  0118BA  00                 	db	0
   625  0118BB  00                 	db	0
   626  0118BC  00                 	db	0
   627  0118BD  00                 	db	0
   628  0118BE  00                 	db	0
   629  0118BF  00                 	db	0
   630  0118C0  00                 	db	0
   631  0118C1  00                 	db	0
   632  0118C2  00                 	db	0
   633  0118C3  00                 	db	0
   634  0118C4  00                 	db	0
   635  0118C5  00                 	db	0
   636  0118C6  00                 	db	0
   637  0118C7  00                 	db	0
   638  0118C8  00                 	db	0
   639  0118C9  00                 	db	0
   640  0118CA  00                 	db	0
   641  0118CB  00                 	db	0
   642  0118CC  00                 	db	0
   643  0118CD  00                 	db	0
   644  0118CE  00                 	db	0
   645  0118CF  00                 	db	0
   646  0118D0  00                 	db	0
   647  0118D1  00                 	db	0
   648  0118D2  00                 	db	0
   649  0118D3  00                 	db	0
   650  0118D4  00                 	db	0
   651  0118D5  00                 	db	0
   652  0118D6  00                 	db	0
   653  0118D7  00                 	db	0
   654  0118D8  00                 	db	0
   655  0118D9  00                 	db	0
   656  0118DA  00                 	db	0
   657  0118DB  00                 	db	0
   658  0118DC  00                 	db	0
   659  0118DD  00                 	db	0
   660  0118DE  00                 	db	0
   661  0118DF  00                 	db	0
   662  0118E0  00                 	db	0
   663  0118E1  00                 	db	0
   664  0118E2  00                 	db	0
   665  0118E3  00                 	db	0
   666  0118E4  00                 	db	0
   667  0118E5  00                 	db	0
   668  0118E6  00                 	db	0
   669  0118E7  00                 	db	0
   670  0118E8  00                 	db	0
   671  0118E9  00                 	db	0
   672  0118EA  00                 	db	0
   673  0118EB  00                 	db	0
   674  0118EC  00                 	db	0
   675  0118ED  00                 	db	0
   676  0118EE  00                 	db	0
   677  0118EF  00                 	db	0
   678  0118F0  00                 	db	0
   679  0118F1  00                 	db	0
   680  0118F2  00                 	db	0
   681  0118F3  00                 	db	0
   682  0118F4  00                 	db	0
   683  0118F5  00                 	db	0
   684  0118F6  00                 	db	0
   685  0118F7  00                 	db	0
   686  0118F8  00                 	db	0
   687  0118F9  00                 	db	0
   688  0118FA  00                 	db	0
   689  0118FB  00                 	db	0
   690  0118FC  00                 	db	0
   691  0118FD  00                 	db	0
   692  0118FE  00                 	db	0
   693  0118FF  00                 	db	0
   694  011900  00                 	db	0
   695  011901  00                 	db	0
   696  011902  00                 	db	0
   697  011903  00                 	db	0
   698  011904  00                 	db	0
   699  011905  00                 	db	0
   700  011906  00                 	db	0
   701  011907  00                 	db	0
   702  011908  00                 	db	0
   703  011909  00                 	db	0
   704  01190A  00                 	db	0
   705  01190B  00                 	db	0
   706  01190C  00                 	db	0
   707  01190D  00                 	db	0
   708  01190E  00                 	db	0
   709  01190F  00                 	db	0
   710  011910  00                 	db	0
   711  011911  00                 	db	0
   712  011912  00                 	db	0
   713  011913  00                 	db	0
   714  011914  00                 	db	0
   715  011915  00                 	db	0
   716  011916  00                 	db	0
   717  011917  00                 	db	0
   718  011918  00                 	db	0
   719  011919  00                 	db	0
   720  01191A  00                 	db	0
   721  01191B  00                 	db	0
   722  01191C  00                 	db	0
   723  01191D  00                 	db	0
   724  01191E  00                 	db	0
   725  01191F  00                 	db	0
   726  011920  00                 	db	0
   727  011921  00                 	db	0
   728  011922  00                 	db	0
   729  011923  00                 	db	0
   730  011924  00                 	db	0
   731  011925  00                 	db	0
   732  011926  00                 	db	0
   733  011927  00                 	db	0
   734  011928  00                 	db	0
   735  011929  00                 	db	0
   736  01192A  00                 	db	0
   737  01192B  00                 	db	0
   738  01192C  00                 	db	0
   739  01192D  00                 	db	0
   740  01192E  00                 	db	0
   741  01192F  00                 	db	0
   742  011930  00                 	db	0
   743  011931  00                 	db	0
   744  011932  00                 	db	0
   745  011933  00                 	db	0
   746  011934  00                 	db	0
   747  011935  00                 	db	0
   748  011936  00                 	db	0
   749  011937  00                 	db	0
   750  011938  00                 	db	0
   751  011939  00                 	db	0
   752  01193A  00                 	db	0
   753  01193B  00                 	db	0
   754  01193C  00                 	db	0
   755  01193D  00                 	db	0
   756  01193E  00                 	db	0
   757  01193F  00                 	db	0
   758  011940  00                 	db	0
   759  011941  00                 	db	0
   760  011942  00                 	db	0
   761  011943  00                 	db	0
   762  011944  00                 	db	0
   763  011945  00                 	db	0
   764  011946  00                 	db	0
   765  011947  00                 	db	0
   766  011948  00                 	db	0
   767  011949  00                 	db	0
   768  01194A  00                 	db	0
   769  01194B  00                 	db	0
   770  01194C  00                 	db	0
   771  01194D  00                 	db	0
   772  01194E  00                 	db	0
   773  01194F  00                 	db	0
   774  011950  00                 	db	0
   775  011951  00                 	db	0
   776  011952  00                 	db	0
   777  011953  00                 	db	0
   778  011954  00                 	db	0
   779  011955  00                 	db	0
   780  011956  00                 	db	0
   781  011957  00                 	db	0
   782  011958  00                 	db	0
   783  011959  00                 	db	0
   784  01195A  00                 	db	0
   785  01195B  00                 	db	0
   786  01195C  00                 	db	0
   787  01195D  00                 	db	0
   788  01195E  00                 	db	0
   789  01195F  00                 	db	0
   790  011960  00                 	db	0
   791  011961  00                 	db	0
   792  011962  00                 	db	0
   793  011963  00                 	db	0
   794  011964  00                 	db	0
   795  011965  00                 	db	0
   796  011966  00                 	db	0
   797  011967  00                 	db	0
   798  011968  00                 	db	0
   799  011969  00                 	db	0
   800  01196A  00                 	db	0
   801  01196B  00                 	db	0
   802  01196C  00                 	db	0
   803  01196D  00                 	db	0
   804  01196E  00                 	db	0
   805  01196F  00                 	db	0
   806  011970  00                 	db	0
   807  011971  00                 	db	0
   808  011972  00                 	db	0
   809  011973  00                 	db	0
   810  011974  00                 	db	0
   811  011975  00                 	db	0
   812  011976  00                 	db	0
   813  011977  00                 	db	0
   814  011978  00                 	db	0
   815  011979  00                 	db	0
   816  01197A  00                 	db	0
   817  01197B  00                 	db	0
   818  01197C  00                 	db	0
   819  01197D  00                 	db	0
   820  01197E  00                 	db	0
   821  01197F  00                 	db	0
   822  011980  00                 	db	0
   823  011981  00                 	db	0
   824  011982  00                 	db	0
   825  011983  00                 	db	0
   826  011984  00                 	db	0
   827  011985  00                 	db	0
   828  011986  00                 	db	0
   829  011987  00                 	db	0
   830  011988  00                 	db	0
   831  011989  00                 	db	0
   832  01198A  00                 	db	0
   833  01198B  00                 	db	0
   834  01198C  00                 	db	0
   835  01198D  00                 	db	0
   836  01198E  00                 	db	0
   837  01198F  00                 	db	0
   838  011990  00                 	db	0
   839  011991  00                 	db	0
   840  011992  00                 	db	0
   841  011993  00                 	db	0
   842  011994  00                 	db	0
   843  011995  00                 	db	0
   844  011996  00                 	db	0
   845  011997  00                 	db	0
   846  011998  00                 	db	0
   847  011999  00                 	db	0
   848  01199A  00                 	db	0
   849  01199B  00                 	db	0
   850  01199C  00                 	db	0
   851  01199D  00                 	db	0
   852  01199E  00                 	db	0
   853  01199F  00                 	db	0
   854  0119A0  00                 	db	0
   855  0119A1  00                 	db	0
   856  0119A2  00                 	db	0
   857  0119A3  00                 	db	0
   858  0119A4  00                 	db	0
   859  0119A5  00                 	db	0
   860  0119A6  00                 	db	0
   861  0119A7  00                 	db	0
   862  0119A8  00                 	db	0
   863  0119A9  00                 	db	0
   864  0119AA  00                 	db	0
   865  0119AB  00                 	db	0
   866  0119AC  00                 	db	0
   867  0119AD  00                 	db	0
   868  0119AE  00                 	db	0
   869  0119AF  00                 	db	0
   870  0119B0  00                 	db	0
   871  0119B1  00                 	db	0
   872  0119B2  00                 	db	0
   873  0119B3  00                 	db	0
   874  0119B4  00                 	db	0
   875  0119B5  00                 	db	0
   876  0119B6  00                 	db	0
   877  0119B7  00                 	db	0
   878  0119B8  00                 	db	0
   879  0119B9  00                 	db	0
   880  0119BA  00                 	db	0
   881  0119BB  00                 	db	0
   882  0119BC  00                 	db	0
   883  0119BD  00                 	db	0
   884  0119BE  00                 	db	0
   885  0119BF  00                 	db	0
   886  0119C0  00                 	db	0
   887  0119C1  00                 	db	0
   888  0119C2  00                 	db	0
   889  0119C3  00                 	db	0
   890  0119C4  00                 	db	0
   891  0119C5  00                 	db	0
   892  0119C6  00                 	db	0
   893  0119C7  00                 	db	0
   894  0119C8  00                 	db	0
   895  0119C9  00                 	db	0
   896  0119CA  00                 	db	0
   897  0119CB  00                 	db	0
   898  0119CC  00                 	db	0
   899  0119CD  00                 	db	0
   900  0119CE  00                 	db	0
   901  0119CF  00                 	db	0
   902  0119D0  00                 	db	0
   903  0119D1  00                 	db	0
   904  0119D2  00                 	db	0
   905  0119D3  00                 	db	0
   906  0119D4  00                 	db	0
   907  0119D5  00                 	db	0
   908  0119D6  00                 	db	0
   909  0119D7  00                 	db	0
   910  0119D8  00                 	db	0
   911  0119D9  00                 	db	0
   912  0119DA  00                 	db	0
   913  0119DB  00                 	db	0
   914  0119DC  00                 	db	0
   915  0119DD  00                 	db	0
   916  0119DE  00                 	db	0
   917  0119DF  00                 	db	0
   918  0119E0  00                 	db	0
   919  0119E1  00                 	db	0
   920  0119E2  00                 	db	0
   921  0119E3  00                 	db	0
   922  0119E4  00                 	db	0
   923  0119E5  00                 	db	0
   924  0119E6  00                 	db	0
   925  0119E7  00                 	db	0
   926  0119E8  00                 	db	0
   927  0119E9  00                 	db	0
   928  0119EA  00                 	db	0
   929  0119EB  00                 	db	0
   930  0119EC  00                 	db	0
   931  0119ED  00                 	db	0
   932  0119EE  00                 	db	0
   933  0119EF  00                 	db	0
   934  0119F0  00                 	db	0
   935  0119F1  00                 	db	0
   936  0119F2  00                 	db	0
   937  0119F3  00                 	db	0
   938  0119F4  00                 	db	0
   939  0119F5  00                 	db	0
   940  0119F6  00                 	db	0
   941  0119F7  00                 	db	0
   942  0119F8  00                 	db	0
   943  0119F9  00                 	db	0
   944  0119FA  00                 	db	0
   945  0119FB  00                 	db	0
   946  0119FC  00                 	db	0
   947  0119FD  00                 	db	0
   948  0119FE  00                 	db	0
   949  0119FF  00                 	db	0
   950  011A00  00                 	db	0
   951  011A01  00                 	db	0
   952  011A02  00                 	db	0
   953  011A03  00                 	db	0
   954  011A04  00                 	db	0
   955  011A05  00                 	db	0
   956  011A06  00                 	db	0
   957  011A07  00                 	db	0
   958  011A08  00                 	db	0
   959  011A09  00                 	db	0
   960  011A0A  00                 	db	0
   961  011A0B  00                 	db	0
   962  011A0C  00                 	db	0
   963  011A0D  00                 	db	0
   964  011A0E  00                 	db	0
   965  011A0F  00                 	db	0
   966  011A10  00                 	db	0
   967  011A11  00                 	db	0
   968  011A12  00                 	db	0
   969  011A13  00                 	db	0
   970  011A14  00                 	db	0
   971  011A15  00                 	db	0
   972  011A16  00                 	db	0
   973  011A17  00                 	db	0
   974  011A18  00                 	db	0
   975  011A19  00                 	db	0
   976  011A1A  00                 	db	0
   977  011A1B  00                 	db	0
   978  011A1C  00                 	db	0
   979  011A1D  00                 	db	0
   980  011A1E  00                 	db	0
   981  011A1F  00                 	db	0
   982  011A20  00                 	db	0
   983  011A21  00                 	db	0
   984  011A22  00                 	db	0
   985  011A23  00                 	db	0
   986  011A24  00                 	db	0
   987  011A25  00                 	db	0
   988  011A26  00                 	db	0
   989  011A27  00                 	db	0
   990  011A28  00                 	db	0
   991  011A29  00                 	db	0
   992  011A2A  00                 	db	0
   993  011A2B  00                 	db	0
   994  011A2C  00                 	db	0
   995  011A2D  00                 	db	0
   996  011A2E  00                 	db	0
   997  011A2F  00                 	db	0
   998  011A30  00                 	db	0
   999  011A31  00                 	db	0
  1000  011A32  00                 	db	0
  1001  011A33  00                 	db	0
  1002  011A34  00                 	db	0
  1003  011A35  00                 	db	0
  1004  011A36  00                 	db	0
  1005  011A37  00                 	db	0
  1006  011A38  00                 	db	0
  1007  011A39  00                 	db	0
  1008  011A3A  00                 	db	0
  1009  011A3B  00                 	db	0
  1010  011A3C  00                 	db	0
  1011  011A3D  00                 	db	0
  1012  011A3E  00                 	db	0
  1013  011A3F  00                 	db	0
  1014  011A40  00                 	db	0
  1015  011A41  00                 	db	0
  1016  011A42  00                 	db	0
  1017  011A43  00                 	db	0
  1018  011A44  00                 	db	0
  1019  011A45  00                 	db	0
  1020  011A46  00                 	db	0
  1021  011A47  00                 	db	0
  1022  011A48  00                 	db	0
  1023  011A49  00                 	db	0
  1024  011A4A  00                 	db	0
  1025  011A4B  00                 	db	0
  1026  011A4C  00                 	db	0
  1027  011A4D  00                 	db	0
  1028  011A4E  00                 	db	0
  1029  011A4F  00                 	db	0
  1030  011A50  00                 	db	0
  1031  011A51  00                 	db	0
  1032  011A52  00                 	db	0
  1033  011A53  00                 	db	0
  1034  011A54  00                 	db	0
  1035  011A55  00                 	db	0
  1036  011A56  00                 	db	0
  1037  011A57  00                 	db	0
  1038  011A58  00                 	db	0
  1039  011A59  00                 	db	0
  1040  011A5A  00                 	db	0
  1041  011A5B  00                 	db	0
  1042  011A5C  00                 	db	0
  1043  011A5D  00                 	db	0
  1044  011A5E  00                 	db	0
  1045  011A5F  00                 	db	0
  1046  011A60  00                 	db	0
  1047  011A61  00                 	db	0
  1048  011A62  00                 	db	0
  1049  011A63  00                 	db	0
  1050  011A64  00                 	db	0
  1051  011A65  00                 	db	0
  1052  011A66  00                 	db	0
  1053  011A67  00                 	db	0
  1054  011A68  00                 	db	0
  1055  011A69  00                 	db	0
  1056  011A6A  00                 	db	0
  1057  011A6B  00                 	db	0
  1058  011A6C  00                 	db	0
  1059  011A6D  00                 	db	0
  1060  011A6E  00                 	db	0
  1061  011A6F  00                 	db	0
  1062  011A70  00                 	db	0
  1063  011A71  00                 	db	0
  1064  011A72  00                 	db	0
  1065  011A73  00                 	db	0
  1066  011A74  00                 	db	0
  1067  011A75  00                 	db	0
  1068  011A76  00                 	db	0
  1069  011A77  00                 	db	0
  1070  011A78  00                 	db	0
  1071  011A79  00                 	db	0
  1072  011A7A  00                 	db	0
  1073  011A7B  00                 	db	0
  1074  011A7C  00                 	db	0
  1075  011A7D  00                 	db	0
  1076  011A7E  00                 	db	0
  1077  011A7F  00                 	db	0
  1078  011A80  00                 	db	0
  1079  011A81  00                 	db	0
  1080  011A82  00                 	db	0
  1081  011A83  00                 	db	0
  1082  011A84  00                 	db	0
  1083  011A85  00                 	db	0
  1084  011A86  00                 	db	0
  1085  011A87  00                 	db	0
  1086  011A88  00                 	db	0
  1087  011A89  00                 	db	0
  1088  011A8A  00                 	db	0
  1089  011A8B  00                 	db	0
  1090  011A8C  00                 	db	0
  1091  011A8D  00                 	db	0
  1092  011A8E  00                 	db	0
  1093  011A8F  00                 	db	0
  1094  011A90  00                 	db	0
  1095  011A91  00                 	db	0
  1096  011A92  00                 	db	0
  1097  011A93  00                 	db	0
  1098  011A94  00                 	db	0
  1099  011A95  00                 	db	0
  1100  011A96  00                 	db	0
  1101  011A97  00                 	db	0
  1102  011A98  00                 	db	0
  1103  011A99  00                 	db	0
  1104  011A9A  00                 	db	0
  1105  011A9B  00                 	db	0
  1106  011A9C  00                 	db	0
  1107  011A9D  00                 	db	0
  1108  011A9E  00                 	db	0
  1109  011A9F  00                 	db	0
  1110  011AA0  00                 	db	0
  1111  011AA1  00                 	db	0
  1112  011AA2  00                 	db	0
  1113  011AA3  00                 	db	0
  1114  011AA4  00                 	db	0
  1115  011AA5  00                 	db	0
  1116  011AA6  00                 	db	0
  1117  011AA7  00                 	db	0
  1118  011AA8  00                 	db	0
  1119  011AA9  00                 	db	0
  1120  011AAA  00                 	db	0
  1121  011AAB  00                 	db	0
  1122  011AAC  00                 	db	0
  1123  011AAD  00                 	db	0
  1124  011AAE  00                 	db	0
  1125  011AAF  00                 	db	0
  1126  011AB0  00                 	db	0
  1127  011AB1  00                 	db	0
  1128  011AB2  00                 	db	0
  1129  011AB3  00                 	db	0
  1130  011AB4  00                 	db	0
  1131  011AB5  00                 	db	0
  1132  011AB6  00                 	db	0
  1133  011AB7  00                 	db	0
  1134  011AB8  00                 	db	0
  1135  011AB9  00                 	db	0
  1136  011ABA  00                 	db	0
  1137  011ABB  00                 	db	0
  1138  011ABC  00                 	db	0
  1139  011ABD  00                 	db	0
  1140  011ABE  00                 	db	0
  1141  011ABF  00                 	db	0
  1142  011AC0  00                 	db	0
  1143  011AC1  00                 	db	0
  1144  011AC2  00                 	db	0
  1145  011AC3  00                 	db	0
  1146  011AC4  00                 	db	0
  1147  011AC5  00                 	db	0
  1148  011AC6  00                 	db	0
  1149  011AC7  00                 	db	0
  1150  011AC8  00                 	db	0
  1151  011AC9  00                 	db	0
  1152  011ACA  00                 	db	0
  1153  011ACB  00                 	db	0
  1154  011ACC  00                 	db	0
  1155  011ACD  00                 	db	0
  1156  011ACE  00                 	db	0
  1157  011ACF  00                 	db	0
  1158  011AD0  00                 	db	0
  1159  011AD1  00                 	db	0
  1160  011AD2  00                 	db	0
  1161  011AD3  00                 	db	0
  1162  011AD4  00                 	db	0
  1163  011AD5  00                 	db	0
  1164  011AD6  00                 	db	0
  1165  011AD7  00                 	db	0
  1166  011AD8  00                 	db	0
  1167  011AD9  00                 	db	0
  1168  011ADA  00                 	db	0
  1169  011ADB  00                 	db	0
  1170  011ADC  00                 	db	0
  1171  011ADD  00                 	db	0
  1172  011ADE  00                 	db	0
  1173  011ADF  00                 	db	0
  1174  011AE0  00                 	db	0
  1175  011AE1  00                 	db	0
  1176  011AE2  00                 	db	0
  1177  011AE3  00                 	db	0
  1178  011AE4  00                 	db	0
  1179  011AE5  00                 	db	0
  1180  011AE6  00                 	db	0
  1181  011AE7  00                 	db	0
  1182  011AE8  00                 	db	0
  1183  011AE9  00                 	db	0
  1184  011AEA  00                 	db	0
  1185  011AEB  00                 	db	0
  1186  011AEC  00                 	db	0
  1187  011AED  00                 	db	0
  1188  011AEE  00                 	db	0
  1189  011AEF  00                 	db	0
  1190  011AF0  00                 	db	0
  1191  011AF1  00                 	db	0
  1192  011AF2  00                 	db	0
  1193  011AF3  00                 	db	0
  1194  011AF4  00                 	db	0
  1195  011AF5  00                 	db	0
  1196  011AF6  00                 	db	0
  1197  011AF7  00                 	db	0
  1198  011AF8  00                 	db	0
  1199  011AF9  00                 	db	0
  1200  011AFA  00                 	db	0
  1201  011AFB  00                 	db	0
  1202  011AFC  00                 	db	0
  1203  011AFD  00                 	db	0
  1204  011AFE  00                 	db	0
  1205  011AFF  00                 	db	0
  1206  011B00  00                 	db	0
  1207  011B01  00                 	db	0
  1208  011B02  00                 	db	0
  1209  011B03  00                 	db	0
  1210  011B04  00                 	db	0
  1211  011B05  00                 	db	0
  1212  011B06  00                 	db	0
  1213  011B07  00                 	db	0
  1214  011B08  00                 	db	0
  1215  011B09  00                 	db	0
  1216  011B0A  00                 	db	0
  1217  011B0B  00                 	db	0
  1218  011B0C  00                 	db	0
  1219  011B0D  00                 	db	0
  1220  011B0E  00                 	db	0
  1221  011B0F  00                 	db	0
  1222  011B10  00                 	db	0
  1223  011B11  00                 	db	0
  1224  011B12  00                 	db	0
  1225  011B13  00                 	db	0
  1226  011B14  00                 	db	0
  1227  011B15  00                 	db	0
  1228  011B16  00                 	db	0
  1229  011B17  00                 	db	0
  1230  011B18  00                 	db	0
  1231  011B19  00                 	db	0
  1232  011B1A  00                 	db	0
  1233  011B1B  00                 	db	0
  1234  011B1C  00                 	db	0
  1235  011B1D  00                 	db	0
  1236  011B1E  00                 	db	0
  1237  011B1F  00                 	db	0
  1238  011B20  00                 	db	0
  1239  011B21  00                 	db	0
  1240  011B22  00                 	db	0
  1241  011B23  00                 	db	0
  1242  011B24  00                 	db	0
  1243  011B25  00                 	db	0
  1244  011B26  00                 	db	0
  1245  011B27  00                 	db	0
  1246  011B28  00                 	db	0
  1247  011B29  00                 	db	0
  1248                           
  1249                           	psect	idataBANK0
  1250  014F20                     __pidataBANK0:
  1251                           	callstack 0
  1252                           
  1253                           ;initializer for _static_ps
  1254  014F20  14                 	db	20
  1255                           
  1256                           ;initializer for _roll_max
  1257  014F21  13                 	db	19
  1258                           
  1259                           	psect	idataBANK1
  1260  014EDE                     __pidataBANK1:
  1261                           	callstack 0
  1262                           
  1263                           ;initializer for stoa@F1164
  1264  014EDE  28                 	db	40
  1265  014EDF  6E                 	db	110
  1266  014EE0  75                 	db	117
  1267  014EE1  6C                 	db	108
  1268  014EE2  6C                 	db	108
  1269  014EE3  29                 	db	41
  1270  014EE4  00                 	db	0
  1271                           
  1272                           ;initializer for _build_time
  1273  014EE5  BD                 	db	low STR_2
  1274  014EE6  FF                 	db	high STR_2
  1275                           
  1276                           ;initializer for _build_date
  1277  014EE7  B1                 	db	low STR_1
  1278  014EE8  FF                 	db	high STR_1
  1279                           
  1280                           	psect	idataBANK2
  1281  014048                     __pidataBANK2:
  1282                           	callstack 0
  1283                           
  1284                           ;initializer for _g_cmds
  1285  014048  F5                 	db	low STR_20
  1286  014049  FF                 	db	high STR_20
  1287  01404A  5E                 	db	low _fh_pr
  1288  01404B  4C                 	db	high _fh_pr
  1289  01404C  01                 	db	low (_fh_pr shr (0+16))
  1290  01404D  F8                 	db	low STR_21
  1291  01404E  FF                 	db	high STR_21
  1292  01404F  EE                 	db	low _fh_ps
  1293  014050  4C                 	db	high _fh_ps
  1294  014051  01                 	db	low (_fh_ps shr (0+16))
  1295  014052  EF                 	db	low STR_22
  1296  014053  FF                 	db	high STR_22
  1297  014054  D4                 	db	low _fh_po
  1298  014055  4D                 	db	high _fh_po
  1299  014056  01                 	db	low (_fh_po shr (0+16))
  1300  014057  F2                 	db	low STR_23
  1301  014058  FF                 	db	high STR_23
  1302  014059  C2                 	db	low _fh_pp
  1303  01405A  4D                 	db	high _fh_pp
  1304  01405B  01                 	db	low (_fh_pp shr (0+16))
  1305  01405C  FB                 	db	low STR_24
  1306  01405D  FF                 	db	high STR_24
  1307  01405E  96                 	db	low _fh_pu
  1308  01405F  4D                 	db	high _fh_pu
  1309  014060  01                 	db	low (_fh_pu shr (0+16))
  1310  014061  E9                 	db	low STR_25
  1311  014062  FF                 	db	high STR_25
  1312  014063  80                 	db	low _fh_pd
  1313  014064  4D                 	db	high _fh_pd
  1314  014065  01                 	db	low (_fh_pd shr (0+16))
  1315  014066  EC                 	db	low STR_26
  1316  014067  FF                 	db	high STR_26
  1317  014068  6A                 	db	low _fh_pl
  1318  014069  4D                 	db	high _fh_pl
  1319  01406A  01                 	db	low (_fh_pl shr (0+16))
  1320  01406B  E3                 	db	low STR_27
  1321  01406C  FF                 	db	high STR_27
  1322  01406D  9A                 	db	low _fh_p0
  1323  01406E  4B                 	db	high _fh_p0
  1324  01406F  01                 	db	low (_fh_p0 shr (0+16))
  1325  014070  E6                 	db	low STR_28
  1326  014071  FF                 	db	high STR_28
  1327  014072  78                 	db	low _fh_p1
  1328  014073  4B                 	db	high _fh_p1
  1329  014074  01                 	db	low (_fh_p1 shr (0+16))
  1330  014075  00                 	db	0
  1331  014076  00                 	db	0
  1332  014077  00                 	db	0
  1333  014078  00                 	db	0
  1334  014079  00                 	db	0
  1335                           
  1336                           ;initializer for _ps_type
  1337                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1338  01407A  7597               	dw	30103
  1339  01407C  3ECF               	dw	16079
  1340                           
  1341                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1342  01407E  126F               	dw	4719
  1343  014080  3B83               	dw	15235
  1344                           
  1345                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1346  014082  5C29               	dw	23593
  1347  014084  3F4F               	dw	16207
  1348                           
  1349                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1350  014086  126F               	dw	4719
  1351  014088  3B83               	dw	15235
  1352                           
  1353                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1354  01408A  7597               	dw	30103
  1355  01408C  3ECF               	dw	16079
  1356                           
  1357                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1358  01408E  126F               	dw	4719
  1359  014090  3B83               	dw	15235
  1360                           
  1361                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1362  014092  7597               	dw	30103
  1363  014094  3ECF               	dw	16079
  1364                           
  1365                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1366  014096  126F               	dw	4719
  1367  014098  3B83               	dw	15235
  1368                           
  1369                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1370  01409A  7597               	dw	30103
  1371  01409C  3ECF               	dw	16079
  1372                           
  1373                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "10:16:17";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1374  01409E  126F               	dw	4719
  1375  0140A0  3B83               	dw	15235
  1376                           
  1377                           	psect	mediumconst
  1378  00FDF8                     __pmediumconst:
  1379                           	callstack 0
  1380  00FDF8  00                 	db	0
  1381  00FDF9  02                 	db	2
  1382  00FDFA  40                 	db	64
  1383  00FDFB  00                 	db	0
  1384  00FDFC  50                 	db	80
  1385  00FDFD  00                 	db	0
  1386  00FDFE                     __end_of_spi1_configuration:
  1387                           	callstack 0
  1388  00FDFE                     _cmdm:
  1389                           	callstack 0
  1390  00FDFE  0D                 	db	13
  1391  00FDFF  0A                 	db	10
  1392  00FE00  20                 	db	32
  1393  00FE01  43                 	db	67
  1394  00FE02  6F                 	db	111
  1395  00FE03  6D                 	db	109
  1396  00FE04  6D                 	db	109
  1397  00FE05  61                 	db	97
  1398  00FE06  6E                 	db	110
  1399  00FE07  64                 	db	100
  1400  00FE08  20                 	db	32
  1401  00FE09  70                 	db	112
  1402  00FE0A  72                 	db	114
  1403  00FE0B  6F                 	db	111
  1404  00FE0C  63                 	db	99
  1405  00FE0D  65                 	db	101
  1406  00FE0E  73                 	db	115
  1407  00FE0F  73                 	db	115
  1408  00FE10  6F                 	db	111
  1409  00FE11  72                 	db	114
  1410  00FE12  20                 	db	32
  1411  00FE13  56                 	db	86
  1412  00FE14  30                 	db	48
  1413  00FE15  2E                 	db	46
  1414  00FE16  31                 	db	49
  1415  00FE17  0D                 	db	13
  1416  00FE18  0A                 	db	10
  1417  00FE19  00                 	db	0
  1418  00FE1A                     __end_of_cmdm:
  1419                           	callstack 0
  1420  00FE1A                     _build_version:
  1421                           	callstack 0
  1422  00FE1A  56                 	db	86
  1423  00FE1B  31                 	db	49
  1424  00FE1C  2E                 	db	46
  1425  00FE1D  30                 	db	48
  1426  00FE1E  30                 	db	48
  1427  00FE1F  20                 	db	32
  1428  00FE20  50                 	db	80
  1429  00FE21  53                 	db	83
  1430  00FE22  20                 	db	32
  1431  00FE23  54                 	db	84
  1432  00FE24  45                 	db	69
  1433  00FE25  53                 	db	83
  1434  00FE26  54                 	db	84
  1435  00FE27  00                 	db	0
  1436  00FE28                     __end_of_build_version:
  1437                           	callstack 0
  1438  0000                     _NVMADRL	set	14816
  1439  0000                     _NVMADRH	set	14817
  1440  0000                     _NVMCON1bits	set	14821
  1441  0000                     _DMA1CON0	set	15356
  1442  0000                     _DMA1AIRQ	set	15358
  1443  0000                     _DMA1SIRQ	set	15359
  1444  0000                     _DMA1CON1	set	15357
  1445  0000                     _T2CON	set	16300
  1446  0000                     _T5CON	set	16282
  1447  0000                     _TMR5L	set	16280
  1448  0000                     _TMR5H	set	16281
  1449  0000                     _T5GCON	set	16283
  1450  0000                     _IVTBASEL	set	16341
  1451  0000                     _IVTBASEH	set	16342
  1452  0000                     _IVTBASEU	set	16343
  1453  0000                     _T6CON	set	16276
  1454  0000                     _T6RST	set	16279
  1455  0000                     _ADERRL	set	16098
  1456  0000                     _ADERRH	set	16099
  1457  0000                     _ADPREVL	set	16109
  1458  0000                     _ADPREVH	set	16110
  1459  0000                     _ADFLTRL	set	16102
  1460  0000                     _ADFLTRH	set	16103
  1461  0000                     _ADACCL	set	16104
  1462  0000                     _ADACCH	set	16105
  1463  0000                     _ADCNT	set	16107
  1464  0000                     _ADRESL	set	16111
  1465  0000                     _ADRESH	set	16112
  1466  0000                     _ADCON0	set	16120
  1467  0000                     _ADCON1	set	16121
  1468  0000                     _ADPREH	set	16119
  1469  0000                     _ADPREL	set	16118
  1470  0000                     _ADCAP	set	16117
  1471  0000                     _ADACQH	set	16116
  1472  0000                     _ADPCH	set	16113
  1473  0000                     _ADRPT	set	16108
  1474  0000                     _ADACCU	set	16106
  1475  0000                     _ADSTPTH	set	16101
  1476  0000                     _ADSTPTL	set	16100
  1477  0000                     _ADUTHH	set	16097
  1478  0000                     _ADUTHL	set	16096
  1479  0000                     _ADLTHH	set	16095
  1480  0000                     _PRLOCK	set	14831
  1481  0000                     _OSCTUNE	set	14814
  1482  0000                     _OSCFRQ	set	14815
  1483  0000                     _OSCEN	set	14813
  1484  0000                     _TRISD	set	16325
  1485  0000                     _TRISC	set	16324
  1486  0000                     _TRISB	set	16323
  1487  0000                     _LATC	set	16316
  1488  0000                     _LATB	set	16315
  1489  0000                     _PLLR	set	118496
  1490  0000                     _PRLOCKbits	set	14831
  1491  0000                     _DMA1CON0bits	set	15356
  1492  0000                     _DMA1CON1bits	set	15357
  1493  0000                     _U1UIRbits	set	15864
  1494  0000                     _U1ERRIRbits	set	15865
  1495  0000                     _SPI1CON0bits	set	15636
  1496  0000                     _LATCbits	set	16316
  1497  0000                     _LATFbits	set	16319
  1498  0000                     _LATAbits	set	16314
  1499  0000                     _LATDbits	set	16317
  1500  0000                     _LATEbits	set	16318
  1501  0000                     _TRISCbits	set	16324
  1502  0000                     _T5CONbits	set	16282
  1503  0000                     _IVTLOCKbits	set	16340
  1504  0000                     _GIE	set	130711
  1505  0000                     _IPR1bits	set	14721
  1506  0000                     _IPR2bits	set	14722
  1507  0000                     _PIE1bits	set	14737
  1508  0000                     _PIR1bits	set	14753
  1509  0000                     _PMD0	set	14784
  1510  0000                     _OSCCON1	set	14809
  1511  0000                     _RC3PPS	set	14867
  1512  0000                     _RD2PPS	set	14874
  1513  0000                     _ANSELA	set	14912
  1514  0000                     _ANSELB	set	14928
  1515  0000                     _ANSELC	set	14944
  1516  0000                     _ANSELD	set	14960
  1517  0000                     _LATA	set	16314
  1518  0000                     _LATD	set	16317
  1519  0000                     _LATE	set	16318
  1520  0000                     _TRISA	set	16322
  1521  0000                     _TRISE	set	16326
  1522  0000                     _LATF	set	16319
  1523  0000                     _PORTAbits	set	16330
  1524  0000                     _INTCON0bits	set	16338
  1525  0000                     _TRISF	set	16327
  1526  0000                     _INLVLD	set	14964
  1527  0000                     _SLRCOND	set	14963
  1528  0000                     _ODCOND	set	14962
  1529  0000                     _RD0I2C	set	14970
  1530  0000                     _WPUD	set	14961
  1531  0000                     _ANSELE	set	14976
  1532  0000                     _INLVLC	set	14948
  1533  0000                     _SLRCONC	set	14947
  1534  0000                     _ODCONC	set	14946
  1535  0000                     _RC3I2C	set	14954
  1536  0000                     _WPUC	set	14945
  1537  0000                     _INLVLB	set	14932
  1538  0000                     _SLRCONB	set	14931
  1539  0000                     _ODCONB	set	14930
  1540  0000                     _RB1I2C	set	14938
  1541  0000                     _WPUB	set	14929
  1542  0000                     _INLVLE	set	14980
  1543  0000                     _SLRCONE	set	14979
  1544  0000                     _ODCONE	set	14978
  1545  0000                     _WPUE	set	14977
  1546  0000                     _ANSELF	set	14992
  1547  0000                     _SPI1SCKPPS	set	15070
  1548  0000                     _INLVLF	set	14996
  1549  0000                     _SLRCONF	set	14995
  1550  0000                     _ODCONF	set	14994
  1551  0000                     _WPUF	set	14993
  1552  0000                     _INLVLA	set	14916
  1553  0000                     _SLRCONA	set	14915
  1554  0000                     _ODCONA	set	14914
  1555  0000                     _WPUA	set	14913
  1556  0000                     _RB2I2C	set	14939
  1557  0000                     _RC4I2C	set	14955
  1558  0000                     _RD1I2C	set	14971
  1559  0000                     _RF2PPS	set	14890
  1560  0000                     _SPI1SDIPPS	set	15071
  1561  0000                     _U1RXPPS	set	15077
  1562  0000                     _RC5PPS	set	14869
  1563  0000                     _RC6PPS	set	14870
  1564  0000                     _DMA1SSA	set	15353
  1565  0000                     _DMA2DSZ	set	15310
  1566  0000                     _DMA2DSA	set	15312
  1567  0000                     _DMA1DPTR	set	15340
  1568  0000                     _DMA1DSZ	set	15342
  1569  0000                     _DMA1DSA	set	15344
  1570  0000                     _DMA2CON0bits	set	15324
  1571  0000                     _DMA2CON1bits	set	15325
  1572  0000                     _SPI1RXB	set	15632
  1573  0000                     _SPI1TCNTL	set	15634
  1574  0000                     _SPI1CON0	set	15636
  1575  0000                     _DAC1CON1	set	16028
  1576  0000                     _DAC1CON0	set	16030
  1577  0000                     _SPI1TXB	set	15633
  1578  0000                     _ADLTHL	set	16094
  1579  0000                     _OSCCON3	set	14811
  1580  0000                     _PMD7	set	14791
  1581  0000                     _PMD6	set	14790
  1582  0000                     _PMD5	set	14789
  1583  0000                     _PMD4	set	14788
  1584  0000                     _PMD3	set	14787
  1585  0000                     _PMD2	set	14786
  1586  0000                     _PMD1	set	14785
  1587  0000                     _DMA1PR	set	14835
  1588  0000                     _ADACQL	set	16115
  1589  0000                     _CCPTMRS1bits	set	16223
  1590  0000                     _PWM5DCL	set	16236
  1591  0000                     _PWM5DCH	set	16237
  1592  0000                     _PWM5CON	set	16238
  1593  0000                     _T6TMR	set	16274
  1594  0000                     _T6PR	set	16275
  1595  0000                     _T6HLT	set	16277
  1596  0000                     _T6CLKCON	set	16278
  1597  0000                     _ADCLK	set	16127
  1598  0000                     _ADACT	set	16126
  1599  0000                     _ADREF	set	16125
  1600  0000                     _ADSTAT	set	16124
  1601  0000                     _ADCON3	set	16123
  1602  0000                     _ADCON2	set	16122
  1603  0000                     _PIR4bits	set	14756
  1604  0000                     _PIR2bits	set	14754
  1605  0000                     _PIR8bits	set	14760
  1606  0000                     _PIR9bits	set	14761
  1607  0000                     _PIE3bits	set	14739
  1608  0000                     _PIE2bits	set	14738
  1609  0000                     _PIE8bits	set	14744
  1610  0000                     _PIE9bits	set	14745
  1611  0000                     _PIR0bits	set	14752
  1612  0000                     _IVTLOCK	set	16340
  1613  0000                     _TABLAT	set	16373
  1614  0000                     _TBLPTRL	set	16374
  1615  0000                     _TBLPTRH	set	16375
  1616  0000                     _TBLPTRU	set	16376
  1617  0000                     _IPR8bits	set	14728
  1618  0000                     _IPR9bits	set	14729
  1619  0000                     _IPR3bits	set	14723
  1620  0000                     _T2TMR	set	16298
  1621  0000                     _T2PR	set	16299
  1622  0000                     _T2HLT	set	16301
  1623  0000                     _T2CLKCON	set	16302
  1624  0000                     _T5CLK	set	16285
  1625  0000                     _T5GATE	set	16284
  1626  0000                     _SPI1STATUSbits	set	15639
  1627  0000                     _SPI1BAUD	set	15641
  1628  0000                     _SPI1CLK	set	15644
  1629  0000                     _SPI1CON2	set	15638
  1630  0000                     _SPI1CON1	set	15637
  1631  0000                     _U1RXB	set	15848
  1632  0000                     _U1TXB	set	15850
  1633  0000                     _U1P1L	set	15852
  1634  0000                     _SPI1INTFbits	set	15642
  1635  0000                     _PWM6DCL	set	16232
  1636  0000                     _PWM6DCH	set	16233
  1637  0000                     _PWM6CON	set	16234
  1638  0000                     _T2RST	set	16303
  1639  0000                     _DMA1SPTR	set	15348
  1640  0000                     _DMA1SSZ	set	15351
  1641  0000                     _U1ERRIE	set	15866
  1642  0000                     _U1ERRIR	set	15865
  1643  0000                     _U1UIR	set	15864
  1644  0000                     _U1FIFO	set	15863
  1645  0000                     _U1BRGH	set	15862
  1646  0000                     _U1BRGL	set	15861
  1647  0000                     _U1CON2	set	15860
  1648  0000                     _U1CON1	set	15859
  1649  0000                     _U1CON0	set	15858
  1650  0000                     _U1P3H	set	15857
  1651  0000                     _U1P3L	set	15856
  1652  0000                     _U1P2H	set	15855
  1653  0000                     _U1P2L	set	15854
  1654  0000                     _U1P1H	set	15853
  1655  0000                     _NVMCON2	set	14822
  1656  0000                     _NVMDAT	set	14819
  1657  0000                     _PORTBbits	set	16331
  1658  0000                     _DMA2SSA	set	15321
  1659  0000                     _DMA2SSZ	set	15319
  1660  00FE28                     STR_15:
  1661                           
  1662                           ; BSR set to: 61
  1663  00FE28  20                 	db	32
  1664  00FE29  50                 	db	80	;'P'
  1665  00FE2A  53                 	db	83	;'S'
  1666  00FE2B  20                 	db	32
  1667  00FE2C  54                 	db	84	;'T'
  1668  00FE2D  59                 	db	89	;'Y'
  1669  00FE2E  50                 	db	80	;'P'
  1670  00FE2F  45                 	db	69	;'E'
  1671  00FE30  20                 	db	32
  1672  00FE31  25                 	db	37
  1673  00FE32  31                 	db	49	;'1'
  1674  00FE33  75                 	db	117	;'u'
  1675  00FE34  3A                 	db	58	;':'
  1676  00FE35  20                 	db	32
  1677  00FE36  50                 	db	80	;'P'
  1678  00FE37  53                 	db	83	;'S'
  1679  00FE38  20                 	db	32
  1680  00FE39  54                 	db	84	;'T'
  1681  00FE3A  65                 	db	101	;'e'
  1682  00FE3B  73                 	db	115	;'s'
  1683  00FE3C  74                 	db	116	;'t'
  1684  00FE3D  20                 	db	32
  1685  00FE3E  25                 	db	37
  1686  00FE3F  31                 	db	49	;'1'
  1687  00FE40  75                 	db	117	;'u'
  1688  00FE41  3A                 	db	58	;':'
  1689  00FE42  20                 	db	32
  1690  00FE43  44                 	db	68	;'D'
  1691  00FE44  41                 	db	65	;'A'
  1692  00FE45  43                 	db	67	;'C'
  1693  00FE46  20                 	db	32
  1694  00FE47  4F                 	db	79	;'O'
  1695  00FE48  55                 	db	85	;'U'
  1696  00FE49  54                 	db	84	;'T'
  1697  00FE4A  20                 	db	32
  1698  00FE4B  25                 	db	37
  1699  00FE4C  34                 	db	52	;'4'
  1700  00FE4D  2E                 	db	46
  1701  00FE4E  34                 	db	52	;'4'
  1702  00FE4F  75                 	db	117	;'u'
  1703  00FE50  6D                 	db	109	;'m'
  1704  00FE51  56                 	db	86	;'V'
  1705  00FE52  20                 	db	32
  1706  00FE53  42                 	db	66	;'B'
  1707  00FE54  3D                 	db	61	;'='
  1708  00FE55  25                 	db	37
  1709  00FE56  2E                 	db	46
  1710  00FE57  32                 	db	50	;'2'
  1711  00FE58  75                 	db	117	;'u'
  1712  00FE59  2C                 	db	44
  1713  00FE5A  20                 	db	32
  1714  00FE5B  53                 	db	83	;'S'
  1715  00FE5C  75                 	db	117	;'u'
  1716  00FE5D  70                 	db	112	;'p'
  1717  00FE5E  70                 	db	112	;'p'
  1718  00FE5F  6C                 	db	108	;'l'
  1719  00FE60  79                 	db	121	;'y'
  1720  00FE61  20                 	db	32
  1721  00FE62  52                 	db	82	;'R'
  1722  00FE63  65                 	db	101	;'e'
  1723  00FE64  61                 	db	97	;'a'
  1724  00FE65  64                 	db	100	;'d'
  1725  00FE66  42                 	db	66	;'B'
  1726  00FE67  61                 	db	97	;'a'
  1727  00FE68  63                 	db	99	;'c'
  1728  00FE69  6B                 	db	107	;'k'
  1729  00FE6A  20                 	db	32
  1730  00FE6B  25                 	db	37
  1731  00FE6C  34                 	db	52	;'4'
  1732  00FE6D  2E                 	db	46
  1733  00FE6E  34                 	db	52	;'4'
  1734  00FE6F  75                 	db	117	;'u'
  1735  00FE70  6D                 	db	109	;'m'
  1736  00FE71  56                 	db	86	;'V'
  1737  00FE72  20                 	db	32
  1738  00FE73  56                 	db	86	;'V'
  1739  00FE74  3D                 	db	61	;'='
  1740  00FE75  25                 	db	37
  1741  00FE76  2B                 	db	43
  1742  00FE77  36                 	db	54	;'6'
  1743  00FE78  2E                 	db	46
  1744  00FE79  31                 	db	49	;'1'
  1745  00FE7A  66                 	db	102	;'f'
  1746  00FE7B  56                 	db	86	;'V'
  1747  00FE7C  20                 	db	32
  1748  00FE7D  25                 	db	37
  1749  00FE7E  34                 	db	52	;'4'
  1750  00FE7F  2E                 	db	46
  1751  00FE80  34                 	db	52	;'4'
  1752  00FE81  75                 	db	117	;'u'
  1753  00FE82  6D                 	db	109	;'m'
  1754  00FE83  56                 	db	86	;'V'
  1755  00FE84  20                 	db	32
  1756  00FE85  49                 	db	73	;'I'
  1757  00FE86  3D                 	db	61	;'='
  1758  00FE87  25                 	db	37
  1759  00FE88  2B                 	db	43
  1760  00FE89  33                 	db	51	;'3'
  1761  00FE8A  2E                 	db	46
  1762  00FE8B  31                 	db	49	;'1'
  1763  00FE8C  66                 	db	102	;'f'
  1764  00FE8D  6D                 	db	109	;'m'
  1765  00FE8E  41                 	db	65	;'A'
  1766  00FE8F  20                 	db	32
  1767  00FE90  0D                 	db	13
  1768  00FE91  0A                 	db	10
  1769  00FE92  00                 	db	0
  1770  00FE93                     STR_11:
  1771                           
  1772                           ; BSR set to: 61
  1773  00FE93  0D                 	db	13
  1774  00FE94  0A                 	db	10
  1775  00FE95  20                 	db	32
  1776  00FE96  41                 	db	65	;'A'
  1777  00FE97  43                 	db	67	;'C'
  1778  00FE98  43                 	db	67	;'C'
  1779  00FE99  45                 	db	69	;'E'
  1780  00FE9A  4C                 	db	76	;'L'
  1781  00FE9B  20                 	db	32
  1782  00FE9C  53                 	db	83	;'S'
  1783  00FE9D  75                 	db	117	;'u'
  1784  00FE9E  70                 	db	112	;'p'
  1785  00FE9F  70                 	db	112	;'p'
  1786  00FEA0  72                 	db	114	;'r'
  1787  00FEA1  65                 	db	101	;'e'
  1788  00FEA2  73                 	db	115	;'s'
  1789  00FEA3  73                 	db	115	;'s'
  1790  00FEA4  69                 	db	105	;'i'
  1791  00FEA5  6F                 	db	111	;'o'
  1792  00FEA6  6E                 	db	110	;'n'
  1793  00FEA7  20                 	db	32
  1794  00FEA8  53                 	db	83	;'S'
  1795  00FEA9  75                 	db	117	;'u'
  1796  00FEAA  70                 	db	112	;'p'
  1797  00FEAB  70                 	db	112	;'p'
  1798  00FEAC  6C                 	db	108	;'l'
  1799  00FEAD  79                 	db	121	;'y'
  1800  00FEAE  20                 	db	32
  1801  00FEAF  0D                 	db	13
  1802  00FEB0  0A                 	db	10
  1803  00FEB1  00                 	db	0
  1804  00FEB2                     STR_10:
  1805                           
  1806                           ; BSR set to: 61
  1807  00FEB2  0D                 	db	13
  1808  00FEB3  0A                 	db	10
  1809  00FEB4  20                 	db	32
  1810  00FEB5  45                 	db	69	;'E'
  1811  00FEB6  58                 	db	88	;'X'
  1812  00FEB7  54                 	db	84	;'T'
  1813  00FEB8  20                 	db	32
  1814  00FEB9  53                 	db	83	;'S'
  1815  00FEBA  75                 	db	117	;'u'
  1816  00FEBB  70                 	db	112	;'p'
  1817  00FEBC  70                 	db	112	;'p'
  1818  00FEBD  72                 	db	114	;'r'
  1819  00FEBE  65                 	db	101	;'e'
  1820  00FEBF  73                 	db	115	;'s'
  1821  00FEC0  73                 	db	115	;'s'
  1822  00FEC1  69                 	db	105	;'i'
  1823  00FEC2  6F                 	db	111	;'o'
  1824  00FEC3  6E                 	db	110	;'n'
  1825  00FEC4  20                 	db	32
  1826  00FEC5  53                 	db	83	;'S'
  1827  00FEC6  75                 	db	117	;'u'
  1828  00FEC7  70                 	db	112	;'p'
  1829  00FEC8  70                 	db	112	;'p'
  1830  00FEC9  6C                 	db	108	;'l'
  1831  00FECA  79                 	db	121	;'y'
  1832  00FECB  20                 	db	32
  1833  00FECC  0D                 	db	13
  1834  00FECD  0A                 	db	10
  1835  00FECE  00                 	db	0
  1836  00FECF                     STR_3:
  1837                           
  1838                           ; BSR set to: 61
  1839  00FECF  0D                 	db	13
  1840  00FED0  0A                 	db	10
  1841  00FED1  20                 	db	32
  1842  00FED2  52                 	db	82	;'R'
  1843  00FED3  61                 	db	97	;'a'
  1844  00FED4  6D                 	db	109	;'m'
  1845  00FED5  70                 	db	112	;'p'
  1846  00FED6  20                 	db	32
  1847  00FED7  74                 	db	116	;'t'
  1848  00FED8  6F                 	db	111	;'o'
  1849  00FED9  20                 	db	32
  1850  00FEDA  31                 	db	49	;'1'
  1851  00FEDB  30                 	db	48	;'0'
  1852  00FEDC  30                 	db	48	;'0'
  1853  00FEDD  30                 	db	48	;'0'
  1854  00FEDE  56                 	db	86	;'V'
  1855  00FEDF  44                 	db	68	;'D'
  1856  00FEE0  43                 	db	67	;'C'
  1857  00FEE1  20                 	db	32
  1858  00FEE2  4F                 	db	79	;'O'
  1859  00FEE3  4E                 	db	78	;'N'
  1860  00FEE4  20                 	db	32
  1861  00FEE5  0D                 	db	13
  1862  00FEE6  0A                 	db	10
  1863  00FEE7  00                 	db	0
  1864  00FEE8                     STR_4:
  1865                           
  1866                           ; BSR set to: 61
  1867  00FEE8  0D                 	db	13
  1868  00FEE9  0A                 	db	10
  1869  00FEEA  20                 	db	32
  1870  00FEEB  53                 	db	83	;'S'
  1871  00FEEC  74                 	db	116	;'t'
  1872  00FEED  65                 	db	101	;'e'
  1873  00FEEE  61                 	db	97	;'a'
  1874  00FEEF  64                 	db	100	;'d'
  1875  00FEF0  79                 	db	121	;'y'
  1876  00FEF1  20                 	db	32
  1877  00FEF2  31                 	db	49	;'1'
  1878  00FEF3  30                 	db	48	;'0'
  1879  00FEF4  30                 	db	48	;'0'
  1880  00FEF5  30                 	db	48	;'0'
  1881  00FEF6  56                 	db	86	;'V'
  1882  00FEF7  44                 	db	68	;'D'
  1883  00FEF8  43                 	db	67	;'C'
  1884  00FEF9  20                 	db	32
  1885  00FEFA  4F                 	db	79	;'O'
  1886  00FEFB  4E                 	db	78	;'N'
  1887  00FEFC  20                 	db	32
  1888  00FEFD  0D                 	db	13
  1889  00FEFE  0A                 	db	10
  1890  00FEFF  00                 	db	0
  1891  00FF00                     STR_16:
  1892                           
  1893                           ; BSR set to: 61
  1894  00FF00  25                 	db	37
  1895  00FF01  34                 	db	52	;'4'
  1896  00FF02  2E                 	db	46
  1897  00FF03  34                 	db	52	;'4'
  1898  00FF04  75                 	db	117	;'u'
  1899  00FF05  6D                 	db	109	;'m'
  1900  00FF06  56                 	db	86	;'V'
  1901  00FF07  20                 	db	32
  1902  00FF08  25                 	db	37
  1903  00FF09  34                 	db	52	;'4'
  1904  00FF0A  2E                 	db	46
  1905  00FF0B  34                 	db	52	;'4'
  1906  00FF0C  75                 	db	117	;'u'
  1907  00FF0D  6D                 	db	109	;'m'
  1908  00FF0E  56                 	db	86	;'V'
  1909  00FF0F  20                 	db	32
  1910  00FF10  25                 	db	37
  1911  00FF11  34                 	db	52	;'4'
  1912  00FF12  2E                 	db	46
  1913  00FF13  34                 	db	52	;'4'
  1914  00FF14  75                 	db	117	;'u'
  1915  00FF15  6D                 	db	109	;'m'
  1916  00FF16  56                 	db	86	;'V'
  1917  00FF17  00                 	db	0
  1918  00FF18                     STR_18:
  1919                           
  1920                           ; BSR set to: 61
  1921  00FF18  44                 	db	68	;'D'
  1922  00FF19  25                 	db	37
  1923  00FF1A  2E                 	db	46
  1924  00FF1B  32                 	db	50	;'2'
  1925  00FF1C  75                 	db	117	;'u'
  1926  00FF1D  2C                 	db	44
  1927  00FF1E  20                 	db	32
  1928  00FF1F  4D                 	db	77	;'M'
  1929  00FF20  25                 	db	37
  1930  00FF21  31                 	db	49	;'1'
  1931  00FF22  75                 	db	117	;'u'
  1932  00FF23  2C                 	db	44
  1933  00FF24  20                 	db	32
  1934  00FF25  50                 	db	80	;'P'
  1935  00FF26  25                 	db	37
  1936  00FF27  31                 	db	49	;'1'
  1937  00FF28  75                 	db	117	;'u'
  1938  00FF29  2C                 	db	44
  1939  00FF2A  20                 	db	32
  1940  00FF2B  49                 	db	73	;'I'
  1941  00FF2C  25                 	db	37
  1942  00FF2D  32                 	db	50	;'2'
  1943  00FF2E  75                 	db	117	;'u'
  1944  00FF2F  00                 	db	0
  1945  00FF30                     STR_19:
  1946                           
  1947                           ; BSR set to: 61
  1948  00FF30  56                 	db	86	;'V'
  1949  00FF31  3D                 	db	61	;'='
  1950  00FF32  25                 	db	37
  1951  00FF33  2B                 	db	43
  1952  00FF34  36                 	db	54	;'6'
  1953  00FF35  2E                 	db	46
  1954  00FF36  31                 	db	49	;'1'
  1955  00FF37  66                 	db	102	;'f'
  1956  00FF38  56                 	db	86	;'V'
  1957  00FF39  20                 	db	32
  1958  00FF3A  49                 	db	73	;'I'
  1959  00FF3B  3D                 	db	61	;'='
  1960  00FF3C  25                 	db	37
  1961  00FF3D  2B                 	db	43
  1962  00FF3E  33                 	db	51	;'3'
  1963  00FF3F  2E                 	db	46
  1964  00FF40  31                 	db	49	;'1'
  1965  00FF41  66                 	db	102	;'f'
  1966  00FF42  6D                 	db	109	;'m'
  1967  00FF43  41                 	db	65	;'A'
  1968  00FF44  20                 	db	32
  1969  00FF45  20                 	db	32
  1970  00FF46  00                 	db	0
  1971  00FF47                     STR_8:
  1972                           
  1973                           ; BSR set to: 61
  1974  00FF47  0D                 	db	13
  1975  00FF48  0A                 	db	10
  1976  00FF49  20                 	db	32
  1977  00FF4A  56                 	db	86	;'V'
  1978  00FF4B  6F                 	db	111	;'o'
  1979  00FF4C  6C                 	db	108	;'l'
  1980  00FF4D  74                 	db	116	;'t'
  1981  00FF4E  61                 	db	97	;'a'
  1982  00FF4F  67                 	db	103	;'g'
  1983  00FF50  65                 	db	101	;'e'
  1984  00FF51  20                 	db	32
  1985  00FF52  44                 	db	68	;'D'
  1986  00FF53  4F                 	db	79	;'O'
  1987  00FF54  57                 	db	87	;'W'
  1988  00FF55  4E                 	db	78	;'N'
  1989  00FF56  20                 	db	32
  1990  00FF57  0D                 	db	13
  1991  00FF58  0A                 	db	10
  1992  00FF59  00                 	db	0
  1993  00FF5A                     STR_5:
  1994                           
  1995                           ; BSR set to: 61
  1996  00FF5A  0D                 	db	13
  1997  00FF5B  0A                 	db	10
  1998  00FF5C  20                 	db	32
  1999  00FF5D  56                 	db	86	;'V'
  2000  00FF5E  6F                 	db	111	;'o'
  2001  00FF5F  6C                 	db	108	;'l'
  2002  00FF60  74                 	db	116	;'t'
  2003  00FF61  61                 	db	97	;'a'
  2004  00FF62  67                 	db	103	;'g'
  2005  00FF63  65                 	db	101	;'e'
  2006  00FF64  20                 	db	32
  2007  00FF65  4F                 	db	79	;'O'
  2008  00FF66  46                 	db	70	;'F'
  2009  00FF67  46                 	db	70	;'F'
  2010  00FF68  20                 	db	32
  2011  00FF69  0D                 	db	13
  2012  00FF6A  0A                 	db	10
  2013  00FF6B  00                 	db	0
  2014  00FF6C                     STR_9:
  2015                           
  2016                           ; BSR set to: 61
  2017  00FF6C  0D                 	db	13
  2018  00FF6D  0A                 	db	10
  2019  00FF6E  20                 	db	32
  2020  00FF6F  56                 	db	86	;'V'
  2021  00FF70  6F                 	db	111	;'o'
  2022  00FF71  6C                 	db	108	;'l'
  2023  00FF72  74                 	db	116	;'t'
  2024  00FF73  61                 	db	97	;'a'
  2025  00FF74  67                 	db	103	;'g'
  2026  00FF75  65                 	db	101	;'e'
  2027  00FF76  20                 	db	32
  2028  00FF77  4C                 	db	76	;'L'
  2029  00FF78  4F                 	db	79	;'O'
  2030  00FF79  57                 	db	87	;'W'
  2031  00FF7A  20                 	db	32
  2032  00FF7B  0D                 	db	13
  2033  00FF7C  0A                 	db	10
  2034  00FF7D  00                 	db	0
  2035  00FF7E                     STR_6:
  2036                           
  2037                           ; BSR set to: 61
  2038  00FF7E  0D                 	db	13
  2039  00FF7F  0A                 	db	10
  2040  00FF80  20                 	db	32
  2041  00FF81  56                 	db	86	;'V'
  2042  00FF82  6F                 	db	111	;'o'
  2043  00FF83  6C                 	db	108	;'l'
  2044  00FF84  74                 	db	116	;'t'
  2045  00FF85  61                 	db	97	;'a'
  2046  00FF86  67                 	db	103	;'g'
  2047  00FF87  65                 	db	101	;'e'
  2048  00FF88  20                 	db	32
  2049  00FF89  4F                 	db	79	;'O'
  2050  00FF8A  4E                 	db	78	;'N'
  2051  00FF8B  20                 	db	32
  2052  00FF8C  0D                 	db	13
  2053  00FF8D  0A                 	db	10
  2054  00FF8E  00                 	db	0
  2055  00FF8F                     STR_7:
  2056                           
  2057                           ; BSR set to: 61
  2058  00FF8F  0D                 	db	13
  2059  00FF90  0A                 	db	10
  2060  00FF91  20                 	db	32
  2061  00FF92  56                 	db	86	;'V'
  2062  00FF93  6F                 	db	111	;'o'
  2063  00FF94  6C                 	db	108	;'l'
  2064  00FF95  74                 	db	116	;'t'
  2065  00FF96  61                 	db	97	;'a'
  2066  00FF97  67                 	db	103	;'g'
  2067  00FF98  65                 	db	101	;'e'
  2068  00FF99  20                 	db	32
  2069  00FF9A  55                 	db	85	;'U'
  2070  00FF9B  50                 	db	80	;'P'
  2071  00FF9C  20                 	db	32
  2072  00FF9D  0D                 	db	13
  2073  00FF9E  0A                 	db	10
  2074  00FF9F  00                 	db	0
  2075  00FFA0                     STR_12:
  2076                           
  2077                           ; BSR set to: 61
  2078  00FFA0  0D                 	db	13
  2079  00FFA1  0A                 	db	10
  2080  00FFA2  20                 	db	32
  2081  00FFA3  42                 	db	66	;'B'
  2082  00FFA4  75                 	db	117	;'u'
  2083  00FFA5  69                 	db	105	;'i'
  2084  00FFA6  6C                 	db	108	;'l'
  2085  00FFA7  64                 	db	100	;'d'
  2086  00FFA8  20                 	db	32
  2087  00FFA9  25                 	db	37
  2088  00FFAA  73                 	db	115	;'s'
  2089  00FFAB  20                 	db	32
  2090  00FFAC  25                 	db	37
  2091  00FFAD  73                 	db	115	;'s'
  2092  00FFAE  0D                 	db	13
  2093  00FFAF  0A                 	db	10
  2094  00FFB0  00                 	db	0
  2095  00FFB1                     STR_1:
  2096                           
  2097                           ; BSR set to: 61
  2098  00FFB1  41                 	db	65	;'A'
  2099  00FFB2  70                 	db	112	;'p'
  2100  00FFB3  72                 	db	114	;'r'
  2101  00FFB4  20                 	db	32
  2102  00FFB5  20                 	db	32
  2103  00FFB6  35                 	db	53	;'5'
  2104  00FFB7  20                 	db	32
  2105  00FFB8  32                 	db	50	;'2'
  2106  00FFB9  30                 	db	48	;'0'
  2107  00FFBA  32                 	db	50	;'2'
  2108  00FFBB  32                 	db	50	;'2'
  2109  00FFBC  00                 	db	0
  2110  00FFBD                     STR_2:
  2111                           
  2112                           ; BSR set to: 61
  2113  00FFBD  31                 	db	49	;'1'
  2114  00FFBE  30                 	db	48	;'0'
  2115  00FFBF  3A                 	db	58	;':'
  2116  00FFC0  31                 	db	49	;'1'
  2117  00FFC1  36                 	db	54	;'6'
  2118  00FFC2  3A                 	db	58	;':'
  2119  00FFC3  31                 	db	49	;'1'
  2120  00FFC4  37                 	db	55	;'7'
  2121  00FFC5  00                 	db	0
  2122  00FFC6                     STR_13:
  2123                           
  2124                           ; BSR set to: 61
  2125  00FFC6  25                 	db	37
  2126  00FFC7  73                 	db	115	;'s'
  2127  00FFC8  20                 	db	32
  2128  00FFC9  25                 	db	37
  2129  00FFCA  73                 	db	115	;'s'
  2130  00FFCB  00                 	db	0
  2131  00FFCC                     STR_30:
  2132                           
  2133                           ; BSR set to: 61
  2134  00FFCC  49                 	db	73	;'I'
  2135  00FFCD  4E                 	db	78	;'N'
  2136  00FFCE  46                 	db	70	;'F'
  2137  00FFCF  00                 	db	0
  2138  00FFD0                     STR_34:
  2139                           
  2140                           ; BSR set to: 61
  2141  00FFD0  4E                 	db	78	;'N'
  2142  00FFD1  41                 	db	65	;'A'
  2143  00FFD2  4E                 	db	78	;'N'
  2144  00FFD3  00                 	db	0
  2145  00FFD4                     STR_31:
  2146                           
  2147                           ; BSR set to: 61
  2148  00FFD4  69                 	db	105	;'i'
  2149  00FFD5  6E                 	db	110	;'n'
  2150  00FFD6  66                 	db	102	;'f'
  2151  00FFD7  00                 	db	0
  2152  00FFD8                     STR_35:
  2153                           
  2154                           ; BSR set to: 61
  2155  00FFD8  6E                 	db	110	;'n'
  2156  00FFD9  61                 	db	97	;'a'
  2157  00FFDA  6E                 	db	110	;'n'
  2158  00FFDB  00                 	db	0
  2159  00FFDC                     STR_43:
  2160                           
  2161                           ; BSR set to: 61
  2162  00FFDC  6C                 	db	108	;'l'
  2163  00FFDD  6C                 	db	108	;'l'
  2164  00FFDE  73                 	db	115	;'s'
  2165  00FFDF  00                 	db	0
  2166  00FFE0                     STR_38:
  2167                           
  2168                           ; BSR set to: 61
  2169  00FFE0  6C                 	db	108	;'l'
  2170  00FFE1  66                 	db	102	;'f'
  2171  00FFE2  00                 	db	0
  2172  00FFE3                     STR_27:
  2173                           
  2174                           ; BSR set to: 61
  2175  00FFE3  70                 	db	112	;'p'
  2176  00FFE4  30                 	db	48	;'0'
  2177  00FFE5  00                 	db	0
  2178  00FFE6                     STR_28:
  2179                           
  2180                           ; BSR set to: 61
  2181  00FFE6  70                 	db	112	;'p'
  2182  00FFE7  31                 	db	49	;'1'
  2183  00FFE8  00                 	db	0
  2184  00FFE9                     STR_25:
  2185                           
  2186                           ; BSR set to: 61
  2187  00FFE9  70                 	db	112	;'p'
  2188  00FFEA  64                 	db	100	;'d'
  2189  00FFEB  00                 	db	0
  2190  00FFEC                     STR_26:
  2191                           
  2192                           ; BSR set to: 61
  2193  00FFEC  70                 	db	112	;'p'
  2194  00FFED  6C                 	db	108	;'l'
  2195  00FFEE  00                 	db	0
  2196  00FFEF                     STR_22:
  2197                           
  2198                           ; BSR set to: 61
  2199  00FFEF  70                 	db	112	;'p'
  2200  00FFF0  6F                 	db	111	;'o'
  2201  00FFF1  00                 	db	0
  2202  00FFF2                     STR_23:
  2203                           
  2204                           ; BSR set to: 61
  2205  00FFF2  70                 	db	112	;'p'
  2206  00FFF3  70                 	db	112	;'p'
  2207  00FFF4  00                 	db	0
  2208  00FFF5                     STR_20:
  2209                           
  2210                           ; BSR set to: 61
  2211  00FFF5  70                 	db	112	;'p'
  2212  00FFF6  72                 	db	114	;'r'
  2213  00FFF7  00                 	db	0
  2214  00FFF8                     STR_21:
  2215                           
  2216                           ; BSR set to: 61
  2217  00FFF8  70                 	db	112	;'p'
  2218  00FFF9  73                 	db	115	;'s'
  2219  00FFFA  00                 	db	0
  2220  00FFFB                     STR_24:
  2221                           
  2222                           ; BSR set to: 61
  2223  00FFFB  70                 	db	112	;'p'
  2224  00FFFC  75                 	db	117	;'u'
  2225  00FFFD  00                 	db	0
  2226  00FFFE  00                 	db	0	; dummy byte at the end
  2227  0000                     
  2228                           ; #config settings
  2229                           
  2230                           	psect	cinit
  2231  0130F6                     __pcinit:
  2232                           	callstack 0
  2233  0130F6                     start_initialization:
  2234                           	callstack 0
  2235  0130F6                     __initialization:
  2236                           	callstack 0
  2237                           
  2238                           ; Initialize objects allocated to BIGRAM (1024 bytes)
  2239                           ; load TBLPTR registers with __pidataBIGRAM
  2240  0130F6  0E2A               	movlw	low __pidataBIGRAM
  2241  0130F8  6EF6               	movwf	tblptrl,c
  2242  0130FA  0E17               	movlw	high __pidataBIGRAM
  2243  0130FC  6EF7               	movwf	tblptrh,c
  2244  0130FE  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2245  013100  6EF8               	movwf	tblptru,c
  2246  013102  EE05  F143         	lfsr	0,__pdataBIGRAM
  2247  013106  EE11 F000          	lfsr	1,1024
  2248  01310A                     copy_data0:
  2249  01310A  0009               	tblrd		*+
  2250  01310C  006F FFD7 FFEE     	movff	tablat,postinc0
  2251  013112  50E5               	movf	postdec1,w,c
  2252  013114  50E1               	movf	fsr1l,w,c
  2253  013116  E1F9               	bnz	copy_data0
  2254  013118  50E2               	movf	fsr1h,w,c
  2255  01311A  E1F7               	bnz	copy_data0
  2256                           
  2257                           ; Initialize objects allocated to BANK2 (90 bytes)
  2258                           ; load TBLPTR registers with __pidataBANK2
  2259  01311C  0E48               	movlw	low __pidataBANK2
  2260  01311E  6EF6               	movwf	tblptrl,c
  2261  013120  0E40               	movlw	high __pidataBANK2
  2262  013122  6EF7               	movwf	tblptrh,c
  2263  013124  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2264  013126  6EF8               	movwf	tblptru,c
  2265  013128  EE00  F280         	lfsr	0,__pdataBANK2
  2266  01312C  EE10 F05A          	lfsr	1,90
  2267  013130                     copy_data1:
  2268  013130  0009               	tblrd		*+
  2269  013132  006F FFD7 FFEE     	movff	tablat,postinc0
  2270  013138  50E5               	movf	postdec1,w,c
  2271  01313A  50E1               	movf	fsr1l,w,c
  2272  01313C  E1F9               	bnz	copy_data1
  2273                           
  2274                           ; Initialize objects allocated to BANK1 (11 bytes)
  2275                           ; load TBLPTR registers with __pidataBANK1
  2276  01313E  0EDE               	movlw	low __pidataBANK1
  2277  013140  6EF6               	movwf	tblptrl,c
  2278  013142  0E4E               	movlw	high __pidataBANK1
  2279  013144  6EF7               	movwf	tblptrh,c
  2280  013146  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2281  013148  6EF8               	movwf	tblptru,c
  2282  01314A  EE00  F1C0         	lfsr	0,__pdataBANK1
  2283  01314E  EE10 F00B          	lfsr	1,11
  2284  013152                     copy_data2:
  2285  013152  0009               	tblrd		*+
  2286  013154  006F FFD7 FFEE     	movff	tablat,postinc0
  2287  01315A  50E5               	movf	postdec1,w,c
  2288  01315C  50E1               	movf	fsr1l,w,c
  2289  01315E  E1F9               	bnz	copy_data2
  2290                           
  2291                           ; Initialize objects allocated to BANK0 (2 bytes)
  2292                           ; load TBLPTR registers with __pidataBANK0
  2293  013160  0E20               	movlw	low __pidataBANK0
  2294  013162  6EF6               	movwf	tblptrl,c
  2295  013164  0E4F               	movlw	high __pidataBANK0
  2296  013166  6EF7               	movwf	tblptrh,c
  2297  013168  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2298  01316A  6EF8               	movwf	tblptru,c
  2299  01316C  0009               	tblrd		*+	;fetch initializer
  2300  01316E  006F FFD4  F0FD    	movff	tablat,__pdataBANK0
  2301  013174  0009               	tblrd		*+	;fetch initializer
  2302  013176  006F FFD4  F0FE    	movff	tablat,__pdataBANK0+1
  2303                           
  2304                           ; Initialize objects allocated to COMRAM (2 bytes)
  2305                           ; load TBLPTR registers with __pidataCOMRAM
  2306  01317C  0E1E               	movlw	low __pidataCOMRAM
  2307  01317E  6EF6               	movwf	tblptrl,c
  2308  013180  0E4F               	movlw	high __pidataCOMRAM
  2309  013182  6EF7               	movwf	tblptrh,c
  2310  013184  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  2311  013186  6EF8               	movwf	tblptru,c
  2312  013188  0009               	tblrd		*+	;fetch initializer
  2313  01318A  006F FFD4  F03F    	movff	tablat,__pdataCOMRAM
  2314  013190  0009               	tblrd		*+	;fetch initializer
  2315  013192  006F FFD4  F040    	movff	tablat,__pdataCOMRAM+1
  2316                           
  2317                           ; Clear objects allocated to BIGRAM (4032 bytes)
  2318  013198  EE01  F183         	lfsr	0,__pbssBIGRAM
  2319  01319C  EE13 F3C0          	lfsr	1,4032
  2320  0131A0                     clear_0:
  2321  0131A0  6AEE               	clrf	postinc0,c
  2322  0131A2  50E5               	movf	postdec1,w,c
  2323  0131A4  50E1               	movf	fsr1l,w,c
  2324  0131A6  E1FC               	bnz	clear_0
  2325  0131A8  50E2               	movf	fsr1h,w,c
  2326  0131AA  E1FA               	bnz	clear_0
  2327                           
  2328                           ; Clear objects allocated to BANK5 (131 bytes)
  2329  0131AC  EE01  F100         	lfsr	0,__pbssBANK5
  2330  0131B0  0E83               	movlw	131
  2331  0131B2                     clear_1:
  2332  0131B2  6AEE               	clrf	postinc0,c
  2333  0131B4  06E8               	decf	wreg,f,c
  2334  0131B6  E1FD               	bnz	clear_1
  2335                           
  2336                           ; Clear objects allocated to BANK4 (255 bytes)
  2337  0131B8  EE01  F000         	lfsr	0,__pbssBANK4
  2338  0131BC  EE10 F0FF          	lfsr	1,255
  2339  0131C0                     clear_2:
  2340  0131C0  6AEE               	clrf	postinc0,c
  2341  0131C2  50E5               	movf	postdec1,w,c
  2342  0131C4  50E1               	movf	fsr1l,w,c
  2343  0131C6  E1FC               	bnz	clear_2
  2344  0131C8  50E2               	movf	fsr1h,w,c
  2345  0131CA  E1FA               	bnz	clear_2
  2346                           
  2347                           ; Clear objects allocated to BANK3 (131 bytes)
  2348  0131CC  EE00  F300         	lfsr	0,__pbssBANK3
  2349  0131D0  0E83               	movlw	131
  2350  0131D2                     clear_3:
  2351  0131D2  6AEE               	clrf	postinc0,c
  2352  0131D4  06E8               	decf	wreg,f,c
  2353  0131D6  E1FD               	bnz	clear_3
  2354                           
  2355                           ; Clear objects allocated to BANK2 (128 bytes)
  2356  0131D8  EE00  F200         	lfsr	0,__pbssBANK2
  2357  0131DC  0E80               	movlw	128
  2358  0131DE                     clear_4:
  2359  0131DE  6AEE               	clrf	postinc0,c
  2360  0131E0  06E8               	decf	wreg,f,c
  2361  0131E2  E1FD               	bnz	clear_4
  2362                           
  2363                           ; Clear objects allocated to BANK1 (157 bytes)
  2364  0131E4  EE00  F100         	lfsr	0,__pbssBANK1
  2365  0131E8  0E9D               	movlw	157
  2366  0131EA                     clear_5:
  2367  0131EA  6AEE               	clrf	postinc0,c
  2368  0131EC  06E8               	decf	wreg,f,c
  2369  0131EE  E1FD               	bnz	clear_5
  2370                           
  2371                           ; Clear objects allocated to BANK0 (9 bytes)
  2372  0131F0  EE00  F0F4         	lfsr	0,__pbssBANK0
  2373  0131F4  0E09               	movlw	9
  2374  0131F6                     clear_6:
  2375  0131F6  6AEE               	clrf	postinc0,c
  2376  0131F8  06E8               	decf	wreg,f,c
  2377  0131FA  E1FD               	bnz	clear_6
  2378                           
  2379                           ; Clear objects allocated to COMRAM (30 bytes)
  2380  0131FC  EE00  F021         	lfsr	0,__pbssCOMRAM
  2381  013200  0E1E               	movlw	30
  2382  013202                     clear_7:
  2383  013202  6AEE               	clrf	postinc0,c
  2384  013204  06E8               	decf	wreg,f,c
  2385  013206  E1FD               	bnz	clear_7
  2386                           
  2387                           ;
  2388                           ; Setup IVTBASE
  2389                           ;
  2390  013208  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2391  01320A  6ED5               	movwf	213,c
  2392  01320C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2393  01320E  6ED6               	movwf	214,c
  2394  013210  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2395  013212  6ED7               	movwf	215,c
  2396  013214                     end_of_initialization:
  2397                           	callstack 0
  2398  013214                     __end_of__initialization:
  2399                           	callstack 0
  2400  013214  0100               	movlb	0
  2401  013216  EF52  F088         	goto	_main	;jump to C main() function
  2402                           
  2403                           	psect	bssCOMRAM
  2404  000021                     __pbssCOMRAM:
  2405                           	callstack 0
  2406  000021                     _UART1_UARTInterruptHandler:
  2407                           	callstack 0
  2408  000021                     	ds	3
  2409  000024                     _UART1_FramingErrorInterruptHandler:
  2410                           	callstack 0
  2411  000024                     	ds	3
  2412  000027                     _UART1_TxInterruptHandler:
  2413                           	callstack 0
  2414  000027                     	ds	3
  2415  00002A                     _UART1_RxInterruptHandler:
  2416                           	callstack 0
  2417  00002A                     	ds	3
  2418  00002D                     _flags:
  2419                           	callstack 0
  2420  00002D                     	ds	2
  2421  00002F                     _timer5ReloadVal:
  2422                           	callstack 0
  2423  00002F                     	ds	2
  2424  000031                     TMR6_ISR@CountCallBack:
  2425                           	callstack 0
  2426  000031                     	ds	2
  2427  000033                     Adc_Isr@c_adc_chan:
  2428                           	callstack 0
  2429  000033                     	ds	1
  2430  000034                     _ps_type_index:
  2431                           	callstack 0
  2432  000034                     	ds	1
  2433  000035                     _mode:
  2434                           	callstack 0
  2435  000035                     	ds	1
  2436  000036                     _i_index:
  2437                           	callstack 0
  2438  000036                     	ds	1
  2439  000037                     _a_index:
  2440                           	callstack 0
  2441  000037                     	ds	1
  2442  000038                     _uart1RxLastError:
  2443                           	callstack 0
  2444  000038                     	ds	1
  2445  000039                     _uart1RxCount:
  2446                           	callstack 0
  2447  000039                     	ds	1
  2448  00003A                     _uart1RxTail:
  2449                           	callstack 0
  2450  00003A                     	ds	1
  2451  00003B                     _uart1RxHead:
  2452                           	callstack 0
  2453  00003B                     	ds	1
  2454  00003C                     _uart1TxBufferRemaining:
  2455                           	callstack 0
  2456  00003C                     	ds	1
  2457  00003D                     _uart1TxTail:
  2458                           	callstack 0
  2459  00003D                     	ds	1
  2460  00003E                     _uart1TxHead:
  2461                           	callstack 0
  2462  00003E                     	ds	1
  2463                           
  2464                           	psect	dataCOMRAM
  2465  00003F                     __pdataCOMRAM:
  2466                           	callstack 0
  2467  00003F                     _ps_type_ptr:
  2468                           	callstack 0
  2469  00003F                     	ds	2
  2470                           
  2471                           	psect	bssBANK0
  2472  0000F4                     __pbssBANK0:
  2473                           	callstack 0
  2474  0000F4                     _width:
  2475                           	callstack 0
  2476  0000F4                     	ds	2
  2477  0000F6                     _prec:
  2478                           	callstack 0
  2479  0000F6                     	ds	2
  2480  0000F8                     _res:
  2481                           	callstack 0
  2482  0000F8                     	ds	1
  2483  0000F9                     _mode_sw:
  2484                           	callstack 0
  2485  0000F9                     	ds	1
  2486  0000FA                     _dac_v:
  2487                           	callstack 0
  2488  0000FA                     	ds	1
  2489  0000FB                     _adc_tick:
  2490                           	callstack 0
  2491  0000FB                     	ds	1
  2492  0000FC                     _disp_tick:
  2493                           	callstack 0
  2494  0000FC                     	ds	1
  2495                           
  2496                           	psect	dataBANK0
  2497  0000FD                     __pdataBANK0:
  2498                           	callstack 0
  2499  0000FD                     _static_ps:
  2500                           	callstack 0
  2501  0000FD                     	ds	1
  2502  0000FE                     _roll_max:
  2503                           	callstack 0
  2504  0000FE                     	ds	1
  2505                           
  2506                           	psect	bssBANK1
  2507  000100                     __pbssBANK1:
  2508                           	callstack 0
  2509  000100                     _spi_link:
  2510                           	callstack 0
  2511  000100                     	ds	12
  2512  00010C                     _tickCount:
  2513                           	callstack 0
  2514  00010C                     	ds	12
  2515  000118                     floorf@F526:
  2516                           	callstack 0
  2517  000118                     	ds	4
  2518  00011C                     ___fpclassifyf@F465:
  2519                           	callstack 0
  2520  00011C                     	ds	4
  2521  000120                     wdtdelay@dcount:
  2522                           	callstack 0
  2523  000120                     	ds	4
  2524  000124                     _ival:
  2525                           	callstack 0
  2526  000124                     	ds	4
  2527  000128                     _vval:
  2528                           	callstack 0
  2529  000128                     	ds	4
  2530  00012C                     _UART1_ErrorHandler:
  2531                           	callstack 0
  2532  00012C                     	ds	3
  2533  00012F                     _UART1_OverrunErrorHandler:
  2534                           	callstack 0
  2535  00012F                     	ds	3
  2536  000132                     _UART1_FramingErrorHandler:
  2537                           	callstack 0
  2538  000132                     	ds	3
  2539  000135                     _DMA1_SCNTI_InterruptHandler:
  2540                           	callstack 0
  2541  000135                     	ds	3
  2542  000138                     _TMR5_InterruptHandler:
  2543                           	callstack 0
  2544  000138                     	ds	3
  2545  00013B                     _TMR6_InterruptHandler:
  2546                           	callstack 0
  2547  00013B                     	ds	3
  2548  00013E                     _ADCC_ADI_InterruptHandler:
  2549                           	callstack 0
  2550  00013E                     	ds	3
  2551  000141                     _nout:
  2552                           	callstack 0
  2553  000141                     	ds	2
  2554  000143                     _dbuf:
  2555                           	callstack 0
  2556  000143                     	ds	80
  2557  000193                     _SrcVarName0:
  2558                           	callstack 0
  2559  000193                     	ds	10
  2560                           
  2561                           	psect	dataBANK1
  2562  0001C0                     __pdataBANK1:
  2563                           	callstack 0
  2564  0001C0                     stoa@F1164:
  2565                           	callstack 0
  2566  0001C0                     	ds	7
  2567  0001C7                     _build_time:
  2568                           	callstack 0
  2569  0001C7                     	ds	2
  2570  0001C9                     _build_date:
  2571                           	callstack 0
  2572  0001C9                     	ds	2
  2573                           
  2574                           	psect	bssBANK2
  2575  000200                     __pbssBANK2:
  2576                           	callstack 0
  2577  000200                     _uart1RxStatusBuffer:
  2578                           	callstack 0
  2579  000200                     	ds	64
  2580  000240                     _uart1TxBuffer:
  2581                           	callstack 0
  2582  000240                     	ds	64
  2583                           
  2584                           	psect	dataBANK2
  2585  000280                     __pdataBANK2:
  2586                           	callstack 0
  2587  000280                     _g_cmds:
  2588                           	callstack 0
  2589  000280                     	ds	50
  2590  0002B2                     _ps_type:
  2591                           	callstack 0
  2592  0002B2                     	ds	40
  2593                           
  2594                           	psect	bssBANK3
  2595  000300                     __pbssBANK3:
  2596                           	callstack 0
  2597  000300                     _uart1RxBuffer:
  2598                           	callstack 0
  2599  000300                     	ds	64
  2600  000340                     _ring_buf1:
  2601                           	callstack 0
  2602  000340                     	ds	67
  2603                           
  2604                           	psect	bssBANK4
  2605  000400                     __pbssBANK4:
  2606                           	callstack 0
  2607  000400                     _buff1:
  2608                           	callstack 0
  2609  000400                     	ds	255
  2610                           
  2611                           	psect	bssBANK5
  2612  000500                     __pbssBANK5:
  2613                           	callstack 0
  2614  000500                     _cli_ctx:
  2615                           	callstack 0
  2616  000500                     	ds	131
  2617                           
  2618                           	psect	bssBIGRAM
  2619  000583                     __pbssBIGRAM:
  2620                           	callstack 0
  2621  000583                     _a:
  2622                           	callstack 0
  2623  000583                     	ds	4032
  2624                           
  2625                           	psect	dataBIGRAM
  2626  001543                     __pdataBIGRAM:
  2627                           	callstack 0
  2628  001543                     	ds	1024
  2629                           
  2630                           	psect	cstackBANK1
  2631  00019D                     __pcstackBANK1:
  2632                           	callstack 0
  2633  00019D                     ?_vfprintf:
  2634                           	callstack 0
  2635  00019D                     vfprintf@fp:
  2636                           	callstack 0
  2637                           
  2638                           ; 2 bytes @ 0x0
  2639  00019D                     	ds	2
  2640  00019F                     vfprintf@fmt:
  2641                           	callstack 0
  2642                           
  2643                           ; 2 bytes @ 0x2
  2644  00019F                     	ds	2
  2645  0001A1                     vfprintf@ap:
  2646                           	callstack 0
  2647                           
  2648                           ; 2 bytes @ 0x4
  2649  0001A1                     	ds	2
  2650  0001A3                     ?_sprintf:
  2651                           	callstack 0
  2652  0001A3                     ?_printf:
  2653                           	callstack 0
  2654  0001A3                     sprintf@s:
  2655                           	callstack 0
  2656  0001A3                     printf@fmt:
  2657                           	callstack 0
  2658                           
  2659                           ; 2 bytes @ 0x6
  2660  0001A3                     	ds	2
  2661  0001A5                     sprintf@fmt:
  2662                           	callstack 0
  2663                           
  2664                           ; 2 bytes @ 0x8
  2665  0001A5                     	ds	10
  2666  0001AF                     sprintf@ap:
  2667                           	callstack 0
  2668                           
  2669                           ; 2 bytes @ 0x12
  2670  0001AF                     	ds	2
  2671  0001B1                     sprintf@f:
  2672                           	callstack 0
  2673                           
  2674                           ; 11 bytes @ 0x14
  2675  0001B1                     	ds	11
  2676  0001BC                     ??_main:
  2677                           
  2678                           ; 1 bytes @ 0x1F
  2679  0001BC                     	ds	2
  2680  0001BE                     main@lcd_update:
  2681                           	callstack 0
  2682                           
  2683                           ; 1 bytes @ 0x21
  2684  0001BE                     	ds	1
  2685  0001BF                     main@i:
  2686                           	callstack 0
  2687                           
  2688                           ; 1 bytes @ 0x22
  2689  0001BF                     	ds	1
  2690                           
  2691                           	psect	cstackBANK0
  2692  000060                     __pcstackBANK0:
  2693                           	callstack 0
  2694  000060                     ??_display_led:
  2695  000060                     ?_strlen:
  2696                           	callstack 0
  2697  000060                     ?___fpclassifyf:
  2698                           	callstack 0
  2699  000060                     ?_isupper:
  2700                           	callstack 0
  2701  000060                     ?_isdigit:
  2702                           	callstack 0
  2703  000060                     ?_isspace:
  2704                           	callstack 0
  2705  000060                     ?___wmul:
  2706                           	callstack 0
  2707  000060                     ?___awdiv:
  2708                           	callstack 0
  2709  000060                     ?___awmod:
  2710                           	callstack 0
  2711  000060                     ?___fladd:
  2712                           	callstack 0
  2713  000060                     ?___fldiv:
  2714                           	callstack 0
  2715  000060                     ?___flneg:
  2716                           	callstack 0
  2717  000060                     ?___fltol:
  2718                           	callstack 0
  2719  000060                     ?___xxtofl:
  2720                           	callstack 0
  2721  000060                     ?___lodiv:
  2722                           	callstack 0
  2723  000060                     ?___lomod:
  2724                           	callstack 0
  2725  000060                     putch@txData:
  2726                           	callstack 0
  2727  000060                     PWM5_LoadDutyValue@dutyValue:
  2728                           	callstack 0
  2729  000060                     PWM6_LoadDutyValue@dutyValue:
  2730                           	callstack 0
  2731  000060                     DATAEE_WriteByte@bAdd:
  2732                           	callstack 0
  2733  000060                     DATAEE_ReadByte@bAdd:
  2734                           	callstack 0
  2735  000060                     StartTimer@count:
  2736                           	callstack 0
  2737  000060                     linux_getc@a_data:
  2738                           	callstack 0
  2739  000060                     ringBufS_put_dma@_this:
  2740                           	callstack 0
  2741  000060                     ___wmul@multiplier:
  2742                           	callstack 0
  2743  000060                     ___awdiv@dividend:
  2744                           	callstack 0
  2745  000060                     ___awmod@dividend:
  2746                           	callstack 0
  2747  000060                     memcpy@d1:
  2748                           	callstack 0
  2749  000060                     memset@dest:
  2750                           	callstack 0
  2751  000060                     isdigit@c:
  2752                           	callstack 0
  2753  000060                     isspace@c:
  2754                           	callstack 0
  2755  000060                     isupper@c:
  2756                           	callstack 0
  2757  000060                     strcpy@dest:
  2758                           	callstack 0
  2759  000060                     strlen@s:
  2760                           	callstack 0
  2761  000060                     ADCC_SetADIInterruptHandler@InterruptHandler:
  2762                           	callstack 0
  2763  000060                     TMR6_SetInterruptHandler@InterruptHandler:
  2764                           	callstack 0
  2765  000060                     TMR5_SetInterruptHandler@InterruptHandler:
  2766                           	callstack 0
  2767  000060                     DMA1_SetSCNTIInterruptHandler@InterruptHandler:
  2768                           	callstack 0
  2769  000060                     UART1_SetFramingErrorHandler@interruptHandler:
  2770                           	callstack 0
  2771  000060                     UART1_SetOverrunErrorHandler@interruptHandler:
  2772                           	callstack 0
  2773  000060                     UART1_SetErrorHandler@interruptHandler:
  2774                           	callstack 0
  2775  000060                     UART1_SetRxInterruptHandler@InterruptHandler:
  2776                           	callstack 0
  2777  000060                     UART1_SetTxInterruptHandler@InterruptHandler:
  2778                           	callstack 0
  2779  000060                     UART1_SetFramingErrorInterruptHandler@InterruptHandler:
  2780                           	callstack 0
  2781  000060                     UART1_SetUartInterruptHandler@InterruptHandler:
  2782                           	callstack 0
  2783  000060                     wdtdelay@delay:
  2784                           	callstack 0
  2785  000060                     ___fleq@ff1:
  2786                           	callstack 0
  2787  000060                     ___flneg@f1:
  2788                           	callstack 0
  2789  000060                     ___fltol@f1:
  2790                           	callstack 0
  2791  000060                     ___fladd@b:
  2792                           	callstack 0
  2793  000060                     ___fldiv@b:
  2794                           	callstack 0
  2795  000060                     ___xxtofl@val:
  2796                           	callstack 0
  2797  000060                     ___fpclassifyf@x:
  2798                           	callstack 0
  2799  000060                     ___lodiv@dividend:
  2800                           	callstack 0
  2801  000060                     ___lomod@dividend:
  2802                           	callstack 0
  2803                           
  2804                           ; 8 bytes @ 0x0
  2805  000060                     	ds	1
  2806  000061                     ?_fputc:
  2807                           	callstack 0
  2808  000061                     fputc@c:
  2809                           	callstack 0
  2810                           
  2811                           ; 2 bytes @ 0x1
  2812  000061                     	ds	1
  2813  000062                     ??_isupper:
  2814  000062                     ??_isdigit:
  2815  000062                     ??_isspace:
  2816  000062                     ??_PWM5_LoadDutyValue:
  2817  000062                     ??_PWM6_LoadDutyValue:
  2818  000062                     ??_StartTimer:
  2819  000062                     DATAEE_WriteByte@bData:
  2820                           	callstack 0
  2821  000062                     ringBufS_put_dma@c:
  2822                           	callstack 0
  2823  000062                     ___wmul@multiplicand:
  2824                           	callstack 0
  2825  000062                     ___awdiv@divisor:
  2826                           	callstack 0
  2827  000062                     ___awmod@divisor:
  2828                           	callstack 0
  2829  000062                     memcpy@s1:
  2830                           	callstack 0
  2831  000062                     memset@c:
  2832                           	callstack 0
  2833  000062                     strcpy@src:
  2834                           	callstack 0
  2835  000062                     strlen@a:
  2836                           	callstack 0
  2837                           
  2838                           ; 2 bytes @ 0x2
  2839  000062                     	ds	1
  2840  000063                     ??_TMR5_Initialize:
  2841  000063                     fputc@fp:
  2842                           	callstack 0
  2843                           
  2844                           ; 2 bytes @ 0x3
  2845  000063                     	ds	1
  2846  000064                     ??___fpclassifyf:
  2847  000064                     ??_strcpy:
  2848  000064                     ??___fltol:
  2849  000064                     ??___xxtofl:
  2850  000064                     ?_strncmp:
  2851                           	callstack 0
  2852  000064                     send_lcd_data@data:
  2853                           	callstack 0
  2854  000064                     send_lcd_cmd@cmd:
  2855                           	callstack 0
  2856  000064                     send_lcd_cmd_long@cmd:
  2857                           	callstack 0
  2858  000064                     ___awdiv@counter:
  2859                           	callstack 0
  2860  000064                     ___awmod@counter:
  2861                           	callstack 0
  2862  000064                     WaitMs@numMilliseconds:
  2863                           	callstack 0
  2864  000064                     ___wmul@product:
  2865                           	callstack 0
  2866  000064                     memcpy@n:
  2867                           	callstack 0
  2868  000064                     memset@n:
  2869                           	callstack 0
  2870  000064                     strncmp@_l:
  2871                           	callstack 0
  2872  000064                     ___fleq@ff2:
  2873                           	callstack 0
  2874  000064                     ___fladd@a:
  2875                           	callstack 0
  2876  000064                     ___fldiv@a:
  2877                           	callstack 0
  2878                           
  2879                           ; 4 bytes @ 0x4
  2880  000064                     	ds	1
  2881  000065                     ??_fputc:
  2882  000065                     ___awdiv@sign:
  2883                           	callstack 0
  2884  000065                     ___awmod@sign:
  2885                           	callstack 0
  2886                           
  2887                           ; 1 bytes @ 0x5
  2888  000065                     	ds	1
  2889  000066                     ??_memset:
  2890  000066                     ?_tolower:
  2891                           	callstack 0
  2892  000066                     ?_atoi:
  2893                           	callstack 0
  2894  000066                     memcpy@tmp:
  2895                           	callstack 0
  2896  000066                     ___awdiv@quotient:
  2897                           	callstack 0
  2898  000066                     atoi@s:
  2899                           	callstack 0
  2900  000066                     strcpy@s:
  2901                           	callstack 0
  2902  000066                     strncmp@_r:
  2903                           	callstack 0
  2904  000066                     tolower@c:
  2905                           	callstack 0
  2906                           
  2907                           ; 2 bytes @ 0x6
  2908  000066                     	ds	1
  2909  000067                     memcpy@d:
  2910                           	callstack 0
  2911                           
  2912                           ; 2 bytes @ 0x7
  2913  000067                     	ds	1
  2914  000068                     ??___fladd:
  2915  000068                     ??___fldiv:
  2916  000068                     ??_tolower:
  2917  000068                     ??_atoi:
  2918  000068                     ??___fleq:
  2919  000068                     ___fltol@sign1:
  2920                           	callstack 0
  2921  000068                     ___xxtofl@sign:
  2922                           	callstack 0
  2923  000068                     memset@k:
  2924                           	callstack 0
  2925  000068                     ___fpclassifyf@e:
  2926                           	callstack 0
  2927  000068                     strcpy@d:
  2928                           	callstack 0
  2929  000068                     strncmp@n:
  2930                           	callstack 0
  2931  000068                     ___lodiv@divisor:
  2932                           	callstack 0
  2933  000068                     ___lomod@divisor:
  2934                           	callstack 0
  2935                           
  2936                           ; 8 bytes @ 0x8
  2937  000068                     	ds	1
  2938  000069                     ___fltol@exp1:
  2939                           	callstack 0
  2940  000069                     ___xxtofl@exp:
  2941                           	callstack 0
  2942  000069                     memcpy@s:
  2943                           	callstack 0
  2944                           
  2945                           ; 2 bytes @ 0x9
  2946  000069                     	ds	1
  2947  00006A                     ??_strncmp:
  2948  00006A                     ?_fputs:
  2949                           	callstack 0
  2950  00006A                     ?_stoa:
  2951                           	callstack 0
  2952  00006A                     memset@s:
  2953                           	callstack 0
  2954  00006A                     stoa@fp:
  2955                           	callstack 0
  2956  00006A                     fputs@s:
  2957                           	callstack 0
  2958  00006A                     ___xxtofl@arg:
  2959                           	callstack 0
  2960  00006A                     ___fpclassifyf@u:
  2961                           	callstack 0
  2962                           
  2963                           ; 4 bytes @ 0xA
  2964  00006A                     	ds	1
  2965  00006B                     ringBufS_put_dma_cpy@_this:
  2966                           	callstack 0
  2967                           
  2968                           ; 2 bytes @ 0xB
  2969  00006B                     	ds	1
  2970  00006C                     ___fladd@signs:
  2971                           	callstack 0
  2972  00006C                     ringBufS_init@_this:
  2973                           	callstack 0
  2974  00006C                     ringBufS_flush@_this:
  2975                           	callstack 0
  2976  00006C                     stoa@s:
  2977                           	callstack 0
  2978  00006C                     atoi@neg:
  2979                           	callstack 0
  2980  00006C                     fputs@fp:
  2981                           	callstack 0
  2982  00006C                     strncmp@l:
  2983                           	callstack 0
  2984  00006C                     ___fldiv@rem:
  2985                           	callstack 0
  2986                           
  2987                           ; 4 bytes @ 0xC
  2988  00006C                     	ds	1
  2989  00006D                     ___fladd@aexp:
  2990                           	callstack 0
  2991  00006D                     ringBufS_put_dma_cpy@ptr:
  2992                           	callstack 0
  2993                           
  2994                           ; 2 bytes @ 0xD
  2995  00006D                     	ds	1
  2996  00006E                     ??_fputs:
  2997  00006E                     ??_stoa:
  2998  00006E                     ?___flmul:
  2999                           	callstack 0
  3000  00006E                     ringBufS_flush@clearBuffer:
  3001                           	callstack 0
  3002  00006E                     ___fladd@bexp:
  3003                           	callstack 0
  3004  00006E                     atoi@n:
  3005                           	callstack 0
  3006  00006E                     strncmp@r:
  3007                           	callstack 0
  3008  00006E                     ___flmul@b:
  3009                           	callstack 0
  3010                           
  3011                           ; 4 bytes @ 0xE
  3012  00006E                     	ds	1
  3013  00006F                     send_lcd_data_dma@strPtr:
  3014                           	callstack 0
  3015  00006F                     ringBufS_put_dma_cpy@len:
  3016                           	callstack 0
  3017  00006F                     ___fladd@grs:
  3018                           	callstack 0
  3019  00006F                     stoa@nuls:
  3020                           	callstack 0
  3021                           
  3022                           ; 7 bytes @ 0xF
  3023  00006F                     	ds	1
  3024  000070                     send_lcd_cmd_dma@strPtr:
  3025                           	callstack 0
  3026  000070                     ___fldiv@sign:
  3027                           	callstack 0
  3028  000070                     fputs@c:
  3029                           	callstack 0
  3030  000070                     eaDogM_WriteString@strPtr:
  3031                           	callstack 0
  3032  000070                     ___lodiv@quotient:
  3033                           	callstack 0
  3034                           
  3035                           ; 8 bytes @ 0x10
  3036  000070                     	ds	1
  3037  000071                     eaDogM_WriteCommand@cmd:
  3038                           	callstack 0
  3039  000071                     ___fldiv@new_exp:
  3040                           	callstack 0
  3041  000071                     fputs@i:
  3042                           	callstack 0
  3043                           
  3044                           ; 2 bytes @ 0x11
  3045  000071                     	ds	1
  3046  000072                     eaDogM_WriteString@len:
  3047                           	callstack 0
  3048  000072                     ___flmul@a:
  3049                           	callstack 0
  3050                           
  3051                           ; 4 bytes @ 0x12
  3052  000072                     	ds	1
  3053  000073                     ?_pad:
  3054                           	callstack 0
  3055  000073                     eaDogM_WriteStringAtPos@c:
  3056                           	callstack 0
  3057  000073                     pad@fp:
  3058                           	callstack 0
  3059  000073                     puts@s:
  3060                           	callstack 0
  3061  000073                     ___fldiv@grs:
  3062                           	callstack 0
  3063                           
  3064                           ; 4 bytes @ 0x13
  3065  000073                     	ds	1
  3066  000074                     eaDogM_WriteStringAtPos@strPtr:
  3067                           	callstack 0
  3068                           
  3069                           ; 2 bytes @ 0x14
  3070  000074                     	ds	1
  3071  000075                     _puts$4363:
  3072                           	callstack 0
  3073  000075                     pad@buf:
  3074                           	callstack 0
  3075                           
  3076                           ; 2 bytes @ 0x15
  3077  000075                     	ds	1
  3078  000076                     ??_eaDogM_WriteStringAtPos:
  3079  000076                     ??___flmul:
  3080  000076                     fh_pr@a_data:
  3081                           	callstack 0
  3082  000076                     fh_p1@a_data:
  3083                           	callstack 0
  3084  000076                     cli_init@a_ctx:
  3085                           	callstack 0
  3086  000076                     linux_putc@data:
  3087                           	callstack 0
  3088  000076                     stoa@i:
  3089                           	callstack 0
  3090                           
  3091                           ; 2 bytes @ 0x16
  3092  000076                     	ds	1
  3093  000077                     ___fldiv@bexp:
  3094                           	callstack 0
  3095  000077                     pad@p:
  3096                           	callstack 0
  3097                           
  3098                           ; 2 bytes @ 0x17
  3099  000077                     	ds	1
  3100  000078                     linux_putc@a_len:
  3101                           	callstack 0
  3102  000078                     eaDogM_WriteStringAtPos@r:
  3103                           	callstack 0
  3104  000078                     ___lodiv@counter:
  3105                           	callstack 0
  3106  000078                     ___fldiv@aexp:
  3107                           	callstack 0
  3108  000078                     cli_init@a_cmds:
  3109                           	callstack 0
  3110  000078                     __cli_interpret_cmd@a_ctx:
  3111                           	callstack 0
  3112  000078                     stoa@w:
  3113                           	callstack 0
  3114                           
  3115                           ; 2 bytes @ 0x18
  3116  000078                     	ds	1
  3117  000079                     ??_pad:
  3118  000079                     ?_floorf:
  3119                           	callstack 0
  3120  000079                     eaDogM_WriteStringAtPos@row:
  3121                           	callstack 0
  3122  000079                     floorf@x:
  3123                           	callstack 0
  3124                           
  3125                           ; 4 bytes @ 0x19
  3126  000079                     	ds	1
  3127  00007A                     ??__cli_interpret_cmd:
  3128  00007A                     ___flmul@sign:
  3129                           	callstack 0
  3130  00007A                     pad@i:
  3131                           	callstack 0
  3132  00007A                     stoa@cp:
  3133                           	callstack 0
  3134                           
  3135                           ; 2 bytes @ 0x1A
  3136  00007A                     	ds	1
  3137  00007B                     ___flmul@aexp:
  3138                           	callstack 0
  3139                           
  3140                           ; 1 bytes @ 0x1B
  3141  00007B                     	ds	1
  3142  00007C                     ___flmul@bexp:
  3143                           	callstack 0
  3144  00007C                     pad@w:
  3145                           	callstack 0
  3146  00007C                     stoa@p:
  3147                           	callstack 0
  3148                           
  3149                           ; 2 bytes @ 0x1C
  3150  00007C                     	ds	1
  3151  00007D                     ??_floorf:
  3152  00007D                     ___flmul@grs:
  3153                           	callstack 0
  3154                           
  3155                           ; 4 bytes @ 0x1D
  3156  00007D                     	ds	1
  3157  00007E                     ?_utoa:
  3158                           	callstack 0
  3159  00007E                     stoa@l:
  3160                           	callstack 0
  3161  00007E                     utoa@fp:
  3162                           	callstack 0
  3163                           
  3164                           ; 2 bytes @ 0x1E
  3165  00007E                     	ds	2
  3166  000080                     utoa@d:
  3167                           	callstack 0
  3168                           
  3169                           ; 8 bytes @ 0x20
  3170  000080                     	ds	1
  3171  000081                     ___flmul@prod:
  3172                           	callstack 0
  3173                           
  3174                           ; 4 bytes @ 0x21
  3175  000081                     	ds	1
  3176  000082                     __cli_interpret_cmd@ret:
  3177                           	callstack 0
  3178                           
  3179                           ; 1 bytes @ 0x22
  3180  000082                     	ds	1
  3181  000083                     __cli_interpret_cmd@i:
  3182                           	callstack 0
  3183  000083                     floorf@m:
  3184                           	callstack 0
  3185                           
  3186                           ; 4 bytes @ 0x23
  3187  000083                     	ds	1
  3188  000084                     cli_read@a_ctx:
  3189                           	callstack 0
  3190                           
  3191                           ; 2 bytes @ 0x24
  3192  000084                     	ds	1
  3193  000085                     ___flmul@temp:
  3194                           	callstack 0
  3195                           
  3196                           ; 2 bytes @ 0x25
  3197  000085                     	ds	1
  3198  000086                     ??_cli_read:
  3199                           
  3200                           ; 1 bytes @ 0x26
  3201  000086                     	ds	1
  3202  000087                     ?___flsub:
  3203                           	callstack 0
  3204  000087                     floorf@e:
  3205                           	callstack 0
  3206  000087                     ___flge@ff1:
  3207                           	callstack 0
  3208  000087                     ___flsub@b:
  3209                           	callstack 0
  3210                           
  3211                           ; 4 bytes @ 0x27
  3212  000087                     	ds	1
  3213  000088                     ??_utoa:
  3214                           
  3215                           ; 1 bytes @ 0x28
  3216  000088                     	ds	1
  3217  000089                     _cli_read$3080:
  3218                           	callstack 0
  3219  000089                     floorf@u:
  3220                           	callstack 0
  3221                           
  3222                           ; 4 bytes @ 0x29
  3223  000089                     	ds	2
  3224  00008B                     cli_read@i:
  3225                           	callstack 0
  3226  00008B                     ___flge@ff2:
  3227                           	callstack 0
  3228  00008B                     ___flsub@a:
  3229                           	callstack 0
  3230                           
  3231                           ; 4 bytes @ 0x2B
  3232  00008B                     	ds	4
  3233  00008F                     ??___flge:
  3234                           
  3235                           ; 1 bytes @ 0x2F
  3236  00008F                     	ds	1
  3237  000090                     utoa@p:
  3238                           	callstack 0
  3239                           
  3240                           ; 2 bytes @ 0x30
  3241  000090                     	ds	2
  3242  000092                     utoa@w:
  3243                           	callstack 0
  3244                           
  3245                           ; 2 bytes @ 0x32
  3246  000092                     	ds	1
  3247  000093                     ?_efgtoa:
  3248                           	callstack 0
  3249  000093                     efgtoa@fp:
  3250                           	callstack 0
  3251                           
  3252                           ; 2 bytes @ 0x33
  3253  000093                     	ds	1
  3254  000094                     utoa@n:
  3255                           	callstack 0
  3256                           
  3257                           ; 8 bytes @ 0x34
  3258  000094                     	ds	1
  3259  000095                     efgtoa@f:
  3260                           	callstack 0
  3261                           
  3262                           ; 4 bytes @ 0x35
  3263  000095                     	ds	4
  3264  000099                     efgtoa@c:
  3265                           	callstack 0
  3266                           
  3267                           ; 1 bytes @ 0x39
  3268  000099                     	ds	1
  3269  00009A                     ??_efgtoa:
  3270                           
  3271                           ; 1 bytes @ 0x3A
  3272  00009A                     	ds	2
  3273  00009C                     utoa@i:
  3274                           	callstack 0
  3275                           
  3276                           ; 2 bytes @ 0x3C
  3277  00009C                     	ds	3
  3278  00009F                     _efgtoa$4172:
  3279                           	callstack 0
  3280                           
  3281                           ; 2 bytes @ 0x3F
  3282  00009F                     	ds	2
  3283  0000A1                     _efgtoa$4180:
  3284                           	callstack 0
  3285                           
  3286                           ; 2 bytes @ 0x41
  3287  0000A1                     	ds	2
  3288  0000A3                     _efgtoa$4181:
  3289                           	callstack 0
  3290                           
  3291                           ; 2 bytes @ 0x43
  3292  0000A3                     	ds	2
  3293  0000A5                     efgtoa@t:
  3294                           	callstack 0
  3295                           
  3296                           ; 2 bytes @ 0x45
  3297  0000A5                     	ds	2
  3298  0000A7                     efgtoa@pp:
  3299                           	callstack 0
  3300                           
  3301                           ; 2 bytes @ 0x47
  3302  0000A7                     	ds	2
  3303  0000A9                     efgtoa@ne:
  3304                           	callstack 0
  3305                           
  3306                           ; 2 bytes @ 0x49
  3307  0000A9                     	ds	2
  3308  0000AB                     efgtoa@m:
  3309                           	callstack 0
  3310                           
  3311                           ; 2 bytes @ 0x4B
  3312  0000AB                     	ds	2
  3313  0000AD                     efgtoa@ou:
  3314                           	callstack 0
  3315                           
  3316                           ; 4 bytes @ 0x4D
  3317  0000AD                     	ds	4
  3318  0000B1                     efgtoa@d:
  3319                           	callstack 0
  3320                           
  3321                           ; 2 bytes @ 0x51
  3322  0000B1                     	ds	2
  3323  0000B3                     efgtoa@sign:
  3324                           	callstack 0
  3325                           
  3326                           ; 2 bytes @ 0x53
  3327  0000B3                     	ds	2
  3328  0000B5                     efgtoa@p:
  3329                           	callstack 0
  3330                           
  3331                           ; 2 bytes @ 0x55
  3332  0000B5                     	ds	2
  3333  0000B7                     efgtoa@nmode:
  3334                           	callstack 0
  3335                           
  3336                           ; 1 bytes @ 0x57
  3337  0000B7                     	ds	1
  3338  0000B8                     efgtoa@w:
  3339                           	callstack 0
  3340                           
  3341                           ; 2 bytes @ 0x58
  3342  0000B8                     	ds	2
  3343  0000BA                     efgtoa@mode:
  3344                           	callstack 0
  3345                           
  3346                           ; 1 bytes @ 0x5A
  3347  0000BA                     	ds	1
  3348  0000BB                     efgtoa@h:
  3349                           	callstack 0
  3350                           
  3351                           ; 4 bytes @ 0x5B
  3352  0000BB                     	ds	4
  3353  0000BF                     efgtoa@l:
  3354                           	callstack 0
  3355                           
  3356                           ; 4 bytes @ 0x5F
  3357  0000BF                     	ds	4
  3358  0000C3                     efgtoa@g:
  3359                           	callstack 0
  3360                           
  3361                           ; 4 bytes @ 0x63
  3362  0000C3                     	ds	4
  3363  0000C7                     efgtoa@i:
  3364                           	callstack 0
  3365                           
  3366                           ; 2 bytes @ 0x67
  3367  0000C7                     	ds	2
  3368  0000C9                     efgtoa@e:
  3369                           	callstack 0
  3370                           
  3371                           ; 2 bytes @ 0x69
  3372  0000C9                     	ds	2
  3373  0000CB                     efgtoa@n:
  3374                           	callstack 0
  3375                           
  3376                           ; 2 bytes @ 0x6B
  3377  0000CB                     	ds	2
  3378  0000CD                     efgtoa@u:
  3379                           	callstack 0
  3380                           
  3381                           ; 4 bytes @ 0x6D
  3382  0000CD                     	ds	4
  3383  0000D1                     ?_vfpfcnvrt:
  3384                           	callstack 0
  3385  0000D1                     vfpfcnvrt@fp:
  3386                           	callstack 0
  3387                           
  3388                           ; 2 bytes @ 0x71
  3389  0000D1                     	ds	2
  3390  0000D3                     vfpfcnvrt@fmt:
  3391                           	callstack 0
  3392                           
  3393                           ; 1 bytes @ 0x73
  3394  0000D3                     	ds	1
  3395  0000D4                     vfpfcnvrt@ap:
  3396                           	callstack 0
  3397                           
  3398                           ; 2 bytes @ 0x74
  3399  0000D4                     	ds	2
  3400  0000D6                     ??_vfpfcnvrt:
  3401                           
  3402                           ; 1 bytes @ 0x76
  3403  0000D6                     	ds	4
  3404  0000DA                     vfpfcnvrt@llu:
  3405                           	callstack 0
  3406                           
  3407                           ; 8 bytes @ 0x7A
  3408  0000DA                     	ds	8
  3409  0000E2                     vfpfcnvrt@cp:
  3410                           	callstack 0
  3411                           
  3412                           ; 2 bytes @ 0x82
  3413  0000E2                     	ds	2
  3414  0000E4                     vfpfcnvrt@done:
  3415                           	callstack 0
  3416                           
  3417                           ; 2 bytes @ 0x84
  3418  0000E4                     	ds	2
  3419  0000E6                     _vfpfcnvrt$4219:
  3420                           	callstack 0
  3421                           
  3422                           ; 2 bytes @ 0x86
  3423  0000E6                     	ds	2
  3424  0000E8                     vfpfcnvrt@c:
  3425                           	callstack 0
  3426                           
  3427                           ; 1 bytes @ 0x88
  3428  0000E8                     	ds	1
  3429  0000E9                     vfpfcnvrt@ct:
  3430                           	callstack 0
  3431                           
  3432                           ; 3 bytes @ 0x89
  3433  0000E9                     	ds	3
  3434  0000EC                     vfpfcnvrt@f:
  3435                           	callstack 0
  3436                           
  3437                           ; 4 bytes @ 0x8C
  3438  0000EC                     	ds	4
  3439  0000F0                     vfprintf@cfmt:
  3440                           	callstack 0
  3441                           
  3442                           ; 2 bytes @ 0x90
  3443  0000F0                     	ds	2
  3444  0000F2                     printf@ap:
  3445                           	callstack 0
  3446                           
  3447                           ; 2 bytes @ 0x92
  3448  0000F2                     	ds	2
  3449                           
  3450                           	psect	cstackCOMRAM
  3451  000001                     __pcstackCOMRAM:
  3452                           	callstack 0
  3453  000001                     ?_ADCC_GetConversionResult:
  3454                           	callstack 0
  3455                           
  3456                           ; 2 bytes @ 0x0
  3457  000001                     	ds	2
  3458  000003                     ??_ADCC_GetConversionResult:
  3459                           
  3460                           ; 1 bytes @ 0x2
  3461  000003                     	ds	2
  3462  000005                     ??_Adc_Isr:
  3463                           
  3464                           ; 1 bytes @ 0x4
  3465  000005                     	ds	4
  3466  000009                     ??_ADCC_ISR:
  3467                           
  3468                           ; 1 bytes @ 0x8
  3469  000009                     	ds	2
  3470  00000B                     ??_Led_Blink:
  3471                           
  3472                           ; 1 bytes @ 0xA
  3473  00000B                     	ds	1
  3474  00000C                     ??_TMR6_ISR:
  3475                           
  3476                           ; 1 bytes @ 0xB
  3477  00000C                     	ds	2
  3478  00000E                     TMR5_WriteTimer@timerVal:
  3479                           	callstack 0
  3480                           
  3481                           ; 2 bytes @ 0xD
  3482  00000E                     	ds	2
  3483  000010                     Timers_Isr@i:
  3484                           	callstack 0
  3485                           
  3486                           ; 2 bytes @ 0xF
  3487  000010                     	ds	2
  3488  000012                     ??_TMR5_ISR:
  3489                           
  3490                           ; 1 bytes @ 0x11
  3491  000012                     	ds	2
  3492  000014                     ??_DMA1_DMASCNTI_ISR:
  3493                           
  3494                           ; 1 bytes @ 0x13
  3495  000014                     	ds	2
  3496  000016                     ??_UART1_framing_err_vect_isr:
  3497                           
  3498                           ; 1 bytes @ 0x15
  3499  000016                     	ds	2
  3500  000018                     ??_UART1_vect_isr:
  3501                           
  3502                           ; 1 bytes @ 0x17
  3503  000018                     	ds	2
  3504  00001A                     ??_UART1_tx_vect_isr:
  3505                           
  3506                           ; 1 bytes @ 0x19
  3507  00001A                     	ds	3
  3508  00001D                     ??_UART1_rx_vect_isr:
  3509                           
  3510                           ; 1 bytes @ 0x1C
  3511  00001D                     	ds	3
  3512  000020                     ??_ringBufS_put_dma:
  3513  000020                     DAC1_SetOutput@inputData:
  3514                           	callstack 0
  3515  000020                     INTERRUPT_Initialize@state:
  3516                           	callstack 0
  3517  000020                     SPI1_ExchangeByte@data:
  3518                           	callstack 0
  3519  000020                     UART1_Read@readValue:
  3520                           	callstack 0
  3521  000020                     UART1_Write@txData:
  3522                           	callstack 0
  3523  000020                     DATAEE_WriteByte@GIEBitValue:
  3524                           	callstack 0
  3525  000020                     StartTimer@timer:
  3526                           	callstack 0
  3527  000020                     TimerDone@timer:
  3528                           	callstack 0
  3529  000020                     display_led@led:
  3530                           	callstack 0
  3531  000020                     ___lomod@counter:
  3532                           	callstack 0
  3533  000020                     _isspace$4284:
  3534                           	callstack 0
  3535                           
  3536                           ; 1 bytes @ 0x1F
  3537  000020                     	ds	1
  3538  000021                     
  3539                           ; 1 bytes @ 0x20
  3540 ;;
  3541 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3542 ;;
  3543 ;; *************** function _main *****************
  3544 ;; Defined at:
  3545 ;;		line 218 in file "main.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  i               1   34[BANK1 ] unsigned char 
  3550 ;;  lcd_update      1   33[BANK1 ] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 3F/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3561 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3562 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3563 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3564 ;;Total ram usage:        4 bytes
  3565 ;; Hardware stack levels required when called: 16
  3566 ;; This function calls:
  3567 ;;		_ADCC_SetADIInterruptHandler
  3568 ;;		_DAC1_GetOutput
  3569 ;;		_DAC1_SetOutput
  3570 ;;		_DATAEE_ReadByte
  3571 ;;		_DATAEE_WriteByte
  3572 ;;		_DMA1_SetSCNTIInterruptHandler
  3573 ;;		_PWM5_LoadDutyValue
  3574 ;;		_PWM6_LoadDutyValue
  3575 ;;		_SYSTEM_Initialize
  3576 ;;		_TMR5_SetInterruptHandler
  3577 ;;		_TMR6_SetInterruptHandler
  3578 ;;		_WaitMs
  3579 ;;		___flmul
  3580 ;;		___xxtofl
  3581 ;;		_cli_read
  3582 ;;		_display_led
  3583 ;;		_eaDogM_WriteCommand
  3584 ;;		_eaDogM_WriteStringAtPos
  3585 ;;		_init_display
  3586 ;;		_linux_getc
  3587 ;;		_printf
  3588 ;;		_puts
  3589 ;;		_scmd_init
  3590 ;;		_sprintf
  3591 ;; This function is called by:
  3592 ;;		Startup code after reset
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text0
  3597  0110A4                     __ptext0:
  3598                           	callstack 0
  3599  0110A4                     _main:
  3600                           	callstack 15
  3601                           
  3602                           ;main.c: 220:  uint8_t lcd_update = 0, i = 0;
  3603                           
  3604                           ;incstack = 0
  3605  0110A4  0E00               	movlw	0
  3606  0110A6  0101               	movlb	1	; () banked
  3607  0110A8  6FBE               	movwf	main@lcd_update& (0+255),b
  3608  0110AA  0E00               	movlw	0
  3609  0110AC  6FBF               	movwf	main@i& (0+255),b
  3610                           
  3611                           ; BSR set to: 1
  3612                           ;main.c: 223:  SYSTEM_Initialize();
  3613  0110AE  EC92  F0A3         	call	_SYSTEM_Initialize	;wreg free
  3614                           
  3615                           ; BSR set to: 57
  3616  0110B2  92BD               	bcf	189,1,c	;volatile
  3617                           
  3618                           ; BSR set to: 57
  3619  0110B4  94BE               	bcf	190,2,c	;volatile
  3620                           
  3621                           ; BSR set to: 57
  3622                           ;main.c: 227:  TMR6_SetInterruptHandler(Led_Blink);
  3623  0110B6  0E20               	movlw	low _Led_Blink
  3624  0110B8  0100               	movlb	0	; () banked
  3625  0110BA  6F60               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  3626  0110BC  0E4C               	movlw	high _Led_Blink
  3627  0110BE  6F61               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3628  0110C0  0E01               	movlw	low (_Led_Blink shr (0+16))
  3629  0110C2  6F62               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3630  0110C4  EC40  F0A7         	call	_TMR6_SetInterruptHandler	;wreg free
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;main.c: 228:  TMR5_SetInterruptHandler(Timers_Isr);
  3634  0110C8  0E9E               	movlw	low _Timers_Isr
  3635  0110CA  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
  3636  0110CC  0E41               	movlw	high _Timers_Isr
  3637  0110CE  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3638  0110D0  0E01               	movlw	low (_Timers_Isr shr (0+16))
  3639  0110D2  6F62               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3640  0110D4  EC47  F0A7         	call	_TMR5_SetInterruptHandler	;wreg free
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;main.c: 229:  ADCC_SetADIInterruptHandler(Adc_Isr);
  3644  0110D8  0E08               	movlw	low _Adc_Isr
  3645  0110DA  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  3646  0110DC  0E33               	movlw	high _Adc_Isr
  3647  0110DE  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  3648  0110E0  0E01               	movlw	low (_Adc_Isr shr (0+16))
  3649  0110E2  6F62               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  3650  0110E4  EC5C  F0A7         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3651                           
  3652                           ;main.c: 230:  ADPCH = PS_V_ANA;
  3653  0110E8  0E00               	movlw	0
  3654  0110EA  013E               	movlb	62	; () banked
  3655  0110EC  6FF1               	movwf	241,b	;volatile
  3656                           
  3657                           ; BSR set to: 62
  3658                           ;main.c: 231:  PWM5_LoadDutyValue(0);
  3659  0110EE  0E00               	movlw	0
  3660  0110F0  0100               	movlb	0	; () banked
  3661  0110F2  6F61               	movwf	(PWM5_LoadDutyValue@dutyValue+1)& (0+255),b
  3662  0110F4  0E00               	movlw	0
  3663  0110F6  6F60               	movwf	PWM5_LoadDutyValue@dutyValue& (0+255),b
  3664  0110F8  ECAE  F0A4         	call	_PWM5_LoadDutyValue	;wreg free
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;main.c: 232:  PWM6_LoadDutyValue(0);
  3668  0110FC  0E00               	movlw	0
  3669  0110FE  6F61               	movwf	(PWM6_LoadDutyValue@dutyValue+1)& (0+255),b
  3670  011100  0E00               	movlw	0
  3671  011102  6F60               	movwf	PWM6_LoadDutyValue@dutyValue& (0+255),b
  3672  011104  EC95  F0A4         	call	_PWM6_LoadDutyValue	;wreg free
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;main.c: 233:  DMA1_SetSCNTIInterruptHandler(source_dma_done);
  3676  011108  0E1A               	movlw	low _source_dma_done
  3677  01110A  6F60               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler& (0+255),b
  3678  01110C  0E4F               	movlw	high _source_dma_done
  3679  01110E  6F61               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)& (0+255),b
  3680  011110  0E01               	movlw	low (_source_dma_done shr (0+16))
  3681  011112  6F62               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)& (0+255),b
  3682  011114  EC55  F0A7         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;main.c: 236:  (INTCON0bits.GIEH = 1);
  3686  011118  8ED2               	bsf	210,7,c	;volatile
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;main.c: 239:  (INTCON0bits.GIEL = 1);
  3690  01111A  8CD2               	bsf	210,6,c	;volatile
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;main.c: 241:  DAC1_SetOutput(dac_v);
  3694  01111C  51FA               	movf	_dac_v& (0+255),w,b
  3695  01111E  EC75  F0A7         	call	_DAC1_SetOutput
  3696                           
  3697                           ;main.c: 243:  init_display();
  3698  011122  EC94  F09B         	call	_init_display	;wreg free
  3699                           
  3700                           ; BSR set to: 61
  3701                           ;main.c: 244:  eaDogM_WriteCommand(0b00001100);
  3702  011126  0E0C               	movlw	12
  3703  011128  ECF3  F0A6         	call	_eaDogM_WriteCommand
  3704  01112C                     l13717:
  3705  01112C  0EBF               	movlw	low main@i
  3706  01112E  0100               	movlb	0	; () banked
  3707  011130  6F60               	movwf	linux_getc@a_data& (0+255),b
  3708  011132  0E01               	movlw	high main@i
  3709  011134  6F61               	movwf	(linux_getc@a_data+1)& (0+255),b
  3710  011136  EC74  F0A5         	call	_linux_getc	;wreg free
  3711  01113A  0900               	iorlw	0
  3712  01113C  A4D8               	btfss	status,2,c
  3713  01113E  D7F6               	goto	l13717
  3714                           
  3715                           ;main.c: 249:  scmd_init();
  3716  011140  EC91  F0A6         	call	_scmd_init	;wreg free
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;main.c: 250:  sprintf(buff1, "\r\n Build %s %s\r\n", build_date, build_time);
  3720  011144  0E00               	movlw	low _buff1
  3721  011146  0101               	movlb	1	; () banked
  3722  011148  6FA3               	movwf	sprintf@s& (0+255),b
  3723  01114A  0E04               	movlw	high _buff1
  3724  01114C  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  3725  01114E  0EA0               	movlw	low STR_12
  3726  011150  6FA5               	movwf	sprintf@fmt& (0+255),b
  3727  011152  0EFF               	movlw	high STR_12
  3728  011154  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  3729  011156  0EB1               	movlw	low STR_1
  3730  011158  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  3731  01115A  0EFF               	movlw	high STR_1
  3732  01115C  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  3733  01115E  0EBD               	movlw	low STR_2
  3734  011160  6FA9               	movwf	(?_sprintf+6)& (0+255),b
  3735  011162  0EFF               	movlw	high STR_2
  3736  011164  6FAA               	movwf	(?_sprintf+7)& (0+255),b
  3737  011166  EC20  F0A1         	call	_sprintf	;wreg free
  3738                           
  3739                           ; BSR set to: 1
  3740                           ;main.c: 251:  puts(buff1);
  3741  01116A  0E00               	movlw	low _buff1
  3742  01116C  0100               	movlb	0	; () banked
  3743  01116E  6F73               	movwf	puts@s& (0+255),b
  3744  011170  0E04               	movlw	high _buff1
  3745  011172  6F74               	movwf	(puts@s+1)& (0+255),b
  3746  011174  EC29  F0A4         	call	_puts	;wreg free
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;main.c: 252:  WaitMs(300);
  3750  011178  0E01               	movlw	1
  3751  01117A  6F65               	movwf	(WaitMs@numMilliseconds+1)& (0+255),b
  3752  01117C  0E2C               	movlw	44
  3753  01117E  6F64               	movwf	WaitMs@numMilliseconds& (0+255),b
  3754  011180  EC4E  F0A5         	call	_WaitMs	;wreg free
  3755                           
  3756                           ;main.c: 253:  sprintf(buff1, "%s %s", build_date, build_time);
  3757  011184  0E00               	movlw	low _buff1
  3758  011186  0101               	movlb	1	; () banked
  3759  011188  6FA3               	movwf	sprintf@s& (0+255),b
  3760  01118A  0E04               	movlw	high _buff1
  3761  01118C  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  3762  01118E  0EC6               	movlw	low STR_13
  3763  011190  6FA5               	movwf	sprintf@fmt& (0+255),b
  3764  011192  0EFF               	movlw	high STR_13
  3765  011194  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  3766  011196  0EB1               	movlw	low STR_1
  3767  011198  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  3768  01119A  0EFF               	movlw	high STR_1
  3769  01119C  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  3770  01119E  0EBD               	movlw	low STR_2
  3771  0111A0  6FA9               	movwf	(?_sprintf+6)& (0+255),b
  3772  0111A2  0EFF               	movlw	high STR_2
  3773  0111A4  6FAA               	movwf	(?_sprintf+7)& (0+255),b
  3774  0111A6  EC20  F0A1         	call	_sprintf	;wreg free
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;main.c: 254:  eaDogM_WriteStringAtPos(0, 0, buff1);
  3778  0111AA  0E00               	movlw	0
  3779  0111AC  0100               	movlb	0	; () banked
  3780  0111AE  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  3781  0111B0  0E00               	movlw	low _buff1
  3782  0111B2  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  3783  0111B4  0E04               	movlw	high _buff1
  3784  0111B6  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  3785  0111B8  0E00               	movlw	0
  3786  0111BA  EC62  F09F         	call	_eaDogM_WriteStringAtPos
  3787                           
  3788                           ; BSR set to: 59
  3789                           ;main.c: 255:  sprintf(buff1, "%s", build_version);
  3790  0111BE  0E00               	movlw	low _buff1
  3791  0111C0  0101               	movlb	1	; () banked
  3792  0111C2  6FA3               	movwf	sprintf@s& (0+255),b
  3793  0111C4  0E04               	movlw	high _buff1
  3794  0111C6  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  3795  0111C8  0EC9               	movlw	low (STR_13+3)
  3796  0111CA  6FA5               	movwf	sprintf@fmt& (0+255),b
  3797  0111CC  0EFF               	movlw	high (STR_13+3)
  3798  0111CE  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  3799  0111D0  0E1A               	movlw	low _build_version
  3800  0111D2  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  3801  0111D4  0EFE               	movlw	high _build_version
  3802  0111D6  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  3803  0111D8  EC20  F0A1         	call	_sprintf	;wreg free
  3804                           
  3805                           ; BSR set to: 1
  3806                           ;main.c: 256:  eaDogM_WriteStringAtPos(1, 0, buff1);
  3807  0111DC  0E00               	movlw	0
  3808  0111DE  0100               	movlb	0	; () banked
  3809  0111E0  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  3810  0111E2  0E00               	movlw	low _buff1
  3811  0111E4  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  3812  0111E6  0E04               	movlw	high _buff1
  3813  0111E8  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  3814  0111EA  0E01               	movlw	1
  3815  0111EC  EC62  F09F         	call	_eaDogM_WriteStringAtPos
  3816                           
  3817                           ; BSR set to: 59
  3818                           ;main.c: 259:  if (DATAEE_ReadByte(0x00) != '1') {
  3819  0111F0  0E00               	movlw	0
  3820  0111F2  0100               	movlb	0	; () banked
  3821  0111F4  6F61               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  3822  0111F6  0E00               	movlw	0
  3823  0111F8  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  3824  0111FA  EC4D  F0A6         	call	_DATAEE_ReadByte	;wreg free
  3825  0111FE  0A31               	xorlw	49
  3826  011200  B4D8               	btfsc	status,2,c
  3827  011202  D02E               	goto	l13739
  3828                           
  3829                           ; BSR set to: 57
  3830                           ;main.c: 260:   DATAEE_WriteByte(0x00, '1');
  3831  011204  0E00               	movlw	0
  3832  011206  0100               	movlb	0	; () banked
  3833  011208  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3834  01120A  0E00               	movlw	0
  3835  01120C  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3836  01120E  0E31               	movlw	49
  3837  011210  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3838  011212  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3839                           
  3840                           ;main.c: 261:   DATAEE_WriteByte(0x00 + 1, '9');
  3841  011216  0E00               	movlw	0
  3842  011218  0100               	movlb	0	; () banked
  3843  01121A  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3844  01121C  0E01               	movlw	1
  3845  01121E  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3846  011220  0E39               	movlw	57
  3847  011222  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3848  011224  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3849                           
  3850                           ;main.c: 262:   DATAEE_WriteByte(0x00 + 2, '5');
  3851  011228  0E00               	movlw	0
  3852  01122A  0100               	movlb	0	; () banked
  3853  01122C  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3854  01122E  0E02               	movlw	2
  3855  011230  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3856  011232  0E35               	movlw	53
  3857  011234  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3858  011236  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3859                           
  3860                           ;main.c: 263:   DATAEE_WriteByte(0x00 + 3, '7');
  3861  01123A  0E00               	movlw	0
  3862  01123C  0100               	movlb	0	; () banked
  3863  01123E  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3864  011240  0E03               	movlw	3
  3865  011242  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3866  011244  0E37               	movlw	55
  3867  011246  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3868  011248  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3869                           
  3870                           ;main.c: 264:   DATAEE_WriteByte(0x10, 0);
  3871  01124C  0E00               	movlw	0
  3872  01124E  0100               	movlb	0	; () banked
  3873  011250  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3874  011252  0E10               	movlw	16
  3875  011254  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3876  011256  0E00               	movlw	0
  3877  011258  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3878  01125A  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3879                           
  3880                           ;main.c: 265:  } else {
  3881  01125E  D008               	goto	l13741
  3882  011260                     l13739:
  3883                           
  3884                           ; BSR set to: 57
  3885                           ;main.c: 266:   ps_type_index = DATAEE_ReadByte(0x10);
  3886  011260  0E00               	movlw	0
  3887  011262  0100               	movlb	0	; () banked
  3888  011264  6F61               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  3889  011266  0E10               	movlw	16
  3890  011268  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  3891  01126A  EC4D  F0A6         	call	_DATAEE_ReadByte	;wreg free
  3892  01126E  6E34               	movwf	_ps_type_index^0,c	;volatile
  3893  011270                     l13741:
  3894                           
  3895                           ;main.c: 269:  WaitMs(2000);
  3896  011270  0E07               	movlw	7
  3897  011272  0100               	movlb	0	; () banked
  3898  011274  6F65               	movwf	(WaitMs@numMilliseconds+1)& (0+255),b
  3899  011276  0ED0               	movlw	208
  3900  011278  6F64               	movwf	WaitMs@numMilliseconds& (0+255),b
  3901  01127A  EC4E  F0A5         	call	_WaitMs	;wreg free
  3902  01127E                     l13743:
  3903                           
  3904                           ;main.c: 272:   if (adc_tick) {
  3905  01127E  0100               	movlb	0	; () banked
  3906  011280  51FB               	movf	_adc_tick& (0+255),w,b	;volatile
  3907  011282  B4D8               	btfsc	status,2,c
  3908  011284  D7FC               	goto	l13743
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;main.c: 273:    if (a[a_index].ana[PS_V_ANA] < 900) {
  3912  011286  5037               	movf	_a_index^0,w,c	;volatile
  3913  011288  0D7E               	mullw	126
  3914  01128A  0E83               	movlw	low _a
  3915  01128C  24F3               	addwf	243,w,c
  3916  01128E  6ED9               	movwf	fsr2l,c
  3917  011290  0E05               	movlw	high _a
  3918  011292  20F4               	addwfc	prodh,w,c
  3919  011294  6EDA               	movwf	fsr2h,c
  3920  011296  0E84               	movlw	132
  3921  011298  5CDE               	subwf	postinc2,w,c
  3922  01129A  0E03               	movlw	3
  3923  01129C  58DE               	subwfb	postinc2,w,c
  3924  01129E  B0D8               	btfsc	status,0,c
  3925  0112A0  D004               	goto	l13749
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;main.c: 274:     display_led(oo00_off);
  3929  0112A2  0E00               	movlw	0
  3930  0112A4  EC52  F09C         	call	_display_led
  3931                           
  3932                           ;main.c: 275:    } else {
  3933  0112A8  D015               	goto	l13755
  3934  0112AA                     l13749:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;main.c: 276:     if (a[a_index].ana[PS_V_ANA] > 1800) {
  3938  0112AA  5037               	movf	_a_index^0,w,c	;volatile
  3939  0112AC  0D7E               	mullw	126
  3940  0112AE  0E83               	movlw	low _a
  3941  0112B0  24F3               	addwf	243,w,c
  3942  0112B2  6ED9               	movwf	fsr2l,c
  3943  0112B4  0E05               	movlw	high _a
  3944  0112B6  20F4               	addwfc	prodh,w,c
  3945  0112B8  6EDA               	movwf	fsr2h,c
  3946  0112BA  0E09               	movlw	9
  3947  0112BC  5CDE               	subwf	postinc2,w,c
  3948  0112BE  0E07               	movlw	7
  3949  0112C0  58DE               	subwfb	postinc2,w,c
  3950  0112C2  A0D8               	btfss	status,0,c
  3951  0112C4  D004               	goto	l13753
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;main.c: 277:      display_led(oo00_g);
  3955  0112C6  0E01               	movlw	1
  3956  0112C8  EC52  F09C         	call	_display_led
  3957                           
  3958                           ;main.c: 278:     } else {
  3959  0112CC  D003               	goto	l13755
  3960  0112CE                     l13753:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;main.c: 279:      display_led(oo00_r);
  3964  0112CE  0E02               	movlw	2
  3965  0112D0  EC52  F09C         	call	_display_led
  3966  0112D4                     l13755:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;main.c: 283:    if (a[a_index].ana[PS_I_ANA] < 50) {
  3970  0112D4  5037               	movf	_a_index^0,w,c	;volatile
  3971  0112D6  0D7E               	mullw	126
  3972  0112D8  0E85               	movlw	low (_a+2)
  3973  0112DA  24F3               	addwf	243,w,c
  3974  0112DC  6ED9               	movwf	fsr2l,c
  3975  0112DE  0E05               	movlw	high (_a+2)
  3976  0112E0  20F4               	addwfc	prodh,w,c
  3977  0112E2  6EDA               	movwf	fsr2h,c
  3978  0112E4  0E01               	movlw	1
  3979  0112E6  50DB               	movf	plusw2,w,c
  3980  0112E8  E108               	bnz	l13759
  3981  0112EA  0E32               	movlw	50
  3982  0112EC  5CDE               	subwf	postinc2,w,c
  3983  0112EE  B0D8               	btfsc	status,0,c
  3984  0112F0  D004               	goto	l13759
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;main.c: 284:     display_led(oo10_off);
  3988  0112F2  0E03               	movlw	3
  3989  0112F4  EC52  F09C         	call	_display_led
  3990                           
  3991                           ;main.c: 285:    } else {
  3992  0112F8  D016               	goto	l13765
  3993  0112FA                     l13759:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;main.c: 286:     if (a[a_index].ana[PS_I_ANA] > 150) {
  3997  0112FA  5037               	movf	_a_index^0,w,c	;volatile
  3998  0112FC  0D7E               	mullw	126
  3999  0112FE  0E85               	movlw	low (_a+2)
  4000  011300  24F3               	addwf	243,w,c
  4001  011302  6ED9               	movwf	fsr2l,c
  4002  011304  0E05               	movlw	high (_a+2)
  4003  011306  20F4               	addwfc	prodh,w,c
  4004  011308  6EDA               	movwf	fsr2h,c
  4005  01130A  0E01               	movlw	1
  4006  01130C  50DB               	movf	plusw2,w,c
  4007  01130E  E104               	bnz	u13640
  4008  011310  0E97               	movlw	151
  4009  011312  5CDE               	subwf	postinc2,w,c
  4010  011314  A0D8               	btfss	status,0,c
  4011  011316  D004               	goto	l13763
  4012  011318                     u13640:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;main.c: 287:      display_led(oo10_g);
  4016  011318  0E04               	movlw	4
  4017  01131A  EC52  F09C         	call	_display_led
  4018                           
  4019                           ;main.c: 288:     } else {
  4020  01131E  D003               	goto	l13765
  4021  011320                     l13763:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;main.c: 289:      display_led(oo10_r);
  4025  011320  0E05               	movlw	5
  4026  011322  EC52  F09C         	call	_display_led
  4027  011326                     l13765:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;main.c: 292:    adc_tick = 0;
  4031  011326  0E00               	movlw	0
  4032  011328  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;main.c: 294:    if (!PORTAbits.RA6) {
  4036  01132A  BCCA               	btfsc	202,6,c	;volatile
  4037  01132C  D004               	goto	l13771
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;main.c: 295:     display_led(oo30_r);
  4041  01132E  0E0B               	movlw	11
  4042  011330  EC52  F09C         	call	_display_led
  4043                           
  4044                           ;main.c: 296:    } else {
  4045  011334  D003               	goto	l13773
  4046  011336                     l13771:
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;main.c: 297:     display_led(oo30_off);
  4050  011336  0E09               	movlw	9
  4051  011338  EC52  F09C         	call	_display_led
  4052  01133C                     l13773:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;main.c: 301:    if (!PORTAbits.RA4) {
  4056  01133C  B8CA               	btfsc	202,4,c	;volatile
  4057  01133E  D004               	goto	l13777
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 302:     display_led(oo20_g);
  4061  011340  0E07               	movlw	7
  4062  011342  EC52  F09C         	call	_display_led
  4063                           
  4064                           ;main.c: 303:    } else {
  4065  011346  D003               	goto	l13779
  4066  011348                     l13777:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;main.c: 304:     display_led(oo20_off);
  4070  011348  0E06               	movlw	6
  4071  01134A  EC52  F09C         	call	_display_led
  4072  01134E                     l13779:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;main.c: 307:    if (disp_tick) {
  4076  01134E  51FC               	movf	_disp_tick& (0+255),w,b	;volatile
  4077  011350  B4D8               	btfsc	status,2,c
  4078  011352  D795               	goto	l13743
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 308:     ps_type_ptr = &ps_type[ps_type_index];
  4082  011354  5034               	movf	_ps_type_index^0,w,c	;volatile
  4083  011356  0D08               	mullw	8
  4084  011358  0EB2               	movlw	low _ps_type
  4085  01135A  24F3               	addwf	243,w,c
  4086  01135C  6E3F               	movwf	_ps_type_ptr^0,c
  4087  01135E  0E02               	movlw	high _ps_type
  4088  011360  20F4               	addwfc	prodh,w,c
  4089  011362  6E40               	movwf	(_ps_type_ptr+1)^0,c
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;main.c: 309:     vval = (double) a[a_index].ana[PS_V_ANA] * ps_type_ptr->v_scale;
  4093  011364  5037               	movf	_a_index^0,w,c	;volatile
  4094  011366  0D7E               	mullw	126
  4095  011368  0E83               	movlw	low _a
  4096  01136A  24F3               	addwf	243,w,c
  4097  01136C  6ED9               	movwf	fsr2l,c
  4098  01136E  0E05               	movlw	high _a
  4099  011370  20F4               	addwfc	prodh,w,c
  4100  011372  6EDA               	movwf	fsr2h,c
  4101  011374  006F FF78  F1BC    	movff	postinc2,??_main
  4102  01137A  006F FF74  F1BD    	movff	postdec2,??_main+1
  4103  011380  C1BC  F060         	movff	??_main,___xxtofl@val
  4104  011384  C1BD  F061         	movff	??_main+1,___xxtofl@val+1
  4105  011388  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  4106  01138A  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  4107  01138C  0E00               	movlw	0
  4108  01138E  EC3A  F097         	call	___xxtofl
  4109  011392  C060  F06E         	movff	?___xxtofl,___flmul@b
  4110  011396  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  4111  01139A  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  4112  01139E  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  4113  0113A2  0060  F0FF  FFD9   	movff	_ps_type_ptr,fsr2l
  4114  0113A8  0060  F103  FFDA   	movff	_ps_type_ptr+1,fsr2h
  4115  0113AE  006F FF78  F072    	movff	postinc2,___flmul@a
  4116  0113B4  006F FF78  F073    	movff	postinc2,___flmul@a+1
  4117  0113BA  006F FF78  F074    	movff	postinc2,___flmul@a+2
  4118  0113C0  006F FF78  F075    	movff	postinc2,___flmul@a+3
  4119  0113C6  EC95  F08D         	call	___flmul	;wreg free
  4120  0113CA  C06E  F128         	movff	?___flmul,_vval
  4121  0113CE  C06F  F129         	movff	?___flmul+1,_vval+1
  4122  0113D2  C070  F12A         	movff	?___flmul+2,_vval+2
  4123  0113D6  C071  F12B         	movff	?___flmul+3,_vval+3
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;main.c: 310:     ival = (double) a[a_index].ana[PS_I_ANA] * ps_type_ptr->i_scale;
  4127  0113DA  5037               	movf	_a_index^0,w,c	;volatile
  4128  0113DC  0D7E               	mullw	126
  4129  0113DE  0E85               	movlw	low (_a+2)
  4130  0113E0  24F3               	addwf	243,w,c
  4131  0113E2  6ED9               	movwf	fsr2l,c
  4132  0113E4  0E05               	movlw	high (_a+2)
  4133  0113E6  20F4               	addwfc	prodh,w,c
  4134  0113E8  6EDA               	movwf	fsr2h,c
  4135  0113EA  006F FF78  F1BC    	movff	postinc2,??_main
  4136  0113F0  006F FF74  F1BD    	movff	postdec2,??_main+1
  4137  0113F6  C1BC  F060         	movff	??_main,___xxtofl@val
  4138  0113FA  C1BD  F061         	movff	??_main+1,___xxtofl@val+1
  4139  0113FE  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  4140  011400  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  4141  011402  0E00               	movlw	0
  4142  011404  EC3A  F097         	call	___xxtofl
  4143  011408  C060  F06E         	movff	?___xxtofl,___flmul@b
  4144  01140C  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  4145  011410  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  4146  011414  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  4147  011418  EE20 F004          	lfsr	2,4
  4148  01141C  503F               	movf	_ps_type_ptr^0,w,c
  4149  01141E  26D9               	addwf	fsr2l,f,c
  4150  011420  5040               	movf	(_ps_type_ptr+1)^0,w,c
  4151  011422  22DA               	addwfc	fsr2h,f,c
  4152  011424  006F FF78  F072    	movff	postinc2,___flmul@a
  4153  01142A  006F FF78  F073    	movff	postinc2,___flmul@a+1
  4154  011430  006F FF78  F074    	movff	postinc2,___flmul@a+2
  4155  011436  006F FF78  F075    	movff	postinc2,___flmul@a+3
  4156  01143C  EC95  F08D         	call	___flmul	;wreg free
  4157  011440  C06E  F124         	movff	?___flmul,_ival
  4158  011444  C06F  F125         	movff	?___flmul+1,_ival+1
  4159  011448  C070  F126         	movff	?___flmul+2,_ival+2
  4160  01144C  C071  F127         	movff	?___flmul+3,_ival+3
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;main.c: 311:     printf(" PS TYPE %1u: PS Test %1u: DAC OUT %4.4umV B=%.2u, Supply Read
      +                          Back %4.4umV V=%+6.1fV %4.4umV I=%+3.1fmA \r\n",
  4164  011450  0E28               	movlw	low STR_15
  4165  011452  0101               	movlb	1	; () banked
  4166  011454  6FA3               	movwf	printf@fmt& (0+255),b
  4167  011456  0EFE               	movlw	high STR_15
  4168  011458  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4169  01145A  C034  F1A5         	movff	_ps_type_index,?_printf+2	;volatile
  4170  01145E  6BA6               	clrf	(?_printf+3)& (0+255),b
  4171  011460  C035  F1A7         	movff	_mode,?_printf+4
  4172  011464  6BA8               	clrf	(?_printf+5)& (0+255),b
  4173  011466  5037               	movf	_a_index^0,w,c	;volatile
  4174  011468  0D7E               	mullw	126
  4175  01146A  0EFD               	movlw	low (_a+122)
  4176  01146C  24F3               	addwf	243,w,c
  4177  01146E  6ED9               	movwf	fsr2l,c
  4178  011470  0E05               	movlw	high (_a+122)
  4179  011472  20F4               	addwfc	prodh,w,c
  4180  011474  6EDA               	movwf	fsr2h,c
  4181  011476  006F FF78  F1A9    	movff	postinc2,?_printf+6
  4182  01147C  006F FF74  F1AA    	movff	postdec2,?_printf+7
  4183  011482  EC84  F0A7         	call	_DAC1_GetOutput	;wreg free
  4184  011486  0101               	movlb	1	; () banked
  4185  011488  6FBC               	movwf	??_main& (0+255),b
  4186  01148A  51BC               	movf	??_main& (0+255),w,b
  4187  01148C  6FAB               	movwf	(?_printf+8)& (0+255),b
  4188  01148E  6BAC               	clrf	(?_printf+9)& (0+255),b
  4189  011490  5037               	movf	_a_index^0,w,c	;volatile
  4190  011492  0D7E               	mullw	126
  4191  011494  0E83               	movlw	low _a
  4192  011496  24F3               	addwf	243,w,c
  4193  011498  6ED9               	movwf	fsr2l,c
  4194  01149A  0E05               	movlw	high _a
  4195  01149C  20F4               	addwfc	prodh,w,c
  4196  01149E  6EDA               	movwf	fsr2h,c
  4197  0114A0  006F FF78  F1AD    	movff	postinc2,?_printf+10
  4198  0114A6  006F FF74  F1AE    	movff	postdec2,?_printf+11
  4199  0114AC  C128  F1AF         	movff	_vval,?_printf+12
  4200  0114B0  C129  F1B0         	movff	_vval+1,?_printf+13
  4201  0114B4  C12A  F1B1         	movff	_vval+2,?_printf+14
  4202  0114B8  C12B  F1B2         	movff	_vval+3,?_printf+15
  4203  0114BC  5037               	movf	_a_index^0,w,c	;volatile
  4204  0114BE  0D7E               	mullw	126
  4205  0114C0  0E85               	movlw	low (_a+2)
  4206  0114C2  24F3               	addwf	243,w,c
  4207  0114C4  6ED9               	movwf	fsr2l,c
  4208  0114C6  0E05               	movlw	high (_a+2)
  4209  0114C8  20F4               	addwfc	prodh,w,c
  4210  0114CA  6EDA               	movwf	fsr2h,c
  4211  0114CC  006F FF78  F1B3    	movff	postinc2,?_printf+16
  4212  0114D2  006F FF74  F1B4    	movff	postdec2,?_printf+17
  4213  0114D8  C124  F1B5         	movff	_ival,?_printf+18
  4214  0114DC  C125  F1B6         	movff	_ival+1,?_printf+19
  4215  0114E0  C126  F1B7         	movff	_ival+2,?_printf+20
  4216  0114E4  C127  F1B8         	movff	_ival+3,?_printf+21
  4217  0114E8  EC3A  F0A5         	call	_printf	;wreg free
  4218                           
  4219                           ; BSR set to: 1
  4220                           ;main.c: 313:     if (!(lcd_update++ & 0x03)) {
  4221  0114EC  2BBE               	incf	main@lcd_update& (0+255),f,b
  4222  0114EE  05BE               	decf	main@lcd_update& (0+255),w,b
  4223  0114F0  6FBC               	movwf	??_main& (0+255),b
  4224  0114F2  0E03               	movlw	3
  4225  0114F4  17BC               	andwf	??_main& (0+255),f,b
  4226  0114F6  A4D8               	btfss	status,2,c
  4227  0114F8  D0EC               	goto	l13831
  4228                           
  4229                           ; BSR set to: 1
  4230                           ;main.c: 314:      sprintf(buff1, "%4.4umV %4.4umV %4.4umV", a[a_index].ana[channel_DAC1
      +                          ], a[a_index].ana[PS_V_ANA], a[a_index].ana[PS_I_ANA]);
  4231  0114FA  0E00               	movlw	low _buff1
  4232  0114FC  6FA3               	movwf	sprintf@s& (0+255),b
  4233  0114FE  0E04               	movlw	high _buff1
  4234  011500  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  4235  011502  0E00               	movlw	low STR_16
  4236  011504  6FA5               	movwf	sprintf@fmt& (0+255),b
  4237  011506  0EFF               	movlw	high STR_16
  4238  011508  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  4239  01150A  5037               	movf	_a_index^0,w,c	;volatile
  4240  01150C  0D7E               	mullw	126
  4241  01150E  0EFD               	movlw	low (_a+122)
  4242  011510  24F3               	addwf	243,w,c
  4243  011512  6ED9               	movwf	fsr2l,c
  4244  011514  0E05               	movlw	high (_a+122)
  4245  011516  20F4               	addwfc	prodh,w,c
  4246  011518  6EDA               	movwf	fsr2h,c
  4247  01151A  006F FF78  F1A7    	movff	postinc2,?_sprintf+4
  4248  011520  006F FF74  F1A8    	movff	postdec2,?_sprintf+5
  4249  011526  5037               	movf	_a_index^0,w,c	;volatile
  4250  011528  0D7E               	mullw	126
  4251  01152A  0E83               	movlw	low _a
  4252  01152C  24F3               	addwf	243,w,c
  4253  01152E  6ED9               	movwf	fsr2l,c
  4254  011530  0E05               	movlw	high _a
  4255  011532  20F4               	addwfc	prodh,w,c
  4256  011534  6EDA               	movwf	fsr2h,c
  4257  011536  006F FF78  F1A9    	movff	postinc2,?_sprintf+6
  4258  01153C  006F FF74  F1AA    	movff	postdec2,?_sprintf+7
  4259  011542  5037               	movf	_a_index^0,w,c	;volatile
  4260  011544  0D7E               	mullw	126
  4261  011546  0E85               	movlw	low (_a+2)
  4262  011548  24F3               	addwf	243,w,c
  4263  01154A  6ED9               	movwf	fsr2l,c
  4264  01154C  0E05               	movlw	high (_a+2)
  4265  01154E  20F4               	addwfc	prodh,w,c
  4266  011550  6EDA               	movwf	fsr2h,c
  4267  011552  006F FF78  F1AB    	movff	postinc2,?_sprintf+8
  4268  011558  006F FF74  F1AC    	movff	postdec2,?_sprintf+9
  4269  01155E  EC20  F0A1         	call	_sprintf	;wreg free
  4270                           
  4271                           ; BSR set to: 1
  4272                           ;main.c: 315:      eaDogM_WriteStringAtPos(1, 0, buff1);
  4273  011562  0E00               	movlw	0
  4274  011564  0100               	movlb	0	; () banked
  4275  011566  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4276  011568  0E00               	movlw	low _buff1
  4277  01156A  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4278  01156C  0E04               	movlw	high _buff1
  4279  01156E  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4280  011570  0E01               	movlw	1
  4281  011572  EC62  F09F         	call	_eaDogM_WriteStringAtPos
  4282                           
  4283                           ; BSR set to: 59
  4284                           ;main.c: 316:      sprintf(buff1, "%4.4umV %4.4umV %4.4umV", a[a_index].ana[DAC_ANA], a[
      +                          a_index].ana[PWM5_ANA], a[a_index].ana[PWM6_ANA]);
  4285  011576  0E00               	movlw	low _buff1
  4286  011578  0101               	movlb	1	; () banked
  4287  01157A  6FA3               	movwf	sprintf@s& (0+255),b
  4288  01157C  0E04               	movlw	high _buff1
  4289  01157E  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  4290  011580  0E00               	movlw	low STR_16
  4291  011582  6FA5               	movwf	sprintf@fmt& (0+255),b
  4292  011584  0EFF               	movlw	high STR_16
  4293  011586  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  4294  011588  5037               	movf	_a_index^0,w,c	;volatile
  4295  01158A  0D7E               	mullw	126
  4296  01158C  0EC5               	movlw	low (_a+66)
  4297  01158E  24F3               	addwf	243,w,c
  4298  011590  6ED9               	movwf	fsr2l,c
  4299  011592  0E05               	movlw	high (_a+66)
  4300  011594  20F4               	addwfc	prodh,w,c
  4301  011596  6EDA               	movwf	fsr2h,c
  4302  011598  006F FF78  F1A7    	movff	postinc2,?_sprintf+4
  4303  01159E  006F FF74  F1A8    	movff	postdec2,?_sprintf+5
  4304  0115A4  5037               	movf	_a_index^0,w,c	;volatile
  4305  0115A6  0D7E               	mullw	126
  4306  0115A8  0ED3               	movlw	low (_a+80)
  4307  0115AA  24F3               	addwf	243,w,c
  4308  0115AC  6ED9               	movwf	fsr2l,c
  4309  0115AE  0E05               	movlw	high (_a+80)
  4310  0115B0  20F4               	addwfc	prodh,w,c
  4311  0115B2  6EDA               	movwf	fsr2h,c
  4312  0115B4  006F FF78  F1A9    	movff	postinc2,?_sprintf+6
  4313  0115BA  006F FF74  F1AA    	movff	postdec2,?_sprintf+7
  4314  0115C0  5037               	movf	_a_index^0,w,c	;volatile
  4315  0115C2  0D7E               	mullw	126
  4316  0115C4  0ED5               	movlw	low (_a+82)
  4317  0115C6  24F3               	addwf	243,w,c
  4318  0115C8  6ED9               	movwf	fsr2l,c
  4319  0115CA  0E05               	movlw	high (_a+82)
  4320  0115CC  20F4               	addwfc	prodh,w,c
  4321  0115CE  6EDA               	movwf	fsr2h,c
  4322  0115D0  006F FF78  F1AB    	movff	postinc2,?_sprintf+8
  4323  0115D6  006F FF74  F1AC    	movff	postdec2,?_sprintf+9
  4324  0115DC  EC20  F0A1         	call	_sprintf	;wreg free
  4325                           
  4326                           ;main.c: 317:      eaDogM_WriteStringAtPos(2, 0, buff1);
  4327  0115E0  0E00               	movlw	0
  4328  0115E2  0100               	movlb	0	; () banked
  4329  0115E4  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4330  0115E6  0E00               	movlw	low _buff1
  4331  0115E8  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4332  0115EA  0E04               	movlw	high _buff1
  4333  0115EC  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4334  0115EE  0E02               	movlw	2
  4335  0115F0  EC62  F09F         	call	_eaDogM_WriteStringAtPos
  4336                           
  4337                           ; BSR set to: 59
  4338                           ;main.c: 318:      sprintf(buff1, "D%.2u, M%1u, P%1u, I%2u", (uint16_t) DAC1_GetOutput()
      +                          , mode, ps_type_index, i_index);
  4339  0115F4  0E00               	movlw	low _buff1
  4340  0115F6  0101               	movlb	1	; () banked
  4341  0115F8  6FA3               	movwf	sprintf@s& (0+255),b
  4342  0115FA  0E04               	movlw	high _buff1
  4343  0115FC  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  4344  0115FE  0E18               	movlw	low STR_18
  4345  011600  6FA5               	movwf	sprintf@fmt& (0+255),b
  4346  011602  0EFF               	movlw	high STR_18
  4347  011604  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  4348  011606  EC84  F0A7         	call	_DAC1_GetOutput	;wreg free
  4349  01160A  0101               	movlb	1	; () banked
  4350  01160C  6FBC               	movwf	??_main& (0+255),b
  4351  01160E  51BC               	movf	??_main& (0+255),w,b
  4352  011610  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  4353  011612  6BA8               	clrf	(?_sprintf+5)& (0+255),b
  4354  011614  C035  F1A9         	movff	_mode,?_sprintf+6
  4355  011618  6BAA               	clrf	(?_sprintf+7)& (0+255),b
  4356  01161A  C034  F1AB         	movff	_ps_type_index,?_sprintf+8	;volatile
  4357  01161E  6BAC               	clrf	(?_sprintf+9)& (0+255),b
  4358  011620  C036  F1AD         	movff	_i_index,?_sprintf+10	;volatile
  4359  011624  6BAE               	clrf	(?_sprintf+11)& (0+255),b
  4360  011626  EC20  F0A1         	call	_sprintf	;wreg free
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;main.c: 319:      eaDogM_WriteStringAtPos(3, 0, buff1);
  4364  01162A  0E00               	movlw	0
  4365  01162C  0100               	movlb	0	; () banked
  4366  01162E  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4367  011630  0E00               	movlw	low _buff1
  4368  011632  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4369  011634  0E04               	movlw	high _buff1
  4370  011636  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4371  011638  0E03               	movlw	3
  4372  01163A  EC62  F09F         	call	_eaDogM_WriteStringAtPos
  4373                           
  4374                           ;main.c: 320:      sprintf(buff1, "V=%+6.1fV I=%+3.1fmA  ", vval, ival);
  4375  01163E  0E00               	movlw	low _buff1
  4376  011640  0101               	movlb	1	; () banked
  4377  011642  6FA3               	movwf	sprintf@s& (0+255),b
  4378  011644  0E04               	movlw	high _buff1
  4379  011646  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  4380  011648  0E30               	movlw	low STR_19
  4381  01164A  6FA5               	movwf	sprintf@fmt& (0+255),b
  4382  01164C  0EFF               	movlw	high STR_19
  4383  01164E  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  4384  011650  C128  F1A7         	movff	_vval,?_sprintf+4
  4385  011654  C129  F1A8         	movff	_vval+1,?_sprintf+5
  4386  011658  C12A  F1A9         	movff	_vval+2,?_sprintf+6
  4387  01165C  C12B  F1AA         	movff	_vval+3,?_sprintf+7
  4388  011660  C124  F1AB         	movff	_ival,?_sprintf+8
  4389  011664  C125  F1AC         	movff	_ival+1,?_sprintf+9
  4390  011668  C126  F1AD         	movff	_ival+2,?_sprintf+10
  4391  01166C  C127  F1AE         	movff	_ival+3,?_sprintf+11
  4392  011670  EC20  F0A1         	call	_sprintf	;wreg free
  4393                           
  4394                           ; BSR set to: 1
  4395                           ;main.c: 321:      eaDogM_WriteStringAtPos(0, 0, buff1);
  4396  011674  0E00               	movlw	0
  4397  011676  0100               	movlb	0	; () banked
  4398  011678  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4399  01167A  0E00               	movlw	low _buff1
  4400  01167C  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4401  01167E  0E04               	movlw	high _buff1
  4402  011680  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4403  011682  0E00               	movlw	0
  4404  011684  EC62  F09F         	call	_eaDogM_WriteStringAtPos
  4405  011688  D024               	goto	l13831
  4406  01168A                     l13803:
  4407                           
  4408                           ; BSR set to: 1
  4409                           ;main.c: 328:      i_index++;
  4410  01168A  2A36               	incf	_i_index^0,f,c	;volatile
  4411                           
  4412                           ; BSR set to: 1
  4413                           ;main.c: 329:      if (dac_v > roll_max) {
  4414  01168C  0100               	movlb	0	; () banked
  4415  01168E  51FA               	movf	_dac_v& (0+255),w,b
  4416  011690  5DFE               	subwf	_roll_max& (0+255),w,b
  4417  011692  B0D8               	btfsc	status,0,c
  4418  011694  D004               	goto	l13809
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;main.c: 330:       dac_v = 0;
  4422  011696  0E00               	movlw	0
  4423  011698  6FFA               	movwf	_dac_v& (0+255),b
  4424                           
  4425                           ;main.c: 331:       i_index = 0;
  4426  01169A  0E00               	movlw	0
  4427  01169C  6E36               	movwf	_i_index^0,c	;volatile
  4428  01169E                     l13809:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;main.c: 333:      DAC1_SetOutput(++dac_v);
  4432  01169E  2BFA               	incf	_dac_v& (0+255),f,b
  4433  0116A0  51FA               	movf	_dac_v& (0+255),w,b
  4434  0116A2  EC75  F0A7         	call	_DAC1_SetOutput
  4435  0116A6  D008               	goto	l13817
  4436  0116A8                     l13813:
  4437  0116A8  9ABA               	bcf	186,5,c	;volatile
  4438  0116AA  D026               	goto	l13833
  4439  0116AC                     l1338:
  4440                           
  4441                           ; BSR set to: 1
  4442                           ;main.c: 338:      dac_v = static_ps;
  4443  0116AC  C0FD  F0FA         	movff	_static_ps,_dac_v
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;main.c: 339:      DAC1_SetOutput(dac_v);
  4447  0116B0  0100               	movlb	0	; () banked
  4448  0116B2  51FA               	movf	_dac_v& (0+255),w,b
  4449  0116B4  EC75  F0A7         	call	_DAC1_SetOutput
  4450  0116B8                     l13817:
  4451  0116B8  82BD               	bsf	189,1,c	;volatile
  4452  0116BA  D7F6               	goto	l13813
  4453  0116BC                     l13821:
  4454                           
  4455                           ; BSR set to: 1
  4456                           ;main.c: 345:      mode = off_mode;
  4457  0116BC  0E00               	movlw	0
  4458  0116BE  6E35               	movwf	_mode^0,c
  4459                           
  4460                           ;main.c: 346:      dac_v = 0;
  4461  0116C0  0E00               	movlw	0
  4462  0116C2  0100               	movlb	0	; () banked
  4463  0116C4  6FFA               	movwf	_dac_v& (0+255),b
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;main.c: 347:      DAC1_SetOutput(dac_v);
  4467  0116C6  0E00               	movlw	0
  4468  0116C8  EC75  F0A7         	call	_DAC1_SetOutput
  4469  0116CC  92BD               	bcf	189,1,c	;volatile
  4470  0116CE  8ABA               	bsf	186,5,c	;volatile
  4471  0116D0  D013               	goto	l13833
  4472  0116D2                     l13831:
  4473  0116D2  5035               	movf	_mode^0,w,c
  4474  0116D4  0101               	movlb	1	; () banked
  4475  0116D6  6FBC               	movwf	??_main& (0+255),b
  4476  0116D8  6BBD               	clrf	(??_main+1)& (0+255),b
  4477                           
  4478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4479                           ; Switch size 1, requested type "simple"
  4480                           ; Number of cases is 1, Range of values is 0 to 0
  4481                           ; switch strategies available:
  4482                           ; Name         Instructions Cycles
  4483                           ; simple_byte            4     3 (average)
  4484                           ;	Chosen strategy is simple_byte
  4485  0116DA  51BD               	movf	(??_main+1)& (0+255),w,b
  4486  0116DC  0A00               	xorlw	0	; case 0
  4487  0116DE  A4D8               	btfss	status,2,c
  4488  0116E0  D7ED               	goto	l13821
  4489                           
  4490                           ; BSR set to: 1
  4491                           ; Switch size 1, requested type "simple"
  4492                           ; Number of cases is 3, Range of values is 0 to 2
  4493                           ; switch strategies available:
  4494                           ; Name         Instructions Cycles
  4495                           ; simple_byte           10     6 (average)
  4496                           ;	Chosen strategy is simple_byte
  4497  0116E2  51BC               	movf	??_main& (0+255),w,b
  4498  0116E4  0A00               	xorlw	0	; case 0
  4499  0116E6  B4D8               	btfsc	status,2,c
  4500  0116E8  D7E9               	goto	l13821
  4501  0116EA  0A01               	xorlw	1	; case 1
  4502  0116EC  B4D8               	btfsc	status,2,c
  4503  0116EE  D7CD               	goto	l13803
  4504  0116F0  0A03               	xorlw	3	; case 2
  4505  0116F2  B4D8               	btfsc	status,2,c
  4506  0116F4  D7DB               	goto	l1338
  4507  0116F6  D7E2               	goto	l13821
  4508  0116F8                     l13833:
  4509                           
  4510                           ;main.c: 357:     cli_read(&cli_ctx);
  4511  0116F8  0E00               	movlw	low _cli_ctx
  4512  0116FA  0100               	movlb	0	; () banked
  4513  0116FC  6F84               	movwf	cli_read@a_ctx& (0+255),b
  4514  0116FE  0E05               	movlw	high _cli_ctx
  4515  011700  6F85               	movwf	(cli_read@a_ctx+1)& (0+255),b
  4516  011702  EC46  F095         	call	_cli_read	;wreg free
  4517                           
  4518                           ;main.c: 358:     disp_tick = 0;
  4519  011706  0E00               	movlw	0
  4520  011708  0100               	movlb	0	; () banked
  4521  01170A  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;main.c: 359:     if (!PORTBbits.RB0) {
  4525  01170C  B0CB               	btfsc	203,0,c	;volatile
  4526  01170E  D009               	goto	l13847
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;main.c: 360:      if (++mode_sw > 4) {
  4530  011710  2BF9               	incf	_mode_sw& (0+255),f,b
  4531  011712  0E04               	movlw	4
  4532  011714  65F9               	cpfsgt	_mode_sw& (0+255),b
  4533  011716  D5B3               	goto	l13743
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;main.c: 361:       mode++;
  4537  011718  2A35               	incf	_mode^0,f,c
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;main.c: 362:       mode_sw = 0;
  4541  01171A  0E00               	movlw	0
  4542  01171C  6FF9               	movwf	_mode_sw& (0+255),b
  4543                           
  4544                           ; BSR set to: 0
  4545  01171E  84BE               	bsf	190,2,c	;volatile
  4546  011720  D5AE               	goto	l13743
  4547  011722                     l13847:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;main.c: 366:      mode_sw = 0;
  4551  011722  0E00               	movlw	0
  4552  011724  6FF9               	movwf	_mode_sw& (0+255),b
  4553                           
  4554                           ; BSR set to: 0
  4555  011726  94BE               	bcf	190,2,c	;volatile
  4556  011728  D5AA               	goto	l13743
  4557  01172A                     __end_of_main:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _sprintf *****************
  4561 ;; Defined at:
  4562 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  s               2    6[BANK1 ] PTR unsigned char 
  4565 ;;		 -> buff1(255), 
  4566 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  4567 ;;		 -> STR_19(23), STR_18(24), STR_17(24), STR_16(24), 
  4568 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  f              11   20[BANK1 ] struct _IO_FILE
  4571 ;;  ap              2   18[BANK1 ] PTR void [1]
  4572 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4573 ;;  ret             2    0        int 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  2    6[BANK1 ] int 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 3F/1
  4580 ;;		On exit  : 3F/1
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4583 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4584 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4586 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4587 ;;Total ram usage:       25 bytes
  4588 ;; Hardware stack levels used: 1
  4589 ;; Hardware stack levels required when called: 15
  4590 ;; This function calls:
  4591 ;;		_vfprintf
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text1
  4598  014240                     __ptext1:
  4599                           	callstack 0
  4600  014240                     _sprintf:
  4601                           	callstack 15
  4602                           
  4603                           ; BSR set to: 1
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;incstack = 0
  4607  014240  0EA7               	movlw	low (?_sprintf+4)
  4608  014242  6FAF               	movwf	sprintf@ap& (0+255),b
  4609  014244  0E01               	movlw	high (?_sprintf+4)
  4610  014246  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
  4611  014248  C1A3  F1B1         	movff	sprintf@s,sprintf@f
  4612  01424C  C1A4  F1B2         	movff	sprintf@s+1,sprintf@f+1
  4613                           
  4614                           ; BSR set to: 1
  4615  014250  0E00               	movlw	0
  4616  014252  6FB5               	movwf	(sprintf@f+4)& (0+255),b
  4617  014254  0E00               	movlw	0
  4618  014256  6FB4               	movwf	(sprintf@f+3)& (0+255),b
  4619                           
  4620                           ; BSR set to: 1
  4621  014258  0E00               	movlw	0
  4622  01425A  6FBB               	movwf	(sprintf@f+10)& (0+255),b
  4623  01425C  0E00               	movlw	0
  4624  01425E  6FBA               	movwf	(sprintf@f+9)& (0+255),b
  4625                           
  4626                           ; BSR set to: 1
  4627  014260  0EB1               	movlw	low sprintf@f
  4628  014262  6F9D               	movwf	vfprintf@fp& (0+255),b
  4629  014264  0E01               	movlw	high sprintf@f
  4630  014266  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  4631  014268  C1A5  F19F         	movff	sprintf@fmt,vfprintf@fmt
  4632  01426C  C1A6  F1A0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4633  014270  0EAF               	movlw	low sprintf@ap
  4634  014272  6FA1               	movwf	vfprintf@ap& (0+255),b
  4635  014274  0E01               	movlw	high sprintf@ap
  4636  014276  6FA2               	movwf	(vfprintf@ap+1)& (0+255),b
  4637  014278  ECF5  F09F         	call	_vfprintf	;wreg free
  4638                           
  4639                           ; BSR set to: 1
  4640  01427C  51B4               	movf	(sprintf@f+3)& (0+255),w,b
  4641  01427E  25A3               	addwf	sprintf@s& (0+255),w,b
  4642  014280  6ED9               	movwf	fsr2l,c
  4643  014282  51B5               	movf	(sprintf@f+4)& (0+255),w,b
  4644  014284  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  4645  014286  6EDA               	movwf	fsr2h,c
  4646  014288  0E00               	movlw	0
  4647  01428A  6EDF               	movwf	indf2,c
  4648                           
  4649                           ; BSR set to: 1
  4650  01428C  0012               	return		;funcret
  4651  01428E                     __end_of_sprintf:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function _scmd_init *****************
  4655 ;; Defined at:
  4656 ;;		line 36 in file "scdm.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 6/39
  4667 ;;		On exit  : 3F/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 13
  4677 ;; This function calls:
  4678 ;;		_cli_init
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text2
  4685  014D22                     __ptext2:
  4686                           	callstack 0
  4687  014D22                     _scmd_init:
  4688                           	callstack 17
  4689                           
  4690                           ;scdm.c: 38:  cli_init(&cli_ctx, g_cmds);
  4691                           
  4692                           ; BSR set to: 1
  4693                           ;incstack = 0
  4694  014D22  0E00               	movlw	low _cli_ctx
  4695  014D24  0100               	movlb	0	; () banked
  4696  014D26  6F76               	movwf	cli_init@a_ctx& (0+255),b
  4697  014D28  0E05               	movlw	high _cli_ctx
  4698  014D2A  6F77               	movwf	(cli_init@a_ctx+1)& (0+255),b
  4699  014D2C  0E80               	movlw	low _g_cmds
  4700  014D2E  6F78               	movwf	cli_init@a_cmds& (0+255),b
  4701  014D30  0E02               	movlw	high _g_cmds
  4702  014D32  6F79               	movwf	(cli_init@a_cmds+1)& (0+255),b
  4703  014D34  EC71  F0A2         	call	_cli_init	;wreg free
  4704                           
  4705                           ; BSR set to: 0
  4706  014D38  0012               	return		;funcret
  4707  014D3A                     __end_of_scmd_init:
  4708                           	callstack 0
  4709                           
  4710 ;; *************** function _cli_init *****************
  4711 ;; Defined at:
  4712 ;;		line 26 in file "scdm.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  a_ctx           2   22[BANK0 ] PTR struct _t_cli_ctx
  4715 ;;		 -> cli_ctx(131), 
  4716 ;;  a_cmds          2   24[BANK0 ] PTR struct _t_cmd
  4717 ;;		 -> g_cmds(50), 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 3F/0
  4726 ;;		On exit  : 3F/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4729 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4733 ;;Total ram usage:        4 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; Hardware stack levels required when called: 12
  4736 ;; This function calls:
  4737 ;;		_memset
  4738 ;;		_puts
  4739 ;; This function is called by:
  4740 ;;		_scmd_init
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text3
  4745  0144E2                     __ptext3:
  4746                           	callstack 0
  4747  0144E2                     _cli_init:
  4748                           	callstack 17
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;scdm.c: 26: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 27: {;scdm.c:
      +                           28:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;incstack = 0
  4755  0144E2  C076  F060         	movff	cli_init@a_ctx,memset@dest
  4756  0144E6  C077  F061         	movff	cli_init@a_ctx+1,memset@dest+1
  4757  0144EA  0E00               	movlw	0
  4758  0144EC  6F63               	movwf	(memset@c+1)& (0+255),b
  4759  0144EE  0E00               	movlw	0
  4760  0144F0  6F62               	movwf	memset@c& (0+255),b
  4761  0144F2  0E00               	movlw	0
  4762  0144F4  6F65               	movwf	(memset@n+1)& (0+255),b
  4763  0144F6  0E83               	movlw	131
  4764  0144F8  6F64               	movwf	memset@n& (0+255),b
  4765  0144FA  ECEF  F095         	call	_memset	;wreg free
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;scdm.c: 29:  a_ctx->cmds = a_cmds;
  4769  0144FE  0060  F1DB  FFD9   	movff	cli_init@a_ctx,fsr2l
  4770  014504  0060  F1DF  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  4771  01450A  0060  F1E3  FFDE   	movff	cli_init@a_cmds,postinc2
  4772  014510  0060  F1E7  FFDD   	movff	cli_init@a_cmds+1,postdec2
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;scdm.c: 33:  puts(cmdm);
  4776  014516  0EFE               	movlw	low _cmdm
  4777  014518  6F73               	movwf	puts@s& (0+255),b
  4778  01451A  0EFD               	movlw	high _cmdm
  4779  01451C  6F74               	movwf	(puts@s+1)& (0+255),b
  4780  01451E  EC29  F0A4         	call	_puts	;wreg free
  4781                           
  4782                           ; BSR set to: 0
  4783  014522  0012               	return		;funcret
  4784  014524                     __end_of_cli_init:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _printf *****************
  4788 ;; Defined at:
  4789 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  4792 ;;		 -> STR_15(107), 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  ap              2  146[BANK0 ] PTR void [1]
  4795 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4796 ;;  ret             2    0        int 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  2    6[BANK1 ] int 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 3F/1
  4803 ;;		On exit  : 3F/1
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4806 ;;      Params:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4807 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4809 ;;      Totals:         0       2      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4810 ;;Total ram usage:       24 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 15
  4813 ;; This function calls:
  4814 ;;		_vfprintf
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text4
  4821  014A74                     __ptext4:
  4822                           	callstack 0
  4823  014A74                     _printf:
  4824                           	callstack 15
  4825                           
  4826                           ; BSR set to: 1
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;incstack = 0
  4830  014A74  0EA5               	movlw	low (?_printf+2)
  4831  014A76  0100               	movlb	0	; () banked
  4832  014A78  6FF2               	movwf	printf@ap& (0+255),b
  4833  014A7A  0E01               	movlw	high (?_printf+2)
  4834  014A7C  6FF3               	movwf	(printf@ap+1)& (0+255),b
  4835                           
  4836                           ; BSR set to: 0
  4837  014A7E  0E00               	movlw	0
  4838  014A80  0101               	movlb	1	; () banked
  4839  014A82  6F9D               	movwf	vfprintf@fp& (0+255),b
  4840  014A84  0E00               	movlw	0
  4841  014A86  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  4842  014A88  C1A3  F19F         	movff	printf@fmt,vfprintf@fmt
  4843  014A8C  C1A4  F1A0         	movff	printf@fmt+1,vfprintf@fmt+1
  4844  014A90  0EF2               	movlw	low printf@ap
  4845  014A92  6FA1               	movwf	vfprintf@ap& (0+255),b
  4846  014A94  6BA2               	clrf	(vfprintf@ap+1)& (0+255),b
  4847  014A96  ECF5  F09F         	call	_vfprintf	;wreg free
  4848                           
  4849                           ; BSR set to: 1
  4850  014A9A  0012               	return		;funcret
  4851  014A9C                     __end_of_printf:
  4852                           	callstack 0
  4853                           
  4854 ;; *************** function _vfprintf *****************
  4855 ;; Defined at:
  4856 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  4859 ;;		 -> sprintf@f(11), NULL(0), 
  4860 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  4861 ;;		 -> STR_19(23), STR_18(24), STR_17(24), STR_16(24), 
  4862 ;;		 -> STR_15(107), STR_14(3), STR_13(6), STR_12(17), 
  4863 ;;  ap              2    4[BANK1 ] PTR PTR void 
  4864 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  cfmt            2  144[BANK0 ] PTR unsigned char 
  4867 ;;		 -> STR_19(23), STR_18(24), STR_17(24), STR_16(24), 
  4868 ;;		 -> STR_15(107), STR_14(3), STR_13(6), STR_12(17), 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  2    0[BANK1 ] int 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 3F/1
  4875 ;;		On exit  : 3F/1
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4878 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4881 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4882 ;;Total ram usage:        8 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 14
  4885 ;; This function calls:
  4886 ;;		_vfpfcnvrt
  4887 ;; This function is called by:
  4888 ;;		_sprintf
  4889 ;;		_printf
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text5
  4894  013FEA                     __ptext5:
  4895                           	callstack 0
  4896  013FEA                     _vfprintf:
  4897                           	callstack 15
  4898                           
  4899                           ; BSR set to: 1
  4900                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  4901                           
  4902                           ; BSR set to: 1
  4903                           ;incstack = 0
  4904  013FEA  C19F  F0F0         	movff	vfprintf@fmt,vfprintf@cfmt
  4905  013FEE  C1A0  F0F1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4906                           
  4907                           ; BSR set to: 1
  4908                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  4909  013FF2  0E00               	movlw	0
  4910  013FF4  6F42               	movwf	(_nout+1)& (0+255),b
  4911  013FF6  0E00               	movlw	0
  4912  013FF8  6F41               	movwf	_nout& (0+255),b
  4913                           
  4914                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  4915  013FFA  D014               	goto	l13667
  4916  013FFC                     l13665:
  4917                           
  4918                           ; BSR set to: 1
  4919                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4920  013FFC  C19D  F0D1         	movff	vfprintf@fp,vfpfcnvrt@fp
  4921  014000  C19E  F0D2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4922  014004  0EF0               	movlw	low vfprintf@cfmt
  4923  014006  0100               	movlb	0	; () banked
  4924  014008  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  4925  01400A  C1A1  F0D4         	movff	vfprintf@ap,vfpfcnvrt@ap
  4926  01400E  C1A2  F0D5         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4927  014012  ECDC  F084         	call	_vfpfcnvrt	;wreg free
  4928  014016  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  4929  014018  0101               	movlb	1	; () banked
  4930  01401A  2741               	addwf	_nout& (0+255),f,b
  4931  01401C  0100               	movlb	0	; () banked
  4932  01401E  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4933  014020  0101               	movlb	1	; () banked
  4934  014022  2342               	addwfc	(_nout+1)& (0+255),f,b
  4935  014024                     l13667:
  4936                           
  4937                           ; BSR set to: 1
  4938                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  4939  014024  0060  F3C3  FFF6   	movff	vfprintf@cfmt,tblptrl
  4940  01402A  0060  F3C7  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  4941  014030                     	if	0	;tblptru may be non-zero
  4942  014030                     	endif
  4943  014030                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4944  014030  0E00               	movlw	low (__mediumconst shr (0+16))
  4945  014032  6EF8               	movwf	tblptru,c
  4946  014034                     	endif
  4947  014034  0008               	tblrd		*
  4948  014036  50F5               	movf	tablat,w,c
  4949  014038  0900               	iorlw	0
  4950  01403A  A4D8               	btfss	status,2,c
  4951  01403C  D7DF               	goto	l13665
  4952                           
  4953                           ; BSR set to: 1
  4954                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  4955  01403E  C141  F19D         	movff	_nout,?_vfprintf
  4956  014042  C142  F19E         	movff	_nout+1,?_vfprintf+1
  4957                           
  4958                           ; BSR set to: 1
  4959  014046  0012               	return		;funcret
  4960  014048                     __end_of_vfprintf:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function _vfpfcnvrt *****************
  4964 ;; Defined at:
  4965 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  fp              2  113[BANK0 ] PTR struct _IO_FILE
  4968 ;;		 -> sprintf@f(11), NULL(0), 
  4969 ;;  fmt             1  115[BANK0 ] PTR PTR unsigned char 
  4970 ;;		 -> vfprintf@cfmt(2), 
  4971 ;;  ap              2  116[BANK0 ] PTR PTR void 
  4972 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  llu             8  122[BANK0 ] unsigned long long 
  4975 ;;  ll              8    0        long long 
  4976 ;;  f               4  140[BANK0 ] long long 
  4977 ;;  ct              3  137[BANK0 ] unsigned char [3]
  4978 ;;  vp              3    0        PTR void 
  4979 ;;  done            2  132[BANK0 ] int 
  4980 ;;  cp              2  130[BANK0 ] PTR unsigned char 
  4981 ;;		 -> ?_printf(2), ?_sprintf(2), build_version(14), STR_2(9), 
  4982 ;;		 -> STR_1(12), 
  4983 ;;  i               2    0        int 
  4984 ;;  c               1  136[BANK0 ] unsigned char 
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  2  113[BANK0 ] int 
  4987 ;; Registers used:
  4988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 3F/0
  4991 ;;		On exit  : 3F/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4994 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4995 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4996 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4997 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4998 ;;Total ram usage:       31 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 13
  5001 ;; This function calls:
  5002 ;;		_atoi
  5003 ;;		_efgtoa
  5004 ;;		_fputc
  5005 ;;		_isdigit
  5006 ;;		_isupper
  5007 ;;		_stoa
  5008 ;;		_strncmp
  5009 ;;		_tolower
  5010 ;;		_utoa
  5011 ;; This function is called by:
  5012 ;;		_vfprintf
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text6
  5017  0109B8                     __ptext6:
  5018                           	callstack 0
  5019  0109B8                     _vfpfcnvrt:
  5020                           	callstack 15
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  5024                           
  5025                           ; BSR set to: 1
  5026                           ;incstack = 0
  5027  0109B8  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5028  0109BA  6ED9               	movwf	fsr2l,c
  5029  0109BC  6ADA               	clrf	fsr2h,c
  5030  0109BE  006F FF7B FFF6     	movff	postinc2,tblptrl
  5031  0109C4  006F FF77 FFF7     	movff	postdec2,tblptrh
  5032  0109CA                     	if	0	;tblptru may be non-zero
  5033  0109CA                     	endif
  5034  0109CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5035  0109CA  0E00               	movlw	low (__mediumconst shr (0+16))
  5036  0109CC  6EF8               	movwf	tblptru,c
  5037  0109CE                     	endif
  5038  0109CE  0008               	tblrd		*
  5039  0109D0  50F5               	movf	tablat,w,c
  5040  0109D2  0A25               	xorlw	37
  5041  0109D4  A4D8               	btfss	status,2,c
  5042  0109D6  D34A               	goto	l13649
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  5046  0109D8  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5047  0109DA  6ED9               	movwf	fsr2l,c
  5048  0109DC  6ADA               	clrf	fsr2h,c
  5049  0109DE  2ADE               	incf	postinc2,f,c
  5050  0109E0  0E00               	movlw	0
  5051  0109E2  22DD               	addwfc	postdec2,f,c
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  5055  0109E4  0E00               	movlw	0
  5056  0109E6  6FF5               	movwf	(_width+1)& (0+255),b
  5057  0109E8  0E00               	movlw	0
  5058  0109EA  6FF4               	movwf	_width& (0+255),b
  5059  0109EC  C0F4  F02D         	movff	_width,_flags
  5060  0109F0  C0F5  F02E         	movff	_width+1,_flags+1
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  5064  0109F4  69F6               	setf	_prec& (0+255),b
  5065  0109F6  69F7               	setf	(_prec+1)& (0+255),b
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  5069  0109F8  0E00               	movlw	0
  5070  0109FA  6FE5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5071  0109FC  0E00               	movlw	0
  5072  0109FE  D013               	goto	L1
  5073  010A00                     l13505:
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  5077  010A00  802D               	bsf	_flags^0,0,c
  5078  010A02                     l13507:
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  5082  010A02  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5083  010A04  6ED9               	movwf	fsr2l,c
  5084  010A06  6ADA               	clrf	fsr2h,c
  5085  010A08  2ADE               	incf	postinc2,f,c
  5086  010A0A  0E00               	movlw	0
  5087  010A0C  22DD               	addwfc	postdec2,f,c
  5088                           
  5089                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  5090  010A0E  D031               	goto	l13531
  5091  010A10                     l13509:
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  5095  010A10  822D               	bsf	_flags^0,1,c
  5096  010A12  D7F7               	goto	l13507
  5097  010A14                     l13513:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  5101  010A14  842D               	bsf	_flags^0,2,c
  5102  010A16  D7F5               	goto	l13507
  5103  010A18                     l13517:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  5107  010A18  862D               	bsf	_flags^0,3,c
  5108  010A1A  D7F3               	goto	l13507
  5109  010A1C                     l13521:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  5113  010A1C  882D               	bsf	_flags^0,4,c
  5114  010A1E  D7F1               	goto	l13507
  5115  010A20                     l13525:
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  5119  010A20  0E00               	movlw	0
  5120  010A22  6FE5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5121  010A24  0E01               	movlw	1
  5122  010A26                     L1:
  5123  010A26  6FE4               	movwf	vfpfcnvrt@done& (0+255),b
  5124                           
  5125                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  5126  010A28  D024               	goto	l13531
  5127  010A2A                     l13529:
  5128                           
  5129                           ; BSR set to: 0
  5130  010A2A  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5131  010A2C  6ED9               	movwf	fsr2l,c
  5132  010A2E  6ADA               	clrf	fsr2h,c
  5133  010A30  006F FF7B FFF6     	movff	postinc2,tblptrl
  5134  010A36  006F FF77 FFF7     	movff	postdec2,tblptrh
  5135  010A3C                     	if	0	;tblptru may be non-zero
  5136  010A3C                     	endif
  5137  010A3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5138  010A3C  0E00               	movlw	low (__mediumconst shr (0+16))
  5139  010A3E  6EF8               	movwf	tblptru,c
  5140  010A40                     	endif
  5141  010A40  0008               	tblrd		*
  5142  010A42  50F5               	movf	tablat,w,c
  5143  010A44  6FD6               	movwf	??_vfpfcnvrt& (0+255),b
  5144  010A46  6BD7               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5145                           
  5146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5147                           ; Switch size 1, requested type "simple"
  5148                           ; Number of cases is 1, Range of values is 0 to 0
  5149                           ; switch strategies available:
  5150                           ; Name         Instructions Cycles
  5151                           ; simple_byte            4     3 (average)
  5152                           ;	Chosen strategy is simple_byte
  5153  010A48  51D7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5154  010A4A  0A00               	xorlw	0	; case 0
  5155  010A4C  A4D8               	btfss	status,2,c
  5156  010A4E  D7E8               	goto	l13525
  5157                           
  5158                           ; BSR set to: 0
  5159                           ; Switch size 1, requested type "simple"
  5160                           ; Number of cases is 5, Range of values is 32 to 48
  5161                           ; switch strategies available:
  5162                           ; Name         Instructions Cycles
  5163                           ; simple_byte           16     9 (average)
  5164                           ;	Chosen strategy is simple_byte
  5165  010A50  51D6               	movf	??_vfpfcnvrt& (0+255),w,b
  5166  010A52  0A20               	xorlw	32	; case 32
  5167  010A54  B4D8               	btfsc	status,2,c
  5168  010A56  D7E0               	goto	l13517
  5169  010A58  0A03               	xorlw	3	; case 35
  5170  010A5A  B4D8               	btfsc	status,2,c
  5171  010A5C  D7DF               	goto	l13521
  5172  010A5E  0A08               	xorlw	8	; case 43
  5173  010A60  B4D8               	btfsc	status,2,c
  5174  010A62  D7D8               	goto	l13513
  5175  010A64  0A06               	xorlw	6	; case 45
  5176  010A66  B4D8               	btfsc	status,2,c
  5177  010A68  D7CB               	goto	l13505
  5178  010A6A  0A1D               	xorlw	29	; case 48
  5179  010A6C  B4D8               	btfsc	status,2,c
  5180  010A6E  D7D0               	goto	l13509
  5181  010A70  D7D7               	goto	l13525
  5182  010A72                     l13531:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  5186  010A72  51E4               	movf	vfpfcnvrt@done& (0+255),w,b
  5187  010A74  11E5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5188  010A76  B4D8               	btfsc	status,2,c
  5189  010A78  D7D8               	goto	l13529
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  5193  010A7A  B02D               	btfsc	_flags^0,0,c
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  5197  010A7C  922D               	bcf	_flags^0,1,c
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  5201  010A7E  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5202  010A80  6ED9               	movwf	fsr2l,c
  5203  010A82  6ADA               	clrf	fsr2h,c
  5204  010A84  006F FF7B FFF6     	movff	postinc2,tblptrl
  5205  010A8A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5206  010A90                     	if	0	;tblptru may be non-zero
  5207  010A90                     	endif
  5208  010A90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5209  010A90  0E00               	movlw	low (__mediumconst shr (0+16))
  5210  010A92  6EF8               	movwf	tblptru,c
  5211  010A94                     	endif
  5212  010A94  0008               	tblrd		*
  5213  010A96  50F5               	movf	tablat,w,c
  5214  010A98  0A2A               	xorlw	42
  5215  010A9A  A4D8               	btfss	status,2,c
  5216  010A9C  D02A               	goto	l13543
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  5220  010A9E  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5221  010AA0  6ED9               	movwf	fsr2l,c
  5222  010AA2  6ADA               	clrf	fsr2h,c
  5223  010AA4  2ADE               	incf	postinc2,f,c
  5224  010AA6  0E00               	movlw	0
  5225  010AA8  22DD               	addwfc	postdec2,f,c
  5226                           
  5227                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  5228  010AAA  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5229  010AB0  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5230  010AB6  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5231  010ABC  0E02               	movlw	2
  5232  010ABE  26DE               	addwf	postinc2,f,c
  5233  010AC0  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5234  010AC6  0E00               	movlw	0
  5235  010AC8  22DD               	addwfc	postdec2,f,c
  5236  010ACA  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5237  010AD0  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5238  010AD6  006F FF78  F0F4    	movff	postinc2,_width
  5239  010ADC  006F FF74  F0F5    	movff	postdec2,_width+1
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  5243  010AE2  AFF5               	btfss	(_width+1)& (0+255),7,b
  5244  010AE4  D039               	goto	u13430
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  5248  010AE6  802D               	bsf	_flags^0,0,c
  5249                           
  5250                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  5251  010AE8  6DF4               	negf	_width& (0+255),b
  5252  010AEA  1FF5               	comf	(_width+1)& (0+255),f,b
  5253  010AEC  B0D8               	btfsc	status,0,c
  5254  010AEE  2BF5               	incf	(_width+1)& (0+255),f,b
  5255  010AF0  D033               	goto	u13430
  5256  010AF2                     l13543:
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  5260  010AF2  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5261  010AF4  6ED9               	movwf	fsr2l,c
  5262  010AF6  6ADA               	clrf	fsr2h,c
  5263  010AF8  006F FF78  F066    	movff	postinc2,atoi@s
  5264  010AFE  006F FF74  F067    	movff	postdec2,atoi@s+1
  5265  010B04  ECDB  F097         	call	_atoi	;wreg free
  5266  010B08  C066  F0F4         	movff	?_atoi,_width
  5267  010B0C  C067  F0F5         	movff	?_atoi+1,_width+1
  5268                           
  5269                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  5270  010B10  D006               	goto	l13549
  5271  010B12                     l13545:
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  5275  010B12  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5276  010B14  6ED9               	movwf	fsr2l,c
  5277  010B16  6ADA               	clrf	fsr2h,c
  5278  010B18  2ADE               	incf	postinc2,f,c
  5279  010B1A  0E00               	movlw	0
  5280  010B1C  22DD               	addwfc	postdec2,f,c
  5281  010B1E                     l13549:
  5282                           
  5283                           ; BSR set to: 0
  5284  010B1E  0ED0               	movlw	208
  5285  010B20  6FD6               	movwf	??_vfpfcnvrt& (0+255),b
  5286  010B22  0EFF               	movlw	255
  5287  010B24  6FD7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5288  010B26  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5289  010B28  6ED9               	movwf	fsr2l,c
  5290  010B2A  6ADA               	clrf	fsr2h,c
  5291  010B2C  006F FF7B FFF6     	movff	postinc2,tblptrl
  5292  010B32  006F FF77 FFF7     	movff	postdec2,tblptrh
  5293  010B38                     	if	0	;tblptru may be non-zero
  5294  010B38                     	endif
  5295  010B38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5296  010B38  0E00               	movlw	low (__mediumconst shr (0+16))
  5297  010B3A  6EF8               	movwf	tblptru,c
  5298  010B3C                     	endif
  5299  010B3C  0008               	tblrd		*
  5300  010B3E  50F5               	movf	tablat,w,c
  5301  010B40  6FD8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5302  010B42  6BD9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5303  010B44  51D6               	movf	??_vfpfcnvrt& (0+255),w,b
  5304  010B46  27D8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5305  010B48  51D7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5306  010B4A  23D9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5307  010B4C  51D9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5308  010B4E  E104               	bnz	u13430
  5309  010B50  0E0A               	movlw	10
  5310  010B52  5DD8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5311  010B54  A0D8               	btfss	status,0,c
  5312  010B56  D7DD               	goto	l13545
  5313  010B58                     u13430:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  5317  010B58  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5318  010B5A  6ED9               	movwf	fsr2l,c
  5319  010B5C  6ADA               	clrf	fsr2h,c
  5320  010B5E  006F FF7B FFF6     	movff	postinc2,tblptrl
  5321  010B64  006F FF77 FFF7     	movff	postdec2,tblptrh
  5322  010B6A                     	if	0	;tblptru may be non-zero
  5323  010B6A                     	endif
  5324  010B6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5325  010B6A  0E00               	movlw	low (__mediumconst shr (0+16))
  5326  010B6C  6EF8               	movwf	tblptru,c
  5327  010B6E                     	endif
  5328  010B6E  0008               	tblrd		*
  5329  010B70  50F5               	movf	tablat,w,c
  5330  010B72  0A2E               	xorlw	46
  5331  010B74  A4D8               	btfss	status,2,c
  5332  010B76  D070               	goto	u13460
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  5336  010B78  0E00               	movlw	0
  5337  010B7A  6FF7               	movwf	(_prec+1)& (0+255),b
  5338  010B7C  0E00               	movlw	0
  5339  010B7E  6FF6               	movwf	_prec& (0+255),b
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  5343  010B80  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5344  010B82  6ED9               	movwf	fsr2l,c
  5345  010B84  6ADA               	clrf	fsr2h,c
  5346  010B86  2ADE               	incf	postinc2,f,c
  5347  010B88  0E00               	movlw	0
  5348  010B8A  22DD               	addwfc	postdec2,f,c
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  5352  010B8C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5353  010B8E  6ED9               	movwf	fsr2l,c
  5354  010B90  6ADA               	clrf	fsr2h,c
  5355  010B92  006F FF7B FFF6     	movff	postinc2,tblptrl
  5356  010B98  006F FF77 FFF7     	movff	postdec2,tblptrh
  5357  010B9E                     	if	0	;tblptru may be non-zero
  5358  010B9E                     	endif
  5359  010B9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5360  010B9E  0E00               	movlw	low (__mediumconst shr (0+16))
  5361  010BA0  6EF8               	movwf	tblptru,c
  5362  010BA2                     	endif
  5363  010BA2  0008               	tblrd		*
  5364  010BA4  50F5               	movf	tablat,w,c
  5365  010BA6  0A2A               	xorlw	42
  5366  010BA8  A4D8               	btfss	status,2,c
  5367  010BAA  D023               	goto	l13561
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  5371  010BAC  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5372  010BAE  6ED9               	movwf	fsr2l,c
  5373  010BB0  6ADA               	clrf	fsr2h,c
  5374  010BB2  2ADE               	incf	postinc2,f,c
  5375  010BB4  0E00               	movlw	0
  5376  010BB6  22DD               	addwfc	postdec2,f,c
  5377                           
  5378                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  5379  010BB8  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5380  010BBE  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5381  010BC4  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5382  010BCA  0E02               	movlw	2
  5383  010BCC  26DE               	addwf	postinc2,f,c
  5384  010BCE  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5385  010BD4  0E00               	movlw	0
  5386  010BD6  22DD               	addwfc	postdec2,f,c
  5387  010BD8  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5388  010BDE  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5389  010BE4  006F FF78  F0F6    	movff	postinc2,_prec
  5390  010BEA  006F FF74  F0F7    	movff	postdec2,_prec+1
  5391                           
  5392                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  5393  010BF0  D033               	goto	u13460
  5394  010BF2                     l13561:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  5398  010BF2  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5399  010BF4  6ED9               	movwf	fsr2l,c
  5400  010BF6  6ADA               	clrf	fsr2h,c
  5401  010BF8  006F FF78  F066    	movff	postinc2,atoi@s
  5402  010BFE  006F FF74  F067    	movff	postdec2,atoi@s+1
  5403  010C04  ECDB  F097         	call	_atoi	;wreg free
  5404  010C08  C066  F0F6         	movff	?_atoi,_prec
  5405  010C0C  C067  F0F7         	movff	?_atoi+1,_prec+1
  5406                           
  5407                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  5408  010C10  D006               	goto	l13567
  5409  010C12                     l13563:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  5413  010C12  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5414  010C14  6ED9               	movwf	fsr2l,c
  5415  010C16  6ADA               	clrf	fsr2h,c
  5416  010C18  2ADE               	incf	postinc2,f,c
  5417  010C1A  0E00               	movlw	0
  5418  010C1C  22DD               	addwfc	postdec2,f,c
  5419  010C1E                     l13567:
  5420                           
  5421                           ; BSR set to: 0
  5422  010C1E  0ED0               	movlw	208
  5423  010C20  6FD6               	movwf	??_vfpfcnvrt& (0+255),b
  5424  010C22  0EFF               	movlw	255
  5425  010C24  6FD7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5426  010C26  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5427  010C28  6ED9               	movwf	fsr2l,c
  5428  010C2A  6ADA               	clrf	fsr2h,c
  5429  010C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
  5430  010C32  006F FF77 FFF7     	movff	postdec2,tblptrh
  5431  010C38                     	if	0	;tblptru may be non-zero
  5432  010C38                     	endif
  5433  010C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5434  010C38  0E00               	movlw	low (__mediumconst shr (0+16))
  5435  010C3A  6EF8               	movwf	tblptru,c
  5436  010C3C                     	endif
  5437  010C3C  0008               	tblrd		*
  5438  010C3E  50F5               	movf	tablat,w,c
  5439  010C40  6FD8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5440  010C42  6BD9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5441  010C44  51D6               	movf	??_vfpfcnvrt& (0+255),w,b
  5442  010C46  27D8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5443  010C48  51D7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5444  010C4A  23D9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5445  010C4C  51D9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5446  010C4E  E104               	bnz	u13460
  5447  010C50  0E0A               	movlw	10
  5448  010C52  5DD8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5449  010C54  A0D8               	btfss	status,0,c
  5450  010C56  D7DD               	goto	l13563
  5451  010C58                     u13460:
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  5455  010C58  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5456  010C5A  6ED9               	movwf	fsr2l,c
  5457  010C5C  6ADA               	clrf	fsr2h,c
  5458  010C5E  006F FF7B FFF6     	movff	postinc2,tblptrl
  5459  010C64  006F FF77 FFF7     	movff	postdec2,tblptrh
  5460  010C6A                     	if	0	;tblptru may be non-zero
  5461  010C6A                     	endif
  5462  010C6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5463  010C6A  0E00               	movlw	low (__mediumconst shr (0+16))
  5464  010C6C  6EF8               	movwf	tblptru,c
  5465  010C6E                     	endif
  5466  010C6E  0008               	tblrd		*
  5467  010C70  50F5               	movf	tablat,w,c
  5468  010C72  6F66               	movwf	tolower@c& (0+255),b
  5469  010C74  6B67               	clrf	(tolower@c+1)& (0+255),b
  5470  010C76  EC0C  F0A4         	call	_tolower	;wreg free
  5471  010C7A  5166               	movf	?_tolower& (0+255),w,b
  5472  010C7C  6FE9               	movwf	vfpfcnvrt@ct& (0+255),b
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  5476  010C7E  51E9               	movf	vfpfcnvrt@ct& (0+255),w,b
  5477  010C80  B4D8               	btfsc	status,2,c
  5478  010C82  D03D               	goto	l13579
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  5482  010C84  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5483  010C86  6ED9               	movwf	fsr2l,c
  5484  010C88  6ADA               	clrf	fsr2h,c
  5485  010C8A  006F FF78  F0D6    	movff	postinc2,??_vfpfcnvrt
  5486  010C90  006F FF74  F0D7    	movff	postdec2,??_vfpfcnvrt+1
  5487  010C96  0E01               	movlw	1
  5488  010C98  27D6               	addwf	??_vfpfcnvrt& (0+255),f,b
  5489  010C9A  0E00               	movlw	0
  5490  010C9C  23D7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5491  010C9E  0060  F35B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5492  010CA4  0060  F35F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5493  010CAA                     	if	0	;tblptru may be non-zero
  5494  010CAA                     	endif
  5495  010CAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5496  010CAA  0E00               	movlw	low (__mediumconst shr (0+16))
  5497  010CAC  6EF8               	movwf	tblptru,c
  5498  010CAE                     	endif
  5499  010CAE  0008               	tblrd		*
  5500  010CB0  50F5               	movf	tablat,w,c
  5501  010CB2  6F66               	movwf	tolower@c& (0+255),b
  5502  010CB4  6B67               	clrf	(tolower@c+1)& (0+255),b
  5503  010CB6  EC0C  F0A4         	call	_tolower	;wreg free
  5504  010CBA  5166               	movf	?_tolower& (0+255),w,b
  5505  010CBC  6FEA               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  5509  010CBE  51EA               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  5510  010CC0  B4D8               	btfsc	status,2,c
  5511  010CC2  D01D               	goto	l13579
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  5515  010CC4  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5516  010CC6  6ED9               	movwf	fsr2l,c
  5517  010CC8  6ADA               	clrf	fsr2h,c
  5518  010CCA  006F FF78  F0D6    	movff	postinc2,??_vfpfcnvrt
  5519  010CD0  006F FF74  F0D7    	movff	postdec2,??_vfpfcnvrt+1
  5520  010CD6  0E02               	movlw	2
  5521  010CD8  27D6               	addwf	??_vfpfcnvrt& (0+255),f,b
  5522  010CDA  0E00               	movlw	0
  5523  010CDC  23D7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5524  010CDE  0060  F35B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5525  010CE4  0060  F35F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5526  010CEA                     	if	0	;tblptru may be non-zero
  5527  010CEA                     	endif
  5528  010CEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5529  010CEA  0E00               	movlw	low (__mediumconst shr (0+16))
  5530  010CEC  6EF8               	movwf	tblptru,c
  5531  010CEE                     	endif
  5532  010CEE  0008               	tblrd		*
  5533  010CF0  50F5               	movf	tablat,w,c
  5534  010CF2  6F66               	movwf	tolower@c& (0+255),b
  5535  010CF4  6B67               	clrf	(tolower@c+1)& (0+255),b
  5536  010CF6  EC0C  F0A4         	call	_tolower	;wreg free
  5537  010CFA  5166               	movf	?_tolower& (0+255),w,b
  5538  010CFC  6FEB               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  5539  010CFE                     l13579:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  5543  010CFE  0E66               	movlw	102
  5544  010D00  19E9               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5545  010D02  A4D8               	btfss	status,2,c
  5546  010D04  D04C               	goto	l13591
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  5550  010D06  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5551  010D08  6ED9               	movwf	fsr2l,c
  5552  010D0A  6ADA               	clrf	fsr2h,c
  5553  010D0C  006F FF7B FFF6     	movff	postinc2,tblptrl
  5554  010D12  006F FF77 FFF7     	movff	postdec2,tblptrh
  5555  010D18                     	if	0	;tblptru may be non-zero
  5556  010D18                     	endif
  5557  010D18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5558  010D18  0E00               	movlw	low (__mediumconst shr (0+16))
  5559  010D1A  6EF8               	movwf	tblptru,c
  5560  010D1C                     	endif
  5561  010D1C  0008               	tblrd		*
  5562  010D1E  006F FFD4  F0E8    	movff	tablat,vfpfcnvrt@c
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  5566  010D24  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5567  010D26  6ED9               	movwf	fsr2l,c
  5568  010D28  6ADA               	clrf	fsr2h,c
  5569  010D2A  2ADE               	incf	postinc2,f,c
  5570  010D2C  0E00               	movlw	0
  5571  010D2E  22DD               	addwfc	postdec2,f,c
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  5575  010D30  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5576  010D36  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5577  010D3C  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5578  010D42  0E04               	movlw	4
  5579  010D44  26DE               	addwf	postinc2,f,c
  5580  010D46  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5581  010D4C  0E00               	movlw	0
  5582  010D4E  22DD               	addwfc	postdec2,f,c
  5583  010D50  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5584  010D56  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5585  010D5C  006F FF78  F0EC    	movff	postinc2,vfpfcnvrt@f
  5586  010D62  006F FF78  F0ED    	movff	postinc2,vfpfcnvrt@f+1
  5587  010D68  006F FF78  F0EE    	movff	postinc2,vfpfcnvrt@f+2
  5588  010D6E  006F FF78  F0EF    	movff	postinc2,vfpfcnvrt@f+3
  5589  010D74                     l13587:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  5593  010D74  C0D1  F093         	movff	vfpfcnvrt@fp,efgtoa@fp
  5594  010D78  C0D2  F094         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5595  010D7C  C0EC  F095         	movff	vfpfcnvrt@f,efgtoa@f
  5596  010D80  C0ED  F096         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5597  010D84  C0EE  F097         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5598  010D88  C0EF  F098         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5599  010D8C  C0E8  F099         	movff	vfpfcnvrt@c,efgtoa@c
  5600  010D90  EC00  F080         	call	_efgtoa	;wreg free
  5601  010D94  C093  F0D1         	movff	?_efgtoa,?_vfpfcnvrt
  5602  010D98  C094  F0D2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5603  010D9C  0012               	return	
  5604  010D9E                     l13591:
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5608  010D9E  0EE9               	movlw	low vfpfcnvrt@ct
  5609  010DA0  6F64               	movwf	strncmp@_l& (0+255),b
  5610  010DA2  6B65               	clrf	(strncmp@_l+1)& (0+255),b
  5611  010DA4  0EE0               	movlw	low STR_38
  5612  010DA6  6F66               	movwf	strncmp@_r& (0+255),b
  5613  010DA8  0EFF               	movlw	high STR_38
  5614  010DAA  6F67               	movwf	(strncmp@_r+1)& (0+255),b
  5615  010DAC  0E00               	movlw	0
  5616  010DAE  6F69               	movwf	(strncmp@n+1)& (0+255),b
  5617  010DB0  0E02               	movlw	2
  5618  010DB2  6F68               	movwf	strncmp@n& (0+255),b
  5619  010DB4  EC90  F094         	call	_strncmp	;wreg free
  5620  010DB8  5164               	movf	?_strncmp& (0+255),w,b
  5621  010DBA  1165               	iorwf	(?_strncmp+1)& (0+255),w,b
  5622  010DBC  A4D8               	btfss	status,2,c
  5623  010DBE  D05E               	goto	l13607
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  5627  010DC0  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5628  010DC2  6ED9               	movwf	fsr2l,c
  5629  010DC4  6ADA               	clrf	fsr2h,c
  5630  010DC6  006F FF78  F0D6    	movff	postinc2,??_vfpfcnvrt
  5631  010DCC  006F FF74  F0D7    	movff	postdec2,??_vfpfcnvrt+1
  5632  010DD2  0E01               	movlw	1
  5633  010DD4  27D6               	addwf	??_vfpfcnvrt& (0+255),f,b
  5634  010DD6  0E00               	movlw	0
  5635  010DD8  23D7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5636  010DDA  0060  F35B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5637  010DE0  0060  F35F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5638  010DE6                     	if	0	;tblptru may be non-zero
  5639  010DE6                     	endif
  5640  010DE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5641  010DE6  0E00               	movlw	low (__mediumconst shr (0+16))
  5642  010DE8  6EF8               	movwf	tblptru,c
  5643  010DEA                     	endif
  5644  010DEA  0008               	tblrd		*
  5645  010DEC  006F FFD4  F0E8    	movff	tablat,vfpfcnvrt@c
  5646                           
  5647                           ; BSR set to: 0
  5648                           
  5649                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5650  010DF2  0EBF               	movlw	191
  5651  010DF4  6FD6               	movwf	??_vfpfcnvrt& (0+255),b
  5652  010DF6  0EFF               	movlw	255
  5653  010DF8  6FD7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5654  010DFA  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5655  010DFC  6ED9               	movwf	fsr2l,c
  5656  010DFE  6ADA               	clrf	fsr2h,c
  5657  010E00  006F FF7B FFF6     	movff	postinc2,tblptrl
  5658  010E06  006F FF77 FFF7     	movff	postdec2,tblptrh
  5659  010E0C                     	if	0	;tblptru may be non-zero
  5660  010E0C                     	endif
  5661  010E0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5662  010E0C  0E00               	movlw	low (__mediumconst shr (0+16))
  5663  010E0E  6EF8               	movwf	tblptru,c
  5664  010E10                     	endif
  5665  010E10  0008               	tblrd		*
  5666  010E12  50F5               	movf	tablat,w,c
  5667  010E14  6FD8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5668  010E16  6BD9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5669  010E18  51D6               	movf	??_vfpfcnvrt& (0+255),w,b
  5670  010E1A  27D8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5671  010E1C  51D7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5672  010E1E  23D9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5673  010E20  51D9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5674  010E22  E102               	bnz	l13601
  5675  010E24  0E1A               	movlw	26
  5676  010E26  5DD8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5677  010E28                     l13601:
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5681  010E28  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5682  010E2E  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5683  010E34  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5684  010E3A  0E04               	movlw	4
  5685  010E3C  26DE               	addwf	postinc2,f,c
  5686  010E3E  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5687  010E44  0E00               	movlw	0
  5688  010E46  22DD               	addwfc	postdec2,f,c
  5689  010E48  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5690  010E4E  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5691  010E54  006F FF78  F0EC    	movff	postinc2,vfpfcnvrt@f
  5692  010E5A  006F FF78  F0ED    	movff	postinc2,vfpfcnvrt@f+1
  5693  010E60  006F FF78  F0EE    	movff	postinc2,vfpfcnvrt@f+2
  5694  010E66  006F FF78  F0EF    	movff	postinc2,vfpfcnvrt@f+3
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  5698                           
  5699                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 957:             }
  5700  010E6C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5701  010E6E  6ED9               	movwf	fsr2l,c
  5702  010E70  6ADA               	clrf	fsr2h,c
  5703  010E72  0E02               	movlw	2
  5704  010E74  26DE               	addwf	postinc2,f,c
  5705  010E76  0E00               	movlw	0
  5706  010E78  22DD               	addwfc	postdec2,f,c
  5707  010E7A  D77C               	goto	l13587
  5708  010E7C                     l13607:
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  5712  010E7C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5713  010E7E  6ED9               	movwf	fsr2l,c
  5714  010E80  6ADA               	clrf	fsr2h,c
  5715  010E82  006F FF7B FFF6     	movff	postinc2,tblptrl
  5716  010E88  006F FF77 FFF7     	movff	postdec2,tblptrh
  5717  010E8E                     	if	0	;tblptru may be non-zero
  5718  010E8E                     	endif
  5719  010E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5720  010E8E  0E00               	movlw	low (__mediumconst shr (0+16))
  5721  010E90  6EF8               	movwf	tblptru,c
  5722  010E92                     	endif
  5723  010E92  0008               	tblrd		*
  5724  010E94  50F5               	movf	tablat,w,c
  5725  010E96  0A73               	xorlw	115
  5726  010E98  B4D8               	btfsc	status,2,c
  5727  010E9A  D017               	goto	u13530
  5728                           
  5729                           ; BSR set to: 0
  5730  010E9C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5731  010E9E  6ED9               	movwf	fsr2l,c
  5732  010EA0  6ADA               	clrf	fsr2h,c
  5733  010EA2  006F FF78  F064    	movff	postinc2,strncmp@_l
  5734  010EA8  006F FF74  F065    	movff	postdec2,strncmp@_l+1
  5735  010EAE  0EDC               	movlw	low STR_43
  5736  010EB0  6F66               	movwf	strncmp@_r& (0+255),b
  5737  010EB2  0EFF               	movlw	high STR_43
  5738  010EB4  6F67               	movwf	(strncmp@_r+1)& (0+255),b
  5739  010EB6  0E00               	movlw	0
  5740  010EB8  6F69               	movwf	(strncmp@n+1)& (0+255),b
  5741  010EBA  0E03               	movlw	3
  5742  010EBC  6F68               	movwf	strncmp@n& (0+255),b
  5743  010EBE  EC90  F094         	call	_strncmp	;wreg free
  5744  010EC2  5164               	movf	?_strncmp& (0+255),w,b
  5745  010EC4  1165               	iorwf	(?_strncmp+1)& (0+255),w,b
  5746  010EC6  A4D8               	btfss	status,2,c
  5747  010EC8  D04A               	goto	l13625
  5748  010ECA                     u13530:
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  5752  010ECA  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5753  010ECC  6ED9               	movwf	fsr2l,c
  5754  010ECE  6ADA               	clrf	fsr2h,c
  5755  010ED0  006F FF7B FFF6     	movff	postinc2,tblptrl
  5756  010ED6  006F FF77 FFF7     	movff	postdec2,tblptrh
  5757  010EDC                     	if	0	;tblptru may be non-zero
  5758  010EDC                     	endif
  5759  010EDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5760  010EDC  0E00               	movlw	low (__mediumconst shr (0+16))
  5761  010EDE  6EF8               	movwf	tblptru,c
  5762  010EE0                     	endif
  5763  010EE0  0008               	tblrd		*
  5764  010EE2  50F5               	movf	tablat,w,c
  5765  010EE4  0A73               	xorlw	115
  5766  010EE6  B4D8               	btfsc	status,2,c
  5767  010EE8  D004               	goto	l13615
  5768                           
  5769                           ; BSR set to: 0
  5770  010EEA  0E00               	movlw	0
  5771  010EEC  6FE7               	movwf	(_vfpfcnvrt$4219+1)& (0+255),b
  5772  010EEE  0E03               	movlw	3
  5773  010EF0  D003               	goto	L2
  5774  010EF2                     l13615:
  5775                           
  5776                           ; BSR set to: 0
  5777  010EF2  0E00               	movlw	0
  5778  010EF4  6FE7               	movwf	(_vfpfcnvrt$4219+1)& (0+255),b
  5779  010EF6  0E01               	movlw	1
  5780  010EF8                     L2:
  5781  010EF8  6FE6               	movwf	_vfpfcnvrt$4219& (0+255),b
  5782                           
  5783                           ; BSR set to: 0
  5784  010EFA  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5785  010EFC  6ED9               	movwf	fsr2l,c
  5786  010EFE  6ADA               	clrf	fsr2h,c
  5787  010F00  51E6               	movf	_vfpfcnvrt$4219& (0+255),w,b
  5788  010F02  26DE               	addwf	postinc2,f,c
  5789  010F04  51E7               	movf	(_vfpfcnvrt$4219+1)& (0+255),w,b
  5790  010F06  22DD               	addwfc	postdec2,f,c
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  5794  010F08  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5795  010F0E  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5796  010F14  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5797  010F1A  0E02               	movlw	2
  5798  010F1C  26DE               	addwf	postinc2,f,c
  5799  010F1E  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5800  010F24  0E00               	movlw	0
  5801  010F26  22DD               	addwfc	postdec2,f,c
  5802  010F28  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5803  010F2E  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5804  010F34  006F FF78  F0E2    	movff	postinc2,vfpfcnvrt@cp
  5805  010F3A  006F FF74  F0E3    	movff	postdec2,vfpfcnvrt@cp+1
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  5809  010F40  C0D1  F06A         	movff	vfpfcnvrt@fp,stoa@fp
  5810  010F44  C0D2  F06B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5811  010F48  C0E2  F06C         	movff	vfpfcnvrt@cp,stoa@s
  5812  010F4C  C0E3  F06D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5813  010F50  EC95  F096         	call	_stoa	;wreg free
  5814  010F54  C06A  F0D1         	movff	?_stoa,?_vfpfcnvrt
  5815  010F58  C06B  F0D2         	movff	?_stoa+1,?_vfpfcnvrt+1
  5816  010F5C  0012               	return	
  5817  010F5E                     l13625:
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  5821  010F5E  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5822  010F60  6ED9               	movwf	fsr2l,c
  5823  010F62  6ADA               	clrf	fsr2h,c
  5824  010F64  006F FF7B FFF6     	movff	postinc2,tblptrl
  5825  010F6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5826  010F70                     	if	0	;tblptru may be non-zero
  5827  010F70                     	endif
  5828  010F70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5829  010F70  0E00               	movlw	low (__mediumconst shr (0+16))
  5830  010F72  6EF8               	movwf	tblptru,c
  5831  010F74                     	endif
  5832  010F74  0008               	tblrd		*
  5833  010F76  50F5               	movf	tablat,w,c
  5834  010F78  0A75               	xorlw	117
  5835  010F7A  A4D8               	btfss	status,2,c
  5836  010F7C  D047               	goto	l13633
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  5840  010F7E  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5841  010F80  6ED9               	movwf	fsr2l,c
  5842  010F82  6ADA               	clrf	fsr2h,c
  5843  010F84  2ADE               	incf	postinc2,f,c
  5844  010F86  0E00               	movlw	0
  5845  010F88  22DD               	addwfc	postdec2,f,c
  5846                           
  5847                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  5848  010F8A  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5849  010F90  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5850  010F96  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5851  010F9C  0E02               	movlw	2
  5852  010F9E  26DE               	addwf	postinc2,f,c
  5853  010FA0  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5854  010FA6  0E00               	movlw	0
  5855  010FA8  22DD               	addwfc	postdec2,f,c
  5856  010FAA  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5857  010FB0  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5858  010FB6  006F FF78  F0D8    	movff	postinc2,??_vfpfcnvrt+2
  5859  010FBC  006F FF74  F0D9    	movff	postdec2,??_vfpfcnvrt+3
  5860  010FC2  C0D8  F0DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5861  010FC6  C0D9  F0DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5862  010FCA  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5863  010FCC  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5864  010FCE  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5865  010FD0  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5866  010FD2  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5867  010FD4  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  5871  010FD6  C0D1  F07E         	movff	vfpfcnvrt@fp,utoa@fp
  5872  010FDA  C0D2  F07F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5873  010FDE  C0DA  F080         	movff	vfpfcnvrt@llu,utoa@d
  5874  010FE2  C0DB  F081         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5875  010FE6  C0DC  F082         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5876  010FEA  C0DD  F083         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5877  010FEE  C0DE  F084         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5878  010FF2  C0DF  F085         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5879  010FF6  C0E0  F086         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5880  010FFA  C0E1  F087         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5881  010FFE  ECE3  F092         	call	_utoa	;wreg free
  5882  011002  C07E  F0D1         	movff	?_utoa,?_vfpfcnvrt
  5883  011006  C07F  F0D2         	movff	?_utoa+1,?_vfpfcnvrt+1
  5884  01100A  0012               	return	
  5885  01100C                     l13633:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  5889  01100C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5890  01100E  6ED9               	movwf	fsr2l,c
  5891  011010  6ADA               	clrf	fsr2h,c
  5892  011012  006F FF7B FFF6     	movff	postinc2,tblptrl
  5893  011018  006F FF77 FFF7     	movff	postdec2,tblptrh
  5894  01101E                     	if	0	;tblptru may be non-zero
  5895  01101E                     	endif
  5896  01101E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5897  01101E  0E00               	movlw	low (__mediumconst shr (0+16))
  5898  011020  6EF8               	movwf	tblptru,c
  5899  011022                     	endif
  5900  011022  0008               	tblrd		*
  5901  011024  50F5               	movf	tablat,w,c
  5902  011026  0A25               	xorlw	37
  5903  011028  A4D8               	btfss	status,2,c
  5904  01102A  D015               	goto	l13643
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  5908  01102C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5909  01102E  6ED9               	movwf	fsr2l,c
  5910  011030  6ADA               	clrf	fsr2h,c
  5911  011032  2ADE               	incf	postinc2,f,c
  5912  011034  0E00               	movlw	0
  5913  011036  22DD               	addwfc	postdec2,f,c
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  5917  011038  0E00               	movlw	0
  5918  01103A  6F62               	movwf	(fputc@c+1)& (0+255),b
  5919  01103C  0E25               	movlw	37
  5920  01103E  6F61               	movwf	fputc@c& (0+255),b
  5921  011040  C0D1  F063         	movff	vfpfcnvrt@fp,fputc@fp
  5922  011044  C0D2  F064         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5923  011048  ECAF  F09C         	call	_fputc	;wreg free
  5924  01104C                     l13639:
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  5928  01104C  0E00               	movlw	0
  5929  01104E  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5930  011050  0E01               	movlw	1
  5931  011052  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  5932  011054  0012               	return	
  5933  011056                     l13643:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  5937  011056  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5938  011058  6ED9               	movwf	fsr2l,c
  5939  01105A  6ADA               	clrf	fsr2h,c
  5940  01105C  2ADE               	incf	postinc2,f,c
  5941  01105E  0E00               	movlw	0
  5942  011060  22DD               	addwfc	postdec2,f,c
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  5946  011062  0E00               	movlw	0
  5947  011064  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5948  011066  0E00               	movlw	0
  5949  011068  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  5950  01106A  0012               	return	
  5951  01106C                     l13649:
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  5955  01106C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5956  01106E  6ED9               	movwf	fsr2l,c
  5957  011070  6ADA               	clrf	fsr2h,c
  5958  011072  006F FF7B FFF6     	movff	postinc2,tblptrl
  5959  011078  006F FF77 FFF7     	movff	postdec2,tblptrh
  5960  01107E                     	if	0	;tblptru may be non-zero
  5961  01107E                     	endif
  5962  01107E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5963  01107E  0E00               	movlw	low (__mediumconst shr (0+16))
  5964  011080  6EF8               	movwf	tblptru,c
  5965  011082                     	endif
  5966  011082  0008               	tblrd		*
  5967  011084  50F5               	movf	tablat,w,c
  5968  011086  6F61               	movwf	fputc@c& (0+255),b
  5969  011088  6B62               	clrf	(fputc@c+1)& (0+255),b
  5970  01108A  C0D1  F063         	movff	vfpfcnvrt@fp,fputc@fp
  5971  01108E  C0D2  F064         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5972  011092  ECAF  F09C         	call	_fputc	;wreg free
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  5976  011096  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5977  011098  6ED9               	movwf	fsr2l,c
  5978  01109A  6ADA               	clrf	fsr2h,c
  5979  01109C  2ADE               	incf	postinc2,f,c
  5980  01109E  0E00               	movlw	0
  5981  0110A0  22DD               	addwfc	postdec2,f,c
  5982  0110A2  D7D4               	goto	l13639
  5983  0110A4                     __end_of_vfpfcnvrt:
  5984                           	callstack 0
  5985                           
  5986 ;; *************** function _utoa *****************
  5987 ;; Defined at:
  5988 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  fp              2   30[BANK0 ] PTR struct _IO_FILE
  5991 ;;		 -> sprintf@f(11), NULL(0), 
  5992 ;;  d               8   32[BANK0 ] unsigned long long 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  n               8   52[BANK0 ] unsigned long long 
  5995 ;;  i               2   60[BANK0 ] int 
  5996 ;;  w               2   50[BANK0 ] int 
  5997 ;;  p               2   48[BANK0 ] int 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  2   30[BANK0 ] int 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 3F/0
  6004 ;;		On exit  : 3F/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6007 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6008 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6009 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6010 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6011 ;;Total ram usage:       32 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; Hardware stack levels required when called: 12
  6014 ;; This function calls:
  6015 ;;		___lodiv
  6016 ;;		___lomod
  6017 ;;		_pad
  6018 ;; This function is called by:
  6019 ;;		_vfpfcnvrt
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text7
  6024  0125C6                     __ptext7:
  6025                           	callstack 0
  6026  0125C6                     _utoa:
  6027                           	callstack 15
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;incstack = 0
  6034  0125C6  AFF7               	btfss	(_prec+1)& (0+255),7,b
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  6038  0125C8  922D               	bcf	_flags^0,1,c
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  6042  0125CA  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6043  0125CC  D005               	goto	u12580
  6044  0125CE  51F7               	movf	(_prec+1)& (0+255),w,b
  6045  0125D0  E108               	bnz	l2657
  6046  0125D2  05F6               	decf	_prec& (0+255),w,b
  6047  0125D4  B0D8               	btfsc	status,0,c
  6048  0125D6  D005               	goto	l2657
  6049  0125D8                     u12580:
  6050                           
  6051                           ; BSR set to: 0
  6052  0125D8  0E00               	movlw	0
  6053  0125DA  6F91               	movwf	(utoa@p+1)& (0+255),b
  6054  0125DC  0E01               	movlw	1
  6055  0125DE  6F90               	movwf	utoa@p& (0+255),b
  6056  0125E0  D004               	goto	l2659
  6057  0125E2                     l2657:
  6058                           
  6059                           ; BSR set to: 0
  6060  0125E2  C0F6  F090         	movff	_prec,utoa@p
  6061  0125E6  C0F7  F091         	movff	_prec+1,utoa@p+1
  6062  0125EA                     l2659:
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  6066  0125EA  C0F4  F092         	movff	_width,utoa@w
  6067  0125EE  C0F5  F093         	movff	_width+1,utoa@w+1
  6068                           
  6069                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  6070  0125F2  C080  F094         	movff	utoa@d,utoa@n
  6071  0125F6  C081  F095         	movff	utoa@d+1,utoa@n+1
  6072  0125FA  C082  F096         	movff	utoa@d+2,utoa@n+2
  6073  0125FE  C083  F097         	movff	utoa@d+3,utoa@n+3
  6074  012602  C084  F098         	movff	utoa@d+4,utoa@n+4
  6075  012606  C085  F099         	movff	utoa@d+5,utoa@n+5
  6076  01260A  C086  F09A         	movff	utoa@d+6,utoa@n+6
  6077  01260E  C087  F09B         	movff	utoa@d+7,utoa@n+7
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  6081  012612  0E00               	movlw	0
  6082  012614  6F9D               	movwf	(utoa@i+1)& (0+255),b
  6083  012616  0E4F               	movlw	79
  6084  012618  6F9C               	movwf	utoa@i& (0+255),b
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  6088  01261A  0E00               	movlw	0
  6089  01261C  0101               	movlb	1	; () banked
  6090  01261E  6F92               	movwf	(_dbuf+79)& (0+255),b
  6091                           
  6092                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  6093  012620  D076               	goto	l12251
  6094  012622                     l12241:
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  6098  012622  079C               	decf	utoa@i& (0+255),f,b
  6099  012624  A0D8               	btfss	status,0,c
  6100  012626  079D               	decf	(utoa@i+1)& (0+255),f,b
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  6104  012628  0E43               	movlw	low _dbuf
  6105  01262A  259C               	addwf	utoa@i& (0+255),w,b
  6106  01262C  6ED9               	movwf	fsr2l,c
  6107  01262E  0E01               	movlw	high _dbuf
  6108  012630  219D               	addwfc	(utoa@i+1)& (0+255),w,b
  6109  012632  6EDA               	movwf	fsr2h,c
  6110  012634  C094  F060         	movff	utoa@n,___lomod@dividend
  6111  012638  C095  F061         	movff	utoa@n+1,___lomod@dividend+1
  6112  01263C  C096  F062         	movff	utoa@n+2,___lomod@dividend+2
  6113  012640  C097  F063         	movff	utoa@n+3,___lomod@dividend+3
  6114  012644  C098  F064         	movff	utoa@n+4,___lomod@dividend+4
  6115  012648  C099  F065         	movff	utoa@n+5,___lomod@dividend+5
  6116  01264C  C09A  F066         	movff	utoa@n+6,___lomod@dividend+6
  6117  012650  C09B  F067         	movff	utoa@n+7,___lomod@dividend+7
  6118  012654  0E0A               	movlw	10
  6119  012656  6F68               	movwf	___lomod@divisor& (0+255),b
  6120  012658  0E00               	movlw	0
  6121  01265A  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  6122  01265C  0E00               	movlw	0
  6123  01265E  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  6124  012660  0E00               	movlw	0
  6125  012662  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  6126  012664  0E00               	movlw	0
  6127  012666  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  6128  012668  0E00               	movlw	0
  6129  01266A  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  6130  01266C  0E00               	movlw	0
  6131  01266E  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  6132  012670  0E00               	movlw	0
  6133  012672  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  6134  012674  EC0A  F09D         	call	___lomod	;wreg free
  6135  012678  C060  F088         	movff	?___lomod,??_utoa
  6136  01267C  C061  F089         	movff	?___lomod+1,??_utoa+1
  6137  012680  C062  F08A         	movff	?___lomod+2,??_utoa+2
  6138  012684  C063  F08B         	movff	?___lomod+3,??_utoa+3
  6139  012688  C064  F08C         	movff	?___lomod+4,??_utoa+4
  6140  01268C  C065  F08D         	movff	?___lomod+5,??_utoa+5
  6141  012690  C066  F08E         	movff	?___lomod+6,??_utoa+6
  6142  012694  C067  F08F         	movff	?___lomod+7,??_utoa+7
  6143  012698  5188               	movf	??_utoa& (0+255),w,b
  6144  01269A  0F30               	addlw	48
  6145  01269C  6EDF               	movwf	indf2,c
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  6149  01269E  0790               	decf	utoa@p& (0+255),f,b
  6150  0126A0  A0D8               	btfss	status,0,c
  6151  0126A2  0791               	decf	(utoa@p+1)& (0+255),f,b
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  6155  0126A4  0792               	decf	utoa@w& (0+255),f,b
  6156  0126A6  A0D8               	btfss	status,0,c
  6157  0126A8  0793               	decf	(utoa@w+1)& (0+255),f,b
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  6161  0126AA  C094  F060         	movff	utoa@n,___lodiv@dividend
  6162  0126AE  C095  F061         	movff	utoa@n+1,___lodiv@dividend+1
  6163  0126B2  C096  F062         	movff	utoa@n+2,___lodiv@dividend+2
  6164  0126B6  C097  F063         	movff	utoa@n+3,___lodiv@dividend+3
  6165  0126BA  C098  F064         	movff	utoa@n+4,___lodiv@dividend+4
  6166  0126BE  C099  F065         	movff	utoa@n+5,___lodiv@dividend+5
  6167  0126C2  C09A  F066         	movff	utoa@n+6,___lodiv@dividend+6
  6168  0126C6  C09B  F067         	movff	utoa@n+7,___lodiv@dividend+7
  6169  0126CA  0E0A               	movlw	10
  6170  0126CC  6F68               	movwf	___lodiv@divisor& (0+255),b
  6171  0126CE  0E00               	movlw	0
  6172  0126D0  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  6173  0126D2  0E00               	movlw	0
  6174  0126D4  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  6175  0126D6  0E00               	movlw	0
  6176  0126D8  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  6177  0126DA  0E00               	movlw	0
  6178  0126DC  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  6179  0126DE  0E00               	movlw	0
  6180  0126E0  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  6181  0126E2  0E00               	movlw	0
  6182  0126E4  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  6183  0126E6  0E00               	movlw	0
  6184  0126E8  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  6185  0126EA  EC60  F09A         	call	___lodiv	;wreg free
  6186  0126EE  C060  F094         	movff	?___lodiv,utoa@n
  6187  0126F2  C061  F095         	movff	?___lodiv+1,utoa@n+1
  6188  0126F6  C062  F096         	movff	?___lodiv+2,utoa@n+2
  6189  0126FA  C063  F097         	movff	?___lodiv+3,utoa@n+3
  6190  0126FE  C064  F098         	movff	?___lodiv+4,utoa@n+4
  6191  012702  C065  F099         	movff	?___lodiv+5,utoa@n+5
  6192  012706  C066  F09A         	movff	?___lodiv+6,utoa@n+6
  6193  01270A  C067  F09B         	movff	?___lodiv+7,utoa@n+7
  6194  01270E                     l12251:
  6195                           
  6196                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  6197  01270E  0100               	movlb	0	; () banked
  6198  012710  519C               	movf	utoa@i& (0+255),w,b
  6199  012712  119D               	iorwf	(utoa@i+1)& (0+255),w,b
  6200  012714  B4D8               	btfsc	status,2,c
  6201  012716  D01A               	goto	u12630
  6202                           
  6203                           ; BSR set to: 0
  6204  012718  5194               	movf	utoa@n& (0+255),w,b
  6205  01271A  1195               	iorwf	(utoa@n+1)& (0+255),w,b
  6206  01271C  1196               	iorwf	(utoa@n+2)& (0+255),w,b
  6207  01271E  1197               	iorwf	(utoa@n+3)& (0+255),w,b
  6208  012720  1198               	iorwf	(utoa@n+4)& (0+255),w,b
  6209  012722  1199               	iorwf	(utoa@n+5)& (0+255),w,b
  6210  012724  119A               	iorwf	(utoa@n+6)& (0+255),w,b
  6211  012726  119B               	iorwf	(utoa@n+7)& (0+255),w,b
  6212  012728  A4D8               	btfss	status,2,c
  6213  01272A  D77B               	goto	l12241
  6214                           
  6215                           ; BSR set to: 0
  6216  01272C  BF91               	btfsc	(utoa@p+1)& (0+255),7,b
  6217  01272E  D005               	goto	u12610
  6218  012730  5191               	movf	(utoa@p+1)& (0+255),w,b
  6219  012732  E102               	bnz	u12611
  6220  012734  0590               	decf	utoa@p& (0+255),w,b
  6221  012736  B0D8               	btfsc	status,0,c
  6222  012738                     u12611:
  6223  012738  D774               	goto	l12241
  6224  01273A                     u12610:
  6225                           
  6226                           ; BSR set to: 0
  6227  01273A  BF93               	btfsc	(utoa@w+1)& (0+255),7,b
  6228  01273C  D007               	goto	u12630
  6229  01273E  5193               	movf	(utoa@w+1)& (0+255),w,b
  6230  012740  E103               	bnz	u12620
  6231  012742  0592               	decf	utoa@w& (0+255),w,b
  6232  012744  A0D8               	btfss	status,0,c
  6233  012746  D002               	goto	u12630
  6234  012748                     u12620:
  6235                           
  6236                           ; BSR set to: 0
  6237  012748  B22D               	btfsc	_flags^0,1,c
  6238  01274A  D76B               	goto	l12241
  6239  01274C                     u12630:
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  6243  01274C  C07E  F073         	movff	utoa@fp,pad@fp
  6244  012750  C07F  F074         	movff	utoa@fp+1,pad@fp+1
  6245  012754  0E43               	movlw	low _dbuf
  6246  012756  259C               	addwf	utoa@i& (0+255),w,b
  6247  012758  6F75               	movwf	pad@buf& (0+255),b
  6248  01275A  0E01               	movlw	high _dbuf
  6249  01275C  219D               	addwfc	(utoa@i+1)& (0+255),w,b
  6250  01275E  6F76               	movwf	(pad@buf+1)& (0+255),b
  6251  012760  C092  F077         	movff	utoa@w,pad@p
  6252  012764  C093  F078         	movff	utoa@w+1,pad@p+1
  6253  012768  ECB2  F09D         	call	_pad	;wreg free
  6254  01276C  C073  F07E         	movff	?_pad,?_utoa
  6255  012770  C074  F07F         	movff	?_pad+1,?_utoa+1
  6256                           
  6257                           ; BSR set to: 0
  6258  012774  0012               	return		;funcret
  6259  012776                     __end_of_utoa:
  6260                           	callstack 0
  6261                           
  6262 ;; *************** function ___lomod *****************
  6263 ;; Defined at:
  6264 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  dividend        8    0[BANK0 ] unsigned long long 
  6267 ;;  divisor         8    8[BANK0 ] unsigned long long 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  counter         1   31[COMRAM] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  8    0[BANK0 ] unsigned long long 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0
  6274 ;; Tracked objects:
  6275 ;;		On entry : 3F/0
  6276 ;;		On exit  : 3F/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6279 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6282 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6283 ;;Total ram usage:       17 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 7
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_utoa
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text8
  6294  013A14                     __ptext8:
  6295                           	callstack 0
  6296  013A14                     ___lomod:
  6297                           	callstack 19
  6298                           
  6299                           ; BSR set to: 0
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;incstack = 0
  6303  013A14  5168               	movf	___lomod@divisor& (0+255),w,b
  6304  013A16  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  6305  013A18  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  6306  013A1A  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  6307  013A1C  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  6308  013A1E  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  6309  013A20  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  6310  013A22  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  6311  013A24  B4D8               	btfsc	status,2,c
  6312  013A26  D03C               	goto	l2250
  6313                           
  6314                           ; BSR set to: 0
  6315  013A28  0E01               	movlw	1
  6316  013A2A  6E20               	movwf	___lomod@counter^0,c
  6317  013A2C  D00A               	goto	l11693
  6318  013A2E                     l11691:
  6319                           
  6320                           ; BSR set to: 0
  6321  013A2E  90D8               	bcf	status,0,c
  6322  013A30  3768               	rlcf	___lomod@divisor& (0+255),f,b
  6323  013A32  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  6324  013A34  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  6325  013A36  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  6326  013A38  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  6327  013A3A  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  6328  013A3C  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  6329  013A3E  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  6330  013A40  2A20               	incf	___lomod@counter^0,f,c
  6331  013A42                     l11693:
  6332                           
  6333                           ; BSR set to: 0
  6334  013A42  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  6335  013A44  D7F4               	goto	l11691
  6336  013A46                     u11520:
  6337                           
  6338                           ; BSR set to: 0
  6339  013A46  5168               	movf	___lomod@divisor& (0+255),w,b
  6340  013A48  5D60               	subwf	___lomod@dividend& (0+255),w,b
  6341  013A4A  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  6342  013A4C  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  6343  013A4E  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  6344  013A50  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  6345  013A52  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  6346  013A54  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  6347  013A56  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  6348  013A58  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  6349  013A5A  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  6350  013A5C  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  6351  013A5E  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  6352  013A60  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  6353  013A62  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  6354  013A64  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  6355  013A66  A0D8               	btfss	status,0,c
  6356  013A68  D010               	goto	l11699
  6357                           
  6358                           ; BSR set to: 0
  6359  013A6A  5168               	movf	___lomod@divisor& (0+255),w,b
  6360  013A6C  5F60               	subwf	___lomod@dividend& (0+255),f,b
  6361  013A6E  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  6362  013A70  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  6363  013A72  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  6364  013A74  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  6365  013A76  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  6366  013A78  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  6367  013A7A  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  6368  013A7C  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  6369  013A7E  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  6370  013A80  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  6371  013A82  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  6372  013A84  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  6373  013A86  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  6374  013A88  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  6375  013A8A                     l11699:
  6376                           
  6377                           ; BSR set to: 0
  6378  013A8A  90D8               	bcf	status,0,c
  6379  013A8C  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  6380  013A8E  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  6381  013A90  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  6382  013A92  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  6383  013A94  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  6384  013A96  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  6385  013A98  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  6386  013A9A  3368               	rrcf	___lomod@divisor& (0+255),f,b
  6387                           
  6388                           ; BSR set to: 0
  6389  013A9C  2E20               	decfsz	___lomod@counter^0,f,c
  6390  013A9E  D7D3               	goto	u11520
  6391  013AA0                     l2250:
  6392                           
  6393                           ; BSR set to: 0
  6394  013AA0  C060  F060         	movff	___lomod@dividend,?___lomod
  6395  013AA4  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  6396  013AA8  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  6397  013AAC  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  6398  013AB0  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  6399  013AB4  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  6400  013AB8  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  6401  013ABC  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  6402                           
  6403                           ; BSR set to: 0
  6404  013AC0  0012               	return		;funcret
  6405  013AC2                     __end_of___lomod:
  6406                           	callstack 0
  6407                           
  6408 ;; *************** function ___lodiv *****************
  6409 ;; Defined at:
  6410 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  dividend        8    0[BANK0 ] unsigned long long 
  6413 ;;  divisor         8    8[BANK0 ] unsigned long long 
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  quotient        8   16[BANK0 ] unsigned long long 
  6416 ;;  counter         1   24[BANK0 ] unsigned char 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  8    0[BANK0 ] unsigned long long 
  6419 ;; Registers used:
  6420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6421 ;; Tracked objects:
  6422 ;;		On entry : 3F/0
  6423 ;;		On exit  : 3F/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6426 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6427 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6429 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6430 ;;Total ram usage:       25 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; Hardware stack levels required when called: 7
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_utoa
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text9
  6441  0134C0                     __ptext9:
  6442                           	callstack 0
  6443  0134C0                     ___lodiv:
  6444                           	callstack 19
  6445                           
  6446                           ; BSR set to: 0
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;incstack = 0
  6450  0134C0  EE20  F070         	lfsr	2,___lodiv@quotient
  6451  0134C4  0E07               	movlw	7
  6452  0134C6                     u11471:
  6453  0134C6  6ADE               	clrf	postinc2,c
  6454  0134C8  06E8               	decf	wreg,f,c
  6455  0134CA  E2FD               	bc	u11471
  6456                           
  6457                           ; BSR set to: 0
  6458  0134CC  5168               	movf	___lodiv@divisor& (0+255),w,b
  6459  0134CE  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  6460  0134D0  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  6461  0134D2  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  6462  0134D4  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  6463  0134D6  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  6464  0134D8  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  6465  0134DA  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  6466  0134DC  B4D8               	btfsc	status,2,c
  6467  0134DE  D046               	goto	l2240
  6468                           
  6469                           ; BSR set to: 0
  6470  0134E0  0E01               	movlw	1
  6471  0134E2  6F78               	movwf	___lodiv@counter& (0+255),b
  6472  0134E4  D00A               	goto	l11673
  6473  0134E6                     l11671:
  6474                           
  6475                           ; BSR set to: 0
  6476  0134E6  90D8               	bcf	status,0,c
  6477  0134E8  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  6478  0134EA  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  6479  0134EC  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  6480  0134EE  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  6481  0134F0  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  6482  0134F2  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  6483  0134F4  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  6484  0134F6  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  6485  0134F8  2B78               	incf	___lodiv@counter& (0+255),f,b
  6486  0134FA                     l11673:
  6487                           
  6488                           ; BSR set to: 0
  6489  0134FA  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  6490  0134FC  D7F4               	goto	l11671
  6491  0134FE                     u11490:
  6492                           
  6493                           ; BSR set to: 0
  6494  0134FE  90D8               	bcf	status,0,c
  6495  013500  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  6496  013502  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  6497  013504  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  6498  013506  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  6499  013508  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  6500  01350A  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  6501  01350C  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  6502  01350E  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  6503                           
  6504                           ; BSR set to: 0
  6505  013510  5168               	movf	___lodiv@divisor& (0+255),w,b
  6506  013512  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  6507  013514  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  6508  013516  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  6509  013518  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  6510  01351A  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  6511  01351C  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  6512  01351E  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  6513  013520  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  6514  013522  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  6515  013524  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  6516  013526  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  6517  013528  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  6518  01352A  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  6519  01352C  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  6520  01352E  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  6521  013530  A0D8               	btfss	status,0,c
  6522  013532  D011               	goto	l11683
  6523                           
  6524                           ; BSR set to: 0
  6525  013534  5168               	movf	___lodiv@divisor& (0+255),w,b
  6526  013536  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  6527  013538  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  6528  01353A  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  6529  01353C  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  6530  01353E  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  6531  013540  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  6532  013542  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  6533  013544  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  6534  013546  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  6535  013548  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  6536  01354A  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  6537  01354C  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  6538  01354E  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  6539  013550  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  6540  013552  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  6541                           
  6542                           ; BSR set to: 0
  6543  013554  8170               	bsf	___lodiv@quotient& (0+255),0,b
  6544  013556                     l11683:
  6545                           
  6546                           ; BSR set to: 0
  6547  013556  90D8               	bcf	status,0,c
  6548  013558  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  6549  01355A  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  6550  01355C  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  6551  01355E  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  6552  013560  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  6553  013562  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  6554  013564  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  6555  013566  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  6556                           
  6557                           ; BSR set to: 0
  6558  013568  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  6559  01356A  D7C9               	goto	u11490
  6560  01356C                     l2240:
  6561                           
  6562                           ; BSR set to: 0
  6563  01356C  C070  F060         	movff	___lodiv@quotient,?___lodiv
  6564  013570  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  6565  013574  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  6566  013578  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  6567  01357C  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  6568  013580  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  6569  013584  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  6570  013588  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  6571                           
  6572                           ; BSR set to: 0
  6573  01358C  0012               	return		;funcret
  6574  01358E                     __end_of___lodiv:
  6575                           	callstack 0
  6576                           
  6577 ;; *************** function _stoa *****************
  6578 ;; Defined at:
  6579 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  6582 ;;		 -> sprintf@f(11), NULL(0), 
  6583 ;;  s               2   12[BANK0 ] PTR unsigned char 
  6584 ;;		 -> ?_printf(2), ?_sprintf(2), build_version(14), STR_2(9), 
  6585 ;;		 -> STR_1(12), 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  nuls            7   15[BANK0 ] unsigned char [7]
  6588 ;;  l               2   30[BANK0 ] int 
  6589 ;;  p               2   28[BANK0 ] int 
  6590 ;;  cp              2   26[BANK0 ] PTR unsigned char 
  6591 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), build_version(14), 
  6592 ;;		 -> STR_2(9), STR_1(12), 
  6593 ;;  w               2   24[BANK0 ] int 
  6594 ;;  i               2   22[BANK0 ] int 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  2   10[BANK0 ] int 
  6597 ;; Registers used:
  6598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 3F/0
  6601 ;;		On exit  : 3F/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6605 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6607 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6608 ;;Total ram usage:       22 bytes
  6609 ;; Hardware stack levels used: 1
  6610 ;; Hardware stack levels required when called: 10
  6611 ;; This function calls:
  6612 ;;		_fputc
  6613 ;;		_strlen
  6614 ;; This function is called by:
  6615 ;;		_vfpfcnvrt
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text10
  6620  012D2A                     __ptext10:
  6621                           	callstack 0
  6622  012D2A                     _stoa:
  6623                           	callstack 17
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;incstack = 0
  6630  012D2A  EE20  F1C0         	lfsr	2,stoa@F1164
  6631  012D2E  EE10  F06F         	lfsr	1,stoa@nuls
  6632  012D32  0E06               	movlw	6
  6633  012D34                     u12471:
  6634  012D34  006F FF6F FFE3     	movff	plusw2,plusw1
  6635  012D3A  06E8               	decf	wreg,f,c
  6636  012D3C  E2FB               	bc	u12471
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  6640  012D3E  C06C  F07A         	movff	stoa@s,stoa@cp
  6641  012D42  C06D  F07B         	movff	stoa@s+1,stoa@cp+1
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  6645  012D46  517A               	movf	stoa@cp& (0+255),w,b
  6646  012D48  117B               	iorwf	(stoa@cp+1)& (0+255),w,b
  6647  012D4A  A4D8               	btfss	status,2,c
  6648  012D4C  D003               	goto	l12195
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  6652  012D4E  0E6F               	movlw	low stoa@nuls
  6653  012D50  6F7A               	movwf	stoa@cp& (0+255),b
  6654  012D52  6B7B               	clrf	(stoa@cp+1)& (0+255),b
  6655  012D54                     l12195:
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  6659  012D54  C07A  F060         	movff	stoa@cp,strlen@s
  6660  012D58  C07B  F061         	movff	stoa@cp+1,strlen@s+1
  6661  012D5C  ECF8  F0A0         	call	_strlen	;wreg free
  6662  012D60  C060  F07E         	movff	?_strlen,stoa@l
  6663  012D64  C061  F07F         	movff	?_strlen+1,stoa@l+1
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  6667  012D68  C0F6  F07C         	movff	_prec,stoa@p
  6668  012D6C  C0F7  F07D         	movff	_prec+1,stoa@p+1
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6672  012D70  BF7D               	btfsc	(stoa@p+1)& (0+255),7,b
  6673  012D72  D00E               	goto	l2638
  6674                           
  6675                           ; BSR set to: 0
  6676  012D74  517E               	movf	stoa@l& (0+255),w,b
  6677  012D76  5D7C               	subwf	stoa@p& (0+255),w,b
  6678  012D78  517D               	movf	(stoa@p+1)& (0+255),w,b
  6679  012D7A  0A80               	xorlw	128
  6680  012D7C  6F6E               	movwf	??_stoa& (0+255),b
  6681  012D7E  517F               	movf	(stoa@l+1)& (0+255),w,b
  6682  012D80  0A80               	xorlw	128
  6683  012D82  596E               	subwfb	??_stoa& (0+255),w,b
  6684  012D84  B0D8               	btfsc	status,0,c
  6685  012D86  D004               	goto	l2638
  6686                           
  6687                           ; BSR set to: 0
  6688  012D88  C07C  F07E         	movff	stoa@p,stoa@l
  6689  012D8C  C07D  F07F         	movff	stoa@p+1,stoa@l+1
  6690  012D90                     l2638:
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  6694  012D90  C07E  F07C         	movff	stoa@l,stoa@p
  6695  012D94  C07F  F07D         	movff	stoa@l+1,stoa@p+1
  6696                           
  6697                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  6698  012D98  C0F4  F078         	movff	_width,stoa@w
  6699  012D9C  C0F5  F079         	movff	_width+1,stoa@w+1
  6700                           
  6701                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  6702  012DA0  A02D               	btfss	_flags^0,0,c
  6703  012DA2  D00D               	goto	l12209
  6704  012DA4  D016               	goto	u12520
  6705  012DA6                     l12205:
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  6709  012DA6  0E00               	movlw	0
  6710  012DA8  6F62               	movwf	(fputc@c+1)& (0+255),b
  6711  012DAA  0E20               	movlw	32
  6712  012DAC  6F61               	movwf	fputc@c& (0+255),b
  6713  012DAE  C06A  F063         	movff	stoa@fp,fputc@fp
  6714  012DB2  C06B  F064         	movff	stoa@fp+1,fputc@fp+1
  6715  012DB6  ECAF  F09C         	call	_fputc	;wreg free
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  6719  012DBA  4B7E               	infsnz	stoa@l& (0+255),f,b
  6720  012DBC  2B7F               	incf	(stoa@l+1)& (0+255),f,b
  6721  012DBE                     l12209:
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  6725  012DBE  5178               	movf	stoa@w& (0+255),w,b
  6726  012DC0  5D7E               	subwf	stoa@l& (0+255),w,b
  6727  012DC2  517F               	movf	(stoa@l+1)& (0+255),w,b
  6728  012DC4  0A80               	xorlw	128
  6729  012DC6  6F6E               	movwf	??_stoa& (0+255),b
  6730  012DC8  5179               	movf	(stoa@w+1)& (0+255),w,b
  6731  012DCA  0A80               	xorlw	128
  6732  012DCC  596E               	subwfb	??_stoa& (0+255),w,b
  6733  012DCE  A0D8               	btfss	status,0,c
  6734  012DD0  D7EA               	goto	l12205
  6735  012DD2                     u12520:
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  6739  012DD2  0E00               	movlw	0
  6740  012DD4  6F77               	movwf	(stoa@i+1)& (0+255),b
  6741  012DD6  0E00               	movlw	0
  6742  012DD8  6F76               	movwf	stoa@i& (0+255),b
  6743                           
  6744                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  6745  012DDA  D024               	goto	l12219
  6746  012DDC                     l12213:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  6750  012DDC  0060  F1EB  FFF6   	movff	stoa@cp,tblptrl
  6751  012DE2  0060  F1EF  FFF7   	movff	stoa@cp+1,tblptrh
  6752  012DE8  0E00               	movlw	low (__mediumconst shr (0+16))
  6753  012DEA  6EF8               	movwf	tblptru,c
  6754  012DEC  0E1F               	movlw	(high __ramtop+-1)
  6755  012DEE  64F7               	cpfsgt	tblptrh,c
  6756  012DF0  D003               	bra	u12537
  6757  012DF2  0008               	tblrd		*
  6758  012DF4  50F5               	movf	tablat,w,c
  6759  012DF6  D007               	bra	u12530
  6760  012DF8                     u12537:
  6761  012DF8  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6762  012DFE  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6763  012E04  50E7               	movf	indf1,w,c
  6764  012E06                     u12530:
  6765  012E06  0100               	movlb	0	; () banked
  6766  012E08  6F6E               	movwf	??_stoa& (0+255),b
  6767  012E0A  516E               	movf	??_stoa& (0+255),w,b
  6768  012E0C  6F61               	movwf	fputc@c& (0+255),b
  6769  012E0E  6B62               	clrf	(fputc@c+1)& (0+255),b
  6770  012E10  C06A  F063         	movff	stoa@fp,fputc@fp
  6771  012E14  C06B  F064         	movff	stoa@fp+1,fputc@fp+1
  6772  012E18  ECAF  F09C         	call	_fputc	;wreg free
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  6776  012E1C  4B7A               	infsnz	stoa@cp& (0+255),f,b
  6777  012E1E  2B7B               	incf	(stoa@cp+1)& (0+255),f,b
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  6781  012E20  4B76               	infsnz	stoa@i& (0+255),f,b
  6782  012E22  2B77               	incf	(stoa@i+1)& (0+255),f,b
  6783  012E24                     l12219:
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  6787  012E24  517C               	movf	stoa@p& (0+255),w,b
  6788  012E26  5D76               	subwf	stoa@i& (0+255),w,b
  6789  012E28  5177               	movf	(stoa@i+1)& (0+255),w,b
  6790  012E2A  0A80               	xorlw	128
  6791  012E2C  6F6E               	movwf	??_stoa& (0+255),b
  6792  012E2E  517D               	movf	(stoa@p+1)& (0+255),w,b
  6793  012E30  0A80               	xorlw	128
  6794  012E32  596E               	subwfb	??_stoa& (0+255),w,b
  6795  012E34  A0D8               	btfss	status,0,c
  6796  012E36  D7D2               	goto	l12213
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  6800  012E38  B02D               	btfsc	_flags^0,0,c
  6801  012E3A  D00D               	goto	l12227
  6802  012E3C  D016               	goto	u12560
  6803  012E3E                     l12223:
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  6807  012E3E  0E00               	movlw	0
  6808  012E40  6F62               	movwf	(fputc@c+1)& (0+255),b
  6809  012E42  0E20               	movlw	32
  6810  012E44  6F61               	movwf	fputc@c& (0+255),b
  6811  012E46  C06A  F063         	movff	stoa@fp,fputc@fp
  6812  012E4A  C06B  F064         	movff	stoa@fp+1,fputc@fp+1
  6813  012E4E  ECAF  F09C         	call	_fputc	;wreg free
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  6817  012E52  4B7E               	infsnz	stoa@l& (0+255),f,b
  6818  012E54  2B7F               	incf	(stoa@l+1)& (0+255),f,b
  6819  012E56                     l12227:
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  6823  012E56  5178               	movf	stoa@w& (0+255),w,b
  6824  012E58  5D7E               	subwf	stoa@l& (0+255),w,b
  6825  012E5A  517F               	movf	(stoa@l+1)& (0+255),w,b
  6826  012E5C  0A80               	xorlw	128
  6827  012E5E  6F6E               	movwf	??_stoa& (0+255),b
  6828  012E60  5179               	movf	(stoa@w+1)& (0+255),w,b
  6829  012E62  0A80               	xorlw	128
  6830  012E64  596E               	subwfb	??_stoa& (0+255),w,b
  6831  012E66  A0D8               	btfss	status,0,c
  6832  012E68  D7EA               	goto	l12223
  6833  012E6A                     u12560:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  6837                           
  6838                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  6839  012E6A  C07E  F06A         	movff	stoa@l,?_stoa
  6840  012E6E  C07F  F06B         	movff	stoa@l+1,?_stoa+1
  6841                           
  6842                           ; BSR set to: 0
  6843  012E72  0012               	return		;funcret
  6844  012E74                     __end_of_stoa:
  6845                           	callstack 0
  6846                           
  6847 ;; *************** function _efgtoa *****************
  6848 ;; Defined at:
  6849 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  6852 ;;		 -> sprintf@f(11), NULL(0), 
  6853 ;;  f               4   53[BANK0 ] PTR struct _IO_FILE
  6854 ;;  c               1   57[BANK0 ] unsigned char 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  u               4  109[BANK0 ] unsigned char 
  6857 ;;  g               4   99[BANK0 ] unsigned char 
  6858 ;;  l               4   95[BANK0 ] unsigned char 
  6859 ;;  h               4   91[BANK0 ] unsigned char 
  6860 ;;  ou              4   77[BANK0 ] unsigned char 
  6861 ;;  n               2  107[BANK0 ] int 
  6862 ;;  e               2  105[BANK0 ] int 
  6863 ;;  i               2  103[BANK0 ] int 
  6864 ;;  w               2   88[BANK0 ] int 
  6865 ;;  p               2   85[BANK0 ] int 
  6866 ;;  sign            2   83[BANK0 ] int 
  6867 ;;  d               2   81[BANK0 ] int 
  6868 ;;  m               2   75[BANK0 ] int 
  6869 ;;  ne              2   73[BANK0 ] int 
  6870 ;;  pp              2   71[BANK0 ] int 
  6871 ;;  t               2   69[BANK0 ] int 
  6872 ;;  mode            1   90[BANK0 ] unsigned char 
  6873 ;;  nmode           1   87[BANK0 ] unsigned char 
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  2   51[BANK0 ] int 
  6876 ;; Registers used:
  6877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6878 ;; Tracked objects:
  6879 ;;		On entry : 3F/0
  6880 ;;		On exit  : 3F/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6883 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6884 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6885 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6886 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6887 ;;Total ram usage:       62 bytes
  6888 ;; Hardware stack levels used: 1
  6889 ;; Hardware stack levels required when called: 12
  6890 ;; This function calls:
  6891 ;;		___awdiv
  6892 ;;		___awmod
  6893 ;;		___fladd
  6894 ;;		___fldiv
  6895 ;;		___fleq
  6896 ;;		___flge
  6897 ;;		___flmul
  6898 ;;		___flneg
  6899 ;;		___flsub
  6900 ;;		___fltol
  6901 ;;		___fpclassifyf
  6902 ;;		_floorf
  6903 ;;		_isupper
  6904 ;;		_pad
  6905 ;;		_strcpy
  6906 ;;		_tolower
  6907 ;; This function is called by:
  6908 ;;		_vfpfcnvrt
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text11
  6913  010000                     __ptext11:
  6914                           	callstack 0
  6915  010000                     _efgtoa:
  6916                           	callstack 15
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;incstack = 0
  6923  010000  0E00               	movlw	0
  6924  010002  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  6925  010004  0E00               	movlw	0
  6926  010006  6FB3               	movwf	efgtoa@sign& (0+255),b
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  6930  010008  C095  F0C3         	movff	efgtoa@f,efgtoa@g
  6931  01000C  C096  F0C4         	movff	efgtoa@f+1,efgtoa@g+1
  6932  010010  C097  F0C5         	movff	efgtoa@f+2,efgtoa@g+2
  6933  010014  C098  F0C6         	movff	efgtoa@f+3,efgtoa@g+3
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  6937  010018  AFC6               	btfss	(efgtoa@g+3)& (0+255),7,b
  6938  01001A  D016               	goto	l11891
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  6942  01001C  0E00               	movlw	0
  6943  01001E  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  6944  010020  0E01               	movlw	1
  6945  010022  6FB3               	movwf	efgtoa@sign& (0+255),b
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  6949  010024  C0C3  F060         	movff	efgtoa@g,___flneg@f1
  6950  010028  C0C4  F061         	movff	efgtoa@g+1,___flneg@f1+1
  6951  01002C  C0C5  F062         	movff	efgtoa@g+2,___flneg@f1+2
  6952  010030  C0C6  F063         	movff	efgtoa@g+3,___flneg@f1+3
  6953  010034  ECF7  F0A4         	call	___flneg	;wreg free
  6954  010038  C060  F0C3         	movff	?___flneg,efgtoa@g
  6955  01003C  C061  F0C4         	movff	?___flneg+1,efgtoa@g+1
  6956  010040  C062  F0C5         	movff	?___flneg+2,efgtoa@g+2
  6957  010044  C063  F0C6         	movff	?___flneg+3,efgtoa@g+3
  6958  010048                     l11891:
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  6962  010048  0E00               	movlw	0
  6963  01004A  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  6964  01004C  0E00               	movlw	0
  6965  01004E  6FCB               	movwf	efgtoa@n& (0+255),b
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  6969  010050  C0F4  F0B8         	movff	_width,efgtoa@w
  6970  010054  C0F5  F0B9         	movff	_width+1,efgtoa@w+1
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  6974  010058  51B3               	movf	efgtoa@sign& (0+255),w,b
  6975  01005A  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6976  01005C  A4D8               	btfss	status,2,c
  6977  01005E  D002               	goto	u12010
  6978                           
  6979                           ; BSR set to: 0
  6980  010060  A42D               	btfss	_flags^0,2,c
  6981  010062  D013               	goto	l11911
  6982  010064                     u12010:
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  6986  010064  51B3               	movf	efgtoa@sign& (0+255),w,b
  6987  010066  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6988  010068  A4D8               	btfss	status,2,c
  6989  01006A  D004               	goto	l11903
  6990                           
  6991                           ; BSR set to: 0
  6992  01006C  0E00               	movlw	0
  6993  01006E  6FA0               	movwf	(_efgtoa$4172+1)& (0+255),b
  6994  010070  0E2B               	movlw	43
  6995  010072  D003               	goto	L3
  6996  010074                     l11903:
  6997                           
  6998                           ; BSR set to: 0
  6999  010074  0E00               	movlw	0
  7000  010076  6FA0               	movwf	(_efgtoa$4172+1)& (0+255),b
  7001  010078  0E2D               	movlw	45
  7002  01007A                     L3:
  7003  01007A  6F9F               	movwf	_efgtoa$4172& (0+255),b
  7004                           
  7005                           ; BSR set to: 0
  7006  01007C  C09F  F143         	movff	_efgtoa$4172,_dbuf
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  7010  010080  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  7011  010082  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  7015  010084  07B8               	decf	efgtoa@w& (0+255),f,b
  7016  010086  A0D8               	btfss	status,0,c
  7017  010088  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  7018  01008A                     l11911:
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  7022  01008A  C0C3  F060         	movff	efgtoa@g,___fpclassifyf@x
  7023  01008E  C0C4  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7024  010092  C0C5  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7025  010096  C0C6  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7026  01009A  EC2E  F09B         	call	___fpclassifyf	;wreg free
  7027  01009E  0560               	decf	?___fpclassifyf& (0+255),w,b
  7028  0100A0  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  7029  0100A2  A4D8               	btfss	status,2,c
  7030  0100A4  D043               	goto	l11929
  7031                           
  7032                           ; BSR set to: 0
  7033  0100A6  0EBF               	movlw	191
  7034  0100A8  6F9A               	movwf	??_efgtoa& (0+255),b
  7035  0100AA  0EFF               	movlw	255
  7036  0100AC  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  7037  0100AE  5199               	movf	efgtoa@c& (0+255),w,b
  7038  0100B0  6F9C               	movwf	(??_efgtoa+2)& (0+255),b
  7039  0100B2  6B9D               	clrf	(??_efgtoa+3)& (0+255),b
  7040  0100B4  519A               	movf	??_efgtoa& (0+255),w,b
  7041  0100B6  279C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7042  0100B8  519B               	movf	(??_efgtoa+1)& (0+255),w,b
  7043  0100BA  239D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7044  0100BC  519D               	movf	(??_efgtoa+3)& (0+255),w,b
  7045  0100BE  E111               	bnz	l11921
  7046  0100C0  0E1A               	movlw	26
  7047  0100C2  5D9C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7048  0100C4  B0D8               	btfsc	status,0,c
  7049  0100C6  D00D               	goto	l11921
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  7053  0100C8  0E43               	movlw	low _dbuf
  7054  0100CA  25CB               	addwf	efgtoa@n& (0+255),w,b
  7055  0100CC  6F60               	movwf	strcpy@dest& (0+255),b
  7056  0100CE  0E01               	movlw	high _dbuf
  7057  0100D0  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7058  0100D2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  7059  0100D4  0ECC               	movlw	low STR_30
  7060  0100D6  6F62               	movwf	strcpy@src& (0+255),b
  7061  0100D8  0EFF               	movlw	high STR_30
  7062  0100DA  6F63               	movwf	(strcpy@src+1)& (0+255),b
  7063  0100DC  EC94  F09F         	call	_strcpy	;wreg free
  7064                           
  7065                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  7066  0100E0  D00C               	goto	l11923
  7067  0100E2                     l11921:
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  7071  0100E2  0E43               	movlw	low _dbuf
  7072  0100E4  25CB               	addwf	efgtoa@n& (0+255),w,b
  7073  0100E6  6F60               	movwf	strcpy@dest& (0+255),b
  7074  0100E8  0E01               	movlw	high _dbuf
  7075  0100EA  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7076  0100EC  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  7077  0100EE  0ED4               	movlw	low STR_31
  7078  0100F0  6F62               	movwf	strcpy@src& (0+255),b
  7079  0100F2  0EFF               	movlw	high STR_31
  7080  0100F4  6F63               	movwf	(strcpy@src+1)& (0+255),b
  7081  0100F6  EC94  F09F         	call	_strcpy	;wreg free
  7082  0100FA                     l11923:
  7083                           
  7084                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  7085  0100FA  0100               	movlb	0	; () banked
  7086  0100FC  0EFD               	movlw	253
  7087  0100FE  27B8               	addwf	efgtoa@w& (0+255),f,b
  7088  010100  0EFF               	movlw	255
  7089  010102  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7090  010104                     l11925:
  7091                           
  7092                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  7093  010104  C093  F073         	movff	efgtoa@fp,pad@fp
  7094  010108  C094  F074         	movff	efgtoa@fp+1,pad@fp+1
  7095  01010C  0E43               	movlw	low _dbuf
  7096  01010E  0100               	movlb	0	; () banked
  7097  010110  6F75               	movwf	pad@buf& (0+255),b
  7098  010112  0E01               	movlw	high _dbuf
  7099  010114  6F76               	movwf	(pad@buf+1)& (0+255),b
  7100  010116  C0B8  F077         	movff	efgtoa@w,pad@p
  7101  01011A  C0B9  F078         	movff	efgtoa@w+1,pad@p+1
  7102  01011E  ECB2  F09D         	call	_pad	;wreg free
  7103  010122  C073  F093         	movff	?_pad,?_efgtoa
  7104  010126  C074  F094         	movff	?_pad+1,?_efgtoa+1
  7105  01012A  0012               	return	
  7106  01012C                     l11929:
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  7110  01012C  C0C3  F060         	movff	efgtoa@g,___fpclassifyf@x
  7111  010130  C0C4  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7112  010134  C0C5  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7113  010138  C0C6  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7114  01013C  EC2E  F09B         	call	___fpclassifyf	;wreg free
  7115  010140  5160               	movf	?___fpclassifyf& (0+255),w,b
  7116  010142  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  7117  010144  A4D8               	btfss	status,2,c
  7118  010146  D02B               	goto	l11947
  7119                           
  7120                           ; BSR set to: 0
  7121  010148  0EBF               	movlw	191
  7122  01014A  6F9A               	movwf	??_efgtoa& (0+255),b
  7123  01014C  0EFF               	movlw	255
  7124  01014E  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  7125  010150  5199               	movf	efgtoa@c& (0+255),w,b
  7126  010152  6F9C               	movwf	(??_efgtoa+2)& (0+255),b
  7127  010154  6B9D               	clrf	(??_efgtoa+3)& (0+255),b
  7128  010156  519A               	movf	??_efgtoa& (0+255),w,b
  7129  010158  279C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7130  01015A  519B               	movf	(??_efgtoa+1)& (0+255),w,b
  7131  01015C  239D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7132  01015E  519D               	movf	(??_efgtoa+3)& (0+255),w,b
  7133  010160  E111               	bnz	l11939
  7134  010162  0E1A               	movlw	26
  7135  010164  5D9C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7136  010166  B0D8               	btfsc	status,0,c
  7137  010168  D00D               	goto	l11939
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  7141  01016A  0E43               	movlw	low _dbuf
  7142  01016C  25CB               	addwf	efgtoa@n& (0+255),w,b
  7143  01016E  6F60               	movwf	strcpy@dest& (0+255),b
  7144  010170  0E01               	movlw	high _dbuf
  7145  010172  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7146  010174  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  7147  010176  0ED0               	movlw	low STR_34
  7148  010178  6F62               	movwf	strcpy@src& (0+255),b
  7149  01017A  0EFF               	movlw	high STR_34
  7150  01017C  6F63               	movwf	(strcpy@src+1)& (0+255),b
  7151  01017E  EC94  F09F         	call	_strcpy	;wreg free
  7152                           
  7153                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  7154  010182  D7BB               	goto	l11923
  7155  010184                     l11939:
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  7159  010184  0E43               	movlw	low _dbuf
  7160  010186  25CB               	addwf	efgtoa@n& (0+255),w,b
  7161  010188  6F60               	movwf	strcpy@dest& (0+255),b
  7162  01018A  0E01               	movlw	high _dbuf
  7163  01018C  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7164  01018E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  7165  010190  0ED8               	movlw	low STR_35
  7166  010192  6F62               	movwf	strcpy@src& (0+255),b
  7167  010194  0EFF               	movlw	high STR_35
  7168  010196  6F63               	movwf	(strcpy@src+1)& (0+255),b
  7169  010198  EC94  F09F         	call	_strcpy	;wreg free
  7170  01019C  D7AE               	goto	l11923
  7171  01019E                     l11947:
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  7175  01019E  0E00               	movlw	0
  7176  0101A0  6FCD               	movwf	efgtoa@u& (0+255),b
  7177  0101A2  0E00               	movlw	0
  7178  0101A4  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  7179  0101A6  0E80               	movlw	128
  7180  0101A8  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  7181  0101AA  0E3F               	movlw	63
  7182  0101AC  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  7183                           
  7184                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  7185  0101AE  0E00               	movlw	0
  7186  0101B0  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  7187  0101B2  0E00               	movlw	0
  7188  0101B4  6FC9               	movwf	efgtoa@e& (0+255),b
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  7192  0101B6  C0C3  F060         	movff	efgtoa@g,___fleq@ff1
  7193  0101BA  C0C4  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  7194  0101BE  C0C5  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  7195  0101C2  C0C6  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  7196  0101C6  0E00               	movlw	0
  7197  0101C8  6F64               	movwf	___fleq@ff2& (0+255),b
  7198  0101CA  0E00               	movlw	0
  7199  0101CC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  7200  0101CE  0E00               	movlw	0
  7201  0101D0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  7202  0101D2  0E00               	movlw	0
  7203  0101D4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  7204  0101D6  ECFD  F09D         	call	___fleq	;wreg free
  7205  0101DA  A0D8               	btfss	status,0,c
  7206  0101DC  D01D               	goto	l11957
  7207  0101DE  D074               	goto	u12090
  7208  0101E0                     l11953:
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  7212  0101E0  C0CD  F06E         	movff	efgtoa@u,___flmul@b
  7213  0101E4  C0CE  F06F         	movff	efgtoa@u+1,___flmul@b+1
  7214  0101E8  C0CF  F070         	movff	efgtoa@u+2,___flmul@b+2
  7215  0101EC  C0D0  F071         	movff	efgtoa@u+3,___flmul@b+3
  7216  0101F0  0E00               	movlw	0
  7217  0101F2  6F72               	movwf	___flmul@a& (0+255),b
  7218  0101F4  0E00               	movlw	0
  7219  0101F6  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7220  0101F8  0E20               	movlw	32
  7221  0101FA  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7222  0101FC  0E41               	movlw	65
  7223  0101FE  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7224  010200  EC95  F08D         	call	___flmul	;wreg free
  7225  010204  C06E  F0CD         	movff	?___flmul,efgtoa@u
  7226  010208  C06F  F0CE         	movff	?___flmul+1,efgtoa@u+1
  7227  01020C  C070  F0CF         	movff	?___flmul+2,efgtoa@u+2
  7228  010210  C071  F0D0         	movff	?___flmul+3,efgtoa@u+3
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  7232  010214  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  7233  010216  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  7234  010218                     l11957:
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  7238  010218  C0C3  F087         	movff	efgtoa@g,___flge@ff1
  7239  01021C  C0C4  F088         	movff	efgtoa@g+1,___flge@ff1+1
  7240  010220  C0C5  F089         	movff	efgtoa@g+2,___flge@ff1+2
  7241  010224  C0C6  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  7242  010228  0E00               	movlw	0
  7243  01022A  6F72               	movwf	___flmul@a& (0+255),b
  7244  01022C  0E00               	movlw	0
  7245  01022E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7246  010230  0E20               	movlw	32
  7247  010232  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7248  010234  0E41               	movlw	65
  7249  010236  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7250  010238  C0CD  F06E         	movff	efgtoa@u,___flmul@b
  7251  01023C  C0CE  F06F         	movff	efgtoa@u+1,___flmul@b+1
  7252  010240  C0CF  F070         	movff	efgtoa@u+2,___flmul@b+2
  7253  010244  C0D0  F071         	movff	efgtoa@u+3,___flmul@b+3
  7254  010248  EC95  F08D         	call	___flmul	;wreg free
  7255  01024C  C06E  F08B         	movff	?___flmul,___flge@ff2
  7256  010250  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  7257  010254  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  7258  010258  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  7259  01025C  ECF8  F099         	call	___flge	;wreg free
  7260  010260  A0D8               	btfss	status,0,c
  7261  010262  D01E               	goto	l11963
  7262  010264  D7BD               	goto	l11953
  7263  010266                     l11959:
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  7267  010266  C0CD  F060         	movff	efgtoa@u,___fldiv@b
  7268  01026A  C0CE  F061         	movff	efgtoa@u+1,___fldiv@b+1
  7269  01026E  C0CF  F062         	movff	efgtoa@u+2,___fldiv@b+2
  7270  010272  C0D0  F063         	movff	efgtoa@u+3,___fldiv@b+3
  7271  010276  0E00               	movlw	0
  7272  010278  6F64               	movwf	___fldiv@a& (0+255),b
  7273  01027A  0E00               	movlw	0
  7274  01027C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7275  01027E  0E20               	movlw	32
  7276  010280  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7277  010282  0E41               	movlw	65
  7278  010284  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7279  010286  ECC3  F090         	call	___fldiv	;wreg free
  7280  01028A  C060  F0CD         	movff	?___fldiv,efgtoa@u
  7281  01028E  C061  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  7282  010292  C062  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  7283  010296  C063  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  7287  01029A  07C9               	decf	efgtoa@e& (0+255),f,b
  7288  01029C  A0D8               	btfss	status,0,c
  7289  01029E  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  7290  0102A0                     l11963:
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  7294  0102A0  C0C3  F087         	movff	efgtoa@g,___flge@ff1
  7295  0102A4  C0C4  F088         	movff	efgtoa@g+1,___flge@ff1+1
  7296  0102A8  C0C5  F089         	movff	efgtoa@g+2,___flge@ff1+2
  7297  0102AC  C0C6  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  7298  0102B0  C0CD  F08B         	movff	efgtoa@u,___flge@ff2
  7299  0102B4  C0CE  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  7300  0102B8  C0CF  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  7301  0102BC  C0D0  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  7302  0102C0  ECF8  F099         	call	___flge	;wreg free
  7303  0102C4  A0D8               	btfss	status,0,c
  7304  0102C6  D7CF               	goto	l11959
  7305  0102C8                     u12090:
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  7309  0102C8  C099  F066         	movff	efgtoa@c,tolower@c
  7310  0102CC  6B67               	clrf	(tolower@c+1)& (0+255),b
  7311  0102CE  EC0C  F0A4         	call	_tolower	;wreg free
  7312  0102D2  5166               	movf	?_tolower& (0+255),w,b
  7313  0102D4  6FBA               	movwf	efgtoa@mode& (0+255),b
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  7317  0102D6  C0BA  F0B7         	movff	efgtoa@mode,efgtoa@nmode
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  7321  0102DA  0E67               	movlw	103
  7322  0102DC  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7323  0102DE  A4D8               	btfss	status,2,c
  7324  0102E0  D019               	goto	l11979
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  7328  0102E2  51F6               	movf	_prec& (0+255),w,b
  7329  0102E4  11F7               	iorwf	(_prec+1)& (0+255),w,b
  7330  0102E6  A4D8               	btfss	status,2,c
  7331  0102E8  D004               	goto	l11975
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  7335  0102EA  0E00               	movlw	0
  7336  0102EC  6FF7               	movwf	(_prec+1)& (0+255),b
  7337  0102EE  0E01               	movlw	1
  7338  0102F0  6FF6               	movwf	_prec& (0+255),b
  7339  0102F2                     l11975:
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  7343  0102F2  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7344  0102F4  D005               	goto	u12120
  7345  0102F6  51F7               	movf	(_prec+1)& (0+255),w,b
  7346  0102F8  E108               	bnz	l2574
  7347  0102FA  05F6               	decf	_prec& (0+255),w,b
  7348  0102FC  B0D8               	btfsc	status,0,c
  7349  0102FE  D005               	goto	l2574
  7350  010300                     u12120:
  7351                           
  7352                           ; BSR set to: 0
  7353  010300  0E00               	movlw	0
  7354  010302  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  7355  010304  0E06               	movlw	6
  7356  010306  6FB5               	movwf	efgtoa@p& (0+255),b
  7357  010308  D008               	goto	l11985
  7358  01030A                     l2574:
  7359                           
  7360                           ; BSR set to: 0
  7361  01030A  C0F6  F0B5         	movff	_prec,efgtoa@p
  7362  01030E  C0F7  F0B6         	movff	_prec+1,efgtoa@p+1
  7363  010312  D003               	goto	l11985
  7364  010314                     l11979:
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  7368  010314  AFF7               	btfss	(_prec+1)& (0+255),7,b
  7369  010316  D7F9               	goto	l2574
  7370  010318  D7F3               	goto	u12120
  7371  01031A                     l11985:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  7375  01031A  0E67               	movlw	103
  7376  01031C  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7377  01031E  A4D8               	btfss	status,2,c
  7378  010320  D022               	goto	l11995
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  7382  010322  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  7383  010324  D006               	goto	u12150
  7384  010326  0EFC               	movlw	252
  7385  010328  5DC9               	subwf	efgtoa@e& (0+255),w,b
  7386  01032A  0EFF               	movlw	255
  7387  01032C  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  7388  01032E  A0D8               	btfss	status,0,c
  7389  010330  D018               	goto	l11993
  7390  010332                     u12150:
  7391                           
  7392                           ; BSR set to: 0
  7393  010332  0EFF               	movlw	255
  7394  010334  6F9A               	movwf	??_efgtoa& (0+255),b
  7395  010336  0EFF               	movlw	255
  7396  010338  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  7397  01033A  C0B5  F09C         	movff	efgtoa@p,??_efgtoa+2
  7398  01033E  C0B6  F09D         	movff	efgtoa@p+1,??_efgtoa+3
  7399  010342  519A               	movf	??_efgtoa& (0+255),w,b
  7400  010344  279C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7401  010346  519B               	movf	(??_efgtoa+1)& (0+255),w,b
  7402  010348  239D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7403  01034A  51C9               	movf	efgtoa@e& (0+255),w,b
  7404  01034C  5D9C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7405  01034E  519D               	movf	(??_efgtoa+3)& (0+255),w,b
  7406  010350  0A80               	xorlw	128
  7407  010352  6F9E               	movwf	(??_efgtoa+4)& (0+255),b
  7408  010354  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  7409  010356  0A80               	xorlw	128
  7410  010358  599E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  7411  01035A  A0D8               	btfss	status,0,c
  7412  01035C  D002               	goto	l11993
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  7416  01035E  0E66               	movlw	102
  7417  010360  D001               	goto	L4
  7418  010362                     l11993:
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  7422  010362  0E65               	movlw	101
  7423  010364                     L4:
  7424  010364  6FB7               	movwf	efgtoa@nmode& (0+255),b
  7425  010366                     l11995:
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  7429  010366  C0B5  F0AB         	movff	efgtoa@p,efgtoa@m
  7430  01036A  C0B6  F0AC         	movff	efgtoa@p+1,efgtoa@m+1
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  7434  01036E  0E67               	movlw	103
  7435  010370  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7436  010372  A4D8               	btfss	status,2,c
  7437  010374  D005               	goto	u12190
  7438                           
  7439                           ; BSR set to: 0
  7440  010376  0E66               	movlw	102
  7441  010378  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  7442  01037A  B4D8               	btfsc	status,2,c
  7443                           
  7444                           ; BSR set to: 0
  7445  01037C  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  7446  01037E  D002               	goto	l12005
  7447  010380                     u12190:
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  7451  010380  4BAB               	infsnz	efgtoa@m& (0+255),f,b
  7452  010382  2BAC               	incf	(efgtoa@m+1)& (0+255),f,b
  7453  010384                     l12005:
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  7457  010384  0E66               	movlw	102
  7458  010386  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  7459  010388  A4D8               	btfss	status,2,c
  7460  01038A  D016               	goto	l12015
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  7464  01038C  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  7465  01038E  D00C               	goto	l12011
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  7469  010390  0E00               	movlw	0
  7470  010392  6FCD               	movwf	efgtoa@u& (0+255),b
  7471  010394  0E00               	movlw	0
  7472  010396  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  7473  010398  0E80               	movlw	128
  7474  01039A  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  7475  01039C  0E3F               	movlw	63
  7476  01039E  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  7477                           
  7478                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  7479  0103A0  0E00               	movlw	0
  7480  0103A2  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  7481  0103A4  0E00               	movlw	0
  7482  0103A6  6FC9               	movwf	efgtoa@e& (0+255),b
  7483  0103A8                     l12011:
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  7487  0103A8  0E67               	movlw	103
  7488  0103AA  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7489  0103AC  B4D8               	btfsc	status,2,c
  7490  0103AE  D004               	goto	l12015
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  7494  0103B0  51C9               	movf	efgtoa@e& (0+255),w,b
  7495  0103B2  27AB               	addwf	efgtoa@m& (0+255),f,b
  7496  0103B4  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  7497  0103B6  23AC               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7498  0103B8                     l12015:
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  7502  0103B8  0E00               	movlw	0
  7503  0103BA  6FC8               	movwf	(efgtoa@i+1)& (0+255),b
  7504  0103BC  0E00               	movlw	0
  7505  0103BE  6FC7               	movwf	efgtoa@i& (0+255),b
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  7509  0103C0  C0C3  F0BB         	movff	efgtoa@g,efgtoa@h
  7510  0103C4  C0C4  F0BC         	movff	efgtoa@g+1,efgtoa@h+1
  7511  0103C8  C0C5  F0BD         	movff	efgtoa@g+2,efgtoa@h+2
  7512  0103CC  C0C6  F0BE         	movff	efgtoa@g+3,efgtoa@h+3
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  7516  0103D0  C0CD  F0AD         	movff	efgtoa@u,efgtoa@ou
  7517  0103D4  C0CE  F0AE         	movff	efgtoa@u+1,efgtoa@ou+1
  7518  0103D8  C0CF  F0AF         	movff	efgtoa@u+2,efgtoa@ou+2
  7519  0103DC  C0D0  F0B0         	movff	efgtoa@u+3,efgtoa@ou+3
  7520                           
  7521                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  7522  0103E0  D07A               	goto	l12029
  7523  0103E2                     l12021:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  7527  0103E2  C0BB  F060         	movff	efgtoa@h,___fldiv@b
  7528  0103E6  C0BC  F061         	movff	efgtoa@h+1,___fldiv@b+1
  7529  0103EA  C0BD  F062         	movff	efgtoa@h+2,___fldiv@b+2
  7530  0103EE  C0BE  F063         	movff	efgtoa@h+3,___fldiv@b+3
  7531  0103F2  C0CD  F064         	movff	efgtoa@u,___fldiv@a
  7532  0103F6  C0CE  F065         	movff	efgtoa@u+1,___fldiv@a+1
  7533  0103FA  C0CF  F066         	movff	efgtoa@u+2,___fldiv@a+2
  7534  0103FE  C0D0  F067         	movff	efgtoa@u+3,___fldiv@a+3
  7535  010402  ECC3  F090         	call	___fldiv	;wreg free
  7536  010406  C060  F079         	movff	?___fldiv,floorf@x
  7537  01040A  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  7538  01040E  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  7539  010412  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  7540  010416  ECBB  F093         	call	_floorf	;wreg free
  7541  01041A  C079  F0BF         	movff	?_floorf,efgtoa@l
  7542  01041E  C07A  F0C0         	movff	?_floorf+1,efgtoa@l+1
  7543  010422  C07B  F0C1         	movff	?_floorf+2,efgtoa@l+2
  7544  010426  C07C  F0C2         	movff	?_floorf+3,efgtoa@l+3
  7545                           
  7546                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  7547  01042A  C0BF  F060         	movff	efgtoa@l,___fltol@f1
  7548  01042E  C0C0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  7549  010432  C0C1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  7550  010436  C0C2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  7551  01043A  ECF5  F09B         	call	___fltol	;wreg free
  7552  01043E  C060  F0B1         	movff	?___fltol,efgtoa@d
  7553  010442  C061  F0B2         	movff	?___fltol+1,efgtoa@d+1
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  7557  010446  C0BB  F087         	movff	efgtoa@h,___flsub@b
  7558  01044A  C0BC  F088         	movff	efgtoa@h+1,___flsub@b+1
  7559  01044E  C0BD  F089         	movff	efgtoa@h+2,___flsub@b+2
  7560  010452  C0BE  F08A         	movff	efgtoa@h+3,___flsub@b+3
  7561  010456  C0CD  F072         	movff	efgtoa@u,___flmul@a
  7562  01045A  C0CE  F073         	movff	efgtoa@u+1,___flmul@a+1
  7563  01045E  C0CF  F074         	movff	efgtoa@u+2,___flmul@a+2
  7564  010462  C0D0  F075         	movff	efgtoa@u+3,___flmul@a+3
  7565  010466  C0BF  F06E         	movff	efgtoa@l,___flmul@b
  7566  01046A  C0C0  F06F         	movff	efgtoa@l+1,___flmul@b+1
  7567  01046E  C0C1  F070         	movff	efgtoa@l+2,___flmul@b+2
  7568  010472  C0C2  F071         	movff	efgtoa@l+3,___flmul@b+3
  7569  010476  EC95  F08D         	call	___flmul	;wreg free
  7570  01047A  C06E  F08B         	movff	?___flmul,___flsub@a
  7571  01047E  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  7572  010482  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  7573  010486  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  7574  01048A  EC4E  F0A2         	call	___flsub	;wreg free
  7575  01048E  C087  F0BB         	movff	?___flsub,efgtoa@h
  7576  010492  C088  F0BC         	movff	?___flsub+1,efgtoa@h+1
  7577  010496  C089  F0BD         	movff	?___flsub+2,efgtoa@h+2
  7578  01049A  C08A  F0BE         	movff	?___flsub+3,efgtoa@h+3
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  7582  01049E  C0CD  F060         	movff	efgtoa@u,___fldiv@b
  7583  0104A2  C0CE  F061         	movff	efgtoa@u+1,___fldiv@b+1
  7584  0104A6  C0CF  F062         	movff	efgtoa@u+2,___fldiv@b+2
  7585  0104AA  C0D0  F063         	movff	efgtoa@u+3,___fldiv@b+3
  7586  0104AE  0E00               	movlw	0
  7587  0104B0  6F64               	movwf	___fldiv@a& (0+255),b
  7588  0104B2  0E00               	movlw	0
  7589  0104B4  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7590  0104B6  0E20               	movlw	32
  7591  0104B8  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7592  0104BA  0E41               	movlw	65
  7593  0104BC  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7594  0104BE  ECC3  F090         	call	___fldiv	;wreg free
  7595  0104C2  C060  F0CD         	movff	?___fldiv,efgtoa@u
  7596  0104C6  C061  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  7597  0104CA  C062  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  7598  0104CE  C063  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  7602  0104D2  4BC7               	infsnz	efgtoa@i& (0+255),f,b
  7603  0104D4  2BC8               	incf	(efgtoa@i+1)& (0+255),f,b
  7604  0104D6                     l12029:
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  7608  0104D6  51AB               	movf	efgtoa@m& (0+255),w,b
  7609  0104D8  5DC7               	subwf	efgtoa@i& (0+255),w,b
  7610  0104DA  51C8               	movf	(efgtoa@i+1)& (0+255),w,b
  7611  0104DC  0A80               	xorlw	128
  7612  0104DE  6F9A               	movwf	??_efgtoa& (0+255),b
  7613  0104E0  51AC               	movf	(efgtoa@m+1)& (0+255),w,b
  7614  0104E2  0A80               	xorlw	128
  7615  0104E4  599A               	subwfb	??_efgtoa& (0+255),w,b
  7616  0104E6  A0D8               	btfss	status,0,c
  7617  0104E8  D77C               	goto	l12021
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  7621  0104EA  C0CD  F06E         	movff	efgtoa@u,___flmul@b
  7622  0104EE  C0CE  F06F         	movff	efgtoa@u+1,___flmul@b+1
  7623  0104F2  C0CF  F070         	movff	efgtoa@u+2,___flmul@b+2
  7624  0104F6  C0D0  F071         	movff	efgtoa@u+3,___flmul@b+3
  7625  0104FA  0E00               	movlw	0
  7626  0104FC  6F72               	movwf	___flmul@a& (0+255),b
  7627  0104FE  0E00               	movlw	0
  7628  010500  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7629  010502  0EA0               	movlw	160
  7630  010504  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7631  010506  0E40               	movlw	64
  7632  010508  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7633  01050A  EC95  F08D         	call	___flmul	;wreg free
  7634  01050E  C06E  F0BF         	movff	?___flmul,efgtoa@l
  7635  010512  C06F  F0C0         	movff	?___flmul+1,efgtoa@l+1
  7636  010516  C070  F0C1         	movff	?___flmul+2,efgtoa@l+2
  7637  01051A  C071  F0C2         	movff	?___flmul+3,efgtoa@l+3
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  7641  01051E  C0BB  F087         	movff	efgtoa@h,___flge@ff1
  7642  010522  C0BC  F088         	movff	efgtoa@h+1,___flge@ff1+1
  7643  010526  C0BD  F089         	movff	efgtoa@h+2,___flge@ff1+2
  7644  01052A  C0BE  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  7645  01052E  C0BF  F08B         	movff	efgtoa@l,___flge@ff2
  7646  010532  C0C0  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  7647  010536  C0C1  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  7648  01053A  C0C2  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  7649  01053E  ECF8  F099         	call	___flge	;wreg free
  7650  010542  A0D8               	btfss	status,0,c
  7651  010544  D015               	goto	u12260
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  7655                           
  7656                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  7660  010546  C0BB  F060         	movff	efgtoa@h,___fleq@ff1
  7661  01054A  C0BC  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  7662  01054E  C0BD  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  7663  010552  C0BE  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  7664  010556  C0BF  F064         	movff	efgtoa@l,___fleq@ff2
  7665  01055A  C0C0  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  7666  01055E  C0C1  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  7667  010562  C0C2  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  7668  010566  ECFD  F09D         	call	___fleq	;wreg free
  7669  01056A  B0D8               	btfsc	status,0,c
  7670                           
  7671                           ; BSR set to: 0
  7672  01056C  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  7673  01056E  D008               	goto	l12043
  7674  010570                     u12260:
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  7678  010570  0E00               	movlw	0
  7679  010572  6FBF               	movwf	efgtoa@l& (0+255),b
  7680  010574  0E00               	movlw	0
  7681  010576  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  7682  010578  0E00               	movlw	0
  7683  01057A  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  7684  01057C  0E00               	movlw	0
  7685  01057E  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  7686  010580                     l12043:
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  7690  010580  C0C3  F060         	movff	efgtoa@g,___fladd@b
  7691  010584  C0C4  F061         	movff	efgtoa@g+1,___fladd@b+1
  7692  010588  C0C5  F062         	movff	efgtoa@g+2,___fladd@b+2
  7693  01058C  C0C6  F063         	movff	efgtoa@g+3,___fladd@b+3
  7694  010590  C0BF  F064         	movff	efgtoa@l,___fladd@a
  7695  010594  C0C0  F065         	movff	efgtoa@l+1,___fladd@a+1
  7696  010598  C0C1  F066         	movff	efgtoa@l+2,___fladd@a+2
  7697  01059C  C0C2  F067         	movff	efgtoa@l+3,___fladd@a+3
  7698  0105A0  EC3D  F08F         	call	___fladd	;wreg free
  7699  0105A4  C060  F0BB         	movff	?___fladd,efgtoa@h
  7700  0105A8  C061  F0BC         	movff	?___fladd+1,efgtoa@h+1
  7701  0105AC  C062  F0BD         	movff	?___fladd+2,efgtoa@h+2
  7702  0105B0  C063  F0BE         	movff	?___fladd+3,efgtoa@h+3
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  7706  0105B4  C0BB  F087         	movff	efgtoa@h,___flge@ff1
  7707  0105B8  C0BC  F088         	movff	efgtoa@h+1,___flge@ff1+1
  7708  0105BC  C0BD  F089         	movff	efgtoa@h+2,___flge@ff1+2
  7709  0105C0  C0BE  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  7710  0105C4  0E00               	movlw	0
  7711  0105C6  6F72               	movwf	___flmul@a& (0+255),b
  7712  0105C8  0E00               	movlw	0
  7713  0105CA  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7714  0105CC  0E20               	movlw	32
  7715  0105CE  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7716  0105D0  0E41               	movlw	65
  7717  0105D2  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7718  0105D4  C0AD  F06E         	movff	efgtoa@ou,___flmul@b
  7719  0105D8  C0AE  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  7720  0105DC  C0AF  F070         	movff	efgtoa@ou+2,___flmul@b+2
  7721  0105E0  C0B0  F071         	movff	efgtoa@ou+3,___flmul@b+3
  7722  0105E4  EC95  F08D         	call	___flmul	;wreg free
  7723  0105E8  C06E  F08B         	movff	?___flmul,___flge@ff2
  7724  0105EC  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  7725  0105F0  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  7726  0105F4  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  7727  0105F8  ECF8  F099         	call	___flge	;wreg free
  7728  0105FC  A0D8               	btfss	status,0,c
  7729  0105FE  D022               	goto	l12055
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  7733  010600  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  7734  010602  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  7738  010604  C0AD  F06E         	movff	efgtoa@ou,___flmul@b
  7739  010608  C0AE  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  7740  01060C  C0AF  F070         	movff	efgtoa@ou+2,___flmul@b+2
  7741  010610  C0B0  F071         	movff	efgtoa@ou+3,___flmul@b+3
  7742  010614  0E00               	movlw	0
  7743  010616  6F72               	movwf	___flmul@a& (0+255),b
  7744  010618  0E00               	movlw	0
  7745  01061A  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7746  01061C  0E20               	movlw	32
  7747  01061E  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7748  010620  0E41               	movlw	65
  7749  010622  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7750  010624  EC95  F08D         	call	___flmul	;wreg free
  7751  010628  C06E  F0AD         	movff	?___flmul,efgtoa@ou
  7752  01062C  C06F  F0AE         	movff	?___flmul+1,efgtoa@ou+1
  7753  010630  C070  F0AF         	movff	?___flmul+2,efgtoa@ou+2
  7754  010634  C071  F0B0         	movff	?___flmul+3,efgtoa@ou+3
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  7758  010638  0E66               	movlw	102
  7759  01063A  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  7760  01063C  A4D8               	btfss	status,2,c
  7761  01063E  D002               	goto	l12055
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  7765  010640  4BAB               	infsnz	efgtoa@m& (0+255),f,b
  7766  010642  2BAC               	incf	(efgtoa@m+1)& (0+255),f,b
  7767  010644                     l12055:
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  7771  010644  C0AD  F0CD         	movff	efgtoa@ou,efgtoa@u
  7772  010648  C0AE  F0CE         	movff	efgtoa@ou+1,efgtoa@u+1
  7773  01064C  C0AF  F0CF         	movff	efgtoa@ou+2,efgtoa@u+2
  7774  010650  C0B0  F0D0         	movff	efgtoa@ou+3,efgtoa@u+3
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  7778  010654  0E65               	movlw	101
  7779  010656  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  7780  010658  B4D8               	btfsc	status,2,c
  7781  01065A  D005               	goto	l12061
  7782                           
  7783                           ; BSR set to: 0
  7784  01065C  C0C9  F0A9         	movff	efgtoa@e,efgtoa@ne
  7785  010660  C0CA  F0AA         	movff	efgtoa@e+1,efgtoa@ne+1
  7786  010664  D004               	goto	l2602
  7787  010666                     l12061:
  7788                           
  7789                           ; BSR set to: 0
  7790  010666  0E00               	movlw	0
  7791  010668  6FAA               	movwf	(efgtoa@ne+1)& (0+255),b
  7792  01066A  0E00               	movlw	0
  7793  01066C  6FA9               	movwf	efgtoa@ne& (0+255),b
  7794  01066E                     l2602:
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  7798  01066E  0E00               	movlw	0
  7799  010670  6FA8               	movwf	(efgtoa@pp+1)& (0+255),b
  7800  010672  0E00               	movlw	0
  7801  010674  6FA7               	movwf	efgtoa@pp& (0+255),b
  7802                           
  7803                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  7804  010676  0E00               	movlw	0
  7805  010678  6FA6               	movwf	(efgtoa@t+1)& (0+255),b
  7806  01067A  0E00               	movlw	0
  7807  01067C  6FA5               	movwf	efgtoa@t& (0+255),b
  7808                           
  7809                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  7810  01067E  0E00               	movlw	0
  7811  010680  6FC8               	movwf	(efgtoa@i+1)& (0+255),b
  7812  010682  0E00               	movlw	0
  7813  010684  6FC7               	movwf	efgtoa@i& (0+255),b
  7814                           
  7815                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  7816  010686  D0C4               	goto	l12111
  7817  010688                     l12063:
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  7821  010688  C0BB  F060         	movff	efgtoa@h,___fldiv@b
  7822  01068C  C0BC  F061         	movff	efgtoa@h+1,___fldiv@b+1
  7823  010690  C0BD  F062         	movff	efgtoa@h+2,___fldiv@b+2
  7824  010694  C0BE  F063         	movff	efgtoa@h+3,___fldiv@b+3
  7825  010698  C0CD  F064         	movff	efgtoa@u,___fldiv@a
  7826  01069C  C0CE  F065         	movff	efgtoa@u+1,___fldiv@a+1
  7827  0106A0  C0CF  F066         	movff	efgtoa@u+2,___fldiv@a+2
  7828  0106A4  C0D0  F067         	movff	efgtoa@u+3,___fldiv@a+3
  7829  0106A8  ECC3  F090         	call	___fldiv	;wreg free
  7830  0106AC  C060  F079         	movff	?___fldiv,floorf@x
  7831  0106B0  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  7832  0106B4  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  7833  0106B8  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  7834  0106BC  ECBB  F093         	call	_floorf	;wreg free
  7835  0106C0  C079  F0BF         	movff	?_floorf,efgtoa@l
  7836  0106C4  C07A  F0C0         	movff	?_floorf+1,efgtoa@l+1
  7837  0106C8  C07B  F0C1         	movff	?_floorf+2,efgtoa@l+2
  7838  0106CC  C07C  F0C2         	movff	?_floorf+3,efgtoa@l+3
  7839                           
  7840                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  7841  0106D0  C0BF  F060         	movff	efgtoa@l,___fltol@f1
  7842  0106D4  C0C0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  7843  0106D8  C0C1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  7844  0106DC  C0C2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  7845  0106E0  ECF5  F09B         	call	___fltol	;wreg free
  7846  0106E4  C060  F0B1         	movff	?___fltol,efgtoa@d
  7847  0106E8  C061  F0B2         	movff	?___fltol+1,efgtoa@d+1
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7851  0106EC  B82D               	btfsc	_flags^0,4,c
  7852  0106EE  D00C               	goto	l12075
  7853                           
  7854                           ; BSR set to: 0
  7855  0106F0  51B1               	movf	efgtoa@d& (0+255),w,b
  7856  0106F2  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7857  0106F4  A4D8               	btfss	status,2,c
  7858  0106F6  D008               	goto	l12075
  7859                           
  7860                           ; BSR set to: 0
  7861  0106F8  0E67               	movlw	103
  7862  0106FA  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7863  0106FC  B4D8               	btfsc	status,2,c
  7864                           
  7865                           ; BSR set to: 0
  7866  0106FE  AFAA               	btfss	(efgtoa@ne+1)& (0+255),7,b
  7867  010700  D003               	goto	l12075
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  7871  010702  4BA5               	infsnz	efgtoa@t& (0+255),f,b
  7872  010704  2BA6               	incf	(efgtoa@t+1)& (0+255),f,b
  7873                           
  7874                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  7875  010706  D039               	goto	l12103
  7876  010708                     l12075:
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  7880  010708  51A7               	movf	efgtoa@pp& (0+255),w,b
  7881  01070A  11A8               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7882  01070C  B4D8               	btfsc	status,2,c
  7883                           
  7884                           ; BSR set to: 0
  7885  01070E  AFAA               	btfss	(efgtoa@ne+1)& (0+255),7,b
  7886  010710  D022               	goto	l12095
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  7890  010712  0E43               	movlw	low _dbuf
  7891  010714  25CB               	addwf	efgtoa@n& (0+255),w,b
  7892  010716  6ED9               	movwf	fsr2l,c
  7893  010718  0E01               	movlw	high _dbuf
  7894  01071A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7895  01071C  6EDA               	movwf	fsr2h,c
  7896  01071E  0E2E               	movlw	46
  7897  010720  6EDF               	movwf	indf2,c
  7898                           
  7899                           ; BSR set to: 0
  7900  010722  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  7901  010724  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  7905  010726  07B8               	decf	efgtoa@w& (0+255),f,b
  7906  010728  A0D8               	btfss	status,0,c
  7907  01072A  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  7911  01072C  0E00               	movlw	0
  7912  01072E  6FA8               	movwf	(efgtoa@pp+1)& (0+255),b
  7913  010730  0E01               	movlw	1
  7914  010732  6FA7               	movwf	efgtoa@pp& (0+255),b
  7915  010734  D010               	goto	l12095
  7916  010736                     l12087:
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  7920  010736  0E43               	movlw	low _dbuf
  7921  010738  25CB               	addwf	efgtoa@n& (0+255),w,b
  7922  01073A  6ED9               	movwf	fsr2l,c
  7923  01073C  0E01               	movlw	high _dbuf
  7924  01073E  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7925  010740  6EDA               	movwf	fsr2h,c
  7926  010742  0E30               	movlw	48
  7927  010744  6EDF               	movwf	indf2,c
  7928                           
  7929                           ; BSR set to: 0
  7930  010746  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  7931  010748  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  7935  01074A  07B8               	decf	efgtoa@w& (0+255),f,b
  7936  01074C  A0D8               	btfss	status,0,c
  7937  01074E  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  7941  010750  07A5               	decf	efgtoa@t& (0+255),f,b
  7942  010752  A0D8               	btfss	status,0,c
  7943  010754  07A6               	decf	(efgtoa@t+1)& (0+255),f,b
  7944  010756                     l12095:
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  7948  010756  51A5               	movf	efgtoa@t& (0+255),w,b
  7949  010758  11A6               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7950  01075A  A4D8               	btfss	status,2,c
  7951  01075C  D7EC               	goto	l12087
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  7955  01075E  0E43               	movlw	low _dbuf
  7956  010760  25CB               	addwf	efgtoa@n& (0+255),w,b
  7957  010762  6ED9               	movwf	fsr2l,c
  7958  010764  0E01               	movlw	high _dbuf
  7959  010766  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7960  010768  6EDA               	movwf	fsr2h,c
  7961  01076A  51B1               	movf	efgtoa@d& (0+255),w,b
  7962  01076C  0F30               	addlw	48
  7963  01076E  6EDF               	movwf	indf2,c
  7964                           
  7965                           ; BSR set to: 0
  7966  010770  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  7967  010772  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  7971  010774  07B8               	decf	efgtoa@w& (0+255),f,b
  7972  010776  A0D8               	btfss	status,0,c
  7973  010778  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  7974  01077A                     l12103:
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  7978  01077A  C0BB  F087         	movff	efgtoa@h,___flsub@b
  7979  01077E  C0BC  F088         	movff	efgtoa@h+1,___flsub@b+1
  7980  010782  C0BD  F089         	movff	efgtoa@h+2,___flsub@b+2
  7981  010786  C0BE  F08A         	movff	efgtoa@h+3,___flsub@b+3
  7982  01078A  C0CD  F072         	movff	efgtoa@u,___flmul@a
  7983  01078E  C0CE  F073         	movff	efgtoa@u+1,___flmul@a+1
  7984  010792  C0CF  F074         	movff	efgtoa@u+2,___flmul@a+2
  7985  010796  C0D0  F075         	movff	efgtoa@u+3,___flmul@a+3
  7986  01079A  C0BF  F06E         	movff	efgtoa@l,___flmul@b
  7987  01079E  C0C0  F06F         	movff	efgtoa@l+1,___flmul@b+1
  7988  0107A2  C0C1  F070         	movff	efgtoa@l+2,___flmul@b+2
  7989  0107A6  C0C2  F071         	movff	efgtoa@l+3,___flmul@b+3
  7990  0107AA  EC95  F08D         	call	___flmul	;wreg free
  7991  0107AE  C06E  F08B         	movff	?___flmul,___flsub@a
  7992  0107B2  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  7993  0107B6  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  7994  0107BA  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  7995  0107BE  EC4E  F0A2         	call	___flsub	;wreg free
  7996  0107C2  C087  F0BB         	movff	?___flsub,efgtoa@h
  7997  0107C6  C088  F0BC         	movff	?___flsub+1,efgtoa@h+1
  7998  0107CA  C089  F0BD         	movff	?___flsub+2,efgtoa@h+2
  7999  0107CE  C08A  F0BE         	movff	?___flsub+3,efgtoa@h+3
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  8003  0107D2  C0CD  F060         	movff	efgtoa@u,___fldiv@b
  8004  0107D6  C0CE  F061         	movff	efgtoa@u+1,___fldiv@b+1
  8005  0107DA  C0CF  F062         	movff	efgtoa@u+2,___fldiv@b+2
  8006  0107DE  C0D0  F063         	movff	efgtoa@u+3,___fldiv@b+3
  8007  0107E2  0E00               	movlw	0
  8008  0107E4  6F64               	movwf	___fldiv@a& (0+255),b
  8009  0107E6  0E00               	movlw	0
  8010  0107E8  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  8011  0107EA  0E20               	movlw	32
  8012  0107EC  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  8013  0107EE  0E41               	movlw	65
  8014  0107F0  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  8015  0107F2  ECC3  F090         	call	___fldiv	;wreg free
  8016  0107F6  C060  F0CD         	movff	?___fldiv,efgtoa@u
  8017  0107FA  C061  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  8018  0107FE  C062  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  8019  010802  C063  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  8023  010806  07A9               	decf	efgtoa@ne& (0+255),f,b
  8024  010808  A0D8               	btfss	status,0,c
  8025  01080A  07AA               	decf	(efgtoa@ne+1)& (0+255),f,b
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  8029  01080C  4BC7               	infsnz	efgtoa@i& (0+255),f,b
  8030  01080E  2BC8               	incf	(efgtoa@i+1)& (0+255),f,b
  8031  010810                     l12111:
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  8035  010810  51AB               	movf	efgtoa@m& (0+255),w,b
  8036  010812  5DC7               	subwf	efgtoa@i& (0+255),w,b
  8037  010814  51C8               	movf	(efgtoa@i+1)& (0+255),w,b
  8038  010816  0A80               	xorlw	128
  8039  010818  6F9A               	movwf	??_efgtoa& (0+255),b
  8040  01081A  51AC               	movf	(efgtoa@m+1)& (0+255),w,b
  8041  01081C  0A80               	xorlw	128
  8042  01081E  599A               	subwfb	??_efgtoa& (0+255),w,b
  8043  010820  B0D8               	btfsc	status,0,c
  8044  010822  D008               	goto	u12380
  8045                           
  8046                           ; BSR set to: 0
  8047  010824  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8048  010826  D730               	goto	l12063
  8049  010828  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
  8050  01082A  E104               	bnz	u12380
  8051  01082C  0E4B               	movlw	75
  8052  01082E  5DCB               	subwf	efgtoa@n& (0+255),w,b
  8053  010830  A0D8               	btfss	status,0,c
  8054  010832  D72A               	goto	l12063
  8055  010834                     u12380:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  8059  010834  51A7               	movf	efgtoa@pp& (0+255),w,b
  8060  010836  11A8               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8061  010838  B4D8               	btfsc	status,2,c
  8062                           
  8063                           ; BSR set to: 0
  8064  01083A  A82D               	btfss	_flags^0,4,c
  8065  01083C  D00A               	goto	l12123
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  8069  01083E  0E43               	movlw	low _dbuf
  8070  010840  25CB               	addwf	efgtoa@n& (0+255),w,b
  8071  010842  6ED9               	movwf	fsr2l,c
  8072  010844  0E01               	movlw	high _dbuf
  8073  010846  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8074  010848  6EDA               	movwf	fsr2h,c
  8075  01084A  0E2E               	movlw	46
  8076  01084C  6EDF               	movwf	indf2,c
  8077                           
  8078                           ; BSR set to: 0
  8079  01084E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  8080  010850  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  8081  010852                     l12123:
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  8085  010852  0E43               	movlw	low _dbuf
  8086  010854  25CB               	addwf	efgtoa@n& (0+255),w,b
  8087  010856  6ED9               	movwf	fsr2l,c
  8088  010858  0E01               	movlw	high _dbuf
  8089  01085A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8090  01085C  6EDA               	movwf	fsr2h,c
  8091  01085E  0E00               	movlw	0
  8092  010860  6EDF               	movwf	indf2,c
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  8096  010862  0E65               	movlw	101
  8097  010864  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  8098  010866  A4D8               	btfss	status,2,c
  8099  010868  D44D               	goto	l11925
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  8103  01086A  0E00               	movlw	0
  8104  01086C  6FC8               	movwf	(efgtoa@i+1)& (0+255),b
  8105  01086E  0E4F               	movlw	79
  8106  010870  6FC7               	movwf	efgtoa@i& (0+255),b
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  8110  010872  0E43               	movlw	low _dbuf
  8111  010874  25C7               	addwf	efgtoa@i& (0+255),w,b
  8112  010876  6ED9               	movwf	fsr2l,c
  8113  010878  0E01               	movlw	high _dbuf
  8114  01087A  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8115  01087C  6EDA               	movwf	fsr2h,c
  8116  01087E  0E00               	movlw	0
  8117  010880  6EDF               	movwf	indf2,c
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  8121  010882  0E00               	movlw	0
  8122  010884  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  8123  010886  0E00               	movlw	0
  8124  010888  6FB3               	movwf	efgtoa@sign& (0+255),b
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  8128  01088A  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  8129  01088C  D008               	goto	l12139
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  8133  01088E  0E00               	movlw	0
  8134  010890  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  8135  010892  0E01               	movlw	1
  8136  010894  6FB3               	movwf	efgtoa@sign& (0+255),b
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  8140  010896  6DC9               	negf	efgtoa@e& (0+255),b
  8141  010898  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
  8142  01089A  B0D8               	btfsc	status,0,c
  8143  01089C  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  8144  01089E                     l12139:
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  8148  01089E  0E00               	movlw	0
  8149  0108A0  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  8150  0108A2  0E02               	movlw	2
  8151  0108A4  6FB5               	movwf	efgtoa@p& (0+255),b
  8152                           
  8153                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  8154  0108A6  D02A               	goto	l12151
  8155  0108A8                     l12141:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  8159  0108A8  07C7               	decf	efgtoa@i& (0+255),f,b
  8160  0108AA  A0D8               	btfss	status,0,c
  8161  0108AC  07C8               	decf	(efgtoa@i+1)& (0+255),f,b
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  8165  0108AE  0E43               	movlw	low _dbuf
  8166  0108B0  25C7               	addwf	efgtoa@i& (0+255),w,b
  8167  0108B2  6ED9               	movwf	fsr2l,c
  8168  0108B4  0E01               	movlw	high _dbuf
  8169  0108B6  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8170  0108B8  6EDA               	movwf	fsr2h,c
  8171  0108BA  C0C9  F060         	movff	efgtoa@e,___awmod@dividend
  8172  0108BE  C0CA  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  8173  0108C2  0E00               	movlw	0
  8174  0108C4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8175  0108C6  0E0A               	movlw	10
  8176  0108C8  6F62               	movwf	___awmod@divisor& (0+255),b
  8177  0108CA  ECBE  F09E         	call	___awmod	;wreg free
  8178  0108CE  5160               	movf	?___awmod& (0+255),w,b
  8179  0108D0  0F30               	addlw	48
  8180  0108D2  6EDF               	movwf	indf2,c
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  8184  0108D4  C0C9  F060         	movff	efgtoa@e,___awdiv@dividend
  8185  0108D8  C0CA  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  8186  0108DC  0E00               	movlw	0
  8187  0108DE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8188  0108E0  0E0A               	movlw	10
  8189  0108E2  6F62               	movwf	___awdiv@divisor& (0+255),b
  8190  0108E4  EC42  F09E         	call	___awdiv	;wreg free
  8191  0108E8  C060  F0C9         	movff	?___awdiv,efgtoa@e
  8192  0108EC  C061  F0CA         	movff	?___awdiv+1,efgtoa@e+1
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  8196  0108F0  07B5               	decf	efgtoa@p& (0+255),f,b
  8197  0108F2  A0D8               	btfss	status,0,c
  8198  0108F4  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  8202  0108F6  07B8               	decf	efgtoa@w& (0+255),f,b
  8203  0108F8  A0D8               	btfss	status,0,c
  8204  0108FA  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  8205  0108FC                     l12151:
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  8209  0108FC  51C9               	movf	efgtoa@e& (0+255),w,b
  8210  0108FE  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8211  010900  A4D8               	btfss	status,2,c
  8212  010902  D7D2               	goto	l12141
  8213                           
  8214                           ; BSR set to: 0
  8215  010904  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8216  010906  D005               	goto	u12440
  8217  010908  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
  8218  01090A  E1CE               	bnz	l12141
  8219  01090C  05B5               	decf	efgtoa@p& (0+255),w,b
  8220  01090E  B0D8               	btfsc	status,0,c
  8221  010910  D7CB               	goto	l12141
  8222  010912                     u12440:
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  8226  010912  07C7               	decf	efgtoa@i& (0+255),f,b
  8227  010914  A0D8               	btfss	status,0,c
  8228  010916  07C8               	decf	(efgtoa@i+1)& (0+255),f,b
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  8232  010918  51B3               	movf	efgtoa@sign& (0+255),w,b
  8233  01091A  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8234  01091C  A4D8               	btfss	status,2,c
  8235  01091E  D004               	goto	l12161
  8236                           
  8237                           ; BSR set to: 0
  8238  010920  0E00               	movlw	0
  8239  010922  6FA2               	movwf	(_efgtoa$4180+1)& (0+255),b
  8240  010924  0E2B               	movlw	43
  8241  010926  D003               	goto	L5
  8242  010928                     l12161:
  8243                           
  8244                           ; BSR set to: 0
  8245  010928  0E00               	movlw	0
  8246  01092A  6FA2               	movwf	(_efgtoa$4180+1)& (0+255),b
  8247  01092C  0E2D               	movlw	45
  8248  01092E                     L5:
  8249  01092E  6FA1               	movwf	_efgtoa$4180& (0+255),b
  8250                           
  8251                           ; BSR set to: 0
  8252  010930  0E43               	movlw	low _dbuf
  8253  010932  25C7               	addwf	efgtoa@i& (0+255),w,b
  8254  010934  6ED9               	movwf	fsr2l,c
  8255  010936  0E01               	movlw	high _dbuf
  8256  010938  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8257  01093A  6EDA               	movwf	fsr2h,c
  8258  01093C  0060  F287  FFDF   	movff	_efgtoa$4180,indf2
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  8262  010942  07B8               	decf	efgtoa@w& (0+255),f,b
  8263  010944  A0D8               	btfss	status,0,c
  8264  010946  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  8268  010948  07C7               	decf	efgtoa@i& (0+255),f,b
  8269  01094A  A0D8               	btfss	status,0,c
  8270  01094C  07C8               	decf	(efgtoa@i+1)& (0+255),f,b
  8271                           
  8272                           ; BSR set to: 0
  8273                           
  8274                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8275  01094E  0EBF               	movlw	191
  8276  010950  6F9A               	movwf	??_efgtoa& (0+255),b
  8277  010952  0EFF               	movlw	255
  8278  010954  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  8279  010956  5199               	movf	efgtoa@c& (0+255),w,b
  8280  010958  6F9C               	movwf	(??_efgtoa+2)& (0+255),b
  8281  01095A  6B9D               	clrf	(??_efgtoa+3)& (0+255),b
  8282  01095C  519A               	movf	??_efgtoa& (0+255),w,b
  8283  01095E  279C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8284  010960  519B               	movf	(??_efgtoa+1)& (0+255),w,b
  8285  010962  239D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8286  010964  519D               	movf	(??_efgtoa+3)& (0+255),w,b
  8287  010966  E104               	bnz	u12460
  8288  010968  0E1A               	movlw	26
  8289  01096A  5D9C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8290  01096C  A0D8               	btfss	status,0,c
  8291  01096E  D004               	goto	l12175
  8292  010970                     u12460:
  8293                           
  8294                           ; BSR set to: 0
  8295  010970  0E00               	movlw	0
  8296  010972  6FA4               	movwf	(_efgtoa$4181+1)& (0+255),b
  8297  010974  0E65               	movlw	101
  8298  010976  D003               	goto	L6
  8299  010978                     l12175:
  8300                           
  8301                           ; BSR set to: 0
  8302  010978  0E00               	movlw	0
  8303  01097A  6FA4               	movwf	(_efgtoa$4181+1)& (0+255),b
  8304  01097C  0E45               	movlw	69
  8305  01097E                     L6:
  8306  01097E  6FA3               	movwf	_efgtoa$4181& (0+255),b
  8307                           
  8308                           ; BSR set to: 0
  8309  010980  0E43               	movlw	low _dbuf
  8310  010982  25C7               	addwf	efgtoa@i& (0+255),w,b
  8311  010984  6ED9               	movwf	fsr2l,c
  8312  010986  0E01               	movlw	high _dbuf
  8313  010988  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8314  01098A  6EDA               	movwf	fsr2h,c
  8315  01098C  0060  F28F  FFDF   	movff	_efgtoa$4181,indf2
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  8319  010992  07B8               	decf	efgtoa@w& (0+255),f,b
  8320  010994  A0D8               	btfss	status,0,c
  8321  010996  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  8325  010998  0E43               	movlw	low _dbuf
  8326  01099A  25CB               	addwf	efgtoa@n& (0+255),w,b
  8327  01099C  6F60               	movwf	strcpy@dest& (0+255),b
  8328  01099E  0E01               	movlw	high _dbuf
  8329  0109A0  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8330  0109A2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8331  0109A4  0E43               	movlw	low _dbuf
  8332  0109A6  25C7               	addwf	efgtoa@i& (0+255),w,b
  8333  0109A8  6F62               	movwf	strcpy@src& (0+255),b
  8334  0109AA  0E01               	movlw	high _dbuf
  8335  0109AC  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8336  0109AE  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8337  0109B0  EC94  F09F         	call	_strcpy	;wreg free
  8338  0109B4  EF82  F080         	goto	l11925
  8339  0109B8                     __end_of_efgtoa:
  8340                           	callstack 0
  8341                           
  8342 ;; *************** function _tolower *****************
  8343 ;; Defined at:
  8344 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  c               2    6[BANK0 ] int 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  2    6[BANK0 ] int 
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, status,0
  8353 ;; Tracked objects:
  8354 ;;		On entry : 3F/0
  8355 ;;		On exit  : 3F/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8360 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8361 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;Total ram usage:        6 bytes
  8363 ;; Hardware stack levels used: 1
  8364 ;; Hardware stack levels required when called: 8
  8365 ;; This function calls:
  8366 ;;		_isupper
  8367 ;; This function is called by:
  8368 ;;		_efgtoa
  8369 ;;		_vfpfcnvrt
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text12
  8374  014818                     __ptext12:
  8375                           	callstack 0
  8376  014818                     _tolower:
  8377                           	callstack 19
  8378                           
  8379                           ; BSR set to: 0
  8380                           
  8381                           ; BSR set to: 0
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;incstack = 0
  8385  014818  0EBF               	movlw	191
  8386  01481A  6F68               	movwf	??_tolower& (0+255),b
  8387  01481C  0EFF               	movlw	255
  8388  01481E  6F69               	movwf	(??_tolower+1)& (0+255),b
  8389  014820  C066  F06A         	movff	tolower@c,??_tolower+2
  8390  014824  C067  F06B         	movff	tolower@c+1,??_tolower+3
  8391  014828  5168               	movf	??_tolower& (0+255),w,b
  8392  01482A  276A               	addwf	(??_tolower+2)& (0+255),f,b
  8393  01482C  5169               	movf	(??_tolower+1)& (0+255),w,b
  8394  01482E  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  8395  014830  516B               	movf	(??_tolower+3)& (0+255),w,b
  8396  014832  E10A               	bnz	l2853
  8397  014834  0E1A               	movlw	26
  8398  014836  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  8399  014838  B0D8               	btfsc	status,0,c
  8400  01483A  D006               	goto	l2853
  8401                           
  8402                           ; BSR set to: 0
  8403  01483C  0E20               	movlw	32
  8404  01483E  1166               	iorwf	tolower@c& (0+255),w,b
  8405  014840  6F66               	movwf	?_tolower& (0+255),b
  8406  014842  5167               	movf	(tolower@c+1)& (0+255),w,b
  8407  014844  6F67               	movwf	(?_tolower+1)& (0+255),b
  8408  014846  0012               	return	
  8409  014848                     l2853:
  8410                           
  8411                           ; BSR set to: 0
  8412  014848  C066  F066         	movff	tolower@c,?_tolower
  8413  01484C  C067  F067         	movff	tolower@c+1,?_tolower+1
  8414                           
  8415                           ; BSR set to: 0
  8416  014850  0012               	return		;funcret
  8417  014852                     __end_of_tolower:
  8418                           	callstack 0
  8419                           
  8420 ;; *************** function _isupper *****************
  8421 ;; Defined at:
  8422 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  c               2    0[BANK0 ] int 
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;		None
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  2    0[BANK0 ] int 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 3F/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8436 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8438 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8439 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8440 ;;Total ram usage:        6 bytes
  8441 ;; Hardware stack levels used: 1
  8442 ;; Hardware stack levels required when called: 7
  8443 ;; This function calls:
  8444 ;;		Nothing
  8445 ;; This function is called by:
  8446 ;;		_efgtoa
  8447 ;;		_vfpfcnvrt
  8448 ;;		_tolower
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text13
  8453  0148C6                     __ptext13:
  8454                           	callstack 0
  8455  0148C6                     _isupper:
  8456                           	callstack 19
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;incstack = 0
  8460  0148C6  0EBF               	movlw	191
  8461  0148C8  0100               	movlb	0	; () banked
  8462  0148CA  6F62               	movwf	??_isupper& (0+255),b
  8463  0148CC  0EFF               	movlw	255
  8464  0148CE  6F63               	movwf	(??_isupper+1)& (0+255),b
  8465  0148D0  C060  F064         	movff	isupper@c,??_isupper+2
  8466  0148D4  C061  F065         	movff	isupper@c+1,??_isupper+3
  8467  0148D8  5162               	movf	??_isupper& (0+255),w,b
  8468  0148DA  2764               	addwf	(??_isupper+2)& (0+255),f,b
  8469  0148DC  5163               	movf	(??_isupper+1)& (0+255),w,b
  8470  0148DE  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  8471  0148E0  5165               	movf	(??_isupper+3)& (0+255),w,b
  8472  0148E2  E106               	bnz	u10710
  8473  0148E4  0E1A               	movlw	26
  8474  0148E6  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  8475  0148E8  B0D8               	btfsc	status,0,c
  8476  0148EA  D002               	goto	u10710
  8477  0148EC  0E01               	movlw	1
  8478  0148EE  D001               	goto	u10720
  8479  0148F0                     u10710:
  8480  0148F0  0E00               	movlw	0
  8481  0148F2                     u10720:
  8482  0148F2  6F60               	movwf	?_isupper& (0+255),b
  8483  0148F4  6B61               	clrf	(?_isupper+1)& (0+255),b
  8484                           
  8485                           ; BSR set to: 0
  8486  0148F6  0012               	return		;funcret
  8487  0148F8                     __end_of_isupper:
  8488                           	callstack 0
  8489                           
  8490 ;; *************** function _strcpy *****************
  8491 ;; Defined at:
  8492 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  8495 ;;		 -> dbuf(80), 
  8496 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  8497 ;;		 -> STR_35(4), STR_34(4), STR_31(4), STR_30(4), 
  8498 ;;		 -> dbuf(80), 
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;  d               2    8[BANK0 ] PTR unsigned char 
  8501 ;;		 -> dbuf(80), 
  8502 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  8503 ;;		 -> STR_35(4), STR_34(4), STR_31(4), STR_30(4), 
  8504 ;;		 -> dbuf(80), 
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  2    0[BANK0 ] PTR unsigned char 
  8507 ;; Registers used:
  8508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8509 ;; Tracked objects:
  8510 ;;		On entry : 3F/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8515 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8517 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8518 ;;Total ram usage:       10 bytes
  8519 ;; Hardware stack levels used: 1
  8520 ;; Hardware stack levels required when called: 7
  8521 ;; This function calls:
  8522 ;;		Nothing
  8523 ;; This function is called by:
  8524 ;;		_efgtoa
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           	psect	text14
  8529  013F28                     __ptext14:
  8530                           	callstack 0
  8531  013F28                     _strcpy:
  8532                           	callstack 19
  8533                           
  8534                           ; BSR set to: 0
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;incstack = 0
  8538  013F28  C062  F066         	movff	strcpy@src,strcpy@s
  8539  013F2C  C063  F067         	movff	strcpy@src+1,strcpy@s+1
  8540  013F30  C060  F068         	movff	strcpy@dest,strcpy@d
  8541  013F34  C061  F069         	movff	strcpy@dest+1,strcpy@d+1
  8542  013F38                     l11749:
  8543  013F38  0100               	movlb	0	; () banked
  8544  013F3A  5166               	movf	strcpy@s& (0+255),w,b
  8545  013F3C  6F64               	movwf	??_strcpy& (0+255),b
  8546  013F3E  5167               	movf	(strcpy@s+1)& (0+255),w,b
  8547  013F40  6F65               	movwf	(??_strcpy+1)& (0+255),b
  8548  013F42  4B66               	infsnz	strcpy@s& (0+255),f,b
  8549  013F44  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  8550  013F46  0060  F193  FFF6   	movff	??_strcpy,tblptrl
  8551  013F4C  0060  F197  FFF7   	movff	??_strcpy+1,tblptrh
  8552  013F52  0E00               	movlw	low (__mediumconst shr (0+16))
  8553  013F54  6EF8               	movwf	tblptru,c
  8554  013F56  0060  F1A3  FFD9   	movff	strcpy@d,fsr2l
  8555  013F5C  0060  F1A7  FFDA   	movff	strcpy@d+1,fsr2h
  8556  013F62  4B68               	infsnz	strcpy@d& (0+255),f,b
  8557  013F64  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  8558  013F66  0E1F               	movlw	(high __ramtop+-1)
  8559  013F68  64F7               	cpfsgt	tblptrh,c
  8560  013F6A  D003               	bra	u11657
  8561  013F6C  0008               	tblrd		*
  8562  013F6E  50F5               	movf	tablat,w,c
  8563  013F70  D007               	bra	u11650
  8564  013F72                     u11657:
  8565  013F72  006F FFDB FFE1     	movff	tblptrl,fsr1l
  8566  013F78  006F FFDF FFE2     	movff	tblptrh,fsr1h
  8567  013F7E  50E7               	movf	indf1,w,c
  8568  013F80                     u11650:
  8569  013F80  6EDF               	movwf	indf2,c
  8570  013F82  50DF               	movf	indf2,w,c
  8571  013F84  B4D8               	btfsc	status,2,c
  8572  013F86  0012               	return	
  8573  013F88  D7D7               	goto	l11749
  8574  013F8A                     __end_of_strcpy:
  8575                           	callstack 0
  8576                           
  8577 ;; *************** function _pad *****************
  8578 ;; Defined at:
  8579 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  fp              2   19[BANK0 ] PTR struct _IO_FILE
  8582 ;;		 -> sprintf@f(11), NULL(0), 
  8583 ;;  buf             2   21[BANK0 ] PTR unsigned char 
  8584 ;;		 -> dbuf(80), 
  8585 ;;  p               2   23[BANK0 ] int 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;  w               2   28[BANK0 ] int 
  8588 ;;  i               2   26[BANK0 ] int 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  2   19[BANK0 ] int 
  8591 ;; Registers used:
  8592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 3F/0
  8595 ;;		On exit  : 3F/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8598 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8599 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8600 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8601 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8602 ;;Total ram usage:       11 bytes
  8603 ;; Hardware stack levels used: 1
  8604 ;; Hardware stack levels required when called: 11
  8605 ;; This function calls:
  8606 ;;		_fputc
  8607 ;;		_fputs
  8608 ;;		_strlen
  8609 ;; This function is called by:
  8610 ;;		_efgtoa
  8611 ;;		_utoa
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text15
  8616  013B64                     __ptext15:
  8617                           	callstack 0
  8618  013B64                     _pad:
  8619                           	callstack 15
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8623                           
  8624                           ;incstack = 0
  8625  013B64  A02D               	btfss	_flags^0,0,c
  8626  013B66  D00A               	goto	l11707
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8630  013B68  C075  F06A         	movff	pad@buf,fputs@s
  8631  013B6C  C076  F06B         	movff	pad@buf+1,fputs@s+1
  8632  013B70  C073  F06C         	movff	pad@fp,fputs@fp
  8633  013B74  C074  F06D         	movff	pad@fp+1,fputs@fp+1
  8634  013B78  EC2D  F09F         	call	_fputs	;wreg free
  8635  013B7C                     l11707:
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8639  013B7C  BF78               	btfsc	(pad@p+1)& (0+255),7,b
  8640  013B7E  D005               	goto	l11711
  8641                           
  8642                           ; BSR set to: 0
  8643  013B80  C077  F07C         	movff	pad@p,pad@w
  8644  013B84  C078  F07D         	movff	pad@p+1,pad@w+1
  8645  013B88  D004               	goto	l2537
  8646  013B8A                     l11711:
  8647                           
  8648                           ; BSR set to: 0
  8649  013B8A  0E00               	movlw	0
  8650  013B8C  6F7D               	movwf	(pad@w+1)& (0+255),b
  8651  013B8E  0E00               	movlw	0
  8652  013B90  6F7C               	movwf	pad@w& (0+255),b
  8653  013B92                     l2537:
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8657  013B92  0E00               	movlw	0
  8658  013B94  6F7B               	movwf	(pad@i+1)& (0+255),b
  8659  013B96  0E00               	movlw	0
  8660  013B98  6F7A               	movwf	pad@i& (0+255),b
  8661                           
  8662                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8663  013B9A  D00C               	goto	l11717
  8664  013B9C                     l11713:
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8668  013B9C  0E00               	movlw	0
  8669  013B9E  6F62               	movwf	(fputc@c+1)& (0+255),b
  8670  013BA0  0E20               	movlw	32
  8671  013BA2  6F61               	movwf	fputc@c& (0+255),b
  8672  013BA4  C073  F063         	movff	pad@fp,fputc@fp
  8673  013BA8  C074  F064         	movff	pad@fp+1,fputc@fp+1
  8674  013BAC  ECAF  F09C         	call	_fputc	;wreg free
  8675                           
  8676                           ; BSR set to: 0
  8677                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8678  013BB0  4B7A               	infsnz	pad@i& (0+255),f,b
  8679  013BB2  2B7B               	incf	(pad@i+1)& (0+255),f,b
  8680  013BB4                     l11717:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8684  013BB4  517C               	movf	pad@w& (0+255),w,b
  8685  013BB6  5D7A               	subwf	pad@i& (0+255),w,b
  8686  013BB8  517B               	movf	(pad@i+1)& (0+255),w,b
  8687  013BBA  0A80               	xorlw	128
  8688  013BBC  6F79               	movwf	??_pad& (0+255),b
  8689  013BBE  517D               	movf	(pad@w+1)& (0+255),w,b
  8690  013BC0  0A80               	xorlw	128
  8691  013BC2  5979               	subwfb	??_pad& (0+255),w,b
  8692  013BC4  A0D8               	btfss	status,0,c
  8693  013BC6  D7EA               	goto	l11713
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8697  013BC8  B02D               	btfsc	_flags^0,0,c
  8698  013BCA  D00A               	goto	l11721
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8702  013BCC  C075  F06A         	movff	pad@buf,fputs@s
  8703  013BD0  C076  F06B         	movff	pad@buf+1,fputs@s+1
  8704  013BD4  C073  F06C         	movff	pad@fp,fputs@fp
  8705  013BD8  C074  F06D         	movff	pad@fp+1,fputs@fp+1
  8706  013BDC  EC2D  F09F         	call	_fputs	;wreg free
  8707  013BE0                     l11721:
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  8711  013BE0  C075  F060         	movff	pad@buf,strlen@s
  8712  013BE4  C076  F061         	movff	pad@buf+1,strlen@s+1
  8713  013BE8  ECF8  F0A0         	call	_strlen	;wreg free
  8714  013BEC  517C               	movf	pad@w& (0+255),w,b
  8715  013BEE  2560               	addwf	?_strlen& (0+255),w,b
  8716  013BF0  6F73               	movwf	?_pad& (0+255),b
  8717  013BF2  517D               	movf	(pad@w+1)& (0+255),w,b
  8718  013BF4  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  8719  013BF6  6F74               	movwf	(?_pad+1)& (0+255),b
  8720                           
  8721                           ; BSR set to: 0
  8722  013BF8  0012               	return		;funcret
  8723  013BFA                     __end_of_pad:
  8724                           	callstack 0
  8725                           
  8726 ;; *************** function _floorf *****************
  8727 ;; Defined at:
  8728 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  x               4   25[BANK0 ] float 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;  u               4   41[BANK0 ] struct .
  8733 ;;  m               4   35[BANK0 ] unsigned long 
  8734 ;;  e               2   39[BANK0 ] int 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  4   25[BANK0 ] float 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0
  8739 ;; Tracked objects:
  8740 ;;		On entry : 3F/0
  8741 ;;		On exit  : 3F/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8744 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8745 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8746 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8747 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8748 ;;Total ram usage:       20 bytes
  8749 ;; Hardware stack levels used: 1
  8750 ;; Hardware stack levels required when called: 7
  8751 ;; This function calls:
  8752 ;;		Nothing
  8753 ;; This function is called by:
  8754 ;;		_efgtoa
  8755 ;; This function uses a non-reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text16
  8759  012776                     __ptext16:
  8760                           	callstack 0
  8761  012776                     _floorf:
  8762                           	callstack 19
  8763                           
  8764                           ; BSR set to: 0
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;incstack = 0
  8768  012776  C118  F089         	movff	floorf@F526,floorf@u
  8769  01277A  C119  F08A         	movff	floorf@F526+1,floorf@u+1
  8770  01277E  C11A  F08B         	movff	floorf@F526+2,floorf@u+2
  8771  012782  C11B  F08C         	movff	floorf@F526+3,floorf@u+3
  8772  012786  C079  F089         	movff	floorf@x,floorf@u
  8773  01278A  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  8774  01278E  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  8775  012792  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  8776                           
  8777                           ; BSR set to: 0
  8778  012796  0E81               	movlw	129
  8779  012798  6F7D               	movwf	??_floorf& (0+255),b
  8780  01279A  0EFF               	movlw	255
  8781  01279C  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8782  01279E  C089  F07F         	movff	floorf@u,??_floorf+2
  8783  0127A2  C08A  F080         	movff	floorf@u+1,??_floorf+3
  8784  0127A6  C08B  F081         	movff	floorf@u+2,??_floorf+4
  8785  0127AA  C08C  F082         	movff	floorf@u+3,??_floorf+5
  8786  0127AE  0E18               	movlw	24
  8787  0127B0  D005               	goto	u11680
  8788  0127B2                     u11685:
  8789  0127B2  90D8               	bcf	status,0,c
  8790  0127B4  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  8791  0127B6  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  8792  0127B8  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  8793  0127BA  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  8794  0127BC                     u11680:
  8795  0127BC  2EE8               	decfsz	wreg,f,c
  8796  0127BE  D7F9               	goto	u11685
  8797  0127C0  517F               	movf	(??_floorf+2)& (0+255),w,b
  8798  0127C2  257D               	addwf	??_floorf& (0+255),w,b
  8799  0127C4  6F87               	movwf	floorf@e& (0+255),b
  8800  0127C6  0E00               	movlw	0
  8801  0127C8  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  8802  0127CA  6F88               	movwf	(floorf@e+1)& (0+255),b
  8803  0127CC  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  8804  0127CE  D00F               	goto	l11767
  8805  0127D0  5188               	movf	(floorf@e+1)& (0+255),w,b
  8806  0127D2  E104               	bnz	u11690
  8807  0127D4  0E17               	movlw	23
  8808  0127D6  5D87               	subwf	floorf@e& (0+255),w,b
  8809  0127D8  A0D8               	btfss	status,0,c
  8810  0127DA  D009               	goto	l11767
  8811  0127DC                     u11690:
  8812                           
  8813                           ; BSR set to: 0
  8814  0127DC  C079  F079         	movff	floorf@x,?_floorf
  8815  0127E0  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  8816  0127E4  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  8817  0127E8  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  8818  0127EC  0012               	return	
  8819  0127EE                     l11767:
  8820                           
  8821                           ; BSR set to: 0
  8822  0127EE  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  8823  0127F0  D05C               	goto	l11777
  8824                           
  8825                           ; BSR set to: 0
  8826  0127F2  C087  F07D         	movff	floorf@e,??_floorf
  8827  0127F6  0EFF               	movlw	255
  8828  0127F8  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8829  0127FA  0EFF               	movlw	255
  8830  0127FC  6F7F               	movwf	(??_floorf+2)& (0+255),b
  8831  0127FE  0E7F               	movlw	127
  8832  012800  6F80               	movwf	(??_floorf+3)& (0+255),b
  8833  012802  0E00               	movlw	0
  8834  012804  6F81               	movwf	(??_floorf+4)& (0+255),b
  8835  012806                     u11715:
  8836  012806  677D               	tstfsz	??_floorf& (0+255),b
  8837  012808  D001               	goto	u11716
  8838  01280A  D007               	goto	u11717
  8839  01280C                     u11716:
  8840  01280C  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  8841  01280E  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  8842  012810  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  8843  012812  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  8844  012814  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  8845  012816  2F7D               	decfsz	??_floorf& (0+255),f,b
  8846  012818  D7F6               	goto	u11715
  8847  01281A                     u11717:
  8848  01281A  C07E  F083         	movff	??_floorf+1,floorf@m
  8849  01281E  C07F  F084         	movff	??_floorf+2,floorf@m+1
  8850  012822  C080  F085         	movff	??_floorf+3,floorf@m+2
  8851  012826  C081  F086         	movff	??_floorf+4,floorf@m+3
  8852  01282A  0100               	movlb	0	; () banked
  8853  01282C  5183               	movf	floorf@m& (0+255),w,b
  8854  01282E  1589               	andwf	floorf@u& (0+255),w,b
  8855  012830  6F7D               	movwf	??_floorf& (0+255),b
  8856  012832  5184               	movf	(floorf@m+1)& (0+255),w,b
  8857  012834  158A               	andwf	(floorf@u+1)& (0+255),w,b
  8858  012836  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8859  012838  5185               	movf	(floorf@m+2)& (0+255),w,b
  8860  01283A  158B               	andwf	(floorf@u+2)& (0+255),w,b
  8861  01283C  6F7F               	movwf	(??_floorf+2)& (0+255),b
  8862  01283E  5186               	movf	(floorf@m+3)& (0+255),w,b
  8863  012840  158C               	andwf	(floorf@u+3)& (0+255),w,b
  8864  012842  6F80               	movwf	(??_floorf+3)& (0+255),b
  8865  012844  517D               	movf	??_floorf& (0+255),w,b
  8866  012846  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  8867  012848  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  8868  01284A  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  8869  01284C  B4D8               	btfsc	status,2,c
  8870  01284E  D7C6               	goto	u11690
  8871                           
  8872                           ; BSR set to: 0
  8873  012850  C089  F07D         	movff	floorf@u,??_floorf
  8874  012854  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  8875  012858  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  8876  01285C  C08C  F080         	movff	floorf@u+3,??_floorf+3
  8877  012860  0E20               	movlw	32
  8878  012862  D005               	goto	u11730
  8879  012864                     u11735:
  8880  012864  90D8               	bcf	status,0,c
  8881  012866  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  8882  012868  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  8883  01286A  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  8884  01286C  337D               	rrcf	??_floorf& (0+255),f,b
  8885  01286E                     u11730:
  8886  01286E  2EE8               	decfsz	wreg,f,c
  8887  012870  D7F9               	goto	u11735
  8888  012872  517D               	movf	??_floorf& (0+255),w,b
  8889  012874  B4D8               	btfsc	status,2,c
  8890  012876  D008               	goto	l2767
  8891                           
  8892                           ; BSR set to: 0
  8893  012878  5183               	movf	floorf@m& (0+255),w,b
  8894  01287A  2789               	addwf	floorf@u& (0+255),f,b
  8895  01287C  5184               	movf	(floorf@m+1)& (0+255),w,b
  8896  01287E  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  8897  012880  5185               	movf	(floorf@m+2)& (0+255),w,b
  8898  012882  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  8899  012884  5186               	movf	(floorf@m+3)& (0+255),w,b
  8900  012886  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  8901  012888                     l2767:
  8902                           
  8903                           ; BSR set to: 0
  8904  012888  1D83               	comf	floorf@m& (0+255),w,b
  8905  01288A  6F7D               	movwf	??_floorf& (0+255),b
  8906  01288C  1D84               	comf	(floorf@m+1)& (0+255),w,b
  8907  01288E  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8908  012890  1D85               	comf	(floorf@m+2)& (0+255),w,b
  8909  012892  6F7F               	movwf	(??_floorf+2)& (0+255),b
  8910  012894  1D86               	comf	(floorf@m+3)& (0+255),w,b
  8911  012896  6F80               	movwf	(??_floorf+3)& (0+255),b
  8912  012898  517D               	movf	??_floorf& (0+255),w,b
  8913  01289A  1789               	andwf	floorf@u& (0+255),f,b
  8914  01289C  517E               	movf	(??_floorf+1)& (0+255),w,b
  8915  01289E  178A               	andwf	(floorf@u+1)& (0+255),f,b
  8916  0128A0  517F               	movf	(??_floorf+2)& (0+255),w,b
  8917  0128A2  178B               	andwf	(floorf@u+2)& (0+255),f,b
  8918  0128A4  5180               	movf	(??_floorf+3)& (0+255),w,b
  8919  0128A6  178C               	andwf	(floorf@u+3)& (0+255),f,b
  8920  0128A8  D032               	goto	l11785
  8921  0128AA                     l11777:
  8922                           
  8923                           ; BSR set to: 0
  8924  0128AA  C089  F07D         	movff	floorf@u,??_floorf
  8925  0128AE  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  8926  0128B2  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  8927  0128B6  C08C  F080         	movff	floorf@u+3,??_floorf+3
  8928  0128BA  0E20               	movlw	32
  8929  0128BC  D005               	goto	u11750
  8930  0128BE                     u11755:
  8931  0128BE  90D8               	bcf	status,0,c
  8932  0128C0  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  8933  0128C2  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  8934  0128C4  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  8935  0128C6  337D               	rrcf	??_floorf& (0+255),f,b
  8936  0128C8                     u11750:
  8937  0128C8  2EE8               	decfsz	wreg,f,c
  8938  0128CA  D7F9               	goto	u11755
  8939  0128CC  677D               	tstfsz	??_floorf& (0+255),b
  8940  0128CE  D008               	goto	l11781
  8941                           
  8942                           ; BSR set to: 0
  8943  0128D0  0E00               	movlw	0
  8944  0128D2  6F89               	movwf	floorf@u& (0+255),b
  8945  0128D4  0E00               	movlw	0
  8946  0128D6  6F8A               	movwf	(floorf@u+1)& (0+255),b
  8947  0128D8  0E00               	movlw	0
  8948  0128DA  6F8B               	movwf	(floorf@u+2)& (0+255),b
  8949  0128DC  0E00               	movlw	0
  8950  0128DE  D016               	goto	L7
  8951  0128E0                     l11781:
  8952                           
  8953                           ; BSR set to: 0
  8954  0128E0  90D8               	bcf	status,0,c
  8955  0128E2  3589               	rlcf	floorf@u& (0+255),w,b
  8956  0128E4  6F7D               	movwf	??_floorf& (0+255),b
  8957  0128E6  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  8958  0128E8  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8959  0128EA  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  8960  0128EC  6F7F               	movwf	(??_floorf+2)& (0+255),b
  8961  0128EE  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  8962  0128F0  6F80               	movwf	(??_floorf+3)& (0+255),b
  8963  0128F2  517D               	movf	??_floorf& (0+255),w,b
  8964  0128F4  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  8965  0128F6  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  8966  0128F8  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  8967  0128FA  B4D8               	btfsc	status,2,c
  8968  0128FC  D008               	goto	l11785
  8969                           
  8970                           ; BSR set to: 0
  8971  0128FE  0E00               	movlw	0
  8972  012900  6F89               	movwf	floorf@u& (0+255),b
  8973  012902  0E00               	movlw	0
  8974  012904  6F8A               	movwf	(floorf@u+1)& (0+255),b
  8975  012906  0E80               	movlw	128
  8976  012908  6F8B               	movwf	(floorf@u+2)& (0+255),b
  8977  01290A  0EBF               	movlw	191
  8978  01290C                     L7:
  8979  01290C  6F8C               	movwf	(floorf@u+3)& (0+255),b
  8980  01290E                     l11785:
  8981                           
  8982                           ; BSR set to: 0
  8983  01290E  C089  F079         	movff	floorf@u,?_floorf
  8984  012912  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  8985  012916  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  8986  01291A  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  8987                           
  8988                           ; BSR set to: 0
  8989  01291E  0012               	return		;funcret
  8990  012920                     __end_of_floorf:
  8991                           	callstack 0
  8992                           
  8993 ;; *************** function ___fpclassifyf *****************
  8994 ;; Defined at:
  8995 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  x               4    0[BANK0 ] float 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  u               4   10[BANK0 ] struct .
  9000 ;;  e               2    8[BANK0 ] int 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  2    0[BANK0 ] int 
  9003 ;; Registers used:
  9004 ;;		wreg, status,2, status,0
  9005 ;; Tracked objects:
  9006 ;;		On entry : 3F/0
  9007 ;;		On exit  : 3F/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9011 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9013 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9014 ;;Total ram usage:       14 bytes
  9015 ;; Hardware stack levels used: 1
  9016 ;; Hardware stack levels required when called: 7
  9017 ;; This function calls:
  9018 ;;		Nothing
  9019 ;; This function is called by:
  9020 ;;		_efgtoa
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text17
  9025  01365C                     __ptext17:
  9026                           	callstack 0
  9027  01365C                     ___fpclassifyf:
  9028                           	callstack 19
  9029                           
  9030                           ; BSR set to: 0
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;incstack = 0
  9034  01365C  C11C  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9035  013660  C11D  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9036  013664  C11E  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9037  013668  C11F  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9038  01366C  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  9039  013670  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9040  013674  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9041  013678  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9042                           
  9043                           ; BSR set to: 0
  9044  01367C  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  9045  013680  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9046  013684  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9047  013688  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9048  01368C  0E18               	movlw	24
  9049  01368E  D005               	goto	u11580
  9050  013690                     u11585:
  9051  013690  90D8               	bcf	status,0,c
  9052  013692  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  9053  013694  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  9054  013696  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  9055  013698  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  9056  01369A                     u11580:
  9057  01369A  2EE8               	decfsz	wreg,f,c
  9058  01369C  D7F9               	goto	u11585
  9059  01369E  5164               	movf	??___fpclassifyf& (0+255),w,b
  9060  0136A0  6F68               	movwf	___fpclassifyf@e& (0+255),b
  9061  0136A2  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  9062  0136A4  5168               	movf	___fpclassifyf@e& (0+255),w,b
  9063  0136A6  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  9064  0136A8  A4D8               	btfss	status,2,c
  9065  0136AA  D019               	goto	l11737
  9066                           
  9067                           ; BSR set to: 0
  9068  0136AC  90D8               	bcf	status,0,c
  9069  0136AE  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  9070  0136B0  6F64               	movwf	??___fpclassifyf& (0+255),b
  9071  0136B2  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  9072  0136B4  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  9073  0136B6  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  9074  0136B8  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  9075  0136BA  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  9076  0136BC  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  9077  0136BE  5164               	movf	??___fpclassifyf& (0+255),w,b
  9078  0136C0  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  9079  0136C2  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  9080  0136C4  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  9081  0136C6  A4D8               	btfss	status,2,c
  9082  0136C8  D005               	goto	l11733
  9083                           
  9084                           ; BSR set to: 0
  9085  0136CA  0E00               	movlw	0
  9086  0136CC  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  9087  0136CE  0E02               	movlw	2
  9088  0136D0  6F60               	movwf	?___fpclassifyf& (0+255),b
  9089  0136D2  0012               	return	
  9090  0136D4                     l11733:
  9091                           
  9092                           ; BSR set to: 0
  9093  0136D4  0E00               	movlw	0
  9094  0136D6  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  9095  0136D8  0E03               	movlw	3
  9096  0136DA  6F60               	movwf	?___fpclassifyf& (0+255),b
  9097  0136DC  0012               	return	
  9098  0136DE                     l11737:
  9099                           
  9100                           ; BSR set to: 0
  9101  0136DE  2968               	incf	___fpclassifyf@e& (0+255),w,b
  9102  0136E0  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  9103  0136E2  A4D8               	btfss	status,2,c
  9104  0136E4  D01C               	goto	l11743
  9105                           
  9106                           ; BSR set to: 0
  9107  0136E6  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  9108  0136EA  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9109  0136EE  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9110  0136F2  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9111  0136F6  0E09               	movlw	9
  9112  0136F8                     u11625:
  9113  0136F8  90D8               	bcf	status,0,c
  9114  0136FA  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  9115  0136FC  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  9116  0136FE  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  9117  013700  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  9118  013702  2EE8               	decfsz	wreg,f,c
  9119  013704  D7F9               	goto	u11625
  9120  013706  5164               	movf	??___fpclassifyf& (0+255),w,b
  9121  013708  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  9122  01370A  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  9123  01370C  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  9124  01370E  A4D8               	btfss	status,2,c
  9125  013710  D002               	goto	u11630
  9126  013712  0E01               	movlw	1
  9127  013714  D001               	goto	u11640
  9128  013716                     u11630:
  9129  013716  0E00               	movlw	0
  9130  013718                     u11640:
  9131  013718  6F60               	movwf	?___fpclassifyf& (0+255),b
  9132  01371A  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  9133  01371C  0012               	return	
  9134  01371E                     l11743:
  9135                           
  9136                           ; BSR set to: 0
  9137  01371E  0E00               	movlw	0
  9138  013720  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  9139  013722  0E04               	movlw	4
  9140  013724  6F60               	movwf	?___fpclassifyf& (0+255),b
  9141                           
  9142                           ; BSR set to: 0
  9143  013726  0012               	return		;funcret
  9144  013728                     __end_of___fpclassifyf:
  9145                           	callstack 0
  9146                           
  9147 ;; *************** function ___fltol *****************
  9148 ;; Defined at:
  9149 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  f1              4    0[BANK0 ] int 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;  exp1            1    9[BANK0 ] unsigned char 
  9154 ;;  sign1           1    8[BANK0 ] unsigned char 
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  4    0[BANK0 ] long 
  9157 ;; Registers used:
  9158 ;;		wreg, status,2, status,0
  9159 ;; Tracked objects:
  9160 ;;		On entry : 3F/0
  9161 ;;		On exit  : 3F/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9165 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9166 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9167 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9168 ;;Total ram usage:       10 bytes
  9169 ;; Hardware stack levels used: 1
  9170 ;; Hardware stack levels required when called: 7
  9171 ;; This function calls:
  9172 ;;		Nothing
  9173 ;; This function is called by:
  9174 ;;		_efgtoa
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           	psect	text18
  9179  0137EA                     __ptext18:
  9180                           	callstack 0
  9181  0137EA                     ___fltol:
  9182                           	callstack 19
  9183                           
  9184                           ; BSR set to: 0
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;incstack = 0
  9188  0137EA  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9189  0137EC  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9190  0137EE  6F69               	movwf	___fltol@exp1& (0+255),b
  9191  0137F0  5169               	movf	___fltol@exp1& (0+255),w,b
  9192  0137F2  A4D8               	btfss	status,2,c
  9193  0137F4  D009               	goto	l11627
  9194  0137F6                     u11400:
  9195                           
  9196                           ; BSR set to: 0
  9197  0137F6  0E00               	movlw	0
  9198  0137F8  6F60               	movwf	?___fltol& (0+255),b
  9199  0137FA  0E00               	movlw	0
  9200  0137FC  6F61               	movwf	(?___fltol+1)& (0+255),b
  9201  0137FE  0E00               	movlw	0
  9202  013800  6F62               	movwf	(?___fltol+2)& (0+255),b
  9203  013802  0E00               	movlw	0
  9204  013804  6F63               	movwf	(?___fltol+3)& (0+255),b
  9205  013806  0012               	return	
  9206  013808                     l11627:
  9207                           
  9208                           ; BSR set to: 0
  9209  013808  C060  F064         	movff	___fltol@f1,??___fltol
  9210  01380C  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  9211  013810  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  9212  013814  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  9213  013818  0E20               	movlw	32
  9214  01381A  D005               	goto	u11410
  9215  01381C                     u11415:
  9216  01381C  90D8               	bcf	status,0,c
  9217  01381E  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  9218  013820  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  9219  013822  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  9220  013824  3364               	rrcf	??___fltol& (0+255),f,b
  9221  013826                     u11410:
  9222  013826  2EE8               	decfsz	wreg,f,c
  9223  013828  D7F9               	goto	u11415
  9224  01382A  5164               	movf	??___fltol& (0+255),w,b
  9225  01382C  6F68               	movwf	___fltol@sign1& (0+255),b
  9226                           
  9227                           ; BSR set to: 0
  9228  01382E  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  9229                           
  9230                           ; BSR set to: 0
  9231  013830  0EFF               	movlw	255
  9232  013832  1760               	andwf	___fltol@f1& (0+255),f,b
  9233  013834  0EFF               	movlw	255
  9234  013836  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  9235  013838  0EFF               	movlw	255
  9236  01383A  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  9237  01383C  0E00               	movlw	0
  9238  01383E  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  9239                           
  9240                           ; BSR set to: 0
  9241  013840  0E96               	movlw	150
  9242  013842  5F69               	subwf	___fltol@exp1& (0+255),f,b
  9243                           
  9244                           ; BSR set to: 0
  9245  013844  AF69               	btfss	___fltol@exp1& (0+255),7,b
  9246  013846  D00D               	goto	l11647
  9247                           
  9248                           ; BSR set to: 0
  9249  013848  5169               	movf	___fltol@exp1& (0+255),w,b
  9250  01384A  0A80               	xorlw	128
  9251  01384C  0F97               	addlw	151
  9252  01384E  A0D8               	btfss	status,0,c
  9253  013850  D7D2               	goto	u11400
  9254  013852                     l11643:
  9255                           
  9256                           ; BSR set to: 0
  9257  013852  90D8               	bcf	status,0,c
  9258  013854  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9259  013856  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9260  013858  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9261  01385A  3360               	rrcf	___fltol@f1& (0+255),f,b
  9262                           
  9263                           ; BSR set to: 0
  9264  01385C  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  9265  01385E  D7F9               	goto	l11643
  9266  013860  D00D               	goto	u11450
  9267  013862                     l11647:
  9268                           
  9269                           ; BSR set to: 0
  9270  013862  0E1F               	movlw	31
  9271  013864  6569               	cpfsgt	___fltol@exp1& (0+255),b
  9272  013866  D007               	goto	l11655
  9273  013868  D7C6               	goto	u11400
  9274  01386A                     l11653:
  9275                           
  9276                           ; BSR set to: 0
  9277  01386A  90D8               	bcf	status,0,c
  9278  01386C  3760               	rlcf	___fltol@f1& (0+255),f,b
  9279  01386E  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9280  013870  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9281  013872  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9282  013874  0769               	decf	___fltol@exp1& (0+255),f,b
  9283  013876                     l11655:
  9284                           
  9285                           ; BSR set to: 0
  9286  013876  5169               	movf	___fltol@exp1& (0+255),w,b
  9287  013878  A4D8               	btfss	status,2,c
  9288  01387A  D7F7               	goto	l11653
  9289  01387C                     u11450:
  9290                           
  9291                           ; BSR set to: 0
  9292  01387C  5168               	movf	___fltol@sign1& (0+255),w,b
  9293  01387E  B4D8               	btfsc	status,2,c
  9294  013880  D008               	goto	l11661
  9295                           
  9296                           ; BSR set to: 0
  9297  013882  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  9298  013884  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  9299  013886  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  9300  013888  6D60               	negf	___fltol@f1& (0+255),b
  9301  01388A  0E00               	movlw	0
  9302  01388C  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9303  01388E  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9304  013890  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9305  013892                     l11661:
  9306                           
  9307                           ; BSR set to: 0
  9308  013892  C060  F060         	movff	___fltol@f1,?___fltol
  9309  013896  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  9310  01389A  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  9311  01389E  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  9312                           
  9313                           ; BSR set to: 0
  9314  0138A2  0012               	return		;funcret
  9315  0138A4                     __end_of___fltol:
  9316                           	callstack 0
  9317                           
  9318 ;; *************** function ___flsub *****************
  9319 ;; Defined at:
  9320 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  b               4   39[BANK0 ] long 
  9323 ;;  a               4   43[BANK0 ] long 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;		None
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  4   39[BANK0 ] long 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0, cstack
  9330 ;; Tracked objects:
  9331 ;;		On entry : 3F/0
  9332 ;;		On exit  : 3F/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9335 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9338 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9339 ;;Total ram usage:        8 bytes
  9340 ;; Hardware stack levels used: 1
  9341 ;; Hardware stack levels required when called: 8
  9342 ;; This function calls:
  9343 ;;		___fladd
  9344 ;; This function is called by:
  9345 ;;		_efgtoa
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           	psect	text19
  9350  01449C                     __ptext19:
  9351                           	callstack 0
  9352  01449C                     ___flsub:
  9353                           	callstack 18
  9354                           
  9355                           ; BSR set to: 0
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;incstack = 0
  9359  01449C  0E00               	movlw	0
  9360  01449E  1B8B               	xorwf	___flsub@a& (0+255),f,b
  9361  0144A0  0E00               	movlw	0
  9362  0144A2  1B8C               	xorwf	(___flsub@a+1)& (0+255),f,b
  9363  0144A4  0E00               	movlw	0
  9364  0144A6  1B8D               	xorwf	(___flsub@a+2)& (0+255),f,b
  9365  0144A8  0E80               	movlw	128
  9366  0144AA  1B8E               	xorwf	(___flsub@a+3)& (0+255),f,b
  9367                           
  9368                           ; BSR set to: 0
  9369  0144AC  C087  F060         	movff	___flsub@b,___fladd@b
  9370  0144B0  C088  F061         	movff	___flsub@b+1,___fladd@b+1
  9371  0144B4  C089  F062         	movff	___flsub@b+2,___fladd@b+2
  9372  0144B8  C08A  F063         	movff	___flsub@b+3,___fladd@b+3
  9373  0144BC  C08B  F064         	movff	___flsub@a,___fladd@a
  9374  0144C0  C08C  F065         	movff	___flsub@a+1,___fladd@a+1
  9375  0144C4  C08D  F066         	movff	___flsub@a+2,___fladd@a+2
  9376  0144C8  C08E  F067         	movff	___flsub@a+3,___fladd@a+3
  9377  0144CC  EC3D  F08F         	call	___fladd	;wreg free
  9378  0144D0  C060  F087         	movff	?___fladd,?___flsub
  9379  0144D4  C061  F088         	movff	?___fladd+1,?___flsub+1
  9380  0144D8  C062  F089         	movff	?___fladd+2,?___flsub+2
  9381  0144DC  C063  F08A         	movff	?___fladd+3,?___flsub+3
  9382                           
  9383                           ; BSR set to: 0
  9384  0144E0  0012               	return		;funcret
  9385  0144E2                     __end_of___flsub:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function ___fladd *****************
  9389 ;; Defined at:
  9390 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  b               4    0[BANK0 ] long 
  9393 ;;  a               4    4[BANK0 ] long 
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;  grs             1   15[BANK0 ] unsigned char 
  9396 ;;  bexp            1   14[BANK0 ] unsigned char 
  9397 ;;  aexp            1   13[BANK0 ] unsigned char 
  9398 ;;  signs           1   12[BANK0 ] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  4    0[BANK0 ] unsigned char 
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0
  9403 ;; Tracked objects:
  9404 ;;		On entry : 3F/0
  9405 ;;		On exit  : 3F/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9408 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9409 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9410 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9411 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9412 ;;Total ram usage:       16 bytes
  9413 ;; Hardware stack levels used: 1
  9414 ;; Hardware stack levels required when called: 7
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		___flsub
  9419 ;;		_efgtoa
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           	psect	text20
  9424  011E7A                     __ptext20:
  9425                           	callstack 0
  9426  011E7A                     ___fladd:
  9427                           	callstack 18
  9428                           
  9429                           ; BSR set to: 0
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;incstack = 0
  9433  011E7A  5163               	movf	(___fladd@b+3)& (0+255),w,b
  9434  011E7C  0B80               	andlw	128
  9435  011E7E  6F6C               	movwf	___fladd@signs& (0+255),b
  9436  011E80  5163               	movf	(___fladd@b+3)& (0+255),w,b
  9437  011E82  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  9438  011E84  6F6E               	movwf	___fladd@bexp& (0+255),b
  9439                           
  9440                           ; BSR set to: 0
  9441  011E86  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  9442                           
  9443                           ; BSR set to: 0
  9444  011E88  816E               	bsf	___fladd@bexp& (0+255),0,b
  9445                           
  9446                           ; BSR set to: 0
  9447  011E8A  516E               	movf	___fladd@bexp& (0+255),w,b
  9448  011E8C  B4D8               	btfsc	status,2,c
  9449  011E8E  D00D               	goto	l10985
  9450                           
  9451                           ; BSR set to: 0
  9452  011E90  296E               	incf	___fladd@bexp& (0+255),w,b
  9453  011E92  A4D8               	btfss	status,2,c
  9454  011E94  D008               	goto	l10981
  9455                           
  9456                           ; BSR set to: 0
  9457  011E96  0E00               	movlw	0
  9458  011E98  6F60               	movwf	___fladd@b& (0+255),b
  9459  011E9A  0E00               	movlw	0
  9460  011E9C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9461  011E9E  0E00               	movlw	0
  9462  011EA0  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9463  011EA2  0E00               	movlw	0
  9464  011EA4  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9465  011EA6                     l10981:
  9466                           
  9467                           ; BSR set to: 0
  9468  011EA6  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  9469  011EA8  D006               	goto	L8
  9470  011EAA                     l10985:
  9471                           
  9472                           ; BSR set to: 0
  9473  011EAA  0E00               	movlw	0
  9474  011EAC  6F60               	movwf	___fladd@b& (0+255),b
  9475  011EAE  0E00               	movlw	0
  9476  011EB0  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9477  011EB2  0E00               	movlw	0
  9478  011EB4  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9479  011EB6                     L8:
  9480  011EB6  0E00               	movlw	0
  9481  011EB8  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9482                           
  9483                           ; BSR set to: 0
  9484  011EBA  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9485  011EBC  0B80               	andlw	128
  9486  011EBE  6F6D               	movwf	___fladd@aexp& (0+255),b
  9487                           
  9488                           ; BSR set to: 0
  9489  011EC0  516C               	movf	___fladd@signs& (0+255),w,b
  9490  011EC2  196D               	xorwf	___fladd@aexp& (0+255),w,b
  9491  011EC4  A4D8               	btfss	status,2,c
  9492                           
  9493                           ; BSR set to: 0
  9494  011EC6  8D6C               	bsf	___fladd@signs& (0+255),6,b
  9495                           
  9496                           ; BSR set to: 0
  9497  011EC8  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9498  011ECA  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  9499  011ECC  6F6D               	movwf	___fladd@aexp& (0+255),b
  9500                           
  9501                           ; BSR set to: 0
  9502  011ECE  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  9503                           
  9504                           ; BSR set to: 0
  9505  011ED0  816D               	bsf	___fladd@aexp& (0+255),0,b
  9506                           
  9507                           ; BSR set to: 0
  9508  011ED2  516D               	movf	___fladd@aexp& (0+255),w,b
  9509  011ED4  B4D8               	btfsc	status,2,c
  9510  011ED6  D00D               	goto	l11009
  9511                           
  9512                           ; BSR set to: 0
  9513  011ED8  296D               	incf	___fladd@aexp& (0+255),w,b
  9514  011EDA  A4D8               	btfss	status,2,c
  9515  011EDC  D008               	goto	l11005
  9516                           
  9517                           ; BSR set to: 0
  9518  011EDE  0E00               	movlw	0
  9519  011EE0  6F64               	movwf	___fladd@a& (0+255),b
  9520  011EE2  0E00               	movlw	0
  9521  011EE4  6F65               	movwf	(___fladd@a+1)& (0+255),b
  9522  011EE6  0E00               	movlw	0
  9523  011EE8  6F66               	movwf	(___fladd@a+2)& (0+255),b
  9524  011EEA  0E00               	movlw	0
  9525  011EEC  6F67               	movwf	(___fladd@a+3)& (0+255),b
  9526  011EEE                     l11005:
  9527                           
  9528                           ; BSR set to: 0
  9529  011EEE  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  9530  011EF0  D006               	goto	L9
  9531  011EF2                     l11009:
  9532                           
  9533                           ; BSR set to: 0
  9534  011EF2  0E00               	movlw	0
  9535  011EF4  6F64               	movwf	___fladd@a& (0+255),b
  9536  011EF6  0E00               	movlw	0
  9537  011EF8  6F65               	movwf	(___fladd@a+1)& (0+255),b
  9538  011EFA  0E00               	movlw	0
  9539  011EFC  6F66               	movwf	(___fladd@a+2)& (0+255),b
  9540  011EFE                     L9:
  9541  011EFE  0E00               	movlw	0
  9542  011F00  6F67               	movwf	(___fladd@a+3)& (0+255),b
  9543                           
  9544                           ; BSR set to: 0
  9545  011F02  516E               	movf	___fladd@bexp& (0+255),w,b
  9546  011F04  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  9547  011F06  B0D8               	btfsc	status,0,c
  9548  011F08  D022               	goto	l11047
  9549                           
  9550                           ; BSR set to: 0
  9551  011F0A  AD6C               	btfss	___fladd@signs& (0+255),6,b
  9552  011F0C  D002               	goto	l11017
  9553                           
  9554                           ; BSR set to: 0
  9555  011F0E  0E80               	movlw	128
  9556  011F10  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  9557  011F12                     l11017:
  9558                           
  9559                           ; BSR set to: 0
  9560  011F12  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
  9561                           
  9562                           ; BSR set to: 0
  9563  011F16  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  9564                           
  9565                           ; BSR set to: 0
  9566  011F1A  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
  9567                           
  9568                           ; BSR set to: 0
  9569  011F1E  C060  F06F         	movff	___fladd@b,___fladd@grs
  9570                           
  9571                           ; BSR set to: 0
  9572  011F22  C064  F060         	movff	___fladd@a,___fladd@b
  9573                           
  9574                           ; BSR set to: 0
  9575  011F26  C06F  F064         	movff	___fladd@grs,___fladd@a
  9576                           
  9577                           ; BSR set to: 0
  9578  011F2A  C061  F06F         	movff	___fladd@b+1,___fladd@grs
  9579                           
  9580                           ; BSR set to: 0
  9581  011F2E  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  9582                           
  9583                           ; BSR set to: 0
  9584  011F32  C06F  F065         	movff	___fladd@grs,___fladd@a+1
  9585                           
  9586                           ; BSR set to: 0
  9587  011F36  C062  F06F         	movff	___fladd@b+2,___fladd@grs
  9588                           
  9589                           ; BSR set to: 0
  9590  011F3A  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  9591                           
  9592                           ; BSR set to: 0
  9593  011F3E  C06F  F066         	movff	___fladd@grs,___fladd@a+2
  9594                           
  9595                           ; BSR set to: 0
  9596  011F42  C063  F06F         	movff	___fladd@b+3,___fladd@grs
  9597                           
  9598                           ; BSR set to: 0
  9599  011F46  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  9600                           
  9601                           ; BSR set to: 0
  9602  011F4A  C06F  F067         	movff	___fladd@grs,___fladd@a+3
  9603  011F4E                     l11047:
  9604                           
  9605                           ; BSR set to: 0
  9606  011F4E  0E00               	movlw	0
  9607  011F50  6F6F               	movwf	___fladd@grs& (0+255),b
  9608                           
  9609                           ; BSR set to: 0
  9610  011F52  516E               	movf	___fladd@bexp& (0+255),w,b
  9611  011F54  C06D  F068         	movff	___fladd@aexp,??___fladd
  9612  011F58  6B69               	clrf	(??___fladd+1)& (0+255),b
  9613  011F5A  5F68               	subwf	??___fladd& (0+255),f,b
  9614  011F5C  0E00               	movlw	0
  9615  011F5E  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  9616  011F60  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  9617  011F62  D02C               	goto	l2331
  9618  011F64  5169               	movf	(??___fladd+1)& (0+255),w,b
  9619  011F66  E104               	bnz	u10390
  9620  011F68  0E1A               	movlw	26
  9621  011F6A  5D68               	subwf	??___fladd& (0+255),w,b
  9622  011F6C  A0D8               	btfss	status,0,c
  9623  011F6E  D026               	goto	l2331
  9624  011F70                     u10390:
  9625                           
  9626                           ; BSR set to: 0
  9627  011F70  5160               	movf	___fladd@b& (0+255),w,b
  9628  011F72  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  9629  011F74  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  9630  011F76  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  9631  011F78  B4D8               	btfsc	status,2,c
  9632  011F7A  D002               	goto	u10400
  9633  011F7C  0E01               	movlw	1
  9634  011F7E  D001               	goto	u10410
  9635  011F80                     u10400:
  9636  011F80  0E00               	movlw	0
  9637  011F82                     u10410:
  9638  011F82  6F6F               	movwf	___fladd@grs& (0+255),b
  9639                           
  9640                           ; BSR set to: 0
  9641  011F84  0E00               	movlw	0
  9642  011F86  6F60               	movwf	___fladd@b& (0+255),b
  9643  011F88  0E00               	movlw	0
  9644  011F8A  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9645  011F8C  0E00               	movlw	0
  9646  011F8E  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9647  011F90  0E00               	movlw	0
  9648  011F92  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9649                           
  9650                           ; BSR set to: 0
  9651  011F94  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  9652  011F98  D015               	goto	u10440
  9653  011F9A                     l2332:
  9654                           
  9655                           ; BSR set to: 0
  9656  011F9A  A16F               	btfss	___fladd@grs& (0+255),0,b
  9657  011F9C  D005               	goto	l11059
  9658                           
  9659                           ; BSR set to: 0
  9660  011F9E  90D8               	bcf	status,0,c
  9661  011FA0  316F               	rrcf	___fladd@grs& (0+255),w,b
  9662  011FA2  0901               	iorlw	1
  9663  011FA4  6F6F               	movwf	___fladd@grs& (0+255),b
  9664  011FA6  D002               	goto	l11061
  9665  011FA8                     l11059:
  9666                           
  9667                           ; BSR set to: 0
  9668  011FA8  90D8               	bcf	status,0,c
  9669  011FAA  336F               	rrcf	___fladd@grs& (0+255),f,b
  9670  011FAC                     l11061:
  9671                           
  9672                           ; BSR set to: 0
  9673  011FAC  B160               	btfsc	___fladd@b& (0+255),0,b
  9674                           
  9675                           ; BSR set to: 0
  9676  011FAE  8F6F               	bsf	___fladd@grs& (0+255),7,b
  9677                           
  9678                           ; BSR set to: 0
  9679  011FB0  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  9680  011FB2  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  9681  011FB4  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  9682  011FB6  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  9683  011FB8  3360               	rrcf	___fladd@b& (0+255),f,b
  9684                           
  9685                           ; BSR set to: 0
  9686  011FBA  2B6E               	incf	___fladd@bexp& (0+255),f,b
  9687  011FBC                     l2331:
  9688                           
  9689                           ; BSR set to: 0
  9690  011FBC  516D               	movf	___fladd@aexp& (0+255),w,b
  9691  011FBE  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  9692  011FC0  A0D8               	btfss	status,0,c
  9693  011FC2  D7EB               	goto	l2332
  9694  011FC4                     u10440:
  9695                           
  9696                           ; BSR set to: 0
  9697  011FC4  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  9698  011FC6  D028               	goto	l11093
  9699                           
  9700                           ; BSR set to: 0
  9701  011FC8  516E               	movf	___fladd@bexp& (0+255),w,b
  9702  011FCA  A4D8               	btfss	status,2,c
  9703  011FCC  D009               	goto	l11075
  9704                           
  9705                           ; BSR set to: 0
  9706  011FCE  0E00               	movlw	0
  9707  011FD0  6F60               	movwf	?___fladd& (0+255),b
  9708  011FD2  0E00               	movlw	0
  9709  011FD4  6F61               	movwf	(?___fladd+1)& (0+255),b
  9710  011FD6  0E00               	movlw	0
  9711  011FD8  6F62               	movwf	(?___fladd+2)& (0+255),b
  9712  011FDA  0E00               	movlw	0
  9713  011FDC  6F63               	movwf	(?___fladd+3)& (0+255),b
  9714  011FDE  0012               	return	
  9715  011FE0                     l11075:
  9716                           
  9717                           ; BSR set to: 0
  9718  011FE0  5164               	movf	___fladd@a& (0+255),w,b
  9719  011FE2  2760               	addwf	___fladd@b& (0+255),f,b
  9720  011FE4  5165               	movf	(___fladd@a+1)& (0+255),w,b
  9721  011FE6  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  9722  011FE8  5166               	movf	(___fladd@a+2)& (0+255),w,b
  9723  011FEA  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  9724  011FEC  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9725  011FEE  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  9726                           
  9727                           ; BSR set to: 0
  9728  011FF0  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  9729  011FF2  D071               	goto	u10570
  9730                           
  9731                           ; BSR set to: 0
  9732  011FF4  A16F               	btfss	___fladd@grs& (0+255),0,b
  9733  011FF6  D005               	goto	l11083
  9734                           
  9735                           ; BSR set to: 0
  9736  011FF8  90D8               	bcf	status,0,c
  9737  011FFA  316F               	rrcf	___fladd@grs& (0+255),w,b
  9738  011FFC  0901               	iorlw	1
  9739  011FFE  6F6F               	movwf	___fladd@grs& (0+255),b
  9740  012000  D002               	goto	l11085
  9741  012002                     l11083:
  9742                           
  9743                           ; BSR set to: 0
  9744  012002  90D8               	bcf	status,0,c
  9745  012004  336F               	rrcf	___fladd@grs& (0+255),f,b
  9746  012006                     l11085:
  9747                           
  9748                           ; BSR set to: 0
  9749  012006  B160               	btfsc	___fladd@b& (0+255),0,b
  9750                           
  9751                           ; BSR set to: 0
  9752  012008  8F6F               	bsf	___fladd@grs& (0+255),7,b
  9753                           
  9754                           ; BSR set to: 0
  9755  01200A  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  9756  01200C  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  9757  01200E  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  9758  012010  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  9759  012012  3360               	rrcf	___fladd@b& (0+255),f,b
  9760                           
  9761                           ; BSR set to: 0
  9762  012014  2B6E               	incf	___fladd@bexp& (0+255),f,b
  9763  012016  D05F               	goto	u10570
  9764  012018                     l11093:
  9765                           
  9766                           ; BSR set to: 0
  9767  012018  5164               	movf	___fladd@a& (0+255),w,b
  9768  01201A  5D60               	subwf	___fladd@b& (0+255),w,b
  9769  01201C  5165               	movf	(___fladd@a+1)& (0+255),w,b
  9770  01201E  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  9771  012020  5166               	movf	(___fladd@a+2)& (0+255),w,b
  9772  012022  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  9773  012024  5163               	movf	(___fladd@b+3)& (0+255),w,b
  9774  012026  0A80               	xorlw	128
  9775  012028  6F68               	movwf	??___fladd& (0+255),b
  9776  01202A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9777  01202C  0A80               	xorlw	128
  9778  01202E  5968               	subwfb	??___fladd& (0+255),w,b
  9779  012030  B0D8               	btfsc	status,0,c
  9780  012032  D025               	goto	l11103
  9781                           
  9782                           ; BSR set to: 0
  9783  012034  5160               	movf	___fladd@b& (0+255),w,b
  9784  012036  5D64               	subwf	___fladd@a& (0+255),w,b
  9785  012038  6F68               	movwf	??___fladd& (0+255),b
  9786  01203A  5161               	movf	(___fladd@b+1)& (0+255),w,b
  9787  01203C  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  9788  01203E  6F69               	movwf	(??___fladd+1)& (0+255),b
  9789  012040  5162               	movf	(___fladd@b+2)& (0+255),w,b
  9790  012042  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  9791  012044  6F6A               	movwf	(??___fladd+2)& (0+255),b
  9792  012046  5163               	movf	(___fladd@b+3)& (0+255),w,b
  9793  012048  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  9794  01204A  6F6B               	movwf	(??___fladd+3)& (0+255),b
  9795  01204C  0EFF               	movlw	255
  9796  01204E  2568               	addwf	??___fladd& (0+255),w,b
  9797  012050  6F60               	movwf	___fladd@b& (0+255),b
  9798  012052  0EFF               	movlw	255
  9799  012054  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  9800  012056  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9801  012058  0EFF               	movlw	255
  9802  01205A  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  9803  01205C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9804  01205E  0EFF               	movlw	255
  9805  012060  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  9806  012062  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9807  012064  0E80               	movlw	128
  9808  012066  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  9809                           
  9810                           ; BSR set to: 0
  9811  012068  6D6F               	negf	___fladd@grs& (0+255),b
  9812                           
  9813                           ; BSR set to: 0
  9814  01206A  516F               	movf	___fladd@grs& (0+255),w,b
  9815  01206C  A4D8               	btfss	status,2,c
  9816  01206E  D00F               	goto	l2347
  9817                           
  9818                           ; BSR set to: 0
  9819  012070  0E01               	movlw	1
  9820  012072  2760               	addwf	___fladd@b& (0+255),f,b
  9821  012074  0E00               	movlw	0
  9822  012076  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  9823  012078  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  9824  01207A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  9825  01207C  D008               	goto	l2347
  9826  01207E                     l11103:
  9827                           
  9828                           ; BSR set to: 0
  9829  01207E  5164               	movf	___fladd@a& (0+255),w,b
  9830  012080  5F60               	subwf	___fladd@b& (0+255),f,b
  9831  012082  5165               	movf	(___fladd@a+1)& (0+255),w,b
  9832  012084  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  9833  012086  5166               	movf	(___fladd@a+2)& (0+255),w,b
  9834  012088  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  9835  01208A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9836  01208C  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  9837  01208E                     l2347:
  9838                           
  9839                           ; BSR set to: 0
  9840  01208E  5160               	movf	___fladd@b& (0+255),w,b
  9841  012090  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  9842  012092  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  9843  012094  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  9844  012096  A4D8               	btfss	status,2,c
  9845  012098  D01C               	goto	l11127
  9846                           
  9847                           ; BSR set to: 0
  9848  01209A  516F               	movf	___fladd@grs& (0+255),w,b
  9849  01209C  A4D8               	btfss	status,2,c
  9850  01209E  D019               	goto	l11127
  9851                           
  9852                           ; BSR set to: 0
  9853  0120A0  0E00               	movlw	0
  9854  0120A2  6F60               	movwf	?___fladd& (0+255),b
  9855  0120A4  0E00               	movlw	0
  9856  0120A6  6F61               	movwf	(?___fladd+1)& (0+255),b
  9857  0120A8  0E00               	movlw	0
  9858  0120AA  6F62               	movwf	(?___fladd+2)& (0+255),b
  9859  0120AC  0E00               	movlw	0
  9860  0120AE  6F63               	movwf	(?___fladd+3)& (0+255),b
  9861  0120B0  0012               	return	
  9862  0120B2                     l11111:
  9863                           
  9864                           ; BSR set to: 0
  9865  0120B2  90D8               	bcf	status,0,c
  9866  0120B4  3760               	rlcf	___fladd@b& (0+255),f,b
  9867  0120B6  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  9868  0120B8  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  9869  0120BA  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  9870                           
  9871                           ; BSR set to: 0
  9872  0120BC  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  9873                           
  9874                           ; BSR set to: 0
  9875  0120BE  8160               	bsf	___fladd@b& (0+255),0,b
  9876                           
  9877                           ; BSR set to: 0
  9878  0120C0  A16F               	btfss	___fladd@grs& (0+255),0,b
  9879  0120C2  D002               	goto	l11121
  9880                           
  9881                           ; BSR set to: 0
  9882  0120C4  80D8               	bsf	status,0,c
  9883  0120C6  D001               	goto	L10
  9884  0120C8                     l11121:
  9885                           
  9886                           ; BSR set to: 0
  9887  0120C8  90D8               	bcf	status,0,c
  9888  0120CA                     L10:
  9889  0120CA  376F               	rlcf	___fladd@grs& (0+255),f,b
  9890                           
  9891                           ; BSR set to: 0
  9892  0120CC  516E               	movf	___fladd@bexp& (0+255),w,b
  9893  0120CE  A4D8               	btfss	status,2,c
  9894                           
  9895                           ; BSR set to: 0
  9896  0120D0  076E               	decf	___fladd@bexp& (0+255),f,b
  9897  0120D2                     l11127:
  9898                           
  9899                           ; BSR set to: 0
  9900  0120D2  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  9901  0120D4  D7EE               	goto	l11111
  9902  0120D6                     u10570:
  9903                           
  9904                           ; BSR set to: 0
  9905  0120D6  0E00               	movlw	0
  9906  0120D8  6F6D               	movwf	___fladd@aexp& (0+255),b
  9907                           
  9908                           ; BSR set to: 0
  9909  0120DA  AF6F               	btfss	___fladd@grs& (0+255),7,b
  9910  0120DC  D00B               	goto	l2356
  9911                           
  9912                           ; BSR set to: 0
  9913  0120DE  C06F  F068         	movff	___fladd@grs,??___fladd
  9914  0120E2  0E7F               	movlw	127
  9915  0120E4  1768               	andwf	??___fladd& (0+255),f,b
  9916  0120E6  B4D8               	btfsc	status,2,c
  9917  0120E8  D003               	goto	l2357
  9918  0120EA                     u10590:
  9919                           
  9920                           ; BSR set to: 0
  9921  0120EA  0E01               	movlw	1
  9922  0120EC  6F6D               	movwf	___fladd@aexp& (0+255),b
  9923  0120EE  D002               	goto	l2356
  9924  0120F0                     l2357:
  9925                           
  9926                           ; BSR set to: 0
  9927  0120F0  B160               	btfsc	___fladd@b& (0+255),0,b
  9928  0120F2  D7FB               	goto	u10590
  9929  0120F4                     l2356:
  9930                           
  9931                           ; BSR set to: 0
  9932  0120F4  516D               	movf	___fladd@aexp& (0+255),w,b
  9933  0120F6  B4D8               	btfsc	status,2,c
  9934  0120F8  D020               	goto	l11147
  9935                           
  9936                           ; BSR set to: 0
  9937  0120FA  0E01               	movlw	1
  9938  0120FC  2760               	addwf	___fladd@b& (0+255),f,b
  9939  0120FE  0E00               	movlw	0
  9940  012100  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  9941  012102  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  9942  012104  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  9943                           
  9944                           ; BSR set to: 0
  9945  012106  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  9946  012108  D018               	goto	l11147
  9947                           
  9948                           ; BSR set to: 0
  9949  01210A  C060  F068         	movff	___fladd@b,??___fladd
  9950  01210E  C061  F069         	movff	___fladd@b+1,??___fladd+1
  9951  012112  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  9952  012116  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  9953  01211A  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  9954  01211C  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  9955  01211E  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  9956  012120  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  9957  012122  3368               	rrcf	??___fladd& (0+255),f,b
  9958  012124  C068  F060         	movff	??___fladd,___fladd@b
  9959  012128  C069  F061         	movff	??___fladd+1,___fladd@b+1
  9960  01212C  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  9961  012130  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  9962  012134  296E               	incf	___fladd@bexp& (0+255),w,b
  9963  012136  A4D8               	btfss	status,2,c
  9964                           
  9965                           ; BSR set to: 0
  9966  012138  2B6E               	incf	___fladd@bexp& (0+255),f,b
  9967  01213A                     l11147:
  9968                           
  9969                           ; BSR set to: 0
  9970  01213A  296E               	incf	___fladd@bexp& (0+255),w,b
  9971  01213C  B4D8               	btfsc	status,2,c
  9972  01213E  D003               	goto	u10650
  9973                           
  9974                           ; BSR set to: 0
  9975  012140  516E               	movf	___fladd@bexp& (0+255),w,b
  9976  012142  A4D8               	btfss	status,2,c
  9977  012144  D00D               	goto	l11155
  9978  012146                     u10650:
  9979                           
  9980                           ; BSR set to: 0
  9981  012146  0E00               	movlw	0
  9982  012148  6F60               	movwf	___fladd@b& (0+255),b
  9983  01214A  0E00               	movlw	0
  9984  01214C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9985  01214E  0E00               	movlw	0
  9986  012150  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9987  012152  0E00               	movlw	0
  9988  012154  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9989  012156  516E               	movf	___fladd@bexp& (0+255),w,b
  9990  012158  A4D8               	btfss	status,2,c
  9991  01215A  D002               	goto	l11155
  9992                           
  9993                           ; BSR set to: 0
  9994  01215C  0E00               	movlw	0
  9995  01215E  6F6C               	movwf	___fladd@signs& (0+255),b
  9996  012160                     l11155:
  9997                           
  9998                           ; BSR set to: 0
  9999  012160  A16E               	btfss	___fladd@bexp& (0+255),0,b
 10000  012162  D002               	goto	l11159
 10001                           
 10002                           ; BSR set to: 0
 10003  012164  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 10004  012166  D001               	goto	l11161
 10005  012168                     l11159:
 10006                           
 10007                           ; BSR set to: 0
 10008  012168  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 10009  01216A                     l11161:
 10010                           
 10011                           ; BSR set to: 0
 10012  01216A  90D8               	bcf	status,0,c
 10013  01216C  316E               	rrcf	___fladd@bexp& (0+255),w,b
 10014  01216E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 10015                           
 10016                           ; BSR set to: 0
 10017  012170  BF6C               	btfsc	___fladd@signs& (0+255),7,b
 10018                           
 10019                           ; BSR set to: 0
 10020  012172  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 10021                           
 10022                           ; BSR set to: 0
 10023  012174  C060  F060         	movff	___fladd@b,?___fladd
 10024  012178  C061  F061         	movff	___fladd@b+1,?___fladd+1
 10025  01217C  C062  F062         	movff	___fladd@b+2,?___fladd+2
 10026  012180  C063  F063         	movff	___fladd@b+3,?___fladd+3
 10027                           
 10028                           ; BSR set to: 0
 10029  012184  0012               	return		;funcret
 10030  012186                     __end_of___fladd:
 10031                           	callstack 0
 10032                           
 10033 ;; *************** function ___flneg *****************
 10034 ;; Defined at:
 10035 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
 10036 ;; Parameters:    Size  Location     Type
 10037 ;;  f1              4    0[BANK0 ] unsigned char 
 10038 ;; Auto vars:     Size  Location     Type
 10039 ;;		None
 10040 ;; Return value:  Size  Location     Type
 10041 ;;                  4    0[BANK0 ] unsigned char 
 10042 ;; Registers used:
 10043 ;;		wreg, status,2, status,0
 10044 ;; Tracked objects:
 10045 ;;		On entry : 3F/0
 10046 ;;		On exit  : 3F/0
 10047 ;;		Unchanged: 0/0
 10048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10052 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10053 ;;Total ram usage:        4 bytes
 10054 ;; Hardware stack levels used: 1
 10055 ;; Hardware stack levels required when called: 7
 10056 ;; This function calls:
 10057 ;;		Nothing
 10058 ;; This function is called by:
 10059 ;;		_efgtoa
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           	psect	text21
 10064  0149EE                     __ptext21:
 10065                           	callstack 0
 10066  0149EE                     ___flneg:
 10067                           	callstack 19
 10068                           
 10069                           ; BSR set to: 0
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;incstack = 0
 10073  0149EE  5160               	movf	___flneg@f1& (0+255),w,b
 10074  0149F0  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
 10075  0149F2  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
 10076  0149F4  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
 10077  0149F6  B4D8               	btfsc	status,2,c
 10078  0149F8  D008               	goto	l11617
 10079                           
 10080                           ; BSR set to: 0
 10081  0149FA  0E00               	movlw	0
 10082  0149FC  1B60               	xorwf	___flneg@f1& (0+255),f,b
 10083  0149FE  0E00               	movlw	0
 10084  014A00  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
 10085  014A02  0E00               	movlw	0
 10086  014A04  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
 10087  014A06  0E80               	movlw	128
 10088  014A08  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
 10089  014A0A                     l11617:
 10090                           
 10091                           ; BSR set to: 0
 10092  014A0A  C060  F060         	movff	___flneg@f1,?___flneg
 10093  014A0E  C061  F061         	movff	___flneg@f1+1,?___flneg+1
 10094  014A12  C062  F062         	movff	___flneg@f1+2,?___flneg+2
 10095  014A16  C063  F063         	movff	___flneg@f1+3,?___flneg+3
 10096                           
 10097                           ; BSR set to: 0
 10098  014A1A  0012               	return		;funcret
 10099  014A1C                     __end_of___flneg:
 10100                           	callstack 0
 10101                           
 10102 ;; *************** function ___flmul *****************
 10103 ;; Defined at:
 10104 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  b               4   14[BANK0 ] unsigned char 
 10107 ;;  a               4   18[BANK0 ] unsigned char 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;  prod            4   33[BANK0 ] struct .
 10110 ;;  grs             4   29[BANK0 ] unsigned long 
 10111 ;;  temp            2   37[BANK0 ] struct .
 10112 ;;  bexp            1   28[BANK0 ] unsigned char 
 10113 ;;  aexp            1   27[BANK0 ] unsigned char 
 10114 ;;  sign            1   26[BANK0 ] unsigned char 
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  4   14[BANK0 ] unsigned char 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0, prodl, prodh
 10119 ;; Tracked objects:
 10120 ;;		On entry : 3F/0
 10121 ;;		On exit  : 3F/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10124 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10125 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10126 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10127 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10128 ;;Total ram usage:       25 bytes
 10129 ;; Hardware stack levels used: 1
 10130 ;; Hardware stack levels required when called: 7
 10131 ;; This function calls:
 10132 ;;		Nothing
 10133 ;; This function is called by:
 10134 ;;		_main
 10135 ;;		_efgtoa
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           	psect	text22
 10140  011B2A                     __ptext22:
 10141                           	callstack 0
 10142  011B2A                     ___flmul:
 10143                           	callstack 19
 10144                           
 10145                           ; BSR set to: 0
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;incstack = 0
 10149  011B2A  5171               	movf	(___flmul@b+3)& (0+255),w,b
 10150  011B2C  0B80               	andlw	128
 10151  011B2E  6F7A               	movwf	___flmul@sign& (0+255),b
 10152  011B30  5171               	movf	(___flmul@b+3)& (0+255),w,b
 10153  011B32  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 10154  011B34  6F7C               	movwf	___flmul@bexp& (0+255),b
 10155                           
 10156                           ; BSR set to: 0
 10157  011B36  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 10158                           
 10159                           ; BSR set to: 0
 10160  011B38  817C               	bsf	___flmul@bexp& (0+255),0,b
 10161                           
 10162                           ; BSR set to: 0
 10163  011B3A  517C               	movf	___flmul@bexp& (0+255),w,b
 10164  011B3C  B4D8               	btfsc	status,2,c
 10165  011B3E  D00D               	goto	l11373
 10166                           
 10167                           ; BSR set to: 0
 10168  011B40  297C               	incf	___flmul@bexp& (0+255),w,b
 10169  011B42  A4D8               	btfss	status,2,c
 10170  011B44  D008               	goto	l11371
 10171                           
 10172                           ; BSR set to: 0
 10173  011B46  0E00               	movlw	0
 10174  011B48  6F6E               	movwf	___flmul@b& (0+255),b
 10175  011B4A  0E00               	movlw	0
 10176  011B4C  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 10177  011B4E  0E00               	movlw	0
 10178  011B50  6F70               	movwf	(___flmul@b+2)& (0+255),b
 10179  011B52  0E00               	movlw	0
 10180  011B54  6F71               	movwf	(___flmul@b+3)& (0+255),b
 10181  011B56                     l11371:
 10182                           
 10183                           ; BSR set to: 0
 10184  011B56  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 10185  011B58  D008               	goto	l11375
 10186  011B5A                     l11373:
 10187                           
 10188                           ; BSR set to: 0
 10189  011B5A  0E00               	movlw	0
 10190  011B5C  6F6E               	movwf	___flmul@b& (0+255),b
 10191  011B5E  0E00               	movlw	0
 10192  011B60  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 10193  011B62  0E00               	movlw	0
 10194  011B64  6F70               	movwf	(___flmul@b+2)& (0+255),b
 10195  011B66  0E00               	movlw	0
 10196  011B68  6F71               	movwf	(___flmul@b+3)& (0+255),b
 10197  011B6A                     l11375:
 10198                           
 10199                           ; BSR set to: 0
 10200  011B6A  5175               	movf	(___flmul@a+3)& (0+255),w,b
 10201  011B6C  0B80               	andlw	128
 10202  011B6E  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 10203                           
 10204                           ; BSR set to: 0
 10205  011B70  5175               	movf	(___flmul@a+3)& (0+255),w,b
 10206  011B72  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 10207  011B74  6F7B               	movwf	___flmul@aexp& (0+255),b
 10208                           
 10209                           ; BSR set to: 0
 10210  011B76  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 10211                           
 10212                           ; BSR set to: 0
 10213  011B78  817B               	bsf	___flmul@aexp& (0+255),0,b
 10214                           
 10215                           ; BSR set to: 0
 10216  011B7A  517B               	movf	___flmul@aexp& (0+255),w,b
 10217  011B7C  B4D8               	btfsc	status,2,c
 10218  011B7E  D00D               	goto	l11391
 10219                           
 10220                           ; BSR set to: 0
 10221  011B80  297B               	incf	___flmul@aexp& (0+255),w,b
 10222  011B82  A4D8               	btfss	status,2,c
 10223  011B84  D008               	goto	l11389
 10224                           
 10225                           ; BSR set to: 0
 10226  011B86  0E00               	movlw	0
 10227  011B88  6F72               	movwf	___flmul@a& (0+255),b
 10228  011B8A  0E00               	movlw	0
 10229  011B8C  6F73               	movwf	(___flmul@a+1)& (0+255),b
 10230  011B8E  0E00               	movlw	0
 10231  011B90  6F74               	movwf	(___flmul@a+2)& (0+255),b
 10232  011B92  0E00               	movlw	0
 10233  011B94  6F75               	movwf	(___flmul@a+3)& (0+255),b
 10234  011B96                     l11389:
 10235                           
 10236                           ; BSR set to: 0
 10237  011B96  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 10238  011B98  D008               	goto	l2416
 10239  011B9A                     l11391:
 10240                           
 10241                           ; BSR set to: 0
 10242  011B9A  0E00               	movlw	0
 10243  011B9C  6F72               	movwf	___flmul@a& (0+255),b
 10244  011B9E  0E00               	movlw	0
 10245  011BA0  6F73               	movwf	(___flmul@a+1)& (0+255),b
 10246  011BA2  0E00               	movlw	0
 10247  011BA4  6F74               	movwf	(___flmul@a+2)& (0+255),b
 10248  011BA6  0E00               	movlw	0
 10249  011BA8  6F75               	movwf	(___flmul@a+3)& (0+255),b
 10250  011BAA                     l2416:
 10251                           
 10252                           ; BSR set to: 0
 10253  011BAA  517B               	movf	___flmul@aexp& (0+255),w,b
 10254  011BAC  B4D8               	btfsc	status,2,c
 10255  011BAE  D003               	goto	u11080
 10256                           
 10257                           ; BSR set to: 0
 10258  011BB0  517C               	movf	___flmul@bexp& (0+255),w,b
 10259  011BB2  A4D8               	btfss	status,2,c
 10260  011BB4  D009               	goto	l11399
 10261  011BB6                     u11080:
 10262                           
 10263                           ; BSR set to: 0
 10264  011BB6  0E00               	movlw	0
 10265  011BB8  6F6E               	movwf	?___flmul& (0+255),b
 10266  011BBA  0E00               	movlw	0
 10267  011BBC  6F6F               	movwf	(?___flmul+1)& (0+255),b
 10268  011BBE  0E00               	movlw	0
 10269  011BC0  6F70               	movwf	(?___flmul+2)& (0+255),b
 10270  011BC2  0E00               	movlw	0
 10271  011BC4  6F71               	movwf	(?___flmul+3)& (0+255),b
 10272  011BC6  0012               	return	
 10273  011BC8                     l11399:
 10274                           
 10275                           ; BSR set to: 0
 10276  011BC8  5174               	movf	(___flmul@a+2)& (0+255),w,b
 10277  011BCA  036E               	mulwf	___flmul@b& (0+255),b
 10278  011BCC  006F FFCC  F085    	movff	prodl,___flmul@temp
 10279  011BD2  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10280                           
 10281                           ; BSR set to: 0
 10282  011BD8  5185               	movf	___flmul@temp& (0+255),w,b
 10283  011BDA  6F7D               	movwf	___flmul@grs& (0+255),b
 10284  011BDC  6B7E               	clrf	(___flmul@grs+1)& (0+255),b
 10285  011BDE  6B7F               	clrf	(___flmul@grs+2)& (0+255),b
 10286  011BE0  6B80               	clrf	(___flmul@grs+3)& (0+255),b
 10287                           
 10288                           ; BSR set to: 0
 10289  011BE2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10290  011BE4  6F81               	movwf	___flmul@prod& (0+255),b
 10291  011BE6  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 10292  011BE8  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 10293  011BEA  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 10294  011BEC  5173               	movf	(___flmul@a+1)& (0+255),w,b
 10295  011BEE  036F               	mulwf	(___flmul@b+1)& (0+255),b
 10296  011BF0  006F FFCC  F085    	movff	prodl,___flmul@temp
 10297  011BF6  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10298                           
 10299                           ; BSR set to: 0
 10300  011BFC  5185               	movf	___flmul@temp& (0+255),w,b
 10301  011BFE  277D               	addwf	___flmul@grs& (0+255),f,b
 10302  011C00  0E00               	movlw	0
 10303  011C02  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10304  011C04  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10305  011C06  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10306                           
 10307                           ; BSR set to: 0
 10308  011C08  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10309  011C0A  2781               	addwf	___flmul@prod& (0+255),f,b
 10310  011C0C  0E00               	movlw	0
 10311  011C0E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10312  011C10  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10313  011C12  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10314  011C14  5172               	movf	___flmul@a& (0+255),w,b
 10315  011C16  0370               	mulwf	(___flmul@b+2)& (0+255),b
 10316  011C18  006F FFCC  F085    	movff	prodl,___flmul@temp
 10317  011C1E  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10318                           
 10319                           ; BSR set to: 0
 10320  011C24  5185               	movf	___flmul@temp& (0+255),w,b
 10321  011C26  277D               	addwf	___flmul@grs& (0+255),f,b
 10322  011C28  0E00               	movlw	0
 10323  011C2A  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10324  011C2C  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10325  011C2E  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10326                           
 10327                           ; BSR set to: 0
 10328  011C30  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10329  011C32  2781               	addwf	___flmul@prod& (0+255),f,b
 10330  011C34  0E00               	movlw	0
 10331  011C36  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10332  011C38  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10333  011C3A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10334                           
 10335                           ; BSR set to: 0
 10336  011C3C  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 10337  011C40  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 10338  011C44  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 10339  011C48  6B7D               	clrf	___flmul@grs& (0+255),b
 10340                           
 10341                           ; BSR set to: 0
 10342  011C4A  5172               	movf	___flmul@a& (0+255),w,b
 10343  011C4C  036F               	mulwf	(___flmul@b+1)& (0+255),b
 10344  011C4E  006F FFCC  F085    	movff	prodl,___flmul@temp
 10345  011C54  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10346                           
 10347                           ; BSR set to: 0
 10348  011C5A  5185               	movf	___flmul@temp& (0+255),w,b
 10349  011C5C  277D               	addwf	___flmul@grs& (0+255),f,b
 10350  011C5E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10351  011C60  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10352  011C62  0E00               	movlw	0
 10353  011C64  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10354  011C66  0E00               	movlw	0
 10355  011C68  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10356                           
 10357                           ; BSR set to: 0
 10358  011C6A  5173               	movf	(___flmul@a+1)& (0+255),w,b
 10359  011C6C  036E               	mulwf	___flmul@b& (0+255),b
 10360  011C6E  006F FFCC  F085    	movff	prodl,___flmul@temp
 10361  011C74  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10362                           
 10363                           ; BSR set to: 0
 10364  011C7A  5185               	movf	___flmul@temp& (0+255),w,b
 10365  011C7C  277D               	addwf	___flmul@grs& (0+255),f,b
 10366  011C7E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10367  011C80  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10368  011C82  0E00               	movlw	0
 10369  011C84  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10370  011C86  0E00               	movlw	0
 10371  011C88  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10372                           
 10373                           ; BSR set to: 0
 10374  011C8A  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 10375  011C8E  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 10376  011C92  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 10377  011C96  6B7D               	clrf	___flmul@grs& (0+255),b
 10378  011C98  5172               	movf	___flmul@a& (0+255),w,b
 10379  011C9A  036E               	mulwf	___flmul@b& (0+255),b
 10380  011C9C  006F FFCC  F085    	movff	prodl,___flmul@temp
 10381  011CA2  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10382                           
 10383                           ; BSR set to: 0
 10384  011CA8  5185               	movf	___flmul@temp& (0+255),w,b
 10385  011CAA  277D               	addwf	___flmul@grs& (0+255),f,b
 10386  011CAC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10387  011CAE  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10388  011CB0  0E00               	movlw	0
 10389  011CB2  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10390  011CB4  0E00               	movlw	0
 10391  011CB6  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10392                           
 10393                           ; BSR set to: 0
 10394  011CB8  5174               	movf	(___flmul@a+2)& (0+255),w,b
 10395  011CBA  036F               	mulwf	(___flmul@b+1)& (0+255),b
 10396  011CBC  006F FFCC  F085    	movff	prodl,___flmul@temp
 10397  011CC2  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10398  011CC8  5185               	movf	___flmul@temp& (0+255),w,b
 10399  011CCA  2781               	addwf	___flmul@prod& (0+255),f,b
 10400  011CCC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10401  011CCE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10402  011CD0  0E00               	movlw	0
 10403  011CD2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10404  011CD4  0E00               	movlw	0
 10405  011CD6  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10406                           
 10407                           ; BSR set to: 0
 10408  011CD8  5173               	movf	(___flmul@a+1)& (0+255),w,b
 10409  011CDA  0370               	mulwf	(___flmul@b+2)& (0+255),b
 10410  011CDC  006F FFCC  F085    	movff	prodl,___flmul@temp
 10411  011CE2  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10412                           
 10413                           ; BSR set to: 0
 10414  011CE8  5185               	movf	___flmul@temp& (0+255),w,b
 10415  011CEA  2781               	addwf	___flmul@prod& (0+255),f,b
 10416  011CEC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10417  011CEE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10418  011CF0  0E00               	movlw	0
 10419  011CF2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10420  011CF4  0E00               	movlw	0
 10421  011CF6  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10422  011CF8  5174               	movf	(___flmul@a+2)& (0+255),w,b
 10423  011CFA  0370               	mulwf	(___flmul@b+2)& (0+255),b
 10424  011CFC  006F FFCC  F085    	movff	prodl,___flmul@temp
 10425  011D02  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10426                           
 10427                           ; BSR set to: 0
 10428  011D08  5185               	movf	___flmul@temp& (0+255),w,b
 10429  011D0A  6F76               	movwf	??___flmul& (0+255),b
 10430  011D0C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10431  011D0E  6F77               	movwf	(??___flmul+1)& (0+255),b
 10432  011D10  6B78               	clrf	(??___flmul+2)& (0+255),b
 10433  011D12  6B79               	clrf	(??___flmul+3)& (0+255),b
 10434  011D14  C078  F079         	movff	??___flmul+2,??___flmul+3
 10435  011D18  C077  F078         	movff	??___flmul+1,??___flmul+2
 10436  011D1C  C076  F077         	movff	??___flmul,??___flmul+1
 10437  011D20  6B76               	clrf	??___flmul& (0+255),b
 10438  011D22  5176               	movf	??___flmul& (0+255),w,b
 10439  011D24  2781               	addwf	___flmul@prod& (0+255),f,b
 10440  011D26  5177               	movf	(??___flmul+1)& (0+255),w,b
 10441  011D28  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10442  011D2A  5178               	movf	(??___flmul+2)& (0+255),w,b
 10443  011D2C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10444  011D2E  5179               	movf	(??___flmul+3)& (0+255),w,b
 10445  011D30  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10446                           
 10447                           ; BSR set to: 0
 10448  011D32  5180               	movf	(___flmul@grs+3)& (0+255),w,b
 10449  011D34  2781               	addwf	___flmul@prod& (0+255),f,b
 10450  011D36  0E00               	movlw	0
 10451  011D38  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10452  011D3A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10453  011D3C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10454                           
 10455                           ; BSR set to: 0
 10456  011D3E  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 10457  011D42  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 10458  011D46  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 10459  011D4A  6B7D               	clrf	___flmul@grs& (0+255),b
 10460                           
 10461                           ; BSR set to: 0
 10462  011D4C  517B               	movf	___flmul@aexp& (0+255),w,b
 10463  011D4E  C07C  F076         	movff	___flmul@bexp,??___flmul
 10464  011D52  6B77               	clrf	(??___flmul+1)& (0+255),b
 10465  011D54  2776               	addwf	??___flmul& (0+255),f,b
 10466  011D56  0E00               	movlw	0
 10467  011D58  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 10468  011D5A  0E82               	movlw	130
 10469  011D5C  2576               	addwf	??___flmul& (0+255),w,b
 10470  011D5E  6F85               	movwf	___flmul@temp& (0+255),b
 10471  011D60  0EFF               	movlw	255
 10472  011D62  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 10473  011D64  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 10474  011D66  D00F               	goto	l11447
 10475  011D68                     l11441:
 10476                           
 10477                           ; BSR set to: 0
 10478  011D68  90D8               	bcf	status,0,c
 10479  011D6A  3781               	rlcf	___flmul@prod& (0+255),f,b
 10480  011D6C  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10481  011D6E  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10482  011D70  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10483                           
 10484                           ; BSR set to: 0
 10485  011D72  BF80               	btfsc	(___flmul@grs+3)& (0+255),7,b
 10486                           
 10487                           ; BSR set to: 0
 10488  011D74  8181               	bsf	___flmul@prod& (0+255),0,b
 10489                           
 10490                           ; BSR set to: 0
 10491  011D76  90D8               	bcf	status,0,c
 10492  011D78  377D               	rlcf	___flmul@grs& (0+255),f,b
 10493  011D7A  377E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10494  011D7C  377F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10495  011D7E  3780               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10496  011D80  0785               	decf	___flmul@temp& (0+255),f,b
 10497  011D82  A0D8               	btfss	status,0,c
 10498  011D84  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 10499  011D86                     l11447:
 10500                           
 10501                           ; BSR set to: 0
 10502  011D86  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 10503  011D88  D7EF               	goto	l11441
 10504                           
 10505                           ; BSR set to: 0
 10506  011D8A  0E00               	movlw	0
 10507  011D8C  6F7B               	movwf	___flmul@aexp& (0+255),b
 10508                           
 10509                           ; BSR set to: 0
 10510  011D8E  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
 10511  011D90  D017               	goto	l2425
 10512                           
 10513                           ; BSR set to: 0
 10514  011D92  0EFF               	movlw	255
 10515  011D94  157D               	andwf	___flmul@grs& (0+255),w,b
 10516  011D96  6F76               	movwf	??___flmul& (0+255),b
 10517  011D98  0EFF               	movlw	255
 10518  011D9A  157E               	andwf	(___flmul@grs+1)& (0+255),w,b
 10519  011D9C  6F77               	movwf	(??___flmul+1)& (0+255),b
 10520  011D9E  0EFF               	movlw	255
 10521  011DA0  157F               	andwf	(___flmul@grs+2)& (0+255),w,b
 10522  011DA2  6F78               	movwf	(??___flmul+2)& (0+255),b
 10523  011DA4  0E7F               	movlw	127
 10524  011DA6  1580               	andwf	(___flmul@grs+3)& (0+255),w,b
 10525  011DA8  6F79               	movwf	(??___flmul+3)& (0+255),b
 10526  011DAA  5176               	movf	??___flmul& (0+255),w,b
 10527  011DAC  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 10528  011DAE  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 10529  011DB0  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 10530  011DB2  B4D8               	btfsc	status,2,c
 10531  011DB4  D003               	goto	l2426
 10532  011DB6                     u11120:
 10533                           
 10534                           ; BSR set to: 0
 10535  011DB6  0E01               	movlw	1
 10536  011DB8  6F7B               	movwf	___flmul@aexp& (0+255),b
 10537  011DBA  D002               	goto	l2425
 10538  011DBC                     l2426:
 10539                           
 10540                           ; BSR set to: 0
 10541  011DBC  B181               	btfsc	___flmul@prod& (0+255),0,b
 10542  011DBE  D7FB               	goto	u11120
 10543  011DC0                     l2425:
 10544                           
 10545                           ; BSR set to: 0
 10546  011DC0  517B               	movf	___flmul@aexp& (0+255),w,b
 10547  011DC2  B4D8               	btfsc	status,2,c
 10548  011DC4  D01F               	goto	l11467
 10549                           
 10550                           ; BSR set to: 0
 10551  011DC6  0E01               	movlw	1
 10552  011DC8  2781               	addwf	___flmul@prod& (0+255),f,b
 10553  011DCA  0E00               	movlw	0
 10554  011DCC  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10555  011DCE  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10556  011DD0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10557                           
 10558                           ; BSR set to: 0
 10559  011DD2  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 10560  011DD4  D017               	goto	l11467
 10561                           
 10562                           ; BSR set to: 0
 10563  011DD6  C081  F076         	movff	___flmul@prod,??___flmul
 10564  011DDA  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 10565  011DDE  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 10566  011DE2  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 10567  011DE6  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 10568  011DE8  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 10569  011DEA  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 10570  011DEC  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 10571  011DEE  3376               	rrcf	??___flmul& (0+255),f,b
 10572  011DF0  C076  F081         	movff	??___flmul,___flmul@prod
 10573  011DF4  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 10574  011DF8  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 10575  011DFC  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 10576                           
 10577                           ; BSR set to: 0
 10578  011E00  4B85               	infsnz	___flmul@temp& (0+255),f,b
 10579  011E02  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 10580  011E04                     l11467:
 10581                           
 10582                           ; BSR set to: 0
 10583  011E04  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10584  011E06  D00D               	goto	l11471
 10585  011E08  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10586  011E0A  E103               	bnz	u11160
 10587  011E0C  2985               	incf	___flmul@temp& (0+255),w,b
 10588  011E0E  A0D8               	btfss	status,0,c
 10589  011E10  D008               	goto	l11471
 10590  011E12                     u11160:
 10591                           
 10592                           ; BSR set to: 0
 10593  011E12  0E00               	movlw	0
 10594  011E14  6F81               	movwf	___flmul@prod& (0+255),b
 10595  011E16  0E00               	movlw	0
 10596  011E18  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 10597  011E1A  0E80               	movlw	128
 10598  011E1C  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 10599  011E1E  0E7F               	movlw	127
 10600  011E20  D020               	goto	L11
 10601  011E22                     l11471:
 10602                           
 10603                           ; BSR set to: 0
 10604  011E22  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10605  011E24  D005               	goto	u11170
 10606  011E26  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10607  011E28  E10E               	bnz	l2433
 10608  011E2A  0585               	decf	___flmul@temp& (0+255),w,b
 10609  011E2C  B0D8               	btfsc	status,0,c
 10610  011E2E  D00B               	goto	l2433
 10611  011E30                     u11170:
 10612                           
 10613                           ; BSR set to: 0
 10614  011E30  0E00               	movlw	0
 10615  011E32  6F81               	movwf	___flmul@prod& (0+255),b
 10616  011E34  0E00               	movlw	0
 10617  011E36  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 10618  011E38  0E00               	movlw	0
 10619  011E3A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 10620  011E3C  0E00               	movlw	0
 10621  011E3E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 10622  011E40  0E00               	movlw	0
 10623  011E42  6F7A               	movwf	___flmul@sign& (0+255),b
 10624  011E44  D00F               	goto	l11483
 10625  011E46                     l2433:
 10626                           
 10627                           ; BSR set to: 0
 10628  011E46  C085  F07C         	movff	___flmul@temp,___flmul@bexp
 10629                           
 10630                           ; BSR set to: 0
 10631  011E4A  0EFF               	movlw	255
 10632  011E4C  1781               	andwf	___flmul@prod& (0+255),f,b
 10633  011E4E  0EFF               	movlw	255
 10634  011E50  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 10635  011E52  0E7F               	movlw	127
 10636  011E54  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 10637  011E56  0E00               	movlw	0
 10638  011E58  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 10639                           
 10640                           ; BSR set to: 0
 10641  011E5A  B17C               	btfsc	___flmul@bexp& (0+255),0,b
 10642                           
 10643                           ; BSR set to: 0
 10644  011E5C  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 10645                           
 10646                           ; BSR set to: 0
 10647  011E5E  90D8               	bcf	status,0,c
 10648  011E60  317C               	rrcf	___flmul@bexp& (0+255),w,b
 10649  011E62                     L11:
 10650  011E62  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 10651  011E64                     l11483:
 10652                           
 10653                           ; BSR set to: 0
 10654  011E64  517A               	movf	___flmul@sign& (0+255),w,b
 10655  011E66  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10656                           
 10657                           ; BSR set to: 0
 10658  011E68  C081  F06E         	movff	___flmul@prod,?___flmul
 10659  011E6C  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 10660  011E70  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 10661  011E74  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 10662                           
 10663                           ; BSR set to: 0
 10664  011E78  0012               	return		;funcret
 10665  011E7A                     __end_of___flmul:
 10666                           	callstack 0
 10667                           
 10668 ;; *************** function ___flge *****************
 10669 ;; Defined at:
 10670 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
 10671 ;; Parameters:    Size  Location     Type
 10672 ;;  ff1             4   39[BANK0 ] unsigned char 
 10673 ;;  ff2             4   43[BANK0 ] unsigned char 
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;		None
 10676 ;; Return value:  Size  Location     Type
 10677 ;;		None               void
 10678 ;; Registers used:
 10679 ;;		wreg, status,2, status,0
 10680 ;; Tracked objects:
 10681 ;;		On entry : 3F/0
 10682 ;;		On exit  : 3F/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10685 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10687 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10688 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10689 ;;Total ram usage:       12 bytes
 10690 ;; Hardware stack levels used: 1
 10691 ;; Hardware stack levels required when called: 7
 10692 ;; This function calls:
 10693 ;;		Nothing
 10694 ;; This function is called by:
 10695 ;;		_efgtoa
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text23
 10700  0133F0                     __ptext23:
 10701                           	callstack 0
 10702  0133F0                     ___flge:
 10703                           	callstack 19
 10704                           
 10705                           ; BSR set to: 0
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;incstack = 0
 10709  0133F0  0E00               	movlw	0
 10710  0133F2  1587               	andwf	___flge@ff1& (0+255),w,b
 10711  0133F4  6F8F               	movwf	??___flge& (0+255),b
 10712  0133F6  0E00               	movlw	0
 10713  0133F8  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
 10714  0133FA  6F90               	movwf	(??___flge+1)& (0+255),b
 10715  0133FC  0E80               	movlw	128
 10716  0133FE  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
 10717  013400  6F91               	movwf	(??___flge+2)& (0+255),b
 10718  013402  0E7F               	movlw	127
 10719  013404  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
 10720  013406  6F92               	movwf	(??___flge+3)& (0+255),b
 10721  013408  518F               	movf	??___flge& (0+255),w,b
 10722  01340A  1190               	iorwf	(??___flge+1)& (0+255),w,b
 10723  01340C  1191               	iorwf	(??___flge+2)& (0+255),w,b
 10724  01340E  1192               	iorwf	(??___flge+3)& (0+255),w,b
 10725  013410  A4D8               	btfss	status,2,c
 10726  013412  D008               	goto	l11595
 10727                           
 10728                           ; BSR set to: 0
 10729  013414  0E00               	movlw	0
 10730  013416  6F87               	movwf	___flge@ff1& (0+255),b
 10731  013418  0E00               	movlw	0
 10732  01341A  6F88               	movwf	(___flge@ff1+1)& (0+255),b
 10733  01341C  0E00               	movlw	0
 10734  01341E  6F89               	movwf	(___flge@ff1+2)& (0+255),b
 10735  013420  0E00               	movlw	0
 10736  013422  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
 10737  013424                     l11595:
 10738                           
 10739                           ; BSR set to: 0
 10740  013424  0E00               	movlw	0
 10741  013426  158B               	andwf	___flge@ff2& (0+255),w,b
 10742  013428  6F8F               	movwf	??___flge& (0+255),b
 10743  01342A  0E00               	movlw	0
 10744  01342C  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
 10745  01342E  6F90               	movwf	(??___flge+1)& (0+255),b
 10746  013430  0E80               	movlw	128
 10747  013432  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
 10748  013434  6F91               	movwf	(??___flge+2)& (0+255),b
 10749  013436  0E7F               	movlw	127
 10750  013438  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
 10751  01343A  6F92               	movwf	(??___flge+3)& (0+255),b
 10752  01343C  518F               	movf	??___flge& (0+255),w,b
 10753  01343E  1190               	iorwf	(??___flge+1)& (0+255),w,b
 10754  013440  1191               	iorwf	(??___flge+2)& (0+255),w,b
 10755  013442  1192               	iorwf	(??___flge+3)& (0+255),w,b
 10756  013444  A4D8               	btfss	status,2,c
 10757  013446  D008               	goto	l11599
 10758                           
 10759                           ; BSR set to: 0
 10760  013448  0E00               	movlw	0
 10761  01344A  6F8B               	movwf	___flge@ff2& (0+255),b
 10762  01344C  0E00               	movlw	0
 10763  01344E  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
 10764  013450  0E00               	movlw	0
 10765  013452  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
 10766  013454  0E00               	movlw	0
 10767  013456  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
 10768  013458                     l11599:
 10769                           
 10770                           ; BSR set to: 0
 10771  013458  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
 10772  01345A  D009               	goto	l11603
 10773                           
 10774                           ; BSR set to: 0
 10775  01345C  6D87               	negf	___flge@ff1& (0+255),b
 10776  01345E  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
 10777  013460  B0D8               	btfsc	status,0,c
 10778  013462  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
 10779  013464  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
 10780  013466  B0D8               	btfsc	status,0,c
 10781  013468  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
 10782  01346A  0E80               	movlw	128
 10783  01346C  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
 10784  01346E                     l11603:
 10785                           
 10786                           ; BSR set to: 0
 10787  01346E  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
 10788  013470  D009               	goto	l2067
 10789                           
 10790                           ; BSR set to: 0
 10791  013472  6D8B               	negf	___flge@ff2& (0+255),b
 10792  013474  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
 10793  013476  B0D8               	btfsc	status,0,c
 10794  013478  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
 10795  01347A  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
 10796  01347C  B0D8               	btfsc	status,0,c
 10797  01347E  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
 10798  013480  0E80               	movlw	128
 10799  013482  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
 10800  013484                     l2067:
 10801                           
 10802                           ; BSR set to: 0
 10803  013484  0E00               	movlw	0
 10804  013486  1B87               	xorwf	___flge@ff1& (0+255),f,b
 10805  013488  0E00               	movlw	0
 10806  01348A  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10807  01348C  0E00               	movlw	0
 10808  01348E  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10809  013490  0E80               	movlw	128
 10810  013492  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10811  013494  0E00               	movlw	0
 10812  013496  1B8B               	xorwf	___flge@ff2& (0+255),f,b
 10813  013498  0E00               	movlw	0
 10814  01349A  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10815  01349C  0E00               	movlw	0
 10816  01349E  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10817  0134A0  0E80               	movlw	128
 10818  0134A2  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10819  0134A4  518B               	movf	___flge@ff2& (0+255),w,b
 10820  0134A6  5D87               	subwf	___flge@ff1& (0+255),w,b
 10821  0134A8  518C               	movf	(___flge@ff2+1)& (0+255),w,b
 10822  0134AA  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10823  0134AC  518D               	movf	(___flge@ff2+2)& (0+255),w,b
 10824  0134AE  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10825  0134B0  518E               	movf	(___flge@ff2+3)& (0+255),w,b
 10826  0134B2  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10827  0134B4  B0D8               	btfsc	status,0,c
 10828  0134B6  D002               	goto	l11609
 10829                           
 10830                           ; BSR set to: 0
 10831  0134B8  90D8               	bcf	status,0,c
 10832  0134BA  0012               	return	
 10833  0134BC                     l11609:
 10834                           
 10835                           ; BSR set to: 0
 10836  0134BC  80D8               	bsf	status,0,c
 10837                           
 10838                           ; BSR set to: 0
 10839  0134BE  0012               	return		;funcret
 10840  0134C0                     __end_of___flge:
 10841                           	callstack 0
 10842                           
 10843 ;; *************** function ___fleq *****************
 10844 ;; Defined at:
 10845 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;  ff1             4    0[BANK0 ] unsigned char 
 10848 ;;  ff2             4    4[BANK0 ] unsigned char 
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;		None
 10851 ;; Return value:  Size  Location     Type
 10852 ;;		None               void
 10853 ;; Registers used:
 10854 ;;		wreg, status,2, status,0
 10855 ;; Tracked objects:
 10856 ;;		On entry : 3F/0
 10857 ;;		On exit  : 3F/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10860 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10862 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10863 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10864 ;;Total ram usage:       12 bytes
 10865 ;; Hardware stack levels used: 1
 10866 ;; Hardware stack levels required when called: 7
 10867 ;; This function calls:
 10868 ;;		Nothing
 10869 ;; This function is called by:
 10870 ;;		_efgtoa
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           	psect	text24
 10875  013BFA                     __ptext24:
 10876                           	callstack 0
 10877  013BFA                     ___fleq:
 10878                           	callstack 19
 10879                           
 10880                           ; BSR set to: 0
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;incstack = 0
 10884  013BFA  0E00               	movlw	0
 10885  013BFC  1560               	andwf	___fleq@ff1& (0+255),w,b
 10886  013BFE  6F68               	movwf	??___fleq& (0+255),b
 10887  013C00  0E00               	movlw	0
 10888  013C02  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
 10889  013C04  6F69               	movwf	(??___fleq+1)& (0+255),b
 10890  013C06  0E80               	movlw	128
 10891  013C08  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
 10892  013C0A  6F6A               	movwf	(??___fleq+2)& (0+255),b
 10893  013C0C  0E7F               	movlw	127
 10894  013C0E  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
 10895  013C10  6F6B               	movwf	(??___fleq+3)& (0+255),b
 10896  013C12  5168               	movf	??___fleq& (0+255),w,b
 10897  013C14  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 10898  013C16  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 10899  013C18  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 10900  013C1A  A4D8               	btfss	status,2,c
 10901  013C1C  D008               	goto	l11579
 10902                           
 10903                           ; BSR set to: 0
 10904  013C1E  0E00               	movlw	0
 10905  013C20  6F60               	movwf	___fleq@ff1& (0+255),b
 10906  013C22  0E00               	movlw	0
 10907  013C24  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
 10908  013C26  0E00               	movlw	0
 10909  013C28  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
 10910  013C2A  0E00               	movlw	0
 10911  013C2C  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
 10912  013C2E                     l11579:
 10913                           
 10914                           ; BSR set to: 0
 10915  013C2E  0E00               	movlw	0
 10916  013C30  1564               	andwf	___fleq@ff2& (0+255),w,b
 10917  013C32  6F68               	movwf	??___fleq& (0+255),b
 10918  013C34  0E00               	movlw	0
 10919  013C36  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
 10920  013C38  6F69               	movwf	(??___fleq+1)& (0+255),b
 10921  013C3A  0E80               	movlw	128
 10922  013C3C  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
 10923  013C3E  6F6A               	movwf	(??___fleq+2)& (0+255),b
 10924  013C40  0E7F               	movlw	127
 10925  013C42  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
 10926  013C44  6F6B               	movwf	(??___fleq+3)& (0+255),b
 10927  013C46  5168               	movf	??___fleq& (0+255),w,b
 10928  013C48  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 10929  013C4A  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 10930  013C4C  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 10931  013C4E  A4D8               	btfss	status,2,c
 10932  013C50  D008               	goto	l11583
 10933                           
 10934                           ; BSR set to: 0
 10935  013C52  0E00               	movlw	0
 10936  013C54  6F64               	movwf	___fleq@ff2& (0+255),b
 10937  013C56  0E00               	movlw	0
 10938  013C58  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
 10939  013C5A  0E00               	movlw	0
 10940  013C5C  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
 10941  013C5E  0E00               	movlw	0
 10942  013C60  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
 10943  013C62                     l11583:
 10944                           
 10945                           ; BSR set to: 0
 10946  013C62  5164               	movf	___fleq@ff2& (0+255),w,b
 10947  013C64  1960               	xorwf	___fleq@ff1& (0+255),w,b
 10948  013C66  E10A               	bnz	u11330
 10949  013C68  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
 10950  013C6A  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 10951  013C6C  E107               	bnz	u11330
 10952  013C6E  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
 10953  013C70  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 10954  013C72  E104               	bnz	u11330
 10955  013C74  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
 10956  013C76  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 10957  013C78  B4D8               	btfsc	status,2,c
 10958  013C7A  D002               	goto	l11587
 10959  013C7C                     u11330:
 10960                           
 10961                           ; BSR set to: 0
 10962  013C7C  90D8               	bcf	status,0,c
 10963  013C7E  0012               	return	
 10964  013C80                     l11587:
 10965                           
 10966                           ; BSR set to: 0
 10967  013C80  80D8               	bsf	status,0,c
 10968                           
 10969                           ; BSR set to: 0
 10970  013C82  0012               	return		;funcret
 10971  013C84                     __end_of___fleq:
 10972                           	callstack 0
 10973                           
 10974 ;; *************** function ___fldiv *****************
 10975 ;; Defined at:
 10976 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;  b               4    0[BANK0 ] unsigned char 
 10979 ;;  a               4    4[BANK0 ] unsigned char 
 10980 ;; Auto vars:     Size  Location     Type
 10981 ;;  grs             4   19[BANK0 ] unsigned long 
 10982 ;;  rem             4   12[BANK0 ] unsigned long 
 10983 ;;  new_exp         2   17[BANK0 ] short 
 10984 ;;  aexp            1   24[BANK0 ] unsigned char 
 10985 ;;  bexp            1   23[BANK0 ] unsigned char 
 10986 ;;  sign            1   16[BANK0 ] unsigned char 
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  4    0[BANK0 ] unsigned char 
 10989 ;; Registers used:
 10990 ;;		wreg, status,2, status,0
 10991 ;; Tracked objects:
 10992 ;;		On entry : 3F/0
 10993 ;;		On exit  : 3F/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10996 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10997 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10998 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10999 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11000 ;;Total ram usage:       25 bytes
 11001 ;; Hardware stack levels used: 1
 11002 ;; Hardware stack levels required when called: 7
 11003 ;; This function calls:
 11004 ;;		Nothing
 11005 ;; This function is called by:
 11006 ;;		_efgtoa
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           	psect	text25
 11011  012186                     __ptext25:
 11012                           	callstack 0
 11013  012186                     ___fldiv:
 11014                           	callstack 19
 11015                           
 11016                           ; BSR set to: 0
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;incstack = 0
 11020  012186  5163               	movf	(___fldiv@b+3)& (0+255),w,b
 11021  012188  0B80               	andlw	128
 11022  01218A  6F70               	movwf	___fldiv@sign& (0+255),b
 11023  01218C  5163               	movf	(___fldiv@b+3)& (0+255),w,b
 11024  01218E  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
 11025  012190  6F77               	movwf	___fldiv@bexp& (0+255),b
 11026                           
 11027                           ; BSR set to: 0
 11028  012192  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
 11029                           
 11030                           ; BSR set to: 0
 11031  012194  8177               	bsf	___fldiv@bexp& (0+255),0,b
 11032                           
 11033                           ; BSR set to: 0
 11034  012196  5177               	movf	___fldiv@bexp& (0+255),w,b
 11035  012198  B4D8               	btfsc	status,2,c
 11036  01219A  D00D               	goto	l11237
 11037                           
 11038                           ; BSR set to: 0
 11039  01219C  2977               	incf	___fldiv@bexp& (0+255),w,b
 11040  01219E  A4D8               	btfss	status,2,c
 11041  0121A0  D008               	goto	l11233
 11042                           
 11043                           ; BSR set to: 0
 11044  0121A2  0E00               	movlw	0
 11045  0121A4  6F60               	movwf	___fldiv@b& (0+255),b
 11046  0121A6  0E00               	movlw	0
 11047  0121A8  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11048  0121AA  0E00               	movlw	0
 11049  0121AC  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11050  0121AE  0E00               	movlw	0
 11051  0121B0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11052  0121B2                     l11233:
 11053                           
 11054                           ; BSR set to: 0
 11055  0121B2  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
 11056  0121B4  D006               	goto	L12
 11057  0121B6                     l11237:
 11058                           
 11059                           ; BSR set to: 0
 11060  0121B6  0E00               	movlw	0
 11061  0121B8  6F60               	movwf	___fldiv@b& (0+255),b
 11062  0121BA  0E00               	movlw	0
 11063  0121BC  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11064  0121BE  0E00               	movlw	0
 11065  0121C0  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11066  0121C2                     L12:
 11067  0121C2  0E00               	movlw	0
 11068  0121C4  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11069                           
 11070                           ; BSR set to: 0
 11071  0121C6  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 11072  0121C8  0B80               	andlw	128
 11073  0121CA  1B70               	xorwf	___fldiv@sign& (0+255),f,b
 11074                           
 11075                           ; BSR set to: 0
 11076  0121CC  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 11077  0121CE  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
 11078  0121D0  6F78               	movwf	___fldiv@aexp& (0+255),b
 11079                           
 11080                           ; BSR set to: 0
 11081  0121D2  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
 11082                           
 11083                           ; BSR set to: 0
 11084  0121D4  8178               	bsf	___fldiv@aexp& (0+255),0,b
 11085                           
 11086                           ; BSR set to: 0
 11087  0121D6  5178               	movf	___fldiv@aexp& (0+255),w,b
 11088  0121D8  B4D8               	btfsc	status,2,c
 11089  0121DA  D00D               	goto	l11257
 11090                           
 11091                           ; BSR set to: 0
 11092  0121DC  2978               	incf	___fldiv@aexp& (0+255),w,b
 11093  0121DE  A4D8               	btfss	status,2,c
 11094  0121E0  D008               	goto	l11253
 11095                           
 11096                           ; BSR set to: 0
 11097  0121E2  0E00               	movlw	0
 11098  0121E4  6F64               	movwf	___fldiv@a& (0+255),b
 11099  0121E6  0E00               	movlw	0
 11100  0121E8  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 11101  0121EA  0E00               	movlw	0
 11102  0121EC  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 11103  0121EE  0E00               	movlw	0
 11104  0121F0  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 11105  0121F2                     l11253:
 11106                           
 11107                           ; BSR set to: 0
 11108  0121F2  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
 11109  0121F4  D006               	goto	L13
 11110  0121F6                     l11257:
 11111                           
 11112                           ; BSR set to: 0
 11113  0121F6  0E00               	movlw	0
 11114  0121F8  6F64               	movwf	___fldiv@a& (0+255),b
 11115  0121FA  0E00               	movlw	0
 11116  0121FC  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 11117  0121FE  0E00               	movlw	0
 11118  012200  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 11119  012202                     L13:
 11120  012202  0E00               	movlw	0
 11121  012204  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 11122                           
 11123                           ; BSR set to: 0
 11124  012206  5164               	movf	___fldiv@a& (0+255),w,b
 11125  012208  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11126  01220A  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11127  01220C  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11128  01220E  A4D8               	btfss	status,2,c
 11129  012210  D017               	goto	l11271
 11130                           
 11131                           ; BSR set to: 0
 11132  012212  0E00               	movlw	0
 11133  012214  6F60               	movwf	___fldiv@b& (0+255),b
 11134  012216  0E00               	movlw	0
 11135  012218  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11136  01221A  0E00               	movlw	0
 11137  01221C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11138  01221E  0E00               	movlw	0
 11139  012220  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11140                           
 11141                           ; BSR set to: 0
 11142  012222  0E80               	movlw	128
 11143  012224  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11144  012226  0E7F               	movlw	127
 11145  012228  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11146  01222A                     l11265:
 11147                           
 11148                           ; BSR set to: 0
 11149  01222A  5170               	movf	___fldiv@sign& (0+255),w,b
 11150  01222C  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11151                           
 11152                           ; BSR set to: 0
 11153  01222E  C060  F060         	movff	___fldiv@b,?___fldiv
 11154  012232  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
 11155  012236  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
 11156  01223A  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
 11157  01223E  0012               	return	
 11158  012240                     l11271:
 11159                           
 11160                           ; BSR set to: 0
 11161  012240  5177               	movf	___fldiv@bexp& (0+255),w,b
 11162  012242  A4D8               	btfss	status,2,c
 11163  012244  D009               	goto	l11279
 11164                           
 11165                           ; BSR set to: 0
 11166                           
 11167                           ; BSR set to: 0
 11168  012246  0E00               	movlw	0
 11169  012248  6F60               	movwf	?___fldiv& (0+255),b
 11170  01224A  0E00               	movlw	0
 11171  01224C  6F61               	movwf	(?___fldiv+1)& (0+255),b
 11172  01224E  0E00               	movlw	0
 11173  012250  6F62               	movwf	(?___fldiv+2)& (0+255),b
 11174  012252  0E00               	movlw	0
 11175  012254  6F63               	movwf	(?___fldiv+3)& (0+255),b
 11176  012256  0012               	return	
 11177  012258                     l11279:
 11178                           
 11179                           ; BSR set to: 0
 11180  012258  5178               	movf	___fldiv@aexp& (0+255),w,b
 11181  01225A  C077  F068         	movff	___fldiv@bexp,??___fldiv
 11182  01225E  6B69               	clrf	(??___fldiv+1)& (0+255),b
 11183  012260  5F68               	subwf	??___fldiv& (0+255),f,b
 11184  012262  0E00               	movlw	0
 11185  012264  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
 11186  012266  0E7F               	movlw	127
 11187  012268  2568               	addwf	??___fldiv& (0+255),w,b
 11188  01226A  6F71               	movwf	___fldiv@new_exp& (0+255),b
 11189  01226C  0E00               	movlw	0
 11190  01226E  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
 11191  012270  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11192                           
 11193                           ; BSR set to: 0
 11194  012272  C060  F06C         	movff	___fldiv@b,___fldiv@rem
 11195  012276  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
 11196  01227A  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
 11197  01227E  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
 11198                           
 11199                           ; BSR set to: 0
 11200  012282  0E00               	movlw	0
 11201  012284  6F60               	movwf	___fldiv@b& (0+255),b
 11202  012286  0E00               	movlw	0
 11203  012288  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11204  01228A  0E00               	movlw	0
 11205  01228C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11206  01228E  0E00               	movlw	0
 11207  012290  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11208                           
 11209                           ; BSR set to: 0
 11210  012292  0E00               	movlw	0
 11211  012294  6F73               	movwf	___fldiv@grs& (0+255),b
 11212  012296  0E00               	movlw	0
 11213  012298  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
 11214  01229A  0E00               	movlw	0
 11215  01229C  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
 11216  01229E  0E00               	movlw	0
 11217  0122A0  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
 11218                           
 11219                           ; BSR set to: 0
 11220  0122A2  0E00               	movlw	0
 11221  0122A4  6F78               	movwf	___fldiv@aexp& (0+255),b
 11222  0122A6  D028               	goto	l2386
 11223  0122A8                     l11289:
 11224                           
 11225                           ; BSR set to: 0
 11226  0122A8  5178               	movf	___fldiv@aexp& (0+255),w,b
 11227  0122AA  B4D8               	btfsc	status,2,c
 11228  0122AC  D011               	goto	l11297
 11229                           
 11230                           ; BSR set to: 0
 11231  0122AE  90D8               	bcf	status,0,c
 11232  0122B0  376C               	rlcf	___fldiv@rem& (0+255),f,b
 11233  0122B2  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11234  0122B4  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11235  0122B6  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11236  0122B8  90D8               	bcf	status,0,c
 11237  0122BA  3760               	rlcf	___fldiv@b& (0+255),f,b
 11238  0122BC  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11239  0122BE  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11240  0122C0  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11241                           
 11242                           ; BSR set to: 0
 11243  0122C2  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 11244                           
 11245                           ; BSR set to: 0
 11246  0122C4  8160               	bsf	___fldiv@b& (0+255),0,b
 11247                           
 11248                           ; BSR set to: 0
 11249  0122C6  90D8               	bcf	status,0,c
 11250  0122C8  3773               	rlcf	___fldiv@grs& (0+255),f,b
 11251  0122CA  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11252  0122CC  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11253  0122CE  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11254  0122D0                     l11297:
 11255                           
 11256                           ; BSR set to: 0
 11257  0122D0  5164               	movf	___fldiv@a& (0+255),w,b
 11258  0122D2  5D6C               	subwf	___fldiv@rem& (0+255),w,b
 11259  0122D4  5165               	movf	(___fldiv@a+1)& (0+255),w,b
 11260  0122D6  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11261  0122D8  5166               	movf	(___fldiv@a+2)& (0+255),w,b
 11262  0122DA  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11263  0122DC  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 11264  0122DE  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11265  0122E0  A0D8               	btfss	status,0,c
 11266  0122E2  D009               	goto	l11303
 11267                           
 11268                           ; BSR set to: 0
 11269  0122E4  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11270                           
 11271                           ; BSR set to: 0
 11272  0122E6  5164               	movf	___fldiv@a& (0+255),w,b
 11273  0122E8  5F6C               	subwf	___fldiv@rem& (0+255),f,b
 11274  0122EA  5165               	movf	(___fldiv@a+1)& (0+255),w,b
 11275  0122EC  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11276  0122EE  5166               	movf	(___fldiv@a+2)& (0+255),w,b
 11277  0122F0  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11278  0122F2  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 11279  0122F4  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11280  0122F6                     l11303:
 11281                           
 11282                           ; BSR set to: 0
 11283  0122F6  2B78               	incf	___fldiv@aexp& (0+255),f,b
 11284  0122F8                     l2386:
 11285                           
 11286                           ; BSR set to: 0
 11287  0122F8  0E19               	movlw	25
 11288  0122FA  6578               	cpfsgt	___fldiv@aexp& (0+255),b
 11289  0122FC  D7D5               	goto	l11289
 11290                           
 11291                           ; BSR set to: 0
 11292  0122FE  516C               	movf	___fldiv@rem& (0+255),w,b
 11293  012300  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11294  012302  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11295  012304  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11296  012306  B4D8               	btfsc	status,2,c
 11297  012308  D011               	goto	l11315
 11298                           
 11299                           ; BSR set to: 0
 11300  01230A  8173               	bsf	___fldiv@grs& (0+255),0,b
 11301  01230C  D00F               	goto	l11315
 11302  01230E                     l11309:
 11303                           
 11304                           ; BSR set to: 0
 11305  01230E  90D8               	bcf	status,0,c
 11306  012310  3760               	rlcf	___fldiv@b& (0+255),f,b
 11307  012312  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11308  012314  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11309  012316  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11310                           
 11311                           ; BSR set to: 0
 11312  012318  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 11313                           
 11314                           ; BSR set to: 0
 11315  01231A  8160               	bsf	___fldiv@b& (0+255),0,b
 11316                           
 11317                           ; BSR set to: 0
 11318  01231C  90D8               	bcf	status,0,c
 11319  01231E  3773               	rlcf	___fldiv@grs& (0+255),f,b
 11320  012320  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11321  012322  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11322  012324  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11323  012326  0771               	decf	___fldiv@new_exp& (0+255),f,b
 11324  012328  A0D8               	btfss	status,0,c
 11325  01232A  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11326  01232C                     l11315:
 11327                           
 11328                           ; BSR set to: 0
 11329  01232C  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
 11330  01232E  D7EF               	goto	l11309
 11331                           
 11332                           ; BSR set to: 0
 11333  012330  0E00               	movlw	0
 11334  012332  6F78               	movwf	___fldiv@aexp& (0+255),b
 11335                           
 11336                           ; BSR set to: 0
 11337  012334  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11338  012336  D017               	goto	l2397
 11339                           
 11340                           ; BSR set to: 0
 11341  012338  0EFF               	movlw	255
 11342  01233A  1573               	andwf	___fldiv@grs& (0+255),w,b
 11343  01233C  6F68               	movwf	??___fldiv& (0+255),b
 11344  01233E  0EFF               	movlw	255
 11345  012340  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11346  012342  6F69               	movwf	(??___fldiv+1)& (0+255),b
 11347  012344  0EFF               	movlw	255
 11348  012346  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11349  012348  6F6A               	movwf	(??___fldiv+2)& (0+255),b
 11350  01234A  0E7F               	movlw	127
 11351  01234C  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11352  01234E  6F6B               	movwf	(??___fldiv+3)& (0+255),b
 11353  012350  5168               	movf	??___fldiv& (0+255),w,b
 11354  012352  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
 11355  012354  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
 11356  012356  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
 11357  012358  B4D8               	btfsc	status,2,c
 11358  01235A  D003               	goto	l2398
 11359  01235C                     u10940:
 11360                           
 11361                           ; BSR set to: 0
 11362  01235C  0E01               	movlw	1
 11363  01235E  6F78               	movwf	___fldiv@aexp& (0+255),b
 11364  012360  D002               	goto	l2397
 11365  012362                     l2398:
 11366                           
 11367                           ; BSR set to: 0
 11368  012362  B160               	btfsc	___fldiv@b& (0+255),0,b
 11369  012364  D7FB               	goto	u10940
 11370  012366                     l2397:
 11371                           
 11372                           ; BSR set to: 0
 11373  012366  5178               	movf	___fldiv@aexp& (0+255),w,b
 11374  012368  B4D8               	btfsc	status,2,c
 11375  01236A  D01F               	goto	l11335
 11376                           
 11377                           ; BSR set to: 0
 11378  01236C  0E01               	movlw	1
 11379  01236E  2760               	addwf	___fldiv@b& (0+255),f,b
 11380  012370  0E00               	movlw	0
 11381  012372  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11382  012374  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11383  012376  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11384                           
 11385                           ; BSR set to: 0
 11386  012378  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
 11387  01237A  D017               	goto	l11335
 11388                           
 11389                           ; BSR set to: 0
 11390  01237C  C060  F068         	movff	___fldiv@b,??___fldiv
 11391  012380  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
 11392  012384  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
 11393  012388  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
 11394  01238C  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
 11395  01238E  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
 11396  012390  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
 11397  012392  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
 11398  012394  3368               	rrcf	??___fldiv& (0+255),f,b
 11399  012396  C068  F060         	movff	??___fldiv,___fldiv@b
 11400  01239A  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
 11401  01239E  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
 11402  0123A2  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
 11403                           
 11404                           ; BSR set to: 0
 11405  0123A6  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
 11406  0123A8  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11407  0123AA                     l11335:
 11408                           
 11409                           ; BSR set to: 0
 11410  0123AA  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11411  0123AC  D010               	goto	l11339
 11412  0123AE  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11413  0123B0  E103               	bnz	u10980
 11414  0123B2  2971               	incf	___fldiv@new_exp& (0+255),w,b
 11415  0123B4  A0D8               	btfss	status,0,c
 11416  0123B6  D00B               	goto	l11339
 11417  0123B8                     u10980:
 11418                           
 11419                           ; BSR set to: 0
 11420  0123B8  0E00               	movlw	0
 11421  0123BA  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11422  0123BC  6971               	setf	___fldiv@new_exp& (0+255),b
 11423  0123BE  0E00               	movlw	0
 11424  0123C0  6F60               	movwf	___fldiv@b& (0+255),b
 11425  0123C2  0E00               	movlw	0
 11426  0123C4  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11427  0123C6  0E00               	movlw	0
 11428  0123C8  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11429  0123CA  0E00               	movlw	0
 11430  0123CC  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11431  0123CE                     l11339:
 11432                           
 11433                           ; BSR set to: 0
 11434  0123CE  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11435  0123D0  D005               	goto	u10990
 11436  0123D2  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11437  0123D4  E111               	bnz	l11343
 11438  0123D6  0571               	decf	___fldiv@new_exp& (0+255),w,b
 11439  0123D8  B0D8               	btfsc	status,0,c
 11440  0123DA  D00E               	goto	l11343
 11441  0123DC                     u10990:
 11442                           
 11443                           ; BSR set to: 0
 11444  0123DC  0E00               	movlw	0
 11445  0123DE  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11446  0123E0  0E00               	movlw	0
 11447  0123E2  6F71               	movwf	___fldiv@new_exp& (0+255),b
 11448  0123E4  0E00               	movlw	0
 11449  0123E6  6F60               	movwf	___fldiv@b& (0+255),b
 11450  0123E8  0E00               	movlw	0
 11451  0123EA  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11452  0123EC  0E00               	movlw	0
 11453  0123EE  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11454  0123F0  0E00               	movlw	0
 11455  0123F2  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11456  0123F4  0E00               	movlw	0
 11457  0123F6  6F70               	movwf	___fldiv@sign& (0+255),b
 11458  0123F8                     l11343:
 11459                           
 11460                           ; BSR set to: 0
 11461  0123F8  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
 11462                           
 11463                           ; BSR set to: 0
 11464  0123FC  A177               	btfss	___fldiv@bexp& (0+255),0,b
 11465  0123FE  D002               	goto	l11349
 11466                           
 11467                           ; BSR set to: 0
 11468  012400  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
 11469  012402  D001               	goto	l11351
 11470  012404                     l11349:
 11471                           
 11472                           ; BSR set to: 0
 11473  012404  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
 11474  012406                     l11351:
 11475                           
 11476                           ; BSR set to: 0
 11477  012406  90D8               	bcf	status,0,c
 11478  012408  3177               	rrcf	___fldiv@bexp& (0+255),w,b
 11479  01240A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11480  01240C  D70E               	goto	l11265
 11481  01240E                     __end_of___fldiv:
 11482                           	callstack 0
 11483                           
 11484 ;; *************** function ___awmod *****************
 11485 ;; Defined at:
 11486 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;  dividend        2    0[BANK0 ] int 
 11489 ;;  divisor         2    2[BANK0 ] int 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;  sign            1    5[BANK0 ] unsigned char 
 11492 ;;  counter         1    4[BANK0 ] unsigned char 
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  2    0[BANK0 ] int 
 11495 ;; Registers used:
 11496 ;;		wreg, status,2, status,0
 11497 ;; Tracked objects:
 11498 ;;		On entry : 3F/0
 11499 ;;		On exit  : 3F/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11505 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11506 ;;Total ram usage:        6 bytes
 11507 ;; Hardware stack levels used: 1
 11508 ;; Hardware stack levels required when called: 7
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		_efgtoa
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text26
 11517  013D7C                     __ptext26:
 11518                           	callstack 0
 11519  013D7C                     ___awmod:
 11520                           	callstack 19
 11521                           
 11522                           ; BSR set to: 0
 11523                           
 11524                           ; BSR set to: 0
 11525                           ;incstack = 0
 11526  013D7C  0E00               	movlw	0
 11527  013D7E  6F65               	movwf	___awmod@sign& (0+255),b
 11528                           
 11529                           ; BSR set to: 0
 11530  013D80  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11531  013D82  D006               	goto	l11547
 11532                           
 11533                           ; BSR set to: 0
 11534  013D84  6D60               	negf	___awmod@dividend& (0+255),b
 11535  013D86  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11536  013D88  B0D8               	btfsc	status,0,c
 11537  013D8A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11538                           
 11539                           ; BSR set to: 0
 11540  013D8C  0E01               	movlw	1
 11541  013D8E  6F65               	movwf	___awmod@sign& (0+255),b
 11542  013D90                     l11547:
 11543                           
 11544                           ; BSR set to: 0
 11545  013D90  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11546  013D92  D004               	goto	l11551
 11547                           
 11548                           ; BSR set to: 0
 11549  013D94  6D62               	negf	___awmod@divisor& (0+255),b
 11550  013D96  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11551  013D98  B0D8               	btfsc	status,0,c
 11552  013D9A  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11553  013D9C                     l11551:
 11554                           
 11555                           ; BSR set to: 0
 11556  013D9C  5162               	movf	___awmod@divisor& (0+255),w,b
 11557  013D9E  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11558  013DA0  B4D8               	btfsc	status,2,c
 11559  013DA2  D018               	goto	l11567
 11560                           
 11561                           ; BSR set to: 0
 11562  013DA4  0E01               	movlw	1
 11563  013DA6  6F64               	movwf	___awmod@counter& (0+255),b
 11564  013DA8  D004               	goto	l11557
 11565  013DAA                     l11555:
 11566                           
 11567                           ; BSR set to: 0
 11568  013DAA  90D8               	bcf	status,0,c
 11569  013DAC  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11570  013DAE  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11571  013DB0  2B64               	incf	___awmod@counter& (0+255),f,b
 11572  013DB2                     l11557:
 11573                           
 11574                           ; BSR set to: 0
 11575  013DB2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11576  013DB4  D7FA               	goto	l11555
 11577  013DB6                     u11280:
 11578                           
 11579                           ; BSR set to: 0
 11580  013DB6  5162               	movf	___awmod@divisor& (0+255),w,b
 11581  013DB8  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11582  013DBA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11583  013DBC  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11584  013DBE  A0D8               	btfss	status,0,c
 11585  013DC0  D004               	goto	l11563
 11586                           
 11587                           ; BSR set to: 0
 11588  013DC2  5162               	movf	___awmod@divisor& (0+255),w,b
 11589  013DC4  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11590  013DC6  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11591  013DC8  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11592  013DCA                     l11563:
 11593                           
 11594                           ; BSR set to: 0
 11595  013DCA  90D8               	bcf	status,0,c
 11596  013DCC  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11597  013DCE  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11598                           
 11599                           ; BSR set to: 0
 11600  013DD0  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11601  013DD2  D7F1               	goto	u11280
 11602  013DD4                     l11567:
 11603                           
 11604                           ; BSR set to: 0
 11605  013DD4  5165               	movf	___awmod@sign& (0+255),w,b
 11606  013DD6  B4D8               	btfsc	status,2,c
 11607  013DD8  D004               	goto	l11571
 11608                           
 11609                           ; BSR set to: 0
 11610  013DDA  6D60               	negf	___awmod@dividend& (0+255),b
 11611  013DDC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11612  013DDE  B0D8               	btfsc	status,0,c
 11613  013DE0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11614  013DE2                     l11571:
 11615                           
 11616                           ; BSR set to: 0
 11617  013DE2  C060  F060         	movff	___awmod@dividend,?___awmod
 11618  013DE6  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11619                           
 11620                           ; BSR set to: 0
 11621  013DEA  0012               	return		;funcret
 11622  013DEC                     __end_of___awmod:
 11623                           	callstack 0
 11624                           
 11625 ;; *************** function ___awdiv *****************
 11626 ;; Defined at:
 11627 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  dividend        2    0[BANK0 ] int 
 11630 ;;  divisor         2    2[BANK0 ] int 
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;  quotient        2    6[BANK0 ] int 
 11633 ;;  sign            1    5[BANK0 ] unsigned char 
 11634 ;;  counter         1    4[BANK0 ] unsigned char 
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  2    0[BANK0 ] int 
 11637 ;; Registers used:
 11638 ;;		wreg, status,2, status,0
 11639 ;; Tracked objects:
 11640 ;;		On entry : 3F/0
 11641 ;;		On exit  : 3F/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11645 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11648 ;;Total ram usage:        8 bytes
 11649 ;; Hardware stack levels used: 1
 11650 ;; Hardware stack levels required when called: 7
 11651 ;; This function calls:
 11652 ;;		Nothing
 11653 ;; This function is called by:
 11654 ;;		_efgtoa
 11655 ;; This function uses a non-reentrant model
 11656 ;;
 11657                           
 11658                           	psect	text27
 11659  013C84                     __ptext27:
 11660                           	callstack 0
 11661  013C84                     ___awdiv:
 11662                           	callstack 19
 11663                           
 11664                           ; BSR set to: 0
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;incstack = 0
 11668  013C84  0E00               	movlw	0
 11669  013C86  6F65               	movwf	___awdiv@sign& (0+255),b
 11670                           
 11671                           ; BSR set to: 0
 11672  013C88  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11673  013C8A  D006               	goto	l11503
 11674                           
 11675                           ; BSR set to: 0
 11676  013C8C  6D62               	negf	___awdiv@divisor& (0+255),b
 11677  013C8E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11678  013C90  B0D8               	btfsc	status,0,c
 11679  013C92  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11680                           
 11681                           ; BSR set to: 0
 11682  013C94  0E01               	movlw	1
 11683  013C96  6F65               	movwf	___awdiv@sign& (0+255),b
 11684  013C98                     l11503:
 11685                           
 11686                           ; BSR set to: 0
 11687  013C98  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11688  013C9A  D006               	goto	l11509
 11689                           
 11690                           ; BSR set to: 0
 11691  013C9C  6D60               	negf	___awdiv@dividend& (0+255),b
 11692  013C9E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11693  013CA0  B0D8               	btfsc	status,0,c
 11694  013CA2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11695                           
 11696                           ; BSR set to: 0
 11697  013CA4  0E01               	movlw	1
 11698  013CA6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 11699  013CA8                     l11509:
 11700                           
 11701                           ; BSR set to: 0
 11702  013CA8  0E00               	movlw	0
 11703  013CAA  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 11704  013CAC  0E00               	movlw	0
 11705  013CAE  6F66               	movwf	___awdiv@quotient& (0+255),b
 11706                           
 11707                           ; BSR set to: 0
 11708  013CB0  5162               	movf	___awdiv@divisor& (0+255),w,b
 11709  013CB2  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11710  013CB4  B4D8               	btfsc	status,2,c
 11711  013CB6  D01C               	goto	l11531
 11712                           
 11713                           ; BSR set to: 0
 11714  013CB8  0E01               	movlw	1
 11715  013CBA  6F64               	movwf	___awdiv@counter& (0+255),b
 11716  013CBC  D004               	goto	l11517
 11717  013CBE                     l11515:
 11718                           
 11719                           ; BSR set to: 0
 11720  013CBE  90D8               	bcf	status,0,c
 11721  013CC0  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 11722  013CC2  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11723  013CC4  2B64               	incf	___awdiv@counter& (0+255),f,b
 11724  013CC6                     l11517:
 11725                           
 11726                           ; BSR set to: 0
 11727  013CC6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11728  013CC8  D7FA               	goto	l11515
 11729  013CCA                     u11220:
 11730                           
 11731                           ; BSR set to: 0
 11732  013CCA  90D8               	bcf	status,0,c
 11733  013CCC  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 11734  013CCE  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11735                           
 11736                           ; BSR set to: 0
 11737  013CD0  5162               	movf	___awdiv@divisor& (0+255),w,b
 11738  013CD2  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 11739  013CD4  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11740  013CD6  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11741  013CD8  A0D8               	btfss	status,0,c
 11742  013CDA  D005               	goto	l11527
 11743                           
 11744                           ; BSR set to: 0
 11745  013CDC  5162               	movf	___awdiv@divisor& (0+255),w,b
 11746  013CDE  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 11747  013CE0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11748  013CE2  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11749                           
 11750                           ; BSR set to: 0
 11751  013CE4  8166               	bsf	___awdiv@quotient& (0+255),0,b
 11752  013CE6                     l11527:
 11753                           
 11754                           ; BSR set to: 0
 11755  013CE6  90D8               	bcf	status,0,c
 11756  013CE8  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11757  013CEA  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 11758                           
 11759                           ; BSR set to: 0
 11760  013CEC  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 11761  013CEE  D7ED               	goto	u11220
 11762  013CF0                     l11531:
 11763                           
 11764                           ; BSR set to: 0
 11765  013CF0  5165               	movf	___awdiv@sign& (0+255),w,b
 11766  013CF2  B4D8               	btfsc	status,2,c
 11767  013CF4  D004               	goto	l11535
 11768                           
 11769                           ; BSR set to: 0
 11770  013CF6  6D66               	negf	___awdiv@quotient& (0+255),b
 11771  013CF8  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11772  013CFA  B0D8               	btfsc	status,0,c
 11773  013CFC  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11774  013CFE                     l11535:
 11775                           
 11776                           ; BSR set to: 0
 11777  013CFE  C066  F060         	movff	___awdiv@quotient,?___awdiv
 11778  013D02  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 11779                           
 11780                           ; BSR set to: 0
 11781  013D06  0012               	return		;funcret
 11782  013D08                     __end_of___awdiv:
 11783                           	callstack 0
 11784                           
 11785 ;; *************** function _atoi *****************
 11786 ;; Defined at:
 11787 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 11790 ;;		 -> STR_19(23), STR_18(24), STR_17(24), STR_16(24), 
 11791 ;;		 -> STR_15(107), STR_14(3), STR_13(6), STR_12(17), 
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;  n               2   14[BANK0 ] int 
 11794 ;;  neg             2   12[BANK0 ] int 
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  2    6[BANK0 ] int 
 11797 ;; Registers used:
 11798 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : 3F/0
 11801 ;;		On exit  : 3F/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11805 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11806 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11807 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11808 ;;Total ram usage:       10 bytes
 11809 ;; Hardware stack levels used: 1
 11810 ;; Hardware stack levels required when called: 8
 11811 ;; This function calls:
 11812 ;;		___wmul
 11813 ;;		_isdigit
 11814 ;;		_isspace
 11815 ;; This function is called by:
 11816 ;;		_vfpfcnvrt
 11817 ;; This function uses a non-reentrant model
 11818 ;;
 11819                           
 11820                           	psect	text28
 11821  012FB6                     __ptext28:
 11822                           	callstack 0
 11823  012FB6                     _atoi:
 11824                           	callstack 19
 11825                           
 11826                           ; BSR set to: 0
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;incstack = 0
 11830  012FB6  0E00               	movlw	0
 11831  012FB8  6F6F               	movwf	(atoi@n+1)& (0+255),b
 11832  012FBA  0E00               	movlw	0
 11833  012FBC  6F6E               	movwf	atoi@n& (0+255),b
 11834  012FBE  0E00               	movlw	0
 11835  012FC0  6F6D               	movwf	(atoi@neg+1)& (0+255),b
 11836  012FC2  0E00               	movlw	0
 11837  012FC4  6F6C               	movwf	atoi@neg& (0+255),b
 11838  012FC6  D002               	goto	l12271
 11839  012FC8                     l12267:
 11840                           
 11841                           ; BSR set to: 0
 11842  012FC8  4B66               	infsnz	atoi@s& (0+255),f,b
 11843  012FCA  2B67               	incf	(atoi@s+1)& (0+255),f,b
 11844  012FCC                     l12271:
 11845                           
 11846                           ; BSR set to: 0
 11847  012FCC  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11848  012FD2  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11849  012FD8                     	if	0	;tblptru may be non-zero
 11850  012FD8                     	endif
 11851  012FD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11852  012FD8  0E00               	movlw	low (__mediumconst shr (0+16))
 11853  012FDA  6EF8               	movwf	tblptru,c
 11854  012FDC                     	endif
 11855  012FDC  0008               	tblrd		*
 11856  012FDE  50F5               	movf	tablat,w,c
 11857  012FE0  0A20               	xorlw	32
 11858  012FE2  B4D8               	btfsc	status,2,c
 11859  012FE4  D7F1               	goto	l12267
 11860                           
 11861                           ; BSR set to: 0
 11862  012FE6  0EF7               	movlw	247
 11863  012FE8  6F68               	movwf	??_atoi& (0+255),b
 11864  012FEA  0EFF               	movlw	255
 11865  012FEC  6F69               	movwf	(??_atoi+1)& (0+255),b
 11866  012FEE  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11867  012FF4  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11868  012FFA                     	if	0	;tblptru may be non-zero
 11869  012FFA                     	endif
 11870  012FFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11871  012FFA  0E00               	movlw	low (__mediumconst shr (0+16))
 11872  012FFC  6EF8               	movwf	tblptru,c
 11873  012FFE                     	endif
 11874  012FFE  0008               	tblrd		*
 11875  013000  50F5               	movf	tablat,w,c
 11876  013002  6F6A               	movwf	(??_atoi+2)& (0+255),b
 11877  013004  6B6B               	clrf	(??_atoi+3)& (0+255),b
 11878  013006  5168               	movf	??_atoi& (0+255),w,b
 11879  013008  276A               	addwf	(??_atoi+2)& (0+255),f,b
 11880  01300A  5169               	movf	(??_atoi+1)& (0+255),w,b
 11881  01300C  236B               	addwfc	(??_atoi+3)& (0+255),f,b
 11882  01300E  516B               	movf	(??_atoi+3)& (0+255),w,b
 11883  013010  E10C               	bnz	l12279
 11884  013012  0E05               	movlw	5
 11885  013014  5D6A               	subwf	(??_atoi+2)& (0+255),w,b
 11886  013016  B0D8               	btfsc	status,0,c
 11887  013018  D008               	goto	l12279
 11888  01301A  D7D6               	goto	l12267
 11889  01301C                     l12275:
 11890                           
 11891                           ; BSR set to: 0
 11892  01301C  0E00               	movlw	0
 11893  01301E  6F6D               	movwf	(atoi@neg+1)& (0+255),b
 11894  013020  0E01               	movlw	1
 11895  013022  6F6C               	movwf	atoi@neg& (0+255),b
 11896  013024                     l12277:
 11897                           
 11898                           ; BSR set to: 0
 11899  013024  4B66               	infsnz	atoi@s& (0+255),f,b
 11900  013026  2B67               	incf	(atoi@s+1)& (0+255),f,b
 11901  013028  D036               	goto	l12287
 11902  01302A                     l12279:
 11903                           
 11904                           ; BSR set to: 0
 11905  01302A  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11906  013030  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11907  013036                     	if	0	;tblptru may be non-zero
 11908  013036                     	endif
 11909  013036                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11910  013036  0E00               	movlw	low (__mediumconst shr (0+16))
 11911  013038  6EF8               	movwf	tblptru,c
 11912  01303A                     	endif
 11913  01303A  0008               	tblrd		*
 11914  01303C  50F5               	movf	tablat,w,c
 11915  01303E  6F68               	movwf	??_atoi& (0+255),b
 11916  013040  6B69               	clrf	(??_atoi+1)& (0+255),b
 11917                           
 11918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11919                           ; Switch size 1, requested type "simple"
 11920                           ; Number of cases is 1, Range of values is 0 to 0
 11921                           ; switch strategies available:
 11922                           ; Name         Instructions Cycles
 11923                           ; simple_byte            4     3 (average)
 11924                           ;	Chosen strategy is simple_byte
 11925  013042  5169               	movf	(??_atoi+1)& (0+255),w,b
 11926  013044  0A00               	xorlw	0	; case 0
 11927  013046  A4D8               	btfss	status,2,c
 11928  013048  D026               	goto	l12287
 11929                           
 11930                           ; BSR set to: 0
 11931                           ; Switch size 1, requested type "simple"
 11932                           ; Number of cases is 2, Range of values is 43 to 45
 11933                           ; switch strategies available:
 11934                           ; Name         Instructions Cycles
 11935                           ; simple_byte            7     4 (average)
 11936                           ;	Chosen strategy is simple_byte
 11937  01304A  5168               	movf	??_atoi& (0+255),w,b
 11938  01304C  0A2B               	xorlw	43	; case 43
 11939  01304E  B4D8               	btfsc	status,2,c
 11940  013050  D7E9               	goto	l12277
 11941  013052  0A06               	xorlw	6	; case 45
 11942  013054  B4D8               	btfsc	status,2,c
 11943  013056  D7E2               	goto	l12275
 11944  013058  D01E               	goto	l12287
 11945  01305A                     l12281:
 11946                           
 11947                           ; BSR set to: 0
 11948  01305A  C06E  F060         	movff	atoi@n,___wmul@multiplier
 11949  01305E  C06F  F061         	movff	atoi@n+1,___wmul@multiplier+1
 11950  013062  0E00               	movlw	0
 11951  013064  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11952  013066  0E0A               	movlw	10
 11953  013068  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11954  01306A  EC25  F0A5         	call	___wmul	;wreg free
 11955  01306E  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11956  013074  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11957  01307A                     	if	0	;tblptru may be non-zero
 11958  01307A                     	endif
 11959  01307A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11960  01307A  0E00               	movlw	low (__mediumconst shr (0+16))
 11961  01307C  6EF8               	movwf	tblptru,c
 11962  01307E                     	endif
 11963  01307E  0008               	tblrd		*
 11964  013080  50F5               	movf	tablat,w,c
 11965  013082  5F60               	subwf	?___wmul& (0+255),f,b
 11966  013084  0E00               	movlw	0
 11967  013086  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
 11968  013088  0E30               	movlw	48
 11969  01308A  2560               	addwf	?___wmul& (0+255),w,b
 11970  01308C  6F6E               	movwf	atoi@n& (0+255),b
 11971  01308E  0E00               	movlw	0
 11972  013090  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 11973  013092  6F6F               	movwf	(atoi@n+1)& (0+255),b
 11974  013094  D7C7               	goto	l12277
 11975  013096                     l12287:
 11976                           
 11977                           ; BSR set to: 0
 11978  013096  0ED0               	movlw	208
 11979  013098  6F68               	movwf	??_atoi& (0+255),b
 11980  01309A  0EFF               	movlw	255
 11981  01309C  6F69               	movwf	(??_atoi+1)& (0+255),b
 11982  01309E  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11983  0130A4  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11984  0130AA                     	if	0	;tblptru may be non-zero
 11985  0130AA                     	endif
 11986  0130AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11987  0130AA  0E00               	movlw	low (__mediumconst shr (0+16))
 11988  0130AC  6EF8               	movwf	tblptru,c
 11989  0130AE                     	endif
 11990  0130AE  0008               	tblrd		*
 11991  0130B0  50F5               	movf	tablat,w,c
 11992  0130B2  6F6A               	movwf	(??_atoi+2)& (0+255),b
 11993  0130B4  6B6B               	clrf	(??_atoi+3)& (0+255),b
 11994  0130B6  5168               	movf	??_atoi& (0+255),w,b
 11995  0130B8  276A               	addwf	(??_atoi+2)& (0+255),f,b
 11996  0130BA  5169               	movf	(??_atoi+1)& (0+255),w,b
 11997  0130BC  236B               	addwfc	(??_atoi+3)& (0+255),f,b
 11998  0130BE  516B               	movf	(??_atoi+3)& (0+255),w,b
 11999  0130C0  E104               	bnz	u12660
 12000  0130C2  0E0A               	movlw	10
 12001  0130C4  5D6A               	subwf	(??_atoi+2)& (0+255),w,b
 12002  0130C6  A0D8               	btfss	status,0,c
 12003  0130C8  D7C8               	goto	l12281
 12004  0130CA                     u12660:
 12005                           
 12006                           ; BSR set to: 0
 12007  0130CA  516C               	movf	atoi@neg& (0+255),w,b
 12008  0130CC  116D               	iorwf	(atoi@neg+1)& (0+255),w,b
 12009  0130CE  A4D8               	btfss	status,2,c
 12010  0130D0  D00D               	goto	l2755
 12011                           
 12012                           ; BSR set to: 0
 12013  0130D2  C06E  F068         	movff	atoi@n,??_atoi
 12014  0130D6  C06F  F069         	movff	atoi@n+1,??_atoi+1
 12015  0130DA  1F68               	comf	??_atoi& (0+255),f,b
 12016  0130DC  1F69               	comf	(??_atoi+1)& (0+255),f,b
 12017  0130DE  4B68               	infsnz	??_atoi& (0+255),f,b
 12018  0130E0  2B69               	incf	(??_atoi+1)& (0+255),f,b
 12019  0130E2  C068  F066         	movff	??_atoi,?_atoi
 12020  0130E6  C069  F067         	movff	??_atoi+1,?_atoi+1
 12021  0130EA  0012               	return	
 12022  0130EC                     l2755:
 12023                           
 12024                           ; BSR set to: 0
 12025  0130EC  C06E  F066         	movff	atoi@n,?_atoi
 12026  0130F0  C06F  F067         	movff	atoi@n+1,?_atoi+1
 12027                           
 12028                           ; BSR set to: 0
 12029  0130F4  0012               	return		;funcret
 12030  0130F6                     __end_of_atoi:
 12031                           	callstack 0
 12032                           
 12033 ;; *************** function _isspace *****************
 12034 ;; Defined at:
 12035 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  c               2    0[BANK0 ] int 
 12038 ;; Auto vars:     Size  Location     Type
 12039 ;;		None
 12040 ;; Return value:  Size  Location     Type
 12041 ;;                  2    0[BANK0 ] int 
 12042 ;; Registers used:
 12043 ;;		wreg, status,2, status,0
 12044 ;; Tracked objects:
 12045 ;;		On entry : 0/0
 12046 ;;		On exit  : 3F/0
 12047 ;;		Unchanged: 0/0
 12048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12052 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12053 ;;Total ram usage:        7 bytes
 12054 ;; Hardware stack levels used: 1
 12055 ;; Hardware stack levels required when called: 7
 12056 ;; This function calls:
 12057 ;;		Nothing
 12058 ;; This function is called by:
 12059 ;;		_atoi
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text29
 12064  0145AA                     __ptext29:
 12065                           	callstack 0
 12066  0145AA                     _isspace:
 12067                           	callstack 19
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;incstack = 0
 12071  0145AA  0E01               	movlw	1
 12072  0145AC  6E20               	movwf	_isspace$4284^0,c
 12073  0145AE  0E20               	movlw	32
 12074  0145B0  0100               	movlb	0	; () banked
 12075  0145B2  1960               	xorwf	isspace@c& (0+255),w,b
 12076  0145B4  1161               	iorwf	(isspace@c+1)& (0+255),w,b
 12077  0145B6  B4D8               	btfsc	status,2,c
 12078  0145B8  D014               	goto	l11801
 12079                           
 12080                           ; BSR set to: 0
 12081  0145BA  0EF7               	movlw	247
 12082  0145BC  6F62               	movwf	??_isspace& (0+255),b
 12083  0145BE  0EFF               	movlw	255
 12084  0145C0  6F63               	movwf	(??_isspace+1)& (0+255),b
 12085  0145C2  C060  F064         	movff	isspace@c,??_isspace+2
 12086  0145C6  C061  F065         	movff	isspace@c+1,??_isspace+3
 12087  0145CA  5162               	movf	??_isspace& (0+255),w,b
 12088  0145CC  2764               	addwf	(??_isspace+2)& (0+255),f,b
 12089  0145CE  5163               	movf	(??_isspace+1)& (0+255),w,b
 12090  0145D0  2365               	addwfc	(??_isspace+3)& (0+255),f,b
 12091  0145D2  5165               	movf	(??_isspace+3)& (0+255),w,b
 12092  0145D4  E104               	bnz	u11810
 12093  0145D6  0E05               	movlw	5
 12094  0145D8  5D64               	subwf	(??_isspace+2)& (0+255),w,b
 12095  0145DA  A0D8               	btfss	status,0,c
 12096  0145DC  D002               	goto	l11801
 12097  0145DE                     u11810:
 12098                           
 12099                           ; BSR set to: 0
 12100  0145DE  0E00               	movlw	0
 12101  0145E0  6E20               	movwf	_isspace$4284^0,c
 12102  0145E2                     l11801:
 12103                           
 12104                           ; BSR set to: 0
 12105  0145E2  C020  F060         	movff	_isspace$4284,?_isspace
 12106  0145E6  6B61               	clrf	(?_isspace+1)& (0+255),b
 12107                           
 12108                           ; BSR set to: 0
 12109  0145E8  0012               	return		;funcret
 12110  0145EA                     __end_of_isspace:
 12111                           	callstack 0
 12112                           
 12113 ;; *************** function _isdigit *****************
 12114 ;; Defined at:
 12115 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;  c               2    0[BANK0 ] int 
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;		None
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  2    0[BANK0 ] int 
 12122 ;; Registers used:
 12123 ;;		wreg, status,2, status,0
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 3F/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12131 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12132 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12133 ;;Total ram usage:        6 bytes
 12134 ;; Hardware stack levels used: 1
 12135 ;; Hardware stack levels required when called: 7
 12136 ;; This function calls:
 12137 ;;		Nothing
 12138 ;; This function is called by:
 12139 ;;		_vfpfcnvrt
 12140 ;;		_atoi
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text30
 12145  0148F8                     __ptext30:
 12146                           	callstack 0
 12147  0148F8                     _isdigit:
 12148                           	callstack 20
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;incstack = 0
 12152  0148F8  0ED0               	movlw	208
 12153  0148FA  0100               	movlb	0	; () banked
 12154  0148FC  6F62               	movwf	??_isdigit& (0+255),b
 12155  0148FE  0EFF               	movlw	255
 12156  014900  6F63               	movwf	(??_isdigit+1)& (0+255),b
 12157  014902  C060  F064         	movff	isdigit@c,??_isdigit+2
 12158  014906  C061  F065         	movff	isdigit@c+1,??_isdigit+3
 12159  01490A  5162               	movf	??_isdigit& (0+255),w,b
 12160  01490C  2764               	addwf	(??_isdigit+2)& (0+255),f,b
 12161  01490E  5163               	movf	(??_isdigit+1)& (0+255),w,b
 12162  014910  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
 12163  014912  5165               	movf	(??_isdigit+3)& (0+255),w,b
 12164  014914  E106               	bnz	u11780
 12165  014916  0E0A               	movlw	10
 12166  014918  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
 12167  01491A  B0D8               	btfsc	status,0,c
 12168  01491C  D002               	goto	u11780
 12169  01491E  0E01               	movlw	1
 12170  014920  D001               	goto	u11790
 12171  014922                     u11780:
 12172  014922  0E00               	movlw	0
 12173  014924                     u11790:
 12174  014924  6F60               	movwf	?_isdigit& (0+255),b
 12175  014926  6B61               	clrf	(?_isdigit+1)& (0+255),b
 12176                           
 12177                           ; BSR set to: 0
 12178  014928  0012               	return		;funcret
 12179  01492A                     __end_of_isdigit:
 12180                           	callstack 0
 12181                           
 12182 ;; *************** function ___wmul *****************
 12183 ;; Defined at:
 12184 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12187 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;  product         2    4[BANK0 ] unsigned int 
 12190 ;; Return value:  Size  Location     Type
 12191 ;;                  2    0[BANK0 ] unsigned int 
 12192 ;; Registers used:
 12193 ;;		wreg, status,2, status,0, prodl, prodh
 12194 ;; Tracked objects:
 12195 ;;		On entry : 3F/0
 12196 ;;		On exit  : 3F/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12199 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12200 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12202 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12203 ;;Total ram usage:        6 bytes
 12204 ;; Hardware stack levels used: 1
 12205 ;; Hardware stack levels required when called: 7
 12206 ;; This function calls:
 12207 ;;		Nothing
 12208 ;; This function is called by:
 12209 ;;		_atoi
 12210 ;; This function uses a non-reentrant model
 12211 ;;
 12212                           
 12213                           	psect	text31
 12214  014A4A                     __ptext31:
 12215                           	callstack 0
 12216  014A4A                     ___wmul:
 12217                           	callstack 19
 12218                           
 12219                           ; BSR set to: 0
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;incstack = 0
 12223  014A4A  5160               	movf	___wmul@multiplier& (0+255),w,b
 12224  014A4C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 12225  014A4E  006F FFCC  F064    	movff	prodl,___wmul@product
 12226  014A54  006F FFD0  F065    	movff	prodh,___wmul@product+1
 12227  014A5A  5160               	movf	___wmul@multiplier& (0+255),w,b
 12228  014A5C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12229  014A5E  50F3               	movf	243,w,c
 12230  014A60  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 12231  014A62  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12232  014A64  0362               	mulwf	___wmul@multiplicand& (0+255),b
 12233  014A66  50F3               	movf	243,w,c
 12234  014A68  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 12235                           
 12236                           ; BSR set to: 0
 12237  014A6A  C064  F060         	movff	___wmul@product,?___wmul
 12238  014A6E  C065  F061         	movff	___wmul@product+1,?___wmul+1
 12239                           
 12240                           ; BSR set to: 0
 12241  014A72  0012               	return		;funcret
 12242  014A74                     __end_of___wmul:
 12243                           	callstack 0
 12244                           
 12245 ;; *************** function _init_display *****************
 12246 ;; Defined at:
 12247 ;;		line 31 in file "eadog.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;		None
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;		None
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  1    wreg      void 
 12254 ;; Registers used:
 12255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 3F/3D
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12265 ;;Total ram usage:        0 bytes
 12266 ;; Hardware stack levels used: 1
 12267 ;; Hardware stack levels required when called: 9
 12268 ;; This function calls:
 12269 ;;		_ringBufS_init
 12270 ;;		_send_lcd_cmd
 12271 ;;		_send_lcd_cmd_long
 12272 ;;		_send_lcd_data
 12273 ;;		_wdtdelay
 12274 ;; This function is called by:
 12275 ;;		_main
 12276 ;; This function uses a non-reentrant model
 12277 ;;
 12278                           
 12279                           	psect	text32
 12280  013728                     __ptext32:
 12281                           	callstack 0
 12282  013728                     _init_display:
 12283                           	callstack 21
 12284                           
 12285                           ;eadog.c: 33:  spi_link.tx1a = &ring_buf1;
 12286                           
 12287                           ; BSR set to: 0
 12288                           ;incstack = 0
 12289  013728  0E40               	movlw	low _ring_buf1
 12290  01372A  0101               	movlb	1	; () banked
 12291  01372C  6F06               	movwf	(_spi_link+6)& (0+255),b	;volatile
 12292  01372E  0E03               	movlw	high _ring_buf1
 12293  013730  6F07               	movwf	(_spi_link+7)& (0+255),b	;volatile
 12294                           
 12295                           ; BSR set to: 1
 12296                           ;eadog.c: 34:  ringBufS_init(spi_link.tx1a);
 12297  013732  C106  F06C         	movff	_spi_link+6,ringBufS_init@_this	;volatile
 12298  013736  C107  F06D         	movff	_spi_link+7,ringBufS_init@_this+1	;volatile
 12299  01373A  EC00  F0A6         	call	_ringBufS_init	;wreg free
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;eadog.c: 40:  SPI1CON0bits.EN = 0;
 12303  01373E  013D               	movlb	61	; () banked
 12304  013740  9F14               	bcf	20,7,b	;volatile
 12305                           
 12306                           ; BSR set to: 61
 12307                           ;eadog.c: 42:  SPI1CON1 = 0x20;
 12308  013742  0E20               	movlw	32
 12309  013744  6F15               	movwf	21,b	;volatile
 12310                           
 12311                           ; BSR set to: 61
 12312                           ;eadog.c: 44:  SPI1CON2 = 0x03;
 12313  013746  0E03               	movlw	3
 12314  013748  6F16               	movwf	22,b	;volatile
 12315                           
 12316                           ; BSR set to: 61
 12317                           ;eadog.c: 46:  SPI1BAUD = 0x04;
 12318  01374A  0E04               	movlw	4
 12319  01374C  6F19               	movwf	25,b	;volatile
 12320                           
 12321                           ; BSR set to: 61
 12322                           ;eadog.c: 48:  SPI1CLK = 0x02;
 12323  01374E  0E02               	movlw	2
 12324  013750  6F1C               	movwf	28,b	;volatile
 12325                           
 12326                           ; BSR set to: 61
 12327                           ;eadog.c: 50:  SPI1CON0 = 0x83;
 12328  013752  0E83               	movlw	131
 12329  013754  6F14               	movwf	20,b	;volatile
 12330                           
 12331                           ; BSR set to: 61
 12332                           ;eadog.c: 51:  SPI1CON0bits.EN = 1;
 12333  013756  8F14               	bsf	20,7,b	;volatile
 12334                           
 12335                           ; BSR set to: 61
 12336                           ;eadog.c: 53:  wdtdelay(350000);
 12337  013758  0E30               	movlw	48
 12338  01375A  0100               	movlb	0	; () banked
 12339  01375C  6F60               	movwf	wdtdelay@delay& (0+255),b
 12340  01375E  0E57               	movlw	87
 12341  013760  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12342  013762  0E05               	movlw	5
 12343  013764  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12344  013766  0E00               	movlw	0
 12345  013768  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12346  01376A  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;eadog.c: 54:  send_lcd_cmd_long(0x46);
 12350  01376E  0E46               	movlw	70
 12351  013770  EC35  F0A3         	call	_send_lcd_cmd_long
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;eadog.c: 55:  send_lcd_cmd(0x41);
 12355  013774  0E41               	movlw	65
 12356  013776  EC54  F0A3         	call	_send_lcd_cmd
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;eadog.c: 56:  wdtdelay(80);
 12360  01377A  0E50               	movlw	80
 12361  01377C  6F60               	movwf	wdtdelay@delay& (0+255),b
 12362  01377E  0E00               	movlw	0
 12363  013780  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12364  013782  0E00               	movlw	0
 12365  013784  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12366  013786  0E00               	movlw	0
 12367  013788  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12368  01378A  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;eadog.c: 57:  send_lcd_cmd(0x53);
 12372  01378E  0E53               	movlw	83
 12373  013790  EC54  F0A3         	call	_send_lcd_cmd
 12374                           
 12375                           ; BSR set to: 0
 12376                           ;eadog.c: 58:  send_lcd_data(2);
 12377  013794  0E02               	movlw	2
 12378  013796  EC62  F0A5         	call	_send_lcd_data
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;eadog.c: 59:  wdtdelay(80);
 12382  01379A  0E50               	movlw	80
 12383  01379C  6F60               	movwf	wdtdelay@delay& (0+255),b
 12384  01379E  0E00               	movlw	0
 12385  0137A0  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12386  0137A2  0E00               	movlw	0
 12387  0137A4  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12388  0137A6  0E00               	movlw	0
 12389  0137A8  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12390  0137AA  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;eadog.c: 60:  send_lcd_cmd_long(0x51);
 12394  0137AE  0E51               	movlw	81
 12395  0137B0  EC35  F0A3         	call	_send_lcd_cmd_long
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;eadog.c: 61:  SPI1CON0bits.EN = 0;
 12399  0137B4  013D               	movlb	61	; () banked
 12400  0137B6  9F14               	bcf	20,7,b	;volatile
 12401                           
 12402                           ; BSR set to: 61
 12403                           ;eadog.c: 62:  SPI1CON2 = 0x02;
 12404  0137B8  0E02               	movlw	2
 12405  0137BA  6F16               	movwf	22,b	;volatile
 12406                           
 12407                           ; BSR set to: 61
 12408                           ;eadog.c: 63:  SPI1CON0bits.EN = 1;
 12409  0137BC  8F14               	bsf	20,7,b	;volatile
 12410                           
 12411                           ; BSR set to: 61
 12412                           ;eadog.c: 65:  SPI1INTFbits.SPI1TXUIF = 0;
 12413  0137BE  931A               	bcf	26,1,b	;volatile
 12414                           
 12415                           ; BSR set to: 61
 12416                           ;eadog.c: 66:  DMA1CON1bits.DMODE = 0;
 12417  0137C0  0E3F               	movlw	-193
 12418  0137C2  013B               	movlb	59	; () banked
 12419  0137C4  17FD               	andwf	253,f,b	;volatile
 12420                           
 12421                           ; BSR set to: 59
 12422                           ;eadog.c: 67:  DMA1CON1bits.DSTP = 0;
 12423  0137C6  9BFD               	bcf	253,5,b	;volatile
 12424                           
 12425                           ; BSR set to: 59
 12426                           ;eadog.c: 68:  DMA1CON1bits.SMODE = 1;
 12427  0137C8  51FD               	movf	253,w,b	;volatile
 12428  0137CA  0BF9               	andlw	-7
 12429  0137CC  0902               	iorlw	2
 12430  0137CE  6FFD               	movwf	253,b	;volatile
 12431                           
 12432                           ; BSR set to: 59
 12433                           ;eadog.c: 69:  DMA1CON1bits.SMR = 0;
 12434  0137D0  0EE7               	movlw	-25
 12435  0137D2  17FD               	andwf	253,f,b	;volatile
 12436                           
 12437                           ; BSR set to: 59
 12438                           ;eadog.c: 70:  DMA1CON1bits.SSTP = 1;
 12439  0137D4  81FD               	bsf	253,0,b	;volatile
 12440                           
 12441                           ; BSR set to: 59
 12442                           ;eadog.c: 71:  DMA1SSA = (uint24_t) & ring_buf1;
 12443  0137D6  0E40               	movlw	low _ring_buf1
 12444  0137D8  6FF9               	movwf	249,b	;volatile
 12445  0137DA  0E03               	movlw	high _ring_buf1
 12446  0137DC  6FFA               	movwf	250,b	;volatile
 12447  0137DE  0E00               	movlw	low (_ring_buf1 shr (0+16))
 12448  0137E0  6FFB               	movwf	251,b	;volatile
 12449                           
 12450                           ; BSR set to: 59
 12451                           ;eadog.c: 72:  DMA1CON0bits.DGO = 0;
 12452  0137E2  9BFC               	bcf	252,5,b	;volatile
 12453                           
 12454                           ; BSR set to: 59
 12455                           ;eadog.c: 73:  SPI1INTFbits.SPI1TXUIF = 1;
 12456  0137E4  013D               	movlb	61	; () banked
 12457  0137E6  831A               	bsf	26,1,b	;volatile
 12458                           
 12459                           ; BSR set to: 61
 12460  0137E8  0012               	return		;funcret
 12461  0137EA                     __end_of_init_display:
 12462                           	callstack 0
 12463                           
 12464 ;; *************** function _send_lcd_data *****************
 12465 ;; Defined at:
 12466 ;;		line 101 in file "eadog.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;  data            1    wreg     const unsigned char 
 12469 ;; Auto vars:     Size  Location     Type
 12470 ;;  data            1    4[BANK0 ] const unsigned char 
 12471 ;; Return value:  Size  Location     Type
 12472 ;;                  1    wreg      void 
 12473 ;; Registers used:
 12474 ;;		wreg, status,2, status,0, cstack
 12475 ;; Tracked objects:
 12476 ;;		On entry : 3F/0
 12477 ;;		On exit  : 3F/0
 12478 ;;		Unchanged: 0/0
 12479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12484 ;;Total ram usage:        1 bytes
 12485 ;; Hardware stack levels used: 1
 12486 ;; Hardware stack levels required when called: 8
 12487 ;; This function calls:
 12488 ;;		_SPI1_ExchangeByte
 12489 ;;		_wdtdelay
 12490 ;; This function is called by:
 12491 ;;		_init_display
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text33
 12496  014AC4                     __ptext33:
 12497                           	callstack 0
 12498  014AC4                     _send_lcd_data:
 12499                           	callstack 21
 12500                           
 12501                           ; BSR set to: 61
 12502                           ;incstack = 0
 12503                           ;send_lcd_data@data stored from wreg
 12504  014AC4  6F64               	movwf	send_lcd_data@data& (0+255),b
 12505                           
 12506                           ;eadog.c: 101: static void send_lcd_data(const uint8_t data);eadog.c: 102: {;eadog.c: 10
      +                          3:  do { LATCbits.LATC2 = 0; } while(0);
 12507  014AC6  94BC               	bcf	188,2,c	;volatile
 12508                           
 12509                           ;eadog.c: 104:  SPI1_ExchangeByte(data);
 12510  014AC8  0100               	movlb	0	; () banked
 12511  014ACA  5164               	movf	send_lcd_data@data& (0+255),w,b
 12512  014ACC  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12513                           
 12514                           ; BSR set to: 61
 12515                           ;eadog.c: 105:  wdtdelay(8);
 12516  014AD0  0E08               	movlw	8
 12517  014AD2  0100               	movlb	0	; () banked
 12518  014AD4  6F60               	movwf	wdtdelay@delay& (0+255),b
 12519  014AD6  0E00               	movlw	0
 12520  014AD8  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12521  014ADA  0E00               	movlw	0
 12522  014ADC  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12523  014ADE  0E00               	movlw	0
 12524  014AE0  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12525  014AE2  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12526                           
 12527                           ; BSR set to: 0
 12528  014AE6  0012               	return		;funcret
 12529  014AE8                     __end_of_send_lcd_data:
 12530                           	callstack 0
 12531                           
 12532 ;; *************** function _send_lcd_cmd_long *****************
 12533 ;; Defined at:
 12534 ;;		line 117 in file "eadog.c"
 12535 ;; Parameters:    Size  Location     Type
 12536 ;;  cmd             1    wreg     const unsigned char 
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;  cmd             1    4[BANK0 ] const unsigned char 
 12539 ;; Return value:  Size  Location     Type
 12540 ;;                  1    wreg      void 
 12541 ;; Registers used:
 12542 ;;		wreg, status,2, status,0, cstack
 12543 ;; Tracked objects:
 12544 ;;		On entry : 3F/0
 12545 ;;		On exit  : 3F/0
 12546 ;;		Unchanged: 0/0
 12547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12551 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12552 ;;Total ram usage:        1 bytes
 12553 ;; Hardware stack levels used: 1
 12554 ;; Hardware stack levels required when called: 8
 12555 ;; This function calls:
 12556 ;;		_SPI1_ExchangeByte
 12557 ;;		_wdtdelay
 12558 ;; This function is called by:
 12559 ;;		_init_display
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           	psect	text34
 12564  01466A                     __ptext34:
 12565                           	callstack 0
 12566  01466A                     _send_lcd_cmd_long:
 12567                           	callstack 21
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;incstack = 0
 12571                           ;send_lcd_cmd_long@cmd stored from wreg
 12572  01466A  6F64               	movwf	send_lcd_cmd_long@cmd& (0+255),b
 12573                           
 12574                           ;eadog.c: 117: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 118: {;eadog.c:
      +                           119:  do { LATCbits.LATC2 = 0; } while(0);
 12575  01466C  94BC               	bcf	188,2,c	;volatile
 12576                           
 12577                           ;eadog.c: 120:  SPI1_ExchangeByte(0xFE);
 12578  01466E  0EFE               	movlw	254
 12579  014670  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12580                           
 12581                           ; BSR set to: 61
 12582                           ;eadog.c: 121:  wdtdelay(8);
 12583  014674  0E08               	movlw	8
 12584  014676  0100               	movlb	0	; () banked
 12585  014678  6F60               	movwf	wdtdelay@delay& (0+255),b
 12586  01467A  0E00               	movlw	0
 12587  01467C  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12588  01467E  0E00               	movlw	0
 12589  014680  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12590  014682  0E00               	movlw	0
 12591  014684  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12592  014686  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;eadog.c: 122:  SPI1_ExchangeByte(cmd);
 12596  01468A  5164               	movf	send_lcd_cmd_long@cmd& (0+255),w,b
 12597  01468C  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12598                           
 12599                           ;eadog.c: 123:  wdtdelay(800);
 12600  014690  0E20               	movlw	32
 12601  014692  0100               	movlb	0	; () banked
 12602  014694  6F60               	movwf	wdtdelay@delay& (0+255),b
 12603  014696  0E03               	movlw	3
 12604  014698  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12605  01469A  0E00               	movlw	0
 12606  01469C  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12607  01469E  0E00               	movlw	0
 12608  0146A0  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12609  0146A2  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12610                           
 12611                           ; BSR set to: 0
 12612  0146A6  0012               	return		;funcret
 12613  0146A8                     __end_of_send_lcd_cmd_long:
 12614                           	callstack 0
 12615                           
 12616 ;; *************** function _send_lcd_cmd *****************
 12617 ;; Defined at:
 12618 ;;		line 108 in file "eadog.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;  cmd             1    wreg     const unsigned char 
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;  cmd             1    4[BANK0 ] const unsigned char 
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  1    wreg      void 
 12625 ;; Registers used:
 12626 ;;		wreg, status,2, status,0, cstack
 12627 ;; Tracked objects:
 12628 ;;		On entry : 3F/0
 12629 ;;		On exit  : 3F/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12635 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12636 ;;Total ram usage:        1 bytes
 12637 ;; Hardware stack levels used: 1
 12638 ;; Hardware stack levels required when called: 8
 12639 ;; This function calls:
 12640 ;;		_SPI1_ExchangeByte
 12641 ;;		_wdtdelay
 12642 ;; This function is called by:
 12643 ;;		_init_display
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           	psect	text35
 12648  0146A8                     __ptext35:
 12649                           	callstack 0
 12650  0146A8                     _send_lcd_cmd:
 12651                           	callstack 21
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;incstack = 0
 12655                           ;send_lcd_cmd@cmd stored from wreg
 12656  0146A8  6F64               	movwf	send_lcd_cmd@cmd& (0+255),b
 12657                           
 12658                           ;eadog.c: 108: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 109: {;eadog.c: 110:
      +                            do { LATCbits.LATC2 = 0; } while(0);
 12659  0146AA  94BC               	bcf	188,2,c	;volatile
 12660                           
 12661                           ;eadog.c: 111:  SPI1_ExchangeByte(0xFE);
 12662  0146AC  0EFE               	movlw	254
 12663  0146AE  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12664                           
 12665                           ; BSR set to: 61
 12666                           ;eadog.c: 112:  wdtdelay(8);
 12667  0146B2  0E08               	movlw	8
 12668  0146B4  0100               	movlb	0	; () banked
 12669  0146B6  6F60               	movwf	wdtdelay@delay& (0+255),b
 12670  0146B8  0E00               	movlw	0
 12671  0146BA  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12672  0146BC  0E00               	movlw	0
 12673  0146BE  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12674  0146C0  0E00               	movlw	0
 12675  0146C2  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12676  0146C4  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;eadog.c: 113:  SPI1_ExchangeByte(cmd);
 12680  0146C8  5164               	movf	send_lcd_cmd@cmd& (0+255),w,b
 12681  0146CA  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12682                           
 12683                           ;eadog.c: 114:  wdtdelay(8);
 12684  0146CE  0E08               	movlw	8
 12685  0146D0  0100               	movlb	0	; () banked
 12686  0146D2  6F60               	movwf	wdtdelay@delay& (0+255),b
 12687  0146D4  0E00               	movlw	0
 12688  0146D6  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12689  0146D8  0E00               	movlw	0
 12690  0146DA  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12691  0146DC  0E00               	movlw	0
 12692  0146DE  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12693  0146E0  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12694                           
 12695                           ; BSR set to: 0
 12696  0146E4  0012               	return		;funcret
 12697  0146E6                     __end_of_send_lcd_cmd:
 12698                           	callstack 0
 12699                           
 12700 ;; *************** function _wdtdelay *****************
 12701 ;; Defined at:
 12702 ;;		line 17 in file "eadog.c"
 12703 ;; Parameters:    Size  Location     Type
 12704 ;;  delay           4    0[BANK0 ] const unsigned long 
 12705 ;; Auto vars:     Size  Location     Type
 12706 ;;		None
 12707 ;; Return value:  Size  Location     Type
 12708 ;;                  1    wreg      void 
 12709 ;; Registers used:
 12710 ;;		wreg, status,2, status,0
 12711 ;; Tracked objects:
 12712 ;;		On entry : 3F/0
 12713 ;;		On exit  : 3F/0
 12714 ;;		Unchanged: 0/0
 12715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12716 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12719 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12720 ;;Total ram usage:        4 bytes
 12721 ;; Hardware stack levels used: 1
 12722 ;; Hardware stack levels required when called: 7
 12723 ;; This function calls:
 12724 ;;		Nothing
 12725 ;; This function is called by:
 12726 ;;		_init_display
 12727 ;;		_send_lcd_data
 12728 ;;		_send_lcd_cmd
 12729 ;;		_send_lcd_cmd_long
 12730 ;; This function uses a non-reentrant model
 12731 ;;
 12732                           
 12733                           	psect	text36
 12734  0143C4                     __ptext36:
 12735                           	callstack 0
 12736  0143C4                     _wdtdelay:
 12737                           	callstack 22
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;eadog.c: 17: void wdtdelay(const uint32_t delay);eadog.c: 18: {;eadog.c: 19:  static ui
      +                          nt32_t dcount;;eadog.c: 21:  for (dcount = 0; dcount <= delay; dcount++) {
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;incstack = 0
 12744  0143C4  0E00               	movlw	0
 12745  0143C6  0101               	movlb	1	; () banked
 12746  0143C8  6F20               	movwf	wdtdelay@dcount& (0+255),b
 12747  0143CA  0E00               	movlw	0
 12748  0143CC  6F21               	movwf	(wdtdelay@dcount+1)& (0+255),b
 12749  0143CE  0E00               	movlw	0
 12750  0143D0  6F22               	movwf	(wdtdelay@dcount+2)& (0+255),b
 12751  0143D2  0E00               	movlw	0
 12752  0143D4  6F23               	movwf	(wdtdelay@dcount+3)& (0+255),b
 12753  0143D6                     l1658:
 12754                           
 12755                           ;eadog.c: 22:   __nop();
 12756  0143D6  F000               	nop	
 12757  0143D8  0004               	clrwdt		;# 
 12758                           
 12759                           ;eadog.c: 24:  };
 12760  0143DA  0E01               	movlw	1
 12761  0143DC  0101               	movlb	1	; () banked
 12762  0143DE  2720               	addwf	wdtdelay@dcount& (0+255),f,b
 12763  0143E0  0E00               	movlw	0
 12764  0143E2  2321               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 12765  0143E4  2322               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 12766  0143E6  2323               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 12767  0143E8  5120               	movf	wdtdelay@dcount& (0+255),w,b
 12768  0143EA  0100               	movlb	0	; () banked
 12769  0143EC  5D60               	subwf	wdtdelay@delay& (0+255),w,b
 12770  0143EE  0101               	movlb	1	; () banked
 12771  0143F0  5121               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 12772  0143F2  0100               	movlb	0	; () banked
 12773  0143F4  5961               	subwfb	(wdtdelay@delay+1)& (0+255),w,b
 12774  0143F6  0101               	movlb	1	; () banked
 12775  0143F8  5122               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 12776  0143FA  0100               	movlb	0	; () banked
 12777  0143FC  5962               	subwfb	(wdtdelay@delay+2)& (0+255),w,b
 12778  0143FE  0101               	movlb	1	; () banked
 12779  014400  5123               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 12780  014402  0100               	movlb	0	; () banked
 12781  014404  5963               	subwfb	(wdtdelay@delay+3)& (0+255),w,b
 12782  014406  A0D8               	btfss	status,0,c
 12783  014408  0012               	return	
 12784  01440A  D7E5               	goto	l1658
 12785  01440C                     __end_of_wdtdelay:
 12786                           	callstack 0
 12787                           
 12788 ;; *************** function _SPI1_ExchangeByte *****************
 12789 ;; Defined at:
 12790 ;;		line 100 in file "mcc_generated_files/spi1.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;  data            1    wreg     unsigned char 
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  data            1   31[COMRAM] unsigned char 
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  1    wreg      unsigned char 
 12797 ;; Registers used:
 12798 ;;		wreg, status,2
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 3F/3D
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12808 ;;Total ram usage:        1 bytes
 12809 ;; Hardware stack levels used: 1
 12810 ;; Hardware stack levels required when called: 7
 12811 ;; This function calls:
 12812 ;;		Nothing
 12813 ;; This function is called by:
 12814 ;;		_send_lcd_data
 12815 ;;		_send_lcd_cmd
 12816 ;;		_send_lcd_cmd_long
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820                           	psect	text37
 12821  014CD4                     __ptext37:
 12822                           	callstack 0
 12823  014CD4                     _SPI1_ExchangeByte:
 12824                           	callstack 21
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;incstack = 0
 12828                           ;SPI1_ExchangeByte@data stored from wreg
 12829  014CD4  6E20               	movwf	SPI1_ExchangeByte@data^0,c
 12830                           
 12831                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 12832  014CD6  0E01               	movlw	1
 12833  014CD8  013D               	movlb	61	; () banked
 12834  014CDA  6F12               	movwf	18,b	;volatile
 12835                           
 12836                           ; BSR set to: 61
 12837                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 12838  014CDC  0060  F083  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 12839  014CE2                     l636:
 12840  014CE2  0139               	movlb	57	; () banked
 12841  014CE4  A9A2               	btfss	162,4,b	;volatile
 12842  014CE6  D7FD               	goto	l636
 12843                           
 12844                           ; BSR set to: 57
 12845                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 12846  014CE8  013D               	movlb	61	; () banked
 12847  014CEA  5110               	movf	16,w,b	;volatile
 12848                           
 12849                           ; BSR set to: 61
 12850  014CEC  0012               	return		;funcret
 12851  014CEE                     __end_of_SPI1_ExchangeByte:
 12852                           	callstack 0
 12853                           
 12854 ;; *************** function _ringBufS_init *****************
 12855 ;; Defined at:
 12856 ;;		line 22 in file "ringbufs.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  _this           2   12[BANK0 ] PTR volatile struct ring
 12859 ;;		 -> ring_buf1(67), 
 12860 ;; Auto vars:     Size  Location     Type
 12861 ;;		None
 12862 ;; Return value:  Size  Location     Type
 12863 ;;                  1    wreg      void 
 12864 ;; Registers used:
 12865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12866 ;; Tracked objects:
 12867 ;;		On entry : 3F/1
 12868 ;;		On exit  : 3F/0
 12869 ;;		Unchanged: 0/0
 12870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12871 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12874 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12875 ;;Total ram usage:        2 bytes
 12876 ;; Hardware stack levels used: 1
 12877 ;; Hardware stack levels required when called: 8
 12878 ;; This function calls:
 12879 ;;		_memset
 12880 ;; This function is called by:
 12881 ;;		_init_display
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text38
 12886  014C00                     __ptext38:
 12887                           	callstack 0
 12888  014C00                     _ringBufS_init:
 12889                           	callstack 21
 12890                           
 12891                           ; BSR set to: 1
 12892                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*) _this, 0, sizeof(*_this));
 12893                           
 12894                           ; BSR set to: 61
 12895                           ;incstack = 0
 12896  014C00  C06C  F060         	movff	ringBufS_init@_this,memset@dest
 12897  014C04  C06D  F061         	movff	ringBufS_init@_this+1,memset@dest+1
 12898  014C08  0E00               	movlw	0
 12899  014C0A  0100               	movlb	0	; () banked
 12900  014C0C  6F63               	movwf	(memset@c+1)& (0+255),b
 12901  014C0E  0E00               	movlw	0
 12902  014C10  6F62               	movwf	memset@c& (0+255),b
 12903  014C12  0E00               	movlw	0
 12904  014C14  6F65               	movwf	(memset@n+1)& (0+255),b
 12905  014C16  0E43               	movlw	67
 12906  014C18  6F64               	movwf	memset@n& (0+255),b
 12907  014C1A  ECEF  F095         	call	_memset	;wreg free
 12908                           
 12909                           ; BSR set to: 0
 12910  014C1E  0012               	return		;funcret
 12911  014C20                     __end_of_ringBufS_init:
 12912                           	callstack 0
 12913                           
 12914 ;; *************** function _eaDogM_WriteStringAtPos *****************
 12915 ;; Defined at:
 12916 ;;		line 191 in file "eadog.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;  r               1    wreg     const unsigned char 
 12919 ;;  c               1   19[BANK0 ] const unsigned char 
 12920 ;;  strPtr          2   20[BANK0 ] PTR unsigned char 
 12921 ;;		 -> buff1(255), 
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;  r               1   24[BANK0 ] const unsigned char 
 12924 ;;  row             1   25[BANK0 ] unsigned char 
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      void 
 12927 ;; Registers used:
 12928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12929 ;; Tracked objects:
 12930 ;;		On entry : 3F/0
 12931 ;;		On exit  : 3F/3B
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12934 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12937 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12938 ;;Total ram usage:        7 bytes
 12939 ;; Hardware stack levels used: 1
 12940 ;; Hardware stack levels required when called: 11
 12941 ;; This function calls:
 12942 ;;		_eaDogM_WriteString
 12943 ;;		_send_lcd_cmd_dma
 12944 ;;		_send_lcd_data_dma
 12945 ;;		_wait_lcd_done
 12946 ;; This function is called by:
 12947 ;;		_main
 12948 ;; This function uses a non-reentrant model
 12949 ;;
 12950                           
 12951                           	psect	text39
 12952  013EC4                     __ptext39:
 12953                           	callstack 0
 12954  013EC4                     _eaDogM_WriteStringAtPos:
 12955                           	callstack 19
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;incstack = 0
 12959                           ;eaDogM_WriteStringAtPos@r stored from wreg
 12960  013EC4  6F78               	movwf	eaDogM_WriteStringAtPos@r& (0+255),b
 12961                           
 12962                           ;eadog.c: 191: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 192: {;eadog.c: 193:  uint8_t row;;eadog.c: 195:  switch (r) {
 12963  013EC6  D009               	goto	l13033
 12964  013EC8                     l13021:
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;eadog.c: 197:   row = 0x40;
 12968  013EC8  0E40               	movlw	64
 12969  013ECA  D005               	goto	L16
 12970  013ECC                     l13023:
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;eadog.c: 200:   row = 0x14;
 12974  013ECC  0E14               	movlw	20
 12975  013ECE  D003               	goto	L16
 12976  013ED0                     l13025:
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;eadog.c: 203:   row = 0x54;
 12980  013ED0  0E54               	movlw	84
 12981  013ED2  D001               	goto	L16
 12982  013ED4                     l13027:
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;eadog.c: 206:   row = 0x00;
 12986  013ED4  0E00               	movlw	0
 12987  013ED6                     L16:
 12988  013ED6  6F79               	movwf	eaDogM_WriteStringAtPos@row& (0+255),b
 12989                           
 12990                           ;eadog.c: 207:   break;
 12991  013ED8  D016               	goto	l13035
 12992  013EDA                     l13033:
 12993  013EDA  0100               	movlb	0	; () banked
 12994  013EDC  5178               	movf	eaDogM_WriteStringAtPos@r& (0+255),w,b
 12995  013EDE  6F76               	movwf	??_eaDogM_WriteStringAtPos& (0+255),b
 12996  013EE0  6B77               	clrf	(??_eaDogM_WriteStringAtPos+1)& (0+255),b
 12997                           
 12998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12999                           ; Switch size 1, requested type "simple"
 13000                           ; Number of cases is 1, Range of values is 0 to 0
 13001                           ; switch strategies available:
 13002                           ; Name         Instructions Cycles
 13003                           ; simple_byte            4     3 (average)
 13004                           ;	Chosen strategy is simple_byte
 13005  013EE2  5177               	movf	(??_eaDogM_WriteStringAtPos+1)& (0+255),w,b
 13006  013EE4  0A00               	xorlw	0	; case 0
 13007  013EE6  A4D8               	btfss	status,2,c
 13008  013EE8  D7F5               	goto	l13027
 13009                           
 13010                           ; BSR set to: 0
 13011                           ; Switch size 1, requested type "simple"
 13012                           ; Number of cases is 4, Range of values is 0 to 3
 13013                           ; switch strategies available:
 13014                           ; Name         Instructions Cycles
 13015                           ; simple_byte           13     7 (average)
 13016                           ;	Chosen strategy is simple_byte
 13017  013EEA  5176               	movf	??_eaDogM_WriteStringAtPos& (0+255),w,b
 13018  013EEC  0A00               	xorlw	0	; case 0
 13019  013EEE  B4D8               	btfsc	status,2,c
 13020  013EF0  D7F1               	goto	l13027
 13021  013EF2  0A01               	xorlw	1	; case 1
 13022  013EF4  B4D8               	btfsc	status,2,c
 13023  013EF6  D7E8               	goto	l13021
 13024  013EF8  0A03               	xorlw	3	; case 2
 13025  013EFA  B4D8               	btfsc	status,2,c
 13026  013EFC  D7E7               	goto	l13023
 13027  013EFE  0A01               	xorlw	1	; case 3
 13028  013F00  B4D8               	btfsc	status,2,c
 13029  013F02  D7E6               	goto	l13025
 13030  013F04  D7E7               	goto	l13027
 13031  013F06                     l13035:
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;eadog.c: 212:  send_lcd_cmd_dma(0x45);
 13035  013F06  0E45               	movlw	69
 13036  013F08  EC20  F0A6         	call	_send_lcd_cmd_dma
 13037                           
 13038                           ;eadog.c: 213:  send_lcd_data_dma(row + c);
 13039  013F0C  0100               	movlb	0	; () banked
 13040  013F0E  5179               	movf	eaDogM_WriteStringAtPos@row& (0+255),w,b
 13041  013F10  2573               	addwf	eaDogM_WriteStringAtPos@c& (0+255),w,b
 13042  013F12  ECF5  F0A2         	call	_send_lcd_data_dma
 13043                           
 13044                           ; BSR set to: 59
 13045                           ;eadog.c: 214:  wait_lcd_done();
 13046  013F16  ECFA  F0A6         	call	_wait_lcd_done	;wreg free
 13047                           
 13048                           ; BSR set to: 61
 13049                           ;eadog.c: 215:  eaDogM_WriteString(strPtr);
 13050  013F1A  C074  F070         	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
 13051  013F1E  C075  F071         	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
 13052  013F22  ECF6  F09E         	call	_eaDogM_WriteString	;wreg free
 13053                           
 13054                           ; BSR set to: 59
 13055  013F26  0012               	return		;funcret
 13056  013F28                     __end_of_eaDogM_WriteStringAtPos:
 13057                           	callstack 0
 13058                           
 13059 ;; *************** function _eaDogM_WriteString *****************
 13060 ;; Defined at:
 13061 ;;		line 129 in file "eadog.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;  strPtr          2   16[BANK0 ] PTR unsigned char 
 13064 ;;		 -> buff1(255), 
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;  len             1   18[BANK0 ] unsigned char 
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  1    wreg      void 
 13069 ;; Registers used:
 13070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13071 ;; Tracked objects:
 13072 ;;		On entry : 3F/3D
 13073 ;;		On exit  : 3F/3B
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13076 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13079 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13080 ;;Total ram usage:        3 bytes
 13081 ;; Hardware stack levels used: 1
 13082 ;; Hardware stack levels required when called: 9
 13083 ;; This function calls:
 13084 ;;		_ringBufS_flush
 13085 ;;		_ringBufS_put_dma_cpy
 13086 ;;		_start_lcd
 13087 ;;		_strlen
 13088 ;;		_wait_lcd_set
 13089 ;; This function is called by:
 13090 ;;		_eaDogM_WriteStringAtPos
 13091 ;; This function uses a non-reentrant model
 13092 ;;
 13093                           
 13094                           	psect	text40
 13095  013DEC                     __ptext40:
 13096                           	callstack 0
 13097  013DEC                     _eaDogM_WriteString:
 13098                           	callstack 20
 13099                           
 13100                           ; BSR set to: 61
 13101                           ;eadog.c: 129: void eaDogM_WriteString(char *strPtr);eadog.c: 130: {;eadog.c: 131:  uint
      +                          8_t len = (uint8_t) strlen(strPtr);
 13102                           
 13103                           ; BSR set to: 59
 13104                           ;incstack = 0
 13105  013DEC  C070  F060         	movff	eaDogM_WriteString@strPtr,strlen@s
 13106  013DF0  C071  F061         	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
 13107  013DF4  ECF8  F0A0         	call	_strlen	;wreg free
 13108  013DF8  5160               	movf	?_strlen& (0+255),w,b
 13109  013DFA  6F72               	movwf	eaDogM_WriteString@len& (0+255),b
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;eadog.c: 136:  wait_lcd_set();
 13113  013DFC  EC7E  F0A7         	call	_wait_lcd_set	;wreg free
 13114                           
 13115                           ; BSR set to: 1
 13116                           ;eadog.c: 138:  ringBufS_flush(spi_link.tx1a, 0);
 13117  013E00  C106  F06C         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 13118  013E04  C107  F06D         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 13119  013E08  0E00               	movlw	0
 13120  013E0A  0100               	movlb	0	; () banked
 13121  013E0C  6F6E               	movwf	ringBufS_flush@clearBuffer& (0+255),b
 13122  013E0E  ECA5  F0A0         	call	_ringBufS_flush	;wreg free
 13123                           
 13124                           ; BSR set to: 0
 13125  013E12  94BC               	bcf	188,2,c	;volatile
 13126                           
 13127                           ; BSR set to: 0
 13128                           ;eadog.c: 140:  if (len > 64) {
 13129  013E14  0E40               	movlw	64
 13130  013E16  6572               	cpfsgt	eaDogM_WriteString@len& (0+255),b
 13131  013E18  D00A               	goto	l12875
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;eadog.c: 141:   strPtr[64] = 0;
 13135  013E1A  EE20 F040          	lfsr	2,64
 13136  013E1E  5170               	movf	eaDogM_WriteString@strPtr& (0+255),w,b
 13137  013E20  26D9               	addwf	fsr2l,f,c
 13138  013E22  5171               	movf	(eaDogM_WriteString@strPtr+1)& (0+255),w,b
 13139  013E24  22DA               	addwfc	fsr2h,f,c
 13140  013E26  0E00               	movlw	0
 13141  013E28  6EDF               	movwf	indf2,c
 13142                           
 13143                           ; BSR set to: 0
 13144                           ;eadog.c: 142:   len = 64;
 13145  013E2A  0E40               	movlw	64
 13146  013E2C  6F72               	movwf	eaDogM_WriteString@len& (0+255),b
 13147  013E2E                     l12875:
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;eadog.c: 144:  DMA1CON0bits.EN = 0;
 13151  013E2E  013B               	movlb	59	; () banked
 13152  013E30  9FFC               	bcf	252,7,b	;volatile
 13153                           
 13154                           ; BSR set to: 59
 13155                           ;eadog.c: 145:  DMA1SSZ = len;
 13156  013E32  0060  F1CB  FBF7   	movff	eaDogM_WriteString@len,15351	;volatile
 13157  013E38  6BF8               	clrf	248,b	;volatile
 13158                           
 13159                           ; BSR set to: 59
 13160                           ;eadog.c: 146:  DMA1CON0bits.EN = 1;
 13161  013E3A  8FFC               	bsf	252,7,b	;volatile
 13162                           
 13163                           ; BSR set to: 59
 13164                           ;eadog.c: 147:  ringBufS_put_dma_cpy(spi_link.tx1a, strPtr, len);
 13165  013E3C  C106  F06B         	movff	_spi_link+6,ringBufS_put_dma_cpy@_this	;volatile
 13166  013E40  C107  F06C         	movff	_spi_link+7,ringBufS_put_dma_cpy@_this+1	;volatile
 13167  013E44  C070  F06D         	movff	eaDogM_WriteString@strPtr,ringBufS_put_dma_cpy@ptr
 13168  013E48  C071  F06E         	movff	eaDogM_WriteString@strPtr+1,ringBufS_put_dma_cpy@ptr+1
 13169  013E4C  C072  F06F         	movff	eaDogM_WriteString@len,ringBufS_put_dma_cpy@len
 13170  013E50  EC51  F0A0         	call	_ringBufS_put_dma_cpy	;wreg free
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;eadog.c: 148:  start_lcd();
 13174  013E54  EC81  F0A7         	call	_start_lcd	;wreg free
 13175                           
 13176                           ; BSR set to: 59
 13177  013E58  0012               	return		;funcret
 13178  013E5A                     __end_of_eaDogM_WriteString:
 13179                           	callstack 0
 13180                           
 13181 ;; *************** function _ringBufS_put_dma_cpy *****************
 13182 ;; Defined at:
 13183 ;;		line 76 in file "ringbufs.c"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;  _this           2   11[BANK0 ] PTR struct ringBufS_t
 13186 ;;		 -> ring_buf1(67), 
 13187 ;;  ptr             2   13[BANK0 ] PTR const unsigned char 
 13188 ;;		 -> buff1(255), 
 13189 ;;  len             1   15[BANK0 ] const unsigned char 
 13190 ;; Auto vars:     Size  Location     Type
 13191 ;;		None
 13192 ;; Return value:  Size  Location     Type
 13193 ;;                  1    wreg      void 
 13194 ;; Registers used:
 13195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13196 ;; Tracked objects:
 13197 ;;		On entry : 3F/3B
 13198 ;;		On exit  : 3F/0
 13199 ;;		Unchanged: 0/0
 13200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13201 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13204 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13205 ;;Total ram usage:        6 bytes
 13206 ;; Hardware stack levels used: 1
 13207 ;; Hardware stack levels required when called: 8
 13208 ;; This function calls:
 13209 ;;		_memcpy
 13210 ;; This function is called by:
 13211 ;;		_eaDogM_WriteString
 13212 ;; This function uses a non-reentrant model
 13213 ;;
 13214                           
 13215                           	psect	text41
 13216  0140A2                     __ptext41:
 13217                           	callstack 0
 13218  0140A2                     _ringBufS_put_dma_cpy:
 13219                           	callstack 20
 13220                           
 13221                           ; BSR set to: 59
 13222                           ;ringbufs.c: 76: void ringBufS_put_dma_cpy(ringBufS_t *_this, const char *ptr, const uin
      +                          t8_t len);ringbufs.c: 77: {;ringbufs.c: 78:  if (_this->count < 64) {
 13223                           
 13224                           ; BSR set to: 59
 13225                           ;incstack = 0
 13226  0140A2  0100               	movlb	0	; () banked
 13227  0140A4  EE20 F042          	lfsr	2,66
 13228  0140A8  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 13229  0140AA  26D9               	addwf	fsr2l,f,c
 13230  0140AC  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 13231  0140AE  22DA               	addwfc	fsr2h,f,c
 13232  0140B0  0E40               	movlw	64
 13233  0140B2  60DF               	cpfslt	indf2,c
 13234  0140B4  0012               	return	
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;ringbufs.c: 79:   memcpy(_this->buf, ptr, len);
 13238  0140B6  C06B  F060         	movff	ringBufS_put_dma_cpy@_this,memcpy@d1
 13239  0140BA  C06C  F061         	movff	ringBufS_put_dma_cpy@_this+1,memcpy@d1+1
 13240  0140BE  C06D  F062         	movff	ringBufS_put_dma_cpy@ptr,memcpy@s1
 13241  0140C2  C06E  F063         	movff	ringBufS_put_dma_cpy@ptr+1,memcpy@s1+1
 13242  0140C6  C06F  F064         	movff	ringBufS_put_dma_cpy@len,memcpy@n
 13243  0140CA  6B65               	clrf	(memcpy@n+1)& (0+255),b
 13244  0140CC  EC47  F0A1         	call	_memcpy	;wreg free
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;ringbufs.c: 80:   _this->head = len;
 13248  0140D0  EE20 F040          	lfsr	2,64
 13249  0140D4  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 13250  0140D6  26D9               	addwf	fsr2l,f,c
 13251  0140D8  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 13252  0140DA  22DA               	addwfc	fsr2h,f,c
 13253  0140DC  0060  F1BF  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 13254                           
 13255                           ; BSR set to: 0
 13256                           ;ringbufs.c: 81:   _this->count = len;
 13257  0140E2  EE20 F042          	lfsr	2,66
 13258  0140E6  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 13259  0140E8  26D9               	addwf	fsr2l,f,c
 13260  0140EA  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 13261  0140EC  22DA               	addwfc	fsr2h,f,c
 13262  0140EE  0060  F1BF  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 13263                           
 13264                           ; BSR set to: 0
 13265  0140F4  0012               	return		;funcret
 13266  0140F6                     __end_of_ringBufS_put_dma_cpy:
 13267                           	callstack 0
 13268                           
 13269 ;; *************** function _memcpy *****************
 13270 ;; Defined at:
 13271 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  d1              2    0[BANK0 ] PTR void 
 13274 ;;		 -> ring_buf1(67), 
 13275 ;;  s1              2    2[BANK0 ] PTR const void 
 13276 ;;		 -> buff1(255), 
 13277 ;;  n               2    4[BANK0 ] unsigned int 
 13278 ;; Auto vars:     Size  Location     Type
 13279 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 13280 ;;		 -> buff1(255), 
 13281 ;;  d               2    7[BANK0 ] PTR unsigned char 
 13282 ;;		 -> ring_buf1(67), 
 13283 ;;  tmp             1    6[BANK0 ] unsigned char 
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  2    0[BANK0 ] PTR void 
 13286 ;; Registers used:
 13287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13288 ;; Tracked objects:
 13289 ;;		On entry : 3F/0
 13290 ;;		On exit  : 3F/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13293 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13294 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13296 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13297 ;;Total ram usage:       11 bytes
 13298 ;; Hardware stack levels used: 1
 13299 ;; Hardware stack levels required when called: 7
 13300 ;; This function calls:
 13301 ;;		Nothing
 13302 ;; This function is called by:
 13303 ;;		_ringBufS_put_dma_cpy
 13304 ;; This function uses a non-reentrant model
 13305 ;;
 13306                           
 13307                           	psect	text42
 13308  01428E                     __ptext42:
 13309                           	callstack 0
 13310  01428E                     _memcpy:
 13311                           	callstack 20
 13312                           
 13313                           ; BSR set to: 0
 13314                           
 13315                           ; BSR set to: 0
 13316                           ;incstack = 0
 13317  01428E  C062  F069         	movff	memcpy@s1,memcpy@s
 13318  014292  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 13319  014296  C060  F067         	movff	memcpy@d1,memcpy@d
 13320  01429A  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 13321  01429E  D015               	goto	l11879
 13322  0142A0                     l11871:
 13323                           
 13324                           ; BSR set to: 0
 13325  0142A0  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
 13326  0142A6  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
 13327  0142AC  50DF               	movf	indf2,w,c
 13328  0142AE  6F66               	movwf	memcpy@tmp& (0+255),b
 13329                           
 13330                           ; BSR set to: 0
 13331  0142B0  4B69               	infsnz	memcpy@s& (0+255),f,b
 13332  0142B2  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 13333                           
 13334                           ; BSR set to: 0
 13335  0142B4  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
 13336  0142BA  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
 13337  0142C0  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
 13338                           
 13339                           ; BSR set to: 0
 13340  0142C6  4B67               	infsnz	memcpy@d& (0+255),f,b
 13341  0142C8  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 13342  0142CA                     l11879:
 13343                           
 13344                           ; BSR set to: 0
 13345  0142CA  0764               	decf	memcpy@n& (0+255),f,b
 13346  0142CC  A0D8               	btfss	status,0,c
 13347  0142CE  0765               	decf	(memcpy@n+1)& (0+255),f,b
 13348  0142D0  2964               	incf	memcpy@n& (0+255),w,b
 13349  0142D2  E1E6               	bnz	l11871
 13350  0142D4  2965               	incf	(memcpy@n+1)& (0+255),w,b
 13351  0142D6  B4D8               	btfsc	status,2,c
 13352  0142D8  0012               	return	
 13353  0142DA  D7E2               	goto	l11871
 13354  0142DC                     __end_of_memcpy:
 13355                           	callstack 0
 13356                           
 13357 ;; *************** function _eaDogM_WriteCommand *****************
 13358 ;; Defined at:
 13359 ;;		line 239 in file "eadog.c"
 13360 ;; Parameters:    Size  Location     Type
 13361 ;;  cmd             1    wreg     const unsigned char 
 13362 ;; Auto vars:     Size  Location     Type
 13363 ;;  cmd             1   17[BANK0 ] const unsigned char 
 13364 ;; Return value:  Size  Location     Type
 13365 ;;                  1    wreg      void 
 13366 ;; Registers used:
 13367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13368 ;; Tracked objects:
 13369 ;;		On entry : 3F/3D
 13370 ;;		On exit  : 3F/3D
 13371 ;;		Unchanged: 0/0
 13372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13376 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13377 ;;Total ram usage:        1 bytes
 13378 ;; Hardware stack levels used: 1
 13379 ;; Hardware stack levels required when called: 11
 13380 ;; This function calls:
 13381 ;;		_send_lcd_cmd_dma
 13382 ;; This function is called by:
 13383 ;;		_main
 13384 ;; This function uses a non-reentrant model
 13385 ;;
 13386                           
 13387                           	psect	text43
 13388  014DE6                     __ptext43:
 13389                           	callstack 0
 13390  014DE6                     _eaDogM_WriteCommand:
 13391                           	callstack 19
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;incstack = 0
 13395                           ;eaDogM_WriteCommand@cmd stored from wreg
 13396  014DE6  0100               	movlb	0	; () banked
 13397  014DE8  6F71               	movwf	eaDogM_WriteCommand@cmd& (0+255),b
 13398                           
 13399                           ;eadog.c: 239: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 240: {;eadog.c: 241:
      +                            send_lcd_cmd_dma(cmd);
 13400  014DEA  0100               	movlb	0	; () banked
 13401  014DEC  5171               	movf	eaDogM_WriteCommand@cmd& (0+255),w,b
 13402  014DEE  EC20  F0A6         	call	_send_lcd_cmd_dma
 13403                           
 13404                           ; BSR set to: 61
 13405  014DF2  0012               	return		;funcret
 13406  014DF4                     __end_of_eaDogM_WriteCommand:
 13407                           	callstack 0
 13408                           
 13409 ;; *************** function _send_lcd_cmd_dma *****************
 13410 ;; Defined at:
 13411 ;;		line 160 in file "eadog.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;  strPtr          1    wreg     const unsigned char 
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;  strPtr          1   16[BANK0 ] const unsigned char 
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  1    wreg      void 
 13418 ;; Registers used:
 13419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13420 ;; Tracked objects:
 13421 ;;		On entry : 3F/0
 13422 ;;		On exit  : 3F/3D
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13428 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13429 ;;Total ram usage:        1 bytes
 13430 ;; Hardware stack levels used: 1
 13431 ;; Hardware stack levels required when called: 10
 13432 ;; This function calls:
 13433 ;;		_send_lcd_data_dma
 13434 ;;		_wait_lcd_done
 13435 ;; This function is called by:
 13436 ;;		_eaDogM_WriteStringAtPos
 13437 ;;		_eaDogM_WriteCommand
 13438 ;; This function uses a non-reentrant model
 13439 ;;
 13440                           
 13441                           	psect	text44
 13442  014C40                     __ptext44:
 13443                           	callstack 0
 13444  014C40                     _send_lcd_cmd_dma:
 13445                           	callstack 19
 13446                           
 13447                           ; BSR set to: 61
 13448                           ;incstack = 0
 13449                           ;send_lcd_cmd_dma@strPtr stored from wreg
 13450  014C40  6F70               	movwf	send_lcd_cmd_dma@strPtr& (0+255),b
 13451                           
 13452                           ;eadog.c: 160: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 161: {;eadog.c: 162:
      +                            wait_lcd_done();
 13453  014C42  ECFA  F0A6         	call	_wait_lcd_done	;wreg free
 13454                           
 13455                           ; BSR set to: 61
 13456                           ;eadog.c: 163:  send_lcd_data_dma(0xFE);
 13457  014C46  0EFE               	movlw	254
 13458  014C48  ECF5  F0A2         	call	_send_lcd_data_dma
 13459                           
 13460                           ; BSR set to: 59
 13461                           ;eadog.c: 164:  wait_lcd_done();
 13462  014C4C  ECFA  F0A6         	call	_wait_lcd_done	;wreg free
 13463                           
 13464                           ;eadog.c: 165:  send_lcd_data_dma(strPtr);
 13465  014C50  0100               	movlb	0	; () banked
 13466  014C52  5170               	movf	send_lcd_cmd_dma@strPtr& (0+255),w,b
 13467  014C54  ECF5  F0A2         	call	_send_lcd_data_dma
 13468                           
 13469                           ; BSR set to: 59
 13470                           ;eadog.c: 166:  wait_lcd_done();
 13471  014C58  ECFA  F0A6         	call	_wait_lcd_done	;wreg free
 13472                           
 13473                           ; BSR set to: 61
 13474  014C5C  0012               	return		;funcret
 13475  014C5E                     __end_of_send_lcd_cmd_dma:
 13476                           	callstack 0
 13477                           
 13478 ;; *************** function _wait_lcd_done *****************
 13479 ;; Defined at:
 13480 ;;		line 298 in file "eadog.c"
 13481 ;; Parameters:    Size  Location     Type
 13482 ;;		None
 13483 ;; Auto vars:     Size  Location     Type
 13484 ;;		None
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  1    wreg      void 
 13487 ;; Registers used:
 13488 ;;		None
 13489 ;; Tracked objects:
 13490 ;;		On entry : 0/3B
 13491 ;;		On exit  : 3F/3D
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13498 ;;Total ram usage:        0 bytes
 13499 ;; Hardware stack levels used: 1
 13500 ;; Hardware stack levels required when called: 7
 13501 ;; This function calls:
 13502 ;;		Nothing
 13503 ;; This function is called by:
 13504 ;;		_send_lcd_cmd_dma
 13505 ;;		_eaDogM_WriteStringAtPos
 13506 ;; This function uses a non-reentrant model
 13507 ;;
 13508                           
 13509                           	psect	text45
 13510  014DF4                     __ptext45:
 13511                           	callstack 0
 13512  014DF4                     _wait_lcd_done:
 13513                           	callstack 22
 13514                           
 13515                           ;eadog.c: 300:  while (spi_link.LCD_DATA);
 13516                           
 13517                           ; BSR set to: 61
 13518                           ;incstack = 0
 13519  014DF4  0101               	movlb	1	; () banked
 13520  014DF6  B700               	btfsc	_spi_link& (0+255),3,b	;volatile
 13521  014DF8  D7FD               	goto	__ptext45
 13522  014DFA                     u12750:
 13523  014DFA  013D               	movlb	61	; () banked
 13524  014DFC  BB17               	btfsc	23,5,b	;volatile
 13525  014DFE  0012               	return	
 13526  014E00  D7FC               	goto	u12750
 13527  014E02                     __end_of_wait_lcd_done:
 13528                           	callstack 0
 13529                           
 13530 ;; *************** function _send_lcd_data_dma *****************
 13531 ;; Defined at:
 13532 ;;		line 172 in file "eadog.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;  strPtr          1    wreg     const unsigned char 
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;  strPtr          1   15[BANK0 ] const unsigned char 
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  1    wreg      void 
 13539 ;; Registers used:
 13540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13541 ;; Tracked objects:
 13542 ;;		On entry : 2/0
 13543 ;;		On exit  : 3F/3B
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13549 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13550 ;;Total ram usage:        1 bytes
 13551 ;; Hardware stack levels used: 1
 13552 ;; Hardware stack levels required when called: 9
 13553 ;; This function calls:
 13554 ;;		_ringBufS_flush
 13555 ;;		_ringBufS_put_dma
 13556 ;;		_start_lcd
 13557 ;;		_wait_lcd_set
 13558 ;; This function is called by:
 13559 ;;		_send_lcd_cmd_dma
 13560 ;;		_eaDogM_WriteStringAtPos
 13561 ;; This function uses a non-reentrant model
 13562 ;;
 13563                           
 13564                           	psect	text46
 13565  0145EA                     __ptext46:
 13566                           	callstack 0
 13567  0145EA                     _send_lcd_data_dma:
 13568                           	callstack 20
 13569                           
 13570                           ; BSR set to: 61
 13571                           ;incstack = 0
 13572                           ;send_lcd_data_dma@strPtr stored from wreg
 13573  0145EA  0100               	movlb	0	; () banked
 13574  0145EC  6F6F               	movwf	send_lcd_data_dma@strPtr& (0+255),b
 13575                           
 13576                           ;eadog.c: 172: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 173: {;eadog.c: 177
      +                          :  wait_lcd_set();
 13577  0145EE  EC7E  F0A7         	call	_wait_lcd_set	;wreg free
 13578                           
 13579                           ; BSR set to: 1
 13580                           ;eadog.c: 179:  ringBufS_flush(spi_link.tx1a, 0);
 13581  0145F2  C106  F06C         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 13582  0145F6  C107  F06D         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 13583  0145FA  0E00               	movlw	0
 13584  0145FC  0100               	movlb	0	; () banked
 13585  0145FE  6F6E               	movwf	ringBufS_flush@clearBuffer& (0+255),b
 13586  014600  ECA5  F0A0         	call	_ringBufS_flush	;wreg free
 13587                           
 13588                           ; BSR set to: 0
 13589  014604  94BC               	bcf	188,2,c	;volatile
 13590                           
 13591                           ; BSR set to: 0
 13592                           ;eadog.c: 181:  DMA1CON0bits.EN = 0;
 13593  014606  013B               	movlb	59	; () banked
 13594  014608  9FFC               	bcf	252,7,b	;volatile
 13595                           
 13596                           ; BSR set to: 59
 13597                           ;eadog.c: 182:  DMA1SSZ = 1;
 13598  01460A  0E00               	movlw	0
 13599  01460C  6FF8               	movwf	248,b	;volatile
 13600  01460E  0E01               	movlw	1
 13601  014610  6FF7               	movwf	247,b	;volatile
 13602                           
 13603                           ; BSR set to: 59
 13604                           ;eadog.c: 183:  DMA1CON0bits.EN = 1;
 13605  014612  8FFC               	bsf	252,7,b	;volatile
 13606                           
 13607                           ; BSR set to: 59
 13608                           ;eadog.c: 184:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 13609  014614  C106  F060         	movff	_spi_link+6,ringBufS_put_dma@_this	;volatile
 13610  014618  C107  F061         	movff	_spi_link+7,ringBufS_put_dma@_this+1	;volatile
 13611  01461C  C06F  F062         	movff	send_lcd_data_dma@strPtr,ringBufS_put_dma@c
 13612  014620  EC7B  F0A0         	call	_ringBufS_put_dma	;wreg free
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;eadog.c: 185:  start_lcd();
 13616  014624  EC81  F0A7         	call	_start_lcd	;wreg free
 13617                           
 13618                           ; BSR set to: 59
 13619  014628  0012               	return		;funcret
 13620  01462A                     __end_of_send_lcd_data_dma:
 13621                           	callstack 0
 13622                           
 13623 ;; *************** function _wait_lcd_set *****************
 13624 ;; Defined at:
 13625 ;;		line 288 in file "eadog.c"
 13626 ;; Parameters:    Size  Location     Type
 13627 ;;		None
 13628 ;; Auto vars:     Size  Location     Type
 13629 ;;		None
 13630 ;; Return value:  Size  Location     Type
 13631 ;;                  1    wreg      void 
 13632 ;; Registers used:
 13633 ;;		None
 13634 ;; Tracked objects:
 13635 ;;		On entry : 0/0
 13636 ;;		On exit  : 3F/1
 13637 ;;		Unchanged: 0/0
 13638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13643 ;;Total ram usage:        0 bytes
 13644 ;; Hardware stack levels used: 1
 13645 ;; Hardware stack levels required when called: 7
 13646 ;; This function calls:
 13647 ;;		Nothing
 13648 ;; This function is called by:
 13649 ;;		_eaDogM_WriteString
 13650 ;;		_send_lcd_data_dma
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654                           	psect	text47
 13655  014EFC                     __ptext47:
 13656                           	callstack 0
 13657  014EFC                     _wait_lcd_set:
 13658                           	callstack 21
 13659                           
 13660                           ;eadog.c: 290:  spi_link.LCD_DATA = 1;
 13661                           
 13662                           ; BSR set to: 59
 13663                           ;incstack = 0
 13664  014EFC  0101               	movlb	1	; () banked
 13665  014EFE  8700               	bsf	_spi_link& (0+255),3,b	;volatile
 13666                           
 13667                           ; BSR set to: 1
 13668  014F00  0012               	return		;funcret
 13669  014F02                     __end_of_wait_lcd_set:
 13670                           	callstack 0
 13671                           
 13672 ;; *************** function _start_lcd *****************
 13673 ;; Defined at:
 13674 ;;		line 283 in file "eadog.c"
 13675 ;; Parameters:    Size  Location     Type
 13676 ;;		None
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;		None
 13679 ;; Return value:  Size  Location     Type
 13680 ;;                  1    wreg      void 
 13681 ;; Registers used:
 13682 ;;		None
 13683 ;; Tracked objects:
 13684 ;;		On entry : 3F/0
 13685 ;;		On exit  : 3F/3B
 13686 ;;		Unchanged: 0/0
 13687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13692 ;;Total ram usage:        0 bytes
 13693 ;; Hardware stack levels used: 1
 13694 ;; Hardware stack levels required when called: 7
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		_eaDogM_WriteString
 13699 ;;		_send_lcd_data_dma
 13700 ;; This function uses a non-reentrant model
 13701 ;;
 13702                           
 13703                           	psect	text48
 13704  014F02                     __ptext48:
 13705                           	callstack 0
 13706  014F02                     _start_lcd:
 13707                           	callstack 21
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;eadog.c: 285:  DMA1CON0bits.DMA1SIRQEN = 1;
 13711                           
 13712                           ; BSR set to: 1
 13713                           ;incstack = 0
 13714  014F02  013B               	movlb	59	; () banked
 13715  014F04  8DFC               	bsf	252,6,b	;volatile
 13716                           
 13717                           ; BSR set to: 59
 13718  014F06  0012               	return		;funcret
 13719  014F08                     __end_of_start_lcd:
 13720                           	callstack 0
 13721                           
 13722 ;; *************** function _ringBufS_put_dma *****************
 13723 ;; Defined at:
 13724 ;;		line 67 in file "ringbufs.c"
 13725 ;; Parameters:    Size  Location     Type
 13726 ;;  _this           2    0[BANK0 ] PTR struct ringBufS_t
 13727 ;;		 -> ring_buf1(67), 
 13728 ;;  c               1    2[BANK0 ] const unsigned char 
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;		None
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1    wreg      void 
 13733 ;; Registers used:
 13734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13735 ;; Tracked objects:
 13736 ;;		On entry : 3F/3B
 13737 ;;		On exit  : 3F/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13740 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13743 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13744 ;;Total ram usage:        4 bytes
 13745 ;; Hardware stack levels used: 1
 13746 ;; Hardware stack levels required when called: 7
 13747 ;; This function calls:
 13748 ;;		Nothing
 13749 ;; This function is called by:
 13750 ;;		_send_lcd_data_dma
 13751 ;; This function uses a non-reentrant model
 13752 ;;
 13753                           
 13754                           	psect	text49
 13755  0140F6                     __ptext49:
 13756                           	callstack 0
 13757  0140F6                     _ringBufS_put_dma:
 13758                           	callstack 21
 13759                           
 13760                           ; BSR set to: 59
 13761                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 13762                           
 13763                           ; BSR set to: 59
 13764                           ;incstack = 0
 13765  0140F6  0100               	movlb	0	; () banked
 13766  0140F8  EE20 F042          	lfsr	2,66
 13767  0140FC  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 13768  0140FE  26D9               	addwf	fsr2l,f,c
 13769  014100  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13770  014102  22DA               	addwfc	fsr2h,f,c
 13771  014104  0E40               	movlw	64
 13772  014106  60DF               	cpfslt	indf2,c
 13773  014108  0012               	return	
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 13777  01410A  EE20 F040          	lfsr	2,64
 13778  01410E  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 13779  014110  26D9               	addwf	fsr2l,f,c
 13780  014112  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13781  014114  22DA               	addwfc	fsr2h,f,c
 13782  014116  50DF               	movf	indf2,w,c
 13783  014118  6E20               	movwf	??_ringBufS_put_dma^0,c
 13784  01411A  5020               	movf	??_ringBufS_put_dma^0,w,c
 13785  01411C  2560               	addwf	ringBufS_put_dma@_this& (0+255),w,b
 13786  01411E  6ED9               	movwf	fsr2l,c
 13787  014120  0E00               	movlw	0
 13788  014122  2161               	addwfc	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13789  014124  6EDA               	movwf	fsr2h,c
 13790  014126  0060  F18B  FFDF   	movff	ringBufS_put_dma@c,indf2
 13791                           
 13792                           ;ringbufs.c: 71:   ++_this->head;
 13793  01412C  EE20 F040          	lfsr	2,64
 13794  014130  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 13795  014132  26D9               	addwf	fsr2l,f,c
 13796  014134  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13797  014136  22DA               	addwfc	fsr2h,f,c
 13798  014138  2ADF               	incf	indf2,f,c
 13799                           
 13800                           ;ringbufs.c: 72:   ++_this->count;
 13801  01413A  EE20 F042          	lfsr	2,66
 13802  01413E  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 13803  014140  26D9               	addwf	fsr2l,f,c
 13804  014142  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13805  014144  22DA               	addwfc	fsr2h,f,c
 13806  014146  2ADF               	incf	indf2,f,c
 13807                           
 13808                           ; BSR set to: 0
 13809  014148  0012               	return		;funcret
 13810  01414A                     __end_of_ringBufS_put_dma:
 13811                           	callstack 0
 13812                           
 13813 ;; *************** function _ringBufS_flush *****************
 13814 ;; Defined at:
 13815 ;;		line 85 in file "ringbufs.c"
 13816 ;; Parameters:    Size  Location     Type
 13817 ;;  _this           2   12[BANK0 ] PTR struct ringBufS_t
 13818 ;;		 -> ring_buf1(67), 
 13819 ;;  clearBuffer     1   14[BANK0 ] const char 
 13820 ;; Auto vars:     Size  Location     Type
 13821 ;;		None
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  1    wreg      void 
 13824 ;; Registers used:
 13825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13826 ;; Tracked objects:
 13827 ;;		On entry : 3F/0
 13828 ;;		On exit  : 3F/0
 13829 ;;		Unchanged: 0/0
 13830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13831 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13834 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13835 ;;Total ram usage:        3 bytes
 13836 ;; Hardware stack levels used: 1
 13837 ;; Hardware stack levels required when called: 8
 13838 ;; This function calls:
 13839 ;;		_memset
 13840 ;; This function is called by:
 13841 ;;		_eaDogM_WriteString
 13842 ;;		_send_lcd_data_dma
 13843 ;; This function uses a non-reentrant model
 13844 ;;
 13845                           
 13846                           	psect	text50
 13847  01414A                     __ptext50:
 13848                           	callstack 0
 13849  01414A                     _ringBufS_flush:
 13850                           	callstack 20
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;ringbufs.c: 85: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 86: {;ringbufs.c: 87:  _this->count = 0;
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;incstack = 0
 13857  01414A  EE20 F042          	lfsr	2,66
 13858  01414E  516C               	movf	ringBufS_flush@_this& (0+255),w,b
 13859  014150  26D9               	addwf	fsr2l,f,c
 13860  014152  516D               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 13861  014154  22DA               	addwfc	fsr2h,f,c
 13862  014156  0E00               	movlw	0
 13863  014158  6EDF               	movwf	indf2,c
 13864                           
 13865                           ;ringbufs.c: 88:  _this->head = 0;
 13866  01415A  EE20 F040          	lfsr	2,64
 13867  01415E  516C               	movf	ringBufS_flush@_this& (0+255),w,b
 13868  014160  26D9               	addwf	fsr2l,f,c
 13869  014162  516D               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 13870  014164  22DA               	addwfc	fsr2h,f,c
 13871  014166  0E00               	movlw	0
 13872  014168  6EDF               	movwf	indf2,c
 13873                           
 13874                           ;ringbufs.c: 89:  _this->tail = 0;
 13875  01416A  EE20 F041          	lfsr	2,65
 13876  01416E  516C               	movf	ringBufS_flush@_this& (0+255),w,b
 13877  014170  26D9               	addwf	fsr2l,f,c
 13878  014172  516D               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 13879  014174  22DA               	addwfc	fsr2h,f,c
 13880  014176  0E00               	movlw	0
 13881  014178  6EDF               	movwf	indf2,c
 13882                           
 13883                           ; BSR set to: 0
 13884                           ;ringbufs.c: 90:  if (clearBuffer) {
 13885  01417A  516E               	movf	ringBufS_flush@clearBuffer& (0+255),w,b
 13886  01417C  B4D8               	btfsc	status,2,c
 13887  01417E  0012               	return	
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;ringbufs.c: 91:   memset(_this->buf, 0, sizeof(_this->buf));
 13891  014180  C06C  F060         	movff	ringBufS_flush@_this,memset@dest
 13892  014184  C06D  F061         	movff	ringBufS_flush@_this+1,memset@dest+1
 13893  014188  0E00               	movlw	0
 13894  01418A  6F63               	movwf	(memset@c+1)& (0+255),b
 13895  01418C  0E00               	movlw	0
 13896  01418E  6F62               	movwf	memset@c& (0+255),b
 13897  014190  0E00               	movlw	0
 13898  014192  6F65               	movwf	(memset@n+1)& (0+255),b
 13899  014194  0E40               	movlw	64
 13900  014196  6F64               	movwf	memset@n& (0+255),b
 13901  014198  ECEF  F095         	call	_memset	;wreg free
 13902                           
 13903                           ; BSR set to: 0
 13904  01419C  0012               	return		;funcret
 13905  01419E                     __end_of_ringBufS_flush:
 13906                           	callstack 0
 13907                           
 13908 ;; *************** function _display_led *****************
 13909 ;; Defined at:
 13910 ;;		line 3 in file "disp_led.c"
 13911 ;; Parameters:    Size  Location     Type
 13912 ;;  led             1    wreg     enum E17385
 13913 ;; Auto vars:     Size  Location     Type
 13914 ;;  led             1   31[COMRAM] enum E17385
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  1    wreg      void 
 13917 ;; Registers used:
 13918 ;;		wreg, status,2, status,0
 13919 ;; Tracked objects:
 13920 ;;		On entry : 3F/0
 13921 ;;		On exit  : 3F/0
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;Total ram usage:        3 bytes
 13929 ;; Hardware stack levels used: 1
 13930 ;; Hardware stack levels required when called: 7
 13931 ;; This function calls:
 13932 ;;		Nothing
 13933 ;; This function is called by:
 13934 ;;		_main
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text51
 13939  0138A4                     __ptext51:
 13940                           	callstack 0
 13941  0138A4                     _display_led:
 13942                           	callstack 23
 13943                           
 13944                           ; BSR set to: 0
 13945                           ;incstack = 0
 13946                           ;display_led@led stored from wreg
 13947  0138A4  6E20               	movwf	display_led@led^0,c
 13948                           
 13949                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
 13950  0138A6  D02D               	goto	l13051
 13951  0138A8                     l1402:
 13952                           
 13953                           ; BSR set to: 0
 13954  0138A8  98BD               	bcf	189,4,c	;volatile
 13955                           
 13956                           ; BSR set to: 0
 13957                           
 13958                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
 13959  0138AA  9ABD               	bcf	189,5,c	;volatile
 13960  0138AC  0012               	return	
 13961  0138AE                     l1408:
 13962                           
 13963                           ; BSR set to: 0
 13964  0138AE  98BD               	bcf	189,4,c	;volatile
 13965                           
 13966                           ; BSR set to: 0
 13967                           
 13968                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
 13969  0138B0  8ABD               	bsf	189,5,c	;volatile
 13970  0138B2  0012               	return	
 13971  0138B4                     l1413:
 13972                           
 13973                           ; BSR set to: 0
 13974  0138B4  88BD               	bsf	189,4,c	;volatile
 13975                           
 13976                           ; BSR set to: 0
 13977                           
 13978                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
 13979  0138B6  9ABD               	bcf	189,5,c	;volatile
 13980  0138B8  0012               	return	
 13981  0138BA                     l1418:
 13982                           
 13983                           ; BSR set to: 0
 13984  0138BA  9CBD               	bcf	189,6,c	;volatile
 13985                           
 13986                           ; BSR set to: 0
 13987                           
 13988                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
 13989  0138BC  9EBD               	bcf	189,7,c	;volatile
 13990  0138BE  0012               	return	
 13991  0138C0                     l1423:
 13992                           
 13993                           ; BSR set to: 0
 13994  0138C0  9CBD               	bcf	189,6,c	;volatile
 13995                           
 13996                           ; BSR set to: 0
 13997                           
 13998                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
 13999  0138C2  8EBD               	bsf	189,7,c	;volatile
 14000  0138C4  0012               	return	
 14001  0138C6                     l1428:
 14002                           
 14003                           ; BSR set to: 0
 14004  0138C6  8CBD               	bsf	189,6,c	;volatile
 14005                           
 14006                           ; BSR set to: 0
 14007                           
 14008                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
 14009  0138C8  9EBD               	bcf	189,7,c	;volatile
 14010  0138CA  0012               	return	
 14011  0138CC                     l1433:
 14012                           
 14013                           ; BSR set to: 0
 14014  0138CC  98BF               	bcf	191,4,c	;volatile
 14015                           
 14016                           ; BSR set to: 0
 14017                           
 14018                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
 14019  0138CE  9ABF               	bcf	191,5,c	;volatile
 14020  0138D0  0012               	return	
 14021  0138D2                     l1438:
 14022                           
 14023                           ; BSR set to: 0
 14024  0138D2  98BF               	bcf	191,4,c	;volatile
 14025                           
 14026                           ; BSR set to: 0
 14027                           
 14028                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
 14029  0138D4  8ABF               	bsf	191,5,c	;volatile
 14030  0138D6  0012               	return	
 14031  0138D8                     l1443:
 14032                           
 14033                           ; BSR set to: 0
 14034  0138D8  88BF               	bsf	191,4,c	;volatile
 14035                           
 14036                           ; BSR set to: 0
 14037                           
 14038                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
 14039  0138DA  9ABF               	bcf	191,5,c	;volatile
 14040  0138DC  0012               	return	
 14041  0138DE                     l1448:
 14042                           
 14043                           ; BSR set to: 0
 14044  0138DE  9CBF               	bcf	191,6,c	;volatile
 14045                           
 14046                           ; BSR set to: 0
 14047                           
 14048                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
 14049  0138E0  9EBF               	bcf	191,7,c	;volatile
 14050  0138E2  0012               	return	
 14051  0138E4                     l1453:
 14052                           
 14053                           ; BSR set to: 0
 14054  0138E4  9CBF               	bcf	191,6,c	;volatile
 14055                           
 14056                           ; BSR set to: 0
 14057                           
 14058                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
 14059  0138E6  8EBF               	bsf	191,7,c	;volatile
 14060  0138E8  0012               	return	
 14061  0138EA                     l1458:
 14062                           
 14063                           ; BSR set to: 0
 14064  0138EA  8CBF               	bsf	191,6,c	;volatile
 14065                           
 14066                           ; BSR set to: 0
 14067                           
 14068                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
 14069  0138EC  9EBF               	bcf	191,7,c	;volatile
 14070  0138EE  0012               	return	
 14071  0138F0                     l1463:
 14072                           
 14073                           ; BSR set to: 0
 14074  0138F0  98BD               	bcf	189,4,c	;volatile
 14075                           
 14076                           ; BSR set to: 0
 14077                           
 14078                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
 14079  0138F2  9ABD               	bcf	189,5,c	;volatile
 14080                           
 14081                           ; BSR set to: 0
 14082                           
 14083                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
 14084  0138F4  9CBD               	bcf	189,6,c	;volatile
 14085                           
 14086                           ; BSR set to: 0
 14087                           
 14088                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
 14089  0138F6  9EBD               	bcf	189,7,c	;volatile
 14090                           
 14091                           ; BSR set to: 0
 14092                           
 14093                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
 14094  0138F8  98BF               	bcf	191,4,c	;volatile
 14095                           
 14096                           ; BSR set to: 0
 14097                           
 14098                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
 14099  0138FA  9ABF               	bcf	191,5,c	;volatile
 14100                           
 14101                           ; BSR set to: 0
 14102                           
 14103                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
 14104  0138FC  9CBF               	bcf	191,6,c	;volatile
 14105                           
 14106                           ; BSR set to: 0
 14107                           
 14108                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
 14109  0138FE  9EBF               	bcf	191,7,c	;volatile
 14110  013900  0012               	return	
 14111  013902                     l13051:
 14112  013902  5020               	movf	display_led@led^0,w,c
 14113  013904  0100               	movlb	0	; () banked
 14114  013906  6F60               	movwf	??_display_led& (0+255),b
 14115  013908  6B61               	clrf	(??_display_led+1)& (0+255),b
 14116                           
 14117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14118                           ; Switch size 1, requested type "simple"
 14119                           ; Number of cases is 1, Range of values is 0 to 0
 14120                           ; switch strategies available:
 14121                           ; Name         Instructions Cycles
 14122                           ; simple_byte            4     3 (average)
 14123                           ;	Chosen strategy is simple_byte
 14124  01390A  5161               	movf	(??_display_led+1)& (0+255),w,b
 14125  01390C  0A00               	xorlw	0	; case 0
 14126  01390E  A4D8               	btfss	status,2,c
 14127  013910  D7EF               	goto	l1463
 14128                           
 14129                           ; BSR set to: 0
 14130                           ; Switch size 1, requested type "simple"
 14131                           ; Number of cases is 12, Range of values is 0 to 11
 14132                           ; switch strategies available:
 14133                           ; Name         Instructions Cycles
 14134                           ; simple_byte           37    19 (average)
 14135                           ;	Chosen strategy is simple_byte
 14136  013912  5160               	movf	??_display_led& (0+255),w,b
 14137  013914  0A00               	xorlw	0	; case 0
 14138  013916  B4D8               	btfsc	status,2,c
 14139  013918  D7C7               	goto	l1402
 14140  01391A  0A01               	xorlw	1	; case 1
 14141  01391C  B4D8               	btfsc	status,2,c
 14142  01391E  D7CA               	goto	l1413
 14143  013920  0A03               	xorlw	3	; case 2
 14144  013922  B4D8               	btfsc	status,2,c
 14145  013924  D7C4               	goto	l1408
 14146  013926  0A01               	xorlw	1	; case 3
 14147  013928  B4D8               	btfsc	status,2,c
 14148  01392A  D7C7               	goto	l1418
 14149  01392C  0A07               	xorlw	7	; case 4
 14150  01392E  B4D8               	btfsc	status,2,c
 14151  013930  D7CA               	goto	l1428
 14152  013932  0A01               	xorlw	1	; case 5
 14153  013934  B4D8               	btfsc	status,2,c
 14154  013936  D7C4               	goto	l1423
 14155  013938  0A03               	xorlw	3	; case 6
 14156  01393A  B4D8               	btfsc	status,2,c
 14157  01393C  D7C7               	goto	l1433
 14158  01393E  0A01               	xorlw	1	; case 7
 14159  013940  B4D8               	btfsc	status,2,c
 14160  013942  D7CA               	goto	l1443
 14161  013944  0A0F               	xorlw	15	; case 8
 14162  013946  B4D8               	btfsc	status,2,c
 14163  013948  D7C4               	goto	l1438
 14164  01394A  0A01               	xorlw	1	; case 9
 14165  01394C  B4D8               	btfsc	status,2,c
 14166  01394E  D7C7               	goto	l1448
 14167  013950  0A03               	xorlw	3	; case 10
 14168  013952  B4D8               	btfsc	status,2,c
 14169  013954  D7CA               	goto	l1458
 14170  013956  0A01               	xorlw	1	; case 11
 14171  013958  B4D8               	btfsc	status,2,c
 14172  01395A  D7C4               	goto	l1453
 14173  01395C  D7C9               	goto	l1463
 14174  01395E                     __end_of_display_led:
 14175                           	callstack 0
 14176                           
 14177 ;; *************** function _cli_read *****************
 14178 ;; Defined at:
 14179 ;;		line 86 in file "scdm.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;  a_ctx           2   36[BANK0 ] PTR struct _t_cli_ctx
 14182 ;;		 -> cli_ctx(131), 
 14183 ;; Auto vars:     Size  Location     Type
 14184 ;;  i               1   43[BANK0 ] unsigned char 
 14185 ;; Return value:  Size  Location     Type
 14186 ;;                  1    wreg      void 
 14187 ;; Registers used:
 14188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14189 ;; Tracked objects:
 14190 ;;		On entry : 3F/0
 14191 ;;		On exit  : 6/0
 14192 ;;		Unchanged: 0/0
 14193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14195 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14196 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14197 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14198 ;;Total ram usage:        8 bytes
 14199 ;; Hardware stack levels used: 1
 14200 ;; Hardware stack levels required when called: 14
 14201 ;; This function calls:
 14202 ;;		__cli_interpret_cmd
 14203 ;;		_linux_getc
 14204 ;;		_linux_putc
 14205 ;;		_memset
 14206 ;; This function is called by:
 14207 ;;		_main
 14208 ;; This function uses a non-reentrant model
 14209 ;;
 14210                           
 14211                           	psect	text52
 14212  012A8C                     __ptext52:
 14213                           	callstack 0
 14214  012A8C                     _cli_read:
 14215                           	callstack 16
 14216                           
 14217                           ; BSR set to: 0
 14218                           ;scdm.c: 86: void cli_read(t_cli_ctx *a_ctx);scdm.c: 87: {;scdm.c: 88:  uint8_t i = 0x00
      +                          ;
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;incstack = 0
 14222  012A8C  0E00               	movlw	0
 14223  012A8E  6F8B               	movwf	cli_read@i& (0+255),b
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;scdm.c: 91:  if (!linux_getc(&i)) {
 14227  012A90  0E8B               	movlw	low cli_read@i
 14228  012A92  6F60               	movwf	linux_getc@a_data& (0+255),b
 14229  012A94  6B61               	clrf	(linux_getc@a_data+1)& (0+255),b
 14230  012A96  EC74  F0A5         	call	_linux_getc	;wreg free
 14231  012A9A  0900               	iorlw	0
 14232  012A9C  B4D8               	btfsc	status,2,c
 14233  012A9E  0012               	return	
 14234  012AA0  D088               	goto	l13093
 14235  012AA2                     l13071:
 14236                           
 14237                           ; BSR set to: 0
 14238                           ;scdm.c: 103:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cp
      +                          os))] = '\0';
 14239  012AA2  EE20 F082          	lfsr	2,130
 14240  012AA6  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14241  012AA8  26D9               	addwf	fsr2l,f,c
 14242  012AAA  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14243  012AAC  22DA               	addwfc	fsr2h,f,c
 14244  012AAE  0E7E               	movlw	126
 14245  012AB0  64DF               	cpfsgt	indf2,c
 14246  012AB2  D00C               	goto	l13075
 14247                           
 14248                           ; BSR set to: 0
 14249  012AB4  EE20 F082          	lfsr	2,130
 14250  012AB8  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14251  012ABA  26D9               	addwf	fsr2l,f,c
 14252  012ABC  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14253  012ABE  22DA               	addwfc	fsr2h,f,c
 14254  012AC0  50DF               	movf	indf2,w,c
 14255  012AC2  6F86               	movwf	??_cli_read& (0+255),b
 14256  012AC4  5186               	movf	??_cli_read& (0+255),w,b
 14257  012AC6  6F89               	movwf	_cli_read$3080& (0+255),b
 14258  012AC8  6B8A               	clrf	(_cli_read$3080+1)& (0+255),b
 14259  012ACA  D00E               	goto	l1567
 14260  012ACC                     l13075:
 14261                           
 14262                           ; BSR set to: 0
 14263  012ACC  EE20 F082          	lfsr	2,130
 14264  012AD0  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14265  012AD2  26D9               	addwf	fsr2l,f,c
 14266  012AD4  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14267  012AD6  22DA               	addwfc	fsr2h,f,c
 14268  012AD8  50DF               	movf	indf2,w,c
 14269  012ADA  6F86               	movwf	??_cli_read& (0+255),b
 14270  012ADC  0E01               	movlw	1
 14271  012ADE  2586               	addwf	??_cli_read& (0+255),w,b
 14272  012AE0  6F89               	movwf	_cli_read$3080& (0+255),b
 14273  012AE2  6B8A               	clrf	(_cli_read$3080+1)& (0+255),b
 14274  012AE4  0E00               	movlw	0
 14275  012AE6  238A               	addwfc	(_cli_read$3080+1)& (0+255),f,b
 14276  012AE8                     l1567:
 14277                           
 14278                           ; BSR set to: 0
 14279  012AE8  5189               	movf	_cli_read$3080& (0+255),w,b
 14280  012AEA  2584               	addwf	cli_read@a_ctx& (0+255),w,b
 14281  012AEC  6F86               	movwf	??_cli_read& (0+255),b
 14282  012AEE  518A               	movf	(_cli_read$3080+1)& (0+255),w,b
 14283  012AF0  2185               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 14284  012AF2  6F87               	movwf	(??_cli_read+1)& (0+255),b
 14285  012AF4  0E02               	movlw	2
 14286  012AF6  2586               	addwf	??_cli_read& (0+255),w,b
 14287  012AF8  6ED9               	movwf	fsr2l,c
 14288  012AFA  0E00               	movlw	0
 14289  012AFC  2187               	addwfc	(??_cli_read+1)& (0+255),w,b
 14290  012AFE  6EDA               	movwf	fsr2h,c
 14291  012B00  0E00               	movlw	0
 14292  012B02  6EDF               	movwf	indf2,c
 14293                           
 14294                           ; BSR set to: 0
 14295                           ;scdm.c: 104:   linux_putc((unsigned char *) "\r\n", 2);
 14296  012B04  0E90               	movlw	low (STR_15+104)
 14297  012B06  6F76               	movwf	linux_putc@data& (0+255),b
 14298  012B08  0EFE               	movlw	high (STR_15+104)
 14299  012B0A  6F77               	movwf	(linux_putc@data+1)& (0+255),b
 14300  012B0C  0E02               	movlw	2
 14301  012B0E  6F78               	movwf	linux_putc@a_len& (0+255),b
 14302  012B10  EC01  F0A7         	call	_linux_putc	;wreg free
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;scdm.c: 105:   res = _cli_interpret_cmd(a_ctx);
 14306  012B14  C084  F078         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 14307  012B18  C085  F079         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 14308  012B1C  EC07  F092         	call	__cli_interpret_cmd	;wreg free
 14309  012B20  6FF8               	movwf	_res& (0+255),b
 14310                           
 14311                           ; BSR set to: 0
 14312                           ;scdm.c: 106:   a_ctx->cpos = 0;
 14313  012B22  EE20 F082          	lfsr	2,130
 14314  012B26  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14315  012B28  26D9               	addwf	fsr2l,f,c
 14316  012B2A  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14317  012B2C  22DA               	addwfc	fsr2h,f,c
 14318  012B2E  0E00               	movlw	0
 14319  012B30  6EDF               	movwf	indf2,c
 14320                           
 14321                           ; BSR set to: 0
 14322                           ;scdm.c: 107:   memset(a_ctx->cmd, 0x00, 128);
 14323  012B32  0E02               	movlw	2
 14324  012B34  2584               	addwf	cli_read@a_ctx& (0+255),w,b
 14325  012B36  6F60               	movwf	memset@dest& (0+255),b
 14326  012B38  0E00               	movlw	0
 14327  012B3A  2185               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 14328  012B3C  6F61               	movwf	(memset@dest+1)& (0+255),b
 14329  012B3E  0E00               	movlw	0
 14330  012B40  6F63               	movwf	(memset@c+1)& (0+255),b
 14331  012B42  0E00               	movlw	0
 14332  012B44  6F62               	movwf	memset@c& (0+255),b
 14333  012B46  0E00               	movlw	0
 14334  012B48  6F65               	movwf	(memset@n+1)& (0+255),b
 14335  012B4A  0E80               	movlw	128
 14336  012B4C  6F64               	movwf	memset@n& (0+255),b
 14337  012B4E  ECEF  F095         	call	_memset	;wreg free
 14338                           
 14339                           ;scdm.c: 108:   break;
 14340  012B52  0012               	return	
 14341  012B54                     l13085:
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;scdm.c: 111:   if (a_ctx->cpos < (128 - 1)) {
 14345  012B54  EE20 F082          	lfsr	2,130
 14346  012B58  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14347  012B5A  26D9               	addwf	fsr2l,f,c
 14348  012B5C  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14349  012B5E  22DA               	addwfc	fsr2h,f,c
 14350  012B60  0E7F               	movlw	127
 14351  012B62  60DF               	cpfslt	indf2,c
 14352  012B64  0012               	return	
 14353                           
 14354                           ; BSR set to: 0
 14355                           ;scdm.c: 112:    a_ctx->cmd[a_ctx->cpos++] = i;
 14356  012B66  EE20 F082          	lfsr	2,130
 14357  012B6A  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14358  012B6C  26D9               	addwf	fsr2l,f,c
 14359  012B6E  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14360  012B70  22DA               	addwfc	fsr2h,f,c
 14361  012B72  50DF               	movf	indf2,w,c
 14362  012B74  6F86               	movwf	??_cli_read& (0+255),b
 14363  012B76  5186               	movf	??_cli_read& (0+255),w,b
 14364  012B78  2584               	addwf	cli_read@a_ctx& (0+255),w,b
 14365  012B7A  6F87               	movwf	(??_cli_read+1)& (0+255),b
 14366  012B7C  0E00               	movlw	0
 14367  012B7E  2185               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 14368  012B80  6F88               	movwf	(??_cli_read+2)& (0+255),b
 14369  012B82  0E02               	movlw	2
 14370  012B84  2587               	addwf	(??_cli_read+1)& (0+255),w,b
 14371  012B86  6ED9               	movwf	fsr2l,c
 14372  012B88  0E00               	movlw	0
 14373  012B8A  2188               	addwfc	(??_cli_read+2)& (0+255),w,b
 14374  012B8C  6EDA               	movwf	fsr2h,c
 14375  012B8E  0060  F22F  FFDF   	movff	cli_read@i,indf2
 14376  012B94  EE20 F082          	lfsr	2,130
 14377  012B98  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14378  012B9A  26D9               	addwf	fsr2l,f,c
 14379  012B9C  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14380  012B9E  22DA               	addwfc	fsr2h,f,c
 14381  012BA0  2ADF               	incf	indf2,f,c
 14382                           
 14383                           ; BSR set to: 0
 14384                           ;scdm.c: 113:    linux_putc(&i, 1);
 14385  012BA2  0E8B               	movlw	low cli_read@i
 14386  012BA4  6F76               	movwf	linux_putc@data& (0+255),b
 14387  012BA6  6B77               	clrf	(linux_putc@data+1)& (0+255),b
 14388  012BA8  0E01               	movlw	1
 14389  012BAA  6F78               	movwf	linux_putc@a_len& (0+255),b
 14390  012BAC  EC01  F0A7         	call	_linux_putc	;wreg free
 14391  012BB0  0012               	return	
 14392  012BB2                     l13093:
 14393  012BB2  0100               	movlb	0	; () banked
 14394  012BB4  518B               	movf	cli_read@i& (0+255),w,b
 14395  012BB6  6F86               	movwf	??_cli_read& (0+255),b
 14396  012BB8  6B87               	clrf	(??_cli_read+1)& (0+255),b
 14397                           
 14398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14399                           ; Switch size 1, requested type "simple"
 14400                           ; Number of cases is 1, Range of values is 0 to 0
 14401                           ; switch strategies available:
 14402                           ; Name         Instructions Cycles
 14403                           ; simple_byte            4     3 (average)
 14404                           ;	Chosen strategy is simple_byte
 14405  012BBA  5187               	movf	(??_cli_read+1)& (0+255),w,b
 14406  012BBC  0A00               	xorlw	0	; case 0
 14407  012BBE  A4D8               	btfss	status,2,c
 14408  012BC0  D7C9               	goto	l13085
 14409                           
 14410                           ; BSR set to: 0
 14411                           ; Switch size 1, requested type "simple"
 14412                           ; Number of cases is 4, Range of values is 13 to 127
 14413                           ; switch strategies available:
 14414                           ; Name         Instructions Cycles
 14415                           ; simple_byte           13     7 (average)
 14416                           ;	Chosen strategy is simple_byte
 14417  012BC2  5186               	movf	??_cli_read& (0+255),w,b
 14418  012BC4  0A0D               	xorlw	13	; case 13
 14419  012BC6  B4D8               	btfsc	status,2,c
 14420  012BC8  D76C               	goto	l13071
 14421  012BCA  0A16               	xorlw	22	; case 27
 14422  012BCC  B4D8               	btfsc	status,2,c
 14423  012BCE  0012               	return	
 14424  012BD0  0A65               	xorlw	101	; case 126
 14425  012BD2  B4D8               	btfsc	status,2,c
 14426  012BD4  0012               	return	
 14427  012BD6  0A01               	xorlw	1	; case 127
 14428  012BD8  B4D8               	btfsc	status,2,c
 14429  012BDA  0012               	return		;funcret
 14430  012BDC  D7BB               	goto	l13085
 14431  012BDE                     __end_of_cli_read:
 14432                           	callstack 0
 14433                           
 14434 ;; *************** function _memset *****************
 14435 ;; Defined at:
 14436 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;  dest            2    0[BANK0 ] PTR void 
 14439 ;;		 -> ring_buf1(67), cli_ctx(131), 
 14440 ;;  c               2    2[BANK0 ] int 
 14441 ;;  n               2    4[BANK0 ] unsigned int 
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;  s               2   10[BANK0 ] PTR unsigned char 
 14444 ;;		 -> ring_buf1(67), cli_ctx(131), 
 14445 ;;  k               2    8[BANK0 ] unsigned int 
 14446 ;; Return value:  Size  Location     Type
 14447 ;;                  2    0[BANK0 ] PTR void 
 14448 ;; Registers used:
 14449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14450 ;; Tracked objects:
 14451 ;;		On entry : 3F/0
 14452 ;;		On exit  : 3F/0
 14453 ;;		Unchanged: 0/0
 14454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14455 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14456 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14457 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14458 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14459 ;;Total ram usage:       12 bytes
 14460 ;; Hardware stack levels used: 1
 14461 ;; Hardware stack levels required when called: 7
 14462 ;; This function calls:
 14463 ;;		Nothing
 14464 ;; This function is called by:
 14465 ;;		_cli_init
 14466 ;;		_cli_read
 14467 ;;		_ringBufS_init
 14468 ;;		_ringBufS_flush
 14469 ;; This function uses a non-reentrant model
 14470 ;;
 14471                           
 14472                           	psect	text53
 14473  012BDE                     __ptext53:
 14474                           	callstack 0
 14475  012BDE                     _memset:
 14476                           	callstack 21
 14477                           
 14478                           ; BSR set to: 0
 14479                           
 14480                           ;incstack = 0
 14481  012BDE  C060  F06A         	movff	memset@dest,memset@s
 14482  012BE2  C061  F06B         	movff	memset@dest+1,memset@s+1
 14483  012BE6  5164               	movf	memset@n& (0+255),w,b
 14484  012BE8  1165               	iorwf	(memset@n+1)& (0+255),w,b
 14485  012BEA  B4D8               	btfsc	status,2,c
 14486  012BEC  0012               	return	
 14487                           
 14488                           ; BSR set to: 0
 14489  012BEE  0060  F1AB  FFD9   	movff	memset@s,fsr2l
 14490  012BF4  0060  F1AF  FFDA   	movff	memset@s+1,fsr2h
 14491  012BFA  0060  F18B  FFDF   	movff	memset@c,indf2
 14492                           
 14493                           ; BSR set to: 0
 14494  012C00  5164               	movf	memset@n& (0+255),w,b
 14495  012C02  256A               	addwf	memset@s& (0+255),w,b
 14496  012C04  6F66               	movwf	??_memset& (0+255),b
 14497  012C06  5165               	movf	(memset@n+1)& (0+255),w,b
 14498  012C08  216B               	addwfc	(memset@s+1)& (0+255),w,b
 14499  012C0A  6F67               	movwf	(??_memset+1)& (0+255),b
 14500  012C0C  0EFF               	movlw	255
 14501  012C0E  2566               	addwf	??_memset& (0+255),w,b
 14502  012C10  6ED9               	movwf	fsr2l,c
 14503  012C12  0EFF               	movlw	255
 14504  012C14  2167               	addwfc	(??_memset+1)& (0+255),w,b
 14505  012C16  6EDA               	movwf	fsr2h,c
 14506  012C18  0060  F18B  FFDF   	movff	memset@c,indf2
 14507  012C1E  5165               	movf	(memset@n+1)& (0+255),w,b
 14508  012C20  E104               	bnz	l11193
 14509  012C22  0E03               	movlw	3
 14510  012C24  5D64               	subwf	memset@n& (0+255),w,b
 14511  012C26  A0D8               	btfss	status,0,c
 14512  012C28  0012               	return	
 14513  012C2A                     l11193:
 14514                           
 14515                           ; BSR set to: 0
 14516  012C2A  EE20 F001          	lfsr	2,1
 14517  012C2E  516A               	movf	memset@s& (0+255),w,b
 14518  012C30  26D9               	addwf	fsr2l,f,c
 14519  012C32  516B               	movf	(memset@s+1)& (0+255),w,b
 14520  012C34  22DA               	addwfc	fsr2h,f,c
 14521  012C36  0060  F18B  FFDF   	movff	memset@c,indf2
 14522  012C3C  EE20 F002          	lfsr	2,2
 14523  012C40  516A               	movf	memset@s& (0+255),w,b
 14524  012C42  26D9               	addwf	fsr2l,f,c
 14525  012C44  516B               	movf	(memset@s+1)& (0+255),w,b
 14526  012C46  22DA               	addwfc	fsr2h,f,c
 14527  012C48  0060  F18B  FFDF   	movff	memset@c,indf2
 14528  012C4E  5164               	movf	memset@n& (0+255),w,b
 14529  012C50  256A               	addwf	memset@s& (0+255),w,b
 14530  012C52  6F66               	movwf	??_memset& (0+255),b
 14531  012C54  5165               	movf	(memset@n+1)& (0+255),w,b
 14532  012C56  216B               	addwfc	(memset@s+1)& (0+255),w,b
 14533  012C58  6F67               	movwf	(??_memset+1)& (0+255),b
 14534  012C5A  0EFE               	movlw	254
 14535  012C5C  2566               	addwf	??_memset& (0+255),w,b
 14536  012C5E  6ED9               	movwf	fsr2l,c
 14537  012C60  0EFF               	movlw	255
 14538  012C62  2167               	addwfc	(??_memset+1)& (0+255),w,b
 14539  012C64  6EDA               	movwf	fsr2h,c
 14540  012C66  0060  F18B  FFDF   	movff	memset@c,indf2
 14541  012C6C  5164               	movf	memset@n& (0+255),w,b
 14542  012C6E  256A               	addwf	memset@s& (0+255),w,b
 14543  012C70  6F66               	movwf	??_memset& (0+255),b
 14544  012C72  5165               	movf	(memset@n+1)& (0+255),w,b
 14545  012C74  216B               	addwfc	(memset@s+1)& (0+255),w,b
 14546  012C76  6F67               	movwf	(??_memset+1)& (0+255),b
 14547  012C78  0EFD               	movlw	253
 14548  012C7A  2566               	addwf	??_memset& (0+255),w,b
 14549  012C7C  6ED9               	movwf	fsr2l,c
 14550  012C7E  0EFF               	movlw	255
 14551  012C80  2167               	addwfc	(??_memset+1)& (0+255),w,b
 14552  012C82  6EDA               	movwf	fsr2h,c
 14553  012C84  0060  F18B  FFDF   	movff	memset@c,indf2
 14554                           
 14555                           ; BSR set to: 0
 14556  012C8A  5165               	movf	(memset@n+1)& (0+255),w,b
 14557  012C8C  E104               	bnz	l11199
 14558  012C8E  0E07               	movlw	7
 14559  012C90  5D64               	subwf	memset@n& (0+255),w,b
 14560  012C92  A0D8               	btfss	status,0,c
 14561  012C94  0012               	return	
 14562  012C96                     l11199:
 14563                           
 14564                           ; BSR set to: 0
 14565  012C96  EE20 F003          	lfsr	2,3
 14566  012C9A  516A               	movf	memset@s& (0+255),w,b
 14567  012C9C  26D9               	addwf	fsr2l,f,c
 14568  012C9E  516B               	movf	(memset@s+1)& (0+255),w,b
 14569  012CA0  22DA               	addwfc	fsr2h,f,c
 14570  012CA2  0060  F18B  FFDF   	movff	memset@c,indf2
 14571  012CA8  5164               	movf	memset@n& (0+255),w,b
 14572  012CAA  256A               	addwf	memset@s& (0+255),w,b
 14573  012CAC  6F66               	movwf	??_memset& (0+255),b
 14574  012CAE  5165               	movf	(memset@n+1)& (0+255),w,b
 14575  012CB0  216B               	addwfc	(memset@s+1)& (0+255),w,b
 14576  012CB2  6F67               	movwf	(??_memset+1)& (0+255),b
 14577  012CB4  0EFC               	movlw	252
 14578  012CB6  2566               	addwf	??_memset& (0+255),w,b
 14579  012CB8  6ED9               	movwf	fsr2l,c
 14580  012CBA  0EFF               	movlw	255
 14581  012CBC  2167               	addwfc	(??_memset+1)& (0+255),w,b
 14582  012CBE  6EDA               	movwf	fsr2h,c
 14583  012CC0  0060  F18B  FFDF   	movff	memset@c,indf2
 14584                           
 14585                           ; BSR set to: 0
 14586  012CC6  5165               	movf	(memset@n+1)& (0+255),w,b
 14587  012CC8  E104               	bnz	l11205
 14588  012CCA  0E09               	movlw	9
 14589  012CCC  5D64               	subwf	memset@n& (0+255),w,b
 14590  012CCE  A0D8               	btfss	status,0,c
 14591  012CD0  0012               	return	
 14592  012CD2                     l11205:
 14593                           
 14594                           ; BSR set to: 0
 14595  012CD2  C06A  F066         	movff	memset@s,??_memset
 14596  012CD6  C06B  F067         	movff	memset@s+1,??_memset+1
 14597  012CDA  1F66               	comf	??_memset& (0+255),f,b
 14598  012CDC  1F67               	comf	(??_memset+1)& (0+255),f,b
 14599  012CDE  4B66               	infsnz	??_memset& (0+255),f,b
 14600  012CE0  2B67               	incf	(??_memset+1)& (0+255),f,b
 14601  012CE2  0E03               	movlw	3
 14602  012CE4  1566               	andwf	??_memset& (0+255),w,b
 14603  012CE6  6F68               	movwf	memset@k& (0+255),b
 14604  012CE8  6B69               	clrf	(memset@k+1)& (0+255),b
 14605  012CEA  5168               	movf	memset@k& (0+255),w,b
 14606  012CEC  276A               	addwf	memset@s& (0+255),f,b
 14607  012CEE  5169               	movf	(memset@k+1)& (0+255),w,b
 14608  012CF0  236B               	addwfc	(memset@s+1)& (0+255),f,b
 14609  012CF2  5168               	movf	memset@k& (0+255),w,b
 14610  012CF4  5F64               	subwf	memset@n& (0+255),f,b
 14611  012CF6  5169               	movf	(memset@k+1)& (0+255),w,b
 14612  012CF8  5B65               	subwfb	(memset@n+1)& (0+255),f,b
 14613  012CFA  0EFC               	movlw	252
 14614  012CFC  1764               	andwf	memset@n& (0+255),f,b
 14615  012CFE  0EFF               	movlw	255
 14616  012D00  1765               	andwf	(memset@n+1)& (0+255),f,b
 14617  012D02  D00E               	goto	l11213
 14618  012D04                     l11207:
 14619                           
 14620                           ; BSR set to: 0
 14621  012D04  0060  F1AB  FFD9   	movff	memset@s,fsr2l
 14622  012D0A  0060  F1AF  FFDA   	movff	memset@s+1,fsr2h
 14623  012D10  0060  F18B  FFDF   	movff	memset@c,indf2
 14624                           
 14625                           ; BSR set to: 0
 14626  012D16  0764               	decf	memset@n& (0+255),f,b
 14627  012D18  A0D8               	btfss	status,0,c
 14628  012D1A  0765               	decf	(memset@n+1)& (0+255),f,b
 14629                           
 14630                           ; BSR set to: 0
 14631  012D1C  4B6A               	infsnz	memset@s& (0+255),f,b
 14632  012D1E  2B6B               	incf	(memset@s+1)& (0+255),f,b
 14633  012D20                     l11213:
 14634                           
 14635                           ; BSR set to: 0
 14636  012D20  5164               	movf	memset@n& (0+255),w,b
 14637  012D22  1165               	iorwf	(memset@n+1)& (0+255),w,b
 14638  012D24  B4D8               	btfsc	status,2,c
 14639  012D26  0012               	return	
 14640  012D28  D7ED               	goto	l11207
 14641  012D2A                     __end_of_memset:
 14642                           	callstack 0
 14643                           
 14644 ;; *************** function _linux_putc *****************
 14645 ;; Defined at:
 14646 ;;		line 51 in file "scdm.c"
 14647 ;; Parameters:    Size  Location     Type
 14648 ;;  data            2   22[BANK0 ] PTR unsigned char 
 14649 ;;		 -> STR_29(3), cli_read@i(1), 
 14650 ;;  a_len           1   24[BANK0 ] unsigned char 
 14651 ;; Auto vars:     Size  Location     Type
 14652 ;;		None
 14653 ;; Return value:  Size  Location     Type
 14654 ;;                  1    wreg      unsigned char 
 14655 ;; Registers used:
 14656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14657 ;; Tracked objects:
 14658 ;;		On entry : 3F/0
 14659 ;;		On exit  : 3F/0
 14660 ;;		Unchanged: 0/0
 14661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14662 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14665 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14666 ;;Total ram usage:        3 bytes
 14667 ;; Hardware stack levels used: 1
 14668 ;; Hardware stack levels required when called: 12
 14669 ;; This function calls:
 14670 ;;		_puts
 14671 ;; This function is called by:
 14672 ;;		_cli_read
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           	psect	text54
 14677  014E02                     __ptext54:
 14678                           	callstack 0
 14679  014E02                     _linux_putc:
 14680                           	callstack 17
 14681                           
 14682                           ; BSR set to: 0
 14683                           ;scdm.c: 51: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 52: {;scdm.c: 53: 
      +                           puts((const char *) data);
 14684                           
 14685                           ; BSR set to: 0
 14686                           ;incstack = 0
 14687  014E02  C076  F073         	movff	linux_putc@data,puts@s
 14688  014E06  C077  F074         	movff	linux_putc@data+1,puts@s+1
 14689  014E0A  EC29  F0A4         	call	_puts	;wreg free
 14690                           
 14691                           ; BSR set to: 0
 14692  014E0E  0012               	return		;funcret
 14693  014E10                     __end_of_linux_putc:
 14694                           	callstack 0
 14695                           
 14696 ;; *************** function _linux_getc *****************
 14697 ;; Defined at:
 14698 ;;		line 41 in file "scdm.c"
 14699 ;; Parameters:    Size  Location     Type
 14700 ;;  a_data          2    0[BANK0 ] PTR unsigned char 
 14701 ;;		 -> cli_read@i(1), main@i(1), 
 14702 ;; Auto vars:     Size  Location     Type
 14703 ;;		None
 14704 ;; Return value:  Size  Location     Type
 14705 ;;                  1    wreg      unsigned char 
 14706 ;; Registers used:
 14707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14708 ;; Tracked objects:
 14709 ;;		On entry : 3F/0
 14710 ;;		On exit  : 6/0
 14711 ;;		Unchanged: 0/0
 14712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14717 ;;Total ram usage:        2 bytes
 14718 ;; Hardware stack levels used: 1
 14719 ;; Hardware stack levels required when called: 8
 14720 ;; This function calls:
 14721 ;;		_UART1_Read
 14722 ;;		_UART1_is_rx_ready
 14723 ;; This function is called by:
 14724 ;;		_main
 14725 ;;		_cli_read
 14726 ;; This function uses a non-reentrant model
 14727 ;;
 14728                           
 14729                           	psect	text55
 14730  014AE8                     __ptext55:
 14731                           	callstack 0
 14732  014AE8                     _linux_getc:
 14733                           	callstack 22
 14734                           
 14735                           ; BSR set to: 0
 14736                           ;scdm.c: 41: uint8_t linux_getc(uint8_t *a_data);scdm.c: 42: {;scdm.c: 43:  if (UART1_is
      +                          _rx_ready()) {
 14737                           
 14738                           ; BSR set to: 0
 14739                           ;incstack = 0
 14740  014AE8  EC08  F0A7         	call	_UART1_is_rx_ready	;wreg free
 14741  014AEC  0900               	iorlw	0
 14742  014AEE  B4D8               	btfsc	status,2,c
 14743  014AF0  D00B               	goto	l12787
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;scdm.c: 44:   a_data[0] = UART1_Read();
 14747  014AF2  EC73  F0A3         	call	_UART1_Read	;wreg free
 14748  014AF6  0060  F183  FFD9   	movff	linux_getc@a_data,fsr2l
 14749  014AFC  0060  F187  FFDA   	movff	linux_getc@a_data+1,fsr2h
 14750  014B02  6EDF               	movwf	indf2,c
 14751                           
 14752                           ; BSR set to: 57
 14753                           ;scdm.c: 45:   return 1;
 14754  014B04  0E01               	movlw	1
 14755  014B06  0012               	return	
 14756  014B08                     l12787:
 14757                           
 14758                           ; BSR set to: 0
 14759                           ;scdm.c: 47:   return 0;
 14760  014B08  0E00               	movlw	0
 14761  014B0A  0012               	return		;funcret
 14762  014B0C                     __end_of_linux_getc:
 14763                           	callstack 0
 14764                           
 14765 ;; *************** function _UART1_is_rx_ready *****************
 14766 ;; Defined at:
 14767 ;;		line 169 in file "mcc_generated_files/uart1.c"
 14768 ;; Parameters:    Size  Location     Type
 14769 ;;		None
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;		None
 14772 ;; Return value:  Size  Location     Type
 14773 ;;                  1    wreg      _Bool 
 14774 ;; Registers used:
 14775 ;;		wreg, status,2
 14776 ;; Tracked objects:
 14777 ;;		On entry : 3F/0
 14778 ;;		On exit  : 3F/0
 14779 ;;		Unchanged: 3F/0
 14780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14785 ;;Total ram usage:        0 bytes
 14786 ;; Hardware stack levels used: 1
 14787 ;; Hardware stack levels required when called: 7
 14788 ;; This function calls:
 14789 ;;		Nothing
 14790 ;; This function is called by:
 14791 ;;		_linux_getc
 14792 ;; This function uses a non-reentrant model
 14793 ;;
 14794                           
 14795                           	psect	text56
 14796  014E10                     __ptext56:
 14797                           	callstack 0
 14798  014E10                     _UART1_is_rx_ready:
 14799                           	callstack 22
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 14803                           
 14804                           ;incstack = 0
 14805  014E10  5039               	movf	_uart1RxCount^0,w,c	;volatile
 14806  014E12  B4D8               	btfsc	status,2,c
 14807  014E14  D002               	goto	u12690
 14808  014E16  0E01               	movlw	1
 14809  014E18  0012               	return	
 14810  014E1A                     u12690:
 14811  014E1A  0E00               	movlw	0
 14812                           
 14813                           ; BSR set to: 0
 14814  014E1C  0012               	return		;funcret
 14815  014E1E                     __end_of_UART1_is_rx_ready:
 14816                           	callstack 0
 14817                           
 14818 ;; *************** function _UART1_Read *****************
 14819 ;; Defined at:
 14820 ;;		line 188 in file "mcc_generated_files/uart1.c"
 14821 ;; Parameters:    Size  Location     Type
 14822 ;;		None
 14823 ;; Auto vars:     Size  Location     Type
 14824 ;;  readValue       1   31[COMRAM] unsigned char 
 14825 ;; Return value:  Size  Location     Type
 14826 ;;                  1    wreg      unsigned char 
 14827 ;; Registers used:
 14828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14829 ;; Tracked objects:
 14830 ;;		On entry : 3F/0
 14831 ;;		On exit  : 3F/39
 14832 ;;		Unchanged: 0/0
 14833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14838 ;;Total ram usage:        1 bytes
 14839 ;; Hardware stack levels used: 1
 14840 ;; Hardware stack levels required when called: 7
 14841 ;; This function calls:
 14842 ;;		Nothing
 14843 ;; This function is called by:
 14844 ;;		_linux_getc
 14845 ;; This function uses a non-reentrant model
 14846 ;;
 14847                           
 14848                           	psect	text57
 14849  0146E6                     __ptext57:
 14850                           	callstack 0
 14851  0146E6                     _UART1_Read:
 14852                           	callstack 22
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;incstack = 0
 14862  0146E6  5039               	movf	_uart1RxCount^0,w,c	;volatile
 14863  0146E8  B4D8               	btfsc	status,2,c
 14864  0146EA  D7FD               	goto	__ptext57
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 14868  0146EC  0E00               	movlw	low _uart1RxStatusBuffer
 14869  0146EE  243A               	addwf	_uart1RxTail^0,w,c	;volatile
 14870  0146F0  6ED9               	movwf	fsr2l,c
 14871  0146F2  6ADA               	clrf	fsr2h,c
 14872  0146F4  0E02               	movlw	high _uart1RxStatusBuffer
 14873  0146F6  22DA               	addwfc	fsr2h,f,c
 14874  0146F8  50DF               	movf	indf2,w,c
 14875  0146FA  6E38               	movwf	_uart1RxLastError^0,c	;volatile
 14876                           
 14877                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 14878  0146FC  0E00               	movlw	low _uart1RxBuffer
 14879  0146FE  243A               	addwf	_uart1RxTail^0,w,c	;volatile
 14880  014700  6ED9               	movwf	fsr2l,c
 14881  014702  6ADA               	clrf	fsr2h,c
 14882  014704  0E03               	movlw	high _uart1RxBuffer
 14883  014706  22DA               	addwfc	fsr2h,f,c
 14884  014708  50DF               	movf	indf2,w,c
 14885  01470A  6E20               	movwf	UART1_Read@readValue^0,c
 14886                           
 14887                           ; BSR set to: 0
 14888  01470C  2A3A               	incf	_uart1RxTail^0,f,c	;volatile
 14889                           
 14890                           ; BSR set to: 0
 14891                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 14892  01470E  0E3F               	movlw	63
 14893  014710  643A               	cpfsgt	_uart1RxTail^0,c
 14894  014712  D002               	goto	l12339
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 14898  014714  0E00               	movlw	0
 14899  014716  6E3A               	movwf	_uart1RxTail^0,c	;volatile
 14900  014718                     l12339:
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 14904  014718  0139               	movlb	57	; () banked
 14905  01471A  9793               	bcf	147,3,b	;volatile
 14906                           
 14907                           ; BSR set to: 57
 14908                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 14909  01471C  0639               	decf	_uart1RxCount^0,f,c	;volatile
 14910                           
 14911                           ; BSR set to: 57
 14912                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 14913  01471E  8793               	bsf	147,3,b	;volatile
 14914                           
 14915                           ; BSR set to: 57
 14916                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 14917  014720  5020               	movf	UART1_Read@readValue^0,w,c
 14918                           
 14919                           ; BSR set to: 57
 14920  014722  0012               	return		;funcret
 14921  014724                     __end_of_UART1_Read:
 14922                           	callstack 0
 14923                           
 14924 ;; *************** function __cli_interpret_cmd *****************
 14925 ;; Defined at:
 14926 ;;		line 57 in file "scdm.c"
 14927 ;; Parameters:    Size  Location     Type
 14928 ;;  a_ctx           2   24[BANK0 ] PTR struct _t_cli_ctx
 14929 ;;		 -> cli_ctx(131), 
 14930 ;; Auto vars:     Size  Location     Type
 14931 ;;  i               1   35[BANK0 ] unsigned char 
 14932 ;;  ret             1   34[BANK0 ] unsigned char 
 14933 ;; Return value:  Size  Location     Type
 14934 ;;                  1    wreg      unsigned char 
 14935 ;; Registers used:
 14936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14937 ;; Tracked objects:
 14938 ;;		On entry : 3F/0
 14939 ;;		On exit  : 3F/0
 14940 ;;		Unchanged: 0/0
 14941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14942 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14944 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14945 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14946 ;;Total ram usage:       12 bytes
 14947 ;; Hardware stack levels used: 1
 14948 ;; Hardware stack levels required when called: 13
 14949 ;; This function calls:
 14950 ;;		Absolute function
 14951 ;;		_fh_p0
 14952 ;;		_fh_p1
 14953 ;;		_fh_pd
 14954 ;;		_fh_pl
 14955 ;;		_fh_po
 14956 ;;		_fh_pp
 14957 ;;		_fh_pr
 14958 ;;		_fh_ps
 14959 ;;		_fh_pu
 14960 ;;		_strlen
 14961 ;;		_strncmp
 14962 ;; This function is called by:
 14963 ;;		_cli_read
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           	psect	text58
 14968  01240E                     __ptext58:
 14969                           	callstack 0
 14970  01240E                     __cli_interpret_cmd:
 14971                           	callstack 16
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;scdm.c: 57: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 58: {;scdm.c: 5
      +                          9:  uint8_t i = 0;
 14975                           
 14976                           ; BSR set to: 57
 14977                           ;incstack = 0
 14978  01240E  0E00               	movlw	0
 14979  012410  6F83               	movwf	__cli_interpret_cmd@i& (0+255),b
 14980                           
 14981                           ;scdm.c: 60:  uint8_t ret = E_CMD_OK;
 14982  012412  0E00               	movlw	0
 14983  012414  6F82               	movwf	__cli_interpret_cmd@ret& (0+255),b
 14984                           
 14985                           ; BSR set to: 0
 14986                           ;scdm.c: 62:  if (!strlen(a_ctx->cmd)) {
 14987  012416  0E02               	movlw	2
 14988  012418  2578               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 14989  01241A  6F60               	movwf	strlen@s& (0+255),b
 14990  01241C  0E00               	movlw	0
 14991  01241E  2179               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 14992  012420  6F61               	movwf	(strlen@s+1)& (0+255),b
 14993  012422  ECF8  F0A0         	call	_strlen	;wreg free
 14994  012426  5160               	movf	?_strlen& (0+255),w,b
 14995  012428  1161               	iorwf	(?_strlen+1)& (0+255),w,b
 14996  01242A  A4D8               	btfss	status,2,c
 14997  01242C  D002               	goto	l12823
 14998                           
 14999                           ; BSR set to: 0
 15000                           ;scdm.c: 63:   return E_CMD_EMPTY;
 15001  01242E  0E03               	movlw	3
 15002  012430  0012               	return	
 15003  012432                     l12823:
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;scdm.c: 66:  if (strlen(a_ctx->cmd) < 2) {
 15007  012432  0E02               	movlw	2
 15008  012434  2578               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 15009  012436  6F60               	movwf	strlen@s& (0+255),b
 15010  012438  0E00               	movlw	0
 15011  01243A  2179               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 15012  01243C  6F61               	movwf	(strlen@s+1)& (0+255),b
 15013  01243E  ECF8  F0A0         	call	_strlen	;wreg free
 15014  012442  5161               	movf	(?_strlen+1)& (0+255),w,b
 15015  012444  E103               	bnz	u13011
 15016  012446  0E02               	movlw	2
 15017  012448  5D60               	subwf	?_strlen& (0+255),w,b
 15018  01244A  B0D8               	btfsc	status,0,c
 15019  01244C                     u13011:
 15020  01244C  D07D               	goto	l12835
 15021                           
 15022                           ; BSR set to: 0
 15023                           ;scdm.c: 67:   return E_CMD_TOO_SHORT;
 15024  01244E  0E02               	movlw	2
 15025  012450  0012               	return	
 15026  012452                     l12829:
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;scdm.c: 71:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 15030  012452  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15031  012454  0D05               	mullw	5
 15032  012456  006F FFCC  F07A    	movff	prodl,??__cli_interpret_cmd
 15033  01245C  006F FFD0  F07B    	movff	prodh,??__cli_interpret_cmd+1
 15034  012462  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15035  012468  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15036  01246E  006F FF78  F07C    	movff	postinc2,??__cli_interpret_cmd+2
 15037  012474  006F FF74  F07D    	movff	postdec2,??__cli_interpret_cmd+3
 15038  01247A  517A               	movf	??__cli_interpret_cmd& (0+255),w,b
 15039  01247C  257C               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 15040  01247E  6ED9               	movwf	fsr2l,c
 15041  012480  517B               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 15042  012482  217D               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 15043  012484  6EDA               	movwf	fsr2h,c
 15044  012486  006F FF78  F064    	movff	postinc2,strncmp@_l
 15045  01248C  006F FF74  F065    	movff	postdec2,strncmp@_l+1
 15046  012492  0E02               	movlw	2
 15047  012494  2578               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 15048  012496  6F66               	movwf	strncmp@_r& (0+255),b
 15049  012498  0E00               	movlw	0
 15050  01249A  2179               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 15051  01249C  6F67               	movwf	(strncmp@_r+1)& (0+255),b
 15052  01249E  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15053  0124A0  0D05               	mullw	5
 15054  0124A2  006F FFCC  F07E    	movff	prodl,??__cli_interpret_cmd+4
 15055  0124A8  006F FFD0  F07F    	movff	prodh,??__cli_interpret_cmd+5
 15056  0124AE  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15057  0124B4  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15058  0124BA  006F FF78  F080    	movff	postinc2,??__cli_interpret_cmd+6
 15059  0124C0  006F FF74  F081    	movff	postdec2,??__cli_interpret_cmd+7
 15060  0124C6  517E               	movf	(??__cli_interpret_cmd+4)& (0+255),w,b
 15061  0124C8  2580               	addwf	(??__cli_interpret_cmd+6)& (0+255),w,b
 15062  0124CA  6ED9               	movwf	fsr2l,c
 15063  0124CC  517F               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 15064  0124CE  2181               	addwfc	(??__cli_interpret_cmd+7)& (0+255),w,b
 15065  0124D0  6EDA               	movwf	fsr2h,c
 15066  0124D2  006F FF78  F060    	movff	postinc2,strlen@s
 15067  0124D8  006F FF74  F061    	movff	postdec2,strlen@s+1
 15068  0124DE  ECF8  F0A0         	call	_strlen	;wreg free
 15069  0124E2  C060  F068         	movff	?_strlen,strncmp@n
 15070  0124E6  C061  F069         	movff	?_strlen+1,strncmp@n+1
 15071  0124EA  EC90  F094         	call	_strncmp	;wreg free
 15072  0124EE  5164               	movf	?_strncmp& (0+255),w,b
 15073  0124F0  1165               	iorwf	(?_strncmp+1)& (0+255),w,b
 15074  0124F2  A4D8               	btfss	status,2,c
 15075  0124F4  D028               	goto	l12833
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;scdm.c: 73:    a_ctx->cmds[i].fh((void *) a_ctx);
 15079  0124F6  C078  F076         	movff	__cli_interpret_cmd@a_ctx,fh_p1@a_data
 15080  0124FA  C079  F077         	movff	__cli_interpret_cmd@a_ctx+1,fh_p1@a_data+1
 15081  0124FE  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15082  012500  0D05               	mullw	5
 15083  012502  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15084  012508  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15085  01250E  006F FF78  F07A    	movff	postinc2,??__cli_interpret_cmd
 15086  012514  006F FF74  F07B    	movff	postdec2,??__cli_interpret_cmd+1
 15087  01251A  50F3               	movf	243,w,c
 15088  01251C  277A               	addwf	??__cli_interpret_cmd& (0+255),f,b
 15089  01251E  50F4               	movf	244,w,c
 15090  012520  237B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 15091  012522  0E02               	movlw	2
 15092  012524  257A               	addwf	??__cli_interpret_cmd& (0+255),w,b
 15093  012526  6ED9               	movwf	fsr2l,c
 15094  012528  0E00               	movlw	0
 15095  01252A  217B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 15096  01252C  6EDA               	movwf	fsr2h,c
 15097  01252E  D801               	call	u13038
 15098  012530  D028               	goto	u13040
 15099  012532                     u13038:
 15100  012532  0005               	push	
 15101  012534  6EFA               	movwf	pclath,c
 15102  012536  50DE               	movf	postinc2,w,c
 15103  012538  6EFD               	movwf	tosl,c
 15104  01253A  50DE               	movf	postinc2,w,c
 15105  01253C  6EFE               	movwf	tosh,c
 15106  01253E  50DE               	movf	postinc2,w,c
 15107  012540  6EFF               	movwf	tosu,c
 15108  012542  50FA               	movf	pclath,w,c
 15109  012544  0012               	return		;indir
 15110  012546                     l12833:
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;scdm.c: 76:   i++;
 15114  012546  2B83               	incf	__cli_interpret_cmd@i& (0+255),f,b
 15115  012548                     l12835:
 15116                           
 15117                           ; BSR set to: 0
 15118                           ;scdm.c: 70:  while (a_ctx->cmds[i].fh) {
 15119  012548  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15120  01254A  0D05               	mullw	5
 15121  01254C  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15122  012552  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15123  012558  006F FF78  F07A    	movff	postinc2,??__cli_interpret_cmd
 15124  01255E  006F FF74  F07B    	movff	postdec2,??__cli_interpret_cmd+1
 15125  012564  50F3               	movf	243,w,c
 15126  012566  277A               	addwf	??__cli_interpret_cmd& (0+255),f,b
 15127  012568  50F4               	movf	244,w,c
 15128  01256A  237B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 15129  01256C  0E02               	movlw	2
 15130  01256E  257A               	addwf	??__cli_interpret_cmd& (0+255),w,b
 15131  012570  6ED9               	movwf	fsr2l,c
 15132  012572  0E00               	movlw	0
 15133  012574  217B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 15134  012576  6EDA               	movwf	fsr2h,c
 15135  012578  50DE               	movf	postinc2,w,c
 15136  01257A  10DE               	iorwf	postinc2,w,c
 15137  01257C  10DE               	iorwf	postinc2,w,c
 15138  01257E  A4D8               	btfss	status,2,c
 15139  012580  D768               	goto	l12829
 15140  012582                     u13040:
 15141                           
 15142                           ;scdm.c: 79:  if (!a_ctx->cmds[i].fh) {
 15143  012582  0100               	movlb	0	; () banked
 15144  012584  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15145  012586  0D05               	mullw	5
 15146  012588  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15147  01258E  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15148  012594  006F FF78  F07A    	movff	postinc2,??__cli_interpret_cmd
 15149  01259A  006F FF74  F07B    	movff	postdec2,??__cli_interpret_cmd+1
 15150  0125A0  50F3               	movf	243,w,c
 15151  0125A2  277A               	addwf	??__cli_interpret_cmd& (0+255),f,b
 15152  0125A4  50F4               	movf	244,w,c
 15153  0125A6  237B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 15154  0125A8  0E02               	movlw	2
 15155  0125AA  257A               	addwf	??__cli_interpret_cmd& (0+255),w,b
 15156  0125AC  6ED9               	movwf	fsr2l,c
 15157  0125AE  0E00               	movlw	0
 15158  0125B0  217B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 15159  0125B2  6EDA               	movwf	fsr2h,c
 15160  0125B4  50DE               	movf	postinc2,w,c
 15161  0125B6  10DE               	iorwf	postinc2,w,c
 15162  0125B8  10DE               	iorwf	postinc2,w,c
 15163  0125BA  A4D8               	btfss	status,2,c
 15164  0125BC  D002               	goto	l1553
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;scdm.c: 80:   ret = E_CMD_NOT_FOUND;
 15168  0125BE  0E01               	movlw	1
 15169  0125C0  6F82               	movwf	__cli_interpret_cmd@ret& (0+255),b
 15170  0125C2                     l1553:
 15171                           
 15172                           ; BSR set to: 0
 15173                           ;scdm.c: 83:  return ret;
 15174  0125C2  5182               	movf	__cli_interpret_cmd@ret& (0+255),w,b
 15175                           
 15176                           ; BSR set to: 0
 15177  0125C4  0012               	return		;funcret
 15178  0125C6                     __end_of__cli_interpret_cmd:
 15179                           	callstack 0
 15180                           
 15181 ;; *************** function _strncmp *****************
 15182 ;; Defined at:
 15183 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 15184 ;; Parameters:    Size  Location     Type
 15185 ;;  _l              2    4[BANK0 ] PTR const unsigned char 
 15186 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_28(3), STR_27(3), 
 15187 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 15188 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(23), 
 15189 ;;		 -> STR_18(24), STR_17(24), STR_16(24), STR_15(107), 
 15190 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
 15191 ;;  _r              2    6[BANK0 ] PTR const unsigned char 
 15192 ;;		 -> cli_ctx.cmd(128), STR_45(4), STR_40(3), cli_ctx(131), 
 15193 ;;  n               2    8[BANK0 ] unsigned int 
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;  r               2   14[BANK0 ] PTR const unsigned char 
 15196 ;;		 -> cli_ctx.cmd(128), STR_45(4), STR_40(3), cli_ctx(131), 
 15197 ;;  l               2   12[BANK0 ] PTR const unsigned char 
 15198 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_28(3), STR_27(3), 
 15199 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 15200 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(23), 
 15201 ;;		 -> STR_18(24), STR_17(24), STR_16(24), STR_15(107), 
 15202 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
 15203 ;; Return value:  Size  Location     Type
 15204 ;;                  2    4[BANK0 ] int 
 15205 ;; Registers used:
 15206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 15207 ;; Tracked objects:
 15208 ;;		On entry : 3F/0
 15209 ;;		On exit  : 3F/0
 15210 ;;		Unchanged: 0/0
 15211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15212 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15213 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15215 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15216 ;;Total ram usage:       12 bytes
 15217 ;; Hardware stack levels used: 1
 15218 ;; Hardware stack levels required when called: 7
 15219 ;; This function calls:
 15220 ;;		Nothing
 15221 ;; This function is called by:
 15222 ;;		__cli_interpret_cmd
 15223 ;;		_vfpfcnvrt
 15224 ;; This function uses a non-reentrant model
 15225 ;;
 15226                           
 15227                           	psect	text59
 15228  012920                     __ptext59:
 15229                           	callstack 0
 15230  012920                     _strncmp:
 15231                           	callstack 20
 15232                           
 15233                           ; BSR set to: 0
 15234                           
 15235                           ; BSR set to: 0
 15236                           ;incstack = 0
 15237  012920  C064  F06C         	movff	strncmp@_l,strncmp@l
 15238  012924  C065  F06D         	movff	strncmp@_l+1,strncmp@l+1
 15239  012928  C066  F06E         	movff	strncmp@_r,strncmp@r
 15240  01292C  C067  F06F         	movff	strncmp@_r+1,strncmp@r+1
 15241  012930  0768               	decf	strncmp@n& (0+255),f,b
 15242  012932  A0D8               	btfss	status,0,c
 15243  012934  0769               	decf	(strncmp@n+1)& (0+255),f,b
 15244  012936  2968               	incf	strncmp@n& (0+255),w,b
 15245  012938  E110               	bnz	l11843
 15246  01293A  2969               	incf	(strncmp@n+1)& (0+255),w,b
 15247  01293C  A4D8               	btfss	status,2,c
 15248  01293E  D00D               	goto	l11843
 15249                           
 15250                           ; BSR set to: 0
 15251  012940  0E00               	movlw	0
 15252  012942  6F65               	movwf	(?_strncmp+1)& (0+255),b
 15253  012944  0E00               	movlw	0
 15254  012946  6F64               	movwf	?_strncmp& (0+255),b
 15255  012948  0012               	return	
 15256  01294A                     l11841:
 15257  01294A  0100               	movlb	0	; () banked
 15258  01294C  4B6C               	infsnz	strncmp@l& (0+255),f,b
 15259  01294E  2B6D               	incf	(strncmp@l+1)& (0+255),f,b
 15260  012950  4B6E               	infsnz	strncmp@r& (0+255),f,b
 15261  012952  2B6F               	incf	(strncmp@r+1)& (0+255),f,b
 15262  012954  0768               	decf	strncmp@n& (0+255),f,b
 15263  012956  A0D8               	btfss	status,0,c
 15264  012958  0769               	decf	(strncmp@n+1)& (0+255),f,b
 15265  01295A                     l11843:
 15266                           
 15267                           ; BSR set to: 0
 15268  01295A  0060  F1B3  FFF6   	movff	strncmp@l,tblptrl
 15269  012960  0060  F1B7  FFF7   	movff	strncmp@l+1,tblptrh
 15270  012966  0E00               	movlw	low (__mediumconst shr (0+16))
 15271  012968  6EF8               	movwf	tblptru,c
 15272  01296A  0E1F               	movlw	(high __ramtop+-1)
 15273  01296C  64F7               	cpfsgt	tblptrh,c
 15274  01296E  D003               	bra	u11877
 15275  012970  0008               	tblrd		*
 15276  012972  50F5               	movf	tablat,w,c
 15277  012974  D007               	bra	u11870
 15278  012976                     u11877:
 15279  012976  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15280  01297C  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15281  012982  50E7               	movf	indf1,w,c
 15282  012984                     u11870:
 15283  012984  0900               	iorlw	0
 15284  012986  B4D8               	btfsc	status,2,c
 15285  012988  D04C               	goto	u11930
 15286  01298A  0060  F1BB  FFF6   	movff	strncmp@r,tblptrl
 15287  012990  0060  F1BF  FFF7   	movff	strncmp@r+1,tblptrh
 15288  012996  0E00               	movlw	low (__mediumconst shr (0+16))
 15289  012998  6EF8               	movwf	tblptru,c
 15290  01299A  0E1F               	movlw	(high __ramtop+-1)
 15291  01299C  64F7               	cpfsgt	tblptrh,c
 15292  01299E  D003               	bra	u11897
 15293  0129A0  0008               	tblrd		*
 15294  0129A2  50F5               	movf	tablat,w,c
 15295  0129A4  D007               	bra	u11890
 15296  0129A6                     u11897:
 15297  0129A6  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15298  0129AC  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15299  0129B2  50E7               	movf	indf1,w,c
 15300  0129B4                     u11890:
 15301  0129B4  0900               	iorlw	0
 15302  0129B6  B4D8               	btfsc	status,2,c
 15303  0129B8  D034               	goto	u11930
 15304  0129BA  0100               	movlb	0	; () banked
 15305  0129BC  5168               	movf	strncmp@n& (0+255),w,b
 15306  0129BE  1169               	iorwf	(strncmp@n+1)& (0+255),w,b
 15307  0129C0  B4D8               	btfsc	status,2,c
 15308  0129C2  D02F               	goto	u11930
 15309                           
 15310                           ; BSR set to: 0
 15311  0129C4  0060  F1BB  FFF6   	movff	strncmp@r,tblptrl
 15312  0129CA  0060  F1BF  FFF7   	movff	strncmp@r+1,tblptrh
 15313  0129D0  0E00               	movlw	low (__mediumconst shr (0+16))
 15314  0129D2  6EF8               	movwf	tblptru,c
 15315  0129D4  0E1F               	movlw	(high __ramtop+-1)
 15316  0129D6  64F7               	cpfsgt	tblptrh,c
 15317  0129D8  D003               	bra	u11927
 15318  0129DA  0008               	tblrd		*
 15319  0129DC  50F5               	movf	tablat,w,c
 15320  0129DE  D007               	bra	u11920
 15321  0129E0                     u11927:
 15322  0129E0  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15323  0129E6  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15324  0129EC  50E7               	movf	indf1,w,c
 15325  0129EE                     u11920:
 15326  0129EE  0100               	movlb	0	; () banked
 15327  0129F0  6F6A               	movwf	??_strncmp& (0+255),b
 15328  0129F2  0060  F1B3  FFF6   	movff	strncmp@l,tblptrl
 15329  0129F8  0060  F1B7  FFF7   	movff	strncmp@l+1,tblptrh
 15330  0129FE  0E00               	movlw	low (__mediumconst shr (0+16))
 15331  012A00  6EF8               	movwf	tblptru,c
 15332  012A02  0E1F               	movlw	(high __ramtop+-1)
 15333  012A04  64F7               	cpfsgt	tblptrh,c
 15334  012A06  D003               	bra	u11937
 15335  012A08  0008               	tblrd		*
 15336  012A0A  50F5               	movf	tablat,w,c
 15337  012A0C  D007               	bra	u11935
 15338  012A0E                     u11937:
 15339  012A0E  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15340  012A14  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15341  012A1A  50E7               	movf	indf1,w,c
 15342  012A1C                     u11935:
 15343  012A1C  196A               	xorwf	??_strncmp& (0+255),w,b
 15344  012A1E  B4D8               	btfsc	status,2,c
 15345  012A20  D794               	goto	l11841
 15346  012A22                     u11930:
 15347  012A22  0060  F1B3  FFF6   	movff	strncmp@l,tblptrl
 15348  012A28  0060  F1B7  FFF7   	movff	strncmp@l+1,tblptrh
 15349  012A2E  0E00               	movlw	low (__mediumconst shr (0+16))
 15350  012A30  6EF8               	movwf	tblptru,c
 15351  012A32  0E1F               	movlw	(high __ramtop+-1)
 15352  012A34  64F7               	cpfsgt	tblptrh,c
 15353  012A36  D003               	bra	u11947
 15354  012A38  0008               	tblrd		*
 15355  012A3A  50F5               	movf	tablat,w,c
 15356  012A3C  D007               	bra	u11940
 15357  012A3E                     u11947:
 15358  012A3E  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15359  012A44  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15360  012A4A  50E7               	movf	indf1,w,c
 15361  012A4C                     u11940:
 15362  012A4C  0100               	movlb	0	; () banked
 15363  012A4E  6F6A               	movwf	??_strncmp& (0+255),b
 15364  012A50  0060  F1BB  FFF6   	movff	strncmp@r,tblptrl
 15365  012A56  0060  F1BF  FFF7   	movff	strncmp@r+1,tblptrh
 15366  012A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 15367  012A5E  6EF8               	movwf	tblptru,c
 15368  012A60  0E1F               	movlw	(high __ramtop+-1)
 15369  012A62  64F7               	cpfsgt	tblptrh,c
 15370  012A64  D003               	bra	u11957
 15371  012A66  0008               	tblrd		*
 15372  012A68  50F5               	movf	tablat,w,c
 15373  012A6A  D007               	bra	u11950
 15374  012A6C                     u11957:
 15375  012A6C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15376  012A72  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15377  012A78  50E7               	movf	indf1,w,c
 15378  012A7A                     u11950:
 15379  012A7A  0100               	movlb	0	; () banked
 15380  012A7C  6F6B               	movwf	(??_strncmp+1)& (0+255),b
 15381  012A7E  516B               	movf	(??_strncmp+1)& (0+255),w,b
 15382  012A80  5D6A               	subwf	??_strncmp& (0+255),w,b
 15383  012A82  6F64               	movwf	?_strncmp& (0+255),b
 15384  012A84  6B65               	clrf	(?_strncmp+1)& (0+255),b
 15385  012A86  A0D8               	btfss	status,0,c
 15386  012A88  0765               	decf	(?_strncmp+1)& (0+255),f,b
 15387                           
 15388                           ; BSR set to: 0
 15389  012A8A  0012               	return		;funcret
 15390  012A8C                     __end_of_strncmp:
 15391                           	callstack 0
 15392                           
 15393 ;; *************** function _strlen *****************
 15394 ;; Defined at:
 15395 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 15396 ;; Parameters:    Size  Location     Type
 15397 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 15398 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 15399 ;;		 -> ?_sprintf(2), NULL(0), STR_28(3), STR_27(3), 
 15400 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 15401 ;;		 -> STR_22(3), STR_21(3), STR_20(3), cli_ctx(131), 
 15402 ;;		 -> build_version(14), buff1(255), STR_2(9), STR_1(12), 
 15403 ;; Auto vars:     Size  Location     Type
 15404 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 15405 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 15406 ;;		 -> ?_sprintf(2), NULL(0), STR_28(3), STR_27(3), 
 15407 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 15408 ;;		 -> STR_22(3), STR_21(3), STR_20(3), cli_ctx(131), 
 15409 ;;		 -> build_version(14), buff1(255), STR_2(9), STR_1(12), 
 15410 ;; Return value:  Size  Location     Type
 15411 ;;                  2    0[BANK0 ] unsigned int 
 15412 ;; Registers used:
 15413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 15414 ;; Tracked objects:
 15415 ;;		On entry : 2/0
 15416 ;;		On exit  : 3F/0
 15417 ;;		Unchanged: 0/0
 15418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15422 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15423 ;;Total ram usage:        4 bytes
 15424 ;; Hardware stack levels used: 1
 15425 ;; Hardware stack levels required when called: 7
 15426 ;; This function calls:
 15427 ;;		Nothing
 15428 ;; This function is called by:
 15429 ;;		__cli_interpret_cmd
 15430 ;;		_eaDogM_WriteString
 15431 ;;		_pad
 15432 ;;		_stoa
 15433 ;; This function uses a non-reentrant model
 15434 ;;
 15435                           
 15436                           	psect	text60
 15437  0141F0                     __ptext60:
 15438                           	callstack 0
 15439  0141F0                     _strlen:
 15440                           	callstack 18
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;incstack = 0
 15444  0141F0  C060  F062         	movff	strlen@s,strlen@a
 15445  0141F4  C061  F063         	movff	strlen@s+1,strlen@a+1
 15446  0141F8  D003               	goto	l10963
 15447  0141FA                     l10961:
 15448  0141FA  0100               	movlb	0	; () banked
 15449  0141FC  4B60               	infsnz	strlen@s& (0+255),f,b
 15450  0141FE  2B61               	incf	(strlen@s+1)& (0+255),f,b
 15451  014200                     l10963:
 15452  014200  0060  F183  FFF6   	movff	strlen@s,tblptrl
 15453  014206  0060  F187  FFF7   	movff	strlen@s+1,tblptrh
 15454  01420C  0E00               	movlw	low (__mediumconst shr (0+16))
 15455  01420E  6EF8               	movwf	tblptru,c
 15456  014210  0E1F               	movlw	(high __ramtop+-1)
 15457  014212  64F7               	cpfsgt	tblptrh,c
 15458  014214  D003               	bra	u10287
 15459  014216  0008               	tblrd		*
 15460  014218  50F5               	movf	tablat,w,c
 15461  01421A  D007               	bra	u10280
 15462  01421C                     u10287:
 15463  01421C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15464  014222  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15465  014228  50E7               	movf	indf1,w,c
 15466  01422A                     u10280:
 15467  01422A  0900               	iorlw	0
 15468  01422C  A4D8               	btfss	status,2,c
 15469  01422E  D7E5               	goto	l10961
 15470  014230  0100               	movlb	0	; () banked
 15471  014232  5162               	movf	strlen@a& (0+255),w,b
 15472  014234  5D60               	subwf	strlen@s& (0+255),w,b
 15473  014236  6F60               	movwf	?_strlen& (0+255),b
 15474  014238  5163               	movf	(strlen@a+1)& (0+255),w,b
 15475  01423A  5961               	subwfb	(strlen@s+1)& (0+255),w,b
 15476  01423C  6F61               	movwf	(?_strlen+1)& (0+255),b
 15477                           
 15478                           ; BSR set to: 0
 15479  01423E  0012               	return		;funcret
 15480  014240                     __end_of_strlen:
 15481                           	callstack 0
 15482                           
 15483 ;; *************** function _fh_p1 *****************
 15484 ;; Defined at:
 15485 ;;		line 208 in file "main.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;  a_data          2   22[BANK0 ] PTR void 
 15488 ;;		 -> cli_ctx(131), 
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1    wreg      void 
 15493 ;; Registers used:
 15494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15495 ;; Tracked objects:
 15496 ;;		On entry : 3F/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15504 ;;Total ram usage:        2 bytes
 15505 ;; Hardware stack levels used: 1
 15506 ;; Hardware stack levels required when called: 12
 15507 ;; This function calls:
 15508 ;;		_DATAEE_WriteByte
 15509 ;;		_puts
 15510 ;; This function is called by:
 15511 ;;		__cli_interpret_cmd
 15512 ;; This function uses a non-reentrant model
 15513 ;;
 15514                           
 15515                           	psect	text61
 15516  014B78                     __ptext61:
 15517                           	callstack 0
 15518  014B78                     _fh_p1:
 15519                           	callstack 16
 15520                           
 15521                           ; BSR set to: 0
 15522                           ;main.c: 208: void fh_p1(void *a_data);main.c: 209: {;main.c: 210:  puts("\r\n ACCEL Sup
      +                          pression Supply \r\n");
 15523                           
 15524                           ; BSR set to: 0
 15525                           ;incstack = 0
 15526  014B78  0E93               	movlw	low STR_11
 15527  014B7A  6F73               	movwf	puts@s& (0+255),b
 15528  014B7C  0EFE               	movlw	high STR_11
 15529  014B7E  6F74               	movwf	(puts@s+1)& (0+255),b
 15530  014B80  EC29  F0A4         	call	_puts	;wreg free
 15531                           
 15532                           ; BSR set to: 0
 15533                           ;main.c: 211:  ps_type_index = 1;
 15534  014B84  0E01               	movlw	1
 15535  014B86  6E34               	movwf	_ps_type_index^0,c	;volatile
 15536                           
 15537                           ; BSR set to: 0
 15538                           ;main.c: 212:  DATAEE_WriteByte(0x10, ps_type_index);
 15539  014B88  0E00               	movlw	0
 15540  014B8A  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 15541  014B8C  0E10               	movlw	16
 15542  014B8E  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 15543  014B90  C034  F062         	movff	_ps_type_index,DATAEE_WriteByte@bData	;volatile
 15544  014B94  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
 15545  014B98  0012               	return		;funcret
 15546  014B9A                     __end_of_fh_p1:
 15547                           	callstack 0
 15548                           
 15549 ;; *************** function _fh_p0 *****************
 15550 ;; Defined at:
 15551 ;;		line 201 in file "main.c"
 15552 ;; Parameters:    Size  Location     Type
 15553 ;;  a_data          2   22[BANK0 ] PTR void 
 15554 ;;		 -> cli_ctx(131), 
 15555 ;; Auto vars:     Size  Location     Type
 15556 ;;		None
 15557 ;; Return value:  Size  Location     Type
 15558 ;;                  1    wreg      void 
 15559 ;; Registers used:
 15560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15561 ;; Tracked objects:
 15562 ;;		On entry : 3F/0
 15563 ;;		On exit  : 0/0
 15564 ;;		Unchanged: 0/0
 15565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15569 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15570 ;;Total ram usage:        2 bytes
 15571 ;; Hardware stack levels used: 1
 15572 ;; Hardware stack levels required when called: 12
 15573 ;; This function calls:
 15574 ;;		_DATAEE_WriteByte
 15575 ;;		_puts
 15576 ;; This function is called by:
 15577 ;;		__cli_interpret_cmd
 15578 ;; This function uses a non-reentrant model
 15579 ;;
 15580                           
 15581                           	psect	text62
 15582  014B9A                     __ptext62:
 15583                           	callstack 0
 15584  014B9A                     _fh_p0:
 15585                           	callstack 16
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;main.c: 201: void fh_p0(void *a_data);main.c: 202: {;main.c: 203:  puts("\r\n EXT Suppr
      +                          ession Supply \r\n");
 15589                           
 15590                           ;incstack = 0
 15591  014B9A  0EB2               	movlw	low STR_10
 15592  014B9C  6F73               	movwf	puts@s& (0+255),b
 15593  014B9E  0EFE               	movlw	high STR_10
 15594  014BA0  6F74               	movwf	(puts@s+1)& (0+255),b
 15595  014BA2  EC29  F0A4         	call	_puts	;wreg free
 15596                           
 15597                           ; BSR set to: 0
 15598                           ;main.c: 204:  ps_type_index = 0;
 15599  014BA6  0E00               	movlw	0
 15600  014BA8  6E34               	movwf	_ps_type_index^0,c	;volatile
 15601                           
 15602                           ; BSR set to: 0
 15603                           ;main.c: 205:  DATAEE_WriteByte(0x10, ps_type_index);
 15604  014BAA  0E00               	movlw	0
 15605  014BAC  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 15606  014BAE  0E10               	movlw	16
 15607  014BB0  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 15608  014BB2  C034  F062         	movff	_ps_type_index,DATAEE_WriteByte@bData	;volatile
 15609  014BB6  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
 15610  014BBA  0012               	return		;funcret
 15611  014BBC                     __end_of_fh_p0:
 15612                           	callstack 0
 15613                           
 15614 ;; *************** function _fh_pl *****************
 15615 ;; Defined at:
 15616 ;;		line 194 in file "main.c"
 15617 ;; Parameters:    Size  Location     Type
 15618 ;;  a_data          2   22[BANK0 ] PTR void 
 15619 ;;		 -> cli_ctx(131), 
 15620 ;; Auto vars:     Size  Location     Type
 15621 ;;		None
 15622 ;; Return value:  Size  Location     Type
 15623 ;;                  1    wreg      void 
 15624 ;; Registers used:
 15625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15626 ;; Tracked objects:
 15627 ;;		On entry : 3F/0
 15628 ;;		On exit  : 3F/0
 15629 ;;		Unchanged: 0/0
 15630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15631 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15634 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15635 ;;Total ram usage:        2 bytes
 15636 ;; Hardware stack levels used: 1
 15637 ;; Hardware stack levels required when called: 12
 15638 ;; This function calls:
 15639 ;;		_puts
 15640 ;; This function is called by:
 15641 ;;		__cli_interpret_cmd
 15642 ;; This function uses a non-reentrant model
 15643 ;;
 15644                           
 15645                           	psect	text63
 15646  014D6A                     __ptext63:
 15647                           	callstack 0
 15648  014D6A                     _fh_pl:
 15649                           	callstack 16
 15650                           
 15651                           ; BSR set to: 0
 15652                           ;main.c: 194: void fh_pl(void *a_data);main.c: 195: {;main.c: 196:  puts("\r\n Voltage L
      +                          OW \r\n");
 15653                           
 15654                           ;incstack = 0
 15655  014D6A  0E6C               	movlw	low STR_9
 15656  014D6C  6F73               	movwf	puts@s& (0+255),b
 15657  014D6E  0EFF               	movlw	high STR_9
 15658  014D70  6F74               	movwf	(puts@s+1)& (0+255),b
 15659  014D72  EC29  F0A4         	call	_puts	;wreg free
 15660                           
 15661                           ; BSR set to: 0
 15662                           ;main.c: 197:  roll_max = 2;
 15663  014D76  0E02               	movlw	2
 15664  014D78  6FFE               	movwf	_roll_max& (0+255),b
 15665                           
 15666                           ; BSR set to: 0
 15667                           ;main.c: 198:  static_ps = 3;
 15668  014D7A  0E03               	movlw	3
 15669  014D7C  6FFD               	movwf	_static_ps& (0+255),b
 15670                           
 15671                           ; BSR set to: 0
 15672  014D7E  0012               	return		;funcret
 15673  014D80                     __end_of_fh_pl:
 15674                           	callstack 0
 15675                           
 15676 ;; *************** function _fh_pd *****************
 15677 ;; Defined at:
 15678 ;;		line 187 in file "main.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;  a_data          2   22[BANK0 ] PTR void 
 15681 ;;		 -> cli_ctx(131), 
 15682 ;; Auto vars:     Size  Location     Type
 15683 ;;		None
 15684 ;; Return value:  Size  Location     Type
 15685 ;;                  1    wreg      void 
 15686 ;; Registers used:
 15687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15688 ;; Tracked objects:
 15689 ;;		On entry : 3F/0
 15690 ;;		On exit  : 3F/0
 15691 ;;		Unchanged: 0/0
 15692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15693 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15696 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15697 ;;Total ram usage:        2 bytes
 15698 ;; Hardware stack levels used: 1
 15699 ;; Hardware stack levels required when called: 12
 15700 ;; This function calls:
 15701 ;;		_puts
 15702 ;; This function is called by:
 15703 ;;		__cli_interpret_cmd
 15704 ;; This function uses a non-reentrant model
 15705 ;;
 15706                           
 15707                           	psect	text64
 15708  014D80                     __ptext64:
 15709                           	callstack 0
 15710  014D80                     _fh_pd:
 15711                           	callstack 16
 15712                           
 15713                           ; BSR set to: 0
 15714                           ;main.c: 187: void fh_pd(void *a_data);main.c: 188: {;main.c: 189:  puts("\r\n Voltage D
      +                          OWN \r\n");
 15715                           
 15716                           ; BSR set to: 0
 15717                           ;incstack = 0
 15718  014D80  0E47               	movlw	low STR_8
 15719  014D82  6F73               	movwf	puts@s& (0+255),b
 15720  014D84  0EFF               	movlw	high STR_8
 15721  014D86  6F74               	movwf	(puts@s+1)& (0+255),b
 15722  014D88  EC29  F0A4         	call	_puts	;wreg free
 15723                           
 15724                           ; BSR set to: 0
 15725                           ;main.c: 190:  roll_max = 19 - 12;
 15726  014D8C  0E07               	movlw	7
 15727  014D8E  6FFE               	movwf	_roll_max& (0+255),b
 15728                           
 15729                           ; BSR set to: 0
 15730                           ;main.c: 191:  static_ps = 20 - 12;
 15731  014D90  0E08               	movlw	8
 15732  014D92  6FFD               	movwf	_static_ps& (0+255),b
 15733                           
 15734                           ; BSR set to: 0
 15735  014D94  0012               	return		;funcret
 15736  014D96                     __end_of_fh_pd:
 15737                           	callstack 0
 15738                           
 15739 ;; *************** function _fh_pp *****************
 15740 ;; Defined at:
 15741 ;;		line 174 in file "main.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;  a_data          2   22[BANK0 ] PTR void 
 15744 ;;		 -> cli_ctx(131), 
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;		None
 15747 ;; Return value:  Size  Location     Type
 15748 ;;                  1    wreg      void 
 15749 ;; Registers used:
 15750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15751 ;; Tracked objects:
 15752 ;;		On entry : 3F/0
 15753 ;;		On exit  : 3F/0
 15754 ;;		Unchanged: 0/0
 15755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15756 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15759 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15760 ;;Total ram usage:        2 bytes
 15761 ;; Hardware stack levels used: 1
 15762 ;; Hardware stack levels required when called: 12
 15763 ;; This function calls:
 15764 ;;		_puts
 15765 ;; This function is called by:
 15766 ;;		__cli_interpret_cmd
 15767 ;; This function uses a non-reentrant model
 15768 ;;
 15769                           
 15770                           	psect	text65
 15771  014DC2                     __ptext65:
 15772                           	callstack 0
 15773  014DC2                     _fh_pp:
 15774                           	callstack 16
 15775                           
 15776                           ; BSR set to: 0
 15777                           ;main.c: 174: void fh_pp(void *a_data);main.c: 175: {;main.c: 176:  puts("\r\n Voltage O
      +                          N \r\n");
 15778                           
 15779                           ; BSR set to: 0
 15780                           ;incstack = 0
 15781  014DC2  0E7E               	movlw	low STR_6
 15782  014DC4  6F73               	movwf	puts@s& (0+255),b
 15783  014DC6  0EFF               	movlw	high STR_6
 15784  014DC8  6F74               	movwf	(puts@s+1)& (0+255),b
 15785  014DCA  EC29  F0A4         	call	_puts	;wreg free
 15786                           
 15787                           ; BSR set to: 0
 15788                           ;main.c: 177:  mode = static_mode;
 15789  014DCE  0E02               	movlw	2
 15790  014DD0  6E35               	movwf	_mode^0,c
 15791                           
 15792                           ; BSR set to: 0
 15793  014DD2  0012               	return		;funcret
 15794  014DD4                     __end_of_fh_pp:
 15795                           	callstack 0
 15796                           
 15797 ;; *************** function _fh_po *****************
 15798 ;; Defined at:
 15799 ;;		line 168 in file "main.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;  a_data          2   22[BANK0 ] PTR void 
 15802 ;;		 -> cli_ctx(131), 
 15803 ;; Auto vars:     Size  Location     Type
 15804 ;;		None
 15805 ;; Return value:  Size  Location     Type
 15806 ;;                  1    wreg      void 
 15807 ;; Registers used:
 15808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15809 ;; Tracked objects:
 15810 ;;		On entry : 3F/0
 15811 ;;		On exit  : 3F/0
 15812 ;;		Unchanged: 0/0
 15813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15814 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15817 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15818 ;;Total ram usage:        2 bytes
 15819 ;; Hardware stack levels used: 1
 15820 ;; Hardware stack levels required when called: 12
 15821 ;; This function calls:
 15822 ;;		_puts
 15823 ;; This function is called by:
 15824 ;;		__cli_interpret_cmd
 15825 ;; This function uses a non-reentrant model
 15826 ;;
 15827                           
 15828                           	psect	text66
 15829  014DD4                     __ptext66:
 15830                           	callstack 0
 15831  014DD4                     _fh_po:
 15832                           	callstack 16
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;main.c: 168: void fh_po(void *a_data);main.c: 169: {;main.c: 170:  puts("\r\n Voltage O
      +                          FF \r\n");
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;incstack = 0
 15839  014DD4  0E5A               	movlw	low STR_5
 15840  014DD6  6F73               	movwf	puts@s& (0+255),b
 15841  014DD8  0EFF               	movlw	high STR_5
 15842  014DDA  6F74               	movwf	(puts@s+1)& (0+255),b
 15843  014DDC  EC29  F0A4         	call	_puts	;wreg free
 15844                           
 15845                           ; BSR set to: 0
 15846                           ;main.c: 171:  mode = off_mode;
 15847  014DE0  0E00               	movlw	0
 15848  014DE2  6E35               	movwf	_mode^0,c
 15849                           
 15850                           ; BSR set to: 0
 15851  014DE4  0012               	return		;funcret
 15852  014DE6                     __end_of_fh_po:
 15853                           	callstack 0
 15854                           
 15855 ;; *************** function _fh_ps *****************
 15856 ;; Defined at:
 15857 ;;		line 160 in file "main.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;  a_data          2   22[BANK0 ] PTR void 
 15860 ;;		 -> cli_ctx(131), 
 15861 ;; Auto vars:     Size  Location     Type
 15862 ;;		None
 15863 ;; Return value:  Size  Location     Type
 15864 ;;                  1    wreg      void 
 15865 ;; Registers used:
 15866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15867 ;; Tracked objects:
 15868 ;;		On entry : 3F/0
 15869 ;;		On exit  : 3F/0
 15870 ;;		Unchanged: 0/0
 15871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15875 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15876 ;;Total ram usage:        2 bytes
 15877 ;; Hardware stack levels used: 1
 15878 ;; Hardware stack levels required when called: 12
 15879 ;; This function calls:
 15880 ;;		_puts
 15881 ;; This function is called by:
 15882 ;;		__cli_interpret_cmd
 15883 ;; This function uses a non-reentrant model
 15884 ;;
 15885                           
 15886                           	psect	text67
 15887  014CEE                     __ptext67:
 15888                           	callstack 0
 15889  014CEE                     _fh_ps:
 15890                           	callstack 16
 15891                           
 15892                           ; BSR set to: 0
 15893                           ;main.c: 160: void fh_ps(void *a_data);main.c: 161: {;main.c: 162:  puts("\r\n Steady 10
      +                          00VDC ON \r\n");
 15894                           
 15895                           ; BSR set to: 0
 15896                           ;incstack = 0
 15897  014CEE  0EE8               	movlw	low STR_4
 15898  014CF0  6F73               	movwf	puts@s& (0+255),b
 15899  014CF2  0EFE               	movlw	high STR_4
 15900  014CF4  6F74               	movwf	(puts@s+1)& (0+255),b
 15901  014CF6  EC29  F0A4         	call	_puts	;wreg free
 15902                           
 15903                           ; BSR set to: 0
 15904                           ;main.c: 163:  roll_max = 19;
 15905  014CFA  0E13               	movlw	19
 15906  014CFC  6FFE               	movwf	_roll_max& (0+255),b
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;main.c: 164:  static_ps = 20;
 15910  014CFE  0E14               	movlw	20
 15911  014D00  6FFD               	movwf	_static_ps& (0+255),b
 15912                           
 15913                           ; BSR set to: 0
 15914                           ;main.c: 165:  mode = static_mode;
 15915  014D02  0E02               	movlw	2
 15916  014D04  6E35               	movwf	_mode^0,c
 15917                           
 15918                           ; BSR set to: 0
 15919  014D06  0012               	return		;funcret
 15920  014D08                     __end_of_fh_ps:
 15921                           	callstack 0
 15922                           
 15923 ;; *************** function _fh_pr *****************
 15924 ;; Defined at:
 15925 ;;		line 153 in file "main.c"
 15926 ;; Parameters:    Size  Location     Type
 15927 ;;  a_data          2   22[BANK0 ] PTR void 
 15928 ;;		 -> cli_ctx(131), 
 15929 ;; Auto vars:     Size  Location     Type
 15930 ;;		None
 15931 ;; Return value:  Size  Location     Type
 15932 ;;                  1    wreg      void 
 15933 ;; Registers used:
 15934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15935 ;; Tracked objects:
 15936 ;;		On entry : 3F/0
 15937 ;;		On exit  : 3F/0
 15938 ;;		Unchanged: 0/0
 15939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15944 ;;Total ram usage:        2 bytes
 15945 ;; Hardware stack levels used: 1
 15946 ;; Hardware stack levels required when called: 12
 15947 ;; This function calls:
 15948 ;;		_puts
 15949 ;; This function is called by:
 15950 ;;		__cli_interpret_cmd
 15951 ;; This function uses a non-reentrant model
 15952 ;;
 15953                           
 15954                           	psect	text68
 15955  014C5E                     __ptext68:
 15956                           	callstack 0
 15957  014C5E                     _fh_pr:
 15958                           	callstack 16
 15959                           
 15960                           ; BSR set to: 0
 15961                           ;main.c: 153: void fh_pr(void *a_data);main.c: 154: {;main.c: 155:  puts((const char *) 
      +                          a_data);
 15962                           
 15963                           ; BSR set to: 0
 15964                           ;incstack = 0
 15965  014C5E  C076  F073         	movff	fh_pr@a_data,puts@s
 15966  014C62  C077  F074         	movff	fh_pr@a_data+1,puts@s+1
 15967  014C66  EC29  F0A4         	call	_puts	;wreg free
 15968                           
 15969                           ;main.c: 156:  puts("\r\n Ramp to 1000VDC ON \r\n");
 15970  014C6A  0ECF               	movlw	low STR_3
 15971  014C6C  6F73               	movwf	puts@s& (0+255),b
 15972  014C6E  0EFE               	movlw	high STR_3
 15973  014C70  6F74               	movwf	(puts@s+1)& (0+255),b
 15974  014C72  EC29  F0A4         	call	_puts	;wreg free
 15975                           
 15976                           ; BSR set to: 0
 15977                           ;main.c: 157:  mode = roll_mode;
 15978  014C76  0E01               	movlw	1
 15979  014C78  6E35               	movwf	_mode^0,c
 15980                           
 15981                           ; BSR set to: 0
 15982  014C7A  0012               	return		;funcret
 15983  014C7C                     __end_of_fh_pr:
 15984                           	callstack 0
 15985                           
 15986 ;; *************** function _fh_pu *****************
 15987 ;; Defined at:
 15988 ;;		line 180 in file "main.c"
 15989 ;; Parameters:    Size  Location     Type
 15990 ;;  a_data          2   22[BANK0 ] PTR void 
 15991 ;;		 -> cli_ctx(131), 
 15992 ;; Auto vars:     Size  Location     Type
 15993 ;;		None
 15994 ;; Return value:  Size  Location     Type
 15995 ;;                  1    wreg      void 
 15996 ;; Registers used:
 15997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15998 ;; Tracked objects:
 15999 ;;		On entry : 3F/0
 16000 ;;		On exit  : 3F/0
 16001 ;;		Unchanged: 0/0
 16002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16007 ;;Total ram usage:        2 bytes
 16008 ;; Hardware stack levels used: 1
 16009 ;; Hardware stack levels required when called: 12
 16010 ;; This function calls:
 16011 ;;		_puts
 16012 ;; This function is called by:
 16013 ;;		__cli_interpret_cmd
 16014 ;; This function uses a non-reentrant model
 16015 ;;
 16016                           
 16017                           	psect	text69
 16018  014D96                     __ptext69:
 16019                           	callstack 0
 16020  014D96                     _fh_pu:
 16021                           	callstack 16
 16022                           
 16023                           ; BSR set to: 0
 16024                           ;main.c: 180: void fh_pu(void *a_data);main.c: 181: {;main.c: 182:  puts("\r\n Voltage U
      +                          P \r\n");
 16025                           
 16026                           ; BSR set to: 0
 16027                           ;incstack = 0
 16028  014D96  0E8F               	movlw	low STR_7
 16029  014D98  6F73               	movwf	puts@s& (0+255),b
 16030  014D9A  0EFF               	movlw	high STR_7
 16031  014D9C  6F74               	movwf	(puts@s+1)& (0+255),b
 16032  014D9E  EC29  F0A4         	call	_puts	;wreg free
 16033                           
 16034                           ; BSR set to: 0
 16035                           ;main.c: 183:  roll_max = 19 + 10;
 16036  014DA2  0E1D               	movlw	29
 16037  014DA4  6FFE               	movwf	_roll_max& (0+255),b
 16038                           
 16039                           ; BSR set to: 0
 16040                           ;main.c: 184:  static_ps = 20 + 11;
 16041  014DA6  0E1F               	movlw	31
 16042  014DA8  6FFD               	movwf	_static_ps& (0+255),b
 16043                           
 16044                           ; BSR set to: 0
 16045  014DAA  0012               	return		;funcret
 16046  014DAC                     __end_of_fh_pu:
 16047                           	callstack 0
 16048                           
 16049 ;; *************** function _puts *****************
 16050 ;; Defined at:
 16051 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 16052 ;; Parameters:    Size  Location     Type
 16053 ;;  s               2   19[BANK0 ] PTR const unsigned char 
 16054 ;;		 -> STR_29(3), cli_read@i(1), cmdm(28), cli_ctx(131), 
 16055 ;;		 -> buff1(255), STR_11(31), STR_10(29), STR_9(18), 
 16056 ;;		 -> STR_8(19), STR_7(17), STR_6(17), STR_5(18), 
 16057 ;;		 -> STR_4(24), STR_3(25), 
 16058 ;; Auto vars:     Size  Location     Type
 16059 ;;  r               2    0        int 
 16060 ;; Return value:  Size  Location     Type
 16061 ;;                  2   19[BANK0 ] int 
 16062 ;; Registers used:
 16063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16064 ;; Tracked objects:
 16065 ;;		On entry : 3F/0
 16066 ;;		On exit  : 3F/0
 16067 ;;		Unchanged: 0/0
 16068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16072 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16073 ;;Total ram usage:        3 bytes
 16074 ;; Hardware stack levels used: 1
 16075 ;; Hardware stack levels required when called: 11
 16076 ;; This function calls:
 16077 ;;		_fputc
 16078 ;;		_fputs
 16079 ;; This function is called by:
 16080 ;;		_fh_pr
 16081 ;;		_fh_ps
 16082 ;;		_fh_po
 16083 ;;		_fh_pp
 16084 ;;		_fh_pu
 16085 ;;		_fh_pd
 16086 ;;		_fh_pl
 16087 ;;		_fh_p0
 16088 ;;		_fh_p1
 16089 ;;		_main
 16090 ;;		_cli_init
 16091 ;;		_linux_putc
 16092 ;; This function uses a non-reentrant model
 16093 ;;
 16094                           
 16095                           	psect	text70
 16096  014852                     __ptext70:
 16097                           	callstack 0
 16098  014852                     _puts:
 16099                           	callstack 17
 16100                           
 16101                           ; BSR set to: 0
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;incstack = 0
 16105  014852  0E01               	movlw	1
 16106  014854  6F75               	movwf	_puts$4363& (0+255),b
 16107                           
 16108                           ; BSR set to: 0
 16109  014856  C073  F06A         	movff	puts@s,fputs@s
 16110  01485A  C074  F06B         	movff	puts@s+1,fputs@s+1
 16111  01485E  0E00               	movlw	0
 16112  014860  6F6C               	movwf	fputs@fp& (0+255),b
 16113  014862  0E00               	movlw	0
 16114  014864  6F6D               	movwf	(fputs@fp+1)& (0+255),b
 16115  014866  EC2D  F09F         	call	_fputs	;wreg free
 16116  01486A  BF6B               	btfsc	(?_fputs+1)& (0+255),7,b
 16117  01486C  0012               	return	
 16118                           
 16119                           ; BSR set to: 0
 16120  01486E  0E00               	movlw	0
 16121  014870  6F62               	movwf	(fputc@c+1)& (0+255),b
 16122  014872  0E0A               	movlw	10
 16123  014874  6F61               	movwf	fputc@c& (0+255),b
 16124  014876  0E00               	movlw	0
 16125  014878  6F63               	movwf	fputc@fp& (0+255),b
 16126  01487A  0E00               	movlw	0
 16127  01487C  6F64               	movwf	(fputc@fp+1)& (0+255),b
 16128  01487E  ECAF  F09C         	call	_fputc	;wreg free
 16129  014882  BF62               	btfsc	(?_fputc+1)& (0+255),7,b
 16130  014884  0012               	return	
 16131                           
 16132                           ; BSR set to: 0
 16133  014886  0E00               	movlw	0
 16134  014888  6F75               	movwf	_puts$4363& (0+255),b
 16135                           
 16136                           ; BSR set to: 0
 16137                           
 16138                           ; BSR set to: 0
 16139  01488A  0012               	return		;funcret
 16140  01488C                     __end_of_puts:
 16141                           	callstack 0
 16142                           
 16143 ;; *************** function _fputs *****************
 16144 ;; Defined at:
 16145 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 16146 ;; Parameters:    Size  Location     Type
 16147 ;;  s               2   10[BANK0 ] PTR const unsigned char 
 16148 ;;		 -> dbuf(80), STR_29(3), cli_read@i(1), cmdm(28), 
 16149 ;;		 -> cli_ctx(131), buff1(255), STR_11(31), STR_10(29), 
 16150 ;;		 -> STR_9(18), STR_8(19), STR_7(17), STR_6(17), 
 16151 ;;		 -> STR_5(18), STR_4(24), STR_3(25), 
 16152 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
 16153 ;;		 -> sprintf@f(11), NULL(0), 
 16154 ;; Auto vars:     Size  Location     Type
 16155 ;;  i               2   17[BANK0 ] int 
 16156 ;;  c               1   16[BANK0 ] unsigned char 
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  2   10[BANK0 ] int 
 16159 ;; Registers used:
 16160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16161 ;; Tracked objects:
 16162 ;;		On entry : 3F/0
 16163 ;;		On exit  : 3F/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16167 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16169 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16170 ;;Total ram usage:        9 bytes
 16171 ;; Hardware stack levels used: 1
 16172 ;; Hardware stack levels required when called: 10
 16173 ;; This function calls:
 16174 ;;		_fputc
 16175 ;; This function is called by:
 16176 ;;		_pad
 16177 ;;		_puts
 16178 ;; This function uses a non-reentrant model
 16179 ;;
 16180                           
 16181                           	psect	text71
 16182  013E5A                     __ptext71:
 16183                           	callstack 0
 16184  013E5A                     _fputs:
 16185                           	callstack 15
 16186                           
 16187                           ; BSR set to: 0
 16188                           
 16189                           ; BSR set to: 0
 16190                           ;incstack = 0
 16191  013E5A  0E00               	movlw	0
 16192  013E5C  6F72               	movwf	(fputs@i+1)& (0+255),b
 16193  013E5E  0E00               	movlw	0
 16194  013E60  6F71               	movwf	fputs@i& (0+255),b
 16195  013E62  D00B               	goto	l11177
 16196  013E64                     l11173:
 16197                           
 16198                           ; BSR set to: 0
 16199  013E64  C070  F061         	movff	fputs@c,fputc@c
 16200  013E68  6B62               	clrf	(fputc@c+1)& (0+255),b
 16201  013E6A  C06C  F063         	movff	fputs@fp,fputc@fp
 16202  013E6E  C06D  F064         	movff	fputs@fp+1,fputc@fp+1
 16203  013E72  ECAF  F09C         	call	_fputc	;wreg free
 16204                           
 16205                           ; BSR set to: 0
 16206  013E76  4B71               	infsnz	fputs@i& (0+255),f,b
 16207  013E78  2B72               	incf	(fputs@i+1)& (0+255),f,b
 16208  013E7A                     l11177:
 16209                           
 16210                           ; BSR set to: 0
 16211  013E7A  5171               	movf	fputs@i& (0+255),w,b
 16212  013E7C  256A               	addwf	fputs@s& (0+255),w,b
 16213  013E7E  6F6E               	movwf	??_fputs& (0+255),b
 16214  013E80  5172               	movf	(fputs@i+1)& (0+255),w,b
 16215  013E82  216B               	addwfc	(fputs@s+1)& (0+255),w,b
 16216  013E84  6F6F               	movwf	(??_fputs+1)& (0+255),b
 16217  013E86  0060  F1BB  FFF6   	movff	??_fputs,tblptrl
 16218  013E8C  0060  F1BF  FFF7   	movff	??_fputs+1,tblptrh
 16219  013E92  0E00               	movlw	low (__mediumconst shr (0+16))
 16220  013E94  6EF8               	movwf	tblptru,c
 16221  013E96  0E1F               	movlw	(high __ramtop+-1)
 16222  013E98  64F7               	cpfsgt	tblptrh,c
 16223  013E9A  D003               	bra	u10697
 16224  013E9C  0008               	tblrd		*
 16225  013E9E  50F5               	movf	tablat,w,c
 16226  013EA0  D007               	bra	u10690
 16227  013EA2                     u10697:
 16228  013EA2  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16229  013EA8  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16230  013EAE  50E7               	movf	indf1,w,c
 16231  013EB0                     u10690:
 16232  013EB0  0100               	movlb	0	; () banked
 16233  013EB2  6F70               	movwf	fputs@c& (0+255),b
 16234  013EB4  5170               	movf	fputs@c& (0+255),w,b
 16235  013EB6  A4D8               	btfss	status,2,c
 16236  013EB8  D7D5               	goto	l11173
 16237                           
 16238                           ; BSR set to: 0
 16239  013EBA  C071  F06A         	movff	fputs@i,?_fputs
 16240  013EBE  C072  F06B         	movff	fputs@i+1,?_fputs+1
 16241                           
 16242                           ; BSR set to: 0
 16243  013EC2  0012               	return		;funcret
 16244  013EC4                     __end_of_fputs:
 16245                           	callstack 0
 16246                           
 16247 ;; *************** function _fputc *****************
 16248 ;; Defined at:
 16249 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 16250 ;; Parameters:    Size  Location     Type
 16251 ;;  c               2    1[BANK0 ] int 
 16252 ;;  fp              2    3[BANK0 ] PTR struct _IO_FILE
 16253 ;;		 -> sprintf@f(11), NULL(0), 
 16254 ;; Auto vars:     Size  Location     Type
 16255 ;;		None
 16256 ;; Return value:  Size  Location     Type
 16257 ;;                  2    1[BANK0 ] int 
 16258 ;; Registers used:
 16259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16260 ;; Tracked objects:
 16261 ;;		On entry : 3F/0
 16262 ;;		On exit  : 3F/0
 16263 ;;		Unchanged: 0/0
 16264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16267 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16268 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16269 ;;Total ram usage:        9 bytes
 16270 ;; Hardware stack levels used: 1
 16271 ;; Hardware stack levels required when called: 9
 16272 ;; This function calls:
 16273 ;;		_putch
 16274 ;; This function is called by:
 16275 ;;		_pad
 16276 ;;		_stoa
 16277 ;;		_vfpfcnvrt
 16278 ;;		_fputs
 16279 ;;		_puts
 16280 ;; This function uses a non-reentrant model
 16281 ;;
 16282                           
 16283                           	psect	text72
 16284  01395E                     __ptext72:
 16285                           	callstack 0
 16286  01395E                     _fputc:
 16287                           	callstack 15
 16288                           
 16289                           ; BSR set to: 0
 16290                           
 16291                           ; BSR set to: 0
 16292                           ;incstack = 0
 16293  01395E  5163               	movf	fputc@fp& (0+255),w,b
 16294  013960  1164               	iorwf	(fputc@fp+1)& (0+255),w,b
 16295  013962  B4D8               	btfsc	status,2,c
 16296  013964  D004               	goto	u10250
 16297                           
 16298                           ; BSR set to: 0
 16299  013966  5163               	movf	fputc@fp& (0+255),w,b
 16300  013968  1164               	iorwf	(fputc@fp+1)& (0+255),w,b
 16301  01396A  A4D8               	btfss	status,2,c
 16302  01396C  D004               	goto	l10949
 16303  01396E                     u10250:
 16304                           
 16305                           ; BSR set to: 0
 16306  01396E  5161               	movf	fputc@c& (0+255),w,b
 16307  013970  EC63  F0A7         	call	_putch
 16308  013974  D04A               	goto	l10955
 16309  013976                     l10949:
 16310                           
 16311                           ; BSR set to: 0
 16312  013976  EE20 F009          	lfsr	2,9
 16313  01397A  5163               	movf	fputc@fp& (0+255),w,b
 16314  01397C  26D9               	addwf	fsr2l,f,c
 16315  01397E  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16316  013980  22DA               	addwfc	fsr2h,f,c
 16317  013982  50DE               	movf	postinc2,w,c
 16318  013984  10DE               	iorwf	postinc2,w,c
 16319  013986  B4D8               	btfsc	status,2,c
 16320  013988  D016               	goto	u10270
 16321                           
 16322                           ; BSR set to: 0
 16323  01398A  EE20 F009          	lfsr	2,9
 16324  01398E  5163               	movf	fputc@fp& (0+255),w,b
 16325  013990  26D9               	addwf	fsr2l,f,c
 16326  013992  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16327  013994  22DA               	addwfc	fsr2h,f,c
 16328  013996  EE10 F003          	lfsr	1,3
 16329  01399A  5163               	movf	fputc@fp& (0+255),w,b
 16330  01399C  26E1               	addwf	fsr1l,f,c
 16331  01399E  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16332  0139A0  22E2               	addwfc	fsr1h,f,c
 16333  0139A2  50DE               	movf	postinc2,w,c
 16334  0139A4  5CE6               	subwf	postinc1,w,c
 16335  0139A6  50E6               	movf	postinc1,w,c
 16336  0139A8  0A80               	xorlw	128
 16337  0139AA  6F69               	movwf	(??_fputc+4)& (0+255),b
 16338  0139AC  50DE               	movf	postinc2,w,c
 16339  0139AE  0A80               	xorlw	128
 16340  0139B0  5969               	subwfb	(??_fputc+4)& (0+255),w,b
 16341  0139B2  B0D8               	btfsc	status,0,c
 16342  0139B4  D02A               	goto	l10955
 16343  0139B6                     u10270:
 16344                           
 16345                           ; BSR set to: 0
 16346  0139B6  EE20 F003          	lfsr	2,3
 16347  0139BA  5163               	movf	fputc@fp& (0+255),w,b
 16348  0139BC  26D9               	addwf	fsr2l,f,c
 16349  0139BE  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16350  0139C0  22DA               	addwfc	fsr2h,f,c
 16351  0139C2  006F FF78  F065    	movff	postinc2,??_fputc
 16352  0139C8  006F FF74  F066    	movff	postdec2,??_fputc+1
 16353  0139CE  0060  F18F  FFD9   	movff	fputc@fp,fsr2l
 16354  0139D4  0060  F193  FFDA   	movff	fputc@fp+1,fsr2h
 16355  0139DA  006F FF78  F067    	movff	postinc2,??_fputc+2
 16356  0139E0  006F FF74  F068    	movff	postdec2,??_fputc+3
 16357  0139E6  5165               	movf	??_fputc& (0+255),w,b
 16358  0139E8  2567               	addwf	(??_fputc+2)& (0+255),w,b
 16359  0139EA  6ED9               	movwf	fsr2l,c
 16360  0139EC  5166               	movf	(??_fputc+1)& (0+255),w,b
 16361  0139EE  2168               	addwfc	(??_fputc+3)& (0+255),w,b
 16362  0139F0  6EDA               	movwf	fsr2h,c
 16363  0139F2  0060  F187  FFDF   	movff	fputc@c,indf2
 16364  0139F8  EE20 F003          	lfsr	2,3
 16365  0139FC  5163               	movf	fputc@fp& (0+255),w,b
 16366  0139FE  26D9               	addwf	fsr2l,f,c
 16367  013A00  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16368  013A02  22DA               	addwfc	fsr2h,f,c
 16369  013A04  2ADE               	incf	postinc2,f,c
 16370  013A06  0E00               	movlw	0
 16371  013A08  22DD               	addwfc	postdec2,f,c
 16372  013A0A                     l10955:
 16373  013A0A  C061  F061         	movff	fputc@c,?_fputc
 16374  013A0E  0100               	movlb	0	; () banked
 16375  013A10  6B62               	clrf	(?_fputc+1)& (0+255),b
 16376                           
 16377                           ; BSR set to: 0
 16378  013A12  0012               	return		;funcret
 16379  013A14                     __end_of_fputc:
 16380                           	callstack 0
 16381                           
 16382 ;; *************** function _putch *****************
 16383 ;; Defined at:
 16384 ;;		line 238 in file "mcc_generated_files/uart1.c"
 16385 ;; Parameters:    Size  Location     Type
 16386 ;;  txData          1    wreg     unsigned char 
 16387 ;; Auto vars:     Size  Location     Type
 16388 ;;  txData          1    0[BANK0 ] unsigned char 
 16389 ;; Return value:  Size  Location     Type
 16390 ;;                  1    wreg      void 
 16391 ;; Registers used:
 16392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16393 ;; Tracked objects:
 16394 ;;		On entry : 3F/0
 16395 ;;		On exit  : 3F/39
 16396 ;;		Unchanged: 0/0
 16397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16401 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16402 ;;Total ram usage:        1 bytes
 16403 ;; Hardware stack levels used: 1
 16404 ;; Hardware stack levels required when called: 8
 16405 ;; This function calls:
 16406 ;;		_UART1_Write
 16407 ;; This function is called by:
 16408 ;;		_fputc
 16409 ;; This function uses a non-reentrant model
 16410 ;;
 16411                           
 16412                           	psect	text73
 16413  014EC6                     __ptext73:
 16414                           	callstack 0
 16415  014EC6                     _putch:
 16416                           	callstack 15
 16417                           
 16418                           ; BSR set to: 0
 16419                           ;incstack = 0
 16420                           ;putch@txData stored from wreg
 16421  014EC6  6F60               	movwf	putch@txData& (0+255),b
 16422                           
 16423                           ;mcc_generated_files/uart1.c: 238: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          239: {;mcc_generated_files/uart1.c: 240:     UART1_Write(txData);
 16424  014EC8  0100               	movlb	0	; () banked
 16425  014ECA  5160               	movf	putch@txData& (0+255),w,b
 16426  014ECC  ECB1  F0A3         	call	_UART1_Write
 16427                           
 16428                           ; BSR set to: 57
 16429  014ED0  0012               	return		;funcret
 16430  014ED2                     __end_of_putch:
 16431                           	callstack 0
 16432                           
 16433 ;; *************** function _UART1_Write *****************
 16434 ;; Defined at:
 16435 ;;		line 210 in file "mcc_generated_files/uart1.c"
 16436 ;; Parameters:    Size  Location     Type
 16437 ;;  txData          1    wreg     unsigned char 
 16438 ;; Auto vars:     Size  Location     Type
 16439 ;;  txData          1   31[COMRAM] unsigned char 
 16440 ;; Return value:  Size  Location     Type
 16441 ;;                  1    wreg      void 
 16442 ;; Registers used:
 16443 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16444 ;; Tracked objects:
 16445 ;;		On entry : 3F/0
 16446 ;;		On exit  : 3F/39
 16447 ;;		Unchanged: 0/0
 16448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16453 ;;Total ram usage:        1 bytes
 16454 ;; Hardware stack levels used: 1
 16455 ;; Hardware stack levels required when called: 7
 16456 ;; This function calls:
 16457 ;;		Nothing
 16458 ;; This function is called by:
 16459 ;;		_putch
 16460 ;; This function uses a non-reentrant model
 16461 ;;
 16462                           
 16463                           	psect	text74
 16464  014762                     __ptext74:
 16465                           	callstack 0
 16466  014762                     _UART1_Write:
 16467                           	callstack 15
 16468                           
 16469                           ; BSR set to: 57
 16470                           ;incstack = 0
 16471                           ;UART1_Write@txData stored from wreg
 16472  014762  6E20               	movwf	UART1_Write@txData^0,c
 16473  014764                     
 16474                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 16475                           
 16476                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 16477  014764  503C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 16478  014766  B4D8               	btfsc	status,2,c
 16479  014768  D7FD               	goto	l10923
 16480                           
 16481                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 16482  01476A  0139               	movlb	57	; () banked
 16483  01476C  B993               	btfsc	147,4,b	;volatile
 16484  01476E  D004               	goto	l991
 16485                           
 16486                           ; BSR set to: 57
 16487                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 218:         U1TXB
      +                           = txData;
 16488  014770  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
 16489                           
 16490                           ;mcc_generated_files/uart1.c: 219:     }
 16491  014776  D011               	goto	l10939
 16492  014778                     l991:
 16493                           
 16494                           ; BSR set to: 57
 16495                           ;mcc_generated_files/uart1.c: 221:     {;mcc_generated_files/uart1.c: 222:         PIE3b
      +                          its.U1TXIE = 0;
 16496  014778  9993               	bcf	147,4,b	;volatile
 16497                           
 16498                           ; BSR set to: 57
 16499                           ;mcc_generated_files/uart1.c: 223:         uart1TxBuffer[uart1TxHead++] = txData;
 16500  01477A  0E40               	movlw	low _uart1TxBuffer
 16501  01477C  243E               	addwf	_uart1TxHead^0,w,c	;volatile
 16502  01477E  6ED9               	movwf	fsr2l,c
 16503  014780  6ADA               	clrf	fsr2h,c
 16504  014782  0E02               	movlw	high _uart1TxBuffer
 16505  014784  22DA               	addwfc	fsr2h,f,c
 16506  014786  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
 16507                           
 16508                           ; BSR set to: 57
 16509  01478C  2A3E               	incf	_uart1TxHead^0,f,c	;volatile
 16510                           
 16511                           ; BSR set to: 57
 16512                           ;mcc_generated_files/uart1.c: 224:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 16513  01478E  0E3F               	movlw	63
 16514  014790  643E               	cpfsgt	_uart1TxHead^0,c
 16515  014792  D002               	goto	l10937
 16516                           
 16517                           ; BSR set to: 57
 16518                           ;mcc_generated_files/uart1.c: 225:         {;mcc_generated_files/uart1.c: 226:          
      +                             uart1TxHead = 0;
 16519  014794  0E00               	movlw	0
 16520  014796  6E3E               	movwf	_uart1TxHead^0,c	;volatile
 16521  014798                     l10937:
 16522                           
 16523                           ; BSR set to: 57
 16524                           ;mcc_generated_files/uart1.c: 228:         uart1TxBufferRemaining--;
 16525  014798  063C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 16526  01479A                     l10939:
 16527                           
 16528                           ; BSR set to: 57
 16529                           ;mcc_generated_files/uart1.c: 230:     PIE3bits.U1TXIE = 1;
 16530  01479A  8993               	bsf	147,4,b	;volatile
 16531                           
 16532                           ; BSR set to: 57
 16533  01479C  0012               	return		;funcret
 16534  01479E                     __end_of_UART1_Write:
 16535                           	callstack 0
 16536                           
 16537 ;; *************** function _DATAEE_WriteByte *****************
 16538 ;; Defined at:
 16539 ;;		line 165 in file "mcc_generated_files/memory.c"
 16540 ;; Parameters:    Size  Location     Type
 16541 ;;  bAdd            2    0[BANK0 ] unsigned short 
 16542 ;;  bData           1    2[BANK0 ] unsigned char 
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;  GIEBitValue     1   31[COMRAM] unsigned char 
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  1    wreg      void 
 16547 ;; Registers used:
 16548 ;;		wreg, status,2, status,0
 16549 ;; Tracked objects:
 16550 ;;		On entry : 3F/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16554 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16557 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16558 ;;Total ram usage:        4 bytes
 16559 ;; Hardware stack levels used: 1
 16560 ;; Hardware stack levels required when called: 7
 16561 ;; This function calls:
 16562 ;;		Nothing
 16563 ;; This function is called by:
 16564 ;;		_fh_p0
 16565 ;;		_fh_p1
 16566 ;;		_main
 16567 ;; This function uses a non-reentrant model
 16568 ;;
 16569                           
 16570                           	psect	text75
 16571  01462A                     __ptext75:
 16572                           	callstack 0
 16573  01462A                     _DATAEE_WriteByte:
 16574                           	callstack 20
 16575                           
 16576                           ; BSR set to: 0
 16577                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 16578                           
 16579                           ; BSR set to: 57
 16580                           ;incstack = 0
 16581  01462A  0E00               	movlw	0
 16582  01462C  BED2               	btfsc	210,7,c	;volatile
 16583  01462E  0E01               	movlw	1
 16584  014630  6E20               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 16585                           
 16586                           ; BSR set to: 0
 16587                           ;mcc_generated_files/memory.c: 169:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 16588  014632  5161               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 16589  014634  0B03               	andlw	3
 16590  014636  0139               	movlb	57	; () banked
 16591  014638  6FE1               	movwf	225,b	;volatile
 16592                           
 16593                           ; BSR set to: 57
 16594                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 16595  01463A  0060  F183  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 16596                           
 16597                           ; BSR set to: 57
 16598                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
 16599  014640  0060  F18B  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 16600                           
 16601                           ; BSR set to: 57
 16602                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
 16603  014646  0E3F               	movlw	-193
 16604  014648  17E5               	andwf	229,f,b	;volsfr
 16605                           
 16606                           ; BSR set to: 57
 16607                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
 16608  01464A  85E5               	bsf	229,2,b	;volsfr
 16609                           
 16610                           ; BSR set to: 57
 16611                           ;mcc_generated_files/memory.c: 174:     INTCON0bits.GIE = 0;
 16612  01464C  9ED2               	bcf	210,7,c	;volatile
 16613                           
 16614                           ; BSR set to: 57
 16615                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
 16616  01464E  0E55               	movlw	85
 16617  014650  6FE6               	movwf	230,b	;volsfr
 16618                           
 16619                           ; BSR set to: 57
 16620                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
 16621  014652  0EAA               	movlw	170
 16622  014654  6FE6               	movwf	230,b	;volsfr
 16623                           
 16624                           ; BSR set to: 57
 16625                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
 16626  014656  83E5               	bsf	229,1,b	;volsfr
 16627  014658                     l1130:
 16628                           
 16629                           ; BSR set to: 57
 16630                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
 16631  014658  B3E5               	btfsc	229,1,b	;volsfr
 16632  01465A  D7FE               	goto	l1130
 16633                           
 16634                           ; BSR set to: 57
 16635                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
 16636  01465C  95E5               	bcf	229,2,b	;volsfr
 16637                           
 16638                           ;mcc_generated_files/memory.c: 184:     INTCON0bits.GIE = GIEBitValue;
 16639  01465E  B020               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 16640  014660  D002               	bra	u11835
 16641  014662  9ED2               	bcf	210,7,c	;volatile
 16642  014664  D001               	bra	u11836
 16643  014666                     u11835:
 16644  014666  8ED2               	bsf	210,7,c	;volatile
 16645  014668                     u11836:
 16646  014668  0012               	return		;funcret
 16647  01466A                     __end_of_DATAEE_WriteByte:
 16648                           	callstack 0
 16649                           
 16650 ;; *************** function ___xxtofl *****************
 16651 ;; Defined at:
 16652 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 16653 ;; Parameters:    Size  Location     Type
 16654 ;;  sign            1    wreg     unsigned char 
 16655 ;;  val             4    0[BANK0 ] long 
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;  sign            1    8[BANK0 ] unsigned char 
 16658 ;;  arg             4   10[BANK0 ] unsigned long 
 16659 ;;  exp             1    9[BANK0 ] unsigned char 
 16660 ;; Return value:  Size  Location     Type
 16661 ;;                  4    0[BANK0 ] unsigned char 
 16662 ;; Registers used:
 16663 ;;		wreg, status,2, status,0
 16664 ;; Tracked objects:
 16665 ;;		On entry : 3F/0
 16666 ;;		On exit  : 3F/0
 16667 ;;		Unchanged: 0/0
 16668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16670 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16671 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16672 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16673 ;;Total ram usage:       14 bytes
 16674 ;; Hardware stack levels used: 1
 16675 ;; Hardware stack levels required when called: 7
 16676 ;; This function calls:
 16677 ;;		Nothing
 16678 ;; This function is called by:
 16679 ;;		_main
 16680 ;; This function uses a non-reentrant model
 16681 ;;
 16682                           
 16683                           	psect	text76
 16684  012E74                     __ptext76:
 16685                           	callstack 0
 16686  012E74                     ___xxtofl:
 16687                           	callstack 23
 16688                           
 16689                           ;incstack = 0
 16690                           ;___xxtofl@sign stored from wreg
 16691  012E74  6F68               	movwf	___xxtofl@sign& (0+255),b
 16692  012E76  0100               	movlb	0	; () banked
 16693  012E78  5168               	movf	___xxtofl@sign& (0+255),w,b
 16694  012E7A  A4D8               	btfss	status,2,c
 16695                           
 16696                           ; BSR set to: 0
 16697  012E7C  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16698  012E7E  D01A               	goto	l2457
 16699                           
 16700                           ; BSR set to: 0
 16701  012E80  C060  F064         	movff	___xxtofl@val,??___xxtofl
 16702  012E84  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 16703  012E88  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 16704  012E8C  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 16705  012E90  1F64               	comf	??___xxtofl& (0+255),f,b
 16706  012E92  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 16707  012E94  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 16708  012E96  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 16709  012E98  2B64               	incf	??___xxtofl& (0+255),f,b
 16710  012E9A  0E00               	movlw	0
 16711  012E9C  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 16712  012E9E  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 16713  012EA0  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 16714  012EA2  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 16715  012EA6  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 16716  012EAA  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 16717  012EAE  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 16718  012EB2  D008               	goto	l13105
 16719  012EB4                     l2457:
 16720                           
 16721                           ; BSR set to: 0
 16722  012EB4  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 16723  012EB8  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 16724  012EBC  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 16725  012EC0  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 16726  012EC4                     l13105:
 16727                           
 16728                           ; BSR set to: 0
 16729  012EC4  5160               	movf	___xxtofl@val& (0+255),w,b
 16730  012EC6  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 16731  012EC8  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 16732  012ECA  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 16733  012ECC  A4D8               	btfss	status,2,c
 16734  012ECE  D009               	goto	l13111
 16735                           
 16736                           ; BSR set to: 0
 16737  012ED0  0E00               	movlw	0
 16738  012ED2  6F60               	movwf	?___xxtofl& (0+255),b
 16739  012ED4  0E00               	movlw	0
 16740  012ED6  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 16741  012ED8  0E00               	movlw	0
 16742  012EDA  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 16743  012EDC  0E00               	movlw	0
 16744  012EDE  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 16745  012EE0  0012               	return	
 16746  012EE2                     l13111:
 16747                           
 16748                           ; BSR set to: 0
 16749  012EE2  0E96               	movlw	150
 16750  012EE4  6F69               	movwf	___xxtofl@exp& (0+255),b
 16751  012EE6  D006               	goto	l13115
 16752  012EE8                     l13113:
 16753                           
 16754                           ; BSR set to: 0
 16755  012EE8  2B69               	incf	___xxtofl@exp& (0+255),f,b
 16756  012EEA  90D8               	bcf	status,0,c
 16757  012EEC  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16758  012EEE  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16759  012EF0  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16760  012EF2  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 16761  012EF4                     l13115:
 16762                           
 16763                           ; BSR set to: 0
 16764  012EF4  0E00               	movlw	0
 16765  012EF6  156A               	andwf	___xxtofl@arg& (0+255),w,b
 16766  012EF8  6F64               	movwf	??___xxtofl& (0+255),b
 16767  012EFA  0E00               	movlw	0
 16768  012EFC  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16769  012EFE  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 16770  012F00  0E00               	movlw	0
 16771  012F02  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16772  012F04  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 16773  012F06  0EFE               	movlw	254
 16774  012F08  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16775  012F0A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 16776  012F0C  5164               	movf	??___xxtofl& (0+255),w,b
 16777  012F0E  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16778  012F10  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16779  012F12  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16780  012F14  B4D8               	btfsc	status,2,c
 16781  012F16  D00D               	goto	l2464
 16782  012F18  D7E7               	goto	l13113
 16783  012F1A                     l13117:
 16784                           
 16785                           ; BSR set to: 0
 16786  012F1A  2B69               	incf	___xxtofl@exp& (0+255),f,b
 16787                           
 16788                           ; BSR set to: 0
 16789  012F1C  0E01               	movlw	1
 16790  012F1E  276A               	addwf	___xxtofl@arg& (0+255),f,b
 16791  012F20  0E00               	movlw	0
 16792  012F22  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16793  012F24  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16794  012F26  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16795                           
 16796                           ; BSR set to: 0
 16797  012F28  90D8               	bcf	status,0,c
 16798  012F2A  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16799  012F2C  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16800  012F2E  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16801  012F30  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 16802  012F32                     l2464:
 16803                           
 16804                           ; BSR set to: 0
 16805  012F32  0E00               	movlw	0
 16806  012F34  156A               	andwf	___xxtofl@arg& (0+255),w,b
 16807  012F36  6F64               	movwf	??___xxtofl& (0+255),b
 16808  012F38  0E00               	movlw	0
 16809  012F3A  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16810  012F3C  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 16811  012F3E  0E00               	movlw	0
 16812  012F40  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16813  012F42  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 16814  012F44  0EFF               	movlw	255
 16815  012F46  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16816  012F48  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 16817  012F4A  5164               	movf	??___xxtofl& (0+255),w,b
 16818  012F4C  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16819  012F4E  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16820  012F50  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16821  012F52  B4D8               	btfsc	status,2,c
 16822  012F54  D007               	goto	l13125
 16823  012F56  D7E1               	goto	l13117
 16824  012F58                     l13123:
 16825                           
 16826                           ; BSR set to: 0
 16827  012F58  0769               	decf	___xxtofl@exp& (0+255),f,b
 16828  012F5A  90D8               	bcf	status,0,c
 16829  012F5C  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 16830  012F5E  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16831  012F60  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16832  012F62  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16833  012F64                     l13125:
 16834                           
 16835                           ; BSR set to: 0
 16836  012F64  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16837  012F66  D003               	goto	u13200
 16838                           
 16839                           ; BSR set to: 0
 16840  012F68  0E02               	movlw	2
 16841  012F6A  6169               	cpfslt	___xxtofl@exp& (0+255),b
 16842  012F6C  D7F5               	goto	l13123
 16843  012F6E                     u13200:
 16844                           
 16845                           ; BSR set to: 0
 16846  012F6E  A169               	btfss	___xxtofl@exp& (0+255),0,b
 16847                           
 16848                           ; BSR set to: 0
 16849  012F70  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 16850                           
 16851                           ; BSR set to: 0
 16852  012F72  90D8               	bcf	status,0,c
 16853  012F74  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 16854                           
 16855                           ; BSR set to: 0
 16856  012F76  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 16857  012F7A  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16858  012F7C  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16859  012F7E  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 16860  012F80  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 16861  012F84  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16862  012F86  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16863  012F88  6B64               	clrf	??___xxtofl& (0+255),b
 16864  012F8A  5164               	movf	??___xxtofl& (0+255),w,b
 16865  012F8C  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 16866  012F8E  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 16867  012F90  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16868  012F92  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 16869  012F94  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16870  012F96  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 16871  012F98  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16872                           
 16873                           ; BSR set to: 0
 16874  012F9A  5168               	movf	___xxtofl@sign& (0+255),w,b
 16875  012F9C  A4D8               	btfss	status,2,c
 16876                           
 16877                           ; BSR set to: 0
 16878  012F9E  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16879  012FA0  D001               	goto	l13141
 16880                           
 16881                           ; BSR set to: 0
 16882  012FA2  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16883  012FA4                     l13141:
 16884                           
 16885                           ; BSR set to: 0
 16886  012FA4  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 16887  012FA8  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 16888  012FAC  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 16889  012FB0  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 16890                           
 16891                           ; BSR set to: 0
 16892  012FB4  0012               	return		;funcret
 16893  012FB6                     __end_of___xxtofl:
 16894                           	callstack 0
 16895                           
 16896 ;; *************** function _WaitMs *****************
 16897 ;; Defined at:
 16898 ;;		line 31 in file "timers.c"
 16899 ;; Parameters:    Size  Location     Type
 16900 ;;  numMilliseco    2    4[BANK0 ] const unsigned short 
 16901 ;; Auto vars:     Size  Location     Type
 16902 ;;		None
 16903 ;; Return value:  Size  Location     Type
 16904 ;;                  1    wreg      void 
 16905 ;; Registers used:
 16906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16907 ;; Tracked objects:
 16908 ;;		On entry : 3F/0
 16909 ;;		On exit  : 0/0
 16910 ;;		Unchanged: 0/0
 16911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16916 ;;Total ram usage:        2 bytes
 16917 ;; Hardware stack levels used: 1
 16918 ;; Hardware stack levels required when called: 8
 16919 ;; This function calls:
 16920 ;;		_StartTimer
 16921 ;;		_TimerDone
 16922 ;; This function is called by:
 16923 ;;		_main
 16924 ;; This function uses a non-reentrant model
 16925 ;;
 16926                           
 16927                           	psect	text77
 16928  014A9C                     __ptext77:
 16929                           	callstack 0
 16930  014A9C                     _WaitMs:
 16931                           	callstack 22
 16932                           
 16933                           ; BSR set to: 0
 16934                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;incstack = 0
 16938  014A9C  C064  F060         	movff	WaitMs@numMilliseconds,StartTimer@count
 16939  014AA0  C065  F061         	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
 16940  014AA4  0E00               	movlw	0
 16941  014AA6  ECC7  F0A4         	call	_StartTimer
 16942                           
 16943                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
 16944  014AAA  D005               	goto	l13017
 16945  014AAC                     l1373:
 16946                           
 16947                           ;timers.c: 35:   __nop();
 16948  014AAC  F000               	nop	
 16949                           
 16950                           ;timers.c: 36:   __nop();
 16951  014AAE  F000               	nop	
 16952                           
 16953                           ;timers.c: 37:   __nop();
 16954  014AB0  F000               	nop	
 16955                           
 16956                           ;timers.c: 38:   __nop();
 16957  014AB2  F000               	nop	
 16958  014AB4  0004               	clrwdt		;# 
 16959  014AB6                     l13017:
 16960                           
 16961                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
 16962  014AB6  0E00               	movlw	0
 16963  014AB8  EC86  F0A5         	call	_TimerDone
 16964  014ABC  0900               	iorlw	0
 16965  014ABE  A4D8               	btfss	status,2,c
 16966  014AC0  0012               	return	
 16967  014AC2  D7F4               	goto	l1373
 16968  014AC4                     __end_of_WaitMs:
 16969                           	callstack 0
 16970                           
 16971 ;; *************** function _TimerDone *****************
 16972 ;; Defined at:
 16973 ;;		line 19 in file "timers.c"
 16974 ;; Parameters:    Size  Location     Type
 16975 ;;  timer           1    wreg     const unsigned char 
 16976 ;; Auto vars:     Size  Location     Type
 16977 ;;  timer           1   31[COMRAM] const unsigned char 
 16978 ;; Return value:  Size  Location     Type
 16979 ;;                  1    wreg      _Bool 
 16980 ;; Registers used:
 16981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16982 ;; Tracked objects:
 16983 ;;		On entry : 0/0
 16984 ;;		On exit  : 0/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16989 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16990 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16991 ;;Total ram usage:        3 bytes
 16992 ;; Hardware stack levels used: 1
 16993 ;; Hardware stack levels required when called: 7
 16994 ;; This function calls:
 16995 ;;		Nothing
 16996 ;; This function is called by:
 16997 ;;		_WaitMs
 16998 ;; This function uses a non-reentrant model
 16999 ;;
 17000                           
 17001                           	psect	text78
 17002  014B0C                     __ptext78:
 17003                           	callstack 0
 17004  014B0C                     _TimerDone:
 17005                           	callstack 22
 17006                           
 17007                           ;incstack = 0
 17008                           ;TimerDone@timer stored from wreg
 17009  014B0C  6E20               	movwf	TimerDone@timer^0,c
 17010  014B0E  0004               	clrwdt		;# 
 17011                           
 17012                           ;timers.c: 22:  if (tickCount[timer] == 0) {
 17013  014B10  5020               	movf	TimerDone@timer^0,w,c
 17014  014B12  0D02               	mullw	2
 17015  014B14  0E0C               	movlw	low _tickCount
 17016  014B16  24F3               	addwf	243,w,c
 17017  014B18  6ED9               	movwf	fsr2l,c
 17018  014B1A  0E01               	movlw	high _tickCount
 17019  014B1C  20F4               	addwfc	prodh,w,c
 17020  014B1E  6EDA               	movwf	fsr2h,c
 17021  014B20  50DE               	movf	postinc2,w,c
 17022  014B22  10DE               	iorwf	postinc2,w,c
 17023  014B24  A4D8               	btfss	status,2,c
 17024  014B26  D002               	goto	l12801
 17025                           
 17026                           ;timers.c: 23:   return 1;
 17027  014B28  0E01               	movlw	1
 17028  014B2A  0012               	return	
 17029  014B2C                     l12801:
 17030                           
 17031                           ;timers.c: 25:  return 0;
 17032  014B2C  0E00               	movlw	0
 17033  014B2E  0012               	return		;funcret
 17034  014B30                     __end_of_TimerDone:
 17035                           	callstack 0
 17036                           
 17037 ;; *************** function _StartTimer *****************
 17038 ;; Defined at:
 17039 ;;		line 11 in file "timers.c"
 17040 ;; Parameters:    Size  Location     Type
 17041 ;;  timer           1    wreg     const unsigned char 
 17042 ;;  count           2    0[BANK0 ] const unsigned short 
 17043 ;; Auto vars:     Size  Location     Type
 17044 ;;  timer           1   31[COMRAM] const unsigned char 
 17045 ;; Return value:  Size  Location     Type
 17046 ;;                  1    wreg      void 
 17047 ;; Registers used:
 17048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17049 ;; Tracked objects:
 17050 ;;		On entry : 3F/0
 17051 ;;		On exit  : 3F/0
 17052 ;;		Unchanged: 0/0
 17053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17056 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17057 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17058 ;;Total ram usage:        5 bytes
 17059 ;; Hardware stack levels used: 1
 17060 ;; Hardware stack levels required when called: 7
 17061 ;; This function calls:
 17062 ;;		Nothing
 17063 ;; This function is called by:
 17064 ;;		_WaitMs
 17065 ;; This function uses a non-reentrant model
 17066 ;;
 17067                           
 17068                           	psect	text79
 17069  01498E                     __ptext79:
 17070                           	callstack 0
 17071  01498E                     _StartTimer:
 17072                           	callstack 22
 17073                           
 17074                           ;incstack = 0
 17075                           ;StartTimer@timer stored from wreg
 17076  01498E  6E20               	movwf	StartTimer@timer^0,c
 17077                           
 17078                           ;timers.c: 11: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 12: 
      +                          {;timers.c: 13:  tickCount[timer] = count << 1;
 17079  014990  C060  F062         	movff	StartTimer@count,??_StartTimer
 17080  014994  C061  F063         	movff	StartTimer@count+1,??_StartTimer+1
 17081  014998  90D8               	bcf	status,0,c
 17082  01499A  0100               	movlb	0	; () banked
 17083  01499C  3762               	rlcf	??_StartTimer& (0+255),f,b
 17084  01499E  3763               	rlcf	(??_StartTimer+1)& (0+255),f,b
 17085  0149A0  5020               	movf	StartTimer@timer^0,w,c
 17086  0149A2  0D02               	mullw	2
 17087  0149A4  0E0C               	movlw	low _tickCount
 17088  0149A6  24F3               	addwf	243,w,c
 17089  0149A8  6ED9               	movwf	fsr2l,c
 17090  0149AA  0E01               	movlw	high _tickCount
 17091  0149AC  20F4               	addwfc	prodh,w,c
 17092  0149AE  6EDA               	movwf	fsr2h,c
 17093  0149B0  0060  F18B  FFDE   	movff	??_StartTimer,postinc2
 17094  0149B6  0060  F18F  FFDD   	movff	??_StartTimer+1,postdec2
 17095                           
 17096                           ; BSR set to: 0
 17097  0149BC  0012               	return		;funcret
 17098  0149BE                     __end_of_StartTimer:
 17099                           	callstack 0
 17100                           
 17101 ;; *************** function _SYSTEM_Initialize *****************
 17102 ;; Defined at:
 17103 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17104 ;; Parameters:    Size  Location     Type
 17105 ;;		None
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;		None
 17108 ;; Return value:  Size  Location     Type
 17109 ;;                  1    wreg      void 
 17110 ;; Registers used:
 17111 ;;		wreg, status,2, status,0, cstack
 17112 ;; Tracked objects:
 17113 ;;		On entry : 3F/1
 17114 ;;		On exit  : 3F/39
 17115 ;;		Unchanged: 0/0
 17116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17121 ;;Total ram usage:        0 bytes
 17122 ;; Hardware stack levels used: 1
 17123 ;; Hardware stack levels required when called: 9
 17124 ;; This function calls:
 17125 ;;		_ADCC_Initialize
 17126 ;;		_DAC1_Initialize
 17127 ;;		_DMA1_Initialize
 17128 ;;		_INTERRUPT_Initialize
 17129 ;;		_OSCILLATOR_Initialize
 17130 ;;		_PIN_MANAGER_Initialize
 17131 ;;		_PMD_Initialize
 17132 ;;		_PWM5_Initialize
 17133 ;;		_PWM6_Initialize
 17134 ;;		_SPI1_Initialize
 17135 ;;		_SystemArbiter_Initialize
 17136 ;;		_TMR2_Initialize
 17137 ;;		_TMR5_Initialize
 17138 ;;		_TMR6_Initialize
 17139 ;;		_UART1_Initialize
 17140 ;; This function is called by:
 17141 ;;		_main
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145                           	psect	text80
 17146  014724                     __ptext80:
 17147                           	callstack 0
 17148  014724                     _SYSTEM_Initialize:
 17149                           	callstack 21
 17150                           
 17151                           ; BSR set to: 1
 17152                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;incstack = 0
 17156  014724  ECBD  F0A1         	call	_INTERRUPT_Initialize	;wreg free
 17157                           
 17158                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 17159  014728  ECDE  F0A5         	call	_PMD_Initialize	;wreg free
 17160                           
 17161                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 17162  01472C  ECC7  F09A         	call	_PIN_MANAGER_Initialize	;wreg free
 17163                           
 17164                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 17165  014730  EC5C  F0A6         	call	_OSCILLATOR_Initialize	;wreg free
 17166                           
 17167                           ; BSR set to: 57
 17168                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 17169  014734  EC84  F09E         	call	_ADCC_Initialize	;wreg free
 17170                           
 17171                           ; BSR set to: 0
 17172                           ;mcc_generated_files/mcc.c: 57:     DMA1_Initialize();
 17173  014738  ECC5  F09F         	call	_DMA1_Initialize	;wreg free
 17174                           
 17175                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 17176  01473C  EC3E  F0A6         	call	_TMR2_Initialize	;wreg free
 17177                           
 17178                           ;mcc_generated_files/mcc.c: 59:     PWM6_Initialize();
 17179  014740  EC9D  F0A6         	call	_PWM6_Initialize	;wreg free
 17180                           
 17181                           ; BSR set to: 63
 17182                           ;mcc_generated_files/mcc.c: 60:     TMR6_Initialize();
 17183  014744  ECDF  F0A4         	call	_TMR6_Initialize	;wreg free
 17184                           
 17185                           ; BSR set to: 0
 17186                           ;mcc_generated_files/mcc.c: 61:     DAC1_Initialize();
 17187  014748  EC69  F0A7         	call	_DAC1_Initialize	;wreg free
 17188                           
 17189                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 17190  01474C  EC6E  F0A1         	call	_TMR5_Initialize	;wreg free
 17191                           
 17192                           ; BSR set to: 0
 17193                           ;mcc_generated_files/mcc.c: 63:     PWM5_Initialize();
 17194  014750  ECA9  F0A6         	call	_PWM5_Initialize	;wreg free
 17195                           
 17196                           ; BSR set to: 63
 17197                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 17198  014754  EC0D  F099         	call	_UART1_Initialize	;wreg free
 17199                           
 17200                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 17201  014758  EC84  F0A6         	call	_SPI1_Initialize	;wreg free
 17202                           
 17203                           ;mcc_generated_files/mcc.c: 66:     SystemArbiter_Initialize();
 17204  01475C  EC4E  F0A7         	call	_SystemArbiter_Initialize	;wreg free
 17205                           
 17206                           ; BSR set to: 57
 17207  014760  0012               	return		;funcret
 17208  014762                     __end_of_SYSTEM_Initialize:
 17209                           	callstack 0
 17210                           
 17211 ;; *************** function _UART1_Initialize *****************
 17212 ;; Defined at:
 17213 ;;		line 87 in file "mcc_generated_files/uart1.c"
 17214 ;; Parameters:    Size  Location     Type
 17215 ;;		None
 17216 ;; Auto vars:     Size  Location     Type
 17217 ;;		None
 17218 ;; Return value:  Size  Location     Type
 17219 ;;                  1    wreg      void 
 17220 ;; Registers used:
 17221 ;;		wreg, status,2, status,0, cstack
 17222 ;; Tracked objects:
 17223 ;;		On entry : 3F/3F
 17224 ;;		On exit  : 3F/39
 17225 ;;		Unchanged: 0/0
 17226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17231 ;;Total ram usage:        0 bytes
 17232 ;; Hardware stack levels used: 1
 17233 ;; Hardware stack levels required when called: 8
 17234 ;; This function calls:
 17235 ;;		_UART1_SetErrorHandler
 17236 ;;		_UART1_SetFramingErrorHandler
 17237 ;;		_UART1_SetFramingErrorInterruptHandler
 17238 ;;		_UART1_SetOverrunErrorHandler
 17239 ;;		_UART1_SetRxInterruptHandler
 17240 ;;		_UART1_SetTxInterruptHandler
 17241 ;;		_UART1_SetUartInterruptHandler
 17242 ;; This function is called by:
 17243 ;;		_SYSTEM_Initialize
 17244 ;; This function uses a non-reentrant model
 17245 ;;
 17246                           
 17247                           	psect	text81
 17248  01321A                     __ptext81:
 17249                           	callstack 0
 17250  01321A                     _UART1_Initialize:
 17251                           	callstack 21
 17252                           
 17253                           ; BSR set to: 63
 17254                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 17255                           
 17256                           ; BSR set to: 57
 17257                           ;incstack = 0
 17258  01321A  0139               	movlb	57	; () banked
 17259  01321C  9793               	bcf	147,3,b	;volatile
 17260                           
 17261                           ; BSR set to: 57
 17262                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 17263  01321E  0EC2               	movlw	low _UART1_Receive_ISR
 17264  013220  0100               	movlb	0	; () banked
 17265  013222  6F60               	movwf	UART1_SetRxInterruptHandler@InterruptHandler& (0+255),b
 17266  013224  0E3A               	movlw	high _UART1_Receive_ISR
 17267  013226  6F61               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)& (0+255),b
 17268  013228  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 17269  01322A  6F62               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)& (0+255),b
 17270  01322C  EC1D  F0A7         	call	_UART1_SetRxInterruptHandler	;wreg free
 17271                           
 17272                           ; BSR set to: 0
 17273                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 17274  013230  0139               	movlb	57	; () banked
 17275  013232  9993               	bcf	147,4,b	;volatile
 17276                           
 17277                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 17278  013234  0E1C               	movlw	low _UART1_Transmit_ISR
 17279  013236  0100               	movlb	0	; () banked
 17280  013238  6F60               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
 17281  01323A  0E4A               	movlw	high _UART1_Transmit_ISR
 17282  01323C  6F61               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
 17283  01323E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 17284  013240  6F62               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)& (0+255),b
 17285  013242  EC16  F0A7         	call	_UART1_SetTxInterruptHandler	;wreg free
 17286                           
 17287                           ; BSR set to: 0
 17288                           ;mcc_generated_files/uart1.c: 94:     PIE3bits.U1EIE = 0;
 17289  013246  0139               	movlb	57	; () banked
 17290  013248  9B93               	bcf	147,5,b	;volatile
 17291                           
 17292                           ;mcc_generated_files/uart1.c: 95:     UART1_SetFramingErrorInterruptHandler(UART1_Framin
      +                          gError_ISR);
 17293  01324A  0EF4               	movlw	low _UART1_FramingError_ISR
 17294  01324C  0100               	movlb	0	; () banked
 17295  01324E  6F60               	movwf	UART1_SetFramingErrorInterruptHandler@InterruptHandler& (0+255),b
 17296  013250  0E4E               	movlw	high _UART1_FramingError_ISR
 17297  013252  6F61               	movwf	(UART1_SetFramingErrorInterruptHandler@InterruptHandler+1)& (0+255),b
 17298  013254  0E01               	movlw	low (_UART1_FramingError_ISR shr (0+16))
 17299  013256  6F62               	movwf	(UART1_SetFramingErrorInterruptHandler@InterruptHandler+2)& (0+255),b
 17300  013258  EC2B  F0A7         	call	_UART1_SetFramingErrorInterruptHandler	;wreg free
 17301                           
 17302                           ; BSR set to: 0
 17303                           ;mcc_generated_files/uart1.c: 96:     PIE3bits.U1IE = 0;
 17304  01325C  0139               	movlb	57	; () banked
 17305  01325E  9D93               	bcf	147,6,b	;volatile
 17306                           
 17307                           ;mcc_generated_files/uart1.c: 97:     UART1_SetUartInterruptHandler(UART1_UartInterrupt_
      +                          ISR);
 17308  013260  0E14               	movlw	low _UART1_UartInterrupt_ISR
 17309  013262  0100               	movlb	0	; () banked
 17310  013264  6F60               	movwf	UART1_SetUartInterruptHandler@InterruptHandler& (0+255),b
 17311  013266  0E4F               	movlw	high _UART1_UartInterrupt_ISR
 17312  013268  6F61               	movwf	(UART1_SetUartInterruptHandler@InterruptHandler+1)& (0+255),b
 17313  01326A  0E01               	movlw	low (_UART1_UartInterrupt_ISR shr (0+16))
 17314  01326C  6F62               	movwf	(UART1_SetUartInterruptHandler@InterruptHandler+2)& (0+255),b
 17315  01326E  EC0F  F0A7         	call	_UART1_SetUartInterruptHandler	;wreg free
 17316                           
 17317                           ; BSR set to: 0
 17318                           ;mcc_generated_files/uart1.c: 102:     U1P1L = 0x00;
 17319  013272  0E00               	movlw	0
 17320  013274  013D               	movlb	61	; () banked
 17321  013276  6FEC               	movwf	236,b	;volatile
 17322                           
 17323                           ; BSR set to: 61
 17324                           ;mcc_generated_files/uart1.c: 105:     U1P1H = 0x00;
 17325  013278  0E00               	movlw	0
 17326  01327A  6FED               	movwf	237,b	;volatile
 17327                           
 17328                           ; BSR set to: 61
 17329                           ;mcc_generated_files/uart1.c: 108:     U1P2L = 0x00;
 17330  01327C  0E00               	movlw	0
 17331  01327E  6FEE               	movwf	238,b	;volatile
 17332                           
 17333                           ; BSR set to: 61
 17334                           ;mcc_generated_files/uart1.c: 111:     U1P2H = 0x00;
 17335  013280  0E00               	movlw	0
 17336  013282  6FEF               	movwf	239,b	;volatile
 17337                           
 17338                           ; BSR set to: 61
 17339                           ;mcc_generated_files/uart1.c: 114:     U1P3L = 0x00;
 17340  013284  0E00               	movlw	0
 17341  013286  6FF0               	movwf	240,b	;volatile
 17342                           
 17343                           ; BSR set to: 61
 17344                           ;mcc_generated_files/uart1.c: 117:     U1P3H = 0x00;
 17345  013288  0E00               	movlw	0
 17346  01328A  6FF1               	movwf	241,b	;volatile
 17347                           
 17348                           ; BSR set to: 61
 17349                           ;mcc_generated_files/uart1.c: 120:     U1CON0 = 0xB0;
 17350  01328C  0EB0               	movlw	176
 17351  01328E  6FF2               	movwf	242,b	;volatile
 17352                           
 17353                           ; BSR set to: 61
 17354                           ;mcc_generated_files/uart1.c: 123:     U1CON1 = 0x90;
 17355  013290  0E90               	movlw	144
 17356  013292  6FF3               	movwf	243,b	;volatile
 17357                           
 17358                           ; BSR set to: 61
 17359                           ;mcc_generated_files/uart1.c: 126:     U1CON2 = 0x00;
 17360  013294  0E00               	movlw	0
 17361  013296  6FF4               	movwf	244,b	;volatile
 17362                           
 17363                           ; BSR set to: 61
 17364                           ;mcc_generated_files/uart1.c: 129:     U1BRGL = 0x8A;
 17365  013298  0E8A               	movlw	138
 17366  01329A  6FF5               	movwf	245,b	;volatile
 17367                           
 17368                           ; BSR set to: 61
 17369                           ;mcc_generated_files/uart1.c: 132:     U1BRGH = 0x00;
 17370  01329C  0E00               	movlw	0
 17371  01329E  6FF6               	movwf	246,b	;volatile
 17372                           
 17373                           ; BSR set to: 61
 17374                           ;mcc_generated_files/uart1.c: 135:     U1FIFO = 0x00;
 17375  0132A0  0E00               	movlw	0
 17376  0132A2  6FF7               	movwf	247,b	;volatile
 17377                           
 17378                           ; BSR set to: 61
 17379                           ;mcc_generated_files/uart1.c: 138:     U1UIR = 0x00;
 17380  0132A4  0E00               	movlw	0
 17381  0132A6  6FF8               	movwf	248,b	;volatile
 17382                           
 17383                           ; BSR set to: 61
 17384                           ;mcc_generated_files/uart1.c: 141:     U1ERRIR = 0x00;
 17385  0132A8  0E00               	movlw	0
 17386  0132AA  6FF9               	movwf	249,b	;volatile
 17387                           
 17388                           ; BSR set to: 61
 17389                           ;mcc_generated_files/uart1.c: 144:     U1ERRIE = 0x00;
 17390  0132AC  0E00               	movlw	0
 17391  0132AE  6FFA               	movwf	250,b	;volatile
 17392                           
 17393                           ; BSR set to: 61
 17394                           ;mcc_generated_files/uart1.c: 147:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 17395  0132B0  0E24               	movlw	low _UART1_DefaultFramingErrorHandler
 17396  0132B2  0100               	movlb	0	; () banked
 17397  0132B4  6F60               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 17398  0132B6  0E4F               	movlw	high _UART1_DefaultFramingErrorHandler
 17399  0132B8  6F61               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 17400  0132BA  0E01               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 17401  0132BC  6F62               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
 17402  0132BE  EC32  F0A7         	call	_UART1_SetFramingErrorHandler	;wreg free
 17403                           
 17404                           ; BSR set to: 0
 17405                           ;mcc_generated_files/uart1.c: 148:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 17406  0132C2  0E22               	movlw	low _UART1_DefaultOverrunErrorHandler
 17407  0132C4  6F60               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 17408  0132C6  0E4F               	movlw	high _UART1_DefaultOverrunErrorHandler
 17409  0132C8  6F61               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 17410  0132CA  0E01               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 17411  0132CC  6F62               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
 17412  0132CE  EC24  F0A7         	call	_UART1_SetOverrunErrorHandler	;wreg free
 17413                           
 17414                           ; BSR set to: 0
 17415                           ;mcc_generated_files/uart1.c: 149:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 17416  0132D2  0E0E               	movlw	low _UART1_DefaultErrorHandler
 17417  0132D4  6F60               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
 17418  0132D6  0E4F               	movlw	high _UART1_DefaultErrorHandler
 17419  0132D8  6F61               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 17420  0132DA  0E01               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 17421  0132DC  6F62               	movwf	(UART1_SetErrorHandler@interruptHandler+2)& (0+255),b
 17422  0132DE  EC39  F0A7         	call	_UART1_SetErrorHandler	;wreg free
 17423                           
 17424                           ;mcc_generated_files/uart1.c: 151:     uart1RxLastError.status = 0;
 17425  0132E2  0E00               	movlw	0
 17426  0132E4  6E38               	movwf	_uart1RxLastError^0,c	;volatile
 17427                           
 17428                           ;mcc_generated_files/uart1.c: 154:     uart1TxHead = 0;
 17429  0132E6  0E00               	movlw	0
 17430  0132E8  6E3E               	movwf	_uart1TxHead^0,c	;volatile
 17431                           
 17432                           ;mcc_generated_files/uart1.c: 155:     uart1TxTail = 0;
 17433  0132EA  0E00               	movlw	0
 17434  0132EC  6E3D               	movwf	_uart1TxTail^0,c	;volatile
 17435                           
 17436                           ;mcc_generated_files/uart1.c: 156:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 17437  0132EE  0E40               	movlw	64
 17438  0132F0  6E3C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 17439                           
 17440                           ;mcc_generated_files/uart1.c: 157:     uart1RxHead = 0;
 17441  0132F2  0E00               	movlw	0
 17442  0132F4  6E3B               	movwf	_uart1RxHead^0,c	;volatile
 17443                           
 17444                           ;mcc_generated_files/uart1.c: 158:     uart1RxTail = 0;
 17445  0132F6  0E00               	movlw	0
 17446  0132F8  6E3A               	movwf	_uart1RxTail^0,c	;volatile
 17447                           
 17448                           ;mcc_generated_files/uart1.c: 159:     uart1RxCount = 0;
 17449  0132FA  0E00               	movlw	0
 17450  0132FC  6E39               	movwf	_uart1RxCount^0,c	;volatile
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;mcc_generated_files/uart1.c: 162:     PIE3bits.U1RXIE = 1;
 17454  0132FE  0139               	movlb	57	; () banked
 17455  013300  8793               	bsf	147,3,b	;volatile
 17456                           
 17457                           ; BSR set to: 57
 17458                           ;mcc_generated_files/uart1.c: 164:     PIE3bits.U1EIE = 1;
 17459  013302  8B93               	bsf	147,5,b	;volatile
 17460                           
 17461                           ; BSR set to: 57
 17462                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1IE = 1;
 17463  013304  8D93               	bsf	147,6,b	;volatile
 17464                           
 17465                           ; BSR set to: 57
 17466  013306  0012               	return		;funcret
 17467  013308                     __end_of_UART1_Initialize:
 17468                           	callstack 0
 17469                           
 17470 ;; *************** function _UART1_SetUartInterruptHandler *****************
 17471 ;; Defined at:
 17472 ;;		line 378 in file "mcc_generated_files/uart1.c"
 17473 ;; Parameters:    Size  Location     Type
 17474 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17475 ;;		 -> UART1_UartInterrupt_ISR(1), 
 17476 ;; Auto vars:     Size  Location     Type
 17477 ;;		None
 17478 ;; Return value:  Size  Location     Type
 17479 ;;                  1    wreg      void 
 17480 ;; Registers used:
 17481 ;;		wreg, status,2, status,0
 17482 ;; Tracked objects:
 17483 ;;		On entry : 3F/0
 17484 ;;		On exit  : 3F/0
 17485 ;;		Unchanged: 3F/0
 17486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17487 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17490 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17491 ;;Total ram usage:        3 bytes
 17492 ;; Hardware stack levels used: 1
 17493 ;; Hardware stack levels required when called: 7
 17494 ;; This function calls:
 17495 ;;		Nothing
 17496 ;; This function is called by:
 17497 ;;		_UART1_Initialize
 17498 ;; This function uses a non-reentrant model
 17499 ;;
 17500                           
 17501                           	psect	text82
 17502  014E1E                     __ptext82:
 17503                           	callstack 0
 17504  014E1E                     _UART1_SetUartInterruptHandler:
 17505                           	callstack 21
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;mcc_generated_files/uart1.c: 379:     UART1_UARTInterruptHandler = InterruptHandler;
 17509                           
 17510                           ; BSR set to: 57
 17511                           ;incstack = 0
 17512  014E1E  C060  F021         	movff	UART1_SetUartInterruptHandler@InterruptHandler,_UART1_UARTInterruptHandler
 17513  014E22  C061  F022         	movff	UART1_SetUartInterruptHandler@InterruptHandler+1,_UART1_UARTInterruptHandler+1
 17514  014E26  C062  F023         	movff	UART1_SetUartInterruptHandler@InterruptHandler+2,_UART1_UARTInterruptHandler+2
 17515                           
 17516                           ; BSR set to: 0
 17517  014E2A  0012               	return		;funcret
 17518  014E2C                     __end_of_UART1_SetUartInterruptHandler:
 17519                           	callstack 0
 17520                           
 17521 ;; *************** function _UART1_SetTxInterruptHandler *****************
 17522 ;; Defined at:
 17523 ;;		line 370 in file "mcc_generated_files/uart1.c"
 17524 ;; Parameters:    Size  Location     Type
 17525 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17526 ;;		 -> UART1_Transmit_ISR(1), 
 17527 ;; Auto vars:     Size  Location     Type
 17528 ;;		None
 17529 ;; Return value:  Size  Location     Type
 17530 ;;                  1    wreg      void 
 17531 ;; Registers used:
 17532 ;;		wreg, status,2, status,0
 17533 ;; Tracked objects:
 17534 ;;		On entry : 3F/0
 17535 ;;		On exit  : 3F/0
 17536 ;;		Unchanged: 3F/0
 17537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17538 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17541 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17542 ;;Total ram usage:        3 bytes
 17543 ;; Hardware stack levels used: 1
 17544 ;; Hardware stack levels required when called: 7
 17545 ;; This function calls:
 17546 ;;		Nothing
 17547 ;; This function is called by:
 17548 ;;		_UART1_Initialize
 17549 ;; This function uses a non-reentrant model
 17550 ;;
 17551                           
 17552                           	psect	text83
 17553  014E2C                     __ptext83:
 17554                           	callstack 0
 17555  014E2C                     _UART1_SetTxInterruptHandler:
 17556                           	callstack 21
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;mcc_generated_files/uart1.c: 371:     UART1_TxInterruptHandler = InterruptHandler;
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;incstack = 0
 17563  014E2C  C060  F027         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 17564  014E30  C061  F028         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 17565  014E34  C062  F029         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 17566                           
 17567                           ; BSR set to: 0
 17568  014E38  0012               	return		;funcret
 17569  014E3A                     __end_of_UART1_SetTxInterruptHandler:
 17570                           	callstack 0
 17571                           
 17572 ;; *************** function _UART1_SetRxInterruptHandler *****************
 17573 ;; Defined at:
 17574 ;;		line 366 in file "mcc_generated_files/uart1.c"
 17575 ;; Parameters:    Size  Location     Type
 17576 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17577 ;;		 -> UART1_Receive_ISR(1), 
 17578 ;; Auto vars:     Size  Location     Type
 17579 ;;		None
 17580 ;; Return value:  Size  Location     Type
 17581 ;;                  1    wreg      void 
 17582 ;; Registers used:
 17583 ;;		wreg, status,2, status,0
 17584 ;; Tracked objects:
 17585 ;;		On entry : 3F/0
 17586 ;;		On exit  : 3F/0
 17587 ;;		Unchanged: 3F/0
 17588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17589 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17592 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17593 ;;Total ram usage:        3 bytes
 17594 ;; Hardware stack levels used: 1
 17595 ;; Hardware stack levels required when called: 7
 17596 ;; This function calls:
 17597 ;;		Nothing
 17598 ;; This function is called by:
 17599 ;;		_UART1_Initialize
 17600 ;; This function uses a non-reentrant model
 17601 ;;
 17602                           
 17603                           	psect	text84
 17604  014E3A                     __ptext84:
 17605                           	callstack 0
 17606  014E3A                     _UART1_SetRxInterruptHandler:
 17607                           	callstack 21
 17608                           
 17609                           ; BSR set to: 0
 17610                           ;mcc_generated_files/uart1.c: 367:     UART1_RxInterruptHandler = InterruptHandler;
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;incstack = 0
 17614  014E3A  C060  F02A         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 17615  014E3E  C061  F02B         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 17616  014E42  C062  F02C         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 17617                           
 17618                           ; BSR set to: 0
 17619  014E46  0012               	return		;funcret
 17620  014E48                     __end_of_UART1_SetRxInterruptHandler:
 17621                           	callstack 0
 17622                           
 17623 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 17624 ;; Defined at:
 17625 ;;		line 341 in file "mcc_generated_files/uart1.c"
 17626 ;; Parameters:    Size  Location     Type
 17627 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 17628 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 17629 ;; Auto vars:     Size  Location     Type
 17630 ;;		None
 17631 ;; Return value:  Size  Location     Type
 17632 ;;                  1    wreg      void 
 17633 ;; Registers used:
 17634 ;;		wreg, status,2, status,0
 17635 ;; Tracked objects:
 17636 ;;		On entry : 3F/0
 17637 ;;		On exit  : 3F/0
 17638 ;;		Unchanged: 3F/0
 17639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17640 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17643 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17644 ;;Total ram usage:        3 bytes
 17645 ;; Hardware stack levels used: 1
 17646 ;; Hardware stack levels required when called: 7
 17647 ;; This function calls:
 17648 ;;		Nothing
 17649 ;; This function is called by:
 17650 ;;		_UART1_Initialize
 17651 ;; This function uses a non-reentrant model
 17652 ;;
 17653                           
 17654                           	psect	text85
 17655  014E48                     __ptext85:
 17656                           	callstack 0
 17657  014E48                     _UART1_SetOverrunErrorHandler:
 17658                           	callstack 21
 17659                           
 17660                           ; BSR set to: 0
 17661                           ;mcc_generated_files/uart1.c: 342:     UART1_OverrunErrorHandler = interruptHandler;
 17662                           
 17663                           ; BSR set to: 0
 17664                           ;incstack = 0
 17665  014E48  C060  F12F         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 17666  014E4C  C061  F130         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 17667  014E50  C062  F131         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 17668                           
 17669                           ; BSR set to: 0
 17670  014E54  0012               	return		;funcret
 17671  014E56                     __end_of_UART1_SetOverrunErrorHandler:
 17672                           	callstack 0
 17673                           
 17674 ;; *************** function _UART1_SetFramingErrorInterruptHandler *****************
 17675 ;; Defined at:
 17676 ;;		line 374 in file "mcc_generated_files/uart1.c"
 17677 ;; Parameters:    Size  Location     Type
 17678 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17679 ;;		 -> UART1_FramingError_ISR(1), 
 17680 ;; Auto vars:     Size  Location     Type
 17681 ;;		None
 17682 ;; Return value:  Size  Location     Type
 17683 ;;                  1    wreg      void 
 17684 ;; Registers used:
 17685 ;;		wreg, status,2, status,0
 17686 ;; Tracked objects:
 17687 ;;		On entry : 3F/0
 17688 ;;		On exit  : 3F/0
 17689 ;;		Unchanged: 3F/0
 17690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17691 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17694 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17695 ;;Total ram usage:        3 bytes
 17696 ;; Hardware stack levels used: 1
 17697 ;; Hardware stack levels required when called: 7
 17698 ;; This function calls:
 17699 ;;		Nothing
 17700 ;; This function is called by:
 17701 ;;		_UART1_Initialize
 17702 ;; This function uses a non-reentrant model
 17703 ;;
 17704                           
 17705                           	psect	text86
 17706  014E56                     __ptext86:
 17707                           	callstack 0
 17708  014E56                     _UART1_SetFramingErrorInterruptHandler:
 17709                           	callstack 21
 17710                           
 17711                           ; BSR set to: 0
 17712                           ;mcc_generated_files/uart1.c: 375:     UART1_FramingErrorInterruptHandler = InterruptHan
      +                          dler;
 17713                           
 17714                           ; BSR set to: 0
 17715                           ;incstack = 0
 17716  014E56  C060  F024         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler,_UART1_FramingErrorInterru
      +                          ptHandler
 17717  014E5A  C061  F025         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler+1,_UART1_FramingErrorInter
      +                          ruptHandler+1
 17718  014E5E  C062  F026         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler+2,_UART1_FramingErrorInter
      +                          ruptHandler+2
 17719                           
 17720                           ; BSR set to: 0
 17721  014E62  0012               	return		;funcret
 17722  014E64                     __end_of_UART1_SetFramingErrorInterruptHandler:
 17723                           	callstack 0
 17724                           
 17725 ;; *************** function _UART1_SetFramingErrorHandler *****************
 17726 ;; Defined at:
 17727 ;;		line 337 in file "mcc_generated_files/uart1.c"
 17728 ;; Parameters:    Size  Location     Type
 17729 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 17730 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 17731 ;; Auto vars:     Size  Location     Type
 17732 ;;		None
 17733 ;; Return value:  Size  Location     Type
 17734 ;;                  1    wreg      void 
 17735 ;; Registers used:
 17736 ;;		wreg, status,2, status,0
 17737 ;; Tracked objects:
 17738 ;;		On entry : 3F/0
 17739 ;;		On exit  : 3F/0
 17740 ;;		Unchanged: 3F/0
 17741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17742 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17745 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17746 ;;Total ram usage:        3 bytes
 17747 ;; Hardware stack levels used: 1
 17748 ;; Hardware stack levels required when called: 7
 17749 ;; This function calls:
 17750 ;;		Nothing
 17751 ;; This function is called by:
 17752 ;;		_UART1_Initialize
 17753 ;; This function uses a non-reentrant model
 17754 ;;
 17755                           
 17756                           	psect	text87
 17757  014E64                     __ptext87:
 17758                           	callstack 0
 17759  014E64                     _UART1_SetFramingErrorHandler:
 17760                           	callstack 21
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;mcc_generated_files/uart1.c: 338:     UART1_FramingErrorHandler = interruptHandler;
 17764                           
 17765                           ; BSR set to: 0
 17766                           ;incstack = 0
 17767  014E64  C060  F132         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 17768  014E68  C061  F133         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 17769  014E6C  C062  F134         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 17770                           
 17771                           ; BSR set to: 0
 17772  014E70  0012               	return		;funcret
 17773  014E72                     __end_of_UART1_SetFramingErrorHandler:
 17774                           	callstack 0
 17775                           
 17776 ;; *************** function _UART1_SetErrorHandler *****************
 17777 ;; Defined at:
 17778 ;;		line 345 in file "mcc_generated_files/uart1.c"
 17779 ;; Parameters:    Size  Location     Type
 17780 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 17781 ;;		 -> UART1_DefaultErrorHandler(1), 
 17782 ;; Auto vars:     Size  Location     Type
 17783 ;;		None
 17784 ;; Return value:  Size  Location     Type
 17785 ;;                  1    wreg      void 
 17786 ;; Registers used:
 17787 ;;		wreg, status,2, status,0
 17788 ;; Tracked objects:
 17789 ;;		On entry : 3F/0
 17790 ;;		On exit  : 3F/0
 17791 ;;		Unchanged: 3F/0
 17792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17793 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17796 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17797 ;;Total ram usage:        3 bytes
 17798 ;; Hardware stack levels used: 1
 17799 ;; Hardware stack levels required when called: 7
 17800 ;; This function calls:
 17801 ;;		Nothing
 17802 ;; This function is called by:
 17803 ;;		_UART1_Initialize
 17804 ;; This function uses a non-reentrant model
 17805 ;;
 17806                           
 17807                           	psect	text88
 17808  014E72                     __ptext88:
 17809                           	callstack 0
 17810  014E72                     _UART1_SetErrorHandler:
 17811                           	callstack 21
 17812                           
 17813                           ; BSR set to: 0
 17814                           ;mcc_generated_files/uart1.c: 346:     UART1_ErrorHandler = interruptHandler;
 17815                           
 17816                           ; BSR set to: 0
 17817                           ;incstack = 0
 17818  014E72  C060  F12C         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 17819  014E76  C061  F12D         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 17820  014E7A  C062  F12E         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 17821                           
 17822                           ; BSR set to: 0
 17823  014E7E  0012               	return		;funcret
 17824  014E80                     __end_of_UART1_SetErrorHandler:
 17825                           	callstack 0
 17826                           
 17827 ;; *************** function _TMR6_Initialize *****************
 17828 ;; Defined at:
 17829 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 17830 ;; Parameters:    Size  Location     Type
 17831 ;;		None
 17832 ;; Auto vars:     Size  Location     Type
 17833 ;;		None
 17834 ;; Return value:  Size  Location     Type
 17835 ;;                  1    wreg      void 
 17836 ;; Registers used:
 17837 ;;		wreg, status,2, status,0, cstack
 17838 ;; Tracked objects:
 17839 ;;		On entry : 3F/3F
 17840 ;;		On exit  : 3F/0
 17841 ;;		Unchanged: 0/0
 17842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17847 ;;Total ram usage:        0 bytes
 17848 ;; Hardware stack levels used: 1
 17849 ;; Hardware stack levels required when called: 8
 17850 ;; This function calls:
 17851 ;;		_TMR6_SetInterruptHandler
 17852 ;; This function is called by:
 17853 ;;		_SYSTEM_Initialize
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           	psect	text89
 17858  0149BE                     __ptext89:
 17859                           	callstack 0
 17860  0149BE                     _TMR6_Initialize:
 17861                           	callstack 21
 17862                           
 17863                           ; BSR set to: 63
 17864                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;incstack = 0
 17868  0149BE  0E01               	movlw	1
 17869  0149C0  6E96               	movwf	150,c	;volatile
 17870                           
 17871                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 17872  0149C2  0E20               	movlw	32
 17873  0149C4  6E95               	movwf	149,c	;volatile
 17874                           
 17875                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 17876  0149C6  0E00               	movlw	0
 17877  0149C8  6E97               	movwf	151,c	;volatile
 17878                           
 17879                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 17880  0149CA  0E4D               	movlw	77
 17881  0149CC  6E93               	movwf	147,c	;volatile
 17882                           
 17883                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 17884  0149CE  0E00               	movlw	0
 17885  0149D0  6E92               	movwf	146,c	;volatile
 17886                           
 17887                           ; BSR set to: 63
 17888                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 17889  0149D2  0139               	movlb	57	; () banked
 17890  0149D4  91A9               	bcf	169,0,b	;volatile
 17891                           
 17892                           ; BSR set to: 57
 17893                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 17894  0149D6  8199               	bsf	153,0,b	;volatile
 17895                           
 17896                           ; BSR set to: 57
 17897                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 17898  0149D8  0E28               	movlw	low _TMR6_DefaultInterruptHandler
 17899  0149DA  0100               	movlb	0	; () banked
 17900  0149DC  6F60               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 17901  0149DE  0E4F               	movlw	high _TMR6_DefaultInterruptHandler
 17902  0149E0  6F61               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17903  0149E2  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 17904  0149E4  6F62               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17905  0149E6  EC40  F0A7         	call	_TMR6_SetInterruptHandler	;wreg free
 17906                           
 17907                           ; BSR set to: 0
 17908                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 17909  0149EA  6894               	setf	148,c	;volatile
 17910                           
 17911                           ; BSR set to: 0
 17912  0149EC  0012               	return		;funcret
 17913  0149EE                     __end_of_TMR6_Initialize:
 17914                           	callstack 0
 17915                           
 17916 ;; *************** function _TMR6_SetInterruptHandler *****************
 17917 ;; Defined at:
 17918 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 17919 ;; Parameters:    Size  Location     Type
 17920 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17921 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 17922 ;; Auto vars:     Size  Location     Type
 17923 ;;		None
 17924 ;; Return value:  Size  Location     Type
 17925 ;;                  1    wreg      void 
 17926 ;; Registers used:
 17927 ;;		wreg, status,2, status,0
 17928 ;; Tracked objects:
 17929 ;;		On entry : 3F/0
 17930 ;;		On exit  : 3F/0
 17931 ;;		Unchanged: 3F/0
 17932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17933 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17936 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17937 ;;Total ram usage:        3 bytes
 17938 ;; Hardware stack levels used: 1
 17939 ;; Hardware stack levels required when called: 7
 17940 ;; This function calls:
 17941 ;;		Nothing
 17942 ;; This function is called by:
 17943 ;;		_TMR6_Initialize
 17944 ;;		_main
 17945 ;; This function uses a non-reentrant model
 17946 ;;
 17947                           
 17948                           	psect	text90
 17949  014E80                     __ptext90:
 17950                           	callstack 0
 17951  014E80                     _TMR6_SetInterruptHandler:
 17952                           	callstack 23
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 17956                           
 17957                           ; BSR set to: 0
 17958                           ;incstack = 0
 17959  014E80  C060  F13B         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 17960  014E84  C061  F13C         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 17961  014E88  C062  F13D         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 17962                           
 17963                           ; BSR set to: 0
 17964  014E8C  0012               	return		;funcret
 17965  014E8E                     __end_of_TMR6_SetInterruptHandler:
 17966                           	callstack 0
 17967                           
 17968 ;; *************** function _TMR5_Initialize *****************
 17969 ;; Defined at:
 17970 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 17971 ;; Parameters:    Size  Location     Type
 17972 ;;		None
 17973 ;; Auto vars:     Size  Location     Type
 17974 ;;		None
 17975 ;; Return value:  Size  Location     Type
 17976 ;;                  1    wreg      void 
 17977 ;; Registers used:
 17978 ;;		wreg, status,2, status,0, cstack
 17979 ;; Tracked objects:
 17980 ;;		On entry : 3F/3E
 17981 ;;		On exit  : 3F/0
 17982 ;;		Unchanged: 0/0
 17983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17988 ;;Total ram usage:        2 bytes
 17989 ;; Hardware stack levels used: 1
 17990 ;; Hardware stack levels required when called: 8
 17991 ;; This function calls:
 17992 ;;		_TMR5_SetInterruptHandler
 17993 ;; This function is called by:
 17994 ;;		_SYSTEM_Initialize
 17995 ;; This function uses a non-reentrant model
 17996 ;;
 17997                           
 17998                           	psect	text91
 17999  0142DC                     __ptext91:
 18000                           	callstack 0
 18001  0142DC                     _TMR5_Initialize:
 18002                           	callstack 21
 18003                           
 18004                           ; BSR set to: 62
 18005                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 18006                           
 18007                           ; BSR set to: 0
 18008                           ;incstack = 0
 18009  0142DC  0E00               	movlw	0
 18010  0142DE  6E9B               	movwf	155,c	;volatile
 18011                           
 18012                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 18013  0142E0  0E00               	movlw	0
 18014  0142E2  6E9C               	movwf	156,c	;volatile
 18015                           
 18016                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 18017  0142E4  0E02               	movlw	2
 18018  0142E6  6E9D               	movwf	157,c	;volatile
 18019                           
 18020                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 18021  0142E8  0E83               	movlw	131
 18022  0142EA  6E99               	movwf	153,c	;volatile
 18023                           
 18024                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 18025  0142EC  0E00               	movlw	0
 18026  0142EE  6E98               	movwf	152,c	;volatile
 18027                           
 18028                           ; BSR set to: 62
 18029                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 18030  0142F0  0139               	movlb	57	; () banked
 18031  0142F2  9DA8               	bcf	168,6,b	;volatile
 18032                           
 18033                           ; BSR set to: 57
 18034                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 18035  0142F4  5098               	movf	152,w,c	;volatile
 18036  0142F6  006F FE64  F063    	movff	16281,??_TMR5_Initialize	;volatile
 18037  0142FC  0100               	movlb	0	; () banked
 18038  0142FE  6B64               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 18039  014300  C063  F064         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 18040  014304  6B63               	clrf	??_TMR5_Initialize& (0+255),b
 18041  014306  1163               	iorwf	??_TMR5_Initialize& (0+255),w,b
 18042  014308  6E2F               	movwf	_timer5ReloadVal^0,c	;volatile
 18043  01430A  5164               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 18044  01430C  6E30               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 18048  01430E  0139               	movlb	57	; () banked
 18049  014310  8D98               	bsf	152,6,b	;volatile
 18050                           
 18051                           ; BSR set to: 57
 18052                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 18053  014312  0E2E               	movlw	low _TMR5_DefaultInterruptHandler
 18054  014314  0100               	movlb	0	; () banked
 18055  014316  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 18056  014318  0E4F               	movlw	high _TMR5_DefaultInterruptHandler
 18057  01431A  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 18058  01431C  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 18059  01431E  6F62               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 18060  014320  EC47  F0A7         	call	_TMR5_SetInterruptHandler	;wreg free
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 18064  014324  0E01               	movlw	1
 18065  014326  6E9A               	movwf	154,c	;volatile
 18066                           
 18067                           ; BSR set to: 0
 18068  014328  0012               	return		;funcret
 18069  01432A                     __end_of_TMR5_Initialize:
 18070                           	callstack 0
 18071                           
 18072 ;; *************** function _TMR5_SetInterruptHandler *****************
 18073 ;; Defined at:
 18074 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 18075 ;; Parameters:    Size  Location     Type
 18076 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 18077 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 18078 ;; Auto vars:     Size  Location     Type
 18079 ;;		None
 18080 ;; Return value:  Size  Location     Type
 18081 ;;                  1    wreg      void 
 18082 ;; Registers used:
 18083 ;;		wreg, status,2, status,0
 18084 ;; Tracked objects:
 18085 ;;		On entry : 3F/0
 18086 ;;		On exit  : 3F/0
 18087 ;;		Unchanged: 3F/0
 18088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18089 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18092 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18093 ;;Total ram usage:        3 bytes
 18094 ;; Hardware stack levels used: 1
 18095 ;; Hardware stack levels required when called: 7
 18096 ;; This function calls:
 18097 ;;		Nothing
 18098 ;; This function is called by:
 18099 ;;		_TMR5_Initialize
 18100 ;;		_main
 18101 ;; This function uses a non-reentrant model
 18102 ;;
 18103                           
 18104                           	psect	text92
 18105  014E8E                     __ptext92:
 18106                           	callstack 0
 18107  014E8E                     _TMR5_SetInterruptHandler:
 18108                           	callstack 23
 18109                           
 18110                           ; BSR set to: 0
 18111                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 18112                           
 18113                           ; BSR set to: 0
 18114                           ;incstack = 0
 18115  014E8E  C060  F138         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 18116  014E92  C061  F139         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 18117  014E96  C062  F13A         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 18118                           
 18119                           ; BSR set to: 0
 18120  014E9A  0012               	return		;funcret
 18121  014E9C                     __end_of_TMR5_SetInterruptHandler:
 18122                           	callstack 0
 18123                           
 18124 ;; *************** function _TMR2_Initialize *****************
 18125 ;; Defined at:
 18126 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 18127 ;; Parameters:    Size  Location     Type
 18128 ;;		None
 18129 ;; Auto vars:     Size  Location     Type
 18130 ;;		None
 18131 ;; Return value:  Size  Location     Type
 18132 ;;                  1    wreg      void 
 18133 ;; Registers used:
 18134 ;;		wreg, status,2
 18135 ;; Tracked objects:
 18136 ;;		On entry : 3F/3B
 18137 ;;		On exit  : 3F/39
 18138 ;;		Unchanged: 0/0
 18139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18144 ;;Total ram usage:        0 bytes
 18145 ;; Hardware stack levels used: 1
 18146 ;; Hardware stack levels required when called: 7
 18147 ;; This function calls:
 18148 ;;		Nothing
 18149 ;; This function is called by:
 18150 ;;		_SYSTEM_Initialize
 18151 ;; This function uses a non-reentrant model
 18152 ;;
 18153                           
 18154                           	psect	text93
 18155  014C7C                     __ptext93:
 18156                           	callstack 0
 18157  014C7C                     _TMR2_Initialize:
 18158                           	callstack 22
 18159                           
 18160                           ; BSR set to: 59
 18161                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;incstack = 0
 18165  014C7C  0E01               	movlw	1
 18166  014C7E  6EAE               	movwf	174,c	;volatile
 18167                           
 18168                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 18169  014C80  0E00               	movlw	0
 18170  014C82  6EAD               	movwf	173,c	;volatile
 18171                           
 18172                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 18173  014C84  0E00               	movlw	0
 18174  014C86  6EAF               	movwf	175,c	;volatile
 18175                           
 18176                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x9F;
 18177  014C88  0E9F               	movlw	159
 18178  014C8A  6EAB               	movwf	171,c	;volatile
 18179                           
 18180                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 18181  014C8C  0E00               	movlw	0
 18182  014C8E  6EAA               	movwf	170,c	;volatile
 18183                           
 18184                           ; BSR set to: 59
 18185                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 18186  014C90  0139               	movlb	57	; () banked
 18187  014C92  95A4               	bcf	164,2,b	;volatile
 18188                           
 18189                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 18190  014C94  0E80               	movlw	128
 18191  014C96  6EAC               	movwf	172,c	;volatile
 18192                           
 18193                           ; BSR set to: 57
 18194  014C98  0012               	return		;funcret
 18195  014C9A                     __end_of_TMR2_Initialize:
 18196                           	callstack 0
 18197                           
 18198 ;; *************** function _SystemArbiter_Initialize *****************
 18199 ;; Defined at:
 18200 ;;		line 108 in file "mcc_generated_files/mcc.c"
 18201 ;; Parameters:    Size  Location     Type
 18202 ;;		None
 18203 ;; Auto vars:     Size  Location     Type
 18204 ;;		None
 18205 ;; Return value:  Size  Location     Type
 18206 ;;                  1    wreg      void 
 18207 ;; Registers used:
 18208 ;;		wreg, status,2
 18209 ;; Tracked objects:
 18210 ;;		On entry : 3F/3D
 18211 ;;		On exit  : 3F/39
 18212 ;;		Unchanged: 0/0
 18213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18218 ;;Total ram usage:        0 bytes
 18219 ;; Hardware stack levels used: 1
 18220 ;; Hardware stack levels required when called: 7
 18221 ;; This function calls:
 18222 ;;		Nothing
 18223 ;; This function is called by:
 18224 ;;		_SYSTEM_Initialize
 18225 ;; This function uses a non-reentrant model
 18226 ;;
 18227                           
 18228                           	psect	text94
 18229  014E9C                     __ptext94:
 18230                           	callstack 0
 18231  014E9C                     _SystemArbiter_Initialize:
 18232                           	callstack 22
 18233                           
 18234                           ; BSR set to: 61
 18235                           ;mcc_generated_files/mcc.c: 111:     PRLOCK = 0x55;
 18236                           
 18237                           ; BSR set to: 57
 18238                           ;incstack = 0
 18239  014E9C  0E55               	movlw	85
 18240  014E9E  0139               	movlb	57	; () banked
 18241  014EA0  6FEF               	movwf	239,b	;volatile
 18242                           
 18243                           ;mcc_generated_files/mcc.c: 112:     PRLOCK = 0xAA;
 18244  014EA2  0EAA               	movlw	170
 18245  014EA4  6FEF               	movwf	239,b	;volatile
 18246                           
 18247                           ; BSR set to: 57
 18248                           ;mcc_generated_files/mcc.c: 113:     PRLOCKbits.PRLOCKED = 1;
 18249  014EA6  81EF               	bsf	239,0,b	;volatile
 18250                           
 18251                           ; BSR set to: 57
 18252  014EA8  0012               	return		;funcret
 18253  014EAA                     __end_of_SystemArbiter_Initialize:
 18254                           	callstack 0
 18255                           
 18256 ;; *************** function _SPI1_Initialize *****************
 18257 ;; Defined at:
 18258 ;;		line 64 in file "mcc_generated_files/spi1.c"
 18259 ;; Parameters:    Size  Location     Type
 18260 ;;		None
 18261 ;; Auto vars:     Size  Location     Type
 18262 ;;		None
 18263 ;; Return value:  Size  Location     Type
 18264 ;;                  1    wreg      void 
 18265 ;; Registers used:
 18266 ;;		wreg, status,2
 18267 ;; Tracked objects:
 18268 ;;		On entry : 3F/39
 18269 ;;		On exit  : 3F/3D
 18270 ;;		Unchanged: 0/0
 18271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18276 ;;Total ram usage:        0 bytes
 18277 ;; Hardware stack levels used: 1
 18278 ;; Hardware stack levels required when called: 7
 18279 ;; This function calls:
 18280 ;;		Nothing
 18281 ;; This function is called by:
 18282 ;;		_SYSTEM_Initialize
 18283 ;; This function uses a non-reentrant model
 18284 ;;
 18285                           
 18286                           	psect	text95
 18287  014D08                     __ptext95:
 18288                           	callstack 0
 18289  014D08                     _SPI1_Initialize:
 18290                           	callstack 22
 18291                           
 18292                           ; BSR set to: 57
 18293                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 18294                           
 18295                           ; BSR set to: 57
 18296                           ;incstack = 0
 18297  014D08  0E02               	movlw	2
 18298  014D0A  013D               	movlb	61	; () banked
 18299  014D0C  6F14               	movwf	20,b	;volatile
 18300                           
 18301                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 18302  014D0E  0E40               	movlw	64
 18303  014D10  6F15               	movwf	21,b	;volatile
 18304                           
 18305                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 18306  014D12  0E00               	movlw	0
 18307  014D14  6F16               	movwf	22,b	;volatile
 18308                           
 18309                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 18310  014D16  0E00               	movlw	0
 18311  014D18  6F1C               	movwf	28,b	;volatile
 18312                           
 18313                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x50;
 18314  014D1A  0E50               	movlw	80
 18315  014D1C  6F19               	movwf	25,b	;volatile
 18316                           
 18317                           ; BSR set to: 61
 18318                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 18319  014D1E  96C4               	bcf	196,3,c	;volatile
 18320                           
 18321                           ; BSR set to: 61
 18322  014D20  0012               	return		;funcret
 18323  014D22                     __end_of_SPI1_Initialize:
 18324                           	callstack 0
 18325                           
 18326 ;; *************** function _PWM6_Initialize *****************
 18327 ;; Defined at:
 18328 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 18329 ;; Parameters:    Size  Location     Type
 18330 ;;		None
 18331 ;; Auto vars:     Size  Location     Type
 18332 ;;		None
 18333 ;; Return value:  Size  Location     Type
 18334 ;;                  1    wreg      void 
 18335 ;; Registers used:
 18336 ;;		wreg, status,2
 18337 ;; Tracked objects:
 18338 ;;		On entry : 3F/39
 18339 ;;		On exit  : 3F/3F
 18340 ;;		Unchanged: 0/0
 18341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18346 ;;Total ram usage:        0 bytes
 18347 ;; Hardware stack levels used: 1
 18348 ;; Hardware stack levels required when called: 7
 18349 ;; This function calls:
 18350 ;;		Nothing
 18351 ;; This function is called by:
 18352 ;;		_SYSTEM_Initialize
 18353 ;; This function uses a non-reentrant model
 18354 ;;
 18355                           
 18356                           	psect	text96
 18357  014D3A                     __ptext96:
 18358                           	callstack 0
 18359  014D3A                     _PWM6_Initialize:
 18360                           	callstack 22
 18361                           
 18362                           ; BSR set to: 57
 18363                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 18364                           
 18365                           ; BSR set to: 61
 18366                           ;incstack = 0
 18367  014D3A  0E80               	movlw	128
 18368  014D3C  6E6A               	movwf	106,c	;volatile
 18369                           
 18370                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x4F;
 18371  014D3E  0E4F               	movlw	79
 18372  014D40  6E69               	movwf	105,c	;volatile
 18373                           
 18374                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 18375  014D42  0EC0               	movlw	192
 18376  014D44  6E68               	movwf	104,c	;volatile
 18377                           
 18378                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 18379  014D46  013F               	movlb	63	; () banked
 18380  014D48  515F               	movf	95,w,b	;volatile
 18381  014D4A  0BF3               	andlw	-13
 18382  014D4C  0904               	iorlw	4
 18383  014D4E  6F5F               	movwf	95,b	;volatile
 18384                           
 18385                           ; BSR set to: 63
 18386  014D50  0012               	return		;funcret
 18387  014D52                     __end_of_PWM6_Initialize:
 18388                           	callstack 0
 18389                           
 18390 ;; *************** function _PWM5_Initialize *****************
 18391 ;; Defined at:
 18392 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 18393 ;; Parameters:    Size  Location     Type
 18394 ;;		None
 18395 ;; Auto vars:     Size  Location     Type
 18396 ;;		None
 18397 ;; Return value:  Size  Location     Type
 18398 ;;                  1    wreg      void 
 18399 ;; Registers used:
 18400 ;;		wreg, status,2
 18401 ;; Tracked objects:
 18402 ;;		On entry : 3F/0
 18403 ;;		On exit  : 3F/3F
 18404 ;;		Unchanged: 0/0
 18405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18410 ;;Total ram usage:        0 bytes
 18411 ;; Hardware stack levels used: 1
 18412 ;; Hardware stack levels required when called: 7
 18413 ;; This function calls:
 18414 ;;		Nothing
 18415 ;; This function is called by:
 18416 ;;		_SYSTEM_Initialize
 18417 ;; This function uses a non-reentrant model
 18418 ;;
 18419                           
 18420                           	psect	text97
 18421  014D52                     __ptext97:
 18422                           	callstack 0
 18423  014D52                     _PWM5_Initialize:
 18424                           	callstack 22
 18425                           
 18426                           ; BSR set to: 0
 18427                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 18428                           
 18429                           ; BSR set to: 63
 18430                           ;incstack = 0
 18431  014D52  0E80               	movlw	128
 18432  014D54  6E6E               	movwf	110,c	;volatile
 18433                           
 18434                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x4F;
 18435  014D56  0E4F               	movlw	79
 18436  014D58  6E6D               	movwf	109,c	;volatile
 18437                           
 18438                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 18439  014D5A  0EC0               	movlw	192
 18440  014D5C  6E6C               	movwf	108,c	;volatile
 18441                           
 18442                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 18443  014D5E  013F               	movlb	63	; () banked
 18444  014D60  515F               	movf	95,w,b	;volatile
 18445  014D62  0BFC               	andlw	-4
 18446  014D64  0901               	iorlw	1
 18447  014D66  6F5F               	movwf	95,b	;volatile
 18448                           
 18449                           ; BSR set to: 63
 18450  014D68  0012               	return		;funcret
 18451  014D6A                     __end_of_PWM5_Initialize:
 18452                           	callstack 0
 18453                           
 18454 ;; *************** function _PMD_Initialize *****************
 18455 ;; Defined at:
 18456 ;;		line 87 in file "mcc_generated_files/mcc.c"
 18457 ;; Parameters:    Size  Location     Type
 18458 ;;		None
 18459 ;; Auto vars:     Size  Location     Type
 18460 ;;		None
 18461 ;; Return value:  Size  Location     Type
 18462 ;;                  1    wreg      void 
 18463 ;; Registers used:
 18464 ;;		wreg, status,2
 18465 ;; Tracked objects:
 18466 ;;		On entry : 3F/39
 18467 ;;		On exit  : 3F/39
 18468 ;;		Unchanged: 0/0
 18469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18474 ;;Total ram usage:        0 bytes
 18475 ;; Hardware stack levels used: 1
 18476 ;; Hardware stack levels required when called: 7
 18477 ;; This function calls:
 18478 ;;		Nothing
 18479 ;; This function is called by:
 18480 ;;		_SYSTEM_Initialize
 18481 ;; This function uses a non-reentrant model
 18482 ;;
 18483                           
 18484                           	psect	text98
 18485  014BBC                     __ptext98:
 18486                           	callstack 0
 18487  014BBC                     _PMD_Initialize:
 18488                           	callstack 22
 18489                           
 18490                           ; BSR set to: 57
 18491                           ;mcc_generated_files/mcc.c: 90:     PMD0 = 0x00;
 18492                           
 18493                           ; BSR set to: 63
 18494                           ;incstack = 0
 18495  014BBC  0E00               	movlw	0
 18496  014BBE  6FC0               	movwf	192,b	;volatile
 18497                           
 18498                           ;mcc_generated_files/mcc.c: 92:     PMD1 = 0x00;
 18499  014BC0  0E00               	movlw	0
 18500  014BC2  6FC1               	movwf	193,b	;volatile
 18501                           
 18502                           ;mcc_generated_files/mcc.c: 94:     PMD2 = 0x00;
 18503  014BC4  0E00               	movlw	0
 18504  014BC6  6FC2               	movwf	194,b	;volatile
 18505                           
 18506                           ;mcc_generated_files/mcc.c: 96:     PMD3 = 0x00;
 18507  014BC8  0E00               	movlw	0
 18508  014BCA  6FC3               	movwf	195,b	;volatile
 18509                           
 18510                           ;mcc_generated_files/mcc.c: 98:     PMD4 = 0x00;
 18511  014BCC  0E00               	movlw	0
 18512  014BCE  6FC4               	movwf	196,b	;volatile
 18513                           
 18514                           ;mcc_generated_files/mcc.c: 100:     PMD5 = 0x00;
 18515  014BD0  0E00               	movlw	0
 18516  014BD2  6FC5               	movwf	197,b	;volatile
 18517                           
 18518                           ;mcc_generated_files/mcc.c: 102:     PMD6 = 0x00;
 18519  014BD4  0E00               	movlw	0
 18520  014BD6  6FC6               	movwf	198,b	;volatile
 18521                           
 18522                           ;mcc_generated_files/mcc.c: 104:     PMD7 = 0x00;
 18523  014BD8  0E00               	movlw	0
 18524  014BDA  6FC7               	movwf	199,b	;volatile
 18525                           
 18526                           ; BSR set to: 57
 18527  014BDC  0012               	return		;funcret
 18528  014BDE                     __end_of_PMD_Initialize:
 18529                           	callstack 0
 18530                           
 18531 ;; *************** function _PIN_MANAGER_Initialize *****************
 18532 ;; Defined at:
 18533 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 18534 ;; Parameters:    Size  Location     Type
 18535 ;;		None
 18536 ;; Auto vars:     Size  Location     Type
 18537 ;;		None
 18538 ;; Return value:  Size  Location     Type
 18539 ;;                  1    wreg      void 
 18540 ;; Registers used:
 18541 ;;		wreg, status,2
 18542 ;; Tracked objects:
 18543 ;;		On entry : 3F/39
 18544 ;;		On exit  : 3F/3A
 18545 ;;		Unchanged: 0/0
 18546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18551 ;;Total ram usage:        0 bytes
 18552 ;; Hardware stack levels used: 1
 18553 ;; Hardware stack levels required when called: 7
 18554 ;; This function calls:
 18555 ;;		Nothing
 18556 ;; This function is called by:
 18557 ;;		_SYSTEM_Initialize
 18558 ;; This function uses a non-reentrant model
 18559 ;;
 18560                           
 18561                           	psect	text99
 18562  01358E                     __ptext99:
 18563                           	callstack 0
 18564  01358E                     _PIN_MANAGER_Initialize:
 18565                           	callstack 22
 18566                           
 18567                           ; BSR set to: 57
 18568                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 18569                           
 18570                           ; BSR set to: 57
 18571                           ;incstack = 0
 18572  01358E  0E00               	movlw	0
 18573  013590  6EBE               	movwf	190,c	;volatile
 18574                           
 18575                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 18576  013592  0E11               	movlw	17
 18577  013594  6EBD               	movwf	189,c	;volatile
 18578                           
 18579                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 18580  013596  0E20               	movlw	32
 18581  013598  6EBA               	movwf	186,c	;volatile
 18582                           
 18583                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 18584  01359A  0E00               	movlw	0
 18585  01359C  6EBF               	movwf	191,c	;volatile
 18586                           
 18587                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 18588  01359E  0E00               	movlw	0
 18589  0135A0  6EBB               	movwf	187,c	;volatile
 18590                           
 18591                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x07;
 18592  0135A2  0E07               	movlw	7
 18593  0135A4  6EBC               	movwf	188,c	;volatile
 18594                           
 18595                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 18596  0135A6  0E02               	movlw	2
 18597  0135A8  6EC6               	movwf	198,c	;volatile
 18598                           
 18599                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0B;
 18600  0135AA  0E0B               	movlw	11
 18601  0135AC  6EC7               	movwf	199,c	;volatile
 18602                           
 18603                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 18604  0135AE  0EDF               	movlw	223
 18605  0135B0  6EC2               	movwf	194,c	;volatile
 18606                           
 18607                           ; BSR set to: 57
 18608                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 18609  0135B2  68C3               	setf	195,c	;volatile
 18610                           
 18611                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 18612  0135B4  0E90               	movlw	144
 18613  0135B6  6EC4               	movwf	196,c	;volatile
 18614                           
 18615                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x08;
 18616  0135B8  0E08               	movlw	8
 18617  0135BA  6EC5               	movwf	197,c	;volatile
 18618                           
 18619                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x08;
 18620  0135BC  0E08               	movlw	8
 18621  0135BE  013A               	movlb	58	; () banked
 18622  0135C0  6F70               	movwf	112,b	;volatile
 18623                           
 18624                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x00;
 18625  0135C2  0E00               	movlw	0
 18626  0135C4  6F60               	movwf	96,b	;volatile
 18627                           
 18628                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 18629  0135C6  0EFE               	movlw	254
 18630  0135C8  6F50               	movwf	80,b	;volatile
 18631                           
 18632                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 18633  0135CA  0E02               	movlw	2
 18634  0135CC  6F80               	movwf	128,b	;volatile
 18635                           
 18636                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0B;
 18637  0135CE  0E0B               	movlw	11
 18638  0135D0  6F90               	movwf	144,b	;volatile
 18639                           
 18640                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 18641  0135D2  0E8F               	movlw	143
 18642  0135D4  6F40               	movwf	64,b	;volatile
 18643                           
 18644                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 18645  0135D6  0E00               	movlw	0
 18646  0135D8  6F71               	movwf	113,b	;volatile
 18647                           
 18648                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 18649  0135DA  0E00               	movlw	0
 18650  0135DC  6F91               	movwf	145,b	;volatile
 18651                           
 18652                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 18653  0135DE  0E00               	movlw	0
 18654  0135E0  6F81               	movwf	129,b	;volatile
 18655                           
 18656                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 18657  0135E2  0E01               	movlw	1
 18658  0135E4  6F51               	movwf	81,b	;volatile
 18659                           
 18660                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 18661  0135E6  0E50               	movlw	80
 18662  0135E8  6F41               	movwf	65,b	;volatile
 18663                           
 18664                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 18665  0135EA  0E00               	movlw	0
 18666  0135EC  6F61               	movwf	97,b	;volatile
 18667                           
 18668                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 18669  0135EE  0E00               	movlw	0
 18670  0135F0  6F5A               	movwf	90,b	;volatile
 18671                           
 18672                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 18673  0135F2  0E00               	movlw	0
 18674  0135F4  6F5B               	movwf	91,b	;volatile
 18675                           
 18676                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 18677  0135F6  0E00               	movlw	0
 18678  0135F8  6F6A               	movwf	106,b	;volatile
 18679                           
 18680                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 18681  0135FA  0E00               	movlw	0
 18682  0135FC  6F6B               	movwf	107,b	;volatile
 18683                           
 18684                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 18685  0135FE  0E00               	movlw	0
 18686  013600  6F7A               	movwf	122,b	;volatile
 18687                           
 18688                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 18689  013602  0E00               	movlw	0
 18690  013604  6F7B               	movwf	123,b	;volatile
 18691                           
 18692                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 18693  013606  0E00               	movlw	0
 18694  013608  6F82               	movwf	130,b	;volatile
 18695                           
 18696                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 18697  01360A  0E00               	movlw	0
 18698  01360C  6F92               	movwf	146,b	;volatile
 18699                           
 18700                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 18701  01360E  0E00               	movlw	0
 18702  013610  6F42               	movwf	66,b	;volatile
 18703                           
 18704                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 18705  013612  0E00               	movlw	0
 18706  013614  6F52               	movwf	82,b	;volatile
 18707                           
 18708                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 18709  013616  0E00               	movlw	0
 18710  013618  6F62               	movwf	98,b	;volatile
 18711                           
 18712                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 18713  01361A  0E00               	movlw	0
 18714  01361C  6F72               	movwf	114,b	;volatile
 18715                           
 18716                           ; BSR set to: 58
 18717                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 18718  01361E  6943               	setf	67,b	;volatile
 18719                           
 18720                           ; BSR set to: 58
 18721                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 18722  013620  6953               	setf	83,b	;volatile
 18723                           
 18724                           ; BSR set to: 58
 18725                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 18726  013622  6963               	setf	99,b	;volatile
 18727                           
 18728                           ; BSR set to: 58
 18729                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 18730  013624  6973               	setf	115,b	;volatile
 18731                           
 18732                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 18733  013626  0E07               	movlw	7
 18734  013628  6F83               	movwf	131,b	;volatile
 18735                           
 18736                           ; BSR set to: 58
 18737                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 18738  01362A  6993               	setf	147,b	;volatile
 18739                           
 18740                           ; BSR set to: 58
 18741                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 18742  01362C  6944               	setf	68,b	;volatile
 18743                           
 18744                           ; BSR set to: 58
 18745                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 18746  01362E  6954               	setf	84,b	;volatile
 18747                           
 18748                           ; BSR set to: 58
 18749                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 18750  013630  6964               	setf	100,b	;volatile
 18751                           
 18752                           ; BSR set to: 58
 18753                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 18754  013632  6974               	setf	116,b	;volatile
 18755                           
 18756                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 18757  013634  0E0F               	movlw	15
 18758  013636  6F84               	movwf	132,b	;volatile
 18759                           
 18760                           ; BSR set to: 58
 18761                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 18762  013638  6994               	setf	148,b	;volatile
 18763                           
 18764                           ;mcc_generated_files/pin_manager.c: 144:     RD2PPS = 0x0E;
 18765  01363A  0E0E               	movlw	14
 18766  01363C  6F1A               	movwf	26,b	;volatile
 18767                           
 18768                           ;mcc_generated_files/pin_manager.c: 145:     SPI1SCKPPS = 0x13;
 18769  01363E  0E13               	movlw	19
 18770  013640  6FDE               	movwf	222,b	;volatile
 18771                           
 18772                           ;mcc_generated_files/pin_manager.c: 146:     RC3PPS = 0x1E;
 18773  013642  0E1E               	movlw	30
 18774  013644  6F13               	movwf	19,b	;volatile
 18775                           
 18776                           ;mcc_generated_files/pin_manager.c: 147:     RC5PPS = 0x1F;
 18777  013646  0E1F               	movlw	31
 18778  013648  6F15               	movwf	21,b	;volatile
 18779                           
 18780                           ;mcc_generated_files/pin_manager.c: 148:     RC6PPS = 0x13;
 18781  01364A  0E13               	movlw	19
 18782  01364C  6F16               	movwf	22,b	;volatile
 18783                           
 18784                           ;mcc_generated_files/pin_manager.c: 149:     U1RXPPS = 0x17;
 18785  01364E  0E17               	movlw	23
 18786  013650  6FE5               	movwf	229,b	;volatile
 18787                           
 18788                           ;mcc_generated_files/pin_manager.c: 150:     RF2PPS = 0x0D;
 18789  013652  0E0D               	movlw	13
 18790  013654  6F2A               	movwf	42,b	;volatile
 18791                           
 18792                           ;mcc_generated_files/pin_manager.c: 151:     SPI1SDIPPS = 0x14;
 18793  013656  0E14               	movlw	20
 18794  013658  6FDF               	movwf	223,b	;volatile
 18795                           
 18796                           ; BSR set to: 58
 18797  01365A  0012               	return		;funcret
 18798  01365C                     __end_of_PIN_MANAGER_Initialize:
 18799                           	callstack 0
 18800                           
 18801 ;; *************** function _OSCILLATOR_Initialize *****************
 18802 ;; Defined at:
 18803 ;;		line 69 in file "mcc_generated_files/mcc.c"
 18804 ;; Parameters:    Size  Location     Type
 18805 ;;		None
 18806 ;; Auto vars:     Size  Location     Type
 18807 ;;		None
 18808 ;; Return value:  Size  Location     Type
 18809 ;;                  1    wreg      void 
 18810 ;; Registers used:
 18811 ;;		wreg, status,2
 18812 ;; Tracked objects:
 18813 ;;		On entry : 3F/3A
 18814 ;;		On exit  : 3F/39
 18815 ;;		Unchanged: 0/0
 18816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18821 ;;Total ram usage:        0 bytes
 18822 ;; Hardware stack levels used: 1
 18823 ;; Hardware stack levels required when called: 7
 18824 ;; This function calls:
 18825 ;;		Nothing
 18826 ;; This function is called by:
 18827 ;;		_SYSTEM_Initialize
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831                           	psect	text100
 18832  014CB8                     __ptext100:
 18833                           	callstack 0
 18834  014CB8                     _OSCILLATOR_Initialize:
 18835                           	callstack 22
 18836                           
 18837                           ; BSR set to: 58
 18838                           ;mcc_generated_files/mcc.c: 72:     OSCCON1 = 0x20;
 18839                           
 18840                           ; BSR set to: 58
 18841                           ;incstack = 0
 18842  014CB8  0E20               	movlw	32
 18843  014CBA  0139               	movlb	57	; () banked
 18844  014CBC  6FD9               	movwf	217,b	;volatile
 18845                           
 18846                           ;mcc_generated_files/mcc.c: 74:     OSCCON3 = 0x00;
 18847  014CBE  0E00               	movlw	0
 18848  014CC0  6FDB               	movwf	219,b	;volatile
 18849                           
 18850                           ;mcc_generated_files/mcc.c: 76:     OSCEN = 0x00;
 18851  014CC2  0E00               	movlw	0
 18852  014CC4  6FDD               	movwf	221,b	;volatile
 18853                           
 18854                           ;mcc_generated_files/mcc.c: 78:     OSCFRQ = 0x05;
 18855  014CC6  0E05               	movlw	5
 18856  014CC8  6FDF               	movwf	223,b	;volatile
 18857                           
 18858                           ;mcc_generated_files/mcc.c: 80:     OSCTUNE = 0x00;
 18859  014CCA  0E00               	movlw	0
 18860  014CCC  6FDE               	movwf	222,b	;volatile
 18861  014CCE                     l209:
 18862                           
 18863                           ; BSR set to: 57
 18864                           ;mcc_generated_files/mcc.c: 82:     while(PLLR == 0)
 18865  014CCE  B1DC               	btfsc	220,0,b	;volatile
 18866  014CD0  0012               	return	
 18867  014CD2  D7FD               	goto	l209
 18868  014CD4                     __end_of_OSCILLATOR_Initialize:
 18869                           	callstack 0
 18870                           
 18871 ;; *************** function _INTERRUPT_Initialize *****************
 18872 ;; Defined at:
 18873 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18874 ;; Parameters:    Size  Location     Type
 18875 ;;		None
 18876 ;; Auto vars:     Size  Location     Type
 18877 ;;  state           1   31[COMRAM] _Bool 
 18878 ;; Return value:  Size  Location     Type
 18879 ;;                  1    wreg      void 
 18880 ;; Registers used:
 18881 ;;		wreg, status,2
 18882 ;; Tracked objects:
 18883 ;;		On entry : 3F/1
 18884 ;;		On exit  : 3F/39
 18885 ;;		Unchanged: 0/0
 18886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18891 ;;Total ram usage:        1 bytes
 18892 ;; Hardware stack levels used: 1
 18893 ;; Hardware stack levels required when called: 7
 18894 ;; This function calls:
 18895 ;;		Nothing
 18896 ;; This function is called by:
 18897 ;;		_SYSTEM_Initialize
 18898 ;; This function uses a non-reentrant model
 18899 ;;
 18900                           
 18901                           	psect	text101
 18902  01437A                     __ptext101:
 18903                           	callstack 0
 18904  01437A                     _INTERRUPT_Initialize:
 18905                           	callstack 22
 18906                           
 18907                           ; BSR set to: 1
 18908                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 18909                           
 18910                           ; BSR set to: 57
 18911                           ;incstack = 0
 18912  01437A  8AD2               	bsf	210,5,c	;volatile
 18913                           
 18914                           ; BSR set to: 1
 18915                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 18916  01437C  0E00               	movlw	0
 18917  01437E  BED2               	btfsc	16338,7,c	;volatile
 18918  014380  0E01               	movlw	1
 18919  014382  6E20               	movwf	INTERRUPT_Initialize@state^0,c
 18920                           
 18921                           ; BSR set to: 1
 18922                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 18923  014384  9ED2               	bcf	16338,7,c	;volatile
 18924                           
 18925                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 18926  014386  0E55               	movlw	85
 18927  014388  6ED4               	movwf	212,c	;volatile
 18928                           
 18929                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 18930  01438A  0EAA               	movlw	170
 18931  01438C  6ED4               	movwf	212,c	;volatile
 18932                           
 18933                           ; BSR set to: 1
 18934                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 18935  01438E  90D4               	bcf	212,0,c	;volatile
 18936                           
 18937                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 18938  014390  0E00               	movlw	0
 18939  014392  6ED7               	movwf	215,c	;volatile
 18940                           
 18941                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 18942  014394  0E00               	movlw	0
 18943  014396  6ED6               	movwf	214,c	;volatile
 18944                           
 18945                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 18946  014398  0E08               	movlw	8
 18947  01439A  6ED5               	movwf	213,c	;volatile
 18948                           
 18949                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 18950  01439C  0E55               	movlw	85
 18951  01439E  6ED4               	movwf	212,c	;volatile
 18952                           
 18953                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 18954  0143A0  0EAA               	movlw	170
 18955  0143A2  6ED4               	movwf	212,c	;volatile
 18956                           
 18957                           ; BSR set to: 1
 18958                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 18959  0143A4  80D4               	bsf	212,0,c	;volatile
 18960                           
 18961                           ; BSR set to: 1
 18962                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 18963  0143A6  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 18964  0143A8  D002               	bra	u12965
 18965  0143AA  9ED2               	bcf	16338,7,c	;volatile
 18966  0143AC  D001               	bra	u12966
 18967  0143AE                     u12965:
 18968  0143AE  8ED2               	bsf	16338,7,c	;volatile
 18969  0143B0                     u12966:
 18970                           
 18971                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1SCNTIP = 1;
 18972  0143B0  0139               	movlb	57	; () banked
 18973  0143B2  8182               	bsf	130,0,b	;volatile
 18974                           
 18975                           ; BSR set to: 57
 18976                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1IP = 1;
 18977  0143B4  8D83               	bsf	131,6,b	;volatile
 18978                           
 18979                           ; BSR set to: 57
 18980                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 0;
 18981  0143B6  9983               	bcf	131,4,b	;volatile
 18982                           
 18983                           ; BSR set to: 57
 18984                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1EIP = 1;
 18985  0143B8  8B83               	bsf	131,5,b	;volatile
 18986                           
 18987                           ; BSR set to: 57
 18988                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR3bits.U1RXIP = 0;
 18989  0143BA  9783               	bcf	131,3,b	;volatile
 18990                           
 18991                           ; BSR set to: 57
 18992                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR9bits.TMR6IP = 1;
 18993  0143BC  8189               	bsf	137,0,b	;volatile
 18994                           
 18995                           ; BSR set to: 57
 18996                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5IP = 1;
 18997  0143BE  8D88               	bsf	136,6,b	;volatile
 18998                           
 18999                           ; BSR set to: 57
 19000                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.ADIP = 1;
 19001  0143C0  8581               	bsf	129,2,b	;volatile
 19002                           
 19003                           ; BSR set to: 57
 19004  0143C2  0012               	return		;funcret
 19005  0143C4                     __end_of_INTERRUPT_Initialize:
 19006                           	callstack 0
 19007                           
 19008 ;; *************** function _DMA1_Initialize *****************
 19009 ;; Defined at:
 19010 ;;		line 60 in file "mcc_generated_files/dma1.c"
 19011 ;; Parameters:    Size  Location     Type
 19012 ;;		None
 19013 ;; Auto vars:     Size  Location     Type
 19014 ;;		None
 19015 ;; Return value:  Size  Location     Type
 19016 ;;                  1    wreg      void 
 19017 ;; Registers used:
 19018 ;;		wreg, status,2, status,0, cstack
 19019 ;; Tracked objects:
 19020 ;;		On entry : 3F/0
 19021 ;;		On exit  : 3F/3B
 19022 ;;		Unchanged: 0/0
 19023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19028 ;;Total ram usage:        0 bytes
 19029 ;; Hardware stack levels used: 1
 19030 ;; Hardware stack levels required when called: 8
 19031 ;; This function calls:
 19032 ;;		_DMA1_SetSCNTIInterruptHandler
 19033 ;; This function is called by:
 19034 ;;		_SYSTEM_Initialize
 19035 ;; This function uses a non-reentrant model
 19036 ;;
 19037                           
 19038                           	psect	text102
 19039  013F8A                     __ptext102:
 19040                           	callstack 0
 19041  013F8A                     _DMA1_Initialize:
 19042                           	callstack 21
 19043                           
 19044                           ; BSR set to: 0
 19045                           ;mcc_generated_files/dma1.c: 63:     DMA1SSA = &SrcVarName0;
 19046                           
 19047                           ; BSR set to: 57
 19048                           ;incstack = 0
 19049  013F8A  0E93               	movlw	low _SrcVarName0
 19050  013F8C  013B               	movlb	59	; () banked
 19051  013F8E  6FF9               	movwf	249,b	;volatile
 19052  013F90  0E01               	movlw	high _SrcVarName0
 19053  013F92  6FFA               	movwf	250,b	;volatile
 19054  013F94  0E00               	movlw	low (_SrcVarName0 shr (0+16))
 19055  013F96  6FFB               	movwf	251,b	;volatile
 19056                           
 19057                           ;mcc_generated_files/dma1.c: 65:     DMA1DSA = &SPI1TXB;
 19058  013F98  0E3D               	movlw	61
 19059  013F9A  6FF1               	movwf	241,b	;volatile
 19060  013F9C  0E11               	movlw	17
 19061  013F9E  6FF0               	movwf	240,b	;volatile
 19062                           
 19063                           ;mcc_generated_files/dma1.c: 67:     DMA1CON1 = 0x03;
 19064  013FA0  0E03               	movlw	3
 19065  013FA2  6FFD               	movwf	253,b	;volatile
 19066                           
 19067                           ;mcc_generated_files/dma1.c: 69:     DMA1SSZ = 1;
 19068  013FA4  0E00               	movlw	0
 19069  013FA6  6FF8               	movwf	248,b	;volatile
 19070  013FA8  0E01               	movlw	1
 19071  013FAA  6FF7               	movwf	247,b	;volatile
 19072                           
 19073                           ;mcc_generated_files/dma1.c: 71:     DMA1DSZ = 1;
 19074  013FAC  0E00               	movlw	0
 19075  013FAE  6FEF               	movwf	239,b	;volatile
 19076  013FB0  0E01               	movlw	1
 19077  013FB2  6FEE               	movwf	238,b	;volatile
 19078                           
 19079                           ;mcc_generated_files/dma1.c: 73:     DMA1SIRQ = 0x15;
 19080  013FB4  0E15               	movlw	21
 19081  013FB6  6FFF               	movwf	255,b	;volatile
 19082                           
 19083                           ;mcc_generated_files/dma1.c: 75:     DMA1AIRQ = 0x00;
 19084  013FB8  0E00               	movlw	0
 19085  013FBA  6FFE               	movwf	254,b	;volatile
 19086                           
 19087                           ; BSR set to: 59
 19088                           ;mcc_generated_files/dma1.c: 78:     PIR2bits.DMA1DCNTIF = 0;
 19089  013FBC  0139               	movlb	57	; () banked
 19090  013FBE  93A2               	bcf	162,1,b	;volatile
 19091                           
 19092                           ; BSR set to: 57
 19093                           ;mcc_generated_files/dma1.c: 80:     PIR2bits.DMA1SCNTIF = 0;
 19094  013FC0  91A2               	bcf	162,0,b	;volatile
 19095                           
 19096                           ; BSR set to: 57
 19097                           ;mcc_generated_files/dma1.c: 82:     PIR2bits.DMA1AIF = 0;
 19098  013FC2  97A2               	bcf	162,3,b	;volatile
 19099                           
 19100                           ; BSR set to: 57
 19101                           ;mcc_generated_files/dma1.c: 84:     PIR2bits.DMA1ORIF =0;
 19102  013FC4  95A2               	bcf	162,2,b	;volatile
 19103                           
 19104                           ; BSR set to: 57
 19105                           ;mcc_generated_files/dma1.c: 86:     PIE2bits.DMA1DCNTIE = 0;
 19106  013FC6  9392               	bcf	146,1,b	;volatile
 19107                           
 19108                           ; BSR set to: 57
 19109                           ;mcc_generated_files/dma1.c: 87:     PIE2bits.DMA1SCNTIE = 1;
 19110  013FC8  8192               	bsf	146,0,b	;volatile
 19111                           
 19112                           ; BSR set to: 57
 19113                           ;mcc_generated_files/dma1.c: 88:  DMA1_SetSCNTIInterruptHandler(DMA1_DefaultInterruptHan
      +                          dler);
 19114  013FCA  0E30               	movlw	low _DMA1_DefaultInterruptHandler
 19115  013FCC  0100               	movlb	0	; () banked
 19116  013FCE  6F60               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler& (0+255),b
 19117  013FD0  0E4F               	movlw	high _DMA1_DefaultInterruptHandler
 19118  013FD2  6F61               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)& (0+255),b
 19119  013FD4  0E01               	movlw	low (_DMA1_DefaultInterruptHandler shr (0+16))
 19120  013FD6  6F62               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)& (0+255),b
 19121  013FD8  EC55  F0A7         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;mcc_generated_files/dma1.c: 89:     PIE2bits.DMA1AIE = 0;
 19125  013FDC  0139               	movlb	57	; () banked
 19126  013FDE  9792               	bcf	146,3,b	;volatile
 19127                           
 19128                           ; BSR set to: 57
 19129                           ;mcc_generated_files/dma1.c: 90:     PIE2bits.DMA1ORIE = 0;
 19130  013FE0  9592               	bcf	146,2,b	;volatile
 19131                           
 19132                           ; BSR set to: 57
 19133                           ;mcc_generated_files/dma1.c: 93:     DMA1CON0 = 0xC0;
 19134  013FE2  0EC0               	movlw	192
 19135  013FE4  013B               	movlb	59	; () banked
 19136  013FE6  6FFC               	movwf	252,b	;volatile
 19137                           
 19138                           ; BSR set to: 59
 19139  013FE8  0012               	return		;funcret
 19140  013FEA                     __end_of_DMA1_Initialize:
 19141                           	callstack 0
 19142                           
 19143 ;; *************** function _DMA1_SetSCNTIInterruptHandler *****************
 19144 ;; Defined at:
 19145 ;;		line 179 in file "mcc_generated_files/dma1.c"
 19146 ;; Parameters:    Size  Location     Type
 19147 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 19148 ;;		 -> source_dma_done(1), DMA1_DefaultInterruptHandler(1), 
 19149 ;; Auto vars:     Size  Location     Type
 19150 ;;		None
 19151 ;; Return value:  Size  Location     Type
 19152 ;;                  1    wreg      void 
 19153 ;; Registers used:
 19154 ;;		wreg, status,2, status,0
 19155 ;; Tracked objects:
 19156 ;;		On entry : 3F/0
 19157 ;;		On exit  : 3F/0
 19158 ;;		Unchanged: 3F/0
 19159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19160 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19163 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19164 ;;Total ram usage:        3 bytes
 19165 ;; Hardware stack levels used: 1
 19166 ;; Hardware stack levels required when called: 7
 19167 ;; This function calls:
 19168 ;;		Nothing
 19169 ;; This function is called by:
 19170 ;;		_DMA1_Initialize
 19171 ;;		_main
 19172 ;; This function uses a non-reentrant model
 19173 ;;
 19174                           
 19175                           	psect	text103
 19176  014EAA                     __ptext103:
 19177                           	callstack 0
 19178  014EAA                     _DMA1_SetSCNTIInterruptHandler:
 19179                           	callstack 21
 19180                           
 19181                           ; BSR set to: 0
 19182                           ;mcc_generated_files/dma1.c: 179: void DMA1_SetSCNTIInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/dma1.c: 180: {;mcc_generated_files/dma1.c: 181:   DMA1
      +                          _SCNTI_InterruptHandler = InterruptHandler;
 19183                           
 19184                           ; BSR set to: 59
 19185                           ;incstack = 0
 19186  014EAA  C060  F135         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler,_DMA1_SCNTI_InterruptHandler
 19187  014EAE  C061  F136         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+1,_DMA1_SCNTI_InterruptHandler+1
 19188  014EB2  C062  F137         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+2,_DMA1_SCNTI_InterruptHandler+2
 19189                           
 19190                           ; BSR set to: 0
 19191  014EB6  0012               	return		;funcret
 19192  014EB8                     __end_of_DMA1_SetSCNTIInterruptHandler:
 19193                           	callstack 0
 19194                           
 19195 ;; *************** function _DAC1_Initialize *****************
 19196 ;; Defined at:
 19197 ;;		line 58 in file "mcc_generated_files/dac1.c"
 19198 ;; Parameters:    Size  Location     Type
 19199 ;;		None
 19200 ;; Auto vars:     Size  Location     Type
 19201 ;;		None
 19202 ;; Return value:  Size  Location     Type
 19203 ;;                  1    wreg      void 
 19204 ;; Registers used:
 19205 ;;		wreg, status,2
 19206 ;; Tracked objects:
 19207 ;;		On entry : 3F/0
 19208 ;;		On exit  : 3F/3E
 19209 ;;		Unchanged: 0/0
 19210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19215 ;;Total ram usage:        0 bytes
 19216 ;; Hardware stack levels used: 1
 19217 ;; Hardware stack levels required when called: 7
 19218 ;; This function calls:
 19219 ;;		Nothing
 19220 ;; This function is called by:
 19221 ;;		_SYSTEM_Initialize
 19222 ;; This function uses a non-reentrant model
 19223 ;;
 19224                           
 19225                           	psect	text104
 19226  014ED2                     __ptext104:
 19227                           	callstack 0
 19228  014ED2                     _DAC1_Initialize:
 19229                           	callstack 22
 19230                           
 19231                           ; BSR set to: 0
 19232                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 19233                           
 19234                           ; BSR set to: 0
 19235                           ;incstack = 0
 19236  014ED2  0EA4               	movlw	164
 19237  014ED4  013E               	movlb	62	; () banked
 19238  014ED6  6F9E               	movwf	158,b	;volatile
 19239                           
 19240                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 19241  014ED8  0E1F               	movlw	31
 19242  014EDA  6F9C               	movwf	156,b	;volatile
 19243                           
 19244                           ; BSR set to: 62
 19245  014EDC  0012               	return		;funcret
 19246  014EDE                     __end_of_DAC1_Initialize:
 19247                           	callstack 0
 19248                           
 19249 ;; *************** function _ADCC_Initialize *****************
 19250 ;; Defined at:
 19251 ;;		line 64 in file "mcc_generated_files/adcc.c"
 19252 ;; Parameters:    Size  Location     Type
 19253 ;;		None
 19254 ;; Auto vars:     Size  Location     Type
 19255 ;;		None
 19256 ;; Return value:  Size  Location     Type
 19257 ;;                  1    wreg      void 
 19258 ;; Registers used:
 19259 ;;		wreg, status,2, status,0, cstack
 19260 ;; Tracked objects:
 19261 ;;		On entry : 3F/39
 19262 ;;		On exit  : 3F/0
 19263 ;;		Unchanged: 0/0
 19264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19269 ;;Total ram usage:        0 bytes
 19270 ;; Hardware stack levels used: 1
 19271 ;; Hardware stack levels required when called: 8
 19272 ;; This function calls:
 19273 ;;		_ADCC_SetADIInterruptHandler
 19274 ;; This function is called by:
 19275 ;;		_SYSTEM_Initialize
 19276 ;; This function uses a non-reentrant model
 19277 ;;
 19278                           
 19279                           	psect	text105
 19280  013D08                     __ptext105:
 19281                           	callstack 0
 19282  013D08                     _ADCC_Initialize:
 19283                           	callstack 21
 19284                           
 19285                           ; BSR set to: 57
 19286                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 19287                           
 19288                           ; BSR set to: 62
 19289                           ;incstack = 0
 19290  013D08  0E00               	movlw	0
 19291  013D0A  013E               	movlb	62	; () banked
 19292  013D0C  6FDE               	movwf	222,b	;volatile
 19293                           
 19294                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 19295  013D0E  0E00               	movlw	0
 19296  013D10  6FDF               	movwf	223,b	;volatile
 19297                           
 19298                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 19299  013D12  0E00               	movlw	0
 19300  013D14  6FE0               	movwf	224,b	;volatile
 19301                           
 19302                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 19303  013D16  0E00               	movlw	0
 19304  013D18  6FE1               	movwf	225,b	;volatile
 19305                           
 19306                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 19307  013D1A  0E00               	movlw	0
 19308  013D1C  6FE4               	movwf	228,b	;volatile
 19309                           
 19310                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 19311  013D1E  0E00               	movlw	0
 19312  013D20  6FE5               	movwf	229,b	;volatile
 19313                           
 19314                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 19315  013D22  0E00               	movlw	0
 19316  013D24  6FEA               	movwf	234,b	;volatile
 19317                           
 19318                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 19319  013D26  0E00               	movlw	0
 19320  013D28  6FEC               	movwf	236,b	;volatile
 19321                           
 19322                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 19323  013D2A  0E00               	movlw	0
 19324  013D2C  6FF1               	movwf	241,b	;volatile
 19325                           
 19326                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 19327  013D2E  0E10               	movlw	16
 19328  013D30  6FF3               	movwf	243,b	;volatile
 19329                           
 19330                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 19331  013D32  0E00               	movlw	0
 19332  013D34  6FF4               	movwf	244,b	;volatile
 19333                           
 19334                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 19335  013D36  0E00               	movlw	0
 19336  013D38  6FF5               	movwf	245,b	;volatile
 19337                           
 19338                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 19339  013D3A  0E00               	movlw	0
 19340  013D3C  6FF6               	movwf	246,b	;volatile
 19341                           
 19342                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 19343  013D3E  0E00               	movlw	0
 19344  013D40  6FF7               	movwf	247,b	;volatile
 19345                           
 19346                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 19347  013D42  0E00               	movlw	0
 19348  013D44  6FF9               	movwf	249,b	;volatile
 19349                           
 19350                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 19351  013D46  0E00               	movlw	0
 19352  013D48  6FFA               	movwf	250,b	;volatile
 19353                           
 19354                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x20;
 19355  013D4A  0E20               	movlw	32
 19356  013D4C  6FFB               	movwf	251,b	;volatile
 19357                           
 19358                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 19359  013D4E  0E00               	movlw	0
 19360  013D50  6FFC               	movwf	252,b	;volatile
 19361                           
 19362                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 19363  013D52  0E02               	movlw	2
 19364  013D54  6FFD               	movwf	253,b	;volatile
 19365                           
 19366                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 19367  013D56  0E07               	movlw	7
 19368  013D58  6FFE               	movwf	254,b	;volatile
 19369                           
 19370                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x1F;
 19371  013D5A  0E1F               	movlw	31
 19372  013D5C  6FFF               	movwf	255,b	;volatile
 19373                           
 19374                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x84;
 19375  013D5E  0E84               	movlw	132
 19376  013D60  6FF8               	movwf	248,b	;volatile
 19377                           
 19378                           ; BSR set to: 62
 19379                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 19380  013D62  0139               	movlb	57	; () banked
 19381  013D64  95A1               	bcf	161,2,b	;volatile
 19382                           
 19383                           ; BSR set to: 57
 19384                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 19385  013D66  8591               	bsf	145,2,b	;volatile
 19386                           
 19387                           ; BSR set to: 57
 19388                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 19389  013D68  0E26               	movlw	low _ADCC_DefaultInterruptHandler
 19390  013D6A  0100               	movlb	0	; () banked
 19391  013D6C  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 19392  013D6E  0E4F               	movlw	high _ADCC_DefaultInterruptHandler
 19393  013D70  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 19394  013D72  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 19395  013D74  6F62               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 19396  013D76  EC5C  F0A7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 19397                           
 19398                           ; BSR set to: 0
 19399  013D7A  0012               	return		;funcret
 19400  013D7C                     __end_of_ADCC_Initialize:
 19401                           	callstack 0
 19402                           
 19403 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 19404 ;; Defined at:
 19405 ;;		line 316 in file "mcc_generated_files/adcc.c"
 19406 ;; Parameters:    Size  Location     Type
 19407 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 19408 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 19409 ;; Auto vars:     Size  Location     Type
 19410 ;;		None
 19411 ;; Return value:  Size  Location     Type
 19412 ;;                  1    wreg      void 
 19413 ;; Registers used:
 19414 ;;		wreg, status,2, status,0
 19415 ;; Tracked objects:
 19416 ;;		On entry : 3F/0
 19417 ;;		On exit  : 3F/0
 19418 ;;		Unchanged: 3F/0
 19419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19420 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19423 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19424 ;;Total ram usage:        3 bytes
 19425 ;; Hardware stack levels used: 1
 19426 ;; Hardware stack levels required when called: 7
 19427 ;; This function calls:
 19428 ;;		Nothing
 19429 ;; This function is called by:
 19430 ;;		_ADCC_Initialize
 19431 ;;		_main
 19432 ;; This function uses a non-reentrant model
 19433 ;;
 19434                           
 19435                           	psect	text106
 19436  014EB8                     __ptext106:
 19437                           	callstack 0
 19438  014EB8                     _ADCC_SetADIInterruptHandler:
 19439                           	callstack 21
 19440                           
 19441                           ; BSR set to: 0
 19442                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 19443                           
 19444                           ; BSR set to: 0
 19445                           ;incstack = 0
 19446  014EB8  C060  F13E         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 19447  014EBC  C061  F13F         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 19448  014EC0  C062  F140         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 19449                           
 19450                           ; BSR set to: 0
 19451  014EC4  0012               	return		;funcret
 19452  014EC6                     __end_of_ADCC_SetADIInterruptHandler:
 19453                           	callstack 0
 19454                           
 19455 ;; *************** function _PWM6_LoadDutyValue *****************
 19456 ;; Defined at:
 19457 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 19458 ;; Parameters:    Size  Location     Type
 19459 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 19460 ;; Auto vars:     Size  Location     Type
 19461 ;;		None
 19462 ;; Return value:  Size  Location     Type
 19463 ;;                  1    wreg      void 
 19464 ;; Registers used:
 19465 ;;		wreg, status,2, status,0
 19466 ;; Tracked objects:
 19467 ;;		On entry : 3F/0
 19468 ;;		On exit  : 3F/0
 19469 ;;		Unchanged: 0/0
 19470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19474 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19475 ;;Total ram usage:        4 bytes
 19476 ;; Hardware stack levels used: 1
 19477 ;; Hardware stack levels required when called: 7
 19478 ;; This function calls:
 19479 ;;		Nothing
 19480 ;; This function is called by:
 19481 ;;		_main
 19482 ;; This function uses a non-reentrant model
 19483 ;;
 19484                           
 19485                           	psect	text107
 19486  01492A                     __ptext107:
 19487                           	callstack 0
 19488  01492A                     _PWM6_LoadDutyValue:
 19489                           	callstack 23
 19490                           
 19491                           ; BSR set to: 0
 19492                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19493                           
 19494                           ; BSR set to: 0
 19495                           ;incstack = 0
 19496  01492A  C060  F062         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 19497  01492E  C061  F063         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 19498  014932  90D8               	bcf	status,0,c
 19499  014934  3363               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 19500  014936  3362               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
 19501  014938  90D8               	bcf	status,0,c
 19502  01493A  3363               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 19503  01493C  3362               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
 19504  01493E  5162               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
 19505  014940  6E69               	movwf	105,c	;volatile
 19506                           
 19507                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 19508  014942  C060  F062         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 19509  014946  0E03               	movlw	3
 19510  014948  1762               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
 19511  01494A  0E06               	movlw	6
 19512  01494C  6F63               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
 19513  01494E                     u13095:
 19514  01494E  90D8               	bcf	status,0,c
 19515  014950  3762               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
 19516  014952  2F63               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 19517  014954  D7FC               	goto	u13095
 19518  014956  5162               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
 19519  014958  6E68               	movwf	104,c	;volatile
 19520                           
 19521                           ; BSR set to: 0
 19522  01495A  0012               	return		;funcret
 19523  01495C                     __end_of_PWM6_LoadDutyValue:
 19524                           	callstack 0
 19525                           
 19526 ;; *************** function _PWM5_LoadDutyValue *****************
 19527 ;; Defined at:
 19528 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 19529 ;; Parameters:    Size  Location     Type
 19530 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 19531 ;; Auto vars:     Size  Location     Type
 19532 ;;		None
 19533 ;; Return value:  Size  Location     Type
 19534 ;;                  1    wreg      void 
 19535 ;; Registers used:
 19536 ;;		wreg, status,2, status,0
 19537 ;; Tracked objects:
 19538 ;;		On entry : 3F/0
 19539 ;;		On exit  : 3F/0
 19540 ;;		Unchanged: 0/0
 19541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19544 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19545 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19546 ;;Total ram usage:        4 bytes
 19547 ;; Hardware stack levels used: 1
 19548 ;; Hardware stack levels required when called: 7
 19549 ;; This function calls:
 19550 ;;		Nothing
 19551 ;; This function is called by:
 19552 ;;		_main
 19553 ;; This function uses a non-reentrant model
 19554 ;;
 19555                           
 19556                           	psect	text108
 19557  01495C                     __ptext108:
 19558                           	callstack 0
 19559  01495C                     _PWM5_LoadDutyValue:
 19560                           	callstack 23
 19561                           
 19562                           ; BSR set to: 0
 19563                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19564                           
 19565                           ; BSR set to: 0
 19566                           ;incstack = 0
 19567  01495C  C060  F062         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 19568  014960  C061  F063         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 19569  014964  90D8               	bcf	status,0,c
 19570  014966  3363               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 19571  014968  3362               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
 19572  01496A  90D8               	bcf	status,0,c
 19573  01496C  3363               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 19574  01496E  3362               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
 19575  014970  5162               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
 19576  014972  6E6D               	movwf	109,c	;volatile
 19577                           
 19578                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 19579  014974  C060  F062         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 19580  014978  0E03               	movlw	3
 19581  01497A  1762               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
 19582  01497C  0E06               	movlw	6
 19583  01497E  6F63               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
 19584  014980                     u13085:
 19585  014980  90D8               	bcf	status,0,c
 19586  014982  3762               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
 19587  014984  2F63               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 19588  014986  D7FC               	goto	u13085
 19589  014988  5162               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
 19590  01498A  6E6C               	movwf	108,c	;volatile
 19591                           
 19592                           ; BSR set to: 0
 19593  01498C  0012               	return		;funcret
 19594  01498E                     __end_of_PWM5_LoadDutyValue:
 19595                           	callstack 0
 19596                           
 19597 ;; *************** function _DATAEE_ReadByte *****************
 19598 ;; Defined at:
 19599 ;;		line 187 in file "mcc_generated_files/memory.c"
 19600 ;; Parameters:    Size  Location     Type
 19601 ;;  bAdd            2    0[BANK0 ] unsigned short 
 19602 ;; Auto vars:     Size  Location     Type
 19603 ;;		None
 19604 ;; Return value:  Size  Location     Type
 19605 ;;                  1    wreg      unsigned char 
 19606 ;; Registers used:
 19607 ;;		wreg, status,2, status,0
 19608 ;; Tracked objects:
 19609 ;;		On entry : 3F/0
 19610 ;;		On exit  : 3F/39
 19611 ;;		Unchanged: 0/0
 19612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19617 ;;Total ram usage:        2 bytes
 19618 ;; Hardware stack levels used: 1
 19619 ;; Hardware stack levels required when called: 7
 19620 ;; This function calls:
 19621 ;;		Nothing
 19622 ;; This function is called by:
 19623 ;;		_main
 19624 ;; This function uses a non-reentrant model
 19625 ;;
 19626                           
 19627                           	psect	text109
 19628  014C9A                     __ptext109:
 19629                           	callstack 0
 19630  014C9A                     _DATAEE_ReadByte:
 19631                           	callstack 23
 19632                           
 19633                           ; BSR set to: 0
 19634                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 19635                           
 19636                           ; BSR set to: 0
 19637                           ;incstack = 0
 19638  014C9A  5161               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 19639  014C9C  0B03               	andlw	3
 19640  014C9E  0139               	movlb	57	; () banked
 19641  014CA0  6FE1               	movwf	225,b	;volatile
 19642                           
 19643                           ; BSR set to: 57
 19644                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 19645  014CA2  0060  F183  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 19646                           
 19647                           ; BSR set to: 57
 19648                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
 19649  014CA8  0E3F               	movlw	-193
 19650  014CAA  17E5               	andwf	229,f,b	;volsfr
 19651                           
 19652                           ; BSR set to: 57
 19653                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
 19654  014CAC  81E5               	bsf	229,0,b	;volsfr
 19655                           
 19656                           ; BSR set to: 57
 19657                           ;mcc_generated_files/memory.c: 193:     __nop();
 19658  014CAE  F000               	nop	
 19659                           
 19660                           ;mcc_generated_files/memory.c: 194:     __nop();
 19661  014CB0  F000               	nop	
 19662                           
 19663                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
 19664  014CB2  0139               	movlb	57	; () banked
 19665  014CB4  51E3               	movf	227,w,b	;volatile
 19666                           
 19667                           ; BSR set to: 57
 19668  014CB6  0012               	return		;funcret
 19669  014CB8                     __end_of_DATAEE_ReadByte:
 19670                           	callstack 0
 19671                           
 19672 ;; *************** function _DAC1_SetOutput *****************
 19673 ;; Defined at:
 19674 ;;		line 66 in file "mcc_generated_files/dac1.c"
 19675 ;; Parameters:    Size  Location     Type
 19676 ;;  inputData       1    wreg     unsigned char 
 19677 ;; Auto vars:     Size  Location     Type
 19678 ;;  inputData       1   31[COMRAM] unsigned char 
 19679 ;; Return value:  Size  Location     Type
 19680 ;;                  1    wreg      void 
 19681 ;; Registers used:
 19682 ;;		wreg
 19683 ;; Tracked objects:
 19684 ;;		On entry : 3F/0
 19685 ;;		On exit  : 0/0
 19686 ;;		Unchanged: 0/0
 19687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19692 ;;Total ram usage:        1 bytes
 19693 ;; Hardware stack levels used: 1
 19694 ;; Hardware stack levels required when called: 7
 19695 ;; This function calls:
 19696 ;;		Nothing
 19697 ;; This function is called by:
 19698 ;;		_main
 19699 ;; This function uses a non-reentrant model
 19700 ;;
 19701                           
 19702                           	psect	text110
 19703  014EEA                     __ptext110:
 19704                           	callstack 0
 19705  014EEA                     _DAC1_SetOutput:
 19706                           	callstack 23
 19707                           
 19708                           ; BSR set to: 57
 19709                           ;incstack = 0
 19710                           ;DAC1_SetOutput@inputData stored from wreg
 19711  014EEA  6E20               	movwf	DAC1_SetOutput@inputData^0,c
 19712                           
 19713                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 19714  014EEC  0060  F083  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 19715  014EF2  0012               	return		;funcret
 19716  014EF4                     __end_of_DAC1_SetOutput:
 19717                           	callstack 0
 19718                           
 19719 ;; *************** function _DAC1_GetOutput *****************
 19720 ;; Defined at:
 19721 ;;		line 71 in file "mcc_generated_files/dac1.c"
 19722 ;; Parameters:    Size  Location     Type
 19723 ;;		None
 19724 ;; Auto vars:     Size  Location     Type
 19725 ;;		None
 19726 ;; Return value:  Size  Location     Type
 19727 ;;                  1    wreg      unsigned char 
 19728 ;; Registers used:
 19729 ;;		wreg, status,2
 19730 ;; Tracked objects:
 19731 ;;		On entry : 3F/1
 19732 ;;		On exit  : 3F/3E
 19733 ;;		Unchanged: 0/0
 19734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19739 ;;Total ram usage:        0 bytes
 19740 ;; Hardware stack levels used: 1
 19741 ;; Hardware stack levels required when called: 7
 19742 ;; This function calls:
 19743 ;;		Nothing
 19744 ;; This function is called by:
 19745 ;;		_main
 19746 ;; This function uses a non-reentrant model
 19747 ;;
 19748                           
 19749                           	psect	text111
 19750  014F08                     __ptext111:
 19751                           	callstack 0
 19752  014F08                     _DAC1_GetOutput:
 19753                           	callstack 23
 19754                           
 19755                           ; BSR set to: 1
 19756                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 19757                           
 19758                           ;incstack = 0
 19759  014F08  013E               	movlb	62	; () banked
 19760  014F0A  519C               	movf	156,w,b	;volatile
 19761                           
 19762                           ; BSR set to: 62
 19763  014F0C  0012               	return		;funcret
 19764  014F0E                     __end_of_DAC1_GetOutput:
 19765                           	callstack 0
 19766                           
 19767 ;; *************** function _UART1_tx_vect_isr *****************
 19768 ;; Defined at:
 19769 ;;		line 243 in file "mcc_generated_files/uart1.c"
 19770 ;; Parameters:    Size  Location     Type
 19771 ;;		None
 19772 ;; Auto vars:     Size  Location     Type
 19773 ;;		None
 19774 ;; Return value:  Size  Location     Type
 19775 ;;                  1    wreg      void 
 19776 ;; Registers used:
 19777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 19778 ;; Tracked objects:
 19779 ;;		On entry : 0/0
 19780 ;;		On exit  : 0/0
 19781 ;;		Unchanged: 0/0
 19782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19785 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19786 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19787 ;;Total ram usage:        3 bytes
 19788 ;; Hardware stack levels used: 1
 19789 ;; Hardware stack levels required when called: 4
 19790 ;; This function calls:
 19791 ;;		Absolute function
 19792 ;;		_UART1_Transmit_ISR
 19793 ;; This function is called by:
 19794 ;;		Interrupt level 1
 19795 ;; This function uses a non-reentrant model
 19796 ;;
 19797                           
 19798                           	psect	text112
 19799  01440C                     __ptext112:
 19800                           	callstack 0
 19801  01440C                     _UART1_tx_vect_isr:
 19802                           	callstack 17
 19803                           
 19804                           ; BSR set to: 62
 19805                           ;incstack = 0
 19806  01440C  006F FF60  F01A    	movff	status,??_UART1_tx_vect_isr
 19807  014412  006F FFE8  F01B    	movff	pclath,??_UART1_tx_vect_isr+1
 19808  014418  006F FFEC  F01C    	movff	pclatu,??_UART1_tx_vect_isr+2
 19809                           
 19810                           ;mcc_generated_files/uart1.c: 245:     if(UART1_TxInterruptHandler)
 19811  01441E  5027               	movf	_UART1_TxInterruptHandler^0,w,c
 19812  014420  1028               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 19813  014422  1029               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 19814  014424  B4D8               	btfsc	status,2,c
 19815  014426  D00C               	goto	i1u678_29
 19816                           
 19817                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _TxInterruptHandler();
 19818  014428  D801               	call	i1u678_28
 19819  01442A  D00A               	goto	i1u678_29
 19820  01442C                     i1u678_28:
 19821  01442C  0005               	push	
 19822  01442E  6EFA               	movwf	pclath,c
 19823  014430  5027               	movf	_UART1_TxInterruptHandler^0,w,c
 19824  014432  6EFD               	movwf	tosl,c
 19825  014434  5028               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 19826  014436  6EFE               	movwf	tosh,c
 19827  014438  5029               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 19828  01443A  6EFF               	movwf	tosu,c
 19829  01443C  50FA               	movf	pclath,w,c
 19830  01443E  0012               	return		;indir
 19831  014440                     i1u678_29:
 19832  014440  0060  F073  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 19833  014446  0060  F06F  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 19834  01444C  0060  F06B  FFD8   	movff	??_UART1_tx_vect_isr,status
 19835  014452  0011               	retfie		f
 19836  014454                     __end_of_UART1_tx_vect_isr:
 19837                           	callstack 0
 19838                           
 19839 ;; *************** function _UART1_Transmit_ISR *****************
 19840 ;; Defined at:
 19841 ;;		line 275 in file "mcc_generated_files/uart1.c"
 19842 ;; Parameters:    Size  Location     Type
 19843 ;;		None
 19844 ;; Auto vars:     Size  Location     Type
 19845 ;;		None
 19846 ;; Return value:  Size  Location     Type
 19847 ;;                  1    wreg      void 
 19848 ;; Registers used:
 19849 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19850 ;; Tracked objects:
 19851 ;;		On entry : 0/0
 19852 ;;		On exit  : 3B/39
 19853 ;;		Unchanged: 0/0
 19854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19859 ;;Total ram usage:        0 bytes
 19860 ;; Hardware stack levels used: 1
 19861 ;; Hardware stack levels required when called: 3
 19862 ;; This function calls:
 19863 ;;		Nothing
 19864 ;; This function is called by:
 19865 ;;		_UART1_Initialize
 19866 ;;		_UART1_tx_vect_isr
 19867 ;; This function uses a non-reentrant model
 19868 ;;
 19869                           
 19870                           	psect	text113
 19871  014A1C                     __ptext113:
 19872                           	callstack 0
 19873  014A1C                     _UART1_Transmit_ISR:
 19874                           	callstack 17
 19875                           
 19876                           ;mcc_generated_files/uart1.c: 278:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 19877                           
 19878                           ;incstack = 0
 19879  014A1C  0E40               	movlw	64
 19880  014A1E  603C               	cpfslt	_uart1TxBufferRemaining^0,c
 19881  014A20  D011               	goto	i1l1027
 19882                           
 19883                           ;mcc_generated_files/uart1.c: 279:     {;mcc_generated_files/uart1.c: 280:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 19884  014A22  0E40               	movlw	low _uart1TxBuffer
 19885  014A24  243D               	addwf	_uart1TxTail^0,w,c	;volatile
 19886  014A26  6ED9               	movwf	fsr2l,c
 19887  014A28  6ADA               	clrf	fsr2h,c
 19888  014A2A  0E02               	movlw	high _uart1TxBuffer
 19889  014A2C  22DA               	addwfc	fsr2h,f,c
 19890  014A2E  50DF               	movf	indf2,w,c
 19891  014A30  013D               	movlb	61	; () banked
 19892  014A32  6FEA               	movwf	234,b	;volatile
 19893                           
 19894                           ; BSR set to: 61
 19895  014A34  2A3D               	incf	_uart1TxTail^0,f,c	;volatile
 19896                           
 19897                           ; BSR set to: 61
 19898                           ;mcc_generated_files/uart1.c: 281:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 19899  014A36  0E3F               	movlw	63
 19900  014A38  643D               	cpfsgt	_uart1TxTail^0,c
 19901  014A3A  D002               	goto	i1l7641
 19902                           
 19903                           ; BSR set to: 61
 19904                           ;mcc_generated_files/uart1.c: 282:         {;mcc_generated_files/uart1.c: 283:          
      +                             uart1TxTail = 0;
 19905  014A3C  0E00               	movlw	0
 19906  014A3E  6E3D               	movwf	_uart1TxTail^0,c	;volatile
 19907  014A40                     i1l7641:
 19908                           
 19909                           ; BSR set to: 61
 19910                           ;mcc_generated_files/uart1.c: 285:         uart1TxBufferRemaining++;
 19911  014A40  2A3C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 19912                           
 19913                           ;mcc_generated_files/uart1.c: 286:     }
 19914  014A42  0012               	return	
 19915  014A44                     i1l1027:
 19916                           
 19917                           ;mcc_generated_files/uart1.c: 288:     {;mcc_generated_files/uart1.c: 289:         PIE3b
      +                          its.U1TXIE = 0;
 19918  014A44  0139               	movlb	57	; () banked
 19919  014A46  9993               	bcf	147,4,b	;volatile
 19920  014A48  0012               	return		;funcret
 19921  014A4A                     __end_of_UART1_Transmit_ISR:
 19922                           	callstack 0
 19923                           
 19924 ;; *************** function _UART1_rx_vect_isr *****************
 19925 ;; Defined at:
 19926 ;;		line 251 in file "mcc_generated_files/uart1.c"
 19927 ;; Parameters:    Size  Location     Type
 19928 ;;		None
 19929 ;; Auto vars:     Size  Location     Type
 19930 ;;		None
 19931 ;; Return value:  Size  Location     Type
 19932 ;;                  1    wreg      void 
 19933 ;; Registers used:
 19934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 19935 ;; Tracked objects:
 19936 ;;		On entry : 0/0
 19937 ;;		On exit  : 0/0
 19938 ;;		Unchanged: 0/0
 19939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19942 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19944 ;;Total ram usage:        3 bytes
 19945 ;; Hardware stack levels used: 1
 19946 ;; Hardware stack levels required when called: 6
 19947 ;; This function calls:
 19948 ;;		Absolute function
 19949 ;;		_UART1_Receive_ISR
 19950 ;; This function is called by:
 19951 ;;		Interrupt level 1
 19952 ;; This function uses a non-reentrant model
 19953 ;;
 19954                           
 19955                           	psect	text114
 19956  014454                     __ptext114:
 19957                           	callstack 0
 19958  014454                     _UART1_rx_vect_isr:
 19959                           	callstack 15
 19960                           
 19961                           ;incstack = 0
 19962  014454  006F FF60  F01D    	movff	status,??_UART1_rx_vect_isr
 19963  01445A  006F FFE8  F01E    	movff	pclath,??_UART1_rx_vect_isr+1
 19964  014460  006F FFEC  F01F    	movff	pclatu,??_UART1_rx_vect_isr+2
 19965                           
 19966                           ;mcc_generated_files/uart1.c: 253:     if(UART1_RxInterruptHandler)
 19967  014466  502A               	movf	_UART1_RxInterruptHandler^0,w,c
 19968  014468  102B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 19969  01446A  102C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 19970  01446C  B4D8               	btfsc	status,2,c
 19971  01446E  D00C               	goto	i1u1006_29
 19972                           
 19973                           ;mcc_generated_files/uart1.c: 254:     {;mcc_generated_files/uart1.c: 255:         UART1
      +                          _RxInterruptHandler();
 19974  014470  D801               	call	i1u1006_28
 19975  014472  D00A               	goto	i1u1006_29
 19976  014474                     i1u1006_28:
 19977  014474  0005               	push	
 19978  014476  6EFA               	movwf	pclath,c
 19979  014478  502A               	movf	_UART1_RxInterruptHandler^0,w,c
 19980  01447A  6EFD               	movwf	tosl,c
 19981  01447C  502B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 19982  01447E  6EFE               	movwf	tosh,c
 19983  014480  502C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 19984  014482  6EFF               	movwf	tosu,c
 19985  014484  50FA               	movf	pclath,w,c
 19986  014486  0012               	return		;indir
 19987  014488                     i1u1006_29:
 19988  014488  0060  F07F  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 19989  01448E  0060  F07B  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 19990  014494  0060  F077  FFD8   	movff	??_UART1_rx_vect_isr,status
 19991  01449A  0011               	retfie		f
 19992  01449C                     __end_of_UART1_rx_vect_isr:
 19993                           	callstack 0
 19994                           
 19995 ;; *************** function _UART1_Receive_ISR *****************
 19996 ;; Defined at:
 19997 ;;		line 295 in file "mcc_generated_files/uart1.c"
 19998 ;; Parameters:    Size  Location     Type
 19999 ;;		None
 20000 ;; Auto vars:     Size  Location     Type
 20001 ;;		None
 20002 ;; Return value:  Size  Location     Type
 20003 ;;                  1    wreg      void 
 20004 ;; Registers used:
 20005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 20006 ;; Tracked objects:
 20007 ;;		On entry : 0/0
 20008 ;;		On exit  : 0/0
 20009 ;;		Unchanged: 0/0
 20010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20015 ;;Total ram usage:        0 bytes
 20016 ;; Hardware stack levels used: 1
 20017 ;; Hardware stack levels required when called: 5
 20018 ;; This function calls:
 20019 ;;		Absolute function
 20020 ;;		_UART1_DefaultErrorHandler
 20021 ;;		_UART1_DefaultFramingErrorHandler
 20022 ;;		_UART1_DefaultOverrunErrorHandler
 20023 ;;		_UART1_RxDataHandler
 20024 ;; This function is called by:
 20025 ;;		_UART1_Initialize
 20026 ;;		_UART1_rx_vect_isr
 20027 ;; This function uses a non-reentrant model
 20028 ;;
 20029                           
 20030                           	psect	text115
 20031  013AC2                     __ptext115:
 20032                           	callstack 0
 20033  013AC2                     _UART1_Receive_ISR:
 20034                           	callstack 15
 20035                           
 20036                           ;mcc_generated_files/uart1.c: 298:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 20037                           
 20038                           ;incstack = 0
 20039  013AC2  0E00               	movlw	low _uart1RxStatusBuffer
 20040  013AC4  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20041  013AC6  6ED9               	movwf	fsr2l,c
 20042  013AC8  6ADA               	clrf	fsr2h,c
 20043  013ACA  0E02               	movlw	high _uart1RxStatusBuffer
 20044  013ACC  22DA               	addwfc	fsr2h,f,c
 20045  013ACE  0E00               	movlw	0
 20046  013AD0  6EDF               	movwf	indf2,c
 20047                           
 20048                           ;mcc_generated_files/uart1.c: 300:     if(U1ERRIRbits.FERIF){
 20049  013AD2  013D               	movlb	61	; () banked
 20050  013AD4  A7F9               	btfss	249,3,b	;volatile
 20051  013AD6  D015               	goto	i1u986_29
 20052                           
 20053                           ; BSR set to: 61
 20054                           ;mcc_generated_files/uart1.c: 301:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 20055  013AD8  0E00               	movlw	low _uart1RxStatusBuffer
 20056  013ADA  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20057  013ADC  6ED9               	movwf	fsr2l,c
 20058  013ADE  6ADA               	clrf	fsr2h,c
 20059  013AE0  0E02               	movlw	high _uart1RxStatusBuffer
 20060  013AE2  22DA               	addwfc	fsr2h,f,c
 20061  013AE4  0102               	movlb	2	; () banked
 20062  013AE6  82DF               	bsf	indf2,1,c
 20063                           
 20064                           ; BSR set to: 2
 20065                           ;mcc_generated_files/uart1.c: 302:         UART1_FramingErrorHandler();
 20066  013AE8  D801               	call	i1u986_28
 20067  013AEA  D00B               	goto	i1u986_29
 20068  013AEC                     i1u986_28:
 20069  013AEC  0005               	push	
 20070  013AEE  6EFA               	movwf	pclath,c
 20071  013AF0  0101               	movlb	1	; () banked
 20072  013AF2  5132               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 20073  013AF4  6EFD               	movwf	tosl,c
 20074  013AF6  5133               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 20075  013AF8  6EFE               	movwf	tosh,c
 20076  013AFA  5134               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 20077  013AFC  6EFF               	movwf	tosu,c
 20078  013AFE  50FA               	movf	pclath,w,c
 20079  013B00  0012               	return		;indir
 20080  013B02                     i1u986_29:
 20081                           
 20082                           ;mcc_generated_files/uart1.c: 305:     if(U1ERRIRbits.RXFOIF){
 20083  013B02  013D               	movlb	61	; () banked
 20084  013B04  A3F9               	btfss	249,1,b	;volatile
 20085  013B06  D015               	goto	i1u988_29
 20086                           
 20087                           ; BSR set to: 61
 20088                           ;mcc_generated_files/uart1.c: 306:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 20089  013B08  0E00               	movlw	low _uart1RxStatusBuffer
 20090  013B0A  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20091  013B0C  6ED9               	movwf	fsr2l,c
 20092  013B0E  6ADA               	clrf	fsr2h,c
 20093  013B10  0E02               	movlw	high _uart1RxStatusBuffer
 20094  013B12  22DA               	addwfc	fsr2h,f,c
 20095  013B14  0102               	movlb	2	; () banked
 20096  013B16  84DF               	bsf	indf2,2,c
 20097                           
 20098                           ; BSR set to: 2
 20099                           ;mcc_generated_files/uart1.c: 307:         UART1_OverrunErrorHandler();
 20100  013B18  D801               	call	i1u988_28
 20101  013B1A  D00B               	goto	i1u988_29
 20102  013B1C                     i1u988_28:
 20103  013B1C  0005               	push	
 20104  013B1E  6EFA               	movwf	pclath,c
 20105  013B20  0101               	movlb	1	; () banked
 20106  013B22  512F               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 20107  013B24  6EFD               	movwf	tosl,c
 20108  013B26  5130               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 20109  013B28  6EFE               	movwf	tosh,c
 20110  013B2A  5131               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 20111  013B2C  6EFF               	movwf	tosu,c
 20112  013B2E  50FA               	movf	pclath,w,c
 20113  013B30  0012               	return		;indir
 20114  013B32                     i1u988_29:
 20115                           
 20116                           ;mcc_generated_files/uart1.c: 310:     if(uart1RxStatusBuffer[uart1RxHead].status){
 20117  013B32  0E00               	movlw	low _uart1RxStatusBuffer
 20118  013B34  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20119  013B36  6ED9               	movwf	fsr2l,c
 20120  013B38  6ADA               	clrf	fsr2h,c
 20121  013B3A  0E02               	movlw	high _uart1RxStatusBuffer
 20122  013B3C  22DA               	addwfc	fsr2h,f,c
 20123  013B3E  50DF               	movf	indf2,w,c
 20124  013B40  B4D8               	btfsc	status,2,c
 20125  013B42  D00D               	goto	i1l10359
 20126                           
 20127                           ;mcc_generated_files/uart1.c: 311:         UART1_ErrorHandler();
 20128  013B44  D801               	call	i1u990_28
 20129  013B46  0012               	return	
 20130  013B48                     i1u990_28:
 20131  013B48  0005               	push	
 20132  013B4A  6EFA               	movwf	pclath,c
 20133  013B4C  0101               	movlb	1	; () banked
 20134  013B4E  512C               	movf	_UART1_ErrorHandler& (0+255),w,b
 20135  013B50  6EFD               	movwf	tosl,c
 20136  013B52  512D               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 20137  013B54  6EFE               	movwf	tosh,c
 20138  013B56  512E               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 20139  013B58  6EFF               	movwf	tosu,c
 20140  013B5A  50FA               	movf	pclath,w,c
 20141  013B5C  0012               	return		;indir
 20142  013B5E                     i1l10359:
 20143                           
 20144                           ;mcc_generated_files/uart1.c: 313:         UART1_RxDataHandler();
 20145  013B5E  ECEF  F0A5         	call	_UART1_RxDataHandler	;wreg free
 20146  013B62  0012               	return		;funcret
 20147  013B64                     __end_of_UART1_Receive_ISR:
 20148                           	callstack 0
 20149                           
 20150 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 20151 ;; Defined at:
 20152 ;;		line 331 in file "mcc_generated_files/uart1.c"
 20153 ;; Parameters:    Size  Location     Type
 20154 ;;		None
 20155 ;; Auto vars:     Size  Location     Type
 20156 ;;		None
 20157 ;; Return value:  Size  Location     Type
 20158 ;;                  1    wreg      void 
 20159 ;; Registers used:
 20160 ;;		None
 20161 ;; Tracked objects:
 20162 ;;		On entry : 3F/1
 20163 ;;		On exit  : 3F/1
 20164 ;;		Unchanged: 3F/0
 20165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20170 ;;Total ram usage:        0 bytes
 20171 ;; Hardware stack levels used: 1
 20172 ;; Hardware stack levels required when called: 3
 20173 ;; This function calls:
 20174 ;;		Nothing
 20175 ;; This function is called by:
 20176 ;;		_UART1_Initialize
 20177 ;;		_UART1_Receive_ISR
 20178 ;; This function uses a non-reentrant model
 20179 ;;
 20180                           
 20181                           	psect	text116
 20182  014F22                     __ptext116:
 20183                           	callstack 0
 20184  014F22                     _UART1_DefaultOverrunErrorHandler:
 20185                           	callstack 16
 20186                           
 20187                           ; BSR set to: 1
 20188                           
 20189                           ;incstack = 0
 20190  014F22  0012               	return		;funcret
 20191  014F24                     __end_of_UART1_DefaultOverrunErrorHandler:
 20192                           	callstack 0
 20193                           
 20194 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 20195 ;; Defined at:
 20196 ;;		line 329 in file "mcc_generated_files/uart1.c"
 20197 ;; Parameters:    Size  Location     Type
 20198 ;;		None
 20199 ;; Auto vars:     Size  Location     Type
 20200 ;;		None
 20201 ;; Return value:  Size  Location     Type
 20202 ;;                  1    wreg      void 
 20203 ;; Registers used:
 20204 ;;		None
 20205 ;; Tracked objects:
 20206 ;;		On entry : 3F/1
 20207 ;;		On exit  : 3F/1
 20208 ;;		Unchanged: 3F/0
 20209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20214 ;;Total ram usage:        0 bytes
 20215 ;; Hardware stack levels used: 1
 20216 ;; Hardware stack levels required when called: 3
 20217 ;; This function calls:
 20218 ;;		Nothing
 20219 ;; This function is called by:
 20220 ;;		_UART1_Initialize
 20221 ;;		_UART1_Receive_ISR
 20222 ;; This function uses a non-reentrant model
 20223 ;;
 20224                           
 20225                           	psect	text117
 20226  014F24                     __ptext117:
 20227                           	callstack 0
 20228  014F24                     _UART1_DefaultFramingErrorHandler:
 20229                           	callstack 16
 20230                           
 20231                           ; BSR set to: 1
 20232                           
 20233                           ; BSR set to: 1
 20234                           ;incstack = 0
 20235  014F24  0012               	return		;funcret
 20236  014F26                     __end_of_UART1_DefaultFramingErrorHandler:
 20237                           	callstack 0
 20238                           
 20239 ;; *************** function _UART1_DefaultErrorHandler *****************
 20240 ;; Defined at:
 20241 ;;		line 333 in file "mcc_generated_files/uart1.c"
 20242 ;; Parameters:    Size  Location     Type
 20243 ;;		None
 20244 ;; Auto vars:     Size  Location     Type
 20245 ;;		None
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  1    wreg      void 
 20248 ;; Registers used:
 20249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20250 ;; Tracked objects:
 20251 ;;		On entry : 3F/1
 20252 ;;		On exit  : 0/0
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20259 ;;Total ram usage:        0 bytes
 20260 ;; Hardware stack levels used: 1
 20261 ;; Hardware stack levels required when called: 4
 20262 ;; This function calls:
 20263 ;;		_UART1_RxDataHandler
 20264 ;; This function is called by:
 20265 ;;		_UART1_Initialize
 20266 ;;		_UART1_Receive_ISR
 20267 ;; This function uses a non-reentrant model
 20268 ;;
 20269                           
 20270                           	psect	text118
 20271  014F0E                     __ptext118:
 20272                           	callstack 0
 20273  014F0E                     _UART1_DefaultErrorHandler:
 20274                           	callstack 15
 20275                           
 20276                           ; BSR set to: 1
 20277                           ;mcc_generated_files/uart1.c: 334:     UART1_RxDataHandler();
 20278                           
 20279                           ; BSR set to: 1
 20280                           ;incstack = 0
 20281  014F0E  ECEF  F0A5         	call	_UART1_RxDataHandler	;wreg free
 20282  014F12  0012               	return		;funcret
 20283  014F14                     __end_of_UART1_DefaultErrorHandler:
 20284                           	callstack 0
 20285                           
 20286 ;; *************** function _UART1_RxDataHandler *****************
 20287 ;; Defined at:
 20288 ;;		line 319 in file "mcc_generated_files/uart1.c"
 20289 ;; Parameters:    Size  Location     Type
 20290 ;;		None
 20291 ;; Auto vars:     Size  Location     Type
 20292 ;;		None
 20293 ;; Return value:  Size  Location     Type
 20294 ;;                  1    wreg      void 
 20295 ;; Registers used:
 20296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20297 ;; Tracked objects:
 20298 ;;		On entry : 0/3D
 20299 ;;		On exit  : 0/0
 20300 ;;		Unchanged: 0/0
 20301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20306 ;;Total ram usage:        0 bytes
 20307 ;; Hardware stack levels used: 1
 20308 ;; Hardware stack levels required when called: 3
 20309 ;; This function calls:
 20310 ;;		Nothing
 20311 ;; This function is called by:
 20312 ;;		_UART1_Receive_ISR
 20313 ;;		_UART1_DefaultErrorHandler
 20314 ;; This function uses a non-reentrant model
 20315 ;;
 20316                           
 20317                           	psect	text119
 20318  014BDE                     __ptext119:
 20319                           	callstack 0
 20320  014BDE                     _UART1_RxDataHandler:
 20321                           	callstack 16
 20322                           
 20323                           ;mcc_generated_files/uart1.c: 321:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 20324                           
 20325                           ;incstack = 0
 20326  014BDE  0E00               	movlw	low _uart1RxBuffer
 20327  014BE0  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20328  014BE2  6ED9               	movwf	fsr2l,c
 20329  014BE4  6ADA               	clrf	fsr2h,c
 20330  014BE6  0E03               	movlw	high _uart1RxBuffer
 20331  014BE8  22DA               	addwfc	fsr2h,f,c
 20332  014BEA  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 20333  014BF0  2A3B               	incf	_uart1RxHead^0,f,c	;volatile
 20334                           
 20335                           ;mcc_generated_files/uart1.c: 322:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 20336  014BF2  0E3F               	movlw	63
 20337  014BF4  643B               	cpfsgt	_uart1RxHead^0,c
 20338  014BF6  D002               	goto	i1l9761
 20339                           
 20340                           ;mcc_generated_files/uart1.c: 323:     {;mcc_generated_files/uart1.c: 324:         uart1
      +                          RxHead = 0;
 20341  014BF8  0E00               	movlw	0
 20342  014BFA  6E3B               	movwf	_uart1RxHead^0,c	;volatile
 20343  014BFC                     i1l9761:
 20344                           
 20345                           ;mcc_generated_files/uart1.c: 326:     uart1RxCount++;
 20346  014BFC  2A39               	incf	_uart1RxCount^0,f,c	;volatile
 20347  014BFE  0012               	return		;funcret
 20348  014C00                     __end_of_UART1_RxDataHandler:
 20349                           	callstack 0
 20350                           
 20351 ;; *************** function _ADCC_ISR *****************
 20352 ;; Defined at:
 20353 ;;		line 307 in file "mcc_generated_files/adcc.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;		None
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;		None
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  1    wreg      void 
 20360 ;; Registers used:
 20361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/0
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20371 ;;Total ram usage:        2 bytes
 20372 ;; Hardware stack levels used: 1
 20373 ;; Hardware stack levels required when called: 2
 20374 ;; This function calls:
 20375 ;;		Absolute function
 20376 ;;		_ADCC_DefaultInterruptHandler
 20377 ;;		_Adc_Isr
 20378 ;; This function is called by:
 20379 ;;		Interrupt level 2
 20380 ;; This function uses a non-reentrant model
 20381 ;;
 20382                           
 20383                           	psect	text120
 20384  014524                     __ptext120:
 20385                           	callstack 0
 20386  014524                     _ADCC_ISR:
 20387                           	callstack 15
 20388                           
 20389                           ;incstack = 0
 20390  014524  006F FFE8  F009    	movff	pclath,??_ADCC_ISR
 20391  01452A  006F FFEC  F00A    	movff	pclatu,??_ADCC_ISR+1
 20392                           
 20393                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 20394  014530  0139               	movlb	57	; () banked
 20395  014532  95A1               	bcf	161,2,b	;volatile
 20396                           
 20397                           ; BSR set to: 57
 20398                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 20399  014534  0101               	movlb	1	; () banked
 20400  014536  513E               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 20401  014538  113F               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 20402  01453A  1140               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 20403  01453C  B4D8               	btfsc	status,2,c
 20404  01453E  D00C               	goto	i2u671_49
 20405                           
 20406                           ; BSR set to: 1
 20407                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 20408  014540  D801               	call	i2u671_48
 20409  014542  D00A               	goto	i2u671_49
 20410  014544                     i2u671_48:
 20411  014544  0005               	push	
 20412  014546  6EFA               	movwf	pclath,c
 20413  014548  513E               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 20414  01454A  6EFD               	movwf	tosl,c
 20415  01454C  513F               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 20416  01454E  6EFE               	movwf	tosh,c
 20417  014550  5140               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 20418  014552  6EFF               	movwf	tosu,c
 20419  014554  50FA               	movf	pclath,w,c
 20420  014556  0012               	return		;indir
 20421  014558                     i2u671_49:
 20422  014558  0060  F02B  FFFB   	movff	??_ADCC_ISR+1,pclatu
 20423  01455E  0060  F027  FFFA   	movff	??_ADCC_ISR,pclath
 20424  014564  0011               	retfie		f
 20425  014566                     __end_of_ADCC_ISR:
 20426                           	callstack 0
 20427                           
 20428 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 20429 ;; Defined at:
 20430 ;;		line 320 in file "mcc_generated_files/adcc.c"
 20431 ;; Parameters:    Size  Location     Type
 20432 ;;		None
 20433 ;; Auto vars:     Size  Location     Type
 20434 ;;		None
 20435 ;; Return value:  Size  Location     Type
 20436 ;;                  1    wreg      void 
 20437 ;; Registers used:
 20438 ;;		None
 20439 ;; Tracked objects:
 20440 ;;		On entry : 3F/1
 20441 ;;		On exit  : 3F/1
 20442 ;;		Unchanged: 3F/0
 20443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20448 ;;Total ram usage:        0 bytes
 20449 ;; Hardware stack levels used: 1
 20450 ;; This function calls:
 20451 ;;		Nothing
 20452 ;; This function is called by:
 20453 ;;		_ADCC_Initialize
 20454 ;;		_ADCC_ISR
 20455 ;; This function uses a non-reentrant model
 20456 ;;
 20457                           
 20458                           	psect	text121
 20459  014F26                     __ptext121:
 20460                           	callstack 0
 20461  014F26                     _ADCC_DefaultInterruptHandler:
 20462                           	callstack 16
 20463                           
 20464                           ; BSR set to: 1
 20465                           
 20466                           ;incstack = 0
 20467  014F26  0012               	return		;funcret
 20468  014F28                     __end_of_ADCC_DefaultInterruptHandler:
 20469                           	callstack 0
 20470                           
 20471 ;; *************** function _Adc_Isr *****************
 20472 ;; Defined at:
 20473 ;;		line 109 in file "main.c"
 20474 ;; Parameters:    Size  Location     Type
 20475 ;;		None
 20476 ;; Auto vars:     Size  Location     Type
 20477 ;;		None
 20478 ;; Return value:  Size  Location     Type
 20479 ;;                  1    wreg      void 
 20480 ;; Registers used:
 20481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20482 ;; Tracked objects:
 20483 ;;		On entry : 3F/1
 20484 ;;		On exit  : 3F/0
 20485 ;;		Unchanged: 0/0
 20486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20490 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20491 ;;Total ram usage:        4 bytes
 20492 ;; Hardware stack levels used: 1
 20493 ;; Hardware stack levels required when called: 1
 20494 ;; This function calls:
 20495 ;;		_ADCC_GetConversionResult
 20496 ;; This function is called by:
 20497 ;;		_main
 20498 ;;		_ADCC_ISR
 20499 ;; This function uses a non-reentrant model
 20500 ;;
 20501                           
 20502                           	psect	text122
 20503  013308                     __ptext122:
 20504                           	callstack 0
 20505  013308                     _Adc_Isr:
 20506                           	callstack 15
 20507                           
 20508                           ; BSR set to: 1
 20509                           ;main.c: 111:  static adcc_channel_t c_adc_chan = PS_V_ANA;;main.c: 113:  a[a_index].ana
      +                          [c_adc_chan] = ADCC_GetConversionResult();
 20510                           
 20511                           ; BSR set to: 1
 20512                           ;incstack = 0
 20513  013308  ECD6  F0A6         	call	_ADCC_GetConversionResult	;wreg free
 20514  01330C  5033               	movf	Adc_Isr@c_adc_chan^0,w,c
 20515  01330E  0D02               	mullw	2
 20516  013310  006F FFCC  F005    	movff	prodl,??_Adc_Isr
 20517  013316  006F FFD0  F006    	movff	prodh,??_Adc_Isr+1
 20518  01331C  5037               	movf	_a_index^0,w,c	;volatile
 20519  01331E  0D7E               	mullw	126
 20520  013320  0E83               	movlw	low _a
 20521  013322  6E07               	movwf	(??_Adc_Isr+2)^0,c
 20522  013324  0E05               	movlw	high _a
 20523  013326  6E08               	movwf	(??_Adc_Isr+3)^0,c
 20524  013328  50F3               	movf	243,w,c
 20525  01332A  2607               	addwf	(??_Adc_Isr+2)^0,f,c
 20526  01332C  50F4               	movf	244,w,c
 20527  01332E  2208               	addwfc	(??_Adc_Isr+3)^0,f,c
 20528  013330  5005               	movf	??_Adc_Isr^0,w,c
 20529  013332  2407               	addwf	(??_Adc_Isr+2)^0,w,c
 20530  013334  6ED9               	movwf	fsr2l,c
 20531  013336  5006               	movf	(??_Adc_Isr+1)^0,w,c
 20532  013338  2008               	addwfc	(??_Adc_Isr+3)^0,w,c
 20533  01333A  6EDA               	movwf	fsr2h,c
 20534  01333C  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 20535  013342  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 20536                           
 20537                           ;main.c: 114:  a[i_index].ana[c_adc_chan] = ADCC_GetConversionResult();
 20538  013348  ECD6  F0A6         	call	_ADCC_GetConversionResult	;wreg free
 20539  01334C  5033               	movf	Adc_Isr@c_adc_chan^0,w,c
 20540  01334E  0D02               	mullw	2
 20541  013350  006F FFCC  F005    	movff	prodl,??_Adc_Isr
 20542  013356  006F FFD0  F006    	movff	prodh,??_Adc_Isr+1
 20543  01335C  5036               	movf	_i_index^0,w,c	;volatile
 20544  01335E  0D7E               	mullw	126
 20545  013360  0E83               	movlw	low _a
 20546  013362  6E07               	movwf	(??_Adc_Isr+2)^0,c
 20547  013364  0E05               	movlw	high _a
 20548  013366  6E08               	movwf	(??_Adc_Isr+3)^0,c
 20549  013368  50F3               	movf	243,w,c
 20550  01336A  2607               	addwf	(??_Adc_Isr+2)^0,f,c
 20551  01336C  50F4               	movf	244,w,c
 20552  01336E  2208               	addwfc	(??_Adc_Isr+3)^0,f,c
 20553  013370  5005               	movf	??_Adc_Isr^0,w,c
 20554  013372  2407               	addwf	(??_Adc_Isr+2)^0,w,c
 20555  013374  6ED9               	movwf	fsr2l,c
 20556  013376  5006               	movf	(??_Adc_Isr+1)^0,w,c
 20557  013378  2008               	addwfc	(??_Adc_Isr+3)^0,w,c
 20558  01337A  6EDA               	movwf	fsr2h,c
 20559  01337C  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 20560  013382  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 20561                           
 20562                           ;main.c: 119:  switch (c_adc_chan) {
 20563  013388  D014               	goto	i2l7701
 20564  01338A                     i2l7681:
 20565                           
 20566                           ; BSR set to: 62
 20567                           ;main.c: 121:   c_adc_chan = PS_I_ANA;
 20568  01338A  0E01               	movlw	1
 20569  01338C  D005               	goto	L19
 20570  01338E                     i2l7683:
 20571                           
 20572                           ; BSR set to: 62
 20573                           ;main.c: 124:   c_adc_chan = channel_DAC1;
 20574  01338E  0E3D               	movlw	61
 20575  013390  D003               	goto	L19
 20576  013392                     i2l7685:
 20577                           
 20578                           ; BSR set to: 62
 20579                           ;main.c: 127:   c_adc_chan = PWM5_ANA;
 20580  013392  0E28               	movlw	40
 20581  013394  D001               	goto	L19
 20582  013396                     i2l7687:
 20583                           
 20584                           ; BSR set to: 62
 20585                           ;main.c: 130:   c_adc_chan = PWM6_ANA;
 20586  013396  0E29               	movlw	41
 20587  013398                     L19:
 20588  013398  6E33               	movwf	Adc_Isr@c_adc_chan^0,c
 20589                           
 20590                           ;main.c: 131:   break;
 20591  01339A  D023               	goto	i2l1265
 20592  01339C                     i2l7689:
 20593                           
 20594                           ; BSR set to: 62
 20595                           ;main.c: 134:   c_adc_chan = PS_V_ANA;
 20596  01339C  0E00               	movlw	0
 20597  01339E  6E33               	movwf	Adc_Isr@c_adc_chan^0,c
 20598                           
 20599                           ; BSR set to: 62
 20600                           ;main.c: 135:   if (mode != roll_mode) {
 20601  0133A0  0435               	decf	_mode^0,w,c
 20602  0133A2  A4D8               	btfss	status,2,c
 20603                           
 20604                           ; BSR set to: 62
 20605                           ;main.c: 136:    i_index++;
 20606  0133A4  2A36               	incf	_i_index^0,f,c	;volatile
 20607                           
 20608                           ; BSR set to: 62
 20609                           ;main.c: 138:   if (i_index >= 32) {
 20610  0133A6  0E1F               	movlw	31
 20611  0133A8  6436               	cpfsgt	_i_index^0,c	;volatile
 20612  0133AA  D01B               	goto	i2l1265
 20613                           
 20614                           ; BSR set to: 62
 20615                           ;main.c: 139:    i_index = 0;
 20616  0133AC  0E00               	movlw	0
 20617  0133AE  6E36               	movwf	_i_index^0,c	;volatile
 20618  0133B0  D018               	goto	i2l1265
 20619  0133B2                     i2l7701:
 20620                           
 20621                           ; BSR set to: 62
 20622  0133B2  5033               	movf	Adc_Isr@c_adc_chan^0,w,c
 20623  0133B4  6E05               	movwf	??_Adc_Isr^0,c
 20624  0133B6  6A06               	clrf	(??_Adc_Isr+1)^0,c
 20625                           
 20626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20627                           ; Switch size 1, requested type "simple"
 20628                           ; Number of cases is 1, Range of values is 0 to 0
 20629                           ; switch strategies available:
 20630                           ; Name         Instructions Cycles
 20631                           ; simple_byte            4     3 (average)
 20632                           ;	Chosen strategy is simple_byte
 20633  0133B8  5006               	movf	(??_Adc_Isr+1)^0,w,c
 20634  0133BA  0A00               	xorlw	0	; case 0
 20635  0133BC  A4D8               	btfss	status,2,c
 20636  0133BE  D7EE               	goto	i2l7689
 20637                           
 20638                           ; BSR set to: 62
 20639                           ; Switch size 1, requested type "simple"
 20640                           ; Number of cases is 5, Range of values is 0 to 61
 20641                           ; switch strategies available:
 20642                           ; Name         Instructions Cycles
 20643                           ; simple_byte           16     9 (average)
 20644                           ;	Chosen strategy is simple_byte
 20645  0133C0  5005               	movf	??_Adc_Isr^0,w,c
 20646  0133C2  0A00               	xorlw	0	; case 0
 20647  0133C4  B4D8               	btfsc	status,2,c
 20648  0133C6  D7E1               	goto	i2l7681
 20649  0133C8  0A01               	xorlw	1	; case 1
 20650  0133CA  B4D8               	btfsc	status,2,c
 20651  0133CC  D7E0               	goto	i2l7683
 20652  0133CE  0A29               	xorlw	41	; case 40
 20653  0133D0  B4D8               	btfsc	status,2,c
 20654  0133D2  D7E1               	goto	i2l7687
 20655  0133D4  0A01               	xorlw	1	; case 41
 20656  0133D6  B4D8               	btfsc	status,2,c
 20657  0133D8  D7E1               	goto	i2l7689
 20658  0133DA  0A14               	xorlw	20	; case 61
 20659  0133DC  B4D8               	btfsc	status,2,c
 20660  0133DE  D7D9               	goto	i2l7685
 20661  0133E0  D7DD               	goto	i2l7689
 20662  0133E2                     i2l1265:
 20663                           
 20664                           ; BSR set to: 62
 20665                           ;main.c: 143:  ADPCH = c_adc_chan;
 20666  0133E2  0060  F0CF  FEF1   	movff	Adc_Isr@c_adc_chan,16113	;volatile
 20667                           
 20668                           ; BSR set to: 62
 20669                           ;main.c: 147:  adc_tick = 1;
 20670  0133E8  0E01               	movlw	1
 20671  0133EA  0100               	movlb	0	; () banked
 20672  0133EC  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
 20673                           
 20674                           ; BSR set to: 0
 20675  0133EE  0012               	return		;funcret
 20676  0133F0                     __end_of_Adc_Isr:
 20677                           	callstack 0
 20678                           
 20679 ;; *************** function _ADCC_GetConversionResult *****************
 20680 ;; Defined at:
 20681 ;;		line 139 in file "mcc_generated_files/adcc.c"
 20682 ;; Parameters:    Size  Location     Type
 20683 ;;		None
 20684 ;; Auto vars:     Size  Location     Type
 20685 ;;		None
 20686 ;; Return value:  Size  Location     Type
 20687 ;;                  2    0[COMRAM] unsigned short 
 20688 ;; Registers used:
 20689 ;;		wreg, status,2, status,0
 20690 ;; Tracked objects:
 20691 ;;		On entry : 0/1
 20692 ;;		On exit  : 3F/3E
 20693 ;;		Unchanged: 0/0
 20694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;Total ram usage:        4 bytes
 20700 ;; Hardware stack levels used: 1
 20701 ;; This function calls:
 20702 ;;		Nothing
 20703 ;; This function is called by:
 20704 ;;		_Adc_Isr
 20705 ;; This function uses a non-reentrant model
 20706 ;;
 20707                           
 20708                           	psect	text123
 20709  014DAC                     __ptext123:
 20710                           	callstack 0
 20711  014DAC                     _ADCC_GetConversionResult:
 20712                           	callstack 15
 20713                           
 20714                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 20715                           
 20716                           ; BSR set to: 0
 20717                           ;incstack = 0
 20718  014DAC  013E               	movlb	62	; () banked
 20719  014DAE  51F0               	movf	240,w,b	;volatile
 20720  014DB0  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 20721  014DB2  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 20722  014DB4  51EF               	movf	239,w,b	;volatile
 20723  014DB6  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 20724  014DB8  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 20725  014DBA  0E00               	movlw	0
 20726  014DBC  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 20727  014DBE  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 20728                           
 20729                           ; BSR set to: 62
 20730  014DC0  0012               	return		;funcret
 20731  014DC2                     __end_of_ADCC_GetConversionResult:
 20732                           	callstack 0
 20733                           
 20734 ;; *************** function _TMR6_ISR *****************
 20735 ;; Defined at:
 20736 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 20737 ;; Parameters:    Size  Location     Type
 20738 ;;		None
 20739 ;; Auto vars:     Size  Location     Type
 20740 ;;		None
 20741 ;; Return value:  Size  Location     Type
 20742 ;;                  1    wreg      void 
 20743 ;; Registers used:
 20744 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 20745 ;; Tracked objects:
 20746 ;;		On entry : 0/0
 20747 ;;		On exit  : 0/0
 20748 ;;		Unchanged: 0/0
 20749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20754 ;;Total ram usage:        2 bytes
 20755 ;; Hardware stack levels used: 1
 20756 ;; Hardware stack levels required when called: 2
 20757 ;; This function calls:
 20758 ;;		_TMR6_CallBack
 20759 ;; This function is called by:
 20760 ;;		Interrupt level 2
 20761 ;; This function uses a non-reentrant model
 20762 ;;
 20763                           
 20764                           	psect	text124
 20765  01488C                     __ptext124:
 20766                           	callstack 0
 20767  01488C                     _TMR6_ISR:
 20768                           	callstack 15
 20769                           
 20770                           ; BSR set to: 62
 20771                           ;incstack = 0
 20772  01488C  006F FFE8  F00C    	movff	pclath,??_TMR6_ISR
 20773  014892  006F FFEC  F00D    	movff	pclatu,??_TMR6_ISR+1
 20774                           
 20775                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 20776  014898  0139               	movlb	57	; () banked
 20777  01489A  91A9               	bcf	169,0,b	;volatile
 20778                           
 20779                           ; BSR set to: 57
 20780                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 20781  01489C  4A31               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 20782  01489E  2A32               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 20783  0148A0  5032               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 20784  0148A2  E104               	bnz	i2u672_40
 20785  0148A4  0E17               	movlw	23
 20786  0148A6  5C31               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 20787  0148A8  A0D8               	btfss	status,0,c
 20788  0148AA  D006               	goto	i2l481
 20789  0148AC                     i2u672_40:
 20790                           
 20791                           ; BSR set to: 57
 20792                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 20793  0148AC  EC98  F0A5         	call	_TMR6_CallBack	;wreg free
 20794                           
 20795                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 20796  0148B0  0E00               	movlw	0
 20797  0148B2  6E32               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 20798  0148B4  0E00               	movlw	0
 20799  0148B6  6E31               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 20800  0148B8                     i2l481:
 20801  0148B8  0060  F037  FFFB   	movff	??_TMR6_ISR+1,pclatu
 20802  0148BE  0060  F033  FFFA   	movff	??_TMR6_ISR,pclath
 20803  0148C4  0011               	retfie		f
 20804  0148C6                     __end_of_TMR6_ISR:
 20805                           	callstack 0
 20806                           
 20807 ;; *************** function _TMR6_CallBack *****************
 20808 ;; Defined at:
 20809 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 20810 ;; Parameters:    Size  Location     Type
 20811 ;;		None
 20812 ;; Auto vars:     Size  Location     Type
 20813 ;;		None
 20814 ;; Return value:  Size  Location     Type
 20815 ;;                  1    wreg      void 
 20816 ;; Registers used:
 20817 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 20818 ;; Tracked objects:
 20819 ;;		On entry : 3F/39
 20820 ;;		On exit  : 0/0
 20821 ;;		Unchanged: 0/0
 20822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20827 ;;Total ram usage:        0 bytes
 20828 ;; Hardware stack levels used: 1
 20829 ;; Hardware stack levels required when called: 1
 20830 ;; This function calls:
 20831 ;;		Absolute function
 20832 ;;		_Led_Blink
 20833 ;;		_TMR6_DefaultInterruptHandler
 20834 ;; This function is called by:
 20835 ;;		_TMR6_ISR
 20836 ;; This function uses a non-reentrant model
 20837 ;;
 20838                           
 20839                           	psect	text125
 20840  014B30                     __ptext125:
 20841                           	callstack 0
 20842  014B30                     _TMR6_CallBack:
 20843                           	callstack 15
 20844                           
 20845                           ; BSR set to: 57
 20846                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 20847                           
 20848                           ;incstack = 0
 20849  014B30  0101               	movlb	1	; () banked
 20850  014B32  513B               	movf	_TMR6_InterruptHandler& (0+255),w,b
 20851  014B34  113C               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 20852  014B36  113D               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 20853  014B38  B4D8               	btfsc	status,2,c
 20854  014B3A  0012               	return	
 20855                           
 20856                           ; BSR set to: 1
 20857                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 20858  014B3C  D801               	call	i2u640_48
 20859  014B3E  0012               	return	
 20860  014B40                     i2u640_48:
 20861  014B40  0005               	push	
 20862  014B42  6EFA               	movwf	pclath,c
 20863  014B44  513B               	movf	_TMR6_InterruptHandler& (0+255),w,b
 20864  014B46  6EFD               	movwf	tosl,c
 20865  014B48  513C               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 20866  014B4A  6EFE               	movwf	tosh,c
 20867  014B4C  513D               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 20868  014B4E  6EFF               	movwf	tosu,c
 20869  014B50  50FA               	movf	pclath,w,c
 20870  014B52  0012               	return		;indir
 20871  014B54                     __end_of_TMR6_CallBack:
 20872                           	callstack 0
 20873                           
 20874 ;; *************** function _Led_Blink *****************
 20875 ;; Defined at:
 20876 ;;		line 93 in file "main.c"
 20877 ;; Parameters:    Size  Location     Type
 20878 ;;		None
 20879 ;; Auto vars:     Size  Location     Type
 20880 ;;		None
 20881 ;; Return value:  Size  Location     Type
 20882 ;;                  1    wreg      void 
 20883 ;; Registers used:
 20884 ;;		wreg, status,2, status,0
 20885 ;; Tracked objects:
 20886 ;;		On entry : 3F/1
 20887 ;;		On exit  : 3F/0
 20888 ;;		Unchanged: 0/0
 20889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20894 ;;Total ram usage:        1 bytes
 20895 ;; Hardware stack levels used: 1
 20896 ;; This function calls:
 20897 ;;		Nothing
 20898 ;; This function is called by:
 20899 ;;		_main
 20900 ;;		_TMR6_CallBack
 20901 ;; This function uses a non-reentrant model
 20902 ;;
 20903                           
 20904                           	psect	text126
 20905  014C20                     __ptext126:
 20906                           	callstack 0
 20907  014C20                     _Led_Blink:
 20908                           	callstack 15
 20909                           
 20910                           ; BSR set to: 1
 20911                           
 20912                           ; BSR set to: 1
 20913                           
 20914                           ;incstack = 0
 20915                           ;main.c: 95:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 20916  014C20  A0BE               	btfss	190,0,c	;volatile
 20917  014C22  D002               	goto	i2u628_40
 20918  014C24  0E01               	movlw	1
 20919  014C26  D001               	goto	i2u628_46
 20920  014C28                     i2u628_40:
 20921  014C28  0E00               	movlw	0
 20922  014C2A                     i2u628_46:
 20923  014C2A  0AFF               	xorlw	255
 20924  014C2C  6E0B               	movwf	??_Led_Blink^0,c
 20925  014C2E  50BE               	movf	190,w,c	;volatile
 20926  014C30  180B               	xorwf	??_Led_Blink^0,w,c
 20927  014C32  0BFE               	andlw	-2
 20928  014C34  180B               	xorwf	??_Led_Blink^0,w,c
 20929  014C36  6EBE               	movwf	190,c	;volatile
 20930                           
 20931                           ; BSR set to: 1
 20932                           ;main.c: 99:  disp_tick = 1;
 20933  014C38  0E01               	movlw	1
 20934  014C3A  0100               	movlb	0	; () banked
 20935  014C3C  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
 20936                           
 20937                           ; BSR set to: 0
 20938  014C3E  0012               	return		;funcret
 20939  014C40                     __end_of_Led_Blink:
 20940                           	callstack 0
 20941                           
 20942 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 20943 ;; Defined at:
 20944 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 20945 ;; Parameters:    Size  Location     Type
 20946 ;;		None
 20947 ;; Auto vars:     Size  Location     Type
 20948 ;;		None
 20949 ;; Return value:  Size  Location     Type
 20950 ;;                  1    wreg      void 
 20951 ;; Registers used:
 20952 ;;		None
 20953 ;; Tracked objects:
 20954 ;;		On entry : 3F/1
 20955 ;;		On exit  : 3F/1
 20956 ;;		Unchanged: 3F/0
 20957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20962 ;;Total ram usage:        0 bytes
 20963 ;; Hardware stack levels used: 1
 20964 ;; This function calls:
 20965 ;;		Nothing
 20966 ;; This function is called by:
 20967 ;;		_TMR6_Initialize
 20968 ;;		_TMR6_CallBack
 20969 ;; This function uses a non-reentrant model
 20970 ;;
 20971                           
 20972                           	psect	text127
 20973  014F28                     __ptext127:
 20974                           	callstack 0
 20975  014F28                     _TMR6_DefaultInterruptHandler:
 20976                           	callstack 15
 20977                           
 20978                           ; BSR set to: 1
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;incstack = 0
 20982  014F28  0012               	return		;funcret
 20983  014F2A                     __end_of_TMR6_DefaultInterruptHandler:
 20984                           	callstack 0
 20985                           
 20986 ;; *************** function _Default_ISR *****************
 20987 ;; Defined at:
 20988 ;;		line 82 in file "mcc_generated_files/interrupt_manager.c"
 20989 ;; Parameters:    Size  Location     Type
 20990 ;;		None
 20991 ;; Auto vars:     Size  Location     Type
 20992 ;;		None
 20993 ;; Return value:  Size  Location     Type
 20994 ;;                  1    wreg      void 
 20995 ;; Registers used:
 20996 ;;		None
 20997 ;; Tracked objects:
 20998 ;;		On entry : 0/0
 20999 ;;		On exit  : 0/0
 21000 ;;		Unchanged: 0/0
 21001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21006 ;;Total ram usage:        0 bytes
 21007 ;; Hardware stack levels used: 1
 21008 ;; This function calls:
 21009 ;;		Nothing
 21010 ;; This function is called by:
 21011 ;;		Interrupt level 2
 21012 ;; This function uses a non-reentrant model
 21013 ;;
 21014                           
 21015                           	psect	text128
 21016  014F2C                     __ptext128:
 21017                           	callstack 0
 21018  014F2C                     _Default_ISR:
 21019                           	callstack 17
 21020                           
 21021                           ; BSR set to: 1
 21022                           ;incstack = 0
 21023  014F2C  0011               	retfie		f
 21024  014F2E                     __end_of_Default_ISR:
 21025                           	callstack 0
 21026                           
 21027 ;; *************** function _TMR5_ISR *****************
 21028 ;; Defined at:
 21029 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 21030 ;; Parameters:    Size  Location     Type
 21031 ;;		None
 21032 ;; Auto vars:     Size  Location     Type
 21033 ;;		None
 21034 ;; Return value:  Size  Location     Type
 21035 ;;                  1    wreg      void 
 21036 ;; Registers used:
 21037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21038 ;; Tracked objects:
 21039 ;;		On entry : 0/0
 21040 ;;		On exit  : 0/0
 21041 ;;		Unchanged: 0/0
 21042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21045 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21047 ;;Total ram usage:        2 bytes
 21048 ;; Hardware stack levels used: 1
 21049 ;; Hardware stack levels required when called: 1
 21050 ;; This function calls:
 21051 ;;		Absolute function
 21052 ;;		_TMR5_DefaultInterruptHandler
 21053 ;;		_TMR5_WriteTimer
 21054 ;;		_Timers_Isr
 21055 ;; This function is called by:
 21056 ;;		Interrupt level 2
 21057 ;; This function uses a non-reentrant model
 21058 ;;
 21059                           
 21060                           	psect	text129
 21061  01432C                     __ptext129:
 21062                           	callstack 0
 21063  01432C                     _TMR5_ISR:
 21064                           	callstack 16
 21065                           
 21066                           ;incstack = 0
 21067  01432C  006F FFE8  F012    	movff	pclath,??_TMR5_ISR
 21068  014332  006F FFEC  F013    	movff	pclatu,??_TMR5_ISR+1
 21069                           
 21070                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 21071  014338  0139               	movlb	57	; () banked
 21072  01433A  9DA8               	bcf	168,6,b	;volatile
 21073                           
 21074                           ; BSR set to: 57
 21075                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 21076  01433C  C02F  F00E         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 21077  014340  C030  F00F         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 21078  014344  ECAA  F0A5         	call	_TMR5_WriteTimer	;wreg free
 21079                           
 21080                           ; BSR set to: 57
 21081                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 21082  014348  0101               	movlb	1	; () banked
 21083  01434A  5138               	movf	_TMR5_InterruptHandler& (0+255),w,b
 21084  01434C  1139               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 21085  01434E  113A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 21086  014350  B4D8               	btfsc	status,2,c
 21087  014352  D00C               	goto	i2u674_49
 21088                           
 21089                           ; BSR set to: 1
 21090                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 21091  014354  D801               	call	i2u674_48
 21092  014356  D00A               	goto	i2u674_49
 21093  014358                     i2u674_48:
 21094  014358  0005               	push	
 21095  01435A  6EFA               	movwf	pclath,c
 21096  01435C  5138               	movf	_TMR5_InterruptHandler& (0+255),w,b
 21097  01435E  6EFD               	movwf	tosl,c
 21098  014360  5139               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 21099  014362  6EFE               	movwf	tosh,c
 21100  014364  513A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 21101  014366  6EFF               	movwf	tosu,c
 21102  014368  50FA               	movf	pclath,w,c
 21103  01436A  0012               	return		;indir
 21104  01436C                     i2u674_49:
 21105  01436C  0060  F04F  FFFB   	movff	??_TMR5_ISR+1,pclatu
 21106  014372  0060  F04B  FFFA   	movff	??_TMR5_ISR,pclath
 21107  014378  0011               	retfie		f
 21108  01437A                     __end_of_TMR5_ISR:
 21109                           	callstack 0
 21110                           
 21111 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 21112 ;; Defined at:
 21113 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 21114 ;; Parameters:    Size  Location     Type
 21115 ;;		None
 21116 ;; Auto vars:     Size  Location     Type
 21117 ;;		None
 21118 ;; Return value:  Size  Location     Type
 21119 ;;                  1    wreg      void 
 21120 ;; Registers used:
 21121 ;;		None
 21122 ;; Tracked objects:
 21123 ;;		On entry : 3F/1
 21124 ;;		On exit  : 3F/1
 21125 ;;		Unchanged: 3F/0
 21126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21131 ;;Total ram usage:        0 bytes
 21132 ;; Hardware stack levels used: 1
 21133 ;; This function calls:
 21134 ;;		Nothing
 21135 ;; This function is called by:
 21136 ;;		_TMR5_Initialize
 21137 ;;		_TMR5_ISR
 21138 ;; This function uses a non-reentrant model
 21139 ;;
 21140                           
 21141                           	psect	text130
 21142  014F2E                     __ptext130:
 21143                           	callstack 0
 21144  014F2E                     _TMR5_DefaultInterruptHandler:
 21145                           	callstack 16
 21146                           
 21147                           ; BSR set to: 1
 21148                           
 21149                           ;incstack = 0
 21150  014F2E  0012               	return		;funcret
 21151  014F30                     __end_of_TMR5_DefaultInterruptHandler:
 21152                           	callstack 0
 21153                           
 21154 ;; *************** function _Timers_Isr *****************
 21155 ;; Defined at:
 21156 ;;		line 48 in file "timers.c"
 21157 ;; Parameters:    Size  Location     Type
 21158 ;;		None
 21159 ;; Auto vars:     Size  Location     Type
 21160 ;;  i               2   15[COMRAM] int 
 21161 ;; Return value:  Size  Location     Type
 21162 ;;                  1    wreg      void 
 21163 ;; Registers used:
 21164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21165 ;; Tracked objects:
 21166 ;;		On entry : 3F/1
 21167 ;;		On exit  : 3F/1
 21168 ;;		Unchanged: 3F/0
 21169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21173 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21174 ;;Total ram usage:        4 bytes
 21175 ;; Hardware stack levels used: 1
 21176 ;; This function calls:
 21177 ;;		Nothing
 21178 ;; This function is called by:
 21179 ;;		_main
 21180 ;;		_TMR5_ISR
 21181 ;; This function uses a non-reentrant model
 21182 ;;
 21183                           
 21184                           	psect	text131
 21185  01419E                     __ptext131:
 21186                           	callstack 0
 21187  01419E                     _Timers_Isr:
 21188                           	callstack 16
 21189                           
 21190                           ; BSR set to: 1
 21191                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 21192                           
 21193                           ; BSR set to: 1
 21194                           ;incstack = 0
 21195  01419E  0E00               	movlw	0
 21196  0141A0  6E11               	movwf	(Timers_Isr@i+1)^0,c
 21197  0141A2  0E00               	movlw	0
 21198  0141A4  6E10               	movwf	Timers_Isr@i^0,c
 21199  0141A6                     i2l7875:
 21200                           
 21201                           ; BSR set to: 1
 21202                           ;timers.c: 52:   if (tickCount[i] != 0) {
 21203  0141A6  90D8               	bcf	status,0,c
 21204  0141A8  3410               	rlcf	Timers_Isr@i^0,w,c
 21205  0141AA  6ED9               	movwf	fsr2l,c
 21206  0141AC  3411               	rlcf	(Timers_Isr@i+1)^0,w,c
 21207  0141AE  6EDA               	movwf	fsr2h,c
 21208  0141B0  0E0C               	movlw	low _tickCount
 21209  0141B2  26D9               	addwf	fsr2l,f,c
 21210  0141B4  0E01               	movlw	high _tickCount
 21211  0141B6  22DA               	addwfc	fsr2h,f,c
 21212  0141B8  50DE               	movf	postinc2,w,c
 21213  0141BA  10DE               	iorwf	postinc2,w,c
 21214  0141BC  B4D8               	btfsc	status,2,c
 21215  0141BE  D00C               	goto	i2l7879
 21216                           
 21217                           ; BSR set to: 1
 21218                           ;timers.c: 53:    tickCount[i]--;
 21219  0141C0  90D8               	bcf	status,0,c
 21220  0141C2  3410               	rlcf	Timers_Isr@i^0,w,c
 21221  0141C4  6ED9               	movwf	fsr2l,c
 21222  0141C6  3411               	rlcf	(Timers_Isr@i+1)^0,w,c
 21223  0141C8  6EDA               	movwf	fsr2h,c
 21224  0141CA  0E0C               	movlw	low _tickCount
 21225  0141CC  26D9               	addwf	fsr2l,f,c
 21226  0141CE  0E01               	movlw	high _tickCount
 21227  0141D0  22DA               	addwfc	fsr2h,f,c
 21228  0141D2  06DE               	decf	postinc2,f,c
 21229  0141D4  0E00               	movlw	0
 21230  0141D6  5ADD               	subwfb	postdec2,f,c
 21231  0141D8                     i2l7879:
 21232                           
 21233                           ; BSR set to: 1
 21234                           ;timers.c: 55:  }
 21235  0141D8  4A10               	infsnz	Timers_Isr@i^0,f,c
 21236  0141DA  2A11               	incf	(Timers_Isr@i+1)^0,f,c
 21237                           
 21238                           ; BSR set to: 1
 21239  0141DC  BE11               	btfsc	(Timers_Isr@i+1)^0,7,c
 21240  0141DE  D7E3               	goto	i2l7875
 21241  0141E0  5011               	movf	(Timers_Isr@i+1)^0,w,c
 21242  0141E2  E105               	bnz	i2u659_40
 21243  0141E4  0E06               	movlw	6
 21244  0141E6  5C10               	subwf	Timers_Isr@i^0,w,c
 21245  0141E8  B0D8               	btfsc	status,0,c
 21246  0141EA  0012               	return	
 21247  0141EC  D7DC               	goto	i2l7875
 21248  0141EE                     i2u659_40:
 21249                           
 21250                           ; BSR set to: 1
 21251  0141EE  0012               	return		;funcret
 21252  0141F0                     __end_of_Timers_Isr:
 21253                           	callstack 0
 21254                           
 21255 ;; *************** function _TMR5_WriteTimer *****************
 21256 ;; Defined at:
 21257 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 21258 ;; Parameters:    Size  Location     Type
 21259 ;;  timerVal        2   13[COMRAM] unsigned short 
 21260 ;; Auto vars:     Size  Location     Type
 21261 ;;		None
 21262 ;; Return value:  Size  Location     Type
 21263 ;;                  1    wreg      void 
 21264 ;; Registers used:
 21265 ;;		None
 21266 ;; Tracked objects:
 21267 ;;		On entry : 3F/39
 21268 ;;		On exit  : 3F/39
 21269 ;;		Unchanged: 3E/0
 21270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21275 ;;Total ram usage:        2 bytes
 21276 ;; Hardware stack levels used: 1
 21277 ;; This function calls:
 21278 ;;		Nothing
 21279 ;; This function is called by:
 21280 ;;		_TMR5_ISR
 21281 ;; This function uses a non-reentrant model
 21282 ;;
 21283                           
 21284                           	psect	text132
 21285  014B54                     __ptext132:
 21286                           	callstack 0
 21287  014B54                     _TMR5_WriteTimer:
 21288                           	callstack 16
 21289                           
 21290                           ; BSR set to: 57
 21291                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 21292                           
 21293                           ; BSR set to: 1
 21294                           ;incstack = 0
 21295  014B54  A49A               	btfss	154,2,c	;volatile
 21296  014B56  D009               	goto	i2l576
 21297                           
 21298                           ; BSR set to: 57
 21299                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 21300  014B58  909A               	bcf	154,0,c	;volatile
 21301                           
 21302                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 21303  014B5A  0060  F03F  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 21304                           
 21305                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 21306  014B60  0060  F03B  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 21307                           
 21308                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 21309  014B66  809A               	bsf	154,0,c	;volatile
 21310                           
 21311                           ;mcc_generated_files/tmr5.c: 141:     }
 21312  014B68  0012               	return	
 21313  014B6A                     i2l576:
 21314                           
 21315                           ; BSR set to: 57
 21316                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 21317  014B6A  0060  F03F  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 21318                           
 21319                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 21320  014B70  0060  F03B  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 21321                           
 21322                           ; BSR set to: 57
 21323  014B76  0012               	return		;funcret
 21324  014B78                     __end_of_TMR5_WriteTimer:
 21325                           	callstack 0
 21326                           
 21327 ;; *************** function _DMA1_DMASCNTI_ISR *****************
 21328 ;; Defined at:
 21329 ;;		line 170 in file "mcc_generated_files/dma1.c"
 21330 ;; Parameters:    Size  Location     Type
 21331 ;;		None
 21332 ;; Auto vars:     Size  Location     Type
 21333 ;;		None
 21334 ;; Return value:  Size  Location     Type
 21335 ;;                  1    wreg      void 
 21336 ;; Registers used:
 21337 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21338 ;; Tracked objects:
 21339 ;;		On entry : 0/0
 21340 ;;		On exit  : 0/0
 21341 ;;		Unchanged: 0/0
 21342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21347 ;;Total ram usage:        2 bytes
 21348 ;; Hardware stack levels used: 1
 21349 ;; Hardware stack levels required when called: 1
 21350 ;; This function calls:
 21351 ;;		Absolute function
 21352 ;;		_DMA1_DefaultInterruptHandler
 21353 ;;		_source_dma_done
 21354 ;; This function is called by:
 21355 ;;		Interrupt level 2
 21356 ;; This function uses a non-reentrant model
 21357 ;;
 21358                           
 21359                           	psect	text133
 21360  014568                     __ptext133:
 21361                           	callstack 0
 21362  014568                     _DMA1_DMASCNTI_ISR:
 21363                           	callstack 16
 21364                           
 21365                           ; BSR set to: 57
 21366                           ;incstack = 0
 21367  014568  006F FFE8  F014    	movff	pclath,??_DMA1_DMASCNTI_ISR
 21368  01456E  006F FFEC  F015    	movff	pclatu,??_DMA1_DMASCNTI_ISR+1
 21369                           
 21370                           ;mcc_generated_files/dma1.c: 173:     PIR2bits.DMA1SCNTIF = 0;
 21371  014574  0139               	movlb	57	; () banked
 21372  014576  91A2               	bcf	162,0,b	;volatile
 21373                           
 21374                           ; BSR set to: 57
 21375                           ;mcc_generated_files/dma1.c: 175:     if (DMA1_SCNTI_InterruptHandler)
 21376  014578  0101               	movlb	1	; () banked
 21377  01457A  5135               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 21378  01457C  1136               	iorwf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 21379  01457E  1137               	iorwf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 21380  014580  B4D8               	btfsc	status,2,c
 21381  014582  D00C               	goto	i2u676_49
 21382                           
 21383                           ; BSR set to: 1
 21384                           ;mcc_generated_files/dma1.c: 176:             DMA1_SCNTI_InterruptHandler();
 21385  014584  D801               	call	i2u676_48
 21386  014586  D00A               	goto	i2u676_49
 21387  014588                     i2u676_48:
 21388  014588  0005               	push	
 21389  01458A  6EFA               	movwf	pclath,c
 21390  01458C  5135               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 21391  01458E  6EFD               	movwf	tosl,c
 21392  014590  5136               	movf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 21393  014592  6EFE               	movwf	tosh,c
 21394  014594  5137               	movf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 21395  014596  6EFF               	movwf	tosu,c
 21396  014598  50FA               	movf	pclath,w,c
 21397  01459A  0012               	return		;indir
 21398  01459C                     i2u676_49:
 21399  01459C  0060  F057  FFFB   	movff	??_DMA1_DMASCNTI_ISR+1,pclatu
 21400  0145A2  0060  F053  FFFA   	movff	??_DMA1_DMASCNTI_ISR,pclath
 21401  0145A8  0011               	retfie		f
 21402  0145AA                     __end_of_DMA1_DMASCNTI_ISR:
 21403                           	callstack 0
 21404                           
 21405 ;; *************** function _DMA1_DefaultInterruptHandler *****************
 21406 ;; Defined at:
 21407 ;;		line 184 in file "mcc_generated_files/dma1.c"
 21408 ;; Parameters:    Size  Location     Type
 21409 ;;		None
 21410 ;; Auto vars:     Size  Location     Type
 21411 ;;		None
 21412 ;; Return value:  Size  Location     Type
 21413 ;;                  1    wreg      void 
 21414 ;; Registers used:
 21415 ;;		None
 21416 ;; Tracked objects:
 21417 ;;		On entry : 3F/1
 21418 ;;		On exit  : 3F/1
 21419 ;;		Unchanged: 3F/0
 21420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21425 ;;Total ram usage:        0 bytes
 21426 ;; Hardware stack levels used: 1
 21427 ;; This function calls:
 21428 ;;		Nothing
 21429 ;; This function is called by:
 21430 ;;		_DMA1_Initialize
 21431 ;;		_DMA1_DMASCNTI_ISR
 21432 ;; This function uses a non-reentrant model
 21433 ;;
 21434                           
 21435                           	psect	text134
 21436  014F30                     __ptext134:
 21437                           	callstack 0
 21438  014F30                     _DMA1_DefaultInterruptHandler:
 21439                           	callstack 16
 21440                           
 21441                           ; BSR set to: 1
 21442                           
 21443                           ;incstack = 0
 21444  014F30  0012               	return		;funcret
 21445  014F32                     __end_of_DMA1_DefaultInterruptHandler:
 21446                           	callstack 0
 21447                           
 21448 ;; *************** function _source_dma_done *****************
 21449 ;; Defined at:
 21450 ;;		line 304 in file "eadog.c"
 21451 ;; Parameters:    Size  Location     Type
 21452 ;;		None
 21453 ;; Auto vars:     Size  Location     Type
 21454 ;;		None
 21455 ;; Return value:  Size  Location     Type
 21456 ;;                  1    wreg      void 
 21457 ;; Registers used:
 21458 ;;		None
 21459 ;; Tracked objects:
 21460 ;;		On entry : 3F/1
 21461 ;;		On exit  : 3F/1
 21462 ;;		Unchanged: 0/0
 21463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21468 ;;Total ram usage:        0 bytes
 21469 ;; Hardware stack levels used: 1
 21470 ;; This function calls:
 21471 ;;		Nothing
 21472 ;; This function is called by:
 21473 ;;		_main
 21474 ;;		_DMA1_DMASCNTI_ISR
 21475 ;; This function uses a non-reentrant model
 21476 ;;
 21477                           
 21478                           	psect	text135
 21479  014F1A                     __ptext135:
 21480                           	callstack 0
 21481  014F1A                     _source_dma_done:
 21482                           	callstack 16
 21483                           
 21484                           ; BSR set to: 1
 21485                           ;eadog.c: 306:  spi_link.LCD_DATA = 0;
 21486                           
 21487                           ; BSR set to: 1
 21488                           ;incstack = 0
 21489  014F1A  9700               	bcf	_spi_link& (0+255),3,b	;volatile
 21490                           
 21491                           ; BSR set to: 1
 21492  014F1C  0012               	return		;funcret
 21493  014F1E                     __end_of_source_dma_done:
 21494                           	callstack 0
 21495                           
 21496 ;; *************** function _UART1_framing_err_vect_isr *****************
 21497 ;; Defined at:
 21498 ;;		line 259 in file "mcc_generated_files/uart1.c"
 21499 ;; Parameters:    Size  Location     Type
 21500 ;;		None
 21501 ;; Auto vars:     Size  Location     Type
 21502 ;;		None
 21503 ;; Return value:  Size  Location     Type
 21504 ;;                  1    wreg      void 
 21505 ;; Registers used:
 21506 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21507 ;; Tracked objects:
 21508 ;;		On entry : 0/0
 21509 ;;		On exit  : 0/0
 21510 ;;		Unchanged: 0/0
 21511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21516 ;;Total ram usage:        2 bytes
 21517 ;; Hardware stack levels used: 1
 21518 ;; Hardware stack levels required when called: 1
 21519 ;; This function calls:
 21520 ;;		Absolute function
 21521 ;;		_UART1_FramingError_ISR
 21522 ;; This function is called by:
 21523 ;;		Interrupt level 2
 21524 ;; This function uses a non-reentrant model
 21525 ;;
 21526                           
 21527                           	psect	text136
 21528  0147A0                     __ptext136:
 21529                           	callstack 0
 21530  0147A0                     _UART1_framing_err_vect_isr:
 21531                           	callstack 16
 21532                           
 21533                           ; BSR set to: 1
 21534                           ;incstack = 0
 21535  0147A0  006F FFE8  F016    	movff	pclath,??_UART1_framing_err_vect_isr
 21536  0147A6  006F FFEC  F017    	movff	pclatu,??_UART1_framing_err_vect_isr+1
 21537                           
 21538                           ;mcc_generated_files/uart1.c: 261:     if(UART1_FramingErrorInterruptHandler)
 21539  0147AC  5024               	movf	_UART1_FramingErrorInterruptHandler^0,w,c
 21540  0147AE  1025               	iorwf	(_UART1_FramingErrorInterruptHandler+1)^0,w,c
 21541  0147B0  1026               	iorwf	(_UART1_FramingErrorInterruptHandler+2)^0,w,c
 21542  0147B2  B4D8               	btfsc	status,2,c
 21543  0147B4  D00C               	goto	i2u333_49
 21544                           
 21545                           ;mcc_generated_files/uart1.c: 262:     {;mcc_generated_files/uart1.c: 263:         UART1
      +                          _FramingErrorInterruptHandler();
 21546  0147B6  D801               	call	i2u333_48
 21547  0147B8  D00A               	goto	i2u333_49
 21548  0147BA                     i2u333_48:
 21549  0147BA  0005               	push	
 21550  0147BC  6EFA               	movwf	pclath,c
 21551  0147BE  5024               	movf	_UART1_FramingErrorInterruptHandler^0,w,c
 21552  0147C0  6EFD               	movwf	tosl,c
 21553  0147C2  5025               	movf	(_UART1_FramingErrorInterruptHandler+1)^0,w,c
 21554  0147C4  6EFE               	movwf	tosh,c
 21555  0147C6  5026               	movf	(_UART1_FramingErrorInterruptHandler+2)^0,w,c
 21556  0147C8  6EFF               	movwf	tosu,c
 21557  0147CA  50FA               	movf	pclath,w,c
 21558  0147CC  0012               	return		;indir
 21559  0147CE                     i2u333_49:
 21560  0147CE  0060  F05F  FFFB   	movff	??_UART1_framing_err_vect_isr+1,pclatu
 21561  0147D4  0060  F05B  FFFA   	movff	??_UART1_framing_err_vect_isr,pclath
 21562  0147DA  0011               	retfie		f
 21563  0147DC                     __end_of_UART1_framing_err_vect_isr:
 21564                           	callstack 0
 21565                           
 21566 ;; *************** function _UART1_FramingError_ISR *****************
 21567 ;; Defined at:
 21568 ;;		line 349 in file "mcc_generated_files/uart1.c"
 21569 ;; Parameters:    Size  Location     Type
 21570 ;;		None
 21571 ;; Auto vars:     Size  Location     Type
 21572 ;;		None
 21573 ;; Return value:  Size  Location     Type
 21574 ;;                  1    wreg      void 
 21575 ;; Registers used:
 21576 ;;		wreg, status,2
 21577 ;; Tracked objects:
 21578 ;;		On entry : 0/0
 21579 ;;		On exit  : 3F/3D
 21580 ;;		Unchanged: 0/0
 21581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21586 ;;Total ram usage:        0 bytes
 21587 ;; Hardware stack levels used: 1
 21588 ;; This function calls:
 21589 ;;		Nothing
 21590 ;; This function is called by:
 21591 ;;		_UART1_Initialize
 21592 ;;		_UART1_framing_err_vect_isr
 21593 ;; This function uses a non-reentrant model
 21594 ;;
 21595                           
 21596                           	psect	text137
 21597  014EF4                     __ptext137:
 21598                           	callstack 0
 21599  014EF4                     _UART1_FramingError_ISR:
 21600                           	callstack 16
 21601                           
 21602                           ;mcc_generated_files/uart1.c: 352:     U1ERRIR = 0;
 21603                           
 21604                           ;incstack = 0
 21605  014EF4  0E00               	movlw	0
 21606  014EF6  013D               	movlb	61	; () banked
 21607  014EF8  6FF9               	movwf	249,b	;volatile
 21608                           
 21609                           ; BSR set to: 61
 21610  014EFA  0012               	return		;funcret
 21611  014EFC                     __end_of_UART1_FramingError_ISR:
 21612                           	callstack 0
 21613                           
 21614 ;; *************** function _UART1_vect_isr *****************
 21615 ;; Defined at:
 21616 ;;		line 267 in file "mcc_generated_files/uart1.c"
 21617 ;; Parameters:    Size  Location     Type
 21618 ;;		None
 21619 ;; Auto vars:     Size  Location     Type
 21620 ;;		None
 21621 ;; Return value:  Size  Location     Type
 21622 ;;                  1    wreg      void 
 21623 ;; Registers used:
 21624 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21625 ;; Tracked objects:
 21626 ;;		On entry : 0/0
 21627 ;;		On exit  : 0/0
 21628 ;;		Unchanged: 0/0
 21629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21634 ;;Total ram usage:        2 bytes
 21635 ;; Hardware stack levels used: 1
 21636 ;; Hardware stack levels required when called: 1
 21637 ;; This function calls:
 21638 ;;		Absolute function
 21639 ;;		_UART1_UartInterrupt_ISR
 21640 ;; This function is called by:
 21641 ;;		Interrupt level 2
 21642 ;; This function uses a non-reentrant model
 21643 ;;
 21644                           
 21645                           	psect	text138
 21646  0147DC                     __ptext138:
 21647                           	callstack 0
 21648  0147DC                     _UART1_vect_isr:
 21649                           	callstack 16
 21650                           
 21651                           ; BSR set to: 61
 21652                           ;incstack = 0
 21653  0147DC  006F FFE8  F018    	movff	pclath,??_UART1_vect_isr
 21654  0147E2  006F FFEC  F019    	movff	pclatu,??_UART1_vect_isr+1
 21655                           
 21656                           ;mcc_generated_files/uart1.c: 269:     if(UART1_UARTInterruptHandler)
 21657  0147E8  5021               	movf	_UART1_UARTInterruptHandler^0,w,c
 21658  0147EA  1022               	iorwf	(_UART1_UARTInterruptHandler+1)^0,w,c
 21659  0147EC  1023               	iorwf	(_UART1_UARTInterruptHandler+2)^0,w,c
 21660  0147EE  B4D8               	btfsc	status,2,c
 21661  0147F0  D00C               	goto	i2u335_49
 21662                           
 21663                           ;mcc_generated_files/uart1.c: 270:     {;mcc_generated_files/uart1.c: 271:         UART1
      +                          _UARTInterruptHandler();
 21664  0147F2  D801               	call	i2u335_48
 21665  0147F4  D00A               	goto	i2u335_49
 21666  0147F6                     i2u335_48:
 21667  0147F6  0005               	push	
 21668  0147F8  6EFA               	movwf	pclath,c
 21669  0147FA  5021               	movf	_UART1_UARTInterruptHandler^0,w,c
 21670  0147FC  6EFD               	movwf	tosl,c
 21671  0147FE  5022               	movf	(_UART1_UARTInterruptHandler+1)^0,w,c
 21672  014800  6EFE               	movwf	tosh,c
 21673  014802  5023               	movf	(_UART1_UARTInterruptHandler+2)^0,w,c
 21674  014804  6EFF               	movwf	tosu,c
 21675  014806  50FA               	movf	pclath,w,c
 21676  014808  0012               	return		;indir
 21677  01480A                     i2u335_49:
 21678  01480A  0060  F067  FFFB   	movff	??_UART1_vect_isr+1,pclatu
 21679  014810  0060  F063  FFFA   	movff	??_UART1_vect_isr,pclath
 21680  014816  0011               	retfie		f
 21681  014818                     __end_of_UART1_vect_isr:
 21682                           	callstack 0
 21683                           
 21684 ;; *************** function _UART1_UartInterrupt_ISR *****************
 21685 ;; Defined at:
 21686 ;;		line 358 in file "mcc_generated_files/uart1.c"
 21687 ;; Parameters:    Size  Location     Type
 21688 ;;		None
 21689 ;; Auto vars:     Size  Location     Type
 21690 ;;		None
 21691 ;; Return value:  Size  Location     Type
 21692 ;;                  1    wreg      void 
 21693 ;; Registers used:
 21694 ;;		None
 21695 ;; Tracked objects:
 21696 ;;		On entry : 0/0
 21697 ;;		On exit  : 3F/3D
 21698 ;;		Unchanged: 0/0
 21699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21704 ;;Total ram usage:        0 bytes
 21705 ;; Hardware stack levels used: 1
 21706 ;; This function calls:
 21707 ;;		Nothing
 21708 ;; This function is called by:
 21709 ;;		_UART1_Initialize
 21710 ;;		_UART1_vect_isr
 21711 ;; This function uses a non-reentrant model
 21712 ;;
 21713                           
 21714                           	psect	text139
 21715  014F14                     __ptext139:
 21716                           	callstack 0
 21717  014F14                     _UART1_UartInterrupt_ISR:
 21718                           	callstack 16
 21719                           
 21720                           ;mcc_generated_files/uart1.c: 361:     U1UIRbits.WUIF = 0;
 21721                           
 21722                           ;incstack = 0
 21723  014F14  013D               	movlb	61	; () banked
 21724  014F16  9FF8               	bcf	248,7,b	;volatile
 21725                           
 21726                           ; BSR set to: 61
 21727  014F18  0012               	return		;funcret
 21728  014F1A                     __end_of_UART1_UartInterrupt_ISR:
 21729                           	callstack 0
 21730                           
 21731                           ;
 21732                           ; Interrupt Vector Table @ 0x8
 21733                           ;
 21734                           
 21735                           	psect	ivt0x8
 21736  000008                     __pivt0x8:
 21737                           	callstack 0
 21738  000008                     ivt0x8_base:
 21739                           	callstack 0
 21740                           
 21741                           ; Vector 0 : SWINT
 21742  000008  53CB               	dw	_Default_ISR shr (0+2)
 21743                           
 21744                           ; Vector 1 : HLVD
 21745  00000A  53CB               	dw	_Default_ISR shr (0+2)
 21746                           
 21747                           ; Vector 2 : OSF
 21748  00000C  53CB               	dw	_Default_ISR shr (0+2)
 21749                           
 21750                           ; Vector 3 : CSW
 21751  00000E  53CB               	dw	_Default_ISR shr (0+2)
 21752                           
 21753                           ; Vector 4 : NVM
 21754  000010  53CB               	dw	_Default_ISR shr (0+2)
 21755                           
 21756                           ; Vector 5 : SCAN
 21757  000012  53CB               	dw	_Default_ISR shr (0+2)
 21758                           
 21759                           ; Vector 6 : CRC
 21760  000014  53CB               	dw	_Default_ISR shr (0+2)
 21761                           
 21762                           ; Vector 7 : IOC
 21763  000016  53CB               	dw	_Default_ISR shr (0+2)
 21764                           
 21765                           ; Vector 8 : INT0
 21766  000018  53CB               	dw	_Default_ISR shr (0+2)
 21767                           
 21768                           ; Vector 9 : ZCD
 21769  00001A  53CB               	dw	_Default_ISR shr (0+2)
 21770                           
 21771                           ; Vector 10 : AD
 21772  00001C  5149               	dw	_ADCC_ISR shr (0+2)
 21773                           
 21774                           ; Vector 11 : ADT
 21775  00001E  53CB               	dw	_Default_ISR shr (0+2)
 21776                           
 21777                           ; Vector 12 : CMP1
 21778  000020  53CB               	dw	_Default_ISR shr (0+2)
 21779                           
 21780                           ; Vector 13 : SMT1
 21781  000022  53CB               	dw	_Default_ISR shr (0+2)
 21782                           
 21783                           ; Vector 14 : SMT1PRA
 21784  000024  53CB               	dw	_Default_ISR shr (0+2)
 21785                           
 21786                           ; Vector 15 : SMT1PRW
 21787  000026  53CB               	dw	_Default_ISR shr (0+2)
 21788                           
 21789                           ; Vector 16 : DMA1SCNT
 21790  000028  515A               	dw	_DMA1_DMASCNTI_ISR shr (0+2)
 21791                           
 21792                           ; Vector 17 : DMA1DCNT
 21793  00002A  53CB               	dw	_Default_ISR shr (0+2)
 21794                           
 21795                           ; Vector 18 : DMA1OR
 21796  00002C  53CB               	dw	_Default_ISR shr (0+2)
 21797                           
 21798                           ; Vector 19 : DMA1A
 21799  00002E  53CB               	dw	_Default_ISR shr (0+2)
 21800                           
 21801                           ; Vector 20 : SPI1RX
 21802  000030  53CB               	dw	_Default_ISR shr (0+2)
 21803                           
 21804                           ; Vector 21 : SPI1TX
 21805  000032  53CB               	dw	_Default_ISR shr (0+2)
 21806                           
 21807                           ; Vector 22 : SPI1
 21808  000034  53CB               	dw	_Default_ISR shr (0+2)
 21809                           
 21810                           ; Vector 23 : I2C1RX
 21811  000036  53CB               	dw	_Default_ISR shr (0+2)
 21812                           
 21813                           ; Vector 24 : I2C1TX
 21814  000038  53CB               	dw	_Default_ISR shr (0+2)
 21815                           
 21816                           ; Vector 25 : I2C1
 21817  00003A  53CB               	dw	_Default_ISR shr (0+2)
 21818                           
 21819                           ; Vector 26 : I2C1E
 21820  00003C  53CB               	dw	_Default_ISR shr (0+2)
 21821                           
 21822                           ; Vector 27 : U1RX
 21823  00003E  5115               	dw	_UART1_rx_vect_isr shr (0+2)
 21824                           
 21825                           ; Vector 28 : U1TX
 21826  000040  5103               	dw	_UART1_tx_vect_isr shr (0+2)
 21827                           
 21828                           ; Vector 29 : U1E
 21829  000042  51E8               	dw	_UART1_framing_err_vect_isr shr (0+2)
 21830                           
 21831                           ; Vector 30 : U1
 21832  000044  51F7               	dw	_UART1_vect_isr shr (0+2)
 21833                           
 21834                           ; Vector 31 : TMR0
 21835  000046  53CB               	dw	_Default_ISR shr (0+2)
 21836                           
 21837                           ; Vector 32 : TMR1
 21838  000048  53CB               	dw	_Default_ISR shr (0+2)
 21839                           
 21840                           ; Vector 33 : TMR1G
 21841  00004A  53CB               	dw	_Default_ISR shr (0+2)
 21842                           
 21843                           ; Vector 34 : TMR2
 21844  00004C  53CB               	dw	_Default_ISR shr (0+2)
 21845                           
 21846                           ; Vector 35 : CCP1
 21847  00004E  53CB               	dw	_Default_ISR shr (0+2)
 21848                           
 21849                           ; Vector 36 : Undefined
 21850  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 21851                           
 21852                           ; Vector 37 : NCO1
 21853  000052  53CB               	dw	_Default_ISR shr (0+2)
 21854                           
 21855                           ; Vector 38 : CWG1
 21856  000054  53CB               	dw	_Default_ISR shr (0+2)
 21857                           
 21858                           ; Vector 39 : CLC1
 21859  000056  53CB               	dw	_Default_ISR shr (0+2)
 21860                           
 21861                           ; Vector 40 : INT1
 21862  000058  53CB               	dw	_Default_ISR shr (0+2)
 21863                           
 21864                           ; Vector 41 : CMP2
 21865  00005A  53CB               	dw	_Default_ISR shr (0+2)
 21866                           
 21867                           ; Vector 42 : DMA2SCNT
 21868  00005C  53CB               	dw	_Default_ISR shr (0+2)
 21869                           
 21870                           ; Vector 43 : DMA2DCNT
 21871  00005E  53CB               	dw	_Default_ISR shr (0+2)
 21872                           
 21873                           ; Vector 44 : DMA2OR
 21874  000060  53CB               	dw	_Default_ISR shr (0+2)
 21875                           
 21876                           ; Vector 45 : DMA2A
 21877  000062  53CB               	dw	_Default_ISR shr (0+2)
 21878                           
 21879                           ; Vector 46 : I2C2RX
 21880  000064  53CB               	dw	_Default_ISR shr (0+2)
 21881                           
 21882                           ; Vector 47 : I2C2TX
 21883  000066  53CB               	dw	_Default_ISR shr (0+2)
 21884                           
 21885                           ; Vector 48 : I2C2
 21886  000068  53CB               	dw	_Default_ISR shr (0+2)
 21887                           
 21888                           ; Vector 49 : I2C2E
 21889  00006A  53CB               	dw	_Default_ISR shr (0+2)
 21890                           
 21891                           ; Vector 50 : U2RX
 21892  00006C  53CB               	dw	_Default_ISR shr (0+2)
 21893                           
 21894                           ; Vector 51 : U2TX
 21895  00006E  53CB               	dw	_Default_ISR shr (0+2)
 21896                           
 21897                           ; Vector 52 : U2E
 21898  000070  53CB               	dw	_Default_ISR shr (0+2)
 21899                           
 21900                           ; Vector 53 : U2
 21901  000072  53CB               	dw	_Default_ISR shr (0+2)
 21902                           
 21903                           ; Vector 54 : TMR3
 21904  000074  53CB               	dw	_Default_ISR shr (0+2)
 21905                           
 21906                           ; Vector 55 : TMR3G
 21907  000076  53CB               	dw	_Default_ISR shr (0+2)
 21908                           
 21909                           ; Vector 56 : TMR4
 21910  000078  53CB               	dw	_Default_ISR shr (0+2)
 21911                           
 21912                           ; Vector 57 : CCP2
 21913  00007A  53CB               	dw	_Default_ISR shr (0+2)
 21914                           
 21915                           ; Vector 58 : Undefined
 21916  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 21917                           
 21918                           ; Vector 59 : CWG2
 21919  00007E  53CB               	dw	_Default_ISR shr (0+2)
 21920                           
 21921                           ; Vector 60 : CLC2
 21922  000080  53CB               	dw	_Default_ISR shr (0+2)
 21923                           
 21924                           ; Vector 61 : INT2
 21925  000082  53CB               	dw	_Default_ISR shr (0+2)
 21926                           
 21927                           ; Vector 62 : Undefined
 21928  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 21929                           
 21930                           ; Vector 63 : Undefined
 21931  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 21932                           
 21933                           ; Vector 64 : Undefined
 21934  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 21935                           
 21936                           ; Vector 65 : Undefined
 21937  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 21938                           
 21939                           ; Vector 66 : Undefined
 21940  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 21941                           
 21942                           ; Vector 67 : Undefined
 21943  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 21944                           
 21945                           ; Vector 68 : Undefined
 21946  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 21947                           
 21948                           ; Vector 69 : Undefined
 21949  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 21950                           
 21951                           ; Vector 70 : TMR5
 21952  000094  50CB               	dw	_TMR5_ISR shr (0+2)
 21953                           
 21954                           ; Vector 71 : TMR5G
 21955  000096  53CB               	dw	_Default_ISR shr (0+2)
 21956                           
 21957                           ; Vector 72 : TMR6
 21958  000098  5223               	dw	_TMR6_ISR shr (0+2)
 21959                           
 21960                           ; Vector 73 : CCP3
 21961  00009A  53CB               	dw	_Default_ISR shr (0+2)
 21962                           
 21963                           ; Vector 74 : CWG3
 21964  00009C  53CB               	dw	_Default_ISR shr (0+2)
 21965                           
 21966                           ; Vector 75 : CLC3
 21967  00009E  53CB               	dw	_Default_ISR shr (0+2)
 21968                           
 21969                           ; Vector 76 : Undefined
 21970  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 21971                           
 21972                           ; Vector 77 : Undefined
 21973  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 21974                           
 21975                           ; Vector 78 : Undefined
 21976  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 21977                           
 21978                           ; Vector 79 : Undefined
 21979  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 21980                           
 21981                           ; Vector 80 : CCP4
 21982  0000A8  53CB               	dw	_Default_ISR shr (0+2)
 21983                           
 21984                           ; Vector 81 : CLC4
 21985  0000AA  53CB               	dw	_Default_ISR shr (0+2)
 21986  0000AC                     ivt0x8_undefint:
 21987                           	callstack 0
 21988  0000AC  00FF               	reset	
 21989                           
 21990                           	psect	text140
 21991  000000                     __ptext140:
 21992                           	callstack 0
 21993                           
 21994                           	psect	rparam
 21995  0000                     
 21996                           	psect	idloc
 21997                           
 21998                           ;Config register IDLOC0 @ 0x200000
 21999                           ;	unspecified, using default values
 22000  200000                     	org	2097152
 22001  200000  0FFF               	dw	4095
 22002                           
 22003                           ;Config register IDLOC1 @ 0x200002
 22004                           ;	unspecified, using default values
 22005  200002                     	org	2097154
 22006  200002  0FFF               	dw	4095
 22007                           
 22008                           ;Config register IDLOC2 @ 0x200004
 22009                           ;	unspecified, using default values
 22010  200004                     	org	2097156
 22011  200004  0FFF               	dw	4095
 22012                           
 22013                           ;Config register IDLOC3 @ 0x200006
 22014                           ;	unspecified, using default values
 22015  200006                     	org	2097158
 22016  200006  0FFF               	dw	4095
 22017                           
 22018                           ;Config register IDLOC4 @ 0x200008
 22019                           ;	unspecified, using default values
 22020  200008                     	org	2097160
 22021  200008  0FFF               	dw	4095
 22022                           
 22023                           ;Config register IDLOC5 @ 0x20000A
 22024                           ;	unspecified, using default values
 22025  20000A                     	org	2097162
 22026  20000A  0FFF               	dw	4095
 22027                           
 22028                           ;Config register IDLOC6 @ 0x20000C
 22029                           ;	unspecified, using default values
 22030  20000C                     	org	2097164
 22031  20000C  0FFF               	dw	4095
 22032                           
 22033                           ;Config register IDLOC7 @ 0x20000E
 22034                           ;	unspecified, using default values
 22035  20000E                     	org	2097166
 22036  20000E  0FFF               	dw	4095
 22037                           
 22038                           	psect	config
 22039                           
 22040                           ;Config register CONFIG1L @ 0x300000
 22041                           ;	External Oscillator Selection
 22042                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 22043                           ;	Reset Oscillator Selection
 22044                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 22045  300000                     	org	3145728
 22046  300000  AF                 	db	175
 22047                           
 22048                           ;Config register CONFIG1H @ 0x300001
 22049                           ;	Clock out Enable bit
 22050                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 22051                           ;	PRLOCKED One-Way Set Enable bit
 22052                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 22053                           ;	Clock Switch Enable bit
 22054                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 22055                           ;	Fail-Safe Clock Monitor Enable bit
 22056                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 22057  300001                     	org	3145729
 22058  300001  FF                 	db	255
 22059                           
 22060                           ;Config register CONFIG2L @ 0x300002
 22061                           ;	MCLR Enable bit
 22062                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 22063                           ;	Power-up timer selection bits
 22064                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 22065                           ;	Multi-vector enable bit
 22066                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 22067                           ;	IVTLOCK bit One-way set enable bit
 22068                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 22069                           ;	Low Power BOR Enable bit
 22070                           ;	LPBOREN = OFF, ULPBOR disabled
 22071                           ;	Brown-out Reset Enable bits
 22072                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 22073  300002                     	org	3145730
 22074  300002  FF                 	db	255
 22075                           
 22076                           ;Config register CONFIG2H @ 0x300003
 22077                           ;	Brown-out Reset Voltage Selection bits
 22078                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 22079                           ;	ZCD Disable bit
 22080                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 22081                           ;	PPSLOCK bit One-Way Set Enable bit
 22082                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 22083                           ;	Stack Full/Underflow Reset Enable bit
 22084                           ;	STVREN = ON, Stack full/underflow will cause Reset
 22085                           ;	Debugger Enable bit
 22086                           ;	DEBUG = OFF, Background debugger disabled
 22087                           ;	Extended Instruction Set Enable bit
 22088                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 22089  300003                     	org	3145731
 22090  300003  FF                 	db	255
 22091                           
 22092                           ;Config register CONFIG3L @ 0x300004
 22093                           ;	WDT Period selection bits
 22094                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 22095                           ;	WDT operating mode
 22096                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 22097  300004                     	org	3145732
 22098  300004  9F                 	db	159
 22099                           
 22100                           ;Config register CONFIG3H @ 0x300005
 22101                           ;	WDT Window Select bits
 22102                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 22103                           ;	WDT input clock selector
 22104                           ;	WDTCCS = SC, Software Control
 22105  300005                     	org	3145733
 22106  300005  FF                 	db	255
 22107                           
 22108                           ;Config register CONFIG4L @ 0x300006
 22109                           ;	Boot Block Size selection bits
 22110                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 22111                           ;	Boot Block enable bit
 22112                           ;	BBEN = OFF, Boot block disabled
 22113                           ;	Storage Area Flash enable bit
 22114                           ;	SAFEN = OFF, SAF disabled
 22115                           ;	Application Block write protection bit
 22116                           ;	WRTAPP = OFF, Application Block not write protected
 22117  300006                     	org	3145734
 22118  300006  FF                 	db	255
 22119                           
 22120                           ;Config register CONFIG4H @ 0x300007
 22121                           ;	Boot Block Write Protection bit
 22122                           ;	WRTB = OFF, Boot Block not write-protected
 22123                           ;	Configuration Register Write Protection bit
 22124                           ;	WRTC = OFF, Configuration registers not write-protected
 22125                           ;	Data EEPROM Write Protection bit
 22126                           ;	WRTD = OFF, Data EEPROM not write-protected
 22127                           ;	SAF Write protection bit
 22128                           ;	WRTSAF = OFF, SAF not Write Protected
 22129                           ;	Low Voltage Programming Enable bit
 22130                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 22131  300007                     	org	3145735
 22132  300007  DF                 	db	223
 22133                           
 22134                           ;Config register CONFIG5L @ 0x300008
 22135                           ;	PFM and Data EEPROM Code Protection bit
 22136                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 22137  300008                     	org	3145736
 22138  300008  FF                 	db	255
 22139                           
 22140                           ;Config register CONFIG5H @ 0x300009
 22141                           ;	unspecified, using default values
 22142  300009                     	org	3145737
 22143  300009  FF                 	db	255
 22144                           tosu	equ	0x3FFF
 22145                           tosh	equ	0x3FFE
 22146                           tosl	equ	0x3FFD
 22147                           stkptr	equ	0x3FFC
 22148                           pclatu	equ	0x3FFB
 22149                           pclath	equ	0x3FFA
 22150                           pcl	equ	0x3FF9
 22151                           tblptru	equ	0x3FF8
 22152                           tblptrh	equ	0x3FF7
 22153                           tblptrl	equ	0x3FF6
 22154                           tablat	equ	0x3FF5
 22155                           prodh	equ	0x3FF4
 22156                           prodl	equ	0x3FF3
 22157                           indf0	equ	0x3FEF
 22158                           postinc0	equ	0x3FEE
 22159                           postdec0	equ	0x3FED
 22160                           preinc0	equ	0x3FEC
 22161                           plusw0	equ	0x3FEB
 22162                           fsr0h	equ	0x3FEA
 22163                           fsr0l	equ	0x3FE9
 22164                           wreg	equ	0x3FE8
 22165                           indf1	equ	0x3FE7
 22166                           postinc1	equ	0x3FE6
 22167                           postdec1	equ	0x3FE5
 22168                           preinc1	equ	0x3FE4
 22169                           plusw1	equ	0x3FE3
 22170                           fsr1h	equ	0x3FE2
 22171                           fsr1l	equ	0x3FE1
 22172                           bsr	equ	0x3FE0
 22173                           indf2	equ	0x3FDF
 22174                           postinc2	equ	0x3FDE
 22175                           postdec2	equ	0x3FDD
 22176                           preinc2	equ	0x3FDC
 22177                           plusw2	equ	0x3FDB
 22178                           fsr2h	equ	0x3FDA
 22179                           fsr2l	equ	0x3FD9
 22180                           status	equ	0x3FD8

Data Sizes:
    Strings     470
    Constant    47
    Data        1129
    BSS         4873
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      64
    BANK0           160    148     159
    BANK1           256     35     203
    BANK2           256      0     218
    BANK3           256      0     131
    BANK4           256      0     255
    BANK5           256      0     131
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    fh_ps@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_po@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pp@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pu@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pd@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pl@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_p0@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_p1@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    S2693$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK5[128]), STR_45(CODE[4]), STR_40(CODE[3]), cli_ctx(BANK5[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK5[128]), STR_45(CODE[4]), STR_40(CODE[3]), cli_ctx(BANK5[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 107
		 -> vfpfcnvrt@ct(BANK0[3]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[23]), 
		 -> STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), STR_15(CODE[107]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 107
		 -> vfpfcnvrt@ct(BANK0[3]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[23]), 
		 -> STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), STR_15(CODE[107]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 255
		 -> cli_ctx.cmd(BANK5[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), cli_ctx(BANK5[131]), 
		 -> build_version(CODE[14]), buff1(BANK4[255]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 255
		 -> cli_ctx.cmd(BANK5[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), cli_ctx(BANK5[131]), 
		 -> build_version(CODE[14]), buff1(BANK4[255]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_35(CODE[4]), STR_34(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_35(CODE[4]), STR_34(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 255
		 -> STR_29(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), cli_ctx(BANK5[131]), 
		 -> buff1(BANK4[255]), STR_11(CODE[31]), STR_10(CODE[29]), STR_9(CODE[18]), 
		 -> STR_8(CODE[19]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[18]), 
		 -> STR_4(CODE[24]), STR_3(CODE[25]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_15(CODE[107]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 255
		 -> dbuf(BANK1[80]), STR_29(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK5[131]), buff1(BANK4[255]), STR_11(CODE[31]), STR_10(CODE[29]), 
		 -> STR_9(CODE[18]), STR_8(CODE[19]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[18]), STR_4(CODE[24]), STR_3(CODE[25]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_19(CODE[23]), STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[107]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_19(CODE[23]), STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[107]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 107
		 -> STR_19(CODE[23]), STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[107]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), build_version(CODE[14]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), build_version(CODE[14]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), build_version(CODE[14]), 
		 -> STR_2(CODE[9]), STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_19(CODE[23]), STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    S4048$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4048$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    memcpy@s1	PTR const void  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    ringBufS_flush@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_put_dma_cpy@ptr	PTR const unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    ringBufS_put_dma_cpy@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_put_dma@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_init@_this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 1024
		 -> port_data(BIGRAM[1024]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    S3093spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S3093spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(2) Largest target is 1
		 -> cli_read@i(BANK0[1]), main@i(BANK1[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    S2693_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    S2693_t_cmd$cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    fh_pr@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    ps_type_ptr	PTR struct PS_TYPE size(2) Largest target is 40
		 -> ps_type(BANK2[40]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    S2700_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    UART1_SetUartInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_UartInterrupt_ISR(), 

    UART1_SetFramingErrorInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_FramingError_ISR(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_UARTInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_UartInterrupt_ISR(), Absolute function(), 

    UART1_FramingErrorInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_FramingError_ISR(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    DMA1_SetSCNTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), 

    DMA1_SCNTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_DAC1_SetOutput
    _main->_DATAEE_WriteByte
    _main->_display_led
    _utoa->___lomod
    _atoi->_isspace
    _send_lcd_data->_SPI1_ExchangeByte
    _send_lcd_cmd_long->_SPI1_ExchangeByte
    _send_lcd_cmd->_SPI1_ExchangeByte
    _eaDogM_WriteString->_ringBufS_put_dma_cpy
    _send_lcd_data_dma->_ringBufS_put_dma
    _linux_getc->_UART1_Read
    _fh_p1->_DATAEE_WriteByte
    _fh_p0->_DATAEE_WriteByte
    _putch->_UART1_Write
    _WaitMs->_StartTimer
    _WaitMs->_TimerDone
    _SYSTEM_Initialize->_INTERRUPT_Initialize

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _DMA1_DMASCNTI_ISR in COMRAM

    None.

Critical Paths under _UART1_framing_err_vect_isr in COMRAM

    None.

Critical Paths under _UART1_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _scmd_init->_cli_init
    _cli_init->_puts
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->___wmul
    _atoi->_isdigit
    _atoi->_isspace
    _init_display->_ringBufS_init
    _send_lcd_data->_wdtdelay
    _send_lcd_cmd_long->_wdtdelay
    _send_lcd_cmd->_wdtdelay
    _ringBufS_init->_memset
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_ringBufS_put_dma_cpy
    _ringBufS_put_dma_cpy->_memcpy
    _eaDogM_WriteCommand->_send_lcd_cmd_dma
    _send_lcd_cmd_dma->_send_lcd_data_dma
    _send_lcd_data_dma->_ringBufS_flush
    _ringBufS_flush->_memset
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    __cli_interpret_cmd->_fh_p0
    __cli_interpret_cmd->_fh_p1
    __cli_interpret_cmd->_fh_pd
    __cli_interpret_cmd->_fh_pl
    __cli_interpret_cmd->_fh_po
    __cli_interpret_cmd->_fh_pp
    __cli_interpret_cmd->_fh_pr
    __cli_interpret_cmd->_fh_ps
    __cli_interpret_cmd->_fh_pu
    _strncmp->_strlen
    _fh_pu->_puts
    _fh_ps->_puts
    _fh_pr->_puts
    _fh_pp->_puts
    _fh_po->_puts
    _fh_pl->_puts
    _fh_pd->_puts
    _fh_p1->_puts
    _fh_p0->_puts
    _puts->_fputs
    _fputs->_fputc
    _fputc->_putch
    _WaitMs->_StartTimer
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorInterruptHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetUartInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _DMA1_Initialize->_DMA1_SetSCNTIInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK0

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK0

    None.

Critical Paths under _UART1_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK1

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK1

    None.

Critical Paths under _UART1_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK2

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK2

    None.

Critical Paths under _UART1_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK3

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK3

    None.

Critical Paths under _UART1_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK4

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK4

    None.

Critical Paths under _UART1_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK5

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK5

    None.

Critical Paths under _UART1_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK6

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK6

    None.

Critical Paths under _UART1_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK7

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK7

    None.

Critical Paths under _UART1_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK8

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK8

    None.

Critical Paths under _UART1_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK9

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK9

    None.

Critical Paths under _UART1_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK10

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK10

    None.

Critical Paths under _UART1_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK11

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK11

    None.

Critical Paths under _UART1_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK12

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK12

    None.

Critical Paths under _UART1_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK13

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK13

    None.

Critical Paths under _UART1_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK14

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK14

    None.

Critical Paths under _UART1_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK15

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK15

    None.

Critical Paths under _UART1_vect_isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK16

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK16

    None.

Critical Paths under _UART1_vect_isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK17

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK17

    None.

Critical Paths under _UART1_vect_isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK18

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK18

    None.

Critical Paths under _UART1_vect_isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK19

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK19

    None.

Critical Paths under _UART1_vect_isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK20

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK20

    None.

Critical Paths under _UART1_vect_isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK21

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK21

    None.

Critical Paths under _UART1_vect_isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK22

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK22

    None.

Critical Paths under _UART1_vect_isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK23

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK23

    None.

Critical Paths under _UART1_vect_isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK24

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK24

    None.

Critical Paths under _UART1_vect_isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK25

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK25

    None.

Critical Paths under _UART1_vect_isr in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK26

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK26

    None.

Critical Paths under _UART1_vect_isr in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK27

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK27

    None.

Critical Paths under _UART1_vect_isr in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK28

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK28

    None.

Critical Paths under _UART1_vect_isr in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK29

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK29

    None.

Critical Paths under _UART1_vect_isr in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK30

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK30

    None.

Critical Paths under _UART1_vect_isr in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK31

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK31

    None.

Critical Paths under _UART1_vect_isr in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  278643
                                             31 BANK1      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
      _DMA1_SetSCNTIInterruptHandler
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                             _WaitMs
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _linux_getc
                             _printf
                               _puts
                          _scmd_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   72802
                                              6 BANK1     25    13     12
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0    9914
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4    9914
                                             22 BANK0      4     0      4
                             _memset
                               _puts
 ---------------------------------------------------------------------------------
 (1) _printf                                              26     4     22   70730
                                            146 BANK0      2     2      0
                                              6 BANK1     22     0     22
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   70327
                                            144 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    39      5   68698
                                            113 BANK0     31    26      5
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    9866
                                             30 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     536
                                             31 COMRAM     1     1      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     554
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    4250
                                             10 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   41951
                                             51 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1318
                                              6 BANK0      6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     649
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1248
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    8006
                                             19 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     890
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     482
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     686
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5410
                                             39 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4742
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     196
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5062
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1220
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     912
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3620
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     818
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     842
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    2172
                                              6 BANK0     10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     321
                                             31 COMRAM     1     1      0
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     437
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     698
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    6784
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     1      0    1016
                                              4 BANK0      1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0    1016
                                              4 BANK0      1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     1      0    1016
                                              4 BANK0      1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4     932
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      42
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    2804
                                             12 BANK0      2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              7     4      3   15150
                                             19 BANK0      7     4      3
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   3     1      2    5738
                                             16 BANK0      3     1      2
                     _ringBufS_flush
               _ringBufS_put_dma_cpy
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _ringBufS_put_dma_cpy                                 6     1      5    1262
                                             31 COMRAM     1     1      0
                                             11 BANK0      5     0      5
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6     608
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0    4034
                                             17 BANK0      1     1      0
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     1      0    3992
                                             16 BANK0      1     1      0
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data_dma                                    1     1      0    3950
                                             15 BANK0      1     1      0
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_put_dma                                     4     1      3     618
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    3290
                                             12 BANK0      3     0      3
                             _memset
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      42
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   79873
                                             36 BANK0      8     6      2
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2656
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    7386
                                             22 BANK0      3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (1) _linux_getc                                           2     0      2     308
                                              0 BANK0      2     0      2
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      54
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  12    10      2   68709
                                             24 BANK0     12    10      2
                   Absolute function *
                              _fh_p0 *
                              _fh_p1 *
                              _fh_pd *
                              _fh_pl *
                              _fh_po *
                              _fh_pp *
                              _fh_pr *
                              _fh_ps *
                              _fh_pu *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             12     6      6    1404
                                              4 BANK0     12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     816
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _fh_pu                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_ps                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pr                                                2     0      2    6962
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pp                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_po                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pl                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pd                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_p1                                                2     0      2    8663
                                             22 BANK0      2     0      2
                   _DATAEE_WriteByte
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_p0                                                2     0      2    8584
                                             22 BANK0      2     0      2
                   _DATAEE_WriteByte
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    6920
                                             19 BANK0      3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                9     5      4    3148
                                             10 BANK0      9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    2284
                                              1 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     126
                                              0 BANK0      1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      84
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3    1664
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     884
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _WaitMs                                               2     0      2     486
                                              4 BANK0      2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      42
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2     190
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2100
                    _ADCC_Initialize
                    _DAC1_Initialize
                    _DMA1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
           _SystemArbiter_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0    1036
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
_UART1_SetFramingErrorInterruptHandl
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
      _UART1_SetUartInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetUartInterruptHandler                        3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorInterruptHandler                3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     254
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     254
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     254
                                              3 BANK0      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     254
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SystemArbiter_Initialize                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      48
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0     254
      _DMA1_SetSCNTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DMA1_SetSCNTIInterruptHandler                        3     0      3     254
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     254
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     254
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     190
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM5_LoadDutyValue                                   4     2      2     190
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     302
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      42
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_tx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_rx_vect_isr                                   3     3      0       0
                                             28 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (11) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (15) _Adc_Isr                                             4     4      0       0
                                              4 COMRAM     4     4      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            2     2      0       0
                                             11 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Led_Blink                                           1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            2     2      0     319
                                             17 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (15) _Timers_Isr                                          4     4      0      90
                                             13 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     229
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNTI_ISR                                   2     2      0       0
                                             19 COMRAM     2     2      0
                   Absolute function *
       _DMA1_DefaultInterruptHandler *
                    _source_dma_done *
 ---------------------------------------------------------------------------------
 (15) _source_dma_done                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _DMA1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_framing_err_vect_isr                          2     2      0       0
                                             21 COMRAM     2     2      0
                   Absolute function *
             _UART1_FramingError_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_FramingError_ISR                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_vect_isr                                      2     2      0       0
                                             23 COMRAM     2     2      0
                   Absolute function *
            _UART1_UartInterrupt_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_UartInterrupt_ISR                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _DMA1_SetSCNTIInterruptHandler
   _PWM5_LoadDutyValue
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _DMA1_Initialize
       _DMA1_SetSCNTIInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _SPI1_Initialize
     _SystemArbiter_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetFramingErrorInterruptHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
       _UART1_SetUartInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_p0 *
         _DATAEE_WriteByte
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_p1 *
         _DATAEE_WriteByte
         _puts
       _fh_pd *
         _puts
       _fh_pl *
         _puts
       _fh_po *
         _puts
       _fh_pp *
         _puts
       _fh_pr *
         _puts
       _fh_ps *
         _puts
       _fh_pu *
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _ringBufS_flush
       _ringBufS_put_dma_cpy
         _memcpy
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
     _send_lcd_data_dma
     _wait_lcd_done
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_data
       _SPI1_ExchangeByte
       _wdtdelay
     _wdtdelay
   _linux_getc
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _puts
   _scmd_init
     _cli_init
       _memset
       _puts
   _sprintf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 _DMA1_DMASCNTI_ISR (ROOT)
   Absolute function(Fake) *
   _DMA1_DefaultInterruptHandler *
   _source_dma_done *

 _UART1_framing_err_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_FramingError_ISR *

 _UART1_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_UartInterrupt_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0    13C0     125       61.7%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllllll    181      0       0     123        0.0%
BITBIGSFRllhhhh    110      0       0      90        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      83      15       51.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      83      11       51.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      DA       9       85.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      CB       7       79.3%
BITBIGSFRllhhhh     E8      0       0      94        0.0%
BITBIGSFRllhhhh     CB      0       0      86        0.0%
BITBIGSFRllhhhh     A1      0       0      83        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      9F       5       99.4%
BITBIGSFRllhhhh     5F      0       0      79        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      40       1       67.4%
BITBIGSFRllhhhl     49      0       0      96        0.0%
BITBIGSFRllhhhh     3F      0       0      81        0.0%
BITBIGSFRllhhhh     23      0       0      76        0.0%
BITBIGSFRllllll     1F      0       0     109        0.0%
BITBIGSFRhhhhhl     1D      0       0      69        0.0%
BITBIGSFRllllll     16      0       0     116        0.0%
BITBIGSFRllllll     15      0       0     105        0.0%
BITBIGSFRllllll     11      0       0     115        0.0%
BITBIGSFRllllll      F      0       0     106        0.0%
BITBIGSFRllhhhh      E      0       0      92        0.0%
BITBIGSFRllhhhh      C      0       0      75        0.0%
BITBIGSFRlllllh      B      0       0     104        0.0%
BITBIGSFRllhhl       B      0       0      97        0.0%
BITBIGSFRllhhhh      A      0       0      74        0.0%
BITBIGSFRllllll      8      0       0     111        0.0%
BITBIGSFRllhhhh      8      0       0      78        0.0%
BITBIGSFRhhhhhh      7      0       0      68        0.0%
BITBIGSFRllllll      7      0       0     121        0.0%
BITBIGSFRhhlh        6      0       0      71        0.0%
BITBIGSFRllllll      6      0       0     119        0.0%
BITBIGSFRllhhhh      5      0       0      93        0.0%
BITBIGSFRllhhhh      5      0       0      95        0.0%
BITBIGSFRllllhl      5      0       0     103        0.0%
BITBIGSFRlllhl       5      0       0     101        0.0%
BITBIGSFRllhll       5      0       0      99        0.0%
BITBIGSFRllllll      4      0       0     122        0.0%
BITBIGSFRllllll      4      0       0     120        0.0%
BITBIGSFRllhlh       4      0       0      98        0.0%
BITBIGSFRlllhh       4      0       0     100        0.0%
BITBIGSFRllllhh      4      0       0     102        0.0%
BITBIGSFRllllll      3      0       0     117        0.0%
BITBIGSFRllllll      3      0       0     110        0.0%
BITBIGSFRllllll      3      0       0     107        0.0%
BITBIGSFRllhhhh      2      0       0      91        0.0%
BITBIGSFRhhll        2      0       0      72        0.0%
BITBIGSFRhll         2      0       0      73        0.0%
BITBIGSFRllllll      1      0       0     112        0.0%
BITBIGSFRllllll      1      0       0     113        0.0%
BITBIGSFRllhhhh      1      0       0      85        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      77        0.0%
BITBIGSFRllhhhh      1      0       0      89        0.0%
BITBIGSFRllhhhh      1      0       0      87        0.0%
BITBIGSFRllhhhh      1      0       0      88        0.0%
BITBIGSFRhhhl        1      0       0      70        0.0%
BITBIGSFRllllll      1      0       0     118        0.0%
BITBIGSFRllhhhh      1      0       0      80        0.0%
BITBIGSFRllllll      1      0       0     114        0.0%
BITBIGSFRllhhhh      1      0       0      82        0.0%
BITBIGSFRllllll      1      0       0     108        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     489     124        0.0%
DATA                 0      0    1849       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr  5 10:16:27 2022

                                    _SPI1_ExchangeByte 4CD4  
                                         ___fldiv@aexp 0078  
                                         ___fldiv@bexp 0077  
                                                    _a 0583  
                     __end_of_TMR5_SetInterruptHandler 4E9C  
                                         ___fldiv@sign 0070  
                                         ?_display_led 0001  
                                         ___awdiv@sign 0065  
                                   ?_SPI1_ExchangeByte 0001  
                                  ___wmul@multiplicand 0062  
                                        _build_version FE1A  
                                    ??_TMR5_WriteTimer 0010  
                                      _DAC1_Initialize 4ED2  
                                                  l209 4CCE  
                                                  l636 4CE2  
                                                  l991 4778  
                                                  _GIE 01FE97  
                                                  _pad 3B64  
                                                  _res 00F8  
                        eaDogM_WriteStringAtPos@strPtr 0074  
                                         ___awmod@sign 0065  
                                  ??_SPI1_ExchangeByte 0020  
                                      _TMR2_Initialize 4C7C  
                                                  prod 003FF3  
                                                  tosl 003FFD  
                                                  wreg 003FE8  
                                       _DAC1_SetOutput 4EEA  
                                         ___flmul@aexp 007B  
                                         ___flmul@bexp 007C  
                                      send_lcd_cmd@cmd 0064  
                         ?_ADCC_SetADIInterruptHandler 0060  
                                   _UART1_Transmit_ISR 4A1C  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                                     ?_source_dma_done 0001  
                               __end_of_DAC1_GetOutput 4F0E  
                                         ___fltol@exp1 0069  
                                                 l1130 4658  
                                                 l1402 38A8  
                                                 l1413 38B4  
                                                 l1423 38C0  
                                                 l1408 38AE  
                                                 l2240 356C  
                                                 l1433 38CC  
                                                 l1418 38BA  
                                                 l2250 3AA0  
                                                 l1338 16AC  
                                                 l1443 38D8  
                                                 l2067 3484  
                                                 l2331 1FBC  
                                                 l1428 38C6  
                                                 l2332 1F9A  
                                                 l1373 4AAC  
                                                 l1453 38E4  
                                                 l1438 38D2  
                                                 l1463 38F0  
                                                 l1448 38DE  
                                                 l2416 1BAA  
                                                 l1553 25C2  
                                                 l2433 1E46  
                                                 l2425 1DC0  
                                                 l1458 38EA  
                                                 l2426 1DBC  
                                                 l2602 066E  
                                                 l2347 208E  
                                                 l2356 20F4  
                                                 l2357 20F0  
                                                 l1567 2AE8  
                                                 l2464 2F32  
                                                 l2457 2EB4  
                                                 l2537 3B92  
                                                 l1658 43D6  
                                                 l2386 22F8  
                                                 l2397 2366  
                                                 l2398 2362  
                                                 l2574 030A  
                                                 l2638 2D90  
                                                 l2657 25E2  
                                                 l2755 30EC  
                                                 l2659 25EA  
                                                 l2853 4848  
                                                 ?_pad 0073  
                                                 l2767 2888  
                                                 STR_1 FFB1  
                                                 STR_2 FFBD  
                                                 STR_3 FECF  
                                                 STR_4 FEE8  
                                                 STR_5 FF5A  
                                                 STR_6 FF7E  
                                                 STR_7 FF8F  
                                                 STR_8 FF47  
                                                 STR_9 FF6C  
                                                 _LATA 003FBA  
                                                 _LATB 003FBB  
                                                 _LATC 003FBC  
                                                 _LATD 003FBD  
                                                 _LATE 003FBE  
                                                 _LATF 003FBF  
                                                 _T2PR 003FAB  
                                                 _T6PR 003F93  
                                                 _PMD0 0039C0  
                                                 _PMD1 0039C1  
                                                 _PMD2 0039C2  
                                                 _PMD3 0039C3  
                                                 _PMD4 0039C4  
                                                 _PMD5 0039C5  
                                                 _PMD6 0039C6  
                                                 _PMD7 0039C7  
                                                 _PLLR 01CEE0  
                                                 _WPUA 003A41  
                                                 _WPUB 003A51  
                                                 _WPUC 003A61  
                                                 _WPUD 003A71  
                                                 _WPUE 003A81  
                                                 _WPUF 003A91  
                                     __end_of_ADCC_ISR 4566  
                                  ?_UART1_Transmit_ISR 0001  
                                                 _dbuf 0143  
                                                 _cmdm FDFE  
                                                 _atoi 2FB6  
                                                 _main 10A4  
                                                 _ival 0124  
                                                 _mode 0035  
                                      __end_of_Adc_Isr 33F0  
                                                 _prec 00F6  
                                                 _nout 0141  
                                                 pad@i 007A  
                                                 pad@p 0077  
                                                 fsr1h 003FE2  
                                                 fsr2h 003FDA  
                                                 indf1 003FE7  
                                                 indf2 003FDF  
                                                 fsr1l 003FE1  
                                                 pad@w 007C  
                                                 fsr2l 003FD9  
                                                 _stoa 2D2A  
                                                 _puts 4852  
                                                 _vval 0128  
                                                 _utoa 25C6  
                            ringBufS_put_dma_cpy@_this 006B  
                                        ___fpclassifyf 365C  
                                                 prodh 003FF4  
                                                 prodl 003FF3  
                                                 start 00AE  
                                      _timer5ReloadVal 002F  
                                      ___fldiv@new_exp 0071  
                                      _PWM5_Initialize 4D52  
                            __end_of_SPI1_ExchangeByte 4CEE  
                        ??_UART1_SetTxInterruptHandler 0020  
                                       _SPI1STATUSbits 003D17  
                                    _UART1_rx_vect_isr 4454  
                                         ___param_bank 000000  
                           __end_of_PWM5_LoadDutyValue 498E  
                                          ?_UART1_Read 0001  
                                   ?_UART1_rx_vect_isr 0001  
                                                ??_pad 0079  
                             __end_of_ringBufS_put_dma 414A  
                                 ??_UART1_Transmit_ISR 001A  
                        __end_of_OSCILLATOR_Initialize 4CD4  
                                                l11005 1EEE  
                                                l11111 20B2  
                                                l11103 207E  
                                                l11121 20C8  
                                                l11017 1F12  
                                                l11009 1EF2  
                                                l12011 03A8  
                                                l11213 2D20  
                                                l11205 2CD2  
                                                l11061 1FAC  
                                                l12021 03E2  
                                                l12005 0384  
                                                l11207 2D04  
                                                l11303 22F6  
                                                l11127 20D2  
                                                l11047 1F4E  
                                                l12103 077A  
                                                l12111 0810  
                                                l12015 03B8  
                                                l11233 21B2  
                                                l11161 216A  
                                                l11315 232C  
                                                l11155 2160  
                                                l11147 213A  
                                                l11083 2002  
                                                l11075 1FE0  
                                                l11059 1FA8  
                                                l12123 0852  
                                                l12043 0580  
                                                l11173 3E64  
                                                l13021 3EC8  
                                                l11309 230E  
                                                l11253 21F2  
                                                l11237 21B6  
                                                l11085 2006  
                                                l11093 2018  
                                                l12141 08A8  
                                                l12061 0666  
                                                l12029 04D6  
                                                l12213 2DDC  
                                                l12205 2DA6  
                                                l13111 2EE2  
                                                l13023 3ECC  
                                                l11503 3C98  
                                                l11351 2406  
                                                l11343 23F8  
                                                l11335 23AA  
                                                l11271 2240  
                                                l11159 2168  
                                                l12151 08FC  
                                                l12063 0688  
                                                l12055 0644  
                                                l12223 2E3E  
                                                l13017 4AB6  
                                                l13113 2EE8  
                                                l13105 2EC4  
                                                l11177 3E7A  
                                                l11193 2C2A  
                                                l13025 3ED0  
                                                l13033 3EDA  
                                                l11265 222A  
                                                l11257 21F6  
                                                l11441 1D68  
                                                l12161 0928  
                                                l12209 2DBE  
                                                l12241 2622  
                                                l13123 2F58  
                                                l13115 2EF4  
                                                l13051 3902  
                                                l13027 3ED4  
                                                l13035 3F06  
                                                l11515 3CBE  
                                                l11531 3CF0  
                                                l11339 23CE  
                                                l11603 346E  
                                                l11371 1B56  
                                                l12139 089E  
                                                l12075 0708  
                                                l12227 2E56  
                                                l12219 2E24  
                                                l12251 270E  
                                                l13141 2FA4  
                                                l13125 2F64  
                                                l13117 2F1A  
                                                l11517 3CC6  
                                                l11509 3CA8  
                                                l11349 2404  
                                                l11373 1B5A  
                                                l11199 2C96  
                                                l13071 2AA2  
                                                l12271 2FCC  
                                                l11535 3CFE  
                                                l11527 3CE6  
                                                l11551 3D9C  
                                                l11279 2258  
                                                l11471 1E22  
                                                l11447 1D86  
                                                l11391 1B9A  
                                                l11375 1B6A  
                                                l11711 3B8A  
                                                l12175 0978  
                                                l12087 0736  
                                                l12095 0756  
                                                l11801 45E2  
                                                l12281 305A  
                                                l11297 22D0  
                                                l11289 22A8  
                                                l11609 34BC  
                                                l11617 4A0A  
                                                l11721 3BE0  
                                                l11713 3B9C  
                                                l10923 4764  
                                                l12339 4718  
                                                l13075 2ACC  
                                                l12275 301C  
                                                l12267 2FC8  
                                                l11571 3DE2  
                                                l11563 3DCA  
                                                l11555 3DAA  
                                                l11547 3D90  
                                                l11483 1E64  
                                                l11467 1E04  
                                                l11643 3852  
                                                l11627 3808  
                                                l11707 3B7C  
                                                l12195 2D54  
                                                l13085 2B54  
                                                l13093 2BB2  
                                                l12277 3024  
                                                l11557 3DB2  
                                                l11389 1B96  
                                                l11661 3892  
                                                l11653 386A  
                                                l11733 36D4  
                                                l11717 3BB4  
                                                l12287 3096  
                                                l12279 302A  
                                                l11567 3DD4  
                                                l11583 3C62  
                                                l11399 1BC8  
                                                l11655 3876  
                                                l11647 3862  
                                                l11743 371E  
                                                l11903 0074  
                                                l11911 008A  
                                                l11671 34E6  
                                                l12801 4B2C  
                                                l10937 4798  
                                                l10961 41FA  
                                                l11841 294A  
                                                l11737 36DE  
                                                l11921 00E2  
                                                l11673 34FA  
                                                l13601 0E28  
                                                l13521 0A1C  
                                                l13513 0A14  
                                                l13505 0A00  
                                                l10939 479A  
                                                l10955 3A0A  
                                                l10963 4200  
                                                l11843 295A  
                                                l11587 3C80  
                                                l11579 3C2E  
                                                l11595 3424  
                                                l11923 00FA  
                                                l11683 3556  
                                                l11691 3A2E  
                                                l13507 0A02  
                                                l13531 0A72  
                                                l10949 3976  
                                                l10981 1EA6  
                                                l11781 28E0  
                                                l11749 3F38  
                                                l11925 0104  
                                                l11693 3A42  
                                                l13525 0A20  
                                                l13517 0A18  
                                                l13509 0A10  
                                                l12823 2432  
                                                l11871 42A0  
                                                l11599 3458  
                                                l11767 27EE  
                                                l13615 0EF2  
                                                l13607 0E7C  
                                                l13543 0AF2  
                                                l12833 2546  
                                                l10985 1EAA  
                                                l11785 290E  
                                                l11777 28AA  
                                                l11953 01E0  
                                                l11929 012C  
                                                l13633 100C  
                                                l13625 0F5E  
                                                l13561 0BF2  
                                                l13545 0B12  
                                                l13529 0A2A  
                                                l12835 2548  
                                                l11963 02A0  
                                                l11939 0184  
                                                l11947 019E  
                                                l11891 0048  
                                                l11699 3A8A  
                                                l13643 1056  
                                                l13563 0C12  
                                                l13803 168A  
                                                l12829 2452  
                                                l11957 0218  
                                                l13549 0B1E  
                                                l13821 16BC  
                                                l13813 16A8  
                                                l13741 1270  
                                                l13717 112C  
                                                l11879 42CA  
                                                l11975 02F2  
                                                l11959 0266  
                                                l13639 104C  
                                                l13591 0D9E  
                                                l13567 0C1E  
                                                l13831 16D2  
                                                l13743 127E  
                                                l11993 0362  
                                                l11985 031A  
                                                l13649 106C  
                                                l13665 3FFC  
                                                l13817 16B8  
                                                l13833 16F8  
                                                l13809 169E  
                                                l13753 12CE  
                                                l12787 4B08  
                                                l12875 3E2E  
                                                l11995 0366  
                                                l11979 0314  
                                                l13587 0D74  
                                                l13579 0CFE  
                                                l13667 4024  
                                                l13771 1336  
                                                l13763 1320  
                                                l13755 12D4  
                                                l13739 1260  
                                                l13773 133C  
                                                l13765 1326  
                                                l13749 12AA  
                                                l13847 1722  
                                                l13759 12FA  
                                                l13777 1348  
                                                l13779 134E  
                                        ___fltol@sign1 0068  
                                                _ADACT 003EFE  
                                                _ADCAP 003EF5  
                                                ?_atoi 0066  
                                      __end_of___fladd 2186  
                                                ?_main 0001  
                                                _ADCLK 003EFF  
                                                _ADCNT 003EEB  
                                                _ADPCH 003EF1  
                                      __end_of___fldiv 240E  
                                                _ADREF 003EFD  
                                      __end_of___awdiv 3D08  
                                      __end_of___flneg 4A1C  
                                                STR_10 FEB2  
                                                STR_11 FE93  
                                                STR_12 FFA0  
                                                STR_20 FFF5  
                                                STR_13 FFC6  
                                                STR_21 FFF8  
                                                STR_14 FFC9  
                                                STR_30 FFCC  
                                                STR_22 FFEF  
                                                STR_31 FFD4  
                                                STR_15 FE28  
                                                STR_23 FFF2  
                                                STR_40 FFE0  
                                                STR_16 FF00  
                                                STR_24 FFFB  
                                                STR_17 FF00  
                                                STR_25 FFE9  
                                                STR_34 FFD0  
                                                STR_18 FF18  
                                                STR_26 FFEC  
                                                STR_43 FFDC  
                                                STR_35 FFD8  
                                                STR_19 FF30  
                                                STR_27 FFE3  
                                                STR_28 FFE6  
                                      __end_of___awmod 3DEC  
                                                STR_29 FE90  
                                                STR_45 FFDC  
                                                STR_38 FFE0  
                                                _ADRPT 003EEC  
                                      __end_of___flmul 1E7A  
                                      __end_of___flsub 44E2  
                                      __end_of___fltol 38A4  
                                                ?_stoa 006A  
                                                ?_puts 0073  
                                                ?_utoa 007E  
                                                u11120 1DB6  
                                                u10400 1F80  
                                                u10250 396E  
                                                u10410 1F82  
                                                u12010 0064  
                                                u11220 3CCA  
                                                u10270 39B6  
                                                u10280 422A  
                                                u11160 1E12  
                                                u11080 1BB6  
                                                u10440 1FC4  
                                                u11400 37F6  
                                                u12120 0300  
                                                u11330 3C7C  
                                                u11170 1E30  
                                                u11410 3826  
                                                u13011 244C  
                                      __end_of___lodiv 358E  
                                      ___awdiv@divisor 0062  
                                                u10390 1F70  
                                                u10710 48F0  
                                                u12150 0332  
                                                u10287 421C  
                                                u11415 381C  
                                                u13200 2F6E  
                                                u13040 2582  
                                                u11280 3DB6  
                                                u10720 48F2  
                                                u11520 3A46  
                                                u10650 2146  
                                                u10570 20D6  
                                                u11450 387C  
                                                u12090 02C8  
                                                _U1P1H 003DED  
                                                u12260 0570  
                                                _U1P2H 003DEF  
                                                u13038 2532  
                                                u10590 20EA  
                                                u11630 3716  
                                                u12190 0380  
                             eaDogM_WriteStringAtPos@c 0073  
                                                _U1P3H 003DF1  
                                                _U1P1L 003DEC  
                                                u11471 34C6  
                                                u11640 3718  
                                                u12440 0912  
                                                u12520 2DD2  
                                                _U1P2L 003DEE  
                                                _T2CON 003FAC  
                                                u11625 36F8  
                                                u10690 3EB0  
                                                u11810 45DE  
                                                u11730 286E  
                                                u11650 3F80  
                                                u12530 2E06  
                                                u11490 34FE  
                                                u12610 273A  
                                                _U1P3L 003DF0  
                                                u11715 2806  
                                                u12611 2738  
                                                u10940 235C  
                                                u11580 369A  
                                                u11716 280C  
                                                u12460 0970  
                                                u12380 0834  
                                                u12620 2748  
                                                u13085 4980  
                                                u11717 281A  
                                                u11750 28C8  
                                                u12630 274C  
                                                u13430 0B58  
                                                u13095 494E  
                                                u11735 2864  
                                                u12471 2D34  
                                                u11920 29EE  
                                                u11680 27BC  
                                                u12560 2E6A  
                                                u10697 3EA2  
                                                u11585 3690  
                                                u11657 3F72  
                                                u12537 2DF8  
                                                u11930 2A22  
                                                u11690 27DC  
                                                u13530 0ECA  
                                                u11835 4666  
                                                u11755 28BE  
                                                u11836 4668  
                                                u11940 2A4C  
                                                u11780 4922  
                                                u12660 30CA  
                                                u10980 23B8  
                                                u12580 25D8  
                                                u13460 0C58  
                                                u11685 27B2  
                             eaDogM_WriteStringAtPos@r 0078  
                                                u11950 2A7A  
                                                u11870 2984  
                                                u12750 4DFA  
                                                u11790 4924  
                                                u10990 23DC  
                                                u11935 2A1C  
                                                u11927 29E0  
                                                _T5CLK 003F9D  
                                                u13640 1318  
                                                u11937 2A0E  
                                      __end_of___lomod 3AC2  
                                                u11890 29B4  
                                                u12690 4E1A  
                                                u11947 2A3E  
                                                _T2HLT 003FAD  
                                                u11957 2A6C  
                                                u11877 2976  
                                                _T5CON 003F9A  
                                                u11897 29A6  
                                                u12965 43AE  
                                                u12966 43B0  
                                                _T6CON 003F94  
                                                _T6HLT 003F95  
                                                _T2TMR 003FAA  
                                                _U1UIR 003DF8  
                                                _T2RST 003FAF  
                                                _U1RXB 003DE8  
                                                _U1TXB 003DEA  
                               __end_of_DAC1_SetOutput 4EF4  
                                                _T6TMR 003F92  
                                                i2l481 48B8  
                                                _T6RST 003F97  
                                                i2l576 4B6A  
                                  ??_UART1_rx_vect_isr 001D  
                                      ___awdiv@counter 0064  
                                                _OSCEN 0039DD  
                                         vfpfcnvrt@fmt 00D3  
                                         vfpfcnvrt@llu 00DA  
                                                _TMR5H 003F99  
                                                _TMR5L 003F98  
                                                _TRISA 003FC2  
                                                _TRISB 003FC3  
                                                _TRISC 003FC4  
                                                _TRISD 003FC5  
                                                _TRISE 003FC6  
                                                _TRISF 003FC7  
                                          _Default_ISR 4F2C  
                                      _PWM6_Initialize 4D3A  
                             eaDogM_WriteString@strPtr 0070  
                            ?_TMR6_SetInterruptHandler 0060  
                                    _UART1_tx_vect_isr 440C  
                                     __end_of_TMR5_ISR 437A  
                                         _DMA1CON0bits 003BFC  
                                     __end_of_TMR6_ISR 48C6  
                                         _DMA1CON1bits 003BFD  
                                                _dac_v 00FA  
                                                _fh_p0 4B9A  
                                                _fh_p1 4B78  
                                      _DATAEE_ReadByte 4C9A  
                                                _buff1 0400  
                                                _fh_pd 4D80  
                                                _fh_pl 4D6A  
                                                _fh_po 4DD4  
                                                _fh_pp 4DC2  
                                                _fh_pr 4C5E  
                                                _fh_ps 4CEE  
                                                _fh_pu 4D96  
                                                _flags 002D  
                                         _DMA2CON0bits 003BDC  
                                         _DMA2CON1bits 003BDD  
                                                _fputc 395E  
                                                _fputs 3E5A  
                         ??_UART1_framing_err_vect_isr 0016  
                                      __end_of_isdigit 492A  
                                      ?_DAC1_GetOutput 0001  
                                   ?_UART1_tx_vect_isr 0001  
                                                atoi@n 006E  
                                                pad@fp 0073  
                                                atoi@s 0066  
                                                _width 00F4  
                                                _putch 4EC6  
                                                main@i 01BF  
                                      __end_of_isspace 45EA  
                                      __end_of_isupper 48F8  
                                                pclath 003FFA  
                                                pclatu 003FFB  
                                                tablat 003FF5  
                            ??_eaDogM_WriteStringAtPos 0076  
                                                plusw1 003FE3  
                                                plusw2 003FDB  
                                                stoa@i 0076  
                                                stoa@l 007E  
                                                stoa@p 007C  
                                                stoa@s 006C  
                                                stoa@w 0078  
                                                puts@s 0073  
                                                utoa@d 0080  
                                                utoa@i 009C  
                                                utoa@n 0094  
                                                utoa@p 0090  
                                                utoa@w 0092  
                                                status 003FD8  
                  __end_of_UART1_SetRxInterruptHandler 4E48  
                          _UART1_SetRxInterruptHandler 4E3A  
                                      __end_of_sprintf 428E  
                                       ?___fpclassifyf 0060  
                                      __end_of_tolower 4852  
                                      __end_of_strncmp 2A8C  
                                     ___lodiv@dividend 0060  
                                       _UART1_vect_isr 47DC  
             __end_of_UART1_DefaultFramingErrorHandler 4F26  
                   ??_UART1_DefaultFramingErrorHandler 001D  
                    ?_UART1_DefaultFramingErrorHandler 0001  
                     _UART1_DefaultFramingErrorHandler 4F24  
                                  ??_UART1_tx_vect_isr 001A  
                            __end_of_UART1_rx_vect_isr 449C  
                           eaDogM_WriteStringAtPos@row 0079  
                       ??_TMR6_DefaultInterruptHandler 000B  
                                      _TMR5_Initialize 42DC  
                                __end_of_ringBufS_init 4C20  
                                      __initialization 30F6  
                                    send_lcd_data@data 0064  
                                         __end_of_cmdm FE1A  
                                         __end_of_atoi 30F6  
                                         __end_of_main 172A  
                              __end_of_DAC1_Initialize 4EDE  
                                         __end_of_stoa 2E74  
                                         __end_of_puts 488C  
                                         __end_of_utoa 2776  
                          ??_UART1_DefaultErrorHandler 001D  
                              __end_of_TMR2_Initialize 4C9A  
                                __end_of_send_lcd_data 4AE8  
                                         ?_UART1_Write 0001  
                                               ??_atoi 0068  
                                               ??_main 01BC  
                             _TMR5_SetInterruptHandler 4E8E  
                                               ??_stoa 006E  
                                               ??_puts 0021  
                                               ??_utoa 0088  
                                        __activetblptr 000003  
                                      ?_DAC1_SetOutput 0001  
                            __end_of_UART1_tx_vect_isr 4454  
                                     ___lodiv@quotient 0070  
                                      _TMR6_Initialize 49BE  
                                     _UART1_Initialize 321A  
                                               ?_fh_p0 0076  
                                               ?_fh_p1 0076  
                                               ?_fh_pd 0076  
                                               _ADACCH 003EE9  
                                               _ADACCL 003EE8  
                                               ?_fh_pl 0076  
                                               ?_fh_po 0076  
                                               ?_fh_pp 0076  
                                               ?_fh_pr 0076  
                                               ?_fh_ps 0076  
                                               _ADACCU 003EEA  
                                               ?_fh_pu 0076  
                                               _ADACQH 003EF4  
                                               _ADACQL 003EF3  
                                               _ADCON0 003EF8  
                                               _ADCON1 003EF9  
                                               _ADCON2 003EFA  
                                               _ADCON3 003EFB  
                                               _ADERRH 003EE3  
                                               _ADERRL 003EE2  
                              send_lcd_data_dma@strPtr 006F  
                                            ??_Adc_Isr 0005  
                                               ?_fputc 0061  
                                               _ADLTHH 003EDF  
                                               _ADLTHL 003EDE  
                                               ?_fputs 006A  
                                               _ADRESH 003EF0  
                                               _ADRESL 003EEF  
                                               _ADPREH 003EF7  
                                               _ADPREL 003EF6  
                                               _DMA1PR 0039F3  
                                               _ADSTAT 003EFC  
                                               _ADUTHH 003EE1  
                                     ___awdiv@dividend 0060  
                                               _ADUTHL 003EE0  
                                               _ANSELA 003A40  
                                               ?_putch 0001  
                                               _ANSELB 003A50  
                                               _ANSELC 003A60  
                                               _ANSELD 003A70  
                                               _ANSELE 003A80  
                                               _ANSELF 003A90  
                                       TimerDone@timer 0020  
                                               _RB1I2C 003A5A  
                                               _RB2I2C 003A5B  
                                               _RD0I2C 003A7A  
                                               _U1CON0 003DF2  
                                               _U1CON1 003DF3  
                                               _U1CON2 003DF4  
                                               _RD1I2C 003A7B  
                                               _RC3I2C 003A6A  
                                               _RC4I2C 003A6B  
                                               _U1BRGH 003DF6  
                                               _U1FIFO 003DF7  
                                               _U1BRGL 003DF5  
                                               _T5GATE 003F9C  
                                               _T5GCON 003F9B  
                                   __cli_interpret_cmd 240E  
                                               _RC3PPS 003A13  
                                               i1l1027 4A44  
                                               _RD2PPS 003A1A  
                                               _RC5PPS 003A15  
                                               _ODCONA 003A42  
                                               _ODCONB 003A52  
                                               _RC6PPS 003A16  
                                               _ODCONC 003A62  
                                               _ODCOND 003A72  
                                               _ODCONE 003A82  
                                               _ODCONF 003A92  
                                               _RF2PPS 003A2A  
                              __end_of_PWM5_Initialize 4D6A  
                                               i2l1265 33E2  
                                               i1l7641 4A40  
                                               _INLVLA 003A44  
                                               _INLVLB 003A54  
                                               _INLVLC 003A64  
                                               _INLVLD 003A74  
                                               _INLVLE 003A84  
                                               _INLVLF 003A94  
                                               i1l9761 4BFC  
                                               i2l7701 33B2  
                                               _TABLAT 003FF5  
                                               i2l7681 338A  
                                               i2l7683 338E  
                                               i2l7685 3392  
                                               i2l7687 3396  
                                               i2l7689 339C  
                                               i2l7875 41A6  
                                               i2l7879 41D8  
                               __end_of_UART1_vect_isr 4818  
                                        ?_init_display 0001  
                                               _OSCFRQ 0039DF  
                                        vfpfcnvrt@done 00E4  
                                               _NVMDAT 0039E3  
                                               _PRLOCK 0039EF  
                                _UART1_SetErrorHandler 4E72  
                                     __end_of___xxtofl 2FB6  
                           ??_ADCC_GetConversionResult 0003  
                             __end_of_send_lcd_cmd_dma 4C5E  
                            ringBufS_flush@clearBuffer 006E  
                                  ?__cli_interpret_cmd 0078  
                      ??_DMA1_SetSCNTIInterruptHandler 0020  
                                     __end_of_cli_init 4524  
                                     __end_of_cli_read 2BDE  
                              DAC1_SetOutput@inputData 0020  
                                               _WaitMs 4A9C  
                                         _CCPTMRS1bits 003F5F  
                                         vfprintf@cfmt 00F0  
                                               ___flge 33F0  
                                               ___fleq 3BFA  
                                            ??___fladd 0068  
                                               ___wmul 4A4A  
                                            ??___fldiv 0068  
                                            ??___awdiv 0020  
                                            ??___flneg 0020  
                                            ??___awmod 0020  
                                               _g_cmds 0280  
                                            ??___flmul 0076  
                                            ??___flsub 0020  
                                            ??___fltol 0064  
                                            ??___lodiv 0020  
                                       _ringBufS_flush 414A  
                                            ??___lomod 0020  
                                               _efgtoa 0000  
                                 send_lcd_cmd_long@cmd 0064  
                                               _floorf 2776  
                                               _memcpy 428E  
                                               _memset 2BDE  
                              __end_of_PWM6_Initialize 4D52  
                                               clear_0 31A0  
                                               clear_1 31B2  
                                               clear_2 31C0  
                                               clear_3 31D2  
                                               clear_4 31DE  
                                               clear_5 31EA  
                                               clear_6 31F6  
                                               clear_7 3202  
                                     ___awdiv@quotient 0066  
                                      ___awmod@divisor 0062  
                                           _Timers_Isr 419E  
                                               isa$std 000001  
                                      ___awmod@counter 0064  
                                               _printf 4A74  
                                               pad@buf 0075  
                                   _eaDogM_WriteString 3DEC  
                              __end_of_DATAEE_ReadByte 4CB8  
                                               _strcpy 3F28  
                                            ?_ADCC_ISR 0001  
                                               _strlen 41F0  
                                         __pdataBIGRAM 1543  
                                      _ADCC_Initialize 3D08  
                                               fputc@c 0061  
                                       _PMD_Initialize 4BBC  
                                 ??__cli_interpret_cmd 007A  
                                               fputs@c 0070  
                                               fputs@i 0071  
                                         __pdataCOMRAM 003F  
                                               fputs@s 006A  
                                            ??_isdigit 0062  
                                      ___fpclassifyf@e 0068  
                                      ___fpclassifyf@u 006A  
                                      ___fpclassifyf@x 0060  
                             ??_UART1_FramingError_ISR 0016  
                                         __mediumconst FDF8  
                                            ??_isspace 0062  
                                               tblptrh 003FF7  
                                            ??_isupper 0062  
                                               tblptrl 003FF6  
                      ??_UART1_SetUartInterruptHandler 0020  
                                               tblptru 003FF8  
                                  ?_eaDogM_WriteString 0070  
                                     __end_of_wdtdelay 440C  
                                               stoa@cp 007A  
                                               stoa@fp 006A  
                                     __end_of_vfprintf 4048  
                                               utoa@fp 007E  
                                        wdtdelay@delay 0060  
                                           _StartTimer 498E  
        UART1_SetUartInterruptHandler@InterruptHandler 0060  
UART1_SetFramingErrorInterruptHandler@InterruptHandler 0060  
          UART1_SetTxInterruptHandler@InterruptHandler 0060  
          UART1_SetRxInterruptHandler@InterruptHandler 0060  
        DMA1_SetSCNTIInterruptHandler@InterruptHandler 0060  
             TMR5_SetInterruptHandler@InterruptHandler 0060  
             TMR6_SetInterruptHandler@InterruptHandler 0060  
          ADCC_SetADIInterruptHandler@InterruptHandler 0060  
                 __end_of_UART1_SetOverrunErrorHandler 4E56  
                         _UART1_SetOverrunErrorHandler 4E48  
                            _UART1_DefaultErrorHandler 4F0E  
                                            ??_sprintf 0021  
                                            ??_tolower 0068  
                                            ??_strncmp 006A  
                                       ??_init_display 0021  
                                           ___flge@ff1 0087  
                                           ___flge@ff2 008B  
                                      ??___fpclassifyf 0064  
                              __end_of_TMR5_Initialize 432A  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 4724  
                                         ___xxtofl@val 0060  
                                           ___fleq@ff1 0060  
                                           ___fleq@ff2 0064  
                                      ?_UART1_vect_isr 0001  
                                           __accesstop 0060  
                              __end_of__initialization 3214  
                                           ___flneg@f1 0060  
                                   ?_SYSTEM_Initialize 0001  
                                        ___rparam_used 000001  
                                           ___fltol@f1 0060  
                                      _TMR5_WriteTimer 4B54  
                                    __end_of_Led_Blink 4C40  
                                 ??_eaDogM_WriteString 0021  
                                    ??_DMA1_Initialize 0020  
                               __end_of_ringBufS_flush 419E  
                                       __pcstackCOMRAM 0001  
                                         __pidataBANK0 4F20  
                                         __pidataBANK1 4EDE  
                                         __pidataBANK2 4048  
                                  ??_SYSTEM_Initialize 0021  
                                     ?_DAC1_Initialize 0001  
                                        __end_of_fh_p0 4BBC  
                                        __end_of_fh_p1 4B9A  
                                        __end_of_fh_pd 4D96  
                                        __end_of_fh_pl 4D80  
                                        __end_of_fh_po 4DE6  
                                        __end_of_fh_pp 4DD4  
                                        __end_of_fh_pr 4C7C  
                                        __end_of_fh_ps 4D08  
                                        __end_of_fh_pu 4DAC  
                                            ?_TMR5_ISR 0001  
                                            ?_TMR6_ISR 0001  
                                     _DATAEE_WriteByte 462A  
                                       ivt0x8_undefint 00AC  
                                        __end_of_fputc 3A14  
                                        __end_of_fputs 3EC4  
                                    ??_SPI1_Initialize 0020  
                                        __end_of_putch 4ED2  
                                     ?_TMR2_Initialize 0001  
                              __end_of_TMR6_Initialize 49EE  
                               __end_of_PMD_Initialize 4BDE  
                                SPI1_ExchangeByte@data 0020  
                                           ??_ADCC_ISR 0009  
                                __end_of_TMR6_CallBack 4B54  
                                   _spi1_configuration FDF9  
                                TMR6_ISR@CountCallBack 0031  
                          _DMA1_SCNTI_InterruptHandler 0135  
                            _UART1_FramingErrorHandler 0132  
                   __end_of_UART1_framing_err_vect_isr 47DC  
                           _UART1_framing_err_vect_isr 47A0  
                                              ??_fh_p0 0021  
                                              ??_fh_p1 0021  
                                              ??_fh_pd 0021  
                                              ??_fh_pl 0021  
                                              ??_fh_po 0021  
                                              ??_fh_pp 0021  
                                              ??_fh_pr 0021  
                                              ??_fh_ps 0021  
                                              ??_fh_pu 0021  
                                              ??_fputc 0065  
                            __end_of_SYSTEM_Initialize 4762  
                                              ??_fputs 006E  
                                      linux_putc@a_len 0078  
                                              ??_putch 0021  
                                           __pbssBANK0 00F4  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           __pbssBANK4 0400  
                                           __pbssBANK5 0500  
                        ?_UART1_SetOverrunErrorHandler 0060  
                               ?_UART1_SetErrorHandler 0060  
                                     ?_PWM5_Initialize 0001  
                                   ringBufS_init@_this 006C  
                             _SystemArbiter_Initialize 4E9C  
                                    __end_of_TimerDone 4B30  
                                              IVTBASEH 003FD6  
                                              IVTBASEL 003FD5  
                                              IVTBASEU 003FD7  
                                     linux_getc@a_data 0060  
                                              ?_WaitMs 0064  
                                       cli_init@a_cmds 0078  
                                      ?_ringBufS_flush 006C  
                                __end_of_wait_lcd_done 4E02  
                                              ?___flge 0087  
                                              ?___fleq 0060  
                                       main@lcd_update 01BE  
                                         ??_UART1_Read 0020  
                                              ?___wmul 0060  
                     __end_of_TMR6_SetInterruptHandler 4E8E  
                              __end_of_ADCC_Initialize 3D7C  
                           __end_of_PWM6_LoadDutyValue 495C  
                                        ?_send_lcd_cmd 0001  
                                           ??_TMR5_ISR 0012  
                                           ??_TMR6_ISR 000C  
                                              ?_efgtoa 0093  
                __end_of_DMA1_SetSCNTIInterruptHandler 4EB8  
                        _DMA1_SetSCNTIInterruptHandler 4EAA  
                                              _ADFLTRH 003EE7  
                                              ?_floorf 0079  
                                              _ADFLTRL 003EE6  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                              _DMA1DSA 003BF0  
                                              _DMA2DSA 003BD0  
                                              _DMA1DSZ 003BEE  
                                              _DMA2DSZ 003BCE  
                                              _ADPREVH 003EEE  
                                              _ADPREVL 003EED  
                                              _DMA1SSA 003BF9  
                                              _DMA2SSA 003BD9  
                                              _DMA1SSZ 003BF7  
                                     ?_PWM6_Initialize 0001  
                                              _DMA2SSZ 003BD7  
                                          ?_Timers_Isr 0001  
                                              _ADSTPTH 003EE5  
                                              _ADSTPTL 003EE4  
                                              ?_printf 01A3  
                                      ?_PMD_Initialize 0001  
                                    ?_ringBufS_put_dma 0060  
                                    _UART1_Receive_ISR 3AC2  
                                              ?_strcpy 0060  
                                              ?_strlen 0060  
                                      StartTimer@count 0060  
                                     ?_DATAEE_ReadByte 0060  
                                              _U1ERRIE 003DFA  
                                              _U1ERRIR 003DF9  
                                      StartTimer@timer 0020  
                                              i1l10359 3B5E  
                                     ??_DAC1_GetOutput 0020  
                                         ?_Default_ISR 0001  
                                   ??_ringBufS_put_dma 0020  
                                   ?_UART1_Receive_ISR 0001  
                                              _U1RXPPS 003AE5  
                                            ?___xxtofl 0060  
                                   _PWM5_LoadDutyValue 495C  
                                              _OSCCON1 0039D9  
                                              _OSCCON3 0039DB  
                                              _IVTLOCK 003FD4  
                                              _TBLPTRH 003FF7  
                                              _TBLPTRL 003FF6  
                                              _SPI1CLK 003D1C  
                                              _TBLPTRU 003FF8  
                                            ?_cli_init 0076  
                                            ?_cli_read 0084  
                                              _SPI1RXB 003D10  
                                              _NVMADRH 0039E1  
                                              _NVMADRL 0039E0  
                                              _SPI1TXB 003D11  
                                              _OSCTUNE 0039DE  
                                              _NVMCON2 0039E6  
                                              _PWM5DCH 003F6D  
                                              _PWM5DCL 003F6C  
                                              _PWM6DCH 003F69  
                                              _PWM6DCL 003F68  
                                              _PWM5CON 003F6E  
                                              _PWM6CON 003F6A  
                             ?_UART1_UartInterrupt_ISR 0001  
                                              _SLRCONA 003A43  
                                              _SLRCONB 003A53  
                                              _SLRCONC 003A63  
                                              _SLRCOND 003A73  
                                              _SLRCONE 003A83  
                                              _SLRCONF 003A93  
                                          ?_StartTimer 0060  
                           _UART1_UARTInterruptHandler 0021  
                                              _Adc_Isr 3308  
                                           _build_date 01C9  
                                  ??_UART1_Receive_ISR 001D  
                                           _build_time 01C7  
                                     ___lomod@dividend 0060  
                              __end_of_TMR5_WriteTimer 4B78  
                                  ?_PWM5_LoadDutyValue 0060  
                __end_of_UART1_SetUartInterruptHandler 4E2C  
                        _UART1_SetUartInterruptHandler 4E1E  
                                   __end_of_UART1_Read 4724  
                                     ?_TMR5_Initialize 0001  
                                 DATAEE_WriteByte@bAdd 0060  
                                ringBufS_put_dma@_this 0060  
                            INTERRUPT_Initialize@state 0020  
                         __end_of_ringBufS_put_dma_cpy 40F6  
                                              __Hparam 0000  
                                          _SrcVarName0 0193  
                                              __Lparam 0000  
                             __end_of_UART1_Initialize 3308  
                           ??_TMR5_SetInterruptHandler 0020  
                             __cli_interpret_cmd@a_ctx 0078  
                                       ??_send_lcd_cmd 0021  
                                              ___fladd 1E7A  
                                              ___fldiv 2186  
                                              ___awdiv 3C84  
                                              ___flneg 49EE  
                                              ___awmod 3D7C  
                                              ___flmul 1B2A  
                                              ___flsub 449C  
                                              ___fltol 37EA  
                                            ?_wdtdelay 0060  
                                              ___lodiv 34C0  
                                              ___lomod 3A14  
                                              _a_index 0037  
                                     ??_DAC1_SetOutput 0020  
                            __end_of_UART1_Receive_ISR 3B64  
                                            ?_vfprintf 019D  
                                 ??_PWM5_LoadDutyValue 0062  
                                 __end_of_init_display 37EA  
                                              __pcinit 30F6  
                                  _eaDogM_WriteCommand 4DE6  
                                     ?_TMR6_Initialize 0001  
                                              __ramtop 2000  
                                              _cli_ctx 0500  
                                              _i_index 0036  
                                              __ptext0 10A4  
                                              __ptext1 4240  
                                              __ptext2 4D22  
                                              __ptext3 44E2  
                                              __ptext4 4A74  
                                              __ptext5 3FEA  
                                              __ptext6 09B8  
                                              __ptext7 25C6  
                                              __ptext8 3A14  
                                              __ptext9 34C0  
                                _OSCILLATOR_Initialize 4CB8  
                                              _isdigit 48F8  
                                           ??___xxtofl 0064  
                                              _mode_sw 00F9  
                                     ___awmod@dividend 0060  
                             ??_PIN_MANAGER_Initialize 0020  
                                              _isspace 45AA  
                                          Timers_Isr@i 0010  
                                            _T5CONbits 003F9A  
                                              _isupper 48C6  
                                              efgtoa@c 0099  
                                              efgtoa@d 00B1  
                                              efgtoa@e 00C9  
                                              efgtoa@f 0095  
                                              efgtoa@g 00C3  
                                              efgtoa@h 00BB  
                                              efgtoa@i 00C7  
                                              efgtoa@l 00BF  
                                              efgtoa@m 00AB  
                                              efgtoa@n 00CB  
                                              efgtoa@p 00B5  
                                              efgtoa@t 00A5  
                                              efgtoa@u 00CD  
                                              efgtoa@w 00B8  
                                           ??_cli_init 0021  
                                           ??_cli_read 0086  
                                        ?_wait_lcd_set 0001  
                                              _ps_type 02B2  
                                              atoi@neg 006C  
                                           _linux_getc 4AE8  
                                              _sprintf 4240  
                                              _tolower 4818  
                                           _linux_putc 4E02  
                                    __end_of_scmd_init 4D3A  
                                              _strncmp 2920  
                                 end_of_initialization 3214  
                                            _U1UIRbits 003DF8  
                                              floorf@e 0087  
                                              floorf@m 0083  
                                              floorf@u 0089  
                                              floorf@x 0079  
                                 ?_eaDogM_WriteCommand 0001  
                                              memcpy@d 0067  
                                              memcpy@n 0064  
                                              memcpy@s 0069  
                                              fputc@fp 0063  
                                            i1u1006_28 4474  
                                            i1u1006_29 4488  
                                              memset@c 0062  
                                              memset@k 0068  
                                              memset@n 0064  
                                              memset@s 006A  
                  __end_of_UART1_SetTxInterruptHandler 4E3A  
                          _UART1_SetTxInterruptHandler 4E2C  
                                              fputs@fp 006C  
                                       display_led@led 0020  
                       ??_UART1_SetOverrunErrorHandler 0020  
                                    ?_send_lcd_cmd_dma 0001  
                               _UART1_FramingError_ISR 4EF4  
                                    __end_of_vfpfcnvrt 10A4  
                                           efgtoa@mode 00BA  
                                   ??_send_lcd_cmd_dma 0021  
                                           efgtoa@sign 00B3  
                                            _SPI1TCNTL 003D12  
                                              postdec1 003FE5  
                                              postdec2 003FDD  
                                              postinc0 003FEE  
                                              postinc1 003FE6  
                                              postinc2 003FDE  
                                           ??_wdtdelay 0020  
                                     ?_ADCC_Initialize 0001  
                                    __end_of_start_lcd 4F08  
                                           ??_vfprintf 0021  
                                       wdtdelay@dcount 0120  
                                    UART1_Write@txData 0020  
                                  _UART1_RxDataHandler 4BDE  
                                              strcpy@d 0068  
                                              strlen@a 0062  
                                              strcpy@s 0066  
                                              strlen@s 0060  
                                            _PORTAbits 003FCA  
                                            _PORTBbits 003FCB  
                             _TMR6_SetInterruptHandler 4E80  
                      __end_of_UART1_UartInterrupt_ISR 4F1A  
                       ?_DMA1_SetSCNTIInterruptHandler 0060  
                                _TMR5_InterruptHandler 0138  
                                          ___fladd@grs 006F  
                                WaitMs@numMilliseconds 0064  
                  __end_of_ADCC_SetADIInterruptHandler 4EC6  
                          _ADCC_SetADIInterruptHandler 4EB8  
                                        ___xxtofl@sign 0068  
                                       ??_wait_lcd_set 0020  
                                            _TRISCbits 003FC4  
                                     ??_UART1_vect_isr 0018  
                             ?_eaDogM_WriteStringAtPos 0073  
                                          ___fldiv@grs 0073  
                                          ___fldiv@rem 006C  
                             __end_of_DATAEE_WriteByte 466A  
                                      _DMA1_Initialize 3F8A  
                                 ?_UART1_RxDataHandler 0001  
                                     ?_TMR5_WriteTimer 000E  
                                ??_eaDogM_WriteCommand 0021  
                              TMR5_WriteTimer@timerVal 000E  
                                          ___flmul@grs 007D  
                       ??_DMA1_DefaultInterruptHandler 0014  
                        ??_ADCC_SetADIInterruptHandler 0020  
                   _UART1_FramingErrorInterruptHandler 0024  
                                      _SPI1_Initialize 4D08  
                       ?_UART1_SetUartInterruptHandler 0060  
                                    ??_source_dma_done 0014  
                                       __end_of_WaitMs 4AC4  
                         __end_of_INTERRUPT_Initialize 43C4  
                                            _Led_Blink 4C20  
                                        ??_display_led 0060  
                       ??_ADCC_DefaultInterruptHandler 0001  
                                       __end_of___flge 34C0  
                                       __end_of___fleq 3C84  
                                __end_of_build_version FE28  
                                        __pidataBIGRAM 172A  
                                          vfpfcnvrt@ap 00D4  
                                          vfpfcnvrt@cp 00E2  
                                          vfpfcnvrt@ct 00E9  
                                          vfpfcnvrt@fp 00D1  
                                       __end_of___wmul 4A74  
                                        __pidataCOMRAM 4F1E  
                                       __end_of_efgtoa 09B8  
                                       __end_of_floorf 2920  
                                       __end_of_memcpy 42DC  
                               ?_OSCILLATOR_Initialize 0001  
                                           floorf@F526 0118  
                                       __end_of_memset 2D2A  
                            ?_ADCC_GetConversionResult 0001  
                                       __end_of_printf 4A9C  
                                       __end_of_strcpy 3F8A  
                                       __end_of_strlen 4240  
                                  start_initialization 30F6  
                                      ___lodiv@divisor 0068  
                           ??_SystemArbiter_Initialize 0020  
                                      ___lodiv@counter 0078  
                                 _ringBufS_put_dma_cpy 40A2  
                 __end_of_TMR5_DefaultInterruptHandler 4F30  
                         _TMR5_DefaultInterruptHandler 4F2E  
                                          __end_of_pad 3BFA  
                              ??_UART1_SetErrorHandler 0020  
                          ?_UART1_framing_err_vect_isr 0001  
                                          ?_linux_getc 0060  
                                          ?_linux_putc 0076  
                                 __end_of_send_lcd_cmd 46E6  
                                ??_UART1_RxDataHandler 001D  
                                          putch@txData 0060  
                                           ivt0x8_base 0008  
                                        _uart1RxBuffer 0300  
                                __end_of___fpclassifyf 3728  
                                     ??_ringBufS_flush 0020  
                                        _uart1TxBuffer 0240  
                                  DATAEE_ReadByte@bAdd 0060  
                                             ??_WaitMs 0021  
                                          vfprintf@fmt 019F  
                                             ??___flge 008F  
                                             ??___fleq 0068  
                                     ??_PMD_Initialize 0020  
                                            _TimerDone 4B0C  
                                        _ringBufS_init 4C00  
                                             ??___wmul 0020  
                                           ?_Led_Blink 0001  
                                             ??_efgtoa 009A  
                                          __pdataBANK0 00FD  
                                          __pdataBANK1 01C0  
                                          __pdataBANK2 0280  
                                             ??_floorf 007D  
                                             ??_memcpy 0020  
                                             ??_memset 0066  
                                         ??_Timers_Isr 000E  
                                           memset@dest 0060  
                              ringBufS_put_dma_cpy@len 006F  
                              ringBufS_put_dma_cpy@ptr 006D  
                                             ??_printf 0021  
                                        _send_lcd_data 4AC4  
                                             ??_strcpy 0064  
                                             ??_strlen 0020  
                      __end_of_eaDogM_WriteStringAtPos 3F28  
                                            ___fladd@a 0064  
                                            ___fladd@b 0060  
                                            ___fldiv@a 0064  
                                            ___fldiv@b 0060  
                                          __pbssBIGRAM 0583  
                                  __end_of_display_led 395E  
                          PWM5_LoadDutyValue@dutyValue 0060  
                              __end_of_DMA1_Initialize 3FEA  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0021  
                                            ___flsub@a 008B  
                                            ___flsub@b 0087  
                                ?_ringBufS_put_dma_cpy 006B  
                                   _UART1_ErrorHandler 012C  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 019D  
                                   _PWM6_LoadDutyValue 492A  
                                  ringBufS_flush@_this 006C  
                                eaDogM_WriteString@len 0072  
                                         ??_StartTimer 0062  
                              __end_of_SPI1_Initialize 4D22  
                             _UART1_RxInterruptHandler 002A  
                        ?_TMR5_DefaultInterruptHandler 0001  
                                             ?_Adc_Isr 0001  
                                  ?_PWM6_LoadDutyValue 0060  
                                         _init_display 3728  
                                       linux_putc@data 0076  
                         ?_UART1_SetRxInterruptHandler 0060  
                                   __end_of_Timers_Isr 41F0  
                                _TMR6_InterruptHandler 013B  
                                          _efgtoa$4180 00A1  
                                          _efgtoa$4172 009F  
                                          _efgtoa$4181 00A3  
                               _PIN_MANAGER_Initialize 358E  
                                        cli_init@a_ctx 0076  
                                       ?_ringBufS_init 006C  
                                    ?_UART1_Initialize 0001  
                                 __end_of_wait_lcd_set 4F02  
                 __end_of_UART1_SetFramingErrorHandler 4E72  
                         _UART1_SetFramingErrorHandler 4E64  
                                           ?_TimerDone 0001  
                                        __pmediumconst FDF8  
                                        cli_read@a_ctx 0084  
                                             ?___fladd 0060  
                                  UART1_Read@readValue 0020  
                                             ?___fldiv 0060  
                                             ?___awdiv 0060  
                                            __ptext100 4CB8  
                                            __ptext101 437A  
                                            __ptext110 4EEA  
                                            __ptext102 3F8A  
                                             ?___flneg 0060  
                                            __ptext111 4F08  
                                            __ptext103 4EAA  
                                            __ptext120 4524  
                                            __ptext112 440C  
                                            __ptext104 4ED2  
                                            __ptext121 4F26  
                                            __ptext113 4A1C  
                                            __ptext105 3D08  
                                            __ptext130 4F2E  
                                            __ptext122 3308  
                                            __ptext114 4454  
                                            __ptext106 4EB8  
                                            __ptext131 419E  
                                            __ptext123 4DAC  
                                            __ptext115 3AC2  
                                            __ptext107 492A  
                                            __ptext140 0000  
                                            __ptext132 4B54  
                                            __ptext124 488C  
                                            __ptext116 4F22  
                                            __ptext108 495C  
                                            __ptext133 4568  
                                            __ptext125 4B30  
                                            __ptext117 4F24  
                                            __ptext109 4C9A  
                                            __ptext134 4F30  
                                            __ptext126 4C20  
                                            __ptext118 4F0E  
                                            __ptext135 4F1A  
                                            __ptext127 4F28  
                                            __ptext119 4BDE  
                                            __ptext136 47A0  
                                            __ptext128 4F2C  
                                            __ptext137 4EF4  
                                            __ptext129 432C  
                                            __ptext138 47DC  
                                            __ptext139 4F14  
                                             ?___awmod 0060  
                                             ?___flmul 006E  
                                             ?___flsub 0087  
                                             ?___fltol 0060  
                                             ?___lodiv 0060  
                                             ?___lomod 0060  
                                   ??_UART1_Initialize 0020  
                                   __end_of_StartTimer 49BE  
                                     _uart1RxLastError 0038  
                                        _cli_read$3080 0089  
                                        ??_UART1_Write 0020  
                                 ??_PWM6_LoadDutyValue 0062  
                                             _DAC1CON0 003E9E  
                                             _DAC1CON1 003E9C  
                                       ?_send_lcd_data 0001  
                                            _disp_tick 00FC  
                                             _ADCC_ISR 4524  
                                      ___lomod@divisor 0068  
                                      ___lomod@counter 0020  
             __end_of_UART1_DefaultOverrunErrorHandler 4F24  
                   ??_UART1_DefaultOverrunErrorHandler 001D  
                    ?_UART1_DefaultOverrunErrorHandler 0001  
                     _UART1_DefaultOverrunErrorHandler 4F22  
                                             ?_isdigit 0060  
                                             _DMA1CON0 003BFC  
                                             _DMA1CON1 003BFD  
                                             _DMA1AIRQ 003BFE  
                                             _DMA1DPTR 003BEC  
                                             _DMA1SIRQ 003BFF  
                                             _DMA1SPTR 003BF4  
                                             ?_isspace 0060  
                                             ?_isupper 0060  
                                             ?_sprintf 01A3  
                                             ?_tolower 0066  
                                             _T2CLKCON 003FAE  
                                    _DMA1_DMASCNTI_ISR 4568  
                                             ?_strncmp 0064  
                                          _U1ERRIRbits 003DF9  
                                    ringBufS_put_dma@c 0062  
                                 _INTERRUPT_Initialize 437A  
                                             _T6CLKCON 003F96  
                                 __cli_interpret_cmd@i 0083  
                                   ?_DMA1_DMASCNTI_ISR 0001  
                              ?_UART1_FramingError_ISR 0001  
                                       ___wmul@product 0064  
                                             _LATAbits 003FBA  
                UART1_SetErrorHandler@interruptHandler 0060  
                                             _LATCbits 003FBC  
                                             _LATDbits 003FBD  
                                             _LATEbits 003FBE  
                                            _scmd_init 4D22  
                                             _LATFbits 003FBF  
                                             _IPR1bits 003981  
                                             _IPR2bits 003982  
                                             _IPR3bits 003983  
                                             _PIE1bits 003991  
                                             _PIE2bits 003992  
                                             _PIE3bits 003993  
                                            _tickCount 010C  
                                             _IPR8bits 003988  
                                             _IPR9bits 003989  
                                             _PIE8bits 003998  
                                             _PIE9bits 003999  
                                         _SPI1CON0bits 003D14  
                                             _IVTBASEH 003FD6  
                                             _IVTBASEL 003FD5  
                                             _IVTBASEU 003FD7  
                                            cli_read@i 008B  
                        ??_UART1_SetRxInterruptHandler 0020  
                                            _ring_buf1 0340  
                                             i2u333_48 47BA  
                                             i2u333_49 47CE  
                                             _PIR0bits 0039A0  
                                             i2u335_48 47F6  
                                             i2u335_49 480A  
                                             _PIR1bits 0039A1  
                                             _PIR2bits 0039A2  
                                             _SPI1BAUD 003D19  
                                  ??_DMA1_DMASCNTI_ISR 0014  
                                             i1u678_28 442C  
                                             i1u678_29 4440  
                                             _PIR4bits 0039A4  
                                             _SPI1CON0 003D14  
                                             _SPI1CON1 003D15  
                                             _SPI1CON2 003D16  
                                             i2u640_48 4B40  
                                            _puts$4363 0075  
                                             i2u628_40 4C28  
                                             i2u628_46 4C2A  
                                             i1u990_28 3B48  
                                             _PIR8bits 0039A8  
                                             i2u672_40 48AC  
                                             i2u671_48 4544  
                                             i2u671_49 4558  
                               send_lcd_cmd_dma@strPtr 0070  
                                             _PIR9bits 0039A9  
                                             i1u986_28 3AEC  
                                             i1u986_29 3B02  
                                             i2u659_40 41EE  
                                             i2u674_48 4358  
                                             i2u674_49 436C  
                           ??_TMR6_SetInterruptHandler 0020  
                                             i1u988_28 3B1C  
                                             i1u988_29 3B32  
                                             i2u676_48 4588  
                                             i2u676_49 459C  
                                          ??_Led_Blink 000B  
                           __end_of_UART1_Transmit_ISR 4A4A  
                                             _TMR5_ISR 432C  
                                             _TMR6_ISR 488C  
                        ?_UART1_SetFramingErrorHandler 0060  
                                          _display_led 38A4  
                                            _port_data 1543  
                                            _vfpfcnvrt 09B8  
                                         _SPI1INTFbits 003D1A  
                                    ___wmul@multiplier 0060  
                                            _static_ps 00FD  
                                            _start_lcd 4F02  
                               ??_ringBufS_put_dma_cpy 0020  
                                        _TMR6_CallBack 4B30  
                     __end_of_SystemArbiter_Initialize 4EAA  
                                     ?_DMA1_Initialize 0001  
                                          fh_p0@a_data 0076  
                                          fh_p1@a_data 0076  
                            ?_TMR5_SetInterruptHandler 0060  
                                  __end_of_UART1_Write 479E  
                            __end_of_DMA1_DMASCNTI_ISR 45AA  
                                DATAEE_WriteByte@bData 0062  
                                         _isspace$4284 0020  
                                           vfpfcnvrt@c 00E8  
                                           vfpfcnvrt@f 00EC  
                                     ?_SPI1_Initialize 0001  
                                          _INTCON0bits 003FD2  
                                            copy_data0 310A  
                                            copy_data1 3130  
                                            copy_data2 3152  
                                ?_INTERRUPT_Initialize 0001  
                                    ??_DAC1_Initialize 0020  
                       __end_of_UART1_FramingError_ISR 4EFC  
                                    ?_DATAEE_WriteByte 0060  
                               _uart1TxBufferRemaining 003C  
                                      _source_dma_done 4F1A  
                                    ??_TMR2_Initialize 0020  
                       ??_TMR5_DefaultInterruptHandler 000E  
                                   ??_DATAEE_WriteByte 0020  
                                           ?_scmd_init 0001  
                                         _uart1RxCount 0039  
                                      ??_ringBufS_init 0020  
                                             __Hrparam 0000  
                     __end_of_ADCC_GetConversionResult 4DC2  
                                            memcpy@tmp 0066  
                                           vfprintf@ap 01A1  
                                             __Lrparam 0000  
                                           vfprintf@fp 019D  
                                    Adc_Isr@c_adc_chan 0033  
                                          ??_TimerDone 0060  
                                        _wait_lcd_done 4DF4  
                                      ??_send_lcd_data 0021  
                              ??_OSCILLATOR_Initialize 0020  
                                         _send_lcd_cmd 46A8  
                                           ?_vfpfcnvrt 00D1  
                                    ??_PWM5_Initialize 0020  
                                             _adc_tick 00FB  
                                       ?_TMR6_CallBack 0001  
                                           ?_start_lcd 0001  
                                   ___fpclassifyf@F465 011C  
                                           sprintf@fmt 01A5  
                                             ___xxtofl 2E74  
                          __end_of_eaDogM_WriteCommand 4DF4  
                                             __pivt0x8 0008  
                                             _cli_init 44E2  
                                             _cli_read 2A8C  
                                             __ptext10 2D2A  
                                             __ptext11 0000  
                                             __ptext20 1E7A  
                                             __ptext12 4818  
                                             __ptext21 49EE  
                                             __ptext13 48C6  
                                             __ptext30 48F8  
                                             __ptext22 1B2A  
                                             __ptext14 3F28  
                                             __ptext31 4A4A  
                                             __ptext23 33F0  
                                             __ptext15 3B64  
                                             __ptext40 3DEC  
                                             __ptext32 3728  
                                             __ptext24 3BFA  
                                             __ptext16 2776  
                                             __ptext41 40A2  
                                             __ptext33 4AC4  
                                             __ptext25 2186  
                                             __ptext17 365C  
                                             __ptext50 414A  
                                             __ptext42 428E  
                                             __ptext34 466A  
                                             __ptext26 3D7C  
                                             __ptext18 37EA  
                                             __ptext51 38A4  
                                             __ptext43 4DE6  
                                             __ptext35 46A8  
                                             __ptext27 3C84  
                                             __ptext19 449C  
                                             __ptext60 41F0  
                                             __ptext52 2A8C  
                                             __ptext44 4C40  
                                             __ptext36 43C4  
                                             __ptext28 2FB6  
                                             __ptext61 4B78  
                                             __ptext53 2BDE  
                                             __ptext45 4DF4  
                                             __ptext37 4CD4  
                                             __ptext29 45AA  
                                             __ptext70 4852  
                                             __ptext62 4B9A  
                                             __ptext54 4E02  
                                             __ptext46 45EA  
                                             __ptext38 4C00  
                                             __ptext71 3E5A  
                                             __ptext63 4D6A  
                                             __ptext55 4AE8  
                                             __ptext47 4EFC  
                                             __ptext39 3EC4  
                                             __ptext80 4724  
                                             __ptext72 395E  
                                             __ptext64 4D80  
                                             __ptext56 4E10  
                                             __ptext48 4F02  
                                             __ptext81 321A  
                                             __ptext73 4EC6  
                                             __ptext65 4DC2  
                                             __ptext57 46E6  
                                             __ptext49 40F6  
                                             __ptext90 4E80  
                                             __ptext82 4E1E  
                                             __ptext74 4762  
                                             __ptext66 4DD4  
                                             __ptext58 240E  
                                             __ptext91 42DC  
                                             __ptext83 4E2C  
                                             __ptext75 462A  
                                             __ptext67 4CEE  
                                             __ptext59 2920  
                                             __ptext92 4E8E  
                                             __ptext84 4E3A  
                                             __ptext76 2E74  
                                             __ptext68 4C5E  
                                             __ptext93 4C7C  
                                             __ptext85 4E48  
                                             __ptext77 4A9C  
                                             __ptext69 4D96  
                                             __ptext94 4E9C  
                                             __ptext86 4E56  
                                             __ptext78 4B0C  
                                             __ptext95 4D08  
                                             __ptext87 4E64  
                                             __ptext79 498E  
                                             __ptext96 4D3A  
                                             __ptext88 4E72  
                                             __ptext97 4D52  
                                             __ptext89 49BE  
                                             __ptext98 4BBC  
                                             __ptext99 358E  
                                         ??_linux_getc 0021  
                                         ??_linux_putc 0021  
                        __end_of_UART1_SetErrorHandler 4E80  
                          DATAEE_WriteByte@GIEBitValue 0020  
                                           strcpy@dest 0060  
                                     _ringBufS_put_dma 40F6  
                               __cli_interpret_cmd@ret 0082  
                                    ??_PWM6_Initialize 0020  
                              _UART1_UartInterrupt_ISR 4F14  
                                    ??_DATAEE_ReadByte 0020  
                                          _IVTLOCKbits 003FD4  
                                             efgtoa@fp 0093  
                                             efgtoa@ne 00A9  
                                             efgtoa@pp 00A7  
                                             efgtoa@ou 00AD  
                            _UART1_OverrunErrorHandler 012F  
                            _ADCC_ADI_InterruptHandler 013E  
                                            stoa@F1164 01C0  
         UART1_SetOverrunErrorHandler@interruptHandler 0060  
                                       ?_wait_lcd_done 0001  
                                             isa$xinst 000000  
                                             _spi_link 0100  
                                             _roll_max 00FE  
                           ?_UART1_DefaultErrorHandler 0001  
                                          fh_pd@a_data 0076  
                                             _wdtdelay 43C4  
                                             _vfprintf 3FEA  
                                            printf@fmt 01A3  
                                   __end_of_linux_getc 4B0C  
                                    _UART1_is_rx_ready 4E10  
                                   __end_of_linux_putc 4E10  
                                          _UART1_Write 4762  
                           __end_of__cli_interpret_cmd 25C6  
                 __end_of_DMA1_DefaultInterruptHandler 4F32  
                         _DMA1_DefaultInterruptHandler 4F30  
                                    ??_TMR5_Initialize 0063  
                                   ?_UART1_is_rx_ready 0001  
                                        ??_Default_ISR 000E  
                                          fh_pl@a_data 0076  
                       ??_UART1_SetFramingErrorHandler 0020  
                                       _vfpfcnvrt$4219 00E6  
                          __end_of_UART1_RxDataHandler 4C00  
                                        _ps_type_index 0034  
                                          _uart1RxHead 003B  
                                          _uart1TxHead 003E  
                                          _uart1RxTail 003A  
                                          _NVMCON1bits 0039E5  
                                          fh_po@a_data 0076  
                                          _uart1TxTail 003D  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                          fh_pp@a_data 0076  
                              __end_of_source_dma_done 4F1E  
                                             isdigit@c 0060  
                               ??_INTERRUPT_Initialize 0020  
                                          fh_pr@a_data 0076  
                                         _wait_lcd_set 4EFC  
                                  ??_UART1_is_rx_ready 0020  
                                          fh_ps@a_data 0076  
                 __end_of_TMR6_DefaultInterruptHandler 4F2A  
                         _TMR6_DefaultInterruptHandler 4F28  
                                          fh_pu@a_data 0076  
                                    _send_lcd_data_dma 45EA  
                 __end_of_ADCC_DefaultInterruptHandler 4F28  
                         _ADCC_DefaultInterruptHandler 4F26  
                                             intlevel1 0000  
                                             intlevel2 0000  
                                            sprintf@ap 01AF  
                                    _send_lcd_cmd_long 466A  
                                   ?_send_lcd_data_dma 0001  
                                             isspace@c 0060  
                              ?_PIN_MANAGER_Initialize 0001  
                                    ??_TMR6_Initialize 0020  
                                          ??_scmd_init 0021  
                                   ?_send_lcd_cmd_long 0001  
                                            strcpy@src 0062  
                           __end_of_eaDogM_WriteString 3E5A  
                                             isupper@c 0060  
                                            strncmp@_l 0064  
                                            strncmp@_r 0066  
                            ?_SystemArbiter_Initialize 0001  
                                  _uart1RxStatusBuffer 0200  
                                  ??_send_lcd_data_dma 0021  
                                          efgtoa@nmode 00B7  
                                           _SPI1SDIPPS 003ADF  
                                           _SPI1SCKPPS 003ADE  
                                  ??_send_lcd_cmd_long 0021  
                                             printf@ap 00F2  
                            __end_of_UART1_is_rx_ready 4E1E  
                               eaDogM_WriteCommand@cmd 0071  
                                           _UART1_Read 46E6  
         UART1_SetFramingErrorHandler@interruptHandler 0060  
                             _ADCC_GetConversionResult 4DAC  
                    __end_of_UART1_DefaultErrorHandler 4F14  
                                          ??_vfpfcnvrt 00D6  
                                             stoa@nuls 006F  
                                      ??_TMR6_CallBack 000C  
                                          ??_start_lcd 0020  
                                             sprintf@f 01B1  
                                             tolower@c 0066  
                                             sprintf@s 01A3  
                                     _send_lcd_cmd_dma 4C40  
                                           _PRLOCKbits 0039EF  
                        ?_DMA1_DefaultInterruptHandler 0001  
                                             strncmp@l 006C  
                                             strncmp@n 0068  
                                             strncmp@r 006E  
                          PWM6_LoadDutyValue@dutyValue 0060  
                            __end_of_send_lcd_data_dma 462A  
                             _UART1_TxInterruptHandler 0027  
                            __end_of_send_lcd_cmd_long 46A8  
                                          _ps_type_ptr 003F  
                                        ___fladd@signs 006C  
                                  __end_of_Default_ISR 4F2E  
                       __end_of_PIN_MANAGER_Initialize 365C  
                                    ??_ADCC_Initialize 0020  
                                       _DAC1_GetOutput 4F08  
                        ?_TMR6_DefaultInterruptHandler 0001  
                            ??_UART1_UartInterrupt_ISR 0018  
        __end_of_UART1_SetFramingErrorInterruptHandler 4E64  
              ??_UART1_SetFramingErrorInterruptHandler 0020  
               ?_UART1_SetFramingErrorInterruptHandler 0060  
                _UART1_SetFramingErrorInterruptHandler 4E56  
                                         ___fladd@aexp 006D  
                                         ___fladd@bexp 006E  
                        ?_ADCC_DefaultInterruptHandler 0001  
                         ?_UART1_SetTxInterruptHandler 0060  
                              _eaDogM_WriteStringAtPos 3EC4  
                                      ??_wait_lcd_done 0020  
                           __end_of_spi1_configuration FDFE  
