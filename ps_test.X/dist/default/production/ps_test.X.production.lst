

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar  9 11:55:16 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=4,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=4,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=4,class=CODE,delta=1
   100                           	psect	text81,global,reloc=4,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=4,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=4,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118  0000                     
   119                           ; Version 2.40
   120                           ; Generated 17/11/2021 GMT
   121                           ; 
   122                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution. Publication is not required when
   136                           ;        this file is used in an embedded application.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC18F57K42 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     
   155                           	psect	idataBANK0
   156  005D96                     __pidataBANK0:
   157                           	callstack 0
   158                           
   159                           ;initializer for _mode
   160  005D96  01                 	db	1
   161                           
   162                           ;initializer for _build_time
   163  005D97  D0                 	db	low STR_2
   164                           
   165                           ;initializer for _build_date
   166  005D98  C4                 	db	low STR_1
   167                           
   168                           	psect	idataBANK1
   169  005CB0                     __pidataBANK1:
   170                           	callstack 0
   171                           
   172                           ;initializer for stoa@F1164
   173  005CB0  28                 	db	40
   174  005CB1  6E                 	db	110
   175  005CB2  75                 	db	117
   176  005CB3  6C                 	db	108
   177  005CB4  6C                 	db	108
   178  005CB5  29                 	db	41
   179  005CB6  00                 	db	0
   180                           
   181                           ;initializer for _g_cmds
   182  005CB7  F3                 	db	low STR_7
   183  005CB8  42                 	db	low _fh_pr
   184  005CB9  5B                 	db	high _fh_pr
   185  005CBA  00                 	db	low (_fh_pr shr (0+16))
   186  005CBB  F6                 	db	low STR_8
   187  005CBC  98                 	db	low _fh_ps
   188  005CBD  5C                 	db	high _fh_ps
   189  005CBE  00                 	db	low (_fh_ps shr (0+16))
   190  005CBF  F0                 	db	low STR_9
   191  005CC0  80                 	db	low _fh_po
   192  005CC1  5C                 	db	high _fh_po
   193  005CC2  00                 	db	low (_fh_po shr (0+16))
   194  005CC3  00                 	db	0
   195  005CC4  00                 	db	0
   196  005CC5  00                 	db	0
   197  005CC6  00                 	db	0
   198                           
   199                           	psect	smallconst
   200  002000                     __psmallconst:
   201                           	callstack 0
   202  002000  00                 	db	0
   203  002001  02                 	db	2
   204  002002  40                 	db	64
   205  002003  00                 	db	0
   206  002004  08                 	db	8
   207  002005  00                 	db	0
   208  002006                     __end_of_spi1_configuration:
   209                           	callstack 0
   210  002006                     _cmdm:
   211                           	callstack 0
   212  002006  0D                 	db	13
   213  002007  0A                 	db	10
   214  002008  20                 	db	32
   215  002009  43                 	db	67
   216  00200A  6F                 	db	111
   217  00200B  6D                 	db	109
   218  00200C  6D                 	db	109
   219  00200D  61                 	db	97
   220  00200E  6E                 	db	110
   221  00200F  64                 	db	100
   222  002010  20                 	db	32
   223  002011  70                 	db	112
   224  002012  72                 	db	114
   225  002013  6F                 	db	111
   226  002014  63                 	db	99
   227  002015  65                 	db	101
   228  002016  73                 	db	115
   229  002017  73                 	db	115
   230  002018  6F                 	db	111
   231  002019  72                 	db	114
   232  00201A  20                 	db	32
   233  00201B  56                 	db	86
   234  00201C  30                 	db	48
   235  00201D  2E                 	db	46
   236  00201E  31                 	db	49
   237  00201F  0D                 	db	13
   238  002020  0A                 	db	10
   239  002021  00                 	db	0
   240  002022                     __end_of_cmdm:
   241                           	callstack 0
   242  0000                     _T5CON	set	16282
   243  0000                     _TMR5L	set	16280
   244  0000                     _TMR5H	set	16281
   245  0000                     _T5GCON	set	16283
   246  0000                     _IVTBASEL	set	16341
   247  0000                     _IVTBASEH	set	16342
   248  0000                     _IVTBASEU	set	16343
   249  0000                     _T6CON	set	16276
   250  0000                     _T6RST	set	16279
   251  0000                     _ADERRL	set	16098
   252  0000                     _ADERRH	set	16099
   253  0000                     _ADPREVL	set	16109
   254  0000                     _ADPREVH	set	16110
   255  0000                     _ADFLTRL	set	16102
   256  0000                     _ADFLTRH	set	16103
   257  0000                     _ADACCL	set	16104
   258  0000                     _ADACCH	set	16105
   259  0000                     _ADCNT	set	16107
   260  0000                     _ADRESL	set	16111
   261  0000                     _ADRESH	set	16112
   262  0000                     _ADCON0	set	16120
   263  0000                     _ADCON1	set	16121
   264  0000                     _ADPREH	set	16119
   265  0000                     _ADPREL	set	16118
   266  0000                     _ADCAP	set	16117
   267  0000                     _ADACQH	set	16116
   268  0000                     _ADPCH	set	16113
   269  0000                     _ADRPT	set	16108
   270  0000                     _ADACCU	set	16106
   271  0000                     _ADSTPTH	set	16101
   272  0000                     _ADSTPTL	set	16100
   273  0000                     _ADUTHH	set	16097
   274  0000                     _ADUTHL	set	16096
   275  0000                     _ADLTHH	set	16095
   276  0000                     _OSCTUNE	set	14814
   277  0000                     _OSCFRQ	set	14815
   278  0000                     _OSCEN	set	14813
   279  0000                     _TRISD	set	16325
   280  0000                     _TRISC	set	16324
   281  0000                     _TRISB	set	16323
   282  0000                     _LATC	set	16316
   283  0000                     _LATB	set	16315
   284  0000                     _PLLR	set	118496
   285  0000                     _U1ERRIRbits	set	15865
   286  0000                     _LATFbits	set	16319
   287  0000                     _LATAbits	set	16314
   288  0000                     _LATDbits	set	16317
   289  0000                     _LATEbits	set	16318
   290  0000                     _TRISCbits	set	16324
   291  0000                     _T5CONbits	set	16282
   292  0000                     _IVTLOCKbits	set	16340
   293  0000                     _GIE	set	130711
   294  0000                     _IPR1bits	set	14721
   295  0000                     _IPR3bits	set	14723
   296  0000                     _PIE1bits	set	14737
   297  0000                     _PIR1bits	set	14753
   298  0000                     _PMD0	set	14784
   299  0000                     _OSCCON1	set	14809
   300  0000                     _RC3PPS	set	14867
   301  0000                     _ANSELA	set	14912
   302  0000                     _ANSELB	set	14928
   303  0000                     _ANSELC	set	14944
   304  0000                     _ANSELD	set	14960
   305  0000                     _LATA	set	16314
   306  0000                     _LATD	set	16317
   307  0000                     _LATE	set	16318
   308  0000                     _TRISA	set	16322
   309  0000                     _TRISE	set	16326
   310  0000                     _LATF	set	16319
   311  0000                     _PORTAbits	set	16330
   312  0000                     _INTCON0bits	set	16338
   313  0000                     _TRISF	set	16327
   314  0000                     _INLVLD	set	14964
   315  0000                     _SLRCOND	set	14963
   316  0000                     _ODCOND	set	14962
   317  0000                     _RD0I2C	set	14970
   318  0000                     _WPUD	set	14961
   319  0000                     _ANSELE	set	14976
   320  0000                     _INLVLC	set	14948
   321  0000                     _SLRCONC	set	14947
   322  0000                     _ODCONC	set	14946
   323  0000                     _RC3I2C	set	14954
   324  0000                     _WPUC	set	14945
   325  0000                     _INLVLB	set	14932
   326  0000                     _SLRCONB	set	14931
   327  0000                     _ODCONB	set	14930
   328  0000                     _RB1I2C	set	14938
   329  0000                     _WPUB	set	14929
   330  0000                     _INLVLE	set	14980
   331  0000                     _SLRCONE	set	14979
   332  0000                     _ODCONE	set	14978
   333  0000                     _WPUE	set	14977
   334  0000                     _ANSELF	set	14992
   335  0000                     _SPI1SCKPPS	set	15070
   336  0000                     _INLVLF	set	14996
   337  0000                     _SLRCONF	set	14995
   338  0000                     _ODCONF	set	14994
   339  0000                     _WPUF	set	14993
   340  0000                     _INLVLA	set	14916
   341  0000                     _SLRCONA	set	14915
   342  0000                     _ODCONA	set	14914
   343  0000                     _WPUA	set	14913
   344  0000                     _RB2I2C	set	14939
   345  0000                     _RC4I2C	set	14955
   346  0000                     _RD1I2C	set	14971
   347  0000                     _SPI1SDIPPS	set	15071
   348  0000                     _U1RXPPS	set	15077
   349  0000                     _RC5PPS	set	14869
   350  0000                     _RC6PPS	set	14870
   351  0000                     _SPI1RXB	set	15632
   352  0000                     _SPI1TXB	set	15633
   353  0000                     _SPI1TCNTL	set	15634
   354  0000                     _SPI1CON0	set	15636
   355  0000                     _U1RXB	set	15848
   356  0000                     _U1TXB	set	15850
   357  0000                     _U1P1L	set	15852
   358  0000                     _DAC1CON1	set	16028
   359  0000                     _DAC1CON0	set	16030
   360  0000                     _ADLTHL	set	16094
   361  0000                     _OSCCON3	set	14811
   362  0000                     _PMD7	set	14791
   363  0000                     _PMD6	set	14790
   364  0000                     _PMD5	set	14789
   365  0000                     _PMD4	set	14788
   366  0000                     _PMD3	set	14787
   367  0000                     _PMD2	set	14786
   368  0000                     _PMD1	set	14785
   369  0000                     _ADACQL	set	16115
   370  0000                     _T6TMR	set	16274
   371  0000                     _T6PR	set	16275
   372  0000                     _T6HLT	set	16277
   373  0000                     _T6CLKCON	set	16278
   374  0000                     _ADCLK	set	16127
   375  0000                     _ADACT	set	16126
   376  0000                     _ADREF	set	16125
   377  0000                     _ADSTAT	set	16124
   378  0000                     _ADCON3	set	16123
   379  0000                     _ADCON2	set	16122
   380  0000                     _PIR2bits	set	14754
   381  0000                     _PIR8bits	set	14760
   382  0000                     _PIR9bits	set	14761
   383  0000                     _PIE3bits	set	14739
   384  0000                     _PIE9bits	set	14745
   385  0000                     _IVTLOCK	set	16340
   386  0000                     _IPR8bits	set	14728
   387  0000                     _IPR9bits	set	14729
   388  0000                     _PIE8bits	set	14744
   389  0000                     _U1ERRIE	set	15866
   390  0000                     _U1ERRIR	set	15865
   391  0000                     _U1UIR	set	15864
   392  0000                     _U1FIFO	set	15863
   393  0000                     _U1BRGH	set	15862
   394  0000                     _U1BRGL	set	15861
   395  0000                     _U1CON2	set	15860
   396  0000                     _U1CON1	set	15859
   397  0000                     _U1CON0	set	15858
   398  0000                     _U1P3H	set	15857
   399  0000                     _U1P3L	set	15856
   400  0000                     _U1P2H	set	15855
   401  0000                     _U1P2L	set	15854
   402  0000                     _U1P1H	set	15853
   403  0000                     _T5CLK	set	16285
   404  0000                     _T5GATE	set	16284
   405  0000                     _SPI1BAUD	set	15641
   406  0000                     _SPI1CLK	set	15644
   407  0000                     _SPI1CON2	set	15638
   408  0000                     _SPI1CON1	set	15637
   409  0000                     _PORTBbits	set	16331
   410  002022                     STR_6:
   411                           
   412                           ; BSR set to: 0
   413  002022  20                 	db	32
   414  002023  50                 	db	80	;'P'
   415  002024  53                 	db	83	;'S'
   416  002025  20                 	db	32
   417  002026  54                 	db	84	;'T'
   418  002027  65                 	db	101	;'e'
   419  002028  73                 	db	115	;'s'
   420  002029  74                 	db	116	;'t'
   421  00202A  20                 	db	32
   422  00202B  25                 	db	37
   423  00202C  31                 	db	49	;'1'
   424  00202D  75                 	db	117	;'u'
   425  00202E  3A                 	db	58	;':'
   426  00202F  20                 	db	32
   427  002030  44                 	db	68	;'D'
   428  002031  41                 	db	65	;'A'
   429  002032  43                 	db	67	;'C'
   430  002033  20                 	db	32
   431  002034  4F                 	db	79	;'O'
   432  002035  55                 	db	85	;'U'
   433  002036  54                 	db	84	;'T'
   434  002037  3D                 	db	61	;'='
   435  002038  25                 	db	37
   436  002039  32                 	db	50	;'2'
   437  00203A  75                 	db	117	;'u'
   438  00203B  2C                 	db	44
   439  00203C  20                 	db	32
   440  00203D  53                 	db	83	;'S'
   441  00203E  75                 	db	117	;'u'
   442  00203F  70                 	db	112	;'p'
   443  002040  70                 	db	112	;'p'
   444  002041  6C                 	db	108	;'l'
   445  002042  79                 	db	121	;'y'
   446  002043  20                 	db	32
   447  002044  52                 	db	82	;'R'
   448  002045  65                 	db	101	;'e'
   449  002046  61                 	db	97	;'a'
   450  002047  64                 	db	100	;'d'
   451  002048  42                 	db	66	;'B'
   452  002049  61                 	db	97	;'a'
   453  00204A  63                 	db	99	;'c'
   454  00204B  6B                 	db	107	;'k'
   455  00204C  20                 	db	32
   456  00204D  25                 	db	37
   457  00204E  34                 	db	52	;'4'
   458  00204F  75                 	db	117	;'u'
   459  002050  20                 	db	32
   460  002051  56                 	db	86	;'V'
   461  002052  3D                 	db	61	;'='
   462  002053  25                 	db	37
   463  002054  2B                 	db	43
   464  002055  35                 	db	53	;'5'
   465  002056  2E                 	db	46
   466  002057  31                 	db	49	;'1'
   467  002058  66                 	db	102	;'f'
   468  002059  56                 	db	86	;'V'
   469  00205A  20                 	db	32
   470  00205B  25                 	db	37
   471  00205C  34                 	db	52	;'4'
   472  00205D  75                 	db	117	;'u'
   473  00205E  20                 	db	32
   474  00205F  49                 	db	73	;'I'
   475  002060  3D                 	db	61	;'='
   476  002061  25                 	db	37
   477  002062  2B                 	db	43
   478  002063  33                 	db	51	;'3'
   479  002064  2E                 	db	46
   480  002065  31                 	db	49	;'1'
   481  002066  66                 	db	102	;'f'
   482  002067  6D                 	db	109	;'m'
   483  002068  41                 	db	65	;'A'
   484  002069  0D                 	db	13
   485  00206A  0A                 	db	10
   486  00206B  00                 	db	0
   487  00206C                     STR_3:
   488                           
   489                           ; BSR set to: 0
   490  00206C  0D                 	db	13
   491  00206D  0A                 	db	10
   492  00206E  20                 	db	32
   493  00206F  52                 	db	82	;'R'
   494  002070  61                 	db	97	;'a'
   495  002071  6D                 	db	109	;'m'
   496  002072  70                 	db	112	;'p'
   497  002073  20                 	db	32
   498  002074  74                 	db	116	;'t'
   499  002075  6F                 	db	111	;'o'
   500  002076  20                 	db	32
   501  002077  31                 	db	49	;'1'
   502  002078  30                 	db	48	;'0'
   503  002079  30                 	db	48	;'0'
   504  00207A  30                 	db	48	;'0'
   505  00207B  56                 	db	86	;'V'
   506  00207C  44                 	db	68	;'D'
   507  00207D  43                 	db	67	;'C'
   508  00207E  20                 	db	32
   509  00207F  4F                 	db	79	;'O'
   510  002080  4E                 	db	78	;'N'
   511  002081  20                 	db	32
   512  002082  0D                 	db	13
   513  002083  0A                 	db	10
   514  002084  00                 	db	0
   515  002085                     STR_4:
   516                           
   517                           ; BSR set to: 0
   518  002085  0D                 	db	13
   519  002086  0A                 	db	10
   520  002087  20                 	db	32
   521  002088  53                 	db	83	;'S'
   522  002089  74                 	db	116	;'t'
   523  00208A  65                 	db	101	;'e'
   524  00208B  61                 	db	97	;'a'
   525  00208C  64                 	db	100	;'d'
   526  00208D  79                 	db	121	;'y'
   527  00208E  20                 	db	32
   528  00208F  31                 	db	49	;'1'
   529  002090  30                 	db	48	;'0'
   530  002091  30                 	db	48	;'0'
   531  002092  30                 	db	48	;'0'
   532  002093  56                 	db	86	;'V'
   533  002094  44                 	db	68	;'D'
   534  002095  43                 	db	67	;'C'
   535  002096  20                 	db	32
   536  002097  4F                 	db	79	;'O'
   537  002098  4E                 	db	78	;'N'
   538  002099  20                 	db	32
   539  00209A  0D                 	db	13
   540  00209B  0A                 	db	10
   541  00209C  00                 	db	0
   542  00209D                     STR_10:
   543                           
   544                           ; BSR set to: 0
   545  00209D  0D                 	db	13
   546  00209E  0A                 	db	10
   547  00209F  20                 	db	32
   548  0020A0  50                 	db	80	;'P'
   549  0020A1  73                 	db	115	;'s'
   550  0020A2  20                 	db	32
   551  0020A3  54                 	db	84	;'T'
   552  0020A4  65                 	db	101	;'e'
   553  0020A5  73                 	db	115	;'s'
   554  0020A6  74                 	db	116	;'t'
   555  0020A7  65                 	db	101	;'e'
   556  0020A8  72                 	db	114	;'r'
   557  0020A9  20                 	db	32
   558  0020AA  25                 	db	37
   559  0020AB  73                 	db	115	;'s'
   560  0020AC  20                 	db	32
   561  0020AD  25                 	db	37
   562  0020AE  73                 	db	115	;'s'
   563  0020AF  0D                 	db	13
   564  0020B0  0A                 	db	10
   565  0020B1  00                 	db	0
   566  0020B2                     STR_5:
   567                           
   568                           ; BSR set to: 0
   569  0020B2  0D                 	db	13
   570  0020B3  0A                 	db	10
   571  0020B4  20                 	db	32
   572  0020B5  56                 	db	86	;'V'
   573  0020B6  6F                 	db	111	;'o'
   574  0020B7  6C                 	db	108	;'l'
   575  0020B8  74                 	db	116	;'t'
   576  0020B9  61                 	db	97	;'a'
   577  0020BA  67                 	db	103	;'g'
   578  0020BB  65                 	db	101	;'e'
   579  0020BC  20                 	db	32
   580  0020BD  4F                 	db	79	;'O'
   581  0020BE  46                 	db	70	;'F'
   582  0020BF  46                 	db	70	;'F'
   583  0020C0  20                 	db	32
   584  0020C1  0D                 	db	13
   585  0020C2  0A                 	db	10
   586  0020C3  00                 	db	0
   587  0020C4                     STR_1:
   588                           
   589                           ; BSR set to: 0
   590  0020C4  4D                 	db	77	;'M'
   591  0020C5  61                 	db	97	;'a'
   592  0020C6  72                 	db	114	;'r'
   593  0020C7  20                 	db	32
   594  0020C8  20                 	db	32
   595  0020C9  39                 	db	57	;'9'
   596  0020CA  20                 	db	32
   597  0020CB  32                 	db	50	;'2'
   598  0020CC  30                 	db	48	;'0'
   599  0020CD  32                 	db	50	;'2'
   600  0020CE  32                 	db	50	;'2'
   601  0020CF  00                 	db	0
   602  0020D0                     STR_2:
   603                           
   604                           ; BSR set to: 0
   605  0020D0  31                 	db	49	;'1'
   606  0020D1  31                 	db	49	;'1'
   607  0020D2  3A                 	db	58	;':'
   608  0020D3  35                 	db	53	;'5'
   609  0020D4  35                 	db	53	;'5'
   610  0020D5  3A                 	db	58	;':'
   611  0020D6  30                 	db	48	;'0'
   612  0020D7  39                 	db	57	;'9'
   613  0020D8  00                 	db	0
   614  0020D9                     STR_12:
   615                           
   616                           ; BSR set to: 0
   617  0020D9  49                 	db	73	;'I'
   618  0020DA  4E                 	db	78	;'N'
   619  0020DB  46                 	db	70	;'F'
   620  0020DC  00                 	db	0
   621  0020DD                     STR_16:
   622                           
   623                           ; BSR set to: 0
   624  0020DD  4E                 	db	78	;'N'
   625  0020DE  41                 	db	65	;'A'
   626  0020DF  4E                 	db	78	;'N'
   627  0020E0  00                 	db	0
   628  0020E1                     STR_13:
   629                           
   630                           ; BSR set to: 0
   631  0020E1  69                 	db	105	;'i'
   632  0020E2  6E                 	db	110	;'n'
   633  0020E3  66                 	db	102	;'f'
   634  0020E4  00                 	db	0
   635  0020E5                     STR_17:
   636                           
   637                           ; BSR set to: 0
   638  0020E5  6E                 	db	110	;'n'
   639  0020E6  61                 	db	97	;'a'
   640  0020E7  6E                 	db	110	;'n'
   641  0020E8  00                 	db	0
   642  0020E9                     STR_25:
   643                           
   644                           ; BSR set to: 0
   645  0020E9  6C                 	db	108	;'l'
   646  0020EA  6C                 	db	108	;'l'
   647  0020EB  73                 	db	115	;'s'
   648  0020EC  00                 	db	0
   649  0020ED                     STR_20:
   650                           
   651                           ; BSR set to: 0
   652  0020ED  6C                 	db	108	;'l'
   653  0020EE  66                 	db	102	;'f'
   654  0020EF  00                 	db	0
   655  0020F0                     STR_9:
   656                           
   657                           ; BSR set to: 0
   658  0020F0  70                 	db	112	;'p'
   659  0020F1  6F                 	db	111	;'o'
   660  0020F2  00                 	db	0
   661  0020F3                     STR_7:
   662                           
   663                           ; BSR set to: 0
   664  0020F3  70                 	db	112	;'p'
   665  0020F4  72                 	db	114	;'r'
   666  0020F5  00                 	db	0
   667  0020F6                     STR_8:
   668                           
   669                           ; BSR set to: 0
   670  0020F6  70                 	db	112	;'p'
   671  0020F7  73                 	db	115	;'s'
   672  0020F8  00                 	db	0
   673  0020F9  00                 	db	0	; dummy byte at the end
   674  0000                     
   675                           ; #config settings
   676                           
   677                           	psect	cinit
   678  0050B2                     __pcinit:
   679                           	callstack 0
   680  0050B2                     start_initialization:
   681                           	callstack 0
   682  0050B2                     __initialization:
   683                           	callstack 0
   684                           
   685                           ; Initialize objects allocated to BANK1 (23 bytes)
   686                           ; load TBLPTR registers with __pidataBANK1
   687  0050B2  0EB0               	movlw	low __pidataBANK1
   688  0050B4  6EF6               	movwf	tblptrl,c
   689  0050B6  0E5C               	movlw	high __pidataBANK1
   690  0050B8  6EF7               	movwf	tblptrh,c
   691  0050BA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   692  0050BC  6EF8               	movwf	tblptru,c
   693  0050BE  EE00  F1E8         	lfsr	0,__pdataBANK1
   694  0050C2  EE10 F017          	lfsr	1,23
   695  0050C6                     copy_data0:
   696  0050C6  0009               	tblrd		*+
   697  0050C8  006F FFD7 FFEE     	movff	tablat,postinc0
   698  0050CE  50E5               	movf	postdec1,w,c
   699  0050D0  50E1               	movf	fsr1l,w,c
   700  0050D2  E1F9               	bnz	copy_data0
   701                           
   702                           ; Initialize objects allocated to BANK0 (3 bytes)
   703                           ; load TBLPTR registers with __pidataBANK0
   704  0050D4  0E96               	movlw	low __pidataBANK0
   705  0050D6  6EF6               	movwf	tblptrl,c
   706  0050D8  0E5D               	movlw	high __pidataBANK0
   707  0050DA  6EF7               	movwf	tblptrh,c
   708  0050DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   709  0050DE  6EF8               	movwf	tblptru,c
   710  0050E0  0009               	tblrd		*+	;fetch initializer
   711  0050E2  006F FFD4  F0FD    	movff	tablat,__pdataBANK0
   712  0050E8  0009               	tblrd		*+	;fetch initializer
   713  0050EA  006F FFD4  F0FE    	movff	tablat,__pdataBANK0+1
   714  0050F0  0009               	tblrd		*+	;fetch initializer
   715  0050F2  006F FFD4  F0FF    	movff	tablat,__pdataBANK0+2
   716                           
   717                           ; Clear objects allocated to BANK3 (255 bytes)
   718  0050F8  EE00  F300         	lfsr	0,__pbssBANK3
   719  0050FC  EE10 F0FF          	lfsr	1,255
   720  005100                     clear_0:
   721  005100  6AEE               	clrf	postinc0,c
   722  005102  50E5               	movf	postdec1,w,c
   723  005104  50E1               	movf	fsr1l,w,c
   724  005106  E1FC               	bnz	clear_0
   725  005108  50E2               	movf	fsr1h,w,c
   726  00510A  E1FA               	bnz	clear_0
   727                           
   728                           ; Clear objects allocated to BANK2 (195 bytes)
   729  00510C  EE00  F200         	lfsr	0,__pbssBANK2
   730  005110  0EC3               	movlw	195
   731  005112                     clear_1:
   732  005112  6AEE               	clrf	postinc0,c
   733  005114  06E8               	decf	wreg,f,c
   734  005116  E1FD               	bnz	clear_1
   735                           
   736                           ; Clear objects allocated to BANK1 (232 bytes)
   737  005118  EE00  F100         	lfsr	0,__pbssBANK1
   738  00511C  0EE8               	movlw	232
   739  00511E                     clear_2:
   740  00511E  6AEE               	clrf	postinc0,c
   741  005120  06E8               	decf	wreg,f,c
   742  005122  E1FD               	bnz	clear_2
   743                           
   744                           ; Clear objects allocated to BANK0 (36 bytes)
   745  005124  EE00  F0D9         	lfsr	0,__pbssBANK0
   746  005128  0E24               	movlw	36
   747  00512A                     clear_3:
   748  00512A  6AEE               	clrf	postinc0,c
   749  00512C  06E8               	decf	wreg,f,c
   750  00512E  E1FD               	bnz	clear_3
   751                           
   752                           ; Clear objects allocated to COMRAM (19 bytes)
   753  005130  EE00  F039         	lfsr	0,__pbssCOMRAM
   754  005134  0E13               	movlw	19
   755  005136                     clear_4:
   756  005136  6AEE               	clrf	postinc0,c
   757  005138  06E8               	decf	wreg,f,c
   758  00513A  E1FD               	bnz	clear_4
   759                           
   760                           ;
   761                           ; Setup IVTBASE
   762                           ;
   763  00513C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   764  00513E  6ED5               	movwf	213,c
   765  005140  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   766  005142  6ED6               	movwf	214,c
   767  005144  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   768  005146  6ED7               	movwf	215,c
   769  005148                     end_of_initialization:
   770                           	callstack 0
   771  005148                     __end_of__initialization:
   772                           	callstack 0
   773  005148  0100               	movlb	0
   774  00514A  EF12  F01D         	goto	_main	;jump to C main() function
   775                           
   776                           	psect	bssCOMRAM
   777  000039                     __pbssCOMRAM:
   778                           	callstack 0
   779  000039                     _ana:
   780                           	callstack 0
   781  000039                     	ds	4
   782  00003D                     _flags:
   783                           	callstack 0
   784  00003D                     	ds	2
   785  00003F                     _timer5ReloadVal:
   786                           	callstack 0
   787  00003F                     	ds	2
   788  000041                     TMR6_ISR@CountCallBack:
   789                           	callstack 0
   790  000041                     	ds	2
   791  000043                     _res:
   792                           	callstack 0
   793  000043                     	ds	1
   794  000044                     _adc_chan:
   795                           	callstack 0
   796  000044                     	ds	1
   797  000045                     _uart1RxLastError:
   798                           	callstack 0
   799  000045                     	ds	1
   800  000046                     _uart1RxCount:
   801                           	callstack 0
   802  000046                     	ds	1
   803  000047                     _uart1RxTail:
   804                           	callstack 0
   805  000047                     	ds	1
   806  000048                     _uart1RxHead:
   807                           	callstack 0
   808  000048                     	ds	1
   809  000049                     _uart1TxBufferRemaining:
   810                           	callstack 0
   811  000049                     	ds	1
   812  00004A                     _uart1TxTail:
   813                           	callstack 0
   814  00004A                     	ds	1
   815  00004B                     _uart1TxHead:
   816                           	callstack 0
   817  00004B                     	ds	1
   818                           
   819                           	psect	bssBANK0
   820  0000D9                     __pbssBANK0:
   821                           	callstack 0
   822  0000D9                     _vval:
   823                           	callstack 0
   824  0000D9                     	ds	4
   825  0000DD                     _TMR5_InterruptHandler:
   826                           	callstack 0
   827  0000DD                     	ds	3
   828  0000E0                     _UART1_ErrorHandler:
   829                           	callstack 0
   830  0000E0                     	ds	3
   831  0000E3                     _UART1_OverrunErrorHandler:
   832                           	callstack 0
   833  0000E3                     	ds	3
   834  0000E6                     _UART1_FramingErrorHandler:
   835                           	callstack 0
   836  0000E6                     	ds	3
   837  0000E9                     _TMR6_InterruptHandler:
   838                           	callstack 0
   839  0000E9                     	ds	3
   840  0000EC                     _ADCC_ADI_InterruptHandler:
   841                           	callstack 0
   842  0000EC                     	ds	3
   843  0000EF                     _UART1_TxInterruptHandler:
   844                           	callstack 0
   845  0000EF                     	ds	3
   846  0000F2                     _UART1_RxInterruptHandler:
   847                           	callstack 0
   848  0000F2                     	ds	3
   849  0000F5                     _nout:
   850                           	callstack 0
   851  0000F5                     	ds	2
   852  0000F7                     _width:
   853                           	callstack 0
   854  0000F7                     	ds	2
   855  0000F9                     _prec:
   856                           	callstack 0
   857  0000F9                     	ds	2
   858  0000FB                     _adc_tick:
   859                           	callstack 0
   860  0000FB                     	ds	1
   861  0000FC                     _disp_tick:
   862                           	callstack 0
   863  0000FC                     	ds	1
   864                           
   865                           	psect	dataBANK0
   866  0000FD                     __pdataBANK0:
   867                           	callstack 0
   868  0000FD                     _mode:
   869                           	callstack 0
   870  0000FD                     	ds	1
   871  0000FE                     _build_time:
   872                           	callstack 0
   873  0000FE                     	ds	1
   874  0000FF                     _build_date:
   875                           	callstack 0
   876  0000FF                     	ds	1
   877                           
   878                           	psect	bssBANK1
   879  000100                     __pbssBANK1:
   880                           	callstack 0
   881  000100                     _uart1RxStatusBuffer:
   882                           	callstack 0
   883  000100                     	ds	64
   884  000140                     _uart1TxBuffer:
   885                           	callstack 0
   886  000140                     	ds	64
   887  000180                     _tickCount:
   888                           	callstack 0
   889  000180                     	ds	12
   890  00018C                     floorf@F526:
   891                           	callstack 0
   892  00018C                     	ds	4
   893  000190                     ___fpclassifyf@F465:
   894                           	callstack 0
   895  000190                     	ds	4
   896  000194                     _ival:
   897                           	callstack 0
   898  000194                     	ds	4
   899  000198                     _dbuf:
   900                           	callstack 0
   901  000198                     	ds	80
   902                           
   903                           	psect	dataBANK1
   904  0001E8                     __pdataBANK1:
   905                           	callstack 0
   906  0001E8                     stoa@F1164:
   907                           	callstack 0
   908  0001E8                     	ds	7
   909  0001EF                     _g_cmds:
   910                           	callstack 0
   911  0001EF                     	ds	16
   912                           
   913                           	psect	bssBANK2
   914  000200                     __pbssBANK2:
   915                           	callstack 0
   916  000200                     _uart1RxBuffer:
   917                           	callstack 0
   918  000200                     	ds	64
   919  000240                     _cli_ctx:
   920                           	callstack 0
   921  000240                     	ds	131
   922                           
   923                           	psect	bssBANK3
   924  000300                     __pbssBANK3:
   925                           	callstack 0
   926  000300                     _buff1:
   927                           	callstack 0
   928  000300                     	ds	255
   929                           
   930                           	psect	cstackBANK2
   931  0002C3                     __pcstackBANK2:
   932                           	callstack 0
   933  0002C3                     ?_printf:
   934                           	callstack 0
   935  0002C3                     ?_sprintf:
   936                           	callstack 0
   937  0002C3                     printf@fmt:
   938                           	callstack 0
   939  0002C3                     sprintf@s:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x0
   943  0002C3                     	ds	2
   944  0002C5                     sprintf@fmt:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x2
   948  0002C5                     	ds	5
   949  0002CA                     sprintf@ap:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x7
   953  0002CA                     	ds	2
   954  0002CC                     sprintf@f:
   955                           	callstack 0
   956                           
   957                           ; 11 bytes @ 0x9
   958  0002CC                     	ds	11
   959  0002D7                     cli_init@a_ctx:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x14
   963  0002D7                     	ds	2
   964  0002D9                     cli_init@a_cmds:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x16
   968  0002D9                     	ds	2
   969                           
   970                           	psect	cstackBANK0
   971  000060                     __pcstackBANK0:
   972                           	callstack 0
   973  000060                     ??__cli_interpret_cmd:
   974  000060                     ?_utoa:
   975                           	callstack 0
   976  000060                     ___flmul@sign:
   977                           	callstack 0
   978  000060                     utoa@fp:
   979                           	callstack 0
   980  000060                     floorf@m:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x0
   984  000060                     	ds	1
   985  000061                     ___flmul@aexp:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x1
   989  000061                     	ds	1
   990  000062                     ___flmul@bexp:
   991                           	callstack 0
   992  000062                     utoa@d:
   993                           	callstack 0
   994                           
   995                           ; 8 bytes @ 0x2
   996  000062                     	ds	1
   997  000063                     ___flmul@grs:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x3
  1001  000063                     	ds	1
  1002  000064                     floorf@e:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x4
  1006  000064                     	ds	2
  1007  000066                     floorf@u:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x6
  1011  000066                     	ds	1
  1012  000067                     ___flmul@prod:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x7
  1016  000067                     	ds	3
  1017  00006A                     ??_utoa:
  1018  00006A                     _cli_read$2151:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0xA
  1022  00006A                     	ds	1
  1023  00006B                     ___flmul@temp:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0xB
  1027  00006B                     	ds	1
  1028  00006C                     cli_read@i:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0xC
  1032  00006C                     	ds	1
  1033  00006D                     ??___flge:
  1034                           
  1035                           ; 1 bytes @ 0xD
  1036  00006D                     	ds	4
  1037  000071                     ?_efgtoa:
  1038                           	callstack 0
  1039  000071                     efgtoa@fp:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x11
  1043  000071                     	ds	1
  1044  000072                     utoa@p:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x12
  1048  000072                     	ds	1
  1049  000073                     efgtoa@f:
  1050                           	callstack 0
  1051                           
  1052                           ; 4 bytes @ 0x13
  1053  000073                     	ds	1
  1054  000074                     utoa@w:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x14
  1058  000074                     	ds	2
  1059  000076                     utoa@n:
  1060                           	callstack 0
  1061                           
  1062                           ; 8 bytes @ 0x16
  1063  000076                     	ds	1
  1064  000077                     efgtoa@c:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x17
  1068  000077                     	ds	1
  1069  000078                     ??_efgtoa:
  1070                           
  1071                           ; 1 bytes @ 0x18
  1072  000078                     	ds	5
  1073  00007D                     _efgtoa$2723:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x1D
  1077  00007D                     	ds	1
  1078  00007E                     utoa@i:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x1E
  1082  00007E                     	ds	1
  1083  00007F                     _efgtoa$2731:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x1F
  1087  00007F                     	ds	2
  1088  000081                     _efgtoa$2732:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x21
  1092  000081                     	ds	2
  1093  000083                     efgtoa@t:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x23
  1097  000083                     	ds	2
  1098  000085                     efgtoa@pp:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x25
  1102  000085                     	ds	2
  1103  000087                     efgtoa@ne:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x27
  1107  000087                     	ds	2
  1108  000089                     efgtoa@m:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x29
  1112  000089                     	ds	2
  1113  00008B                     efgtoa@ou:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x2B
  1117  00008B                     	ds	4
  1118  00008F                     efgtoa@d:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x2F
  1122  00008F                     	ds	2
  1123  000091                     efgtoa@sign:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x31
  1127  000091                     	ds	2
  1128  000093                     efgtoa@p:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x33
  1132  000093                     	ds	2
  1133  000095                     efgtoa@nmode:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x35
  1137  000095                     	ds	1
  1138  000096                     efgtoa@w:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x36
  1142  000096                     	ds	2
  1143  000098                     efgtoa@mode:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x38
  1147  000098                     	ds	1
  1148  000099                     efgtoa@h:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x39
  1152  000099                     	ds	4
  1153  00009D                     efgtoa@l:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x3D
  1157  00009D                     	ds	4
  1158  0000A1                     efgtoa@g:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x41
  1162  0000A1                     	ds	4
  1163  0000A5                     efgtoa@i:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x45
  1167  0000A5                     	ds	2
  1168  0000A7                     efgtoa@e:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x47
  1172  0000A7                     	ds	2
  1173  0000A9                     efgtoa@n:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x49
  1177  0000A9                     	ds	2
  1178  0000AB                     efgtoa@u:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x4B
  1182  0000AB                     	ds	4
  1183  0000AF                     ?_vfpfcnvrt:
  1184                           	callstack 0
  1185  0000AF                     vfpfcnvrt@fp:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x4F
  1189  0000AF                     	ds	2
  1190  0000B1                     vfpfcnvrt@fmt:
  1191                           	callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x51
  1194  0000B1                     	ds	1
  1195  0000B2                     vfpfcnvrt@ap:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x52
  1199  0000B2                     	ds	2
  1200  0000B4                     ??_vfpfcnvrt:
  1201                           
  1202                           ; 1 bytes @ 0x54
  1203  0000B4                     	ds	4
  1204  0000B8                     vfpfcnvrt@llu:
  1205                           	callstack 0
  1206                           
  1207                           ; 8 bytes @ 0x58
  1208  0000B8                     	ds	8
  1209  0000C0                     vfpfcnvrt@cp:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x60
  1213  0000C0                     	ds	2
  1214  0000C2                     vfpfcnvrt@done:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x62
  1218  0000C2                     	ds	2
  1219  0000C4                     _vfpfcnvrt$2770:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x64
  1223  0000C4                     	ds	2
  1224  0000C6                     vfpfcnvrt@c:
  1225                           	callstack 0
  1226                           
  1227                           ; 1 bytes @ 0x66
  1228  0000C6                     	ds	1
  1229  0000C7                     vfpfcnvrt@f:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x67
  1233  0000C7                     	ds	4
  1234  0000CB                     vfpfcnvrt@ct:
  1235                           	callstack 0
  1236                           
  1237                           ; 3 bytes @ 0x6B
  1238  0000CB                     	ds	3
  1239  0000CE                     ?_vfprintf:
  1240                           	callstack 0
  1241  0000CE                     vfprintf@fp:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x6E
  1245  0000CE                     	ds	2
  1246  0000D0                     vfprintf@fmt:
  1247                           	callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x70
  1250  0000D0                     	ds	1
  1251  0000D1                     vfprintf@ap:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x71
  1255  0000D1                     	ds	2
  1256  0000D3                     printf@ap:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x73
  1260  0000D3                     	ds	2
  1261  0000D5                     ??_main:
  1262                           
  1263                           ; 1 bytes @ 0x75
  1264  0000D5                     	ds	2
  1265  0000D7                     main@mode_sw:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x77
  1269  0000D7                     	ds	1
  1270  0000D8                     main@dac_v:
  1271                           	callstack 0
  1272                           
  1273                           ; 1 bytes @ 0x78
  1274  0000D8                     	ds	1
  1275                           
  1276                           	psect	cstackCOMRAM
  1277  000001                     __pcstackCOMRAM:
  1278                           	callstack 0
  1279  000001                     ?_ADCC_GetConversionResult:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x0
  1283  000001                     	ds	2
  1284  000003                     ??_ADCC_GetConversionResult:
  1285                           
  1286                           ; 1 bytes @ 0x2
  1287  000003                     	ds	2
  1288  000005                     ??_Adc_Isr:
  1289                           
  1290                           ; 1 bytes @ 0x4
  1291  000005                     	ds	1
  1292  000006                     ??_ADCC_ISR:
  1293                           
  1294                           ; 1 bytes @ 0x5
  1295  000006                     	ds	2
  1296  000008                     ??_Led_Blink:
  1297                           
  1298                           ; 1 bytes @ 0x7
  1299  000008                     	ds	1
  1300  000009                     ??_TMR6_ISR:
  1301                           
  1302                           ; 1 bytes @ 0x8
  1303  000009                     	ds	2
  1304  00000B                     ??_UART1_tx_vect_isr:
  1305                           
  1306                           ; 1 bytes @ 0xA
  1307  00000B                     	ds	2
  1308  00000D                     ??_UART1_rx_vect_isr:
  1309                           
  1310                           ; 1 bytes @ 0xC
  1311  00000D                     	ds	2
  1312  00000F                     TMR5_WriteTimer@timerVal:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0xE
  1316  00000F                     	ds	2
  1317  000011                     Timers_Isr@i:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x10
  1321  000011                     	ds	2
  1322  000013                     ??_TMR5_ISR:
  1323                           
  1324                           ; 1 bytes @ 0x12
  1325  000013                     	ds	2
  1326  000015                     ??_display_led:
  1327  000015                     ?_strlen:
  1328                           	callstack 0
  1329  000015                     ?___fpclassifyf:
  1330                           	callstack 0
  1331  000015                     ?_isupper:
  1332                           	callstack 0
  1333  000015                     ?_isdigit:
  1334                           	callstack 0
  1335  000015                     ?_isspace:
  1336                           	callstack 0
  1337  000015                     ?___wmul:
  1338                           	callstack 0
  1339  000015                     ?___awdiv:
  1340                           	callstack 0
  1341  000015                     ?___awmod:
  1342                           	callstack 0
  1343  000015                     ?___fladd:
  1344                           	callstack 0
  1345  000015                     ?___fldiv:
  1346                           	callstack 0
  1347  000015                     ?___flneg:
  1348                           	callstack 0
  1349  000015                     ?___fltol:
  1350                           	callstack 0
  1351  000015                     ?___xxtofl:
  1352                           	callstack 0
  1353  000015                     ?___lodiv:
  1354                           	callstack 0
  1355  000015                     ?___lomod:
  1356                           	callstack 0
  1357  000015                     DAC1_SetOutput@inputData:
  1358                           	callstack 0
  1359  000015                     INTERRUPT_Initialize@state:
  1360                           	callstack 0
  1361  000015                     UART1_Read@readValue:
  1362                           	callstack 0
  1363  000015                     UART1_Write@txData:
  1364                           	callstack 0
  1365  000015                     ___wmul@multiplier:
  1366                           	callstack 0
  1367  000015                     ___awdiv@dividend:
  1368                           	callstack 0
  1369  000015                     ___awmod@dividend:
  1370                           	callstack 0
  1371  000015                     memset@dest:
  1372                           	callstack 0
  1373  000015                     isdigit@c:
  1374                           	callstack 0
  1375  000015                     isspace@c:
  1376                           	callstack 0
  1377  000015                     isupper@c:
  1378                           	callstack 0
  1379  000015                     strcpy@dest:
  1380                           	callstack 0
  1381  000015                     strlen@s:
  1382                           	callstack 0
  1383  000015                     ADCC_SetADIInterruptHandler@InterruptHandler:
  1384                           	callstack 0
  1385  000015                     TMR6_SetInterruptHandler@InterruptHandler:
  1386                           	callstack 0
  1387  000015                     UART1_SetFramingErrorHandler@interruptHandler:
  1388                           	callstack 0
  1389  000015                     UART1_SetOverrunErrorHandler@interruptHandler:
  1390                           	callstack 0
  1391  000015                     UART1_SetErrorHandler@interruptHandler:
  1392                           	callstack 0
  1393  000015                     UART1_SetRxInterruptHandler@InterruptHandler:
  1394                           	callstack 0
  1395  000015                     UART1_SetTxInterruptHandler@InterruptHandler:
  1396                           	callstack 0
  1397  000015                     TMR5_SetInterruptHandler@InterruptHandler:
  1398                           	callstack 0
  1399  000015                     ___fleq@ff1:
  1400                           	callstack 0
  1401  000015                     ___flneg@f1:
  1402                           	callstack 0
  1403  000015                     ___fltol@f1:
  1404                           	callstack 0
  1405  000015                     ___fladd@b:
  1406                           	callstack 0
  1407  000015                     ___fldiv@b:
  1408                           	callstack 0
  1409  000015                     ___xxtofl@val:
  1410                           	callstack 0
  1411  000015                     ___fpclassifyf@x:
  1412                           	callstack 0
  1413  000015                     ___lodiv@dividend:
  1414                           	callstack 0
  1415  000015                     ___lomod@dividend:
  1416                           	callstack 0
  1417                           
  1418                           ; 8 bytes @ 0x14
  1419  000015                     	ds	1
  1420  000016                     putch@txData:
  1421                           	callstack 0
  1422  000016                     linux_getc@a_data:
  1423                           	callstack 0
  1424                           
  1425                           ; 1 bytes @ 0x15
  1426  000016                     	ds	1
  1427  000017                     ??_isupper:
  1428  000017                     ??_isdigit:
  1429  000017                     ??_isspace:
  1430  000017                     ??_linux_getc:
  1431  000017                     ?_fputc:
  1432                           	callstack 0
  1433  000017                     display_led@led:
  1434                           	callstack 0
  1435  000017                     ___wmul@multiplicand:
  1436                           	callstack 0
  1437  000017                     ___awdiv@divisor:
  1438                           	callstack 0
  1439  000017                     ___awmod@divisor:
  1440                           	callstack 0
  1441  000017                     memset@c:
  1442                           	callstack 0
  1443  000017                     fputc@c:
  1444                           	callstack 0
  1445  000017                     strcpy@src:
  1446                           	callstack 0
  1447  000017                     strlen@a:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x16
  1451  000017                     	ds	1
  1452  000018                     ??_TMR5_Initialize:
  1453  000018                     
  1454                           ; 1 bytes @ 0x17
  1455  000018                     	ds	1
  1456  000019                     ??___fpclassifyf:
  1457  000019                     ??_strcpy:
  1458  000019                     ??___fltol:
  1459  000019                     ??___xxtofl:
  1460  000019                     ?_strncmp:
  1461                           	callstack 0
  1462  000019                     ___awdiv@counter:
  1463                           	callstack 0
  1464  000019                     ___awmod@counter:
  1465                           	callstack 0
  1466  000019                     ___wmul@product:
  1467                           	callstack 0
  1468  000019                     memset@n:
  1469                           	callstack 0
  1470  000019                     fputc@fp:
  1471                           	callstack 0
  1472  000019                     strncmp@_l:
  1473                           	callstack 0
  1474  000019                     ___fleq@ff2:
  1475                           	callstack 0
  1476  000019                     ___fladd@a:
  1477                           	callstack 0
  1478  000019                     ___fldiv@a:
  1479                           	callstack 0
  1480                           
  1481                           ; 4 bytes @ 0x18
  1482  000019                     	ds	1
  1483  00001A                     ___awdiv@sign:
  1484                           	callstack 0
  1485  00001A                     ___awmod@sign:
  1486                           	callstack 0
  1487                           
  1488                           ; 1 bytes @ 0x19
  1489  00001A                     	ds	1
  1490  00001B                     ??_memset:
  1491  00001B                     ??_fputc:
  1492  00001B                     ?_tolower:
  1493                           	callstack 0
  1494  00001B                     _isspace$2835:
  1495                           	callstack 0
  1496  00001B                     ___awdiv@quotient:
  1497                           	callstack 0
  1498  00001B                     strcpy@s:
  1499                           	callstack 0
  1500  00001B                     strncmp@_r:
  1501                           	callstack 0
  1502  00001B                     tolower@c:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x1A
  1506  00001B                     	ds	1
  1507  00001C                     ?_atoi:
  1508                           	callstack 0
  1509  00001C                     atoi@s:
  1510                           	callstack 0
  1511                           
  1512                           ; 1 bytes @ 0x1B
  1513  00001C                     	ds	1
  1514  00001D                     ??___fladd:
  1515  00001D                     ??___fldiv:
  1516  00001D                     ??_tolower:
  1517  00001D                     ??___fleq:
  1518  00001D                     ___fltol@sign1:
  1519                           	callstack 0
  1520  00001D                     ___xxtofl@sign:
  1521                           	callstack 0
  1522  00001D                     memset@k:
  1523                           	callstack 0
  1524  00001D                     ___fpclassifyf@e:
  1525                           	callstack 0
  1526  00001D                     strcpy@d:
  1527                           	callstack 0
  1528  00001D                     strncmp@n:
  1529                           	callstack 0
  1530  00001D                     ___lodiv@divisor:
  1531                           	callstack 0
  1532  00001D                     ___lomod@divisor:
  1533                           	callstack 0
  1534                           
  1535                           ; 8 bytes @ 0x1C
  1536  00001D                     	ds	1
  1537  00001E                     ??_atoi:
  1538  00001E                     ___fltol@exp1:
  1539                           	callstack 0
  1540  00001E                     ___xxtofl@exp:
  1541                           	callstack 0
  1542                           
  1543                           ; 1 bytes @ 0x1D
  1544  00001E                     	ds	1
  1545  00001F                     ??_strncmp:
  1546  00001F                     memset@s:
  1547                           	callstack 0
  1548  00001F                     ___xxtofl@arg:
  1549                           	callstack 0
  1550  00001F                     ___fpclassifyf@u:
  1551                           	callstack 0
  1552                           
  1553                           ; 4 bytes @ 0x1E
  1554  00001F                     	ds	1
  1555  000020                     ?_fputs:
  1556                           	callstack 0
  1557  000020                     ?_stoa:
  1558                           	callstack 0
  1559  000020                     stoa@fp:
  1560                           	callstack 0
  1561  000020                     fputs@s:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x1F
  1565  000020                     	ds	1
  1566  000021                     ___fladd@signs:
  1567                           	callstack 0
  1568  000021                     strncmp@l:
  1569                           	callstack 0
  1570  000021                     ___fldiv@rem:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x20
  1574  000021                     	ds	1
  1575  000022                     ___fladd@aexp:
  1576                           	callstack 0
  1577  000022                     stoa@s:
  1578                           	callstack 0
  1579  000022                     atoi@neg:
  1580                           	callstack 0
  1581  000022                     fputs@fp:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x21
  1585  000022                     	ds	1
  1586  000023                     ?___flmul:
  1587                           	callstack 0
  1588  000023                     ___fladd@bexp:
  1589                           	callstack 0
  1590  000023                     strncmp@r:
  1591                           	callstack 0
  1592  000023                     ___flmul@b:
  1593                           	callstack 0
  1594                           
  1595                           ; 4 bytes @ 0x22
  1596  000023                     	ds	1
  1597  000024                     ??_fputs:
  1598  000024                     ??_stoa:
  1599  000024                     ___fladd@grs:
  1600                           	callstack 0
  1601  000024                     atoi@n:
  1602                           	callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x23
  1605  000024                     	ds	1
  1606  000025                     ___lomod@counter:
  1607                           	callstack 0
  1608  000025                     ___fldiv@sign:
  1609                           	callstack 0
  1610  000025                     stoa@nuls:
  1611                           	callstack 0
  1612  000025                     ___lodiv@quotient:
  1613                           	callstack 0
  1614                           
  1615                           ; 8 bytes @ 0x24
  1616  000025                     	ds	1
  1617  000026                     fputs@c:
  1618                           	callstack 0
  1619  000026                     ___fldiv@new_exp:
  1620                           	callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x25
  1623  000026                     	ds	1
  1624  000027                     fputs@i:
  1625                           	callstack 0
  1626  000027                     ___flmul@a:
  1627                           	callstack 0
  1628                           
  1629                           ; 4 bytes @ 0x26
  1630  000027                     	ds	1
  1631  000028                     ___fldiv@grs:
  1632                           	callstack 0
  1633                           
  1634                           ; 4 bytes @ 0x27
  1635  000028                     	ds	1
  1636  000029                     ?_pad:
  1637                           	callstack 0
  1638  000029                     pad@fp:
  1639                           	callstack 0
  1640  000029                     puts@s:
  1641                           	callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x28
  1644  000029                     	ds	2
  1645  00002B                     ??___flmul:
  1646  00002B                     _puts$2914:
  1647                           	callstack 0
  1648  00002B                     pad@buf:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x2A
  1652  00002B                     	ds	1
  1653  00002C                     ___fldiv@bexp:
  1654                           	callstack 0
  1655  00002C                     fh_pr@a_data:
  1656                           	callstack 0
  1657  00002C                     fh_po@a_data:
  1658                           	callstack 0
  1659  00002C                     linux_putc@data:
  1660                           	callstack 0
  1661  00002C                     stoa@i:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x2B
  1665  00002C                     	ds	1
  1666  00002D                     ___lodiv@counter:
  1667                           	callstack 0
  1668  00002D                     ___fldiv@aexp:
  1669                           	callstack 0
  1670  00002D                     pad@p:
  1671                           	callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x2C
  1674  00002D                     	ds	1
  1675  00002E                     ?_floorf:
  1676                           	callstack 0
  1677  00002E                     linux_putc@a_len:
  1678                           	callstack 0
  1679  00002E                     __cli_interpret_cmd@a_ctx:
  1680                           	callstack 0
  1681  00002E                     stoa@w:
  1682                           	callstack 0
  1683  00002E                     floorf@x:
  1684                           	callstack 0
  1685                           
  1686                           ; 4 bytes @ 0x2D
  1687  00002E                     	ds	1
  1688  00002F                     ??_pad:
  1689  00002F                     ?___flsub:
  1690                           	callstack 0
  1691  00002F                     ___flge@ff1:
  1692                           	callstack 0
  1693  00002F                     ___flsub@b:
  1694                           	callstack 0
  1695                           
  1696                           ; 4 bytes @ 0x2E
  1697  00002F                     	ds	1
  1698  000030                     __cli_interpret_cmd@ret:
  1699                           	callstack 0
  1700  000030                     pad@i:
  1701                           	callstack 0
  1702  000030                     stoa@cp:
  1703                           	callstack 0
  1704                           
  1705                           ; 2 bytes @ 0x2F
  1706  000030                     	ds	1
  1707  000031                     __cli_interpret_cmd@i:
  1708                           	callstack 0
  1709                           
  1710                           ; 1 bytes @ 0x30
  1711  000031                     	ds	1
  1712  000032                     ??_floorf:
  1713  000032                     cli_read@a_ctx:
  1714                           	callstack 0
  1715  000032                     pad@w:
  1716                           	callstack 0
  1717  000032                     stoa@p:
  1718                           	callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x31
  1721  000032                     	ds	1
  1722  000033                     ___flge@ff2:
  1723                           	callstack 0
  1724  000033                     ___flsub@a:
  1725                           	callstack 0
  1726                           
  1727                           ; 4 bytes @ 0x32
  1728  000033                     	ds	1
  1729  000034                     ??_cli_read:
  1730  000034                     stoa@l:
  1731                           	callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x33
  1734  000034                     	ds	3
  1735  000037                     
  1736                           ; 1 bytes @ 0x36
  1737  000037                     	ds	1
  1738  000038                     vfprintf@cfmt:
  1739                           	callstack 0
  1740                           
  1741                           ; 1 bytes @ 0x37
  1742  000038                     	ds	1
  1743  000039                     
  1744                           ; 1 bytes @ 0x38
  1745 ;;
  1746 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1747 ;;
  1748 ;; *************** function _main *****************
  1749 ;; Defined at:
  1750 ;;		line 121 in file "main.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  dac_v           1  120[BANK0 ] unsigned char 
  1755 ;;  mode_sw         1  119[BANK0 ] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 3F/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1766 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1767 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1768 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1769 ;;Total ram usage:        4 bytes
  1770 ;; Hardware stack levels required when called: 15
  1771 ;; This function calls:
  1772 ;;		_ADCC_SetADIInterruptHandler
  1773 ;;		_DAC1_GetOutput
  1774 ;;		_DAC1_SetOutput
  1775 ;;		_SYSTEM_Initialize
  1776 ;;		_TMR5_SetInterruptHandler
  1777 ;;		_TMR6_SetInterruptHandler
  1778 ;;		___flmul
  1779 ;;		___xxtofl
  1780 ;;		_cli_read
  1781 ;;		_display_led
  1782 ;;		_printf
  1783 ;;		_scmd_init
  1784 ;; This function is called by:
  1785 ;;		Startup code after reset
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text0
  1790  003A24                     __ptext0:
  1791                           	callstack 0
  1792  003A24                     _main:
  1793                           	callstack 16
  1794                           
  1795                           ;main.c: 123:  uint8_t dac_v = 0, mode_sw = 0;
  1796                           
  1797                           ;incstack = 0
  1798  003A24  0E00               	movlw	0
  1799  003A26  0100               	movlb	0	; () banked
  1800  003A28  6FD8               	movwf	main@dac_v& (0+255),b
  1801  003A2A  0E00               	movlw	0
  1802  003A2C  6FD7               	movwf	main@mode_sw& (0+255),b
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;main.c: 125:  SYSTEM_Initialize();
  1806  003A2E  EC7A  F02D         	call	_SYSTEM_Initialize	;wreg free
  1807                           
  1808                           ; BSR set to: 61
  1809  003A32  92BD               	bcf	189,1,c	;volatile
  1810                           
  1811                           ; BSR set to: 61
  1812  003A34  94BE               	bcf	190,2,c	;volatile
  1813                           
  1814                           ; BSR set to: 61
  1815                           ;main.c: 129:  TMR6_SetInterruptHandler(Led_Blink);
  1816  003A36  0E14               	movlw	low _Led_Blink
  1817  003A38  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  1818  003A3A  0E5C               	movlw	high _Led_Blink
  1819  003A3C  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  1820  003A3E  0E00               	movlw	low (_Led_Blink shr (0+16))
  1821  003A40  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  1822  003A42  ECA0  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
  1823                           
  1824                           ;main.c: 130:  TMR5_SetInterruptHandler(Timers_Isr);
  1825  003A46  0E72               	movlw	low _Timers_Isr
  1826  003A48  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  1827  003A4A  0E55               	movlw	high _Timers_Isr
  1828  003A4C  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  1829  003A4E  0E00               	movlw	low (_Timers_Isr shr (0+16))
  1830  003A50  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  1831  003A52  ECA7  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
  1832                           
  1833                           ;main.c: 131:  ADCC_SetADIInterruptHandler(Adc_Isr);
  1834  003A56  0E6E               	movlw	low _Adc_Isr
  1835  003A58  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  1836  003A5A  0E59               	movlw	high _Adc_Isr
  1837  003A5C  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  1838  003A5E  0E00               	movlw	low (_Adc_Isr shr (0+16))
  1839  003A60  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
  1840  003A62  ECAE  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
  1841                           
  1842                           ;main.c: 132:  ADPCH = adc_chan;
  1843  003A66  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
  1844                           
  1845                           ;main.c: 137:  scmd_init();
  1846  003A6C  EC34  F02E         	call	_scmd_init	;wreg free
  1847                           
  1848                           ;main.c: 140:  (INTCON0bits.GIEH = 1);
  1849  003A70  8ED2               	bsf	210,7,c	;volatile
  1850                           
  1851                           ;main.c: 145:  DAC1_SetOutput(dac_v);
  1852  003A72  0E00               	movlw	0
  1853  003A74  ECC0  F02E         	call	_DAC1_SetOutput
  1854  003A78                     l10616:
  1855                           
  1856                           ;main.c: 148:   if (adc_tick) {
  1857  003A78  0100               	movlb	0	; () banked
  1858  003A7A  51FB               	movf	_adc_tick& (0+255),w,b	;volatile
  1859  003A7C  B4D8               	btfsc	status,2,c
  1860  003A7E  D7FC               	goto	l10616
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;main.c: 149:    if (ana[0] < 900) {
  1864  003A80  0E84               	movlw	132
  1865  003A82  5C39               	subwf	_ana^0,w,c	;volatile
  1866  003A84  0E03               	movlw	3
  1867  003A86  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1868  003A88  B0D8               	btfsc	status,0,c
  1869  003A8A  D004               	goto	l10622
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 150:     display_led(oo00_off);
  1873  003A8C  0E00               	movlw	0
  1874  003A8E  ECA0  F026         	call	_display_led
  1875                           
  1876                           ;main.c: 151:    } else {
  1877  003A92  D00D               	goto	l10628
  1878  003A94                     l10622:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;main.c: 152:     if (ana[0] > 1800) {
  1882  003A94  0E09               	movlw	9
  1883  003A96  5C39               	subwf	_ana^0,w,c	;volatile
  1884  003A98  0E07               	movlw	7
  1885  003A9A  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1886  003A9C  A0D8               	btfss	status,0,c
  1887  003A9E  D004               	goto	l10626
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;main.c: 153:      display_led(oo00_g);
  1891  003AA0  0E01               	movlw	1
  1892  003AA2  ECA0  F026         	call	_display_led
  1893                           
  1894                           ;main.c: 154:     } else {
  1895  003AA6  D003               	goto	l10628
  1896  003AA8                     l10626:
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;main.c: 155:      display_led(oo00_r);
  1900  003AA8  0E02               	movlw	2
  1901  003AAA  ECA0  F026         	call	_display_led
  1902  003AAE                     l10628:
  1903                           
  1904                           ;main.c: 159:    if (ana[1] < 50) {
  1905  003AAE  503C               	movf	(_ana+3)^0,w,c	;volatile
  1906  003AB0  E108               	bnz	l10632
  1907  003AB2  0E32               	movlw	50
  1908  003AB4  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1909  003AB6  B0D8               	btfsc	status,0,c
  1910  003AB8  D004               	goto	l10632
  1911                           
  1912                           ;main.c: 160:     display_led(oo10_off);
  1913  003ABA  0E03               	movlw	3
  1914  003ABC  ECA0  F026         	call	_display_led
  1915                           
  1916                           ;main.c: 161:    } else {
  1917  003AC0  D00D               	goto	l10638
  1918  003AC2                     l10632:
  1919                           
  1920                           ;main.c: 162:     if (ana[1] > 150) {
  1921  003AC2  503C               	movf	(_ana+3)^0,w,c	;volatile
  1922  003AC4  E104               	bnz	u12400
  1923  003AC6  0E97               	movlw	151
  1924  003AC8  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1925  003ACA  A0D8               	btfss	status,0,c
  1926  003ACC  D004               	goto	l10636
  1927  003ACE                     u12400:
  1928                           
  1929                           ;main.c: 163:      display_led(oo10_g);
  1930  003ACE  0E04               	movlw	4
  1931  003AD0  ECA0  F026         	call	_display_led
  1932                           
  1933                           ;main.c: 164:     } else {
  1934  003AD4  D003               	goto	l10638
  1935  003AD6                     l10636:
  1936                           
  1937                           ;main.c: 165:      display_led(oo10_r);
  1938  003AD6  0E05               	movlw	5
  1939  003AD8  ECA0  F026         	call	_display_led
  1940  003ADC                     l10638:
  1941                           
  1942                           ;main.c: 168:    adc_tick = 0;
  1943  003ADC  0E00               	movlw	0
  1944  003ADE  0100               	movlb	0	; () banked
  1945  003AE0  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;main.c: 170:    if (!PORTAbits.RA6) {
  1949  003AE2  BCCA               	btfsc	202,6,c	;volatile
  1950  003AE4  D004               	goto	l10644
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;main.c: 171:     display_led(oo30_r);
  1954  003AE6  0E0B               	movlw	11
  1955  003AE8  ECA0  F026         	call	_display_led
  1956                           
  1957                           ;main.c: 172:    } else {
  1958  003AEC  D003               	goto	l10646
  1959  003AEE                     l10644:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;main.c: 173:     display_led(oo30_off);
  1963  003AEE  0E09               	movlw	9
  1964  003AF0  ECA0  F026         	call	_display_led
  1965  003AF4                     l10646:
  1966                           
  1967                           ;main.c: 177:    if (!PORTAbits.RA4) {
  1968  003AF4  B8CA               	btfsc	202,4,c	;volatile
  1969  003AF6  D004               	goto	l10650
  1970                           
  1971                           ;main.c: 178:     display_led(oo20_g);
  1972  003AF8  0E07               	movlw	7
  1973  003AFA  ECA0  F026         	call	_display_led
  1974                           
  1975                           ;main.c: 179:    } else {
  1976  003AFE  D003               	goto	l10652
  1977  003B00                     l10650:
  1978                           
  1979                           ;main.c: 180:     display_led(oo20_off);
  1980  003B00  0E06               	movlw	6
  1981  003B02  ECA0  F026         	call	_display_led
  1982  003B06                     l10652:
  1983                           
  1984                           ;main.c: 183:    if (disp_tick) {
  1985  003B06  0100               	movlb	0	; () banked
  1986  003B08  51FC               	movf	_disp_tick& (0+255),w,b	;volatile
  1987  003B0A  B4D8               	btfsc	status,2,c
  1988  003B0C  D7B5               	goto	l10616
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;main.c: 184:     vval = (double) ana[0] * 0.405194;
  1992  003B0E  C039  F015         	movff	_ana,___xxtofl@val	;volatile
  1993  003B12  C03A  F016         	movff	_ana+1,___xxtofl@val+1	;volatile
  1994  003B16  6A17               	clrf	(___xxtofl@val+2)^0,c
  1995  003B18  6A18               	clrf	(___xxtofl@val+3)^0,c
  1996  003B1A  0E00               	movlw	0
  1997  003B1C  EC72  F023         	call	___xxtofl
  1998  003B20  C015  F023         	movff	?___xxtofl,___flmul@b
  1999  003B24  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  2000  003B28  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  2001  003B2C  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  2002  003B30  0E97               	movlw	151
  2003  003B32  6E27               	movwf	___flmul@a^0,c
  2004  003B34  0E75               	movlw	117
  2005  003B36  6E28               	movwf	(___flmul@a+1)^0,c
  2006  003B38  0ECF               	movlw	207
  2007  003B3A  6E29               	movwf	(___flmul@a+2)^0,c
  2008  003B3C  0E3E               	movlw	62
  2009  003B3E  6E2A               	movwf	(___flmul@a+3)^0,c
  2010  003B40  EC9F  F018         	call	___flmul	;wreg free
  2011  003B44  C023  F0D9         	movff	?___flmul,_vval
  2012  003B48  C024  F0DA         	movff	?___flmul+1,_vval+1
  2013  003B4C  C025  F0DB         	movff	?___flmul+2,_vval+2
  2014  003B50  C026  F0DC         	movff	?___flmul+3,_vval+3
  2015                           
  2016                           ;main.c: 185:     ival = (double) ana[1] * 0.004;
  2017  003B54  C03B  F015         	movff	_ana+2,___xxtofl@val	;volatile
  2018  003B58  C03C  F016         	movff	_ana+3,___xxtofl@val+1	;volatile
  2019  003B5C  6A17               	clrf	(___xxtofl@val+2)^0,c
  2020  003B5E  6A18               	clrf	(___xxtofl@val+3)^0,c
  2021  003B60  0E00               	movlw	0
  2022  003B62  EC72  F023         	call	___xxtofl
  2023  003B66  C015  F023         	movff	?___xxtofl,___flmul@b
  2024  003B6A  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  2025  003B6E  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  2026  003B72  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  2027  003B76  0E6F               	movlw	111
  2028  003B78  6E27               	movwf	___flmul@a^0,c
  2029  003B7A  0E12               	movlw	18
  2030  003B7C  6E28               	movwf	(___flmul@a+1)^0,c
  2031  003B7E  0E83               	movlw	131
  2032  003B80  6E29               	movwf	(___flmul@a+2)^0,c
  2033  003B82  0E3B               	movlw	59
  2034  003B84  6E2A               	movwf	(___flmul@a+3)^0,c
  2035  003B86  EC9F  F018         	call	___flmul	;wreg free
  2036  003B8A  C023  F194         	movff	?___flmul,_ival
  2037  003B8E  C024  F195         	movff	?___flmul+1,_ival+1
  2038  003B92  C025  F196         	movff	?___flmul+2,_ival+2
  2039  003B96  C026  F197         	movff	?___flmul+3,_ival+3
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;main.c: 186:     printf(" PS Test %1u: DAC OUT=%2u, Supply ReadBack %4u V=%+5.1fV %4u I
      +                          =%+3.1fmA\r\n", mode, (uint16_t) DAC1_GetOutput(), ana[0], vval, ana[1], ival);
  2043  003B9A  0E22               	movlw	low STR_6
  2044  003B9C  0102               	movlb	2	; () banked
  2045  003B9E  6FC3               	movwf	printf@fmt& (0+255),b
  2046  003BA0  C0FD  F2C4         	movff	_mode,?_printf+1
  2047  003BA4  6BC5               	clrf	(?_printf+2)& (0+255),b
  2048  003BA6  ECC5  F02E         	call	_DAC1_GetOutput	;wreg free
  2049  003BAA  0100               	movlb	0	; () banked
  2050  003BAC  6FD5               	movwf	??_main& (0+255),b
  2051  003BAE  51D5               	movf	??_main& (0+255),w,b
  2052  003BB0  0102               	movlb	2	; () banked
  2053  003BB2  6FC6               	movwf	(?_printf+3)& (0+255),b
  2054  003BB4  6BC7               	clrf	(?_printf+4)& (0+255),b
  2055  003BB6  C039  F2C8         	movff	_ana,?_printf+5	;volatile
  2056  003BBA  C03A  F2C9         	movff	_ana+1,?_printf+6	;volatile
  2057  003BBE  C0D9  F2CA         	movff	_vval,?_printf+7
  2058  003BC2  C0DA  F2CB         	movff	_vval+1,?_printf+8
  2059  003BC6  C0DB  F2CC         	movff	_vval+2,?_printf+9
  2060  003BCA  C0DC  F2CD         	movff	_vval+3,?_printf+10
  2061  003BCE  C03B  F2CE         	movff	_ana+2,?_printf+11	;volatile
  2062  003BD2  C03C  F2CF         	movff	_ana+3,?_printf+12	;volatile
  2063  003BD6  C194  F2D0         	movff	_ival,?_printf+13
  2064  003BDA  C195  F2D1         	movff	_ival+1,?_printf+14
  2065  003BDE  C196  F2D2         	movff	_ival+2,?_printf+15
  2066  003BE2  C197  F2D3         	movff	_ival+3,?_printf+16
  2067  003BE6  ECD7  F02D         	call	_printf	;wreg free
  2068                           
  2069                           ;main.c: 191:     switch (mode) {
  2070  003BEA  D01D               	goto	l10686
  2071  003BEC                     l10658:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;main.c: 193:      if (dac_v > 19) {
  2075  003BEC  0E13               	movlw	19
  2076  003BEE  65D8               	cpfsgt	main@dac_v& (0+255),b
  2077  003BF0  D002               	goto	l10662
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 194:       dac_v = 0;
  2081  003BF2  0E00               	movlw	0
  2082  003BF4  6FD8               	movwf	main@dac_v& (0+255),b
  2083  003BF6                     l10662:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;main.c: 196:      DAC1_SetOutput(++dac_v);
  2087  003BF6  2BD8               	incf	main@dac_v& (0+255),f,b
  2088  003BF8  51D8               	movf	main@dac_v& (0+255),w,b
  2089  003BFA  ECC0  F02E         	call	_DAC1_SetOutput
  2090  003BFE  D007               	goto	l10672
  2091  003C00                     l10666:
  2092  003C00  9ABA               	bcf	186,5,c	;volatile
  2093  003C02  D023               	goto	l10688
  2094  003C04                     l10668:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;main.c: 201:      dac_v = 20;
  2098  003C04  0E14               	movlw	20
  2099  003C06  6FD8               	movwf	main@dac_v& (0+255),b
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;main.c: 202:      DAC1_SetOutput(dac_v);
  2103  003C08  0E14               	movlw	20
  2104  003C0A  ECC0  F02E         	call	_DAC1_SetOutput
  2105  003C0E                     l10672:
  2106  003C0E  82BD               	bsf	189,1,c	;volatile
  2107  003C10  D7F7               	goto	l10666
  2108  003C12                     l10676:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;main.c: 208:      mode = off_mode;
  2112  003C12  0E00               	movlw	0
  2113  003C14  6FFD               	movwf	_mode& (0+255),b
  2114                           
  2115                           ;main.c: 209:      dac_v = 0;
  2116  003C16  0E00               	movlw	0
  2117  003C18  6FD8               	movwf	main@dac_v& (0+255),b
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;main.c: 210:      DAC1_SetOutput(dac_v);
  2121  003C1A  0E00               	movlw	0
  2122  003C1C  ECC0  F02E         	call	_DAC1_SetOutput
  2123  003C20  92BD               	bcf	189,1,c	;volatile
  2124  003C22  8ABA               	bsf	186,5,c	;volatile
  2125  003C24  D012               	goto	l10688
  2126  003C26                     l10686:
  2127                           
  2128                           ; BSR set to: 0
  2129  003C26  51FD               	movf	_mode& (0+255),w,b
  2130  003C28  6FD5               	movwf	??_main& (0+255),b
  2131  003C2A  6BD6               	clrf	(??_main+1)& (0+255),b
  2132                           
  2133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2134                           ; Switch size 1, requested type "simple"
  2135                           ; Number of cases is 1, Range of values is 0 to 0
  2136                           ; switch strategies available:
  2137                           ; Name         Instructions Cycles
  2138                           ; simple_byte            4     3 (average)
  2139                           ;	Chosen strategy is simple_byte
  2140  003C2C  51D6               	movf	(??_main+1)& (0+255),w,b
  2141  003C2E  0A00               	xorlw	0	; case 0
  2142  003C30  A4D8               	btfss	status,2,c
  2143  003C32  D7EF               	goto	l10676
  2144                           
  2145                           ; BSR set to: 0
  2146                           ; Switch size 1, requested type "simple"
  2147                           ; Number of cases is 3, Range of values is 0 to 2
  2148                           ; switch strategies available:
  2149                           ; Name         Instructions Cycles
  2150                           ; simple_byte           10     6 (average)
  2151                           ;	Chosen strategy is simple_byte
  2152  003C34  51D5               	movf	??_main& (0+255),w,b
  2153  003C36  0A00               	xorlw	0	; case 0
  2154  003C38  B4D8               	btfsc	status,2,c
  2155  003C3A  D7EB               	goto	l10676
  2156  003C3C  0A01               	xorlw	1	; case 1
  2157  003C3E  B4D8               	btfsc	status,2,c
  2158  003C40  D7D5               	goto	l10658
  2159  003C42  0A03               	xorlw	3	; case 2
  2160  003C44  B4D8               	btfsc	status,2,c
  2161  003C46  D7DE               	goto	l10668
  2162  003C48  D7E4               	goto	l10676
  2163  003C4A                     l10688:
  2164                           
  2165                           ;main.c: 220:     cli_read(&cli_ctx);
  2166  003C4A  0E40               	movlw	low _cli_ctx
  2167  003C4C  6E32               	movwf	cli_read@a_ctx^0,c
  2168  003C4E  0E02               	movlw	high _cli_ctx
  2169  003C50  6E33               	movwf	(cli_read@a_ctx+1)^0,c
  2170  003C52  EC7D  F021         	call	_cli_read	;wreg free
  2171                           
  2172                           ;main.c: 221:     disp_tick = 0;
  2173  003C56  0E00               	movlw	0
  2174  003C58  0100               	movlb	0	; () banked
  2175  003C5A  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;main.c: 222:     if (!PORTBbits.RB0) {
  2179  003C5C  B0CB               	btfsc	203,0,c	;volatile
  2180  003C5E  D009               	goto	l10702
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;main.c: 223:      if (++mode_sw > 4) {
  2184  003C60  2BD7               	incf	main@mode_sw& (0+255),f,b
  2185  003C62  0E04               	movlw	4
  2186  003C64  65D7               	cpfsgt	main@mode_sw& (0+255),b
  2187  003C66  D708               	goto	l10616
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;main.c: 224:       mode++;
  2191  003C68  2BFD               	incf	_mode& (0+255),f,b
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;main.c: 225:       mode_sw = 0;
  2195  003C6A  0E00               	movlw	0
  2196  003C6C  6FD7               	movwf	main@mode_sw& (0+255),b
  2197                           
  2198                           ; BSR set to: 0
  2199  003C6E  84BE               	bsf	190,2,c	;volatile
  2200  003C70  D703               	goto	l10616
  2201  003C72                     l10702:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;main.c: 229:      mode_sw = 0;
  2205  003C72  0E00               	movlw	0
  2206  003C74  6FD7               	movwf	main@mode_sw& (0+255),b
  2207                           
  2208                           ; BSR set to: 0
  2209  003C76  94BE               	bcf	190,2,c	;volatile
  2210  003C78  D6FF               	goto	l10616
  2211  003C7A                     __end_of_main:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _scmd_init *****************
  2215 ;; Defined at:
  2216 ;;		line 32 in file "scdm.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;		None
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 3B/3D
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2234 ;;Total ram usage:        0 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 14
  2237 ;; This function calls:
  2238 ;;		_cli_init
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text1
  2245  005C68                     __ptext1:
  2246                           	callstack 0
  2247  005C68                     _scmd_init:
  2248                           	callstack 16
  2249                           
  2250                           ;scdm.c: 34:  cli_init(&cli_ctx, g_cmds);
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;incstack = 0
  2254  005C68  0E40               	movlw	low _cli_ctx
  2255  005C6A  0102               	movlb	2	; () banked
  2256  005C6C  6FD7               	movwf	cli_init@a_ctx& (0+255),b
  2257  005C6E  0E02               	movlw	high _cli_ctx
  2258  005C70  6FD8               	movwf	(cli_init@a_ctx+1)& (0+255),b
  2259  005C72  0EEF               	movlw	low _g_cmds
  2260  005C74  6FD9               	movwf	cli_init@a_cmds& (0+255),b
  2261  005C76  0E01               	movlw	high _g_cmds
  2262  005C78  6FDA               	movwf	(cli_init@a_cmds+1)& (0+255),b
  2263  005C7A  EC37  F029         	call	_cli_init	;wreg free
  2264  005C7E  0012               	return		;funcret
  2265  005C80                     __end_of_scmd_init:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _cli_init *****************
  2269 ;; Defined at:
  2270 ;;		line 20 in file "scdm.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  a_ctx           2   20[BANK2 ] PTR struct _t_cli_ctx
  2273 ;;		 -> cli_ctx(131), 
  2274 ;;  a_cmds          2   22[BANK2 ] PTR struct _t_cmd
  2275 ;;		 -> g_cmds(16), 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 3F/2
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2287 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2290 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2291 ;;Total ram usage:        4 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 13
  2294 ;; This function calls:
  2295 ;;		_memset
  2296 ;;		_puts
  2297 ;;		_sprintf
  2298 ;; This function is called by:
  2299 ;;		_scmd_init
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text2
  2304  00526E                     __ptext2:
  2305                           	callstack 0
  2306  00526E                     _cli_init:
  2307                           	callstack 16
  2308                           
  2309                           ; BSR set to: 2
  2310                           ;scdm.c: 20: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 21: {;scdm.c:
      +                           22:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  2311                           
  2312                           ;incstack = 0
  2313  00526E  C2D7  F015         	movff	cli_init@a_ctx,memset@dest
  2314  005272  C2D8  F016         	movff	cli_init@a_ctx+1,memset@dest+1
  2315  005276  0E00               	movlw	0
  2316  005278  6E18               	movwf	(memset@c+1)^0,c
  2317  00527A  0E00               	movlw	0
  2318  00527C  6E17               	movwf	memset@c^0,c
  2319  00527E  0E00               	movlw	0
  2320  005280  6E1A               	movwf	(memset@n+1)^0,c
  2321  005282  0E83               	movlw	131
  2322  005284  6E19               	movwf	memset@n^0,c
  2323  005286  EC28  F022         	call	_memset	;wreg free
  2324                           
  2325                           ;scdm.c: 23:  a_ctx->cmds = a_cmds;
  2326  00528A  0060  FB5F  FFD9   	movff	cli_init@a_ctx,fsr2l
  2327  005290  0060  FB63  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  2328  005296  0060  FB67  FFDE   	movff	cli_init@a_cmds,postinc2
  2329  00529C  0060  FB6B  FFDD   	movff	cli_init@a_cmds+1,postdec2
  2330  0052A2  0E02               	movlw	2
  2331  0052A4  0102               	movlb	2	; () banked
  2332  0052A6  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2333  0052A8  6FC3               	movwf	sprintf@s& (0+255),b
  2334  0052AA  0E00               	movlw	0
  2335  0052AC  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2336  0052AE  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  2337  0052B0  0E9D               	movlw	low STR_10
  2338  0052B2  6FC5               	movwf	sprintf@fmt& (0+255),b
  2339  0052B4  0EC4               	movlw	low STR_1
  2340  0052B6  6FC6               	movwf	(?_sprintf+3)& (0+255),b
  2341  0052B8  51C6               	movf	(?_sprintf+3)& (0+255),w,b
  2342  0052BA  A4D8               	btfss	status,2,c
  2343  0052BC  0E20               	movlw	high __smallconst
  2344  0052BE  6FC7               	movwf	(?_sprintf+4)& (0+255),b
  2345  0052C0  0ED0               	movlw	low STR_2
  2346  0052C2  6FC8               	movwf	(?_sprintf+5)& (0+255),b
  2347  0052C4  51C8               	movf	(?_sprintf+5)& (0+255),w,b
  2348  0052C6  A4D8               	btfss	status,2,c
  2349  0052C8  0E20               	movlw	high __smallconst
  2350  0052CA  6FC9               	movwf	(?_sprintf+6)& (0+255),b
  2351  0052CC  ECE2  F02A         	call	_sprintf	;wreg free
  2352                           
  2353                           ; BSR set to: 2
  2354                           ;scdm.c: 28:  puts(a_ctx->cmd);
  2355  0052D0  0E02               	movlw	2
  2356  0052D2  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2357  0052D4  6E29               	movwf	puts@s^0,c
  2358  0052D6  0E00               	movlw	0
  2359  0052D8  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2360  0052DA  6E2A               	movwf	(puts@s+1)^0,c
  2361  0052DC  EC9A  F02C         	call	_puts	;wreg free
  2362                           
  2363                           ;scdm.c: 29:  puts(cmdm);
  2364  0052E0  0E06               	movlw	low _cmdm
  2365  0052E2  6E29               	movwf	puts@s^0,c
  2366  0052E4  5029               	movf	puts@s^0,w,c
  2367  0052E6  A4D8               	btfss	status,2,c
  2368  0052E8  0E20               	movlw	high __smallconst
  2369  0052EA  6E2A               	movwf	(puts@s+1)^0,c
  2370  0052EC  EC9A  F02C         	call	_puts	;wreg free
  2371  0052F0  0012               	return		;funcret
  2372  0052F2                     __end_of_cli_init:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _sprintf *****************
  2376 ;; Defined at:
  2377 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  s               2    0[BANK2 ] PTR unsigned char 
  2380 ;;		 -> cli_ctx(131), 
  2381 ;;  fmt             1    2[BANK2 ] PTR const unsigned char 
  2382 ;;		 -> STR_10(21), 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  f              11    9[BANK2 ] struct _IO_FILE
  2385 ;;  ap              2    7[BANK2 ] PTR void [1]
  2386 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2387 ;;  ret             2    0        int 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  2    0[BANK2 ] int 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 3F/2
  2394 ;;		On exit  : 3F/2
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2397 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2398 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2400 ;;      Totals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2401 ;;Total ram usage:       20 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 12
  2404 ;; This function calls:
  2405 ;;		_vfprintf
  2406 ;; This function is called by:
  2407 ;;		_cli_init
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text3
  2412  0055C4                     __ptext3:
  2413                           	callstack 0
  2414  0055C4                     _sprintf:
  2415                           	callstack 16
  2416                           
  2417                           ; BSR set to: 2
  2418                           
  2419                           ;incstack = 0
  2420  0055C4  0EC6               	movlw	low (?_sprintf+3)
  2421  0055C6  6FCA               	movwf	sprintf@ap& (0+255),b
  2422  0055C8  0E02               	movlw	high (?_sprintf+3)
  2423  0055CA  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  2424  0055CC  C2C3  F2CC         	movff	sprintf@s,sprintf@f
  2425  0055D0  C2C4  F2CD         	movff	sprintf@s+1,sprintf@f+1
  2426                           
  2427                           ; BSR set to: 2
  2428  0055D4  0E00               	movlw	0
  2429  0055D6  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  2430  0055D8  0E00               	movlw	0
  2431  0055DA  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  2432                           
  2433                           ; BSR set to: 2
  2434  0055DC  0E00               	movlw	0
  2435  0055DE  6FD6               	movwf	(sprintf@f+10)& (0+255),b
  2436  0055E0  0E00               	movlw	0
  2437  0055E2  6FD5               	movwf	(sprintf@f+9)& (0+255),b
  2438                           
  2439                           ; BSR set to: 2
  2440  0055E4  0ECC               	movlw	low sprintf@f
  2441  0055E6  0100               	movlb	0	; () banked
  2442  0055E8  6FCE               	movwf	vfprintf@fp& (0+255),b
  2443  0055EA  0E02               	movlw	high sprintf@f
  2444  0055EC  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2445  0055EE  C2C5  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  2446  0055F2  0ECA               	movlw	low sprintf@ap
  2447  0055F4  6FD1               	movwf	vfprintf@ap& (0+255),b
  2448  0055F6  0E02               	movlw	high sprintf@ap
  2449  0055F8  6FD2               	movwf	(vfprintf@ap+1)& (0+255),b
  2450  0055FA  EC90  F02A         	call	_vfprintf	;wreg free
  2451                           
  2452                           ; BSR set to: 0
  2453  0055FE  0102               	movlb	2	; () banked
  2454  005600  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  2455  005602  25C3               	addwf	sprintf@s& (0+255),w,b
  2456  005604  6ED9               	movwf	fsr2l,c
  2457  005606  51D0               	movf	(sprintf@f+4)& (0+255),w,b
  2458  005608  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  2459  00560A  6EDA               	movwf	fsr2h,c
  2460  00560C  0E00               	movlw	0
  2461  00560E  6EDF               	movwf	indf2,c
  2462                           
  2463                           ; BSR set to: 2
  2464  005610  0012               	return		;funcret
  2465  005612                     __end_of_sprintf:
  2466                           	callstack 0
  2467                           
  2468 ;; *************** function _printf *****************
  2469 ;; Defined at:
  2470 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  fmt             1    0[BANK2 ] PTR const unsigned char 
  2473 ;;		 -> STR_6(74), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  ap              2  115[BANK0 ] PTR void [1]
  2476 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2477 ;;  ret             2    0        int 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  2    0[BANK2 ] int 
  2480 ;; Registers used:
  2481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 3F/2
  2484 ;;		On exit  : 3F/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2487 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2488 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2490 ;;      Totals:         0       2       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2491 ;;Total ram usage:       19 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 12
  2494 ;; This function calls:
  2495 ;;		_vfprintf
  2496 ;; This function is called by:
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text4
  2502  005BAE                     __ptext4:
  2503                           	callstack 0
  2504  005BAE                     _printf:
  2505                           	callstack 18
  2506                           
  2507                           ; BSR set to: 2
  2508                           
  2509                           ; BSR set to: 2
  2510                           ;incstack = 0
  2511  005BAE  0EC4               	movlw	low (?_printf+1)
  2512  005BB0  0100               	movlb	0	; () banked
  2513  005BB2  6FD3               	movwf	printf@ap& (0+255),b
  2514  005BB4  0E02               	movlw	high (?_printf+1)
  2515  005BB6  6FD4               	movwf	(printf@ap+1)& (0+255),b
  2516                           
  2517                           ; BSR set to: 0
  2518  005BB8  0E00               	movlw	0
  2519  005BBA  6FCE               	movwf	vfprintf@fp& (0+255),b
  2520  005BBC  0E00               	movlw	0
  2521  005BBE  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2522  005BC0  C2C3  F0D0         	movff	printf@fmt,vfprintf@fmt
  2523  005BC4  0ED3               	movlw	low printf@ap
  2524  005BC6  6FD1               	movwf	vfprintf@ap& (0+255),b
  2525  005BC8  6BD2               	clrf	(vfprintf@ap+1)& (0+255),b
  2526  005BCA  EC90  F02A         	call	_vfprintf	;wreg free
  2527                           
  2528                           ; BSR set to: 0
  2529  005BCE  0012               	return		;funcret
  2530  005BD0                     __end_of_printf:
  2531                           	callstack 0
  2532                           
  2533 ;; *************** function _vfprintf *****************
  2534 ;; Defined at:
  2535 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  fp              2  110[BANK0 ] PTR struct _IO_FILE
  2538 ;;		 -> sprintf@f(11), NULL(0), 
  2539 ;;  fmt             1  112[BANK0 ] PTR const unsigned char 
  2540 ;;		 -> STR_10(21), STR_6(74), 
  2541 ;;  ap              2  113[BANK0 ] PTR PTR void 
  2542 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  cfmt            1   55[COMRAM] PTR unsigned char 
  2545 ;;		 -> STR_10(21), STR_6(74), 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  2  110[BANK0 ] int 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 3F/0
  2552 ;;		On exit  : 3F/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2555 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2558 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2559 ;;Total ram usage:        6 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 11
  2562 ;; This function calls:
  2563 ;;		_vfpfcnvrt
  2564 ;; This function is called by:
  2565 ;;		_sprintf
  2566 ;;		_printf
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text5
  2571  005520                     __ptext5:
  2572                           	callstack 0
  2573  005520                     _vfprintf:
  2574                           	callstack 16
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;incstack = 0
  2581  005520  C0D0  F038         	movff	vfprintf@fmt,vfprintf@cfmt
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2585  005524  0E00               	movlw	0
  2586  005526  6FF6               	movwf	(_nout+1)& (0+255),b
  2587  005528  0E00               	movlw	0
  2588  00552A  6FF5               	movwf	_nout& (0+255),b
  2589                           
  2590                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2591  00552C  D011               	goto	l10192
  2592  00552E                     l10190:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2596  00552E  C0CE  F0AF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2597  005532  C0CF  F0B0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2598  005536  0E38               	movlw	low vfprintf@cfmt
  2599  005538  6FB1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2600  00553A  C0D1  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2601  00553E  C0D2  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2602  005542  EC63  F015         	call	_vfpfcnvrt	;wreg free
  2603  005546  0100               	movlb	0	; () banked
  2604  005548  51AF               	movf	?_vfpfcnvrt& (0+255),w,b
  2605  00554A  27F5               	addwf	_nout& (0+255),f,b
  2606  00554C  51B0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2607  00554E  23F6               	addwfc	(_nout+1)& (0+255),f,b
  2608  005550                     l10192:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2612  005550  0060  F0E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  2613  005556                     	if	1	;There is more than 1 active tblptr byte
  2614  005556  0E20               	movlw	high __smallconst
  2615  005558  6EF7               	movwf	tblptrh,c
  2616  00555A                     	endif
  2617  00555A                     	if	0	;tblptru may be non-zero
  2618  00555A                     	endif
  2619  00555A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2620  00555A  0E00               	movlw	low (__smallconst shr (0+16))
  2621  00555C  6EF8               	movwf	tblptru,c
  2622  00555E                     	endif
  2623  00555E  0008               	tblrd		*
  2624  005560  50F5               	movf	tablat,w,c
  2625  005562  0900               	iorlw	0
  2626  005564  A4D8               	btfss	status,2,c
  2627  005566  D7E3               	goto	l10190
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2631  005568  C0F5  F0CE         	movff	_nout,?_vfprintf
  2632  00556C  C0F6  F0CF         	movff	_nout+1,?_vfprintf+1
  2633                           
  2634                           ; BSR set to: 0
  2635  005570  0012               	return		;funcret
  2636  005572                     __end_of_vfprintf:
  2637                           	callstack 0
  2638                           
  2639 ;; *************** function _vfpfcnvrt *****************
  2640 ;; Defined at:
  2641 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  2644 ;;		 -> sprintf@f(11), NULL(0), 
  2645 ;;  fmt             1   81[BANK0 ] PTR PTR unsigned char 
  2646 ;;		 -> vfprintf@cfmt(1), 
  2647 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2648 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  llu             8   88[BANK0 ] unsigned long long 
  2651 ;;  ll              8    0        long long 
  2652 ;;  f               4  103[BANK0 ] long long 
  2653 ;;  ct              3  107[BANK0 ] unsigned char [3]
  2654 ;;  vp              3    0        PTR void 
  2655 ;;  done            2   98[BANK0 ] int 
  2656 ;;  cp              2   96[BANK0 ] PTR unsigned char 
  2657 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  2658 ;;  i               2    0        int 
  2659 ;;  c               1  102[BANK0 ] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  2   79[BANK0 ] int 
  2662 ;; Registers used:
  2663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 3F/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2669 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2670 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2671 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2672 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2673 ;;Total ram usage:       31 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 10
  2676 ;; This function calls:
  2677 ;;		_atoi
  2678 ;;		_efgtoa
  2679 ;;		_fputc
  2680 ;;		_isdigit
  2681 ;;		_isupper
  2682 ;;		_stoa
  2683 ;;		_strncmp
  2684 ;;		_tolower
  2685 ;;		_utoa
  2686 ;; This function is called by:
  2687 ;;		_vfprintf
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text6
  2692  002AC6                     __ptext6:
  2693                           	callstack 0
  2694  002AC6                     _vfpfcnvrt:
  2695                           	callstack 16
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;incstack = 0
  2702  002AC6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2703  002AC8  6ED9               	movwf	fsr2l,c
  2704  002ACA  6ADA               	clrf	fsr2h,c
  2705  002ACC  006F FF7F FFF6     	movff	indf2,tblptrl
  2706  002AD2                     	if	1	;There is more than 1 active tblptr byte
  2707  002AD2  0E20               	movlw	high __smallconst
  2708  002AD4  6EF7               	movwf	tblptrh,c
  2709  002AD6                     	endif
  2710  002AD6                     	if	0	;tblptru may be non-zero
  2711  002AD6                     	endif
  2712  002AD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2713  002AD6  0E00               	movlw	low (__smallconst shr (0+16))
  2714  002AD8  6EF8               	movwf	tblptru,c
  2715  002ADA                     	endif
  2716  002ADA  0008               	tblrd		*
  2717  002ADC  50F5               	movf	tablat,w,c
  2718  002ADE  0A25               	xorlw	37
  2719  002AE0  A4D8               	btfss	status,2,c
  2720  002AE2  D313               	goto	l10164
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2724  002AE4  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2725  002AE6  6ED9               	movwf	fsr2l,c
  2726  002AE8  6ADA               	clrf	fsr2h,c
  2727  002AEA  2ADF               	incf	indf2,f,c
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2731  002AEC  0E00               	movlw	0
  2732  002AEE  6FF8               	movwf	(_width+1)& (0+255),b
  2733  002AF0  0E00               	movlw	0
  2734  002AF2  6FF7               	movwf	_width& (0+255),b
  2735  002AF4  C0F7  F03D         	movff	_width,_flags
  2736  002AF8  C0F8  F03E         	movff	_width+1,_flags+1
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2740  002AFC  69F9               	setf	_prec& (0+255),b
  2741  002AFE  69FA               	setf	(_prec+1)& (0+255),b
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  2745  002B00  0E00               	movlw	0
  2746  002B02  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2747  002B04  0E00               	movlw	0
  2748  002B06  D011               	goto	L1
  2749  002B08                     l10018:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  2753  002B08  803D               	bsf	_flags^0,0,c
  2754  002B0A                     l10020:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  2758  002B0A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2759  002B0C  6ED9               	movwf	fsr2l,c
  2760  002B0E  6ADA               	clrf	fsr2h,c
  2761  002B10  2ADF               	incf	indf2,f,c
  2762                           
  2763                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  2764  002B12  D030               	goto	l10044
  2765  002B14                     l10022:
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  2769  002B14  823D               	bsf	_flags^0,1,c
  2770  002B16  D7F9               	goto	l10020
  2771  002B18                     l10026:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  2775  002B18  843D               	bsf	_flags^0,2,c
  2776  002B1A  D7F7               	goto	l10020
  2777  002B1C                     l10030:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  2781  002B1C  863D               	bsf	_flags^0,3,c
  2782  002B1E  D7F5               	goto	l10020
  2783  002B20                     l10034:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  2787  002B20  883D               	bsf	_flags^0,4,c
  2788  002B22  D7F3               	goto	l10020
  2789  002B24                     l10038:
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  2793  002B24  0E00               	movlw	0
  2794  002B26  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2795  002B28  0E01               	movlw	1
  2796  002B2A                     L1:
  2797  002B2A  6FC2               	movwf	vfpfcnvrt@done& (0+255),b
  2798                           
  2799                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  2800  002B2C  D023               	goto	l10044
  2801  002B2E                     l10042:
  2802                           
  2803                           ; BSR set to: 0
  2804  002B2E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2805  002B30  6ED9               	movwf	fsr2l,c
  2806  002B32  6ADA               	clrf	fsr2h,c
  2807  002B34  006F FF7F FFF6     	movff	indf2,tblptrl
  2808  002B3A                     	if	1	;There is more than 1 active tblptr byte
  2809  002B3A  0E20               	movlw	high __smallconst
  2810  002B3C  6EF7               	movwf	tblptrh,c
  2811  002B3E                     	endif
  2812  002B3E                     	if	0	;tblptru may be non-zero
  2813  002B3E                     	endif
  2814  002B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2815  002B3E  0E00               	movlw	low (__smallconst shr (0+16))
  2816  002B40  6EF8               	movwf	tblptru,c
  2817  002B42                     	endif
  2818  002B42  0008               	tblrd		*
  2819  002B44  50F5               	movf	tablat,w,c
  2820  002B46  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2821  002B48  6BB5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2822                           
  2823                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2824                           ; Switch size 1, requested type "simple"
  2825                           ; Number of cases is 1, Range of values is 0 to 0
  2826                           ; switch strategies available:
  2827                           ; Name         Instructions Cycles
  2828                           ; simple_byte            4     3 (average)
  2829                           ;	Chosen strategy is simple_byte
  2830  002B4A  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2831  002B4C  0A00               	xorlw	0	; case 0
  2832  002B4E  A4D8               	btfss	status,2,c
  2833  002B50  D7E9               	goto	l10038
  2834                           
  2835                           ; BSR set to: 0
  2836                           ; Switch size 1, requested type "simple"
  2837                           ; Number of cases is 5, Range of values is 32 to 48
  2838                           ; switch strategies available:
  2839                           ; Name         Instructions Cycles
  2840                           ; simple_byte           16     9 (average)
  2841                           ;	Chosen strategy is simple_byte
  2842  002B52  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2843  002B54  0A20               	xorlw	32	; case 32
  2844  002B56  B4D8               	btfsc	status,2,c
  2845  002B58  D7E1               	goto	l10030
  2846  002B5A  0A03               	xorlw	3	; case 35
  2847  002B5C  B4D8               	btfsc	status,2,c
  2848  002B5E  D7E0               	goto	l10034
  2849  002B60  0A08               	xorlw	8	; case 43
  2850  002B62  B4D8               	btfsc	status,2,c
  2851  002B64  D7D9               	goto	l10026
  2852  002B66  0A06               	xorlw	6	; case 45
  2853  002B68  B4D8               	btfsc	status,2,c
  2854  002B6A  D7CE               	goto	l10018
  2855  002B6C  0A1D               	xorlw	29	; case 48
  2856  002B6E  B4D8               	btfsc	status,2,c
  2857  002B70  D7D1               	goto	l10022
  2858  002B72  D7D8               	goto	l10038
  2859  002B74                     l10044:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2863  002B74  51C2               	movf	vfpfcnvrt@done& (0+255),w,b
  2864  002B76  11C3               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2865  002B78  B4D8               	btfsc	status,2,c
  2866  002B7A  D7D9               	goto	l10042
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  2870  002B7C  B03D               	btfsc	_flags^0,0,c
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  2874  002B7E  923D               	bcf	_flags^0,1,c
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  2878  002B80  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2879  002B82  6ED9               	movwf	fsr2l,c
  2880  002B84  6ADA               	clrf	fsr2h,c
  2881  002B86  006F FF7F FFF6     	movff	indf2,tblptrl
  2882  002B8C                     	if	1	;There is more than 1 active tblptr byte
  2883  002B8C  0E20               	movlw	high __smallconst
  2884  002B8E  6EF7               	movwf	tblptrh,c
  2885  002B90                     	endif
  2886  002B90                     	if	0	;tblptru may be non-zero
  2887  002B90                     	endif
  2888  002B90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2889  002B90  0E00               	movlw	low (__smallconst shr (0+16))
  2890  002B92  6EF8               	movwf	tblptru,c
  2891  002B94                     	endif
  2892  002B94  0008               	tblrd		*
  2893  002B96  50F5               	movf	tablat,w,c
  2894  002B98  0A2A               	xorlw	42
  2895  002B9A  A4D8               	btfss	status,2,c
  2896  002B9C  D028               	goto	l10056
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  2900  002B9E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2901  002BA0  6ED9               	movwf	fsr2l,c
  2902  002BA2  6ADA               	clrf	fsr2h,c
  2903  002BA4  2ADF               	incf	indf2,f,c
  2904                           
  2905                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2906  002BA6  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2907  002BAC  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2908  002BB2  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  2909  002BB8  0E02               	movlw	2
  2910  002BBA  26DE               	addwf	postinc2,f,c
  2911  002BBC  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  2912  002BC2  0E00               	movlw	0
  2913  002BC4  22DD               	addwfc	postdec2,f,c
  2914  002BC6  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2915  002BCC  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2916  002BD2  006F FF78  F0F7    	movff	postinc2,_width
  2917  002BD8  006F FF74  F0F8    	movff	postdec2,_width+1
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  2921  002BDE  AFF8               	btfss	(_width+1)& (0+255),7,b
  2922  002BE0  D033               	goto	u11880
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  2926  002BE2  803D               	bsf	_flags^0,0,c
  2927                           
  2928                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  2929  002BE4  6DF7               	negf	_width& (0+255),b
  2930  002BE6  1FF8               	comf	(_width+1)& (0+255),f,b
  2931  002BE8  B0D8               	btfsc	status,0,c
  2932  002BEA  2BF8               	incf	(_width+1)& (0+255),f,b
  2933  002BEC  D02D               	goto	u11880
  2934  002BEE                     l10056:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  2938  002BEE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2939  002BF0  6ED9               	movwf	fsr2l,c
  2940  002BF2  6ADA               	clrf	fsr2h,c
  2941  002BF4  50DF               	movf	indf2,w,c
  2942  002BF6  6E1C               	movwf	atoi@s^0,c
  2943  002BF8  EC12  F024         	call	_atoi	;wreg free
  2944  002BFC  C01C  F0F7         	movff	?_atoi,_width
  2945  002C00  C01D  F0F8         	movff	?_atoi+1,_width+1
  2946                           
  2947                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2948  002C04  D004               	goto	l10062
  2949  002C06                     l10058:
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  2953  002C06  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2954  002C08  6ED9               	movwf	fsr2l,c
  2955  002C0A  6ADA               	clrf	fsr2h,c
  2956  002C0C  2ADF               	incf	indf2,f,c
  2957  002C0E                     l10062:
  2958  002C0E  0ED0               	movlw	208
  2959  002C10  0100               	movlb	0	; () banked
  2960  002C12  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2961  002C14  0EFF               	movlw	255
  2962  002C16  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2963  002C18  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2964  002C1A  6ED9               	movwf	fsr2l,c
  2965  002C1C  6ADA               	clrf	fsr2h,c
  2966  002C1E  006F FF7F FFF6     	movff	indf2,tblptrl
  2967  002C24                     	if	1	;There is more than 1 active tblptr byte
  2968  002C24  0E20               	movlw	high __smallconst
  2969  002C26  6EF7               	movwf	tblptrh,c
  2970  002C28                     	endif
  2971  002C28                     	if	0	;tblptru may be non-zero
  2972  002C28                     	endif
  2973  002C28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2974  002C28  0E00               	movlw	low (__smallconst shr (0+16))
  2975  002C2A  6EF8               	movwf	tblptru,c
  2976  002C2C                     	endif
  2977  002C2C  0008               	tblrd		*
  2978  002C2E  50F5               	movf	tablat,w,c
  2979  002C30  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2980  002C32  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2981  002C34  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2982  002C36  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2983  002C38  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2984  002C3A  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2985  002C3C  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2986  002C3E  E104               	bnz	u11880
  2987  002C40  0E0A               	movlw	10
  2988  002C42  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2989  002C44  A0D8               	btfss	status,0,c
  2990  002C46  D7DF               	goto	l10058
  2991  002C48                     u11880:
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  2995  002C48  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2996  002C4A  6ED9               	movwf	fsr2l,c
  2997  002C4C  6ADA               	clrf	fsr2h,c
  2998  002C4E  006F FF7F FFF6     	movff	indf2,tblptrl
  2999  002C54                     	if	1	;There is more than 1 active tblptr byte
  3000  002C54  0E20               	movlw	high __smallconst
  3001  002C56  6EF7               	movwf	tblptrh,c
  3002  002C58                     	endif
  3003  002C58                     	if	0	;tblptru may be non-zero
  3004  002C58                     	endif
  3005  002C58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3006  002C58  0E00               	movlw	low (__smallconst shr (0+16))
  3007  002C5A  6EF8               	movwf	tblptru,c
  3008  002C5C                     	endif
  3009  002C5C  0008               	tblrd		*
  3010  002C5E  50F5               	movf	tablat,w,c
  3011  002C60  0A2E               	xorlw	46
  3012  002C62  A4D8               	btfss	status,2,c
  3013  002C64  D065               	goto	u11910
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  3017  002C66  0E00               	movlw	0
  3018  002C68  6FFA               	movwf	(_prec+1)& (0+255),b
  3019  002C6A  0E00               	movlw	0
  3020  002C6C  6FF9               	movwf	_prec& (0+255),b
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  3024  002C6E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3025  002C70  6ED9               	movwf	fsr2l,c
  3026  002C72  6ADA               	clrf	fsr2h,c
  3027  002C74  2ADF               	incf	indf2,f,c
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  3031  002C76  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3032  002C78  6ED9               	movwf	fsr2l,c
  3033  002C7A  6ADA               	clrf	fsr2h,c
  3034  002C7C  006F FF7F FFF6     	movff	indf2,tblptrl
  3035  002C82                     	if	1	;There is more than 1 active tblptr byte
  3036  002C82  0E20               	movlw	high __smallconst
  3037  002C84  6EF7               	movwf	tblptrh,c
  3038  002C86                     	endif
  3039  002C86                     	if	0	;tblptru may be non-zero
  3040  002C86                     	endif
  3041  002C86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3042  002C86  0E00               	movlw	low (__smallconst shr (0+16))
  3043  002C88  6EF8               	movwf	tblptru,c
  3044  002C8A                     	endif
  3045  002C8A  0008               	tblrd		*
  3046  002C8C  50F5               	movf	tablat,w,c
  3047  002C8E  0A2A               	xorlw	42
  3048  002C90  A4D8               	btfss	status,2,c
  3049  002C92  D021               	goto	l10074
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  3053  002C94  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3054  002C96  6ED9               	movwf	fsr2l,c
  3055  002C98  6ADA               	clrf	fsr2h,c
  3056  002C9A  2ADF               	incf	indf2,f,c
  3057                           
  3058                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  3059  002C9C  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3060  002CA2  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3061  002CA8  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3062  002CAE  0E02               	movlw	2
  3063  002CB0  26DE               	addwf	postinc2,f,c
  3064  002CB2  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3065  002CB8  0E00               	movlw	0
  3066  002CBA  22DD               	addwfc	postdec2,f,c
  3067  002CBC  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3068  002CC2  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3069  002CC8  006F FF78  F0F9    	movff	postinc2,_prec
  3070  002CCE  006F FF74  F0FA    	movff	postdec2,_prec+1
  3071                           
  3072                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  3073  002CD4  D02D               	goto	u11910
  3074  002CD6                     l10074:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  3078  002CD6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3079  002CD8  6ED9               	movwf	fsr2l,c
  3080  002CDA  6ADA               	clrf	fsr2h,c
  3081  002CDC  50DF               	movf	indf2,w,c
  3082  002CDE  6E1C               	movwf	atoi@s^0,c
  3083  002CE0  EC12  F024         	call	_atoi	;wreg free
  3084  002CE4  C01C  F0F9         	movff	?_atoi,_prec
  3085  002CE8  C01D  F0FA         	movff	?_atoi+1,_prec+1
  3086                           
  3087                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3088  002CEC  D004               	goto	l10080
  3089  002CEE                     l10076:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  3093  002CEE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3094  002CF0  6ED9               	movwf	fsr2l,c
  3095  002CF2  6ADA               	clrf	fsr2h,c
  3096  002CF4  2ADF               	incf	indf2,f,c
  3097  002CF6                     l10080:
  3098  002CF6  0ED0               	movlw	208
  3099  002CF8  0100               	movlb	0	; () banked
  3100  002CFA  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3101  002CFC  0EFF               	movlw	255
  3102  002CFE  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3103  002D00  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3104  002D02  6ED9               	movwf	fsr2l,c
  3105  002D04  6ADA               	clrf	fsr2h,c
  3106  002D06  006F FF7F FFF6     	movff	indf2,tblptrl
  3107  002D0C                     	if	1	;There is more than 1 active tblptr byte
  3108  002D0C  0E20               	movlw	high __smallconst
  3109  002D0E  6EF7               	movwf	tblptrh,c
  3110  002D10                     	endif
  3111  002D10                     	if	0	;tblptru may be non-zero
  3112  002D10                     	endif
  3113  002D10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3114  002D10  0E00               	movlw	low (__smallconst shr (0+16))
  3115  002D12  6EF8               	movwf	tblptru,c
  3116  002D14                     	endif
  3117  002D14  0008               	tblrd		*
  3118  002D16  50F5               	movf	tablat,w,c
  3119  002D18  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3120  002D1A  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3121  002D1C  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3122  002D1E  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3123  002D20  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3124  002D22  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3125  002D24  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3126  002D26  E104               	bnz	u11910
  3127  002D28  0E0A               	movlw	10
  3128  002D2A  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3129  002D2C  A0D8               	btfss	status,0,c
  3130  002D2E  D7DF               	goto	l10076
  3131  002D30                     u11910:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  3135  002D30  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3136  002D32  6ED9               	movwf	fsr2l,c
  3137  002D34  6ADA               	clrf	fsr2h,c
  3138  002D36  006F FF7F FFF6     	movff	indf2,tblptrl
  3139  002D3C                     	if	1	;There is more than 1 active tblptr byte
  3140  002D3C  0E20               	movlw	high __smallconst
  3141  002D3E  6EF7               	movwf	tblptrh,c
  3142  002D40                     	endif
  3143  002D40                     	if	0	;tblptru may be non-zero
  3144  002D40                     	endif
  3145  002D40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3146  002D40  0E00               	movlw	low (__smallconst shr (0+16))
  3147  002D42  6EF8               	movwf	tblptru,c
  3148  002D44                     	endif
  3149  002D44  0008               	tblrd		*
  3150  002D46  50F5               	movf	tablat,w,c
  3151  002D48  6E1B               	movwf	tolower@c^0,c
  3152  002D4A  6A1C               	clrf	(tolower@c+1)^0,c
  3153  002D4C  EC7D  F02C         	call	_tolower	;wreg free
  3154  002D50  501B               	movf	?_tolower^0,w,c
  3155  002D52  6FCB               	movwf	vfpfcnvrt@ct& (0+255),b
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  3159  002D54  51CB               	movf	vfpfcnvrt@ct& (0+255),w,b
  3160  002D56  B4D8               	btfsc	status,2,c
  3161  002D58  D02F               	goto	l10092
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  3165  002D5A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3166  002D5C  6ED9               	movwf	fsr2l,c
  3167  002D5E  6ADA               	clrf	fsr2h,c
  3168  002D60  50DF               	movf	indf2,w,c
  3169  002D62  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3170  002D64  0E01               	movlw	1
  3171  002D66  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3172  002D68  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3173  002D6E                     	if	1	;There is more than 1 active tblptr byte
  3174  002D6E  0E20               	movlw	high __smallconst
  3175  002D70  6EF7               	movwf	tblptrh,c
  3176  002D72                     	endif
  3177  002D72                     	if	0	;tblptru may be non-zero
  3178  002D72                     	endif
  3179  002D72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3180  002D72  0E00               	movlw	low (__smallconst shr (0+16))
  3181  002D74  6EF8               	movwf	tblptru,c
  3182  002D76                     	endif
  3183  002D76  0008               	tblrd		*
  3184  002D78  50F5               	movf	tablat,w,c
  3185  002D7A  6E1B               	movwf	tolower@c^0,c
  3186  002D7C  6A1C               	clrf	(tolower@c+1)^0,c
  3187  002D7E  EC7D  F02C         	call	_tolower	;wreg free
  3188  002D82  501B               	movf	?_tolower^0,w,c
  3189  002D84  6FCC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  3193  002D86  51CC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3194  002D88  B4D8               	btfsc	status,2,c
  3195  002D8A  D016               	goto	l10092
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  3199  002D8C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3200  002D8E  6ED9               	movwf	fsr2l,c
  3201  002D90  6ADA               	clrf	fsr2h,c
  3202  002D92  50DF               	movf	indf2,w,c
  3203  002D94  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3204  002D96  0E02               	movlw	2
  3205  002D98  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3206  002D9A  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3207  002DA0                     	if	1	;There is more than 1 active tblptr byte
  3208  002DA0  0E20               	movlw	high __smallconst
  3209  002DA2  6EF7               	movwf	tblptrh,c
  3210  002DA4                     	endif
  3211  002DA4                     	if	0	;tblptru may be non-zero
  3212  002DA4                     	endif
  3213  002DA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3214  002DA4  0E00               	movlw	low (__smallconst shr (0+16))
  3215  002DA6  6EF8               	movwf	tblptru,c
  3216  002DA8                     	endif
  3217  002DA8  0008               	tblrd		*
  3218  002DAA  50F5               	movf	tablat,w,c
  3219  002DAC  6E1B               	movwf	tolower@c^0,c
  3220  002DAE  6A1C               	clrf	(tolower@c+1)^0,c
  3221  002DB0  EC7D  F02C         	call	_tolower	;wreg free
  3222  002DB4  501B               	movf	?_tolower^0,w,c
  3223  002DB6  6FCD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3224  002DB8                     l10092:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  3228  002DB8  0E66               	movlw	102
  3229  002DBA  19CB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3230  002DBC  A4D8               	btfss	status,2,c
  3231  002DBE  D049               	goto	l10104
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  3235  002DC0  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3236  002DC2  6ED9               	movwf	fsr2l,c
  3237  002DC4  6ADA               	clrf	fsr2h,c
  3238  002DC6  006F FF7F FFF6     	movff	indf2,tblptrl
  3239  002DCC                     	if	1	;There is more than 1 active tblptr byte
  3240  002DCC  0E20               	movlw	high __smallconst
  3241  002DCE  6EF7               	movwf	tblptrh,c
  3242  002DD0                     	endif
  3243  002DD0                     	if	0	;tblptru may be non-zero
  3244  002DD0                     	endif
  3245  002DD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3246  002DD0  0E00               	movlw	low (__smallconst shr (0+16))
  3247  002DD2  6EF8               	movwf	tblptru,c
  3248  002DD4                     	endif
  3249  002DD4  0008               	tblrd		*
  3250  002DD6  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  3254  002DDC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3255  002DDE  6ED9               	movwf	fsr2l,c
  3256  002DE0  6ADA               	clrf	fsr2h,c
  3257  002DE2  2ADF               	incf	indf2,f,c
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  3261  002DE4  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3262  002DEA  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3263  002DF0  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3264  002DF6  0E04               	movlw	4
  3265  002DF8  26DE               	addwf	postinc2,f,c
  3266  002DFA  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3267  002E00  0E00               	movlw	0
  3268  002E02  22DD               	addwfc	postdec2,f,c
  3269  002E04  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3270  002E0A  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3271  002E10  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3272  002E16  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3273  002E1C  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3274  002E22  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3275  002E28                     l10100:
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  3279  002E28  C0AF  F071         	movff	vfpfcnvrt@fp,efgtoa@fp
  3280  002E2C  C0B0  F072         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3281  002E30  C0C7  F073         	movff	vfpfcnvrt@f,efgtoa@f
  3282  002E34  C0C8  F074         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3283  002E38  C0C9  F075         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3284  002E3C  C0CA  F076         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3285  002E40  C0C6  F077         	movff	vfpfcnvrt@c,efgtoa@c
  3286  002E44  EC7D  F010         	call	_efgtoa	;wreg free
  3287  002E48  C071  F0AF         	movff	?_efgtoa,?_vfpfcnvrt
  3288  002E4C  C072  F0B0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3289  002E50  0012               	return	
  3290  002E52                     l10104:
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3294  002E52  0ECB               	movlw	low vfpfcnvrt@ct
  3295  002E54  6E19               	movwf	strncmp@_l^0,c
  3296  002E56  6A1A               	clrf	(strncmp@_l+1)^0,c
  3297  002E58  0EED               	movlw	low STR_20
  3298  002E5A  6E1B               	movwf	strncmp@_r^0,c
  3299  002E5C  501B               	movf	strncmp@_r^0,w,c
  3300  002E5E  A4D8               	btfss	status,2,c
  3301  002E60  0E20               	movlw	high __smallconst
  3302  002E62  6E1C               	movwf	(strncmp@_r+1)^0,c
  3303  002E64  0E00               	movlw	0
  3304  002E66  6E1E               	movwf	(strncmp@n+1)^0,c
  3305  002E68  0E02               	movlw	2
  3306  002E6A  6E1D               	movwf	strncmp@n^0,c
  3307  002E6C  ECCC  F020         	call	_strncmp	;wreg free
  3308  002E70  5019               	movf	?_strncmp^0,w,c
  3309  002E72  101A               	iorwf	(?_strncmp+1)^0,w,c
  3310  002E74  A4D8               	btfss	status,2,c
  3311  002E76  D055               	goto	l10122
  3312                           
  3313                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  3314  002E78  0100               	movlb	0	; () banked
  3315  002E7A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3316  002E7C  6ED9               	movwf	fsr2l,c
  3317  002E7E  6ADA               	clrf	fsr2h,c
  3318  002E80  50DF               	movf	indf2,w,c
  3319  002E82  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3320  002E84  0E01               	movlw	1
  3321  002E86  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3322  002E88  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3323  002E8E                     	if	1	;There is more than 1 active tblptr byte
  3324  002E8E  0E20               	movlw	high __smallconst
  3325  002E90  6EF7               	movwf	tblptrh,c
  3326  002E92                     	endif
  3327  002E92                     	if	0	;tblptru may be non-zero
  3328  002E92                     	endif
  3329  002E92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3330  002E92  0E00               	movlw	low (__smallconst shr (0+16))
  3331  002E94  6EF8               	movwf	tblptru,c
  3332  002E96                     	endif
  3333  002E96  0008               	tblrd		*
  3334  002E98  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3335                           
  3336                           ; BSR set to: 0
  3337                           
  3338                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3339  002E9E  0EBF               	movlw	191
  3340  002EA0  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3341  002EA2  0EFF               	movlw	255
  3342  002EA4  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3343  002EA6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3344  002EA8  6ED9               	movwf	fsr2l,c
  3345  002EAA  6ADA               	clrf	fsr2h,c
  3346  002EAC  006F FF7F FFF6     	movff	indf2,tblptrl
  3347  002EB2                     	if	1	;There is more than 1 active tblptr byte
  3348  002EB2  0E20               	movlw	high __smallconst
  3349  002EB4  6EF7               	movwf	tblptrh,c
  3350  002EB6                     	endif
  3351  002EB6                     	if	0	;tblptru may be non-zero
  3352  002EB6                     	endif
  3353  002EB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3354  002EB6  0E00               	movlw	low (__smallconst shr (0+16))
  3355  002EB8  6EF8               	movwf	tblptru,c
  3356  002EBA                     	endif
  3357  002EBA  0008               	tblrd		*
  3358  002EBC  50F5               	movf	tablat,w,c
  3359  002EBE  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3360  002EC0  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3361  002EC2  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3362  002EC4  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3363  002EC6  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3364  002EC8  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3365  002ECA  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3366  002ECC  E102               	bnz	l10114
  3367  002ECE  0E1A               	movlw	26
  3368  002ED0  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3369  002ED2                     l10114:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3373  002ED2  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3374  002ED8  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3375  002EDE  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3376  002EE4  0E04               	movlw	4
  3377  002EE6  26DE               	addwf	postinc2,f,c
  3378  002EE8  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3379  002EEE  0E00               	movlw	0
  3380  002EF0  22DD               	addwfc	postdec2,f,c
  3381  002EF2  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3382  002EF8  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3383  002EFE  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3384  002F04  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3385  002F0A  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3386  002F10  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  3390  002F16  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3391  002F18  6ED9               	movwf	fsr2l,c
  3392  002F1A  6ADA               	clrf	fsr2h,c
  3393  002F1C  0E02               	movlw	2
  3394  002F1E  26DF               	addwf	indf2,f,c
  3395  002F20  D783               	goto	l10100
  3396  002F22                     l10122:
  3397                           
  3398                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  3399  002F22  0100               	movlb	0	; () banked
  3400  002F24  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3401  002F26  6ED9               	movwf	fsr2l,c
  3402  002F28  6ADA               	clrf	fsr2h,c
  3403  002F2A  006F FF7F FFF6     	movff	indf2,tblptrl
  3404  002F30                     	if	1	;There is more than 1 active tblptr byte
  3405  002F30  0E20               	movlw	high __smallconst
  3406  002F32  6EF7               	movwf	tblptrh,c
  3407  002F34                     	endif
  3408  002F34                     	if	0	;tblptru may be non-zero
  3409  002F34                     	endif
  3410  002F34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3411  002F34  0E00               	movlw	low (__smallconst shr (0+16))
  3412  002F36  6EF8               	movwf	tblptru,c
  3413  002F38                     	endif
  3414  002F38  0008               	tblrd		*
  3415  002F3A  50F5               	movf	tablat,w,c
  3416  002F3C  0A73               	xorlw	115
  3417  002F3E  B4D8               	btfsc	status,2,c
  3418  002F40  D01B               	goto	u11980
  3419                           
  3420                           ; BSR set to: 0
  3421  002F42  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3422  002F44  6ED9               	movwf	fsr2l,c
  3423  002F46  6ADA               	clrf	fsr2h,c
  3424  002F48  50DF               	movf	indf2,w,c
  3425  002F4A  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3426  002F4C  C0B4  F019         	movff	??_vfpfcnvrt,strncmp@_l
  3427  002F50  5019               	movf	strncmp@_l^0,w,c
  3428  002F52  A4D8               	btfss	status,2,c
  3429  002F54  0E20               	movlw	high __smallconst
  3430  002F56  6E1A               	movwf	(strncmp@_l+1)^0,c
  3431  002F58  0EE9               	movlw	low STR_25
  3432  002F5A  6E1B               	movwf	strncmp@_r^0,c
  3433  002F5C  501B               	movf	strncmp@_r^0,w,c
  3434  002F5E  A4D8               	btfss	status,2,c
  3435  002F60  0E20               	movlw	high __smallconst
  3436  002F62  6E1C               	movwf	(strncmp@_r+1)^0,c
  3437  002F64  0E00               	movlw	0
  3438  002F66  6E1E               	movwf	(strncmp@n+1)^0,c
  3439  002F68  0E03               	movlw	3
  3440  002F6A  6E1D               	movwf	strncmp@n^0,c
  3441  002F6C  ECCC  F020         	call	_strncmp	;wreg free
  3442  002F70  5019               	movf	?_strncmp^0,w,c
  3443  002F72  101A               	iorwf	(?_strncmp+1)^0,w,c
  3444  002F74  A4D8               	btfss	status,2,c
  3445  002F76  D048               	goto	l10140
  3446  002F78                     u11980:
  3447                           
  3448                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  3449  002F78  0100               	movlb	0	; () banked
  3450  002F7A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3451  002F7C  6ED9               	movwf	fsr2l,c
  3452  002F7E  6ADA               	clrf	fsr2h,c
  3453  002F80  006F FF7F FFF6     	movff	indf2,tblptrl
  3454  002F86                     	if	1	;There is more than 1 active tblptr byte
  3455  002F86  0E20               	movlw	high __smallconst
  3456  002F88  6EF7               	movwf	tblptrh,c
  3457  002F8A                     	endif
  3458  002F8A                     	if	0	;tblptru may be non-zero
  3459  002F8A                     	endif
  3460  002F8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3461  002F8A  0E00               	movlw	low (__smallconst shr (0+16))
  3462  002F8C  6EF8               	movwf	tblptru,c
  3463  002F8E                     	endif
  3464  002F8E  0008               	tblrd		*
  3465  002F90  50F5               	movf	tablat,w,c
  3466  002F92  0A73               	xorlw	115
  3467  002F94  B4D8               	btfsc	status,2,c
  3468  002F96  D004               	goto	l10130
  3469                           
  3470                           ; BSR set to: 0
  3471  002F98  0E00               	movlw	0
  3472  002F9A  6FC5               	movwf	(_vfpfcnvrt$2770+1)& (0+255),b
  3473  002F9C  0E03               	movlw	3
  3474  002F9E  D003               	goto	L2
  3475  002FA0                     l10130:
  3476                           
  3477                           ; BSR set to: 0
  3478  002FA0  0E00               	movlw	0
  3479  002FA2  6FC5               	movwf	(_vfpfcnvrt$2770+1)& (0+255),b
  3480  002FA4  0E01               	movlw	1
  3481  002FA6                     L2:
  3482  002FA6  6FC4               	movwf	_vfpfcnvrt$2770& (0+255),b
  3483                           
  3484                           ; BSR set to: 0
  3485  002FA8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3486  002FAA  6ED9               	movwf	fsr2l,c
  3487  002FAC  6ADA               	clrf	fsr2h,c
  3488  002FAE  51C4               	movf	_vfpfcnvrt$2770& (0+255),w,b
  3489  002FB0  26DF               	addwf	indf2,f,c
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3493  002FB2  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3494  002FB8  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3495  002FBE  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3496  002FC4  0E02               	movlw	2
  3497  002FC6  26DE               	addwf	postinc2,f,c
  3498  002FC8  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3499  002FCE  0E00               	movlw	0
  3500  002FD0  22DD               	addwfc	postdec2,f,c
  3501  002FD2  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3502  002FD8  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3503  002FDE  006F FF78  F0C0    	movff	postinc2,vfpfcnvrt@cp
  3504  002FE4  006F FF74  F0C1    	movff	postdec2,vfpfcnvrt@cp+1
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  3508  002FEA  C0AF  F020         	movff	vfpfcnvrt@fp,stoa@fp
  3509  002FEE  C0B0  F021         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3510  002FF2  C0C0  F022         	movff	vfpfcnvrt@cp,stoa@s
  3511  002FF6  C0C1  F023         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3512  002FFA  ECCE  F022         	call	_stoa	;wreg free
  3513  002FFE  C020  F0AF         	movff	?_stoa,?_vfpfcnvrt
  3514  003002  C021  F0B0         	movff	?_stoa+1,?_vfpfcnvrt+1
  3515  003006  0012               	return	
  3516  003008                     l10140:
  3517                           
  3518                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  3519  003008  0100               	movlb	0	; () banked
  3520  00300A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3521  00300C  6ED9               	movwf	fsr2l,c
  3522  00300E  6ADA               	clrf	fsr2h,c
  3523  003010  006F FF7F FFF6     	movff	indf2,tblptrl
  3524  003016                     	if	1	;There is more than 1 active tblptr byte
  3525  003016  0E20               	movlw	high __smallconst
  3526  003018  6EF7               	movwf	tblptrh,c
  3527  00301A                     	endif
  3528  00301A                     	if	0	;tblptru may be non-zero
  3529  00301A                     	endif
  3530  00301A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3531  00301A  0E00               	movlw	low (__smallconst shr (0+16))
  3532  00301C  6EF8               	movwf	tblptru,c
  3533  00301E                     	endif
  3534  00301E  0008               	tblrd		*
  3535  003020  50F5               	movf	tablat,w,c
  3536  003022  0A75               	xorlw	117
  3537  003024  A4D8               	btfss	status,2,c
  3538  003026  D045               	goto	l10148
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  3542  003028  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3543  00302A  6ED9               	movwf	fsr2l,c
  3544  00302C  6ADA               	clrf	fsr2h,c
  3545  00302E  2ADF               	incf	indf2,f,c
  3546                           
  3547                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  3548  003030  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3549  003036  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3550  00303C  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3551  003042  0E02               	movlw	2
  3552  003044  26DE               	addwf	postinc2,f,c
  3553  003046  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3554  00304C  0E00               	movlw	0
  3555  00304E  22DD               	addwfc	postdec2,f,c
  3556  003050  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3557  003056  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3558  00305C  006F FF78  F0B6    	movff	postinc2,??_vfpfcnvrt+2
  3559  003062  006F FF74  F0B7    	movff	postdec2,??_vfpfcnvrt+3
  3560  003068  C0B6  F0B8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3561  00306C  C0B7  F0B9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3562  003070  6BBA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3563  003072  6BBB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3564  003074  6BBC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3565  003076  6BBD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3566  003078  6BBE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3567  00307A  6BBF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  3571  00307C  C0AF  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3572  003080  C0B0  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3573  003084  C0B8  F062         	movff	vfpfcnvrt@llu,utoa@d
  3574  003088  C0B9  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3575  00308C  C0BA  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3576  003090  C0BB  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3577  003094  C0BC  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3578  003098  C0BD  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3579  00309C  C0BE  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3580  0030A0  C0BF  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3581  0030A4  EC1F  F01F         	call	_utoa	;wreg free
  3582  0030A8  C060  F0AF         	movff	?_utoa,?_vfpfcnvrt
  3583  0030AC  C061  F0B0         	movff	?_utoa+1,?_vfpfcnvrt+1
  3584  0030B0  0012               	return	
  3585  0030B2                     l10148:
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3589  0030B2  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3590  0030B4  6ED9               	movwf	fsr2l,c
  3591  0030B6  6ADA               	clrf	fsr2h,c
  3592  0030B8  006F FF7F FFF6     	movff	indf2,tblptrl
  3593  0030BE                     	if	1	;There is more than 1 active tblptr byte
  3594  0030BE  0E20               	movlw	high __smallconst
  3595  0030C0  6EF7               	movwf	tblptrh,c
  3596  0030C2                     	endif
  3597  0030C2                     	if	0	;tblptru may be non-zero
  3598  0030C2                     	endif
  3599  0030C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3600  0030C2  0E00               	movlw	low (__smallconst shr (0+16))
  3601  0030C4  6EF8               	movwf	tblptru,c
  3602  0030C6                     	endif
  3603  0030C6  0008               	tblrd		*
  3604  0030C8  50F5               	movf	tablat,w,c
  3605  0030CA  0A25               	xorlw	37
  3606  0030CC  A4D8               	btfss	status,2,c
  3607  0030CE  D014               	goto	l10158
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3611  0030D0  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3612  0030D2  6ED9               	movwf	fsr2l,c
  3613  0030D4  6ADA               	clrf	fsr2h,c
  3614  0030D6  2ADF               	incf	indf2,f,c
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3618  0030D8  0E00               	movlw	0
  3619  0030DA  6E18               	movwf	(fputc@c+1)^0,c
  3620  0030DC  0E25               	movlw	37
  3621  0030DE  6E17               	movwf	fputc@c^0,c
  3622  0030E0  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3623  0030E4  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3624  0030E8  EC57  F027         	call	_fputc	;wreg free
  3625  0030EC                     l10154:
  3626                           
  3627                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3628  0030EC  0E00               	movlw	0
  3629  0030EE  0100               	movlb	0	; () banked
  3630  0030F0  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3631  0030F2  0E01               	movlw	1
  3632  0030F4  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3633  0030F6  0012               	return	
  3634  0030F8                     l10158:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3638  0030F8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3639  0030FA  6ED9               	movwf	fsr2l,c
  3640  0030FC  6ADA               	clrf	fsr2h,c
  3641  0030FE  2ADF               	incf	indf2,f,c
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3645  003100  0E00               	movlw	0
  3646  003102  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3647  003104  0E00               	movlw	0
  3648  003106  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3649  003108  0012               	return	
  3650  00310A                     l10164:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3654  00310A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3655  00310C  6ED9               	movwf	fsr2l,c
  3656  00310E  6ADA               	clrf	fsr2h,c
  3657  003110  006F FF7F FFF6     	movff	indf2,tblptrl
  3658  003116                     	if	1	;There is more than 1 active tblptr byte
  3659  003116  0E20               	movlw	high __smallconst
  3660  003118  6EF7               	movwf	tblptrh,c
  3661  00311A                     	endif
  3662  00311A                     	if	0	;tblptru may be non-zero
  3663  00311A                     	endif
  3664  00311A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3665  00311A  0E00               	movlw	low (__smallconst shr (0+16))
  3666  00311C  6EF8               	movwf	tblptru,c
  3667  00311E                     	endif
  3668  00311E  0008               	tblrd		*
  3669  003120  50F5               	movf	tablat,w,c
  3670  003122  6E17               	movwf	fputc@c^0,c
  3671  003124  6A18               	clrf	(fputc@c+1)^0,c
  3672  003126  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3673  00312A  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3674  00312E  EC57  F027         	call	_fputc	;wreg free
  3675                           
  3676                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3677  003132  0100               	movlb	0	; () banked
  3678  003134  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3679  003136  6ED9               	movwf	fsr2l,c
  3680  003138  6ADA               	clrf	fsr2h,c
  3681  00313A  2ADF               	incf	indf2,f,c
  3682  00313C  D7D7               	goto	l10154
  3683  00313E                     __end_of_vfpfcnvrt:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _utoa *****************
  3687 ;; Defined at:
  3688 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3691 ;;		 -> sprintf@f(11), NULL(0), 
  3692 ;;  d               8    2[BANK0 ] unsigned long long 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  n               8   22[BANK0 ] unsigned long long 
  3695 ;;  i               2   30[BANK0 ] int 
  3696 ;;  w               2   20[BANK0 ] int 
  3697 ;;  p               2   18[BANK0 ] int 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  2    0[BANK0 ] int 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 3F/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3707 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3708 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3709 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3710 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3711 ;;Total ram usage:       32 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 9
  3714 ;; This function calls:
  3715 ;;		___lodiv
  3716 ;;		___lomod
  3717 ;;		_pad
  3718 ;; This function is called by:
  3719 ;;		_vfpfcnvrt
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text7
  3724  003E3E                     __ptext7:
  3725                           	callstack 0
  3726  003E3E                     _utoa:
  3727                           	callstack 16
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  3731                           
  3732                           ;incstack = 0
  3733  003E3E  AFFA               	btfss	(_prec+1)& (0+255),7,b
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  3737  003E40  923D               	bcf	_flags^0,1,c
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  3741  003E42  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3742  003E44  D005               	goto	u11730
  3743  003E46  51FA               	movf	(_prec+1)& (0+255),w,b
  3744  003E48  E108               	bnz	l1988
  3745  003E4A  05F9               	decf	_prec& (0+255),w,b
  3746  003E4C  B0D8               	btfsc	status,0,c
  3747  003E4E  D005               	goto	l1988
  3748  003E50                     u11730:
  3749                           
  3750                           ; BSR set to: 0
  3751  003E50  0E00               	movlw	0
  3752  003E52  6F73               	movwf	(utoa@p+1)& (0+255),b
  3753  003E54  0E01               	movlw	1
  3754  003E56  6F72               	movwf	utoa@p& (0+255),b
  3755  003E58  D004               	goto	l1990
  3756  003E5A                     l1988:
  3757                           
  3758                           ; BSR set to: 0
  3759  003E5A  C0F9  F072         	movff	_prec,utoa@p
  3760  003E5E  C0FA  F073         	movff	_prec+1,utoa@p+1
  3761  003E62                     l1990:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  3765  003E62  C0F7  F074         	movff	_width,utoa@w
  3766  003E66  C0F8  F075         	movff	_width+1,utoa@w+1
  3767                           
  3768                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  3769  003E6A  C062  F076         	movff	utoa@d,utoa@n
  3770  003E6E  C063  F077         	movff	utoa@d+1,utoa@n+1
  3771  003E72  C064  F078         	movff	utoa@d+2,utoa@n+2
  3772  003E76  C065  F079         	movff	utoa@d+3,utoa@n+3
  3773  003E7A  C066  F07A         	movff	utoa@d+4,utoa@n+4
  3774  003E7E  C067  F07B         	movff	utoa@d+5,utoa@n+5
  3775  003E82  C068  F07C         	movff	utoa@d+6,utoa@n+6
  3776  003E86  C069  F07D         	movff	utoa@d+7,utoa@n+7
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  3780  003E8A  0E00               	movlw	0
  3781  003E8C  6F7F               	movwf	(utoa@i+1)& (0+255),b
  3782  003E8E  0E4F               	movlw	79
  3783  003E90  6F7E               	movwf	utoa@i& (0+255),b
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  3787  003E92  0E00               	movlw	0
  3788  003E94  0101               	movlb	1	; () banked
  3789  003E96  6FE7               	movwf	(_dbuf+79)& (0+255),b
  3790                           
  3791                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3792  003E98  D076               	goto	l9960
  3793  003E9A                     l9950:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  3797  003E9A  077E               	decf	utoa@i& (0+255),f,b
  3798  003E9C  A0D8               	btfss	status,0,c
  3799  003E9E  077F               	decf	(utoa@i+1)& (0+255),f,b
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  3803  003EA0  0E98               	movlw	low _dbuf
  3804  003EA2  257E               	addwf	utoa@i& (0+255),w,b
  3805  003EA4  6ED9               	movwf	fsr2l,c
  3806  003EA6  0E01               	movlw	high _dbuf
  3807  003EA8  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3808  003EAA  6EDA               	movwf	fsr2h,c
  3809  003EAC  C076  F015         	movff	utoa@n,___lomod@dividend
  3810  003EB0  C077  F016         	movff	utoa@n+1,___lomod@dividend+1
  3811  003EB4  C078  F017         	movff	utoa@n+2,___lomod@dividend+2
  3812  003EB8  C079  F018         	movff	utoa@n+3,___lomod@dividend+3
  3813  003EBC  C07A  F019         	movff	utoa@n+4,___lomod@dividend+4
  3814  003EC0  C07B  F01A         	movff	utoa@n+5,___lomod@dividend+5
  3815  003EC4  C07C  F01B         	movff	utoa@n+6,___lomod@dividend+6
  3816  003EC8  C07D  F01C         	movff	utoa@n+7,___lomod@dividend+7
  3817  003ECC  0E0A               	movlw	10
  3818  003ECE  6E1D               	movwf	___lomod@divisor^0,c
  3819  003ED0  0E00               	movlw	0
  3820  003ED2  6E1E               	movwf	(___lomod@divisor+1)^0,c
  3821  003ED4  0E00               	movlw	0
  3822  003ED6  6E1F               	movwf	(___lomod@divisor+2)^0,c
  3823  003ED8  0E00               	movlw	0
  3824  003EDA  6E20               	movwf	(___lomod@divisor+3)^0,c
  3825  003EDC  0E00               	movlw	0
  3826  003EDE  6E21               	movwf	(___lomod@divisor+4)^0,c
  3827  003EE0  0E00               	movlw	0
  3828  003EE2  6E22               	movwf	(___lomod@divisor+5)^0,c
  3829  003EE4  0E00               	movlw	0
  3830  003EE6  6E23               	movwf	(___lomod@divisor+6)^0,c
  3831  003EE8  0E00               	movlw	0
  3832  003EEA  6E24               	movwf	(___lomod@divisor+7)^0,c
  3833  003EEC  ECB1  F027         	call	___lomod	;wreg free
  3834  003EF0  C015  F06A         	movff	?___lomod,??_utoa
  3835  003EF4  C016  F06B         	movff	?___lomod+1,??_utoa+1
  3836  003EF8  C017  F06C         	movff	?___lomod+2,??_utoa+2
  3837  003EFC  C018  F06D         	movff	?___lomod+3,??_utoa+3
  3838  003F00  C019  F06E         	movff	?___lomod+4,??_utoa+4
  3839  003F04  C01A  F06F         	movff	?___lomod+5,??_utoa+5
  3840  003F08  C01B  F070         	movff	?___lomod+6,??_utoa+6
  3841  003F0C  C01C  F071         	movff	?___lomod+7,??_utoa+7
  3842  003F10  516A               	movf	??_utoa& (0+255),w,b
  3843  003F12  0F30               	addlw	48
  3844  003F14  6EDF               	movwf	indf2,c
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  3848  003F16  0772               	decf	utoa@p& (0+255),f,b
  3849  003F18  A0D8               	btfss	status,0,c
  3850  003F1A  0773               	decf	(utoa@p+1)& (0+255),f,b
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  3854  003F1C  0774               	decf	utoa@w& (0+255),f,b
  3855  003F1E  A0D8               	btfss	status,0,c
  3856  003F20  0775               	decf	(utoa@w+1)& (0+255),f,b
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  3860  003F22  C076  F015         	movff	utoa@n,___lodiv@dividend
  3861  003F26  C077  F016         	movff	utoa@n+1,___lodiv@dividend+1
  3862  003F2A  C078  F017         	movff	utoa@n+2,___lodiv@dividend+2
  3863  003F2E  C079  F018         	movff	utoa@n+3,___lodiv@dividend+3
  3864  003F32  C07A  F019         	movff	utoa@n+4,___lodiv@dividend+4
  3865  003F36  C07B  F01A         	movff	utoa@n+5,___lodiv@dividend+5
  3866  003F3A  C07C  F01B         	movff	utoa@n+6,___lodiv@dividend+6
  3867  003F3E  C07D  F01C         	movff	utoa@n+7,___lodiv@dividend+7
  3868  003F42  0E0A               	movlw	10
  3869  003F44  6E1D               	movwf	___lodiv@divisor^0,c
  3870  003F46  0E00               	movlw	0
  3871  003F48  6E1E               	movwf	(___lodiv@divisor+1)^0,c
  3872  003F4A  0E00               	movlw	0
  3873  003F4C  6E1F               	movwf	(___lodiv@divisor+2)^0,c
  3874  003F4E  0E00               	movlw	0
  3875  003F50  6E20               	movwf	(___lodiv@divisor+3)^0,c
  3876  003F52  0E00               	movlw	0
  3877  003F54  6E21               	movwf	(___lodiv@divisor+4)^0,c
  3878  003F56  0E00               	movlw	0
  3879  003F58  6E22               	movwf	(___lodiv@divisor+5)^0,c
  3880  003F5A  0E00               	movlw	0
  3881  003F5C  6E23               	movwf	(___lodiv@divisor+6)^0,c
  3882  003F5E  0E00               	movlw	0
  3883  003F60  6E24               	movwf	(___lodiv@divisor+7)^0,c
  3884  003F62  EC13  F025         	call	___lodiv	;wreg free
  3885  003F66  C015  F076         	movff	?___lodiv,utoa@n
  3886  003F6A  C016  F077         	movff	?___lodiv+1,utoa@n+1
  3887  003F6E  C017  F078         	movff	?___lodiv+2,utoa@n+2
  3888  003F72  C018  F079         	movff	?___lodiv+3,utoa@n+3
  3889  003F76  C019  F07A         	movff	?___lodiv+4,utoa@n+4
  3890  003F7A  C01A  F07B         	movff	?___lodiv+5,utoa@n+5
  3891  003F7E  C01B  F07C         	movff	?___lodiv+6,utoa@n+6
  3892  003F82  C01C  F07D         	movff	?___lodiv+7,utoa@n+7
  3893  003F86                     l9960:
  3894                           
  3895                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3896  003F86  0100               	movlb	0	; () banked
  3897  003F88  517E               	movf	utoa@i& (0+255),w,b
  3898  003F8A  117F               	iorwf	(utoa@i+1)& (0+255),w,b
  3899  003F8C  B4D8               	btfsc	status,2,c
  3900  003F8E  D01A               	goto	u11780
  3901                           
  3902                           ; BSR set to: 0
  3903  003F90  5176               	movf	utoa@n& (0+255),w,b
  3904  003F92  1177               	iorwf	(utoa@n+1)& (0+255),w,b
  3905  003F94  1178               	iorwf	(utoa@n+2)& (0+255),w,b
  3906  003F96  1179               	iorwf	(utoa@n+3)& (0+255),w,b
  3907  003F98  117A               	iorwf	(utoa@n+4)& (0+255),w,b
  3908  003F9A  117B               	iorwf	(utoa@n+5)& (0+255),w,b
  3909  003F9C  117C               	iorwf	(utoa@n+6)& (0+255),w,b
  3910  003F9E  117D               	iorwf	(utoa@n+7)& (0+255),w,b
  3911  003FA0  A4D8               	btfss	status,2,c
  3912  003FA2  D77B               	goto	l9950
  3913                           
  3914                           ; BSR set to: 0
  3915  003FA4  BF73               	btfsc	(utoa@p+1)& (0+255),7,b
  3916  003FA6  D005               	goto	u11760
  3917  003FA8  5173               	movf	(utoa@p+1)& (0+255),w,b
  3918  003FAA  E102               	bnz	u11761
  3919  003FAC  0572               	decf	utoa@p& (0+255),w,b
  3920  003FAE  B0D8               	btfsc	status,0,c
  3921  003FB0                     u11761:
  3922  003FB0  D774               	goto	l9950
  3923  003FB2                     u11760:
  3924                           
  3925                           ; BSR set to: 0
  3926  003FB2  BF75               	btfsc	(utoa@w+1)& (0+255),7,b
  3927  003FB4  D007               	goto	u11780
  3928  003FB6  5175               	movf	(utoa@w+1)& (0+255),w,b
  3929  003FB8  E103               	bnz	u11770
  3930  003FBA  0574               	decf	utoa@w& (0+255),w,b
  3931  003FBC  A0D8               	btfss	status,0,c
  3932  003FBE  D002               	goto	u11780
  3933  003FC0                     u11770:
  3934                           
  3935                           ; BSR set to: 0
  3936  003FC0  B23D               	btfsc	_flags^0,1,c
  3937  003FC2  D76B               	goto	l9950
  3938  003FC4                     u11780:
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  3942  003FC4  C060  F029         	movff	utoa@fp,pad@fp
  3943  003FC8  C061  F02A         	movff	utoa@fp+1,pad@fp+1
  3944  003FCC  0E98               	movlw	low _dbuf
  3945  003FCE  257E               	addwf	utoa@i& (0+255),w,b
  3946  003FD0  6E2B               	movwf	pad@buf^0,c
  3947  003FD2  0E01               	movlw	high _dbuf
  3948  003FD4  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3949  003FD6  6E2C               	movwf	(pad@buf+1)^0,c
  3950  003FD8  C074  F02D         	movff	utoa@w,pad@p
  3951  003FDC  C075  F02E         	movff	utoa@w+1,pad@p+1
  3952  003FE0  ECA7  F028         	call	_pad	;wreg free
  3953  003FE4  C029  F060         	movff	?_pad,?_utoa
  3954  003FE8  C02A  F061         	movff	?_pad+1,?_utoa+1
  3955  003FEC  0012               	return		;funcret
  3956  003FEE                     __end_of_utoa:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function ___lomod *****************
  3960 ;; Defined at:
  3961 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  dividend        8   20[COMRAM] unsigned long long 
  3964 ;;  divisor         8   28[COMRAM] unsigned long long 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  counter         1   36[COMRAM] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  8   20[COMRAM] unsigned long long 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0
  3971 ;; Tracked objects:
  3972 ;;		On entry : 3F/0
  3973 ;;		On exit  : 3F/0
  3974 ;;		Unchanged: 3F/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3976 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3979 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3980 ;;Total ram usage:       17 bytes
  3981 ;; Hardware stack levels used: 1
  3982 ;; Hardware stack levels required when called: 4
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_utoa
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text8
  3991  004F62                     __ptext8:
  3992                           	callstack 0
  3993  004F62                     ___lomod:
  3994                           	callstack 20
  3995                           
  3996                           ; BSR set to: 0
  3997                           
  3998                           ;incstack = 0
  3999  004F62  501D               	movf	___lomod@divisor^0,w,c
  4000  004F64  101E               	iorwf	(___lomod@divisor+1)^0,w,c
  4001  004F66  101F               	iorwf	(___lomod@divisor+2)^0,w,c
  4002  004F68  1020               	iorwf	(___lomod@divisor+3)^0,w,c
  4003  004F6A  1021               	iorwf	(___lomod@divisor+4)^0,w,c
  4004  004F6C  1022               	iorwf	(___lomod@divisor+5)^0,w,c
  4005  004F6E  1023               	iorwf	(___lomod@divisor+6)^0,w,c
  4006  004F70  1024               	iorwf	(___lomod@divisor+7)^0,w,c
  4007  004F72  B4D8               	btfsc	status,2,c
  4008  004F74  D03C               	goto	l1587
  4009                           
  4010                           ; BSR set to: 0
  4011  004F76  0E01               	movlw	1
  4012  004F78  6E25               	movwf	___lomod@counter^0,c
  4013  004F7A  D00A               	goto	l9458
  4014  004F7C                     l9456:
  4015                           
  4016                           ; BSR set to: 0
  4017  004F7C  90D8               	bcf	status,0,c
  4018  004F7E  361D               	rlcf	___lomod@divisor^0,f,c
  4019  004F80  361E               	rlcf	(___lomod@divisor+1)^0,f,c
  4020  004F82  361F               	rlcf	(___lomod@divisor+2)^0,f,c
  4021  004F84  3620               	rlcf	(___lomod@divisor+3)^0,f,c
  4022  004F86  3621               	rlcf	(___lomod@divisor+4)^0,f,c
  4023  004F88  3622               	rlcf	(___lomod@divisor+5)^0,f,c
  4024  004F8A  3623               	rlcf	(___lomod@divisor+6)^0,f,c
  4025  004F8C  3624               	rlcf	(___lomod@divisor+7)^0,f,c
  4026  004F8E  2A25               	incf	___lomod@counter^0,f,c
  4027  004F90                     l9458:
  4028                           
  4029                           ; BSR set to: 0
  4030  004F90  AE24               	btfss	(___lomod@divisor+7)^0,7,c
  4031  004F92  D7F4               	goto	l9456
  4032  004F94                     u10740:
  4033                           
  4034                           ; BSR set to: 0
  4035  004F94  501D               	movf	___lomod@divisor^0,w,c
  4036  004F96  5C15               	subwf	___lomod@dividend^0,w,c
  4037  004F98  501E               	movf	(___lomod@divisor+1)^0,w,c
  4038  004F9A  5816               	subwfb	(___lomod@dividend+1)^0,w,c
  4039  004F9C  501F               	movf	(___lomod@divisor+2)^0,w,c
  4040  004F9E  5817               	subwfb	(___lomod@dividend+2)^0,w,c
  4041  004FA0  5020               	movf	(___lomod@divisor+3)^0,w,c
  4042  004FA2  5818               	subwfb	(___lomod@dividend+3)^0,w,c
  4043  004FA4  5021               	movf	(___lomod@divisor+4)^0,w,c
  4044  004FA6  5819               	subwfb	(___lomod@dividend+4)^0,w,c
  4045  004FA8  5022               	movf	(___lomod@divisor+5)^0,w,c
  4046  004FAA  581A               	subwfb	(___lomod@dividend+5)^0,w,c
  4047  004FAC  5023               	movf	(___lomod@divisor+6)^0,w,c
  4048  004FAE  581B               	subwfb	(___lomod@dividend+6)^0,w,c
  4049  004FB0  5024               	movf	(___lomod@divisor+7)^0,w,c
  4050  004FB2  581C               	subwfb	(___lomod@dividend+7)^0,w,c
  4051  004FB4  A0D8               	btfss	status,0,c
  4052  004FB6  D010               	goto	l9464
  4053                           
  4054                           ; BSR set to: 0
  4055  004FB8  501D               	movf	___lomod@divisor^0,w,c
  4056  004FBA  5E15               	subwf	___lomod@dividend^0,f,c
  4057  004FBC  501E               	movf	(___lomod@divisor+1)^0,w,c
  4058  004FBE  5A16               	subwfb	(___lomod@dividend+1)^0,f,c
  4059  004FC0  501F               	movf	(___lomod@divisor+2)^0,w,c
  4060  004FC2  5A17               	subwfb	(___lomod@dividend+2)^0,f,c
  4061  004FC4  5020               	movf	(___lomod@divisor+3)^0,w,c
  4062  004FC6  5A18               	subwfb	(___lomod@dividend+3)^0,f,c
  4063  004FC8  5021               	movf	(___lomod@divisor+4)^0,w,c
  4064  004FCA  5A19               	subwfb	(___lomod@dividend+4)^0,f,c
  4065  004FCC  5022               	movf	(___lomod@divisor+5)^0,w,c
  4066  004FCE  5A1A               	subwfb	(___lomod@dividend+5)^0,f,c
  4067  004FD0  5023               	movf	(___lomod@divisor+6)^0,w,c
  4068  004FD2  5A1B               	subwfb	(___lomod@dividend+6)^0,f,c
  4069  004FD4  5024               	movf	(___lomod@divisor+7)^0,w,c
  4070  004FD6  5A1C               	subwfb	(___lomod@dividend+7)^0,f,c
  4071  004FD8                     l9464:
  4072                           
  4073                           ; BSR set to: 0
  4074  004FD8  90D8               	bcf	status,0,c
  4075  004FDA  3224               	rrcf	(___lomod@divisor+7)^0,f,c
  4076  004FDC  3223               	rrcf	(___lomod@divisor+6)^0,f,c
  4077  004FDE  3222               	rrcf	(___lomod@divisor+5)^0,f,c
  4078  004FE0  3221               	rrcf	(___lomod@divisor+4)^0,f,c
  4079  004FE2  3220               	rrcf	(___lomod@divisor+3)^0,f,c
  4080  004FE4  321F               	rrcf	(___lomod@divisor+2)^0,f,c
  4081  004FE6  321E               	rrcf	(___lomod@divisor+1)^0,f,c
  4082  004FE8  321D               	rrcf	___lomod@divisor^0,f,c
  4083                           
  4084                           ; BSR set to: 0
  4085  004FEA  2E25               	decfsz	___lomod@counter^0,f,c
  4086  004FEC  D7D3               	goto	u10740
  4087  004FEE                     l1587:
  4088                           
  4089                           ; BSR set to: 0
  4090  004FEE  C015  F015         	movff	___lomod@dividend,?___lomod
  4091  004FF2  C016  F016         	movff	___lomod@dividend+1,?___lomod+1
  4092  004FF6  C017  F017         	movff	___lomod@dividend+2,?___lomod+2
  4093  004FFA  C018  F018         	movff	___lomod@dividend+3,?___lomod+3
  4094  004FFE  C019  F019         	movff	___lomod@dividend+4,?___lomod+4
  4095  005002  C01A  F01A         	movff	___lomod@dividend+5,?___lomod+5
  4096  005006  C01B  F01B         	movff	___lomod@dividend+6,?___lomod+6
  4097  00500A  C01C  F01C         	movff	___lomod@dividend+7,?___lomod+7
  4098                           
  4099                           ; BSR set to: 0
  4100  00500E  0012               	return		;funcret
  4101  005010                     __end_of___lomod:
  4102                           	callstack 0
  4103                           
  4104 ;; *************** function ___lodiv *****************
  4105 ;; Defined at:
  4106 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  dividend        8   20[COMRAM] unsigned long long 
  4109 ;;  divisor         8   28[COMRAM] unsigned long long 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  quotient        8   36[COMRAM] unsigned long long 
  4112 ;;  counter         1   44[COMRAM] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  8   20[COMRAM] unsigned long long 
  4115 ;; Registers used:
  4116 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4117 ;; Tracked objects:
  4118 ;;		On entry : 3F/0
  4119 ;;		On exit  : 3F/0
  4120 ;;		Unchanged: 3F/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4122 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4123 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4125 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4126 ;;Total ram usage:       25 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 4
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_utoa
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text9
  4137  004A26                     __ptext9:
  4138                           	callstack 0
  4139  004A26                     ___lodiv:
  4140                           	callstack 20
  4141                           
  4142                           ; BSR set to: 0
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;incstack = 0
  4146  004A26  EE20  F025         	lfsr	2,___lodiv@quotient
  4147  004A2A  0E07               	movlw	7
  4148  004A2C                     u10691:
  4149  004A2C  6ADE               	clrf	postinc2,c
  4150  004A2E  06E8               	decf	wreg,f,c
  4151  004A30  E2FD               	bc	u10691
  4152                           
  4153                           ; BSR set to: 0
  4154  004A32  501D               	movf	___lodiv@divisor^0,w,c
  4155  004A34  101E               	iorwf	(___lodiv@divisor+1)^0,w,c
  4156  004A36  101F               	iorwf	(___lodiv@divisor+2)^0,w,c
  4157  004A38  1020               	iorwf	(___lodiv@divisor+3)^0,w,c
  4158  004A3A  1021               	iorwf	(___lodiv@divisor+4)^0,w,c
  4159  004A3C  1022               	iorwf	(___lodiv@divisor+5)^0,w,c
  4160  004A3E  1023               	iorwf	(___lodiv@divisor+6)^0,w,c
  4161  004A40  1024               	iorwf	(___lodiv@divisor+7)^0,w,c
  4162  004A42  B4D8               	btfsc	status,2,c
  4163  004A44  D046               	goto	l1577
  4164                           
  4165                           ; BSR set to: 0
  4166  004A46  0E01               	movlw	1
  4167  004A48  6E2D               	movwf	___lodiv@counter^0,c
  4168  004A4A  D00A               	goto	l9438
  4169  004A4C                     l9436:
  4170                           
  4171                           ; BSR set to: 0
  4172  004A4C  90D8               	bcf	status,0,c
  4173  004A4E  361D               	rlcf	___lodiv@divisor^0,f,c
  4174  004A50  361E               	rlcf	(___lodiv@divisor+1)^0,f,c
  4175  004A52  361F               	rlcf	(___lodiv@divisor+2)^0,f,c
  4176  004A54  3620               	rlcf	(___lodiv@divisor+3)^0,f,c
  4177  004A56  3621               	rlcf	(___lodiv@divisor+4)^0,f,c
  4178  004A58  3622               	rlcf	(___lodiv@divisor+5)^0,f,c
  4179  004A5A  3623               	rlcf	(___lodiv@divisor+6)^0,f,c
  4180  004A5C  3624               	rlcf	(___lodiv@divisor+7)^0,f,c
  4181  004A5E  2A2D               	incf	___lodiv@counter^0,f,c
  4182  004A60                     l9438:
  4183                           
  4184                           ; BSR set to: 0
  4185  004A60  AE24               	btfss	(___lodiv@divisor+7)^0,7,c
  4186  004A62  D7F4               	goto	l9436
  4187  004A64                     u10710:
  4188                           
  4189                           ; BSR set to: 0
  4190  004A64  90D8               	bcf	status,0,c
  4191  004A66  3625               	rlcf	___lodiv@quotient^0,f,c
  4192  004A68  3626               	rlcf	(___lodiv@quotient+1)^0,f,c
  4193  004A6A  3627               	rlcf	(___lodiv@quotient+2)^0,f,c
  4194  004A6C  3628               	rlcf	(___lodiv@quotient+3)^0,f,c
  4195  004A6E  3629               	rlcf	(___lodiv@quotient+4)^0,f,c
  4196  004A70  362A               	rlcf	(___lodiv@quotient+5)^0,f,c
  4197  004A72  362B               	rlcf	(___lodiv@quotient+6)^0,f,c
  4198  004A74  362C               	rlcf	(___lodiv@quotient+7)^0,f,c
  4199                           
  4200                           ; BSR set to: 0
  4201  004A76  501D               	movf	___lodiv@divisor^0,w,c
  4202  004A78  5C15               	subwf	___lodiv@dividend^0,w,c
  4203  004A7A  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4204  004A7C  5816               	subwfb	(___lodiv@dividend+1)^0,w,c
  4205  004A7E  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4206  004A80  5817               	subwfb	(___lodiv@dividend+2)^0,w,c
  4207  004A82  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4208  004A84  5818               	subwfb	(___lodiv@dividend+3)^0,w,c
  4209  004A86  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4210  004A88  5819               	subwfb	(___lodiv@dividend+4)^0,w,c
  4211  004A8A  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4212  004A8C  581A               	subwfb	(___lodiv@dividend+5)^0,w,c
  4213  004A8E  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4214  004A90  581B               	subwfb	(___lodiv@dividend+6)^0,w,c
  4215  004A92  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4216  004A94  581C               	subwfb	(___lodiv@dividend+7)^0,w,c
  4217  004A96  A0D8               	btfss	status,0,c
  4218  004A98  D011               	goto	l9448
  4219                           
  4220                           ; BSR set to: 0
  4221  004A9A  501D               	movf	___lodiv@divisor^0,w,c
  4222  004A9C  5E15               	subwf	___lodiv@dividend^0,f,c
  4223  004A9E  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4224  004AA0  5A16               	subwfb	(___lodiv@dividend+1)^0,f,c
  4225  004AA2  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4226  004AA4  5A17               	subwfb	(___lodiv@dividend+2)^0,f,c
  4227  004AA6  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4228  004AA8  5A18               	subwfb	(___lodiv@dividend+3)^0,f,c
  4229  004AAA  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4230  004AAC  5A19               	subwfb	(___lodiv@dividend+4)^0,f,c
  4231  004AAE  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4232  004AB0  5A1A               	subwfb	(___lodiv@dividend+5)^0,f,c
  4233  004AB2  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4234  004AB4  5A1B               	subwfb	(___lodiv@dividend+6)^0,f,c
  4235  004AB6  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4236  004AB8  5A1C               	subwfb	(___lodiv@dividend+7)^0,f,c
  4237                           
  4238                           ; BSR set to: 0
  4239  004ABA  8025               	bsf	___lodiv@quotient^0,0,c
  4240  004ABC                     l9448:
  4241                           
  4242                           ; BSR set to: 0
  4243  004ABC  90D8               	bcf	status,0,c
  4244  004ABE  3224               	rrcf	(___lodiv@divisor+7)^0,f,c
  4245  004AC0  3223               	rrcf	(___lodiv@divisor+6)^0,f,c
  4246  004AC2  3222               	rrcf	(___lodiv@divisor+5)^0,f,c
  4247  004AC4  3221               	rrcf	(___lodiv@divisor+4)^0,f,c
  4248  004AC6  3220               	rrcf	(___lodiv@divisor+3)^0,f,c
  4249  004AC8  321F               	rrcf	(___lodiv@divisor+2)^0,f,c
  4250  004ACA  321E               	rrcf	(___lodiv@divisor+1)^0,f,c
  4251  004ACC  321D               	rrcf	___lodiv@divisor^0,f,c
  4252                           
  4253                           ; BSR set to: 0
  4254  004ACE  2E2D               	decfsz	___lodiv@counter^0,f,c
  4255  004AD0  D7C9               	goto	u10710
  4256  004AD2                     l1577:
  4257                           
  4258                           ; BSR set to: 0
  4259  004AD2  C025  F015         	movff	___lodiv@quotient,?___lodiv
  4260  004AD6  C026  F016         	movff	___lodiv@quotient+1,?___lodiv+1
  4261  004ADA  C027  F017         	movff	___lodiv@quotient+2,?___lodiv+2
  4262  004ADE  C028  F018         	movff	___lodiv@quotient+3,?___lodiv+3
  4263  004AE2  C029  F019         	movff	___lodiv@quotient+4,?___lodiv+4
  4264  004AE6  C02A  F01A         	movff	___lodiv@quotient+5,?___lodiv+5
  4265  004AEA  C02B  F01B         	movff	___lodiv@quotient+6,?___lodiv+6
  4266  004AEE  C02C  F01C         	movff	___lodiv@quotient+7,?___lodiv+7
  4267                           
  4268                           ; BSR set to: 0
  4269  004AF2  0012               	return		;funcret
  4270  004AF4                     __end_of___lodiv:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function _stoa *****************
  4274 ;; Defined at:
  4275 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4278 ;;		 -> sprintf@f(11), NULL(0), 
  4279 ;;  s               2   33[COMRAM] PTR unsigned char 
  4280 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  nuls            7   36[COMRAM] unsigned char [7]
  4283 ;;  l               2   51[COMRAM] int 
  4284 ;;  p               2   49[COMRAM] int 
  4285 ;;  cp              2   47[COMRAM] PTR unsigned char 
  4286 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_2(9), 
  4287 ;;		 -> STR_1(12), 
  4288 ;;  w               2   45[COMRAM] int 
  4289 ;;  i               2   43[COMRAM] int 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  2   31[COMRAM] int 
  4292 ;; Registers used:
  4293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 3F/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4300 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4302 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4303 ;;Total ram usage:       22 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 7
  4306 ;; This function calls:
  4307 ;;		_fputc
  4308 ;;		_strlen
  4309 ;; This function is called by:
  4310 ;;		_vfpfcnvrt
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text10
  4315  00459C                     __ptext10:
  4316                           	callstack 0
  4317  00459C                     _stoa:
  4318                           	callstack 18
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;incstack = 0
  4325  00459C  EE20  F1E8         	lfsr	2,stoa@F1164
  4326  0045A0  EE10  F025         	lfsr	1,stoa@nuls
  4327  0045A4  0E06               	movlw	6
  4328  0045A6                     u11621:
  4329  0045A6  006F FF6F FFE3     	movff	plusw2,plusw1
  4330  0045AC  06E8               	decf	wreg,f,c
  4331  0045AE  E2FB               	bc	u11621
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  4335  0045B0  C022  F030         	movff	stoa@s,stoa@cp
  4336  0045B4  C023  F031         	movff	stoa@s+1,stoa@cp+1
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  4340  0045B8  5030               	movf	stoa@cp^0,w,c
  4341  0045BA  1031               	iorwf	(stoa@cp+1)^0,w,c
  4342  0045BC  A4D8               	btfss	status,2,c
  4343  0045BE  D003               	goto	l9904
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  4347  0045C0  0E25               	movlw	low stoa@nuls
  4348  0045C2  6E30               	movwf	stoa@cp^0,c
  4349  0045C4  6A31               	clrf	(stoa@cp+1)^0,c
  4350  0045C6                     l9904:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  4354  0045C6  C030  F015         	movff	stoa@cp,strlen@s
  4355  0045CA  C031  F016         	movff	stoa@cp+1,strlen@s+1
  4356  0045CE  EC31  F02B         	call	_strlen	;wreg free
  4357  0045D2  C015  F034         	movff	?_strlen,stoa@l
  4358  0045D6  C016  F035         	movff	?_strlen+1,stoa@l+1
  4359                           
  4360                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  4361  0045DA  C0F9  F032         	movff	_prec,stoa@p
  4362  0045DE  C0FA  F033         	movff	_prec+1,stoa@p+1
  4363                           
  4364                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  4365  0045E2  BE33               	btfsc	(stoa@p+1)^0,7,c
  4366  0045E4  D00E               	goto	l1969
  4367  0045E6  5034               	movf	stoa@l^0,w,c
  4368  0045E8  5C32               	subwf	stoa@p^0,w,c
  4369  0045EA  5033               	movf	(stoa@p+1)^0,w,c
  4370  0045EC  0A80               	xorlw	128
  4371  0045EE  6E24               	movwf	??_stoa^0,c
  4372  0045F0  5035               	movf	(stoa@l+1)^0,w,c
  4373  0045F2  0A80               	xorlw	128
  4374  0045F4  5824               	subwfb	??_stoa^0,w,c
  4375  0045F6  B0D8               	btfsc	status,0,c
  4376  0045F8  D004               	goto	l1969
  4377  0045FA  C032  F034         	movff	stoa@p,stoa@l
  4378  0045FE  C033  F035         	movff	stoa@p+1,stoa@l+1
  4379  004602                     l1969:
  4380                           
  4381                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  4382  004602  C034  F032         	movff	stoa@l,stoa@p
  4383  004606  C035  F033         	movff	stoa@l+1,stoa@p+1
  4384                           
  4385                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  4386  00460A  C0F7  F02E         	movff	_width,stoa@w
  4387  00460E  C0F8  F02F         	movff	_width+1,stoa@w+1
  4388                           
  4389                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  4390  004612  A03D               	btfss	_flags^0,0,c
  4391  004614  D00D               	goto	l9918
  4392  004616  D016               	goto	u11670
  4393  004618                     l9914:
  4394                           
  4395                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  4396  004618  0E00               	movlw	0
  4397  00461A  6E18               	movwf	(fputc@c+1)^0,c
  4398  00461C  0E20               	movlw	32
  4399  00461E  6E17               	movwf	fputc@c^0,c
  4400  004620  C020  F019         	movff	stoa@fp,fputc@fp
  4401  004624  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4402  004628  EC57  F027         	call	_fputc	;wreg free
  4403                           
  4404                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  4405  00462C  4A34               	infsnz	stoa@l^0,f,c
  4406  00462E  2A35               	incf	(stoa@l+1)^0,f,c
  4407  004630                     l9918:
  4408                           
  4409                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  4410  004630  502E               	movf	stoa@w^0,w,c
  4411  004632  5C34               	subwf	stoa@l^0,w,c
  4412  004634  5035               	movf	(stoa@l+1)^0,w,c
  4413  004636  0A80               	xorlw	128
  4414  004638  6E24               	movwf	??_stoa^0,c
  4415  00463A  502F               	movf	(stoa@w+1)^0,w,c
  4416  00463C  0A80               	xorlw	128
  4417  00463E  5824               	subwfb	??_stoa^0,w,c
  4418  004640  A0D8               	btfss	status,0,c
  4419  004642  D7EA               	goto	l9914
  4420  004644                     u11670:
  4421                           
  4422                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  4423  004644  0E00               	movlw	0
  4424  004646  6E2D               	movwf	(stoa@i+1)^0,c
  4425  004648  0E00               	movlw	0
  4426  00464A  6E2C               	movwf	stoa@i^0,c
  4427                           
  4428                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4429  00464C  D023               	goto	l9928
  4430  00464E                     l9922:
  4431                           
  4432                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  4433  00464E  0060  F0C3  FFF6   	movff	stoa@cp,tblptrl
  4434  004654  0060  F0C7  FFF7   	movff	stoa@cp+1,tblptrh
  4435  00465A  0E00               	movlw	low (__smallconst shr (0+16))
  4436  00465C  6EF8               	movwf	tblptru,c
  4437  00465E  0E1F               	movlw	(high __ramtop+-1)
  4438  004660  64F7               	cpfsgt	tblptrh,c
  4439  004662  D003               	bra	u11687
  4440  004664  0008               	tblrd		*
  4441  004666  50F5               	movf	tablat,w,c
  4442  004668  D007               	bra	u11680
  4443  00466A                     u11687:
  4444  00466A  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4445  004670  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4446  004676  50E7               	movf	indf1,w,c
  4447  004678                     u11680:
  4448  004678  6E24               	movwf	??_stoa^0,c
  4449  00467A  5024               	movf	??_stoa^0,w,c
  4450  00467C  6E17               	movwf	fputc@c^0,c
  4451  00467E  6A18               	clrf	(fputc@c+1)^0,c
  4452  004680  C020  F019         	movff	stoa@fp,fputc@fp
  4453  004684  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4454  004688  EC57  F027         	call	_fputc	;wreg free
  4455                           
  4456                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  4457  00468C  4A30               	infsnz	stoa@cp^0,f,c
  4458  00468E  2A31               	incf	(stoa@cp+1)^0,f,c
  4459                           
  4460                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  4461  004690  4A2C               	infsnz	stoa@i^0,f,c
  4462  004692  2A2D               	incf	(stoa@i+1)^0,f,c
  4463  004694                     l9928:
  4464                           
  4465                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4466  004694  5032               	movf	stoa@p^0,w,c
  4467  004696  5C2C               	subwf	stoa@i^0,w,c
  4468  004698  502D               	movf	(stoa@i+1)^0,w,c
  4469  00469A  0A80               	xorlw	128
  4470  00469C  6E24               	movwf	??_stoa^0,c
  4471  00469E  5033               	movf	(stoa@p+1)^0,w,c
  4472  0046A0  0A80               	xorlw	128
  4473  0046A2  5824               	subwfb	??_stoa^0,w,c
  4474  0046A4  A0D8               	btfss	status,0,c
  4475  0046A6  D7D3               	goto	l9922
  4476                           
  4477                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  4478  0046A8  B03D               	btfsc	_flags^0,0,c
  4479  0046AA  D00D               	goto	l9936
  4480  0046AC  D016               	goto	u11710
  4481  0046AE                     l9932:
  4482                           
  4483                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  4484  0046AE  0E00               	movlw	0
  4485  0046B0  6E18               	movwf	(fputc@c+1)^0,c
  4486  0046B2  0E20               	movlw	32
  4487  0046B4  6E17               	movwf	fputc@c^0,c
  4488  0046B6  C020  F019         	movff	stoa@fp,fputc@fp
  4489  0046BA  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4490  0046BE  EC57  F027         	call	_fputc	;wreg free
  4491                           
  4492                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  4493  0046C2  4A34               	infsnz	stoa@l^0,f,c
  4494  0046C4  2A35               	incf	(stoa@l+1)^0,f,c
  4495  0046C6                     l9936:
  4496                           
  4497                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  4498  0046C6  502E               	movf	stoa@w^0,w,c
  4499  0046C8  5C34               	subwf	stoa@l^0,w,c
  4500  0046CA  5035               	movf	(stoa@l+1)^0,w,c
  4501  0046CC  0A80               	xorlw	128
  4502  0046CE  6E24               	movwf	??_stoa^0,c
  4503  0046D0  502F               	movf	(stoa@w+1)^0,w,c
  4504  0046D2  0A80               	xorlw	128
  4505  0046D4  5824               	subwfb	??_stoa^0,w,c
  4506  0046D6  A0D8               	btfss	status,0,c
  4507  0046D8  D7EA               	goto	l9932
  4508  0046DA                     u11710:
  4509                           
  4510                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  4511                           
  4512                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  4513  0046DA  C034  F020         	movff	stoa@l,?_stoa
  4514  0046DE  C035  F021         	movff	stoa@l+1,?_stoa+1
  4515  0046E2  0012               	return		;funcret
  4516  0046E4                     __end_of_stoa:
  4517                           	callstack 0
  4518                           
  4519 ;; *************** function _efgtoa *****************
  4520 ;; Defined at:
  4521 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  4524 ;;		 -> sprintf@f(11), NULL(0), 
  4525 ;;  f               4   19[BANK0 ] PTR struct _IO_FILE
  4526 ;;  c               1   23[BANK0 ] unsigned char 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  u               4   75[BANK0 ] unsigned char 
  4529 ;;  g               4   65[BANK0 ] unsigned char 
  4530 ;;  l               4   61[BANK0 ] unsigned char 
  4531 ;;  h               4   57[BANK0 ] unsigned char 
  4532 ;;  ou              4   43[BANK0 ] unsigned char 
  4533 ;;  n               2   73[BANK0 ] int 
  4534 ;;  e               2   71[BANK0 ] int 
  4535 ;;  i               2   69[BANK0 ] int 
  4536 ;;  w               2   54[BANK0 ] int 
  4537 ;;  p               2   51[BANK0 ] int 
  4538 ;;  sign            2   49[BANK0 ] int 
  4539 ;;  d               2   47[BANK0 ] int 
  4540 ;;  m               2   41[BANK0 ] int 
  4541 ;;  ne              2   39[BANK0 ] int 
  4542 ;;  pp              2   37[BANK0 ] int 
  4543 ;;  t               2   35[BANK0 ] int 
  4544 ;;  mode            1   56[BANK0 ] unsigned char 
  4545 ;;  nmode           1   53[BANK0 ] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  2   17[BANK0 ] int 
  4548 ;; Registers used:
  4549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 3F/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4555 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4556 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4557 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4558 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4559 ;;Total ram usage:       62 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 9
  4562 ;; This function calls:
  4563 ;;		___awdiv
  4564 ;;		___awmod
  4565 ;;		___fladd
  4566 ;;		___fldiv
  4567 ;;		___fleq
  4568 ;;		___flge
  4569 ;;		___flmul
  4570 ;;		___flneg
  4571 ;;		___flsub
  4572 ;;		___fltol
  4573 ;;		___fpclassifyf
  4574 ;;		_floorf
  4575 ;;		_isupper
  4576 ;;		_pad
  4577 ;;		_strcpy
  4578 ;;		_tolower
  4579 ;; This function is called by:
  4580 ;;		_vfpfcnvrt
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text11
  4585  0020FA                     __ptext11:
  4586                           	callstack 0
  4587  0020FA                     _efgtoa:
  4588                           	callstack 16
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  4592                           
  4593                           ;incstack = 0
  4594  0020FA  0E00               	movlw	0
  4595  0020FC  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4596  0020FE  0E00               	movlw	0
  4597  002100  6F91               	movwf	efgtoa@sign& (0+255),b
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  4601  002102  C073  F0A1         	movff	efgtoa@f,efgtoa@g
  4602  002106  C074  F0A2         	movff	efgtoa@f+1,efgtoa@g+1
  4603  00210A  C075  F0A3         	movff	efgtoa@f+2,efgtoa@g+2
  4604  00210E  C076  F0A4         	movff	efgtoa@f+3,efgtoa@g+3
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  4608  002112  AFA4               	btfss	(efgtoa@g+3)& (0+255),7,b
  4609  002114  D016               	goto	l9600
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  4613  002116  0E00               	movlw	0
  4614  002118  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4615  00211A  0E01               	movlw	1
  4616  00211C  6F91               	movwf	efgtoa@sign& (0+255),b
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  4620  00211E  C0A1  F015         	movff	efgtoa@g,___flneg@f1
  4621  002122  C0A2  F016         	movff	efgtoa@g+1,___flneg@f1+1
  4622  002126  C0A3  F017         	movff	efgtoa@g+2,___flneg@f1+2
  4623  00212A  C0A4  F018         	movff	efgtoa@g+3,___flneg@f1+3
  4624  00212E  EC21  F02D         	call	___flneg	;wreg free
  4625  002132  C015  F0A1         	movff	?___flneg,efgtoa@g
  4626  002136  C016  F0A2         	movff	?___flneg+1,efgtoa@g+1
  4627  00213A  C017  F0A3         	movff	?___flneg+2,efgtoa@g+2
  4628  00213E  C018  F0A4         	movff	?___flneg+3,efgtoa@g+3
  4629  002142                     l9600:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  4633  002142  0E00               	movlw	0
  4634  002144  6FAA               	movwf	(efgtoa@n+1)& (0+255),b
  4635  002146  0E00               	movlw	0
  4636  002148  6FA9               	movwf	efgtoa@n& (0+255),b
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  4640  00214A  C0F7  F096         	movff	_width,efgtoa@w
  4641  00214E  C0F8  F097         	movff	_width+1,efgtoa@w+1
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  4645  002152  5191               	movf	efgtoa@sign& (0+255),w,b
  4646  002154  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4647  002156  A4D8               	btfss	status,2,c
  4648  002158  D002               	goto	u11160
  4649                           
  4650                           ; BSR set to: 0
  4651  00215A  A43D               	btfss	_flags^0,2,c
  4652  00215C  D013               	goto	l9620
  4653  00215E                     u11160:
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  4657  00215E  5191               	movf	efgtoa@sign& (0+255),w,b
  4658  002160  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4659  002162  A4D8               	btfss	status,2,c
  4660  002164  D004               	goto	l9612
  4661                           
  4662                           ; BSR set to: 0
  4663  002166  0E00               	movlw	0
  4664  002168  6F7E               	movwf	(_efgtoa$2723+1)& (0+255),b
  4665  00216A  0E2B               	movlw	43
  4666  00216C  D003               	goto	L3
  4667  00216E                     l9612:
  4668                           
  4669                           ; BSR set to: 0
  4670  00216E  0E00               	movlw	0
  4671  002170  6F7E               	movwf	(_efgtoa$2723+1)& (0+255),b
  4672  002172  0E2D               	movlw	45
  4673  002174                     L3:
  4674  002174  6F7D               	movwf	_efgtoa$2723& (0+255),b
  4675                           
  4676                           ; BSR set to: 0
  4677  002176  C07D  F198         	movff	_efgtoa$2723,_dbuf
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  4681  00217A  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  4682  00217C  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  4686  00217E  0796               	decf	efgtoa@w& (0+255),f,b
  4687  002180  A0D8               	btfss	status,0,c
  4688  002182  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  4689  002184                     l9620:
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  4693  002184  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4694  002188  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4695  00218C  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4696  002190  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4697  002194  EC7A  F025         	call	___fpclassifyf	;wreg free
  4698  002198  0415               	decf	?___fpclassifyf^0,w,c
  4699  00219A  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4700  00219C  A4D8               	btfss	status,2,c
  4701  00219E  D047               	goto	l9638
  4702  0021A0  0EBF               	movlw	191
  4703  0021A2  0100               	movlb	0	; () banked
  4704  0021A4  6F78               	movwf	??_efgtoa& (0+255),b
  4705  0021A6  0EFF               	movlw	255
  4706  0021A8  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4707  0021AA  5177               	movf	efgtoa@c& (0+255),w,b
  4708  0021AC  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4709  0021AE  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4710  0021B0  5178               	movf	??_efgtoa& (0+255),w,b
  4711  0021B2  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4712  0021B4  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4713  0021B6  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4714  0021B8  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4715  0021BA  E113               	bnz	l9630
  4716  0021BC  0E1A               	movlw	26
  4717  0021BE  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4718  0021C0  B0D8               	btfsc	status,0,c
  4719  0021C2  D00F               	goto	l9630
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  4723  0021C4  0E98               	movlw	low _dbuf
  4724  0021C6  25A9               	addwf	efgtoa@n& (0+255),w,b
  4725  0021C8  6E15               	movwf	strcpy@dest^0,c
  4726  0021CA  0E01               	movlw	high _dbuf
  4727  0021CC  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4728  0021CE  6E16               	movwf	(strcpy@dest+1)^0,c
  4729  0021D0  0ED9               	movlw	low STR_12
  4730  0021D2  6E17               	movwf	strcpy@src^0,c
  4731  0021D4  5017               	movf	strcpy@src^0,w,c
  4732  0021D6  A4D8               	btfss	status,2,c
  4733  0021D8  0E20               	movlw	high __smallconst
  4734  0021DA  6E18               	movwf	(strcpy@src+1)^0,c
  4735  0021DC  EC60  F02A         	call	_strcpy	;wreg free
  4736                           
  4737                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  4738  0021E0  D00E               	goto	l9632
  4739  0021E2                     l9630:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  4743  0021E2  0E98               	movlw	low _dbuf
  4744  0021E4  25A9               	addwf	efgtoa@n& (0+255),w,b
  4745  0021E6  6E15               	movwf	strcpy@dest^0,c
  4746  0021E8  0E01               	movlw	high _dbuf
  4747  0021EA  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4748  0021EC  6E16               	movwf	(strcpy@dest+1)^0,c
  4749  0021EE  0EE1               	movlw	low STR_13
  4750  0021F0  6E17               	movwf	strcpy@src^0,c
  4751  0021F2  5017               	movf	strcpy@src^0,w,c
  4752  0021F4  A4D8               	btfss	status,2,c
  4753  0021F6  0E20               	movlw	high __smallconst
  4754  0021F8  6E18               	movwf	(strcpy@src+1)^0,c
  4755  0021FA  EC60  F02A         	call	_strcpy	;wreg free
  4756  0021FE                     l9632:
  4757                           
  4758                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  4759  0021FE  0100               	movlb	0	; () banked
  4760  002200  0EFD               	movlw	253
  4761  002202  2796               	addwf	efgtoa@w& (0+255),f,b
  4762  002204  0EFF               	movlw	255
  4763  002206  2397               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4764  002208                     l9634:
  4765                           
  4766                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  4767  002208  C071  F029         	movff	efgtoa@fp,pad@fp
  4768  00220C  C072  F02A         	movff	efgtoa@fp+1,pad@fp+1
  4769  002210  0E98               	movlw	low _dbuf
  4770  002212  6E2B               	movwf	pad@buf^0,c
  4771  002214  0E01               	movlw	high _dbuf
  4772  002216  6E2C               	movwf	(pad@buf+1)^0,c
  4773  002218  C096  F02D         	movff	efgtoa@w,pad@p
  4774  00221C  C097  F02E         	movff	efgtoa@w+1,pad@p+1
  4775  002220  ECA7  F028         	call	_pad	;wreg free
  4776  002224  C029  F071         	movff	?_pad,?_efgtoa
  4777  002228  C02A  F072         	movff	?_pad+1,?_efgtoa+1
  4778  00222C  0012               	return	
  4779  00222E                     l9638:
  4780                           
  4781                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  4782  00222E  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4783  002232  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4784  002236  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4785  00223A  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4786  00223E  EC7A  F025         	call	___fpclassifyf	;wreg free
  4787  002242  5015               	movf	?___fpclassifyf^0,w,c
  4788  002244  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4789  002246  A4D8               	btfss	status,2,c
  4790  002248  D030               	goto	l9656
  4791  00224A  0EBF               	movlw	191
  4792  00224C  0100               	movlb	0	; () banked
  4793  00224E  6F78               	movwf	??_efgtoa& (0+255),b
  4794  002250  0EFF               	movlw	255
  4795  002252  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4796  002254  5177               	movf	efgtoa@c& (0+255),w,b
  4797  002256  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4798  002258  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4799  00225A  5178               	movf	??_efgtoa& (0+255),w,b
  4800  00225C  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4801  00225E  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4802  002260  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4803  002262  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4804  002264  E113               	bnz	l9648
  4805  002266  0E1A               	movlw	26
  4806  002268  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4807  00226A  B0D8               	btfsc	status,0,c
  4808  00226C  D00F               	goto	l9648
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  4812  00226E  0E98               	movlw	low _dbuf
  4813  002270  25A9               	addwf	efgtoa@n& (0+255),w,b
  4814  002272  6E15               	movwf	strcpy@dest^0,c
  4815  002274  0E01               	movlw	high _dbuf
  4816  002276  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4817  002278  6E16               	movwf	(strcpy@dest+1)^0,c
  4818  00227A  0EDD               	movlw	low STR_16
  4819  00227C  6E17               	movwf	strcpy@src^0,c
  4820  00227E  5017               	movf	strcpy@src^0,w,c
  4821  002280  A4D8               	btfss	status,2,c
  4822  002282  0E20               	movlw	high __smallconst
  4823  002284  6E18               	movwf	(strcpy@src+1)^0,c
  4824  002286  EC60  F02A         	call	_strcpy	;wreg free
  4825                           
  4826                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  4827  00228A  D7B9               	goto	l9632
  4828  00228C                     l9648:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  4832  00228C  0E98               	movlw	low _dbuf
  4833  00228E  25A9               	addwf	efgtoa@n& (0+255),w,b
  4834  002290  6E15               	movwf	strcpy@dest^0,c
  4835  002292  0E01               	movlw	high _dbuf
  4836  002294  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4837  002296  6E16               	movwf	(strcpy@dest+1)^0,c
  4838  002298  0EE5               	movlw	low STR_17
  4839  00229A  6E17               	movwf	strcpy@src^0,c
  4840  00229C  5017               	movf	strcpy@src^0,w,c
  4841  00229E  A4D8               	btfss	status,2,c
  4842  0022A0  0E20               	movlw	high __smallconst
  4843  0022A2  6E18               	movwf	(strcpy@src+1)^0,c
  4844  0022A4  EC60  F02A         	call	_strcpy	;wreg free
  4845  0022A8  D7AA               	goto	l9632
  4846  0022AA                     l9656:
  4847                           
  4848                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  4849  0022AA  0E00               	movlw	0
  4850  0022AC  0100               	movlb	0	; () banked
  4851  0022AE  6FAB               	movwf	efgtoa@u& (0+255),b
  4852  0022B0  0E00               	movlw	0
  4853  0022B2  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  4854  0022B4  0E80               	movlw	128
  4855  0022B6  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  4856  0022B8  0E3F               	movlw	63
  4857  0022BA  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  4858                           
  4859                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  4860  0022BC  0E00               	movlw	0
  4861  0022BE  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  4862  0022C0  0E00               	movlw	0
  4863  0022C2  6FA7               	movwf	efgtoa@e& (0+255),b
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  4867  0022C4  C0A1  F015         	movff	efgtoa@g,___fleq@ff1
  4868  0022C8  C0A2  F016         	movff	efgtoa@g+1,___fleq@ff1+1
  4869  0022CC  C0A3  F017         	movff	efgtoa@g+2,___fleq@ff1+2
  4870  0022D0  C0A4  F018         	movff	efgtoa@g+3,___fleq@ff1+3
  4871  0022D4  0E00               	movlw	0
  4872  0022D6  6E19               	movwf	___fleq@ff2^0,c
  4873  0022D8  0E00               	movlw	0
  4874  0022DA  6E1A               	movwf	(___fleq@ff2+1)^0,c
  4875  0022DC  0E00               	movlw	0
  4876  0022DE  6E1B               	movwf	(___fleq@ff2+2)^0,c
  4877  0022E0  0E00               	movlw	0
  4878  0022E2  6E1C               	movwf	(___fleq@ff2+3)^0,c
  4879  0022E4  ECF2  F028         	call	___fleq	;wreg free
  4880  0022E8  A0D8               	btfss	status,0,c
  4881  0022EA  D01D               	goto	l9666
  4882  0022EC  D074               	goto	u11240
  4883  0022EE                     l9662:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  4887  0022EE  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4888  0022F2  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4889  0022F6  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4890  0022FA  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4891  0022FE  0E00               	movlw	0
  4892  002300  6E27               	movwf	___flmul@a^0,c
  4893  002302  0E00               	movlw	0
  4894  002304  6E28               	movwf	(___flmul@a+1)^0,c
  4895  002306  0E20               	movlw	32
  4896  002308  6E29               	movwf	(___flmul@a+2)^0,c
  4897  00230A  0E41               	movlw	65
  4898  00230C  6E2A               	movwf	(___flmul@a+3)^0,c
  4899  00230E  EC9F  F018         	call	___flmul	;wreg free
  4900  002312  C023  F0AB         	movff	?___flmul,efgtoa@u
  4901  002316  C024  F0AC         	movff	?___flmul+1,efgtoa@u+1
  4902  00231A  C025  F0AD         	movff	?___flmul+2,efgtoa@u+2
  4903  00231E  C026  F0AE         	movff	?___flmul+3,efgtoa@u+3
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  4907  002322  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  4908  002324  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  4909  002326                     l9666:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  4913  002326  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4914  00232A  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4915  00232E  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4916  002332  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4917  002336  0E00               	movlw	0
  4918  002338  6E27               	movwf	___flmul@a^0,c
  4919  00233A  0E00               	movlw	0
  4920  00233C  6E28               	movwf	(___flmul@a+1)^0,c
  4921  00233E  0E20               	movlw	32
  4922  002340  6E29               	movwf	(___flmul@a+2)^0,c
  4923  002342  0E41               	movlw	65
  4924  002344  6E2A               	movwf	(___flmul@a+3)^0,c
  4925  002346  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4926  00234A  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4927  00234E  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4928  002352  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4929  002356  EC9F  F018         	call	___flmul	;wreg free
  4930  00235A  C023  F033         	movff	?___flmul,___flge@ff2
  4931  00235E  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  4932  002362  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  4933  002366  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  4934  00236A  ECAB  F024         	call	___flge	;wreg free
  4935  00236E  A0D8               	btfss	status,0,c
  4936  002370  D01E               	goto	l9672
  4937  002372  D7BD               	goto	l9662
  4938  002374                     l9668:
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  4942  002374  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  4943  002378  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  4944  00237C  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  4945  002380  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  4946  002384  0E00               	movlw	0
  4947  002386  6E19               	movwf	___fldiv@a^0,c
  4948  002388  0E00               	movlw	0
  4949  00238A  6E1A               	movwf	(___fldiv@a+1)^0,c
  4950  00238C  0E20               	movlw	32
  4951  00238E  6E1B               	movwf	(___fldiv@a+2)^0,c
  4952  002390  0E41               	movlw	65
  4953  002392  6E1C               	movwf	(___fldiv@a+3)^0,c
  4954  002394  ECCE  F01B         	call	___fldiv	;wreg free
  4955  002398  C015  F0AB         	movff	?___fldiv,efgtoa@u
  4956  00239C  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  4957  0023A0  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  4958  0023A4  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  4962  0023A8  07A7               	decf	efgtoa@e& (0+255),f,b
  4963  0023AA  A0D8               	btfss	status,0,c
  4964  0023AC  07A8               	decf	(efgtoa@e+1)& (0+255),f,b
  4965  0023AE                     l9672:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  4969  0023AE  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4970  0023B2  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4971  0023B6  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4972  0023BA  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4973  0023BE  C0AB  F033         	movff	efgtoa@u,___flge@ff2
  4974  0023C2  C0AC  F034         	movff	efgtoa@u+1,___flge@ff2+1
  4975  0023C6  C0AD  F035         	movff	efgtoa@u+2,___flge@ff2+2
  4976  0023CA  C0AE  F036         	movff	efgtoa@u+3,___flge@ff2+3
  4977  0023CE  ECAB  F024         	call	___flge	;wreg free
  4978  0023D2  A0D8               	btfss	status,0,c
  4979  0023D4  D7CF               	goto	l9668
  4980  0023D6                     u11240:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  4984  0023D6  C077  F01B         	movff	efgtoa@c,tolower@c
  4985  0023DA  6A1C               	clrf	(tolower@c+1)^0,c
  4986  0023DC  EC7D  F02C         	call	_tolower	;wreg free
  4987  0023E0  501B               	movf	?_tolower^0,w,c
  4988  0023E2  6F98               	movwf	efgtoa@mode& (0+255),b
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  4992  0023E4  C098  F095         	movff	efgtoa@mode,efgtoa@nmode
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  4996  0023E8  0E67               	movlw	103
  4997  0023EA  1998               	xorwf	efgtoa@mode& (0+255),w,b
  4998  0023EC  A4D8               	btfss	status,2,c
  4999  0023EE  D019               	goto	l9688
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  5003  0023F0  51F9               	movf	_prec& (0+255),w,b
  5004  0023F2  11FA               	iorwf	(_prec+1)& (0+255),w,b
  5005  0023F4  A4D8               	btfss	status,2,c
  5006  0023F6  D004               	goto	l9684
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  5010  0023F8  0E00               	movlw	0
  5011  0023FA  6FFA               	movwf	(_prec+1)& (0+255),b
  5012  0023FC  0E01               	movlw	1
  5013  0023FE  6FF9               	movwf	_prec& (0+255),b
  5014  002400                     l9684:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  5018  002400  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  5019  002402  D005               	goto	u11270
  5020  002404  51FA               	movf	(_prec+1)& (0+255),w,b
  5021  002406  E108               	bnz	l1905
  5022  002408  05F9               	decf	_prec& (0+255),w,b
  5023  00240A  B0D8               	btfsc	status,0,c
  5024  00240C  D005               	goto	l1905
  5025  00240E                     u11270:
  5026                           
  5027                           ; BSR set to: 0
  5028  00240E  0E00               	movlw	0
  5029  002410  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5030  002412  0E06               	movlw	6
  5031  002414  6F93               	movwf	efgtoa@p& (0+255),b
  5032  002416  D008               	goto	l9694
  5033  002418                     l1905:
  5034                           
  5035                           ; BSR set to: 0
  5036  002418  C0F9  F093         	movff	_prec,efgtoa@p
  5037  00241C  C0FA  F094         	movff	_prec+1,efgtoa@p+1
  5038  002420  D003               	goto	l9694
  5039  002422                     l9688:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  5043  002422  AFFA               	btfss	(_prec+1)& (0+255),7,b
  5044  002424  D7F9               	goto	l1905
  5045  002426  D7F3               	goto	u11270
  5046  002428                     l9694:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  5050  002428  0E67               	movlw	103
  5051  00242A  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5052  00242C  A4D8               	btfss	status,2,c
  5053  00242E  D022               	goto	l9704
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  5057  002430  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5058  002432  D006               	goto	u11300
  5059  002434  0EFC               	movlw	252
  5060  002436  5DA7               	subwf	efgtoa@e& (0+255),w,b
  5061  002438  0EFF               	movlw	255
  5062  00243A  59A8               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5063  00243C  A0D8               	btfss	status,0,c
  5064  00243E  D018               	goto	l9702
  5065  002440                     u11300:
  5066                           
  5067                           ; BSR set to: 0
  5068  002440  0EFF               	movlw	255
  5069  002442  6F78               	movwf	??_efgtoa& (0+255),b
  5070  002444  0EFF               	movlw	255
  5071  002446  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5072  002448  C093  F07A         	movff	efgtoa@p,??_efgtoa+2
  5073  00244C  C094  F07B         	movff	efgtoa@p+1,??_efgtoa+3
  5074  002450  5178               	movf	??_efgtoa& (0+255),w,b
  5075  002452  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5076  002454  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5077  002456  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5078  002458  51A7               	movf	efgtoa@e& (0+255),w,b
  5079  00245A  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5080  00245C  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5081  00245E  0A80               	xorlw	128
  5082  002460  6F7C               	movwf	(??_efgtoa+4)& (0+255),b
  5083  002462  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5084  002464  0A80               	xorlw	128
  5085  002466  597C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5086  002468  A0D8               	btfss	status,0,c
  5087  00246A  D002               	goto	l9702
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  5091  00246C  0E66               	movlw	102
  5092  00246E  D001               	goto	L4
  5093  002470                     l9702:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  5097  002470  0E65               	movlw	101
  5098  002472                     L4:
  5099  002472  6F95               	movwf	efgtoa@nmode& (0+255),b
  5100  002474                     l9704:
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  5104  002474  C093  F089         	movff	efgtoa@p,efgtoa@m
  5105  002478  C094  F08A         	movff	efgtoa@p+1,efgtoa@m+1
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  5109  00247C  0E67               	movlw	103
  5110  00247E  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5111  002480  A4D8               	btfss	status,2,c
  5112  002482  D005               	goto	u11340
  5113                           
  5114                           ; BSR set to: 0
  5115  002484  0E66               	movlw	102
  5116  002486  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5117  002488  B4D8               	btfsc	status,2,c
  5118                           
  5119                           ; BSR set to: 0
  5120  00248A  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5121  00248C  D002               	goto	l9714
  5122  00248E                     u11340:
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  5126  00248E  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5127  002490  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5128  002492                     l9714:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  5132  002492  0E66               	movlw	102
  5133  002494  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5134  002496  A4D8               	btfss	status,2,c
  5135  002498  D016               	goto	l9724
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  5139  00249A  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5140  00249C  D00C               	goto	l9720
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  5144  00249E  0E00               	movlw	0
  5145  0024A0  6FAB               	movwf	efgtoa@u& (0+255),b
  5146  0024A2  0E00               	movlw	0
  5147  0024A4  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  5148  0024A6  0E80               	movlw	128
  5149  0024A8  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  5150  0024AA  0E3F               	movlw	63
  5151  0024AC  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  5152                           
  5153                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  5154  0024AE  0E00               	movlw	0
  5155  0024B0  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  5156  0024B2  0E00               	movlw	0
  5157  0024B4  6FA7               	movwf	efgtoa@e& (0+255),b
  5158  0024B6                     l9720:
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  5162  0024B6  0E67               	movlw	103
  5163  0024B8  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5164  0024BA  B4D8               	btfsc	status,2,c
  5165  0024BC  D004               	goto	l9724
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  5169  0024BE  51A7               	movf	efgtoa@e& (0+255),w,b
  5170  0024C0  2789               	addwf	efgtoa@m& (0+255),f,b
  5171  0024C2  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5172  0024C4  238A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5173  0024C6                     l9724:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  5177  0024C6  0E00               	movlw	0
  5178  0024C8  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5179  0024CA  0E00               	movlw	0
  5180  0024CC  6FA5               	movwf	efgtoa@i& (0+255),b
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  5184  0024CE  C0A1  F099         	movff	efgtoa@g,efgtoa@h
  5185  0024D2  C0A2  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  5186  0024D6  C0A3  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  5187  0024DA  C0A4  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  5191  0024DE  C0AB  F08B         	movff	efgtoa@u,efgtoa@ou
  5192  0024E2  C0AC  F08C         	movff	efgtoa@u+1,efgtoa@ou+1
  5193  0024E6  C0AD  F08D         	movff	efgtoa@u+2,efgtoa@ou+2
  5194  0024EA  C0AE  F08E         	movff	efgtoa@u+3,efgtoa@ou+3
  5195                           
  5196                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5197  0024EE  D07A               	goto	l9738
  5198  0024F0                     l9730:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  5202  0024F0  C099  F015         	movff	efgtoa@h,___fldiv@b
  5203  0024F4  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5204  0024F8  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5205  0024FC  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5206  002500  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5207  002504  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5208  002508  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5209  00250C  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5210  002510  ECCE  F01B         	call	___fldiv	;wreg free
  5211  002514  C015  F02E         	movff	?___fldiv,floorf@x
  5212  002518  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5213  00251C  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5214  002520  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5215  002524  ECF7  F01F         	call	_floorf	;wreg free
  5216  002528  C02E  F09D         	movff	?_floorf,efgtoa@l
  5217  00252C  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5218  002530  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5219  002534  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5220                           
  5221                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  5222  002538  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5223  00253C  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5224  002540  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5225  002544  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5226  002548  EC43  F026         	call	___fltol	;wreg free
  5227  00254C  C015  F08F         	movff	?___fltol,efgtoa@d
  5228  002550  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  5232  002554  C099  F02F         	movff	efgtoa@h,___flsub@b
  5233  002558  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5234  00255C  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5235  002560  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5236  002564  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5237  002568  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5238  00256C  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5239  002570  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5240  002574  C09D  F023         	movff	efgtoa@l,___flmul@b
  5241  002578  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5242  00257C  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5243  002580  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5244  002584  EC9F  F018         	call	___flmul	;wreg free
  5245  002588  C023  F033         	movff	?___flmul,___flsub@a
  5246  00258C  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5247  002590  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5248  002594  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5249  002598  EC7B  F02B         	call	___flsub	;wreg free
  5250  00259C  C02F  F099         	movff	?___flsub,efgtoa@h
  5251  0025A0  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5252  0025A4  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5253  0025A8  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  5257  0025AC  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5258  0025B0  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5259  0025B4  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5260  0025B8  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5261  0025BC  0E00               	movlw	0
  5262  0025BE  6E19               	movwf	___fldiv@a^0,c
  5263  0025C0  0E00               	movlw	0
  5264  0025C2  6E1A               	movwf	(___fldiv@a+1)^0,c
  5265  0025C4  0E20               	movlw	32
  5266  0025C6  6E1B               	movwf	(___fldiv@a+2)^0,c
  5267  0025C8  0E41               	movlw	65
  5268  0025CA  6E1C               	movwf	(___fldiv@a+3)^0,c
  5269  0025CC  ECCE  F01B         	call	___fldiv	;wreg free
  5270  0025D0  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5271  0025D4  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5272  0025D8  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5273  0025DC  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  5277  0025E0  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5278  0025E2  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5279  0025E4                     l9738:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5283  0025E4  5189               	movf	efgtoa@m& (0+255),w,b
  5284  0025E6  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5285  0025E8  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5286  0025EA  0A80               	xorlw	128
  5287  0025EC  6F78               	movwf	??_efgtoa& (0+255),b
  5288  0025EE  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5289  0025F0  0A80               	xorlw	128
  5290  0025F2  5978               	subwfb	??_efgtoa& (0+255),w,b
  5291  0025F4  A0D8               	btfss	status,0,c
  5292  0025F6  D77C               	goto	l9730
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  5296  0025F8  C0AB  F023         	movff	efgtoa@u,___flmul@b
  5297  0025FC  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  5298  002600  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  5299  002604  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  5300  002608  0E00               	movlw	0
  5301  00260A  6E27               	movwf	___flmul@a^0,c
  5302  00260C  0E00               	movlw	0
  5303  00260E  6E28               	movwf	(___flmul@a+1)^0,c
  5304  002610  0EA0               	movlw	160
  5305  002612  6E29               	movwf	(___flmul@a+2)^0,c
  5306  002614  0E40               	movlw	64
  5307  002616  6E2A               	movwf	(___flmul@a+3)^0,c
  5308  002618  EC9F  F018         	call	___flmul	;wreg free
  5309  00261C  C023  F09D         	movff	?___flmul,efgtoa@l
  5310  002620  C024  F09E         	movff	?___flmul+1,efgtoa@l+1
  5311  002624  C025  F09F         	movff	?___flmul+2,efgtoa@l+2
  5312  002628  C026  F0A0         	movff	?___flmul+3,efgtoa@l+3
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  5316  00262C  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5317  002630  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5318  002634  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5319  002638  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5320  00263C  C09D  F033         	movff	efgtoa@l,___flge@ff2
  5321  002640  C09E  F034         	movff	efgtoa@l+1,___flge@ff2+1
  5322  002644  C09F  F035         	movff	efgtoa@l+2,___flge@ff2+2
  5323  002648  C0A0  F036         	movff	efgtoa@l+3,___flge@ff2+3
  5324  00264C  ECAB  F024         	call	___flge	;wreg free
  5325  002650  A0D8               	btfss	status,0,c
  5326  002652  D015               	goto	u11410
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  5330                           
  5331                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  5335  002654  C099  F015         	movff	efgtoa@h,___fleq@ff1
  5336  002658  C09A  F016         	movff	efgtoa@h+1,___fleq@ff1+1
  5337  00265C  C09B  F017         	movff	efgtoa@h+2,___fleq@ff1+2
  5338  002660  C09C  F018         	movff	efgtoa@h+3,___fleq@ff1+3
  5339  002664  C09D  F019         	movff	efgtoa@l,___fleq@ff2
  5340  002668  C09E  F01A         	movff	efgtoa@l+1,___fleq@ff2+1
  5341  00266C  C09F  F01B         	movff	efgtoa@l+2,___fleq@ff2+2
  5342  002670  C0A0  F01C         	movff	efgtoa@l+3,___fleq@ff2+3
  5343  002674  ECF2  F028         	call	___fleq	;wreg free
  5344  002678  B0D8               	btfsc	status,0,c
  5345                           
  5346                           ; BSR set to: 0
  5347  00267A  B18F               	btfsc	efgtoa@d& (0+255),0,b
  5348  00267C  D008               	goto	l9752
  5349  00267E                     u11410:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  5353  00267E  0E00               	movlw	0
  5354  002680  6F9D               	movwf	efgtoa@l& (0+255),b
  5355  002682  0E00               	movlw	0
  5356  002684  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  5357  002686  0E00               	movlw	0
  5358  002688  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  5359  00268A  0E00               	movlw	0
  5360  00268C  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  5361  00268E                     l9752:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  5365  00268E  C0A1  F015         	movff	efgtoa@g,___fladd@b
  5366  002692  C0A2  F016         	movff	efgtoa@g+1,___fladd@b+1
  5367  002696  C0A3  F017         	movff	efgtoa@g+2,___fladd@b+2
  5368  00269A  C0A4  F018         	movff	efgtoa@g+3,___fladd@b+3
  5369  00269E  C09D  F019         	movff	efgtoa@l,___fladd@a
  5370  0026A2  C09E  F01A         	movff	efgtoa@l+1,___fladd@a+1
  5371  0026A6  C09F  F01B         	movff	efgtoa@l+2,___fladd@a+2
  5372  0026AA  C0A0  F01C         	movff	efgtoa@l+3,___fladd@a+3
  5373  0026AE  EC48  F01A         	call	___fladd	;wreg free
  5374  0026B2  C015  F099         	movff	?___fladd,efgtoa@h
  5375  0026B6  C016  F09A         	movff	?___fladd+1,efgtoa@h+1
  5376  0026BA  C017  F09B         	movff	?___fladd+2,efgtoa@h+2
  5377  0026BE  C018  F09C         	movff	?___fladd+3,efgtoa@h+3
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  5381  0026C2  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5382  0026C6  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5383  0026CA  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5384  0026CE  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5385  0026D2  0E00               	movlw	0
  5386  0026D4  6E27               	movwf	___flmul@a^0,c
  5387  0026D6  0E00               	movlw	0
  5388  0026D8  6E28               	movwf	(___flmul@a+1)^0,c
  5389  0026DA  0E20               	movlw	32
  5390  0026DC  6E29               	movwf	(___flmul@a+2)^0,c
  5391  0026DE  0E41               	movlw	65
  5392  0026E0  6E2A               	movwf	(___flmul@a+3)^0,c
  5393  0026E2  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5394  0026E6  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5395  0026EA  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5396  0026EE  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5397  0026F2  EC9F  F018         	call	___flmul	;wreg free
  5398  0026F6  C023  F033         	movff	?___flmul,___flge@ff2
  5399  0026FA  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  5400  0026FE  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  5401  002702  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  5402  002706  ECAB  F024         	call	___flge	;wreg free
  5403  00270A  A0D8               	btfss	status,0,c
  5404  00270C  D022               	goto	l9764
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  5408  00270E  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  5409  002710  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  5413  002712  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5414  002716  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5415  00271A  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5416  00271E  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5417  002722  0E00               	movlw	0
  5418  002724  6E27               	movwf	___flmul@a^0,c
  5419  002726  0E00               	movlw	0
  5420  002728  6E28               	movwf	(___flmul@a+1)^0,c
  5421  00272A  0E20               	movlw	32
  5422  00272C  6E29               	movwf	(___flmul@a+2)^0,c
  5423  00272E  0E41               	movlw	65
  5424  002730  6E2A               	movwf	(___flmul@a+3)^0,c
  5425  002732  EC9F  F018         	call	___flmul	;wreg free
  5426  002736  C023  F08B         	movff	?___flmul,efgtoa@ou
  5427  00273A  C024  F08C         	movff	?___flmul+1,efgtoa@ou+1
  5428  00273E  C025  F08D         	movff	?___flmul+2,efgtoa@ou+2
  5429  002742  C026  F08E         	movff	?___flmul+3,efgtoa@ou+3
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  5433  002746  0E66               	movlw	102
  5434  002748  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5435  00274A  A4D8               	btfss	status,2,c
  5436  00274C  D002               	goto	l9764
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  5440  00274E  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5441  002750  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5442  002752                     l9764:
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  5446  002752  C08B  F0AB         	movff	efgtoa@ou,efgtoa@u
  5447  002756  C08C  F0AC         	movff	efgtoa@ou+1,efgtoa@u+1
  5448  00275A  C08D  F0AD         	movff	efgtoa@ou+2,efgtoa@u+2
  5449  00275E  C08E  F0AE         	movff	efgtoa@ou+3,efgtoa@u+3
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  5453  002762  0E65               	movlw	101
  5454  002764  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5455  002766  B4D8               	btfsc	status,2,c
  5456  002768  D005               	goto	l9770
  5457                           
  5458                           ; BSR set to: 0
  5459  00276A  C0A7  F087         	movff	efgtoa@e,efgtoa@ne
  5460  00276E  C0A8  F088         	movff	efgtoa@e+1,efgtoa@ne+1
  5461  002772  D004               	goto	l1933
  5462  002774                     l9770:
  5463                           
  5464                           ; BSR set to: 0
  5465  002774  0E00               	movlw	0
  5466  002776  6F88               	movwf	(efgtoa@ne+1)& (0+255),b
  5467  002778  0E00               	movlw	0
  5468  00277A  6F87               	movwf	efgtoa@ne& (0+255),b
  5469  00277C                     l1933:
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  5473  00277C  0E00               	movlw	0
  5474  00277E  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5475  002780  0E00               	movlw	0
  5476  002782  6F85               	movwf	efgtoa@pp& (0+255),b
  5477                           
  5478                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  5479  002784  0E00               	movlw	0
  5480  002786  6F84               	movwf	(efgtoa@t+1)& (0+255),b
  5481  002788  0E00               	movlw	0
  5482  00278A  6F83               	movwf	efgtoa@t& (0+255),b
  5483                           
  5484                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  5485  00278C  0E00               	movlw	0
  5486  00278E  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5487  002790  0E00               	movlw	0
  5488  002792  6FA5               	movwf	efgtoa@i& (0+255),b
  5489                           
  5490                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5491  002794  D0C4               	goto	l9820
  5492  002796                     l9772:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  5496  002796  C099  F015         	movff	efgtoa@h,___fldiv@b
  5497  00279A  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5498  00279E  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5499  0027A2  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5500  0027A6  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5501  0027AA  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5502  0027AE  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5503  0027B2  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5504  0027B6  ECCE  F01B         	call	___fldiv	;wreg free
  5505  0027BA  C015  F02E         	movff	?___fldiv,floorf@x
  5506  0027BE  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5507  0027C2  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5508  0027C6  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5509  0027CA  ECF7  F01F         	call	_floorf	;wreg free
  5510  0027CE  C02E  F09D         	movff	?_floorf,efgtoa@l
  5511  0027D2  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5512  0027D6  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5513  0027DA  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5514                           
  5515                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  5516  0027DE  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5517  0027E2  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5518  0027E6  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5519  0027EA  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5520  0027EE  EC43  F026         	call	___fltol	;wreg free
  5521  0027F2  C015  F08F         	movff	?___fltol,efgtoa@d
  5522  0027F6  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5526  0027FA  B83D               	btfsc	_flags^0,4,c
  5527  0027FC  D00C               	goto	l9784
  5528                           
  5529                           ; BSR set to: 0
  5530  0027FE  518F               	movf	efgtoa@d& (0+255),w,b
  5531  002800  1190               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5532  002802  A4D8               	btfss	status,2,c
  5533  002804  D008               	goto	l9784
  5534                           
  5535                           ; BSR set to: 0
  5536  002806  0E67               	movlw	103
  5537  002808  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5538  00280A  B4D8               	btfsc	status,2,c
  5539                           
  5540                           ; BSR set to: 0
  5541  00280C  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5542  00280E  D003               	goto	l9784
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  5546  002810  4B83               	infsnz	efgtoa@t& (0+255),f,b
  5547  002812  2B84               	incf	(efgtoa@t+1)& (0+255),f,b
  5548                           
  5549                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  5550  002814  D039               	goto	l9812
  5551  002816                     l9784:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  5555  002816  5185               	movf	efgtoa@pp& (0+255),w,b
  5556  002818  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5557  00281A  B4D8               	btfsc	status,2,c
  5558                           
  5559                           ; BSR set to: 0
  5560  00281C  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5561  00281E  D022               	goto	l9804
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  5565  002820  0E98               	movlw	low _dbuf
  5566  002822  25A9               	addwf	efgtoa@n& (0+255),w,b
  5567  002824  6ED9               	movwf	fsr2l,c
  5568  002826  0E01               	movlw	high _dbuf
  5569  002828  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5570  00282A  6EDA               	movwf	fsr2h,c
  5571  00282C  0E2E               	movlw	46
  5572  00282E  6EDF               	movwf	indf2,c
  5573                           
  5574                           ; BSR set to: 0
  5575  002830  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5576  002832  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  5580  002834  0796               	decf	efgtoa@w& (0+255),f,b
  5581  002836  A0D8               	btfss	status,0,c
  5582  002838  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  5586  00283A  0E00               	movlw	0
  5587  00283C  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5588  00283E  0E01               	movlw	1
  5589  002840  6F85               	movwf	efgtoa@pp& (0+255),b
  5590  002842  D010               	goto	l9804
  5591  002844                     l9796:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  5595  002844  0E98               	movlw	low _dbuf
  5596  002846  25A9               	addwf	efgtoa@n& (0+255),w,b
  5597  002848  6ED9               	movwf	fsr2l,c
  5598  00284A  0E01               	movlw	high _dbuf
  5599  00284C  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5600  00284E  6EDA               	movwf	fsr2h,c
  5601  002850  0E30               	movlw	48
  5602  002852  6EDF               	movwf	indf2,c
  5603                           
  5604                           ; BSR set to: 0
  5605  002854  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5606  002856  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  5610  002858  0796               	decf	efgtoa@w& (0+255),f,b
  5611  00285A  A0D8               	btfss	status,0,c
  5612  00285C  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  5616  00285E  0783               	decf	efgtoa@t& (0+255),f,b
  5617  002860  A0D8               	btfss	status,0,c
  5618  002862  0784               	decf	(efgtoa@t+1)& (0+255),f,b
  5619  002864                     l9804:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  5623  002864  5183               	movf	efgtoa@t& (0+255),w,b
  5624  002866  1184               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5625  002868  A4D8               	btfss	status,2,c
  5626  00286A  D7EC               	goto	l9796
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  5630  00286C  0E98               	movlw	low _dbuf
  5631  00286E  25A9               	addwf	efgtoa@n& (0+255),w,b
  5632  002870  6ED9               	movwf	fsr2l,c
  5633  002872  0E01               	movlw	high _dbuf
  5634  002874  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5635  002876  6EDA               	movwf	fsr2h,c
  5636  002878  518F               	movf	efgtoa@d& (0+255),w,b
  5637  00287A  0F30               	addlw	48
  5638  00287C  6EDF               	movwf	indf2,c
  5639                           
  5640                           ; BSR set to: 0
  5641  00287E  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5642  002880  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  5646  002882  0796               	decf	efgtoa@w& (0+255),f,b
  5647  002884  A0D8               	btfss	status,0,c
  5648  002886  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5649  002888                     l9812:
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  5653  002888  C099  F02F         	movff	efgtoa@h,___flsub@b
  5654  00288C  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5655  002890  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5656  002894  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5657  002898  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5658  00289C  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5659  0028A0  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5660  0028A4  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5661  0028A8  C09D  F023         	movff	efgtoa@l,___flmul@b
  5662  0028AC  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5663  0028B0  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5664  0028B4  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5665  0028B8  EC9F  F018         	call	___flmul	;wreg free
  5666  0028BC  C023  F033         	movff	?___flmul,___flsub@a
  5667  0028C0  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5668  0028C4  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5669  0028C8  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5670  0028CC  EC7B  F02B         	call	___flsub	;wreg free
  5671  0028D0  C02F  F099         	movff	?___flsub,efgtoa@h
  5672  0028D4  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5673  0028D8  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5674  0028DC  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  5678  0028E0  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5679  0028E4  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5680  0028E8  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5681  0028EC  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5682  0028F0  0E00               	movlw	0
  5683  0028F2  6E19               	movwf	___fldiv@a^0,c
  5684  0028F4  0E00               	movlw	0
  5685  0028F6  6E1A               	movwf	(___fldiv@a+1)^0,c
  5686  0028F8  0E20               	movlw	32
  5687  0028FA  6E1B               	movwf	(___fldiv@a+2)^0,c
  5688  0028FC  0E41               	movlw	65
  5689  0028FE  6E1C               	movwf	(___fldiv@a+3)^0,c
  5690  002900  ECCE  F01B         	call	___fldiv	;wreg free
  5691  002904  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5692  002908  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5693  00290C  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5694  002910  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  5698  002914  0787               	decf	efgtoa@ne& (0+255),f,b
  5699  002916  A0D8               	btfss	status,0,c
  5700  002918  0788               	decf	(efgtoa@ne+1)& (0+255),f,b
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  5704  00291A  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5705  00291C  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5706  00291E                     l9820:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5710  00291E  5189               	movf	efgtoa@m& (0+255),w,b
  5711  002920  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5712  002922  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5713  002924  0A80               	xorlw	128
  5714  002926  6F78               	movwf	??_efgtoa& (0+255),b
  5715  002928  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5716  00292A  0A80               	xorlw	128
  5717  00292C  5978               	subwfb	??_efgtoa& (0+255),w,b
  5718  00292E  B0D8               	btfsc	status,0,c
  5719  002930  D008               	goto	u11530
  5720                           
  5721                           ; BSR set to: 0
  5722  002932  BFAA               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5723  002934  D730               	goto	l9772
  5724  002936  51AA               	movf	(efgtoa@n+1)& (0+255),w,b
  5725  002938  E104               	bnz	u11530
  5726  00293A  0E4B               	movlw	75
  5727  00293C  5DA9               	subwf	efgtoa@n& (0+255),w,b
  5728  00293E  A0D8               	btfss	status,0,c
  5729  002940  D72A               	goto	l9772
  5730  002942                     u11530:
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  5734  002942  5185               	movf	efgtoa@pp& (0+255),w,b
  5735  002944  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5736  002946  B4D8               	btfsc	status,2,c
  5737                           
  5738                           ; BSR set to: 0
  5739  002948  A83D               	btfss	_flags^0,4,c
  5740  00294A  D00A               	goto	l9832
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  5744  00294C  0E98               	movlw	low _dbuf
  5745  00294E  25A9               	addwf	efgtoa@n& (0+255),w,b
  5746  002950  6ED9               	movwf	fsr2l,c
  5747  002952  0E01               	movlw	high _dbuf
  5748  002954  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5749  002956  6EDA               	movwf	fsr2h,c
  5750  002958  0E2E               	movlw	46
  5751  00295A  6EDF               	movwf	indf2,c
  5752                           
  5753                           ; BSR set to: 0
  5754  00295C  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5755  00295E  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5756  002960                     l9832:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  5760  002960  0E98               	movlw	low _dbuf
  5761  002962  25A9               	addwf	efgtoa@n& (0+255),w,b
  5762  002964  6ED9               	movwf	fsr2l,c
  5763  002966  0E01               	movlw	high _dbuf
  5764  002968  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5765  00296A  6EDA               	movwf	fsr2h,c
  5766  00296C  0E00               	movlw	0
  5767  00296E  6EDF               	movwf	indf2,c
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  5771  002970  0E65               	movlw	101
  5772  002972  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5773  002974  A4D8               	btfss	status,2,c
  5774  002976  D448               	goto	l9634
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  5778  002978  0E00               	movlw	0
  5779  00297A  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5780  00297C  0E4F               	movlw	79
  5781  00297E  6FA5               	movwf	efgtoa@i& (0+255),b
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  5785  002980  0E98               	movlw	low _dbuf
  5786  002982  25A5               	addwf	efgtoa@i& (0+255),w,b
  5787  002984  6ED9               	movwf	fsr2l,c
  5788  002986  0E01               	movlw	high _dbuf
  5789  002988  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5790  00298A  6EDA               	movwf	fsr2h,c
  5791  00298C  0E00               	movlw	0
  5792  00298E  6EDF               	movwf	indf2,c
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  5796  002990  0E00               	movlw	0
  5797  002992  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5798  002994  0E00               	movlw	0
  5799  002996  6F91               	movwf	efgtoa@sign& (0+255),b
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  5803  002998  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5804  00299A  D008               	goto	l9848
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  5808  00299C  0E00               	movlw	0
  5809  00299E  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5810  0029A0  0E01               	movlw	1
  5811  0029A2  6F91               	movwf	efgtoa@sign& (0+255),b
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  5815  0029A4  6DA7               	negf	efgtoa@e& (0+255),b
  5816  0029A6  1FA8               	comf	(efgtoa@e+1)& (0+255),f,b
  5817  0029A8  B0D8               	btfsc	status,0,c
  5818  0029AA  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5819  0029AC                     l9848:
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  5823  0029AC  0E00               	movlw	0
  5824  0029AE  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5825  0029B0  0E02               	movlw	2
  5826  0029B2  6F93               	movwf	efgtoa@p& (0+255),b
  5827                           
  5828                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5829  0029B4  D02A               	goto	l9860
  5830  0029B6                     l9850:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  5834  0029B6  07A5               	decf	efgtoa@i& (0+255),f,b
  5835  0029B8  A0D8               	btfss	status,0,c
  5836  0029BA  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  5840  0029BC  0E98               	movlw	low _dbuf
  5841  0029BE  25A5               	addwf	efgtoa@i& (0+255),w,b
  5842  0029C0  6ED9               	movwf	fsr2l,c
  5843  0029C2  0E01               	movlw	high _dbuf
  5844  0029C4  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5845  0029C6  6EDA               	movwf	fsr2h,c
  5846  0029C8  C0A7  F015         	movff	efgtoa@e,___awmod@dividend
  5847  0029CC  C0A8  F016         	movff	efgtoa@e+1,___awmod@dividend+1
  5848  0029D0  0E00               	movlw	0
  5849  0029D2  6E18               	movwf	(___awmod@divisor+1)^0,c
  5850  0029D4  0E0A               	movlw	10
  5851  0029D6  6E17               	movwf	___awmod@divisor^0,c
  5852  0029D8  ECF4  F029         	call	___awmod	;wreg free
  5853  0029DC  5015               	movf	?___awmod^0,w,c
  5854  0029DE  0F30               	addlw	48
  5855  0029E0  6EDF               	movwf	indf2,c
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  5859  0029E2  C0A7  F015         	movff	efgtoa@e,___awdiv@dividend
  5860  0029E6  C0A8  F016         	movff	efgtoa@e+1,___awdiv@dividend+1
  5861  0029EA  0E00               	movlw	0
  5862  0029EC  6E18               	movwf	(___awdiv@divisor+1)^0,c
  5863  0029EE  0E0A               	movlw	10
  5864  0029F0  6E17               	movwf	___awdiv@divisor^0,c
  5865  0029F2  EC79  F029         	call	___awdiv	;wreg free
  5866  0029F6  C015  F0A7         	movff	?___awdiv,efgtoa@e
  5867  0029FA  C016  F0A8         	movff	?___awdiv+1,efgtoa@e+1
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  5871  0029FE  0793               	decf	efgtoa@p& (0+255),f,b
  5872  002A00  A0D8               	btfss	status,0,c
  5873  002A02  0794               	decf	(efgtoa@p+1)& (0+255),f,b
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  5877  002A04  0796               	decf	efgtoa@w& (0+255),f,b
  5878  002A06  A0D8               	btfss	status,0,c
  5879  002A08  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5880  002A0A                     l9860:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5884  002A0A  51A7               	movf	efgtoa@e& (0+255),w,b
  5885  002A0C  11A8               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5886  002A0E  A4D8               	btfss	status,2,c
  5887  002A10  D7D2               	goto	l9850
  5888                           
  5889                           ; BSR set to: 0
  5890  002A12  BF94               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5891  002A14  D005               	goto	u11590
  5892  002A16  5194               	movf	(efgtoa@p+1)& (0+255),w,b
  5893  002A18  E1CE               	bnz	l9850
  5894  002A1A  0593               	decf	efgtoa@p& (0+255),w,b
  5895  002A1C  B0D8               	btfsc	status,0,c
  5896  002A1E  D7CB               	goto	l9850
  5897  002A20                     u11590:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  5901  002A20  07A5               	decf	efgtoa@i& (0+255),f,b
  5902  002A22  A0D8               	btfss	status,0,c
  5903  002A24  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  5907  002A26  5191               	movf	efgtoa@sign& (0+255),w,b
  5908  002A28  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5909  002A2A  A4D8               	btfss	status,2,c
  5910  002A2C  D004               	goto	l9870
  5911                           
  5912                           ; BSR set to: 0
  5913  002A2E  0E00               	movlw	0
  5914  002A30  6F80               	movwf	(_efgtoa$2731+1)& (0+255),b
  5915  002A32  0E2B               	movlw	43
  5916  002A34  D003               	goto	L5
  5917  002A36                     l9870:
  5918                           
  5919                           ; BSR set to: 0
  5920  002A36  0E00               	movlw	0
  5921  002A38  6F80               	movwf	(_efgtoa$2731+1)& (0+255),b
  5922  002A3A  0E2D               	movlw	45
  5923  002A3C                     L5:
  5924  002A3C  6F7F               	movwf	_efgtoa$2731& (0+255),b
  5925                           
  5926                           ; BSR set to: 0
  5927  002A3E  0E98               	movlw	low _dbuf
  5928  002A40  25A5               	addwf	efgtoa@i& (0+255),w,b
  5929  002A42  6ED9               	movwf	fsr2l,c
  5930  002A44  0E01               	movlw	high _dbuf
  5931  002A46  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5932  002A48  6EDA               	movwf	fsr2h,c
  5933  002A4A  0060  F1FF  FFDF   	movff	_efgtoa$2731,indf2
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  5937  002A50  0796               	decf	efgtoa@w& (0+255),f,b
  5938  002A52  A0D8               	btfss	status,0,c
  5939  002A54  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  5943  002A56  07A5               	decf	efgtoa@i& (0+255),f,b
  5944  002A58  A0D8               	btfss	status,0,c
  5945  002A5A  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5946                           
  5947                           ; BSR set to: 0
  5948                           
  5949                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5950  002A5C  0EBF               	movlw	191
  5951  002A5E  6F78               	movwf	??_efgtoa& (0+255),b
  5952  002A60  0EFF               	movlw	255
  5953  002A62  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5954  002A64  5177               	movf	efgtoa@c& (0+255),w,b
  5955  002A66  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  5956  002A68  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  5957  002A6A  5178               	movf	??_efgtoa& (0+255),w,b
  5958  002A6C  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5959  002A6E  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5960  002A70  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5961  002A72  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5962  002A74  E104               	bnz	u11610
  5963  002A76  0E1A               	movlw	26
  5964  002A78  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5965  002A7A  A0D8               	btfss	status,0,c
  5966  002A7C  D004               	goto	l9884
  5967  002A7E                     u11610:
  5968                           
  5969                           ; BSR set to: 0
  5970  002A7E  0E00               	movlw	0
  5971  002A80  6F82               	movwf	(_efgtoa$2732+1)& (0+255),b
  5972  002A82  0E65               	movlw	101
  5973  002A84  D003               	goto	L6
  5974  002A86                     l9884:
  5975                           
  5976                           ; BSR set to: 0
  5977  002A86  0E00               	movlw	0
  5978  002A88  6F82               	movwf	(_efgtoa$2732+1)& (0+255),b
  5979  002A8A  0E45               	movlw	69
  5980  002A8C                     L6:
  5981  002A8C  6F81               	movwf	_efgtoa$2732& (0+255),b
  5982                           
  5983                           ; BSR set to: 0
  5984  002A8E  0E98               	movlw	low _dbuf
  5985  002A90  25A5               	addwf	efgtoa@i& (0+255),w,b
  5986  002A92  6ED9               	movwf	fsr2l,c
  5987  002A94  0E01               	movlw	high _dbuf
  5988  002A96  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5989  002A98  6EDA               	movwf	fsr2h,c
  5990  002A9A  0060  F207  FFDF   	movff	_efgtoa$2732,indf2
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  5994  002AA0  0796               	decf	efgtoa@w& (0+255),f,b
  5995  002AA2  A0D8               	btfss	status,0,c
  5996  002AA4  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  6000  002AA6  0E98               	movlw	low _dbuf
  6001  002AA8  25A9               	addwf	efgtoa@n& (0+255),w,b
  6002  002AAA  6E15               	movwf	strcpy@dest^0,c
  6003  002AAC  0E01               	movlw	high _dbuf
  6004  002AAE  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6005  002AB0  6E16               	movwf	(strcpy@dest+1)^0,c
  6006  002AB2  0E98               	movlw	low _dbuf
  6007  002AB4  25A5               	addwf	efgtoa@i& (0+255),w,b
  6008  002AB6  6E17               	movwf	strcpy@src^0,c
  6009  002AB8  0E01               	movlw	high _dbuf
  6010  002ABA  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6011  002ABC  6E18               	movwf	(strcpy@src+1)^0,c
  6012  002ABE  EC60  F02A         	call	_strcpy	;wreg free
  6013  002AC2  EF04  F011         	goto	l9634
  6014  002AC6                     __end_of_efgtoa:
  6015                           	callstack 0
  6016                           
  6017 ;; *************** function _tolower *****************
  6018 ;; Defined at:
  6019 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  c               2   26[COMRAM] int 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  2   26[COMRAM] int 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 3F/0
  6030 ;;		On exit  : 3F/0
  6031 ;;		Unchanged: 3F/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6036 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6037 ;;Total ram usage:        6 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; Hardware stack levels required when called: 5
  6040 ;; This function calls:
  6041 ;;		_isupper
  6042 ;; This function is called by:
  6043 ;;		_efgtoa
  6044 ;;		_vfpfcnvrt
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text12
  6049  0058FA                     __ptext12:
  6050                           	callstack 0
  6051  0058FA                     _tolower:
  6052                           	callstack 20
  6053                           
  6054                           ; BSR set to: 0
  6055                           
  6056                           ; BSR set to: 0
  6057                           
  6058                           ;incstack = 0
  6059  0058FA  0EBF               	movlw	191
  6060  0058FC  6E1D               	movwf	??_tolower^0,c
  6061  0058FE  0EFF               	movlw	255
  6062  005900  6E1E               	movwf	(??_tolower+1)^0,c
  6063  005902  C01B  F01F         	movff	tolower@c,??_tolower+2
  6064  005906  C01C  F020         	movff	tolower@c+1,??_tolower+3
  6065  00590A  501D               	movf	??_tolower^0,w,c
  6066  00590C  261F               	addwf	(??_tolower+2)^0,f,c
  6067  00590E  501E               	movf	(??_tolower+1)^0,w,c
  6068  005910  2220               	addwfc	(??_tolower+3)^0,f,c
  6069  005912  5020               	movf	(??_tolower+3)^0,w,c
  6070  005914  E10A               	bnz	l2184
  6071  005916  0E1A               	movlw	26
  6072  005918  5C1F               	subwf	(??_tolower+2)^0,w,c
  6073  00591A  B0D8               	btfsc	status,0,c
  6074  00591C  D006               	goto	l2184
  6075                           
  6076                           ; BSR set to: 0
  6077  00591E  0E20               	movlw	32
  6078  005920  101B               	iorwf	tolower@c^0,w,c
  6079  005922  6E1B               	movwf	?_tolower^0,c
  6080  005924  501C               	movf	(tolower@c+1)^0,w,c
  6081  005926  6E1C               	movwf	(?_tolower+1)^0,c
  6082  005928  0012               	return	
  6083  00592A                     l2184:
  6084                           
  6085                           ; BSR set to: 0
  6086  00592A  C01B  F01B         	movff	tolower@c,?_tolower
  6087  00592E  C01C  F01C         	movff	tolower@c+1,?_tolower+1
  6088                           
  6089                           ; BSR set to: 0
  6090  005932  0012               	return		;funcret
  6091  005934                     __end_of_tolower:
  6092                           	callstack 0
  6093                           
  6094 ;; *************** function _isupper *****************
  6095 ;; Defined at:
  6096 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  c               2   20[COMRAM] int 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  2   20[COMRAM] int 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;Total ram usage:        6 bytes
  6115 ;; Hardware stack levels used: 1
  6116 ;; Hardware stack levels required when called: 4
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_efgtoa
  6121 ;;		_vfpfcnvrt
  6122 ;;		_tolower
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text13
  6127  0059E2                     __ptext13:
  6128                           	callstack 0
  6129  0059E2                     _isupper:
  6130                           	callstack 20
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;incstack = 0
  6134  0059E2  0EBF               	movlw	191
  6135  0059E4  6E17               	movwf	??_isupper^0,c
  6136  0059E6  0EFF               	movlw	255
  6137  0059E8  6E18               	movwf	(??_isupper+1)^0,c
  6138  0059EA  C015  F019         	movff	isupper@c,??_isupper+2
  6139  0059EE  C016  F01A         	movff	isupper@c+1,??_isupper+3
  6140  0059F2  5017               	movf	??_isupper^0,w,c
  6141  0059F4  2619               	addwf	(??_isupper+2)^0,f,c
  6142  0059F6  5018               	movf	(??_isupper+1)^0,w,c
  6143  0059F8  221A               	addwfc	(??_isupper+3)^0,f,c
  6144  0059FA  501A               	movf	(??_isupper+3)^0,w,c
  6145  0059FC  E106               	bnz	u9980
  6146  0059FE  0E1A               	movlw	26
  6147  005A00  5C19               	subwf	(??_isupper+2)^0,w,c
  6148  005A02  B0D8               	btfsc	status,0,c
  6149  005A04  D002               	goto	u9980
  6150  005A06  0E01               	movlw	1
  6151  005A08  D001               	goto	u9990
  6152  005A0A                     u9980:
  6153  005A0A  0E00               	movlw	0
  6154  005A0C                     u9990:
  6155  005A0C  6E15               	movwf	?_isupper^0,c
  6156  005A0E  6A16               	clrf	(?_isupper+1)^0,c
  6157  005A10  0012               	return		;funcret
  6158  005A12                     __end_of_isupper:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function _strcpy *****************
  6162 ;; Defined at:
  6163 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  dest            2   20[COMRAM] PTR unsigned char 
  6166 ;;		 -> dbuf(80), 
  6167 ;;  src             2   22[COMRAM] PTR const unsigned char 
  6168 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  6169 ;;		 -> dbuf(80), 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  d               2   28[COMRAM] PTR unsigned char 
  6172 ;;		 -> dbuf(80), 
  6173 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6174 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  6175 ;;		 -> dbuf(80), 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  2   20[COMRAM] PTR unsigned char 
  6178 ;; Registers used:
  6179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6180 ;; Tracked objects:
  6181 ;;		On entry : 3F/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6186 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6187 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6188 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6189 ;;Total ram usage:       10 bytes
  6190 ;; Hardware stack levels used: 1
  6191 ;; Hardware stack levels required when called: 4
  6192 ;; This function calls:
  6193 ;;		Nothing
  6194 ;; This function is called by:
  6195 ;;		_efgtoa
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text14
  6200  0054C0                     __ptext14:
  6201                           	callstack 0
  6202  0054C0                     _strcpy:
  6203                           	callstack 20
  6204                           
  6205                           ; BSR set to: 0
  6206                           
  6207                           ;incstack = 0
  6208  0054C0  C017  F01B         	movff	strcpy@src,strcpy@s
  6209  0054C4  C018  F01C         	movff	strcpy@src+1,strcpy@s+1
  6210  0054C8  C015  F01D         	movff	strcpy@dest,strcpy@d
  6211  0054CC  C016  F01E         	movff	strcpy@dest+1,strcpy@d+1
  6212  0054D0                     l9514:
  6213  0054D0  501B               	movf	strcpy@s^0,w,c
  6214  0054D2  6E19               	movwf	??_strcpy^0,c
  6215  0054D4  501C               	movf	(strcpy@s+1)^0,w,c
  6216  0054D6  6E1A               	movwf	(??_strcpy+1)^0,c
  6217  0054D8  4A1B               	infsnz	strcpy@s^0,f,c
  6218  0054DA  2A1C               	incf	(strcpy@s+1)^0,f,c
  6219  0054DC  0060  F067  FFF6   	movff	??_strcpy,tblptrl
  6220  0054E2  0060  F06B  FFF7   	movff	??_strcpy+1,tblptrh
  6221  0054E8  0E00               	movlw	low (__smallconst shr (0+16))
  6222  0054EA  6EF8               	movwf	tblptru,c
  6223  0054EC  0060  F077  FFD9   	movff	strcpy@d,fsr2l
  6224  0054F2  0060  F07B  FFDA   	movff	strcpy@d+1,fsr2h
  6225  0054F8  4A1D               	infsnz	strcpy@d^0,f,c
  6226  0054FA  2A1E               	incf	(strcpy@d+1)^0,f,c
  6227  0054FC  0E1F               	movlw	(high __ramtop+-1)
  6228  0054FE  64F7               	cpfsgt	tblptrh,c
  6229  005500  D003               	bra	u10877
  6230  005502  0008               	tblrd		*
  6231  005504  50F5               	movf	tablat,w,c
  6232  005506  D007               	bra	u10870
  6233  005508                     u10877:
  6234  005508  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6235  00550E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6236  005514  50E7               	movf	indf1,w,c
  6237  005516                     u10870:
  6238  005516  6EDF               	movwf	indf2,c
  6239  005518  50DF               	movf	indf2,w,c
  6240  00551A  B4D8               	btfsc	status,2,c
  6241  00551C  0012               	return	
  6242  00551E  D7D8               	goto	l9514
  6243  005520                     __end_of_strcpy:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function _pad *****************
  6247 ;; Defined at:
  6248 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  6251 ;;		 -> sprintf@f(11), NULL(0), 
  6252 ;;  buf             2   42[COMRAM] PTR unsigned char 
  6253 ;;		 -> dbuf(80), 
  6254 ;;  p               2   44[COMRAM] int 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  w               2   49[COMRAM] int 
  6257 ;;  i               2   47[COMRAM] int 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  2   40[COMRAM] int 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6267 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6268 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6270 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6271 ;;Total ram usage:       11 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; Hardware stack levels required when called: 8
  6274 ;; This function calls:
  6275 ;;		_fputc
  6276 ;;		_fputs
  6277 ;;		_strlen
  6278 ;; This function is called by:
  6279 ;;		_efgtoa
  6280 ;;		_utoa
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text15
  6285  00514E                     __ptext15:
  6286                           	callstack 0
  6287  00514E                     _pad:
  6288                           	callstack 16
  6289                           
  6290                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6291                           
  6292                           ;incstack = 0
  6293  00514E  A03D               	btfss	_flags^0,0,c
  6294  005150  D00A               	goto	l9472
  6295                           
  6296                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6297  005152  C02B  F020         	movff	pad@buf,fputs@s
  6298  005156  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6299  00515A  C029  F022         	movff	pad@fp,fputs@fp
  6300  00515E  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6301  005162  EC2C  F02A         	call	_fputs	;wreg free
  6302  005166                     l9472:
  6303                           
  6304                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6305  005166  BE2E               	btfsc	(pad@p+1)^0,7,c
  6306  005168  D005               	goto	l9476
  6307  00516A  C02D  F032         	movff	pad@p,pad@w
  6308  00516E  C02E  F033         	movff	pad@p+1,pad@w+1
  6309  005172  D004               	goto	l1868
  6310  005174                     l9476:
  6311  005174  0E00               	movlw	0
  6312  005176  6E33               	movwf	(pad@w+1)^0,c
  6313  005178  0E00               	movlw	0
  6314  00517A  6E32               	movwf	pad@w^0,c
  6315  00517C                     l1868:
  6316                           
  6317                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6318  00517C  0E00               	movlw	0
  6319  00517E  6E31               	movwf	(pad@i+1)^0,c
  6320  005180  0E00               	movlw	0
  6321  005182  6E30               	movwf	pad@i^0,c
  6322                           
  6323                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6324  005184  D00C               	goto	l9482
  6325  005186                     l9478:
  6326                           
  6327                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6328  005186  0E00               	movlw	0
  6329  005188  6E18               	movwf	(fputc@c+1)^0,c
  6330  00518A  0E20               	movlw	32
  6331  00518C  6E17               	movwf	fputc@c^0,c
  6332  00518E  C029  F019         	movff	pad@fp,fputc@fp
  6333  005192  C02A  F01A         	movff	pad@fp+1,fputc@fp+1
  6334  005196  EC57  F027         	call	_fputc	;wreg free
  6335                           
  6336                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6337  00519A  4A30               	infsnz	pad@i^0,f,c
  6338  00519C  2A31               	incf	(pad@i+1)^0,f,c
  6339  00519E                     l9482:
  6340                           
  6341                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6342  00519E  5032               	movf	pad@w^0,w,c
  6343  0051A0  5C30               	subwf	pad@i^0,w,c
  6344  0051A2  5031               	movf	(pad@i+1)^0,w,c
  6345  0051A4  0A80               	xorlw	128
  6346  0051A6  6E2F               	movwf	??_pad^0,c
  6347  0051A8  5033               	movf	(pad@w+1)^0,w,c
  6348  0051AA  0A80               	xorlw	128
  6349  0051AC  582F               	subwfb	??_pad^0,w,c
  6350  0051AE  A0D8               	btfss	status,0,c
  6351  0051B0  D7EA               	goto	l9478
  6352                           
  6353                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6354  0051B2  B03D               	btfsc	_flags^0,0,c
  6355  0051B4  D00A               	goto	l9486
  6356                           
  6357                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6358  0051B6  C02B  F020         	movff	pad@buf,fputs@s
  6359  0051BA  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6360  0051BE  C029  F022         	movff	pad@fp,fputs@fp
  6361  0051C2  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6362  0051C6  EC2C  F02A         	call	_fputs	;wreg free
  6363  0051CA                     l9486:
  6364                           
  6365                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  6366  0051CA  C02B  F015         	movff	pad@buf,strlen@s
  6367  0051CE  C02C  F016         	movff	pad@buf+1,strlen@s+1
  6368  0051D2  EC31  F02B         	call	_strlen	;wreg free
  6369  0051D6  5032               	movf	pad@w^0,w,c
  6370  0051D8  2415               	addwf	?_strlen^0,w,c
  6371  0051DA  6E29               	movwf	?_pad^0,c
  6372  0051DC  5033               	movf	(pad@w+1)^0,w,c
  6373  0051DE  2016               	addwfc	(?_strlen+1)^0,w,c
  6374  0051E0  6E2A               	movwf	(?_pad+1)^0,c
  6375  0051E2  0012               	return		;funcret
  6376  0051E4                     __end_of_pad:
  6377                           	callstack 0
  6378                           
  6379 ;; *************** function _floorf *****************
  6380 ;; Defined at:
  6381 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  x               4   45[COMRAM] float 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  u               4    6[BANK0 ] struct .
  6386 ;;  m               4    0[BANK0 ] unsigned long 
  6387 ;;  e               2    4[BANK0 ] int 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  4   45[COMRAM] float 
  6390 ;; Registers used:
  6391 ;;		wreg, status,2, status,0
  6392 ;; Tracked objects:
  6393 ;;		On entry : 3F/0
  6394 ;;		On exit  : 3F/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6398 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6399 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6400 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6401 ;;Total ram usage:       20 bytes
  6402 ;; Hardware stack levels used: 1
  6403 ;; Hardware stack levels required when called: 4
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_efgtoa
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text16
  6412  003FEE                     __ptext16:
  6413                           	callstack 0
  6414  003FEE                     _floorf:
  6415                           	callstack 20
  6416                           
  6417                           ; BSR set to: 0
  6418                           
  6419                           ;incstack = 0
  6420  003FEE  C18C  F066         	movff	floorf@F526,floorf@u
  6421  003FF2  C18D  F067         	movff	floorf@F526+1,floorf@u+1
  6422  003FF6  C18E  F068         	movff	floorf@F526+2,floorf@u+2
  6423  003FFA  C18F  F069         	movff	floorf@F526+3,floorf@u+3
  6424  003FFE  C02E  F066         	movff	floorf@x,floorf@u
  6425  004002  C02F  F067         	movff	floorf@x+1,floorf@u+1
  6426  004006  C030  F068         	movff	floorf@x+2,floorf@u+2
  6427  00400A  C031  F069         	movff	floorf@x+3,floorf@u+3
  6428                           
  6429                           ; BSR set to: 0
  6430  00400E  0E81               	movlw	129
  6431  004010  6E32               	movwf	??_floorf^0,c
  6432  004012  0EFF               	movlw	255
  6433  004014  6E33               	movwf	(??_floorf+1)^0,c
  6434  004016  C066  F034         	movff	floorf@u,??_floorf+2
  6435  00401A  C067  F035         	movff	floorf@u+1,??_floorf+3
  6436  00401E  C068  F036         	movff	floorf@u+2,??_floorf+4
  6437  004022  C069  F037         	movff	floorf@u+3,??_floorf+5
  6438  004026  0E18               	movlw	24
  6439  004028  D005               	goto	u10900
  6440  00402A                     u10905:
  6441  00402A  90D8               	bcf	status,0,c
  6442  00402C  3237               	rrcf	(??_floorf+5)^0,f,c
  6443  00402E  3236               	rrcf	(??_floorf+4)^0,f,c
  6444  004030  3235               	rrcf	(??_floorf+3)^0,f,c
  6445  004032  3234               	rrcf	(??_floorf+2)^0,f,c
  6446  004034                     u10900:
  6447  004034  2EE8               	decfsz	wreg,f,c
  6448  004036  D7F9               	goto	u10905
  6449  004038  5034               	movf	(??_floorf+2)^0,w,c
  6450  00403A  2432               	addwf	??_floorf^0,w,c
  6451  00403C  6F64               	movwf	floorf@e& (0+255),b
  6452  00403E  0E00               	movlw	0
  6453  004040  2033               	addwfc	(??_floorf+1)^0,w,c
  6454  004042  6F65               	movwf	(floorf@e+1)& (0+255),b
  6455  004044  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6456  004046  D00F               	goto	l9532
  6457  004048  5165               	movf	(floorf@e+1)& (0+255),w,b
  6458  00404A  E104               	bnz	u10910
  6459  00404C  0E17               	movlw	23
  6460  00404E  5D64               	subwf	floorf@e& (0+255),w,b
  6461  004050  A0D8               	btfss	status,0,c
  6462  004052  D009               	goto	l9532
  6463  004054                     u10910:
  6464                           
  6465                           ; BSR set to: 0
  6466  004054  C02E  F02E         	movff	floorf@x,?_floorf
  6467  004058  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  6468  00405C  C030  F030         	movff	floorf@x+2,?_floorf+2
  6469  004060  C031  F031         	movff	floorf@x+3,?_floorf+3
  6470  004064  0012               	return	
  6471  004066                     l9532:
  6472                           
  6473                           ; BSR set to: 0
  6474  004066  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6475  004068  D05C               	goto	l9542
  6476                           
  6477                           ; BSR set to: 0
  6478  00406A  C064  F032         	movff	floorf@e,??_floorf
  6479  00406E  0EFF               	movlw	255
  6480  004070  6E33               	movwf	(??_floorf+1)^0,c
  6481  004072  0EFF               	movlw	255
  6482  004074  6E34               	movwf	(??_floorf+2)^0,c
  6483  004076  0E7F               	movlw	127
  6484  004078  6E35               	movwf	(??_floorf+3)^0,c
  6485  00407A  0E00               	movlw	0
  6486  00407C  6E36               	movwf	(??_floorf+4)^0,c
  6487  00407E                     u10935:
  6488  00407E  6632               	tstfsz	??_floorf^0,c
  6489  004080  D001               	goto	u10936
  6490  004082  D007               	goto	u10937
  6491  004084                     u10936:
  6492  004084  3436               	rlcf	(??_floorf+4)^0,w,c
  6493  004086  3236               	rrcf	(??_floorf+4)^0,f,c
  6494  004088  3235               	rrcf	(??_floorf+3)^0,f,c
  6495  00408A  3234               	rrcf	(??_floorf+2)^0,f,c
  6496  00408C  3233               	rrcf	(??_floorf+1)^0,f,c
  6497  00408E  2E32               	decfsz	??_floorf^0,f,c
  6498  004090  D7F6               	goto	u10935
  6499  004092                     u10937:
  6500  004092  C033  F060         	movff	??_floorf+1,floorf@m
  6501  004096  C034  F061         	movff	??_floorf+2,floorf@m+1
  6502  00409A  C035  F062         	movff	??_floorf+3,floorf@m+2
  6503  00409E  C036  F063         	movff	??_floorf+4,floorf@m+3
  6504  0040A2  0100               	movlb	0	; () banked
  6505  0040A4  5160               	movf	floorf@m& (0+255),w,b
  6506  0040A6  1566               	andwf	floorf@u& (0+255),w,b
  6507  0040A8  6E32               	movwf	??_floorf^0,c
  6508  0040AA  5161               	movf	(floorf@m+1)& (0+255),w,b
  6509  0040AC  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6510  0040AE  6E33               	movwf	(??_floorf+1)^0,c
  6511  0040B0  5162               	movf	(floorf@m+2)& (0+255),w,b
  6512  0040B2  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6513  0040B4  6E34               	movwf	(??_floorf+2)^0,c
  6514  0040B6  5163               	movf	(floorf@m+3)& (0+255),w,b
  6515  0040B8  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6516  0040BA  6E35               	movwf	(??_floorf+3)^0,c
  6517  0040BC  5032               	movf	??_floorf^0,w,c
  6518  0040BE  1033               	iorwf	(??_floorf+1)^0,w,c
  6519  0040C0  1034               	iorwf	(??_floorf+2)^0,w,c
  6520  0040C2  1035               	iorwf	(??_floorf+3)^0,w,c
  6521  0040C4  B4D8               	btfsc	status,2,c
  6522  0040C6  D7C6               	goto	u10910
  6523                           
  6524                           ; BSR set to: 0
  6525  0040C8  C066  F032         	movff	floorf@u,??_floorf
  6526  0040CC  C067  F033         	movff	floorf@u+1,??_floorf+1
  6527  0040D0  C068  F034         	movff	floorf@u+2,??_floorf+2
  6528  0040D4  C069  F035         	movff	floorf@u+3,??_floorf+3
  6529  0040D8  0E20               	movlw	32
  6530  0040DA  D005               	goto	u10950
  6531  0040DC                     u10955:
  6532  0040DC  90D8               	bcf	status,0,c
  6533  0040DE  3235               	rrcf	(??_floorf+3)^0,f,c
  6534  0040E0  3234               	rrcf	(??_floorf+2)^0,f,c
  6535  0040E2  3233               	rrcf	(??_floorf+1)^0,f,c
  6536  0040E4  3232               	rrcf	??_floorf^0,f,c
  6537  0040E6                     u10950:
  6538  0040E6  2EE8               	decfsz	wreg,f,c
  6539  0040E8  D7F9               	goto	u10955
  6540  0040EA  5032               	movf	??_floorf^0,w,c
  6541  0040EC  B4D8               	btfsc	status,2,c
  6542  0040EE  D008               	goto	l2098
  6543                           
  6544                           ; BSR set to: 0
  6545  0040F0  5160               	movf	floorf@m& (0+255),w,b
  6546  0040F2  2766               	addwf	floorf@u& (0+255),f,b
  6547  0040F4  5161               	movf	(floorf@m+1)& (0+255),w,b
  6548  0040F6  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6549  0040F8  5162               	movf	(floorf@m+2)& (0+255),w,b
  6550  0040FA  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6551  0040FC  5163               	movf	(floorf@m+3)& (0+255),w,b
  6552  0040FE  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6553  004100                     l2098:
  6554                           
  6555                           ; BSR set to: 0
  6556  004100  1D60               	comf	floorf@m& (0+255),w,b
  6557  004102  6E32               	movwf	??_floorf^0,c
  6558  004104  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6559  004106  6E33               	movwf	(??_floorf+1)^0,c
  6560  004108  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6561  00410A  6E34               	movwf	(??_floorf+2)^0,c
  6562  00410C  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6563  00410E  6E35               	movwf	(??_floorf+3)^0,c
  6564  004110  5032               	movf	??_floorf^0,w,c
  6565  004112  1766               	andwf	floorf@u& (0+255),f,b
  6566  004114  5033               	movf	(??_floorf+1)^0,w,c
  6567  004116  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6568  004118  5034               	movf	(??_floorf+2)^0,w,c
  6569  00411A  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6570  00411C  5035               	movf	(??_floorf+3)^0,w,c
  6571  00411E  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6572  004120  D032               	goto	l9550
  6573  004122                     l9542:
  6574                           
  6575                           ; BSR set to: 0
  6576  004122  C066  F032         	movff	floorf@u,??_floorf
  6577  004126  C067  F033         	movff	floorf@u+1,??_floorf+1
  6578  00412A  C068  F034         	movff	floorf@u+2,??_floorf+2
  6579  00412E  C069  F035         	movff	floorf@u+3,??_floorf+3
  6580  004132  0E20               	movlw	32
  6581  004134  D005               	goto	u10970
  6582  004136                     u10975:
  6583  004136  90D8               	bcf	status,0,c
  6584  004138  3235               	rrcf	(??_floorf+3)^0,f,c
  6585  00413A  3234               	rrcf	(??_floorf+2)^0,f,c
  6586  00413C  3233               	rrcf	(??_floorf+1)^0,f,c
  6587  00413E  3232               	rrcf	??_floorf^0,f,c
  6588  004140                     u10970:
  6589  004140  2EE8               	decfsz	wreg,f,c
  6590  004142  D7F9               	goto	u10975
  6591  004144  6632               	tstfsz	??_floorf^0,c
  6592  004146  D008               	goto	l9546
  6593                           
  6594                           ; BSR set to: 0
  6595  004148  0E00               	movlw	0
  6596  00414A  6F66               	movwf	floorf@u& (0+255),b
  6597  00414C  0E00               	movlw	0
  6598  00414E  6F67               	movwf	(floorf@u+1)& (0+255),b
  6599  004150  0E00               	movlw	0
  6600  004152  6F68               	movwf	(floorf@u+2)& (0+255),b
  6601  004154  0E00               	movlw	0
  6602  004156  D016               	goto	L7
  6603  004158                     l9546:
  6604                           
  6605                           ; BSR set to: 0
  6606  004158  90D8               	bcf	status,0,c
  6607  00415A  3566               	rlcf	floorf@u& (0+255),w,b
  6608  00415C  6E32               	movwf	??_floorf^0,c
  6609  00415E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6610  004160  6E33               	movwf	(??_floorf+1)^0,c
  6611  004162  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6612  004164  6E34               	movwf	(??_floorf+2)^0,c
  6613  004166  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6614  004168  6E35               	movwf	(??_floorf+3)^0,c
  6615  00416A  5032               	movf	??_floorf^0,w,c
  6616  00416C  1033               	iorwf	(??_floorf+1)^0,w,c
  6617  00416E  1034               	iorwf	(??_floorf+2)^0,w,c
  6618  004170  1035               	iorwf	(??_floorf+3)^0,w,c
  6619  004172  B4D8               	btfsc	status,2,c
  6620  004174  D008               	goto	l9550
  6621                           
  6622                           ; BSR set to: 0
  6623  004176  0E00               	movlw	0
  6624  004178  6F66               	movwf	floorf@u& (0+255),b
  6625  00417A  0E00               	movlw	0
  6626  00417C  6F67               	movwf	(floorf@u+1)& (0+255),b
  6627  00417E  0E80               	movlw	128
  6628  004180  6F68               	movwf	(floorf@u+2)& (0+255),b
  6629  004182  0EBF               	movlw	191
  6630  004184                     L7:
  6631  004184  6F69               	movwf	(floorf@u+3)& (0+255),b
  6632  004186                     l9550:
  6633                           
  6634                           ; BSR set to: 0
  6635  004186  C066  F02E         	movff	floorf@u,?_floorf
  6636  00418A  C067  F02F         	movff	floorf@u+1,?_floorf+1
  6637  00418E  C068  F030         	movff	floorf@u+2,?_floorf+2
  6638  004192  C069  F031         	movff	floorf@u+3,?_floorf+3
  6639                           
  6640                           ; BSR set to: 0
  6641  004196  0012               	return		;funcret
  6642  004198                     __end_of_floorf:
  6643                           	callstack 0
  6644                           
  6645 ;; *************** function ___fpclassifyf *****************
  6646 ;; Defined at:
  6647 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  x               4   20[COMRAM] float 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  u               4   30[COMRAM] struct .
  6652 ;;  e               2   28[COMRAM] int 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  2   20[COMRAM] int 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6664 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6665 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6666 ;;Total ram usage:       14 bytes
  6667 ;; Hardware stack levels used: 1
  6668 ;; Hardware stack levels required when called: 4
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_efgtoa
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text17
  6677  004AF4                     __ptext17:
  6678                           	callstack 0
  6679  004AF4                     ___fpclassifyf:
  6680                           	callstack 20
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;incstack = 0
  6684  004AF4  C190  F01F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6685  004AF8  C191  F020         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6686  004AFC  C192  F021         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6687  004B00  C193  F022         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6688  004B04  C015  F01F         	movff	___fpclassifyf@x,___fpclassifyf@u
  6689  004B08  C016  F020         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6690  004B0C  C017  F021         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6691  004B10  C018  F022         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6692  004B14  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6693  004B18  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6694  004B1C  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6695  004B20  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6696  004B24  0E18               	movlw	24
  6697  004B26  D005               	goto	u10800
  6698  004B28                     u10805:
  6699  004B28  90D8               	bcf	status,0,c
  6700  004B2A  321C               	rrcf	(??___fpclassifyf+3)^0,f,c
  6701  004B2C  321B               	rrcf	(??___fpclassifyf+2)^0,f,c
  6702  004B2E  321A               	rrcf	(??___fpclassifyf+1)^0,f,c
  6703  004B30  3219               	rrcf	??___fpclassifyf^0,f,c
  6704  004B32                     u10800:
  6705  004B32  2EE8               	decfsz	wreg,f,c
  6706  004B34  D7F9               	goto	u10805
  6707  004B36  5019               	movf	??___fpclassifyf^0,w,c
  6708  004B38  6E1D               	movwf	___fpclassifyf@e^0,c
  6709  004B3A  6A1E               	clrf	(___fpclassifyf@e+1)^0,c
  6710  004B3C  501D               	movf	___fpclassifyf@e^0,w,c
  6711  004B3E  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6712  004B40  A4D8               	btfss	status,2,c
  6713  004B42  D019               	goto	l9502
  6714  004B44  90D8               	bcf	status,0,c
  6715  004B46  341F               	rlcf	___fpclassifyf@u^0,w,c
  6716  004B48  6E19               	movwf	??___fpclassifyf^0,c
  6717  004B4A  3420               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6718  004B4C  6E1A               	movwf	(??___fpclassifyf+1)^0,c
  6719  004B4E  3421               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6720  004B50  6E1B               	movwf	(??___fpclassifyf+2)^0,c
  6721  004B52  3422               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6722  004B54  6E1C               	movwf	(??___fpclassifyf+3)^0,c
  6723  004B56  5019               	movf	??___fpclassifyf^0,w,c
  6724  004B58  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6725  004B5A  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6726  004B5C  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6727  004B5E  A4D8               	btfss	status,2,c
  6728  004B60  D005               	goto	l9498
  6729  004B62  0E00               	movlw	0
  6730  004B64  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6731  004B66  0E02               	movlw	2
  6732  004B68  6E15               	movwf	?___fpclassifyf^0,c
  6733  004B6A  0012               	return	
  6734  004B6C                     l9498:
  6735  004B6C  0E00               	movlw	0
  6736  004B6E  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6737  004B70  0E03               	movlw	3
  6738  004B72  6E15               	movwf	?___fpclassifyf^0,c
  6739  004B74  0012               	return	
  6740  004B76                     l9502:
  6741  004B76  281D               	incf	___fpclassifyf@e^0,w,c
  6742  004B78  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6743  004B7A  A4D8               	btfss	status,2,c
  6744  004B7C  D01C               	goto	l9508
  6745  004B7E  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6746  004B82  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6747  004B86  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6748  004B8A  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6749  004B8E  0E09               	movlw	9
  6750  004B90                     u10845:
  6751  004B90  90D8               	bcf	status,0,c
  6752  004B92  3619               	rlcf	??___fpclassifyf^0,f,c
  6753  004B94  361A               	rlcf	(??___fpclassifyf+1)^0,f,c
  6754  004B96  361B               	rlcf	(??___fpclassifyf+2)^0,f,c
  6755  004B98  361C               	rlcf	(??___fpclassifyf+3)^0,f,c
  6756  004B9A  2EE8               	decfsz	wreg,f,c
  6757  004B9C  D7F9               	goto	u10845
  6758  004B9E  5019               	movf	??___fpclassifyf^0,w,c
  6759  004BA0  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6760  004BA2  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6761  004BA4  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6762  004BA6  A4D8               	btfss	status,2,c
  6763  004BA8  D002               	goto	u10850
  6764  004BAA  0E01               	movlw	1
  6765  004BAC  D001               	goto	u10860
  6766  004BAE                     u10850:
  6767  004BAE  0E00               	movlw	0
  6768  004BB0                     u10860:
  6769  004BB0  6E15               	movwf	?___fpclassifyf^0,c
  6770  004BB2  6A16               	clrf	(?___fpclassifyf+1)^0,c
  6771  004BB4  0012               	return	
  6772  004BB6                     l9508:
  6773  004BB6  0E00               	movlw	0
  6774  004BB8  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6775  004BBA  0E04               	movlw	4
  6776  004BBC  6E15               	movwf	?___fpclassifyf^0,c
  6777  004BBE  0012               	return		;funcret
  6778  004BC0                     __end_of___fpclassifyf:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function ___fltol *****************
  6782 ;; Defined at:
  6783 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  f1              4   20[COMRAM] int 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  exp1            1   29[COMRAM] unsigned char 
  6788 ;;  sign1           1   28[COMRAM] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  4   20[COMRAM] long 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0
  6793 ;; Tracked objects:
  6794 ;;		On entry : 3F/0
  6795 ;;		On exit  : 3F/0
  6796 ;;		Unchanged: 3F/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6801 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6802 ;;Total ram usage:       10 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 4
  6805 ;; This function calls:
  6806 ;;		Nothing
  6807 ;; This function is called by:
  6808 ;;		_efgtoa
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text18
  6813  004C86                     __ptext18:
  6814                           	callstack 0
  6815  004C86                     ___fltol:
  6816                           	callstack 20
  6817                           
  6818                           ; BSR set to: 0
  6819                           
  6820                           ;incstack = 0
  6821  004C86  3417               	rlcf	(___fltol@f1+2)^0,w,c
  6822  004C88  3418               	rlcf	(___fltol@f1+3)^0,w,c
  6823  004C8A  6E1E               	movwf	___fltol@exp1^0,c
  6824  004C8C  501E               	movf	___fltol@exp1^0,w,c
  6825  004C8E  A4D8               	btfss	status,2,c
  6826  004C90  D009               	goto	l9392
  6827  004C92                     u10620:
  6828                           
  6829                           ; BSR set to: 0
  6830  004C92  0E00               	movlw	0
  6831  004C94  6E15               	movwf	?___fltol^0,c
  6832  004C96  0E00               	movlw	0
  6833  004C98  6E16               	movwf	(?___fltol+1)^0,c
  6834  004C9A  0E00               	movlw	0
  6835  004C9C  6E17               	movwf	(?___fltol+2)^0,c
  6836  004C9E  0E00               	movlw	0
  6837  004CA0  6E18               	movwf	(?___fltol+3)^0,c
  6838  004CA2  0012               	return	
  6839  004CA4                     l9392:
  6840                           
  6841                           ; BSR set to: 0
  6842  004CA4  C015  F019         	movff	___fltol@f1,??___fltol
  6843  004CA8  C016  F01A         	movff	___fltol@f1+1,??___fltol+1
  6844  004CAC  C017  F01B         	movff	___fltol@f1+2,??___fltol+2
  6845  004CB0  C018  F01C         	movff	___fltol@f1+3,??___fltol+3
  6846  004CB4  0E20               	movlw	32
  6847  004CB6  D005               	goto	u10630
  6848  004CB8                     u10635:
  6849  004CB8  90D8               	bcf	status,0,c
  6850  004CBA  321C               	rrcf	(??___fltol+3)^0,f,c
  6851  004CBC  321B               	rrcf	(??___fltol+2)^0,f,c
  6852  004CBE  321A               	rrcf	(??___fltol+1)^0,f,c
  6853  004CC0  3219               	rrcf	??___fltol^0,f,c
  6854  004CC2                     u10630:
  6855  004CC2  2EE8               	decfsz	wreg,f,c
  6856  004CC4  D7F9               	goto	u10635
  6857  004CC6  5019               	movf	??___fltol^0,w,c
  6858  004CC8  6E1D               	movwf	___fltol@sign1^0,c
  6859                           
  6860                           ; BSR set to: 0
  6861  004CCA  8E17               	bsf	(___fltol@f1+2)^0,7,c
  6862                           
  6863                           ; BSR set to: 0
  6864  004CCC  0EFF               	movlw	255
  6865  004CCE  1615               	andwf	___fltol@f1^0,f,c
  6866  004CD0  0EFF               	movlw	255
  6867  004CD2  1616               	andwf	(___fltol@f1+1)^0,f,c
  6868  004CD4  0EFF               	movlw	255
  6869  004CD6  1617               	andwf	(___fltol@f1+2)^0,f,c
  6870  004CD8  0E00               	movlw	0
  6871  004CDA  1618               	andwf	(___fltol@f1+3)^0,f,c
  6872                           
  6873                           ; BSR set to: 0
  6874  004CDC  0E96               	movlw	150
  6875  004CDE  5E1E               	subwf	___fltol@exp1^0,f,c
  6876                           
  6877                           ; BSR set to: 0
  6878  004CE0  AE1E               	btfss	___fltol@exp1^0,7,c
  6879  004CE2  D00D               	goto	l9412
  6880                           
  6881                           ; BSR set to: 0
  6882  004CE4  501E               	movf	___fltol@exp1^0,w,c
  6883  004CE6  0A80               	xorlw	128
  6884  004CE8  0F97               	addlw	151
  6885  004CEA  A0D8               	btfss	status,0,c
  6886  004CEC  D7D2               	goto	u10620
  6887  004CEE                     l9408:
  6888                           
  6889                           ; BSR set to: 0
  6890  004CEE  90D8               	bcf	status,0,c
  6891  004CF0  3218               	rrcf	(___fltol@f1+3)^0,f,c
  6892  004CF2  3217               	rrcf	(___fltol@f1+2)^0,f,c
  6893  004CF4  3216               	rrcf	(___fltol@f1+1)^0,f,c
  6894  004CF6  3215               	rrcf	___fltol@f1^0,f,c
  6895                           
  6896                           ; BSR set to: 0
  6897  004CF8  3E1E               	incfsz	___fltol@exp1^0,f,c
  6898  004CFA  D7F9               	goto	l9408
  6899  004CFC  D00D               	goto	u10670
  6900  004CFE                     l9412:
  6901                           
  6902                           ; BSR set to: 0
  6903  004CFE  0E1F               	movlw	31
  6904  004D00  641E               	cpfsgt	___fltol@exp1^0,c
  6905  004D02  D007               	goto	l9420
  6906  004D04  D7C6               	goto	u10620
  6907  004D06                     l9418:
  6908                           
  6909                           ; BSR set to: 0
  6910  004D06  90D8               	bcf	status,0,c
  6911  004D08  3615               	rlcf	___fltol@f1^0,f,c
  6912  004D0A  3616               	rlcf	(___fltol@f1+1)^0,f,c
  6913  004D0C  3617               	rlcf	(___fltol@f1+2)^0,f,c
  6914  004D0E  3618               	rlcf	(___fltol@f1+3)^0,f,c
  6915  004D10  061E               	decf	___fltol@exp1^0,f,c
  6916  004D12                     l9420:
  6917                           
  6918                           ; BSR set to: 0
  6919  004D12  501E               	movf	___fltol@exp1^0,w,c
  6920  004D14  A4D8               	btfss	status,2,c
  6921  004D16  D7F7               	goto	l9418
  6922  004D18                     u10670:
  6923                           
  6924                           ; BSR set to: 0
  6925  004D18  501D               	movf	___fltol@sign1^0,w,c
  6926  004D1A  B4D8               	btfsc	status,2,c
  6927  004D1C  D008               	goto	l9426
  6928                           
  6929                           ; BSR set to: 0
  6930  004D1E  1E18               	comf	(___fltol@f1+3)^0,f,c
  6931  004D20  1E17               	comf	(___fltol@f1+2)^0,f,c
  6932  004D22  1E16               	comf	(___fltol@f1+1)^0,f,c
  6933  004D24  6C15               	negf	___fltol@f1^0,c
  6934  004D26  0E00               	movlw	0
  6935  004D28  2216               	addwfc	(___fltol@f1+1)^0,f,c
  6936  004D2A  2217               	addwfc	(___fltol@f1+2)^0,f,c
  6937  004D2C  2218               	addwfc	(___fltol@f1+3)^0,f,c
  6938  004D2E                     l9426:
  6939                           
  6940                           ; BSR set to: 0
  6941  004D2E  C015  F015         	movff	___fltol@f1,?___fltol
  6942  004D32  C016  F016         	movff	___fltol@f1+1,?___fltol+1
  6943  004D36  C017  F017         	movff	___fltol@f1+2,?___fltol+2
  6944  004D3A  C018  F018         	movff	___fltol@f1+3,?___fltol+3
  6945                           
  6946                           ; BSR set to: 0
  6947  004D3E  0012               	return		;funcret
  6948  004D40                     __end_of___fltol:
  6949                           	callstack 0
  6950                           
  6951 ;; *************** function ___flsub *****************
  6952 ;; Defined at:
  6953 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  b               4   46[COMRAM] long 
  6956 ;;  a               4   50[COMRAM] long 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;		None
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  4   46[COMRAM] long 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2, status,0, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : 3F/0
  6965 ;;		On exit  : 3F/0
  6966 ;;		Unchanged: 3F/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6968 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6971 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6972 ;;Total ram usage:        8 bytes
  6973 ;; Hardware stack levels used: 1
  6974 ;; Hardware stack levels required when called: 5
  6975 ;; This function calls:
  6976 ;;		___fladd
  6977 ;; This function is called by:
  6978 ;;		_efgtoa
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text19
  6983  0056F6                     __ptext19:
  6984                           	callstack 0
  6985  0056F6                     ___flsub:
  6986                           	callstack 19
  6987                           
  6988                           ; BSR set to: 0
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;incstack = 0
  6992  0056F6  0E00               	movlw	0
  6993  0056F8  1A33               	xorwf	___flsub@a^0,f,c
  6994  0056FA  0E00               	movlw	0
  6995  0056FC  1A34               	xorwf	(___flsub@a+1)^0,f,c
  6996  0056FE  0E00               	movlw	0
  6997  005700  1A35               	xorwf	(___flsub@a+2)^0,f,c
  6998  005702  0E80               	movlw	128
  6999  005704  1A36               	xorwf	(___flsub@a+3)^0,f,c
  7000                           
  7001                           ; BSR set to: 0
  7002  005706  C02F  F015         	movff	___flsub@b,___fladd@b
  7003  00570A  C030  F016         	movff	___flsub@b+1,___fladd@b+1
  7004  00570E  C031  F017         	movff	___flsub@b+2,___fladd@b+2
  7005  005712  C032  F018         	movff	___flsub@b+3,___fladd@b+3
  7006  005716  C033  F019         	movff	___flsub@a,___fladd@a
  7007  00571A  C034  F01A         	movff	___flsub@a+1,___fladd@a+1
  7008  00571E  C035  F01B         	movff	___flsub@a+2,___fladd@a+2
  7009  005722  C036  F01C         	movff	___flsub@a+3,___fladd@a+3
  7010  005726  EC48  F01A         	call	___fladd	;wreg free
  7011  00572A  C015  F02F         	movff	?___fladd,?___flsub
  7012  00572E  C016  F030         	movff	?___fladd+1,?___flsub+1
  7013  005732  C017  F031         	movff	?___fladd+2,?___flsub+2
  7014  005736  C018  F032         	movff	?___fladd+3,?___flsub+3
  7015                           
  7016                           ; BSR set to: 0
  7017  00573A  0012               	return		;funcret
  7018  00573C                     __end_of___flsub:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function ___fladd *****************
  7022 ;; Defined at:
  7023 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  b               4   20[COMRAM] long 
  7026 ;;  a               4   24[COMRAM] long 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  grs             1   35[COMRAM] unsigned char 
  7029 ;;  bexp            1   34[COMRAM] unsigned char 
  7030 ;;  aexp            1   33[COMRAM] unsigned char 
  7031 ;;  signs           1   32[COMRAM] unsigned char 
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  4   20[COMRAM] unsigned char 
  7034 ;; Registers used:
  7035 ;;		wreg, status,2, status,0
  7036 ;; Tracked objects:
  7037 ;;		On entry : 3F/0
  7038 ;;		On exit  : 3F/0
  7039 ;;		Unchanged: 3F/0
  7040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7041 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7042 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7043 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7044 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7045 ;;Total ram usage:       16 bytes
  7046 ;; Hardware stack levels used: 1
  7047 ;; Hardware stack levels required when called: 4
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		___flsub
  7052 ;;		_efgtoa
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text20
  7057  003490                     __ptext20:
  7058                           	callstack 0
  7059  003490                     ___fladd:
  7060                           	callstack 19
  7061                           
  7062                           ; BSR set to: 0
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;incstack = 0
  7066  003490  5018               	movf	(___fladd@b+3)^0,w,c
  7067  003492  0B80               	andlw	128
  7068  003494  6E21               	movwf	___fladd@signs^0,c
  7069  003496  5018               	movf	(___fladd@b+3)^0,w,c
  7070  003498  2418               	addwf	(___fladd@b+3)^0,w,c
  7071  00349A  6E23               	movwf	___fladd@bexp^0,c
  7072                           
  7073                           ; BSR set to: 0
  7074  00349C  BE17               	btfsc	(___fladd@b+2)^0,7,c
  7075                           
  7076                           ; BSR set to: 0
  7077  00349E  8023               	bsf	___fladd@bexp^0,0,c
  7078                           
  7079                           ; BSR set to: 0
  7080  0034A0  5023               	movf	___fladd@bexp^0,w,c
  7081  0034A2  B4D8               	btfsc	status,2,c
  7082  0034A4  D00D               	goto	l8782
  7083                           
  7084                           ; BSR set to: 0
  7085  0034A6  2823               	incf	___fladd@bexp^0,w,c
  7086  0034A8  A4D8               	btfss	status,2,c
  7087  0034AA  D008               	goto	l8778
  7088                           
  7089                           ; BSR set to: 0
  7090  0034AC  0E00               	movlw	0
  7091  0034AE  6E15               	movwf	___fladd@b^0,c
  7092  0034B0  0E00               	movlw	0
  7093  0034B2  6E16               	movwf	(___fladd@b+1)^0,c
  7094  0034B4  0E00               	movlw	0
  7095  0034B6  6E17               	movwf	(___fladd@b+2)^0,c
  7096  0034B8  0E00               	movlw	0
  7097  0034BA  6E18               	movwf	(___fladd@b+3)^0,c
  7098  0034BC                     l8778:
  7099                           
  7100                           ; BSR set to: 0
  7101  0034BC  8E17               	bsf	(___fladd@b+2)^0,7,c
  7102  0034BE  D006               	goto	L8
  7103  0034C0                     l8782:
  7104                           
  7105                           ; BSR set to: 0
  7106  0034C0  0E00               	movlw	0
  7107  0034C2  6E15               	movwf	___fladd@b^0,c
  7108  0034C4  0E00               	movlw	0
  7109  0034C6  6E16               	movwf	(___fladd@b+1)^0,c
  7110  0034C8  0E00               	movlw	0
  7111  0034CA  6E17               	movwf	(___fladd@b+2)^0,c
  7112  0034CC                     L8:
  7113  0034CC  0E00               	movlw	0
  7114  0034CE  6E18               	movwf	(___fladd@b+3)^0,c
  7115                           
  7116                           ; BSR set to: 0
  7117  0034D0  501C               	movf	(___fladd@a+3)^0,w,c
  7118  0034D2  0B80               	andlw	128
  7119  0034D4  6E22               	movwf	___fladd@aexp^0,c
  7120                           
  7121                           ; BSR set to: 0
  7122  0034D6  5021               	movf	___fladd@signs^0,w,c
  7123  0034D8  1822               	xorwf	___fladd@aexp^0,w,c
  7124  0034DA  A4D8               	btfss	status,2,c
  7125                           
  7126                           ; BSR set to: 0
  7127  0034DC  8C21               	bsf	___fladd@signs^0,6,c
  7128                           
  7129                           ; BSR set to: 0
  7130  0034DE  501C               	movf	(___fladd@a+3)^0,w,c
  7131  0034E0  241C               	addwf	(___fladd@a+3)^0,w,c
  7132  0034E2  6E22               	movwf	___fladd@aexp^0,c
  7133                           
  7134                           ; BSR set to: 0
  7135  0034E4  BE1B               	btfsc	(___fladd@a+2)^0,7,c
  7136                           
  7137                           ; BSR set to: 0
  7138  0034E6  8022               	bsf	___fladd@aexp^0,0,c
  7139                           
  7140                           ; BSR set to: 0
  7141  0034E8  5022               	movf	___fladd@aexp^0,w,c
  7142  0034EA  B4D8               	btfsc	status,2,c
  7143  0034EC  D00D               	goto	l8806
  7144                           
  7145                           ; BSR set to: 0
  7146  0034EE  2822               	incf	___fladd@aexp^0,w,c
  7147  0034F0  A4D8               	btfss	status,2,c
  7148  0034F2  D008               	goto	l8802
  7149                           
  7150                           ; BSR set to: 0
  7151  0034F4  0E00               	movlw	0
  7152  0034F6  6E19               	movwf	___fladd@a^0,c
  7153  0034F8  0E00               	movlw	0
  7154  0034FA  6E1A               	movwf	(___fladd@a+1)^0,c
  7155  0034FC  0E00               	movlw	0
  7156  0034FE  6E1B               	movwf	(___fladd@a+2)^0,c
  7157  003500  0E00               	movlw	0
  7158  003502  6E1C               	movwf	(___fladd@a+3)^0,c
  7159  003504                     l8802:
  7160                           
  7161                           ; BSR set to: 0
  7162  003504  8E1B               	bsf	(___fladd@a+2)^0,7,c
  7163  003506  D006               	goto	L9
  7164  003508                     l8806:
  7165                           
  7166                           ; BSR set to: 0
  7167  003508  0E00               	movlw	0
  7168  00350A  6E19               	movwf	___fladd@a^0,c
  7169  00350C  0E00               	movlw	0
  7170  00350E  6E1A               	movwf	(___fladd@a+1)^0,c
  7171  003510  0E00               	movlw	0
  7172  003512  6E1B               	movwf	(___fladd@a+2)^0,c
  7173  003514                     L9:
  7174  003514  0E00               	movlw	0
  7175  003516  6E1C               	movwf	(___fladd@a+3)^0,c
  7176                           
  7177                           ; BSR set to: 0
  7178  003518  5023               	movf	___fladd@bexp^0,w,c
  7179  00351A  5C22               	subwf	___fladd@aexp^0,w,c
  7180  00351C  B0D8               	btfsc	status,0,c
  7181  00351E  D022               	goto	l8844
  7182                           
  7183                           ; BSR set to: 0
  7184  003520  AC21               	btfss	___fladd@signs^0,6,c
  7185  003522  D002               	goto	l8814
  7186                           
  7187                           ; BSR set to: 0
  7188  003524  0E80               	movlw	128
  7189  003526  1A21               	xorwf	___fladd@signs^0,f,c
  7190  003528                     l8814:
  7191                           
  7192                           ; BSR set to: 0
  7193  003528  C023  F024         	movff	___fladd@bexp,___fladd@grs
  7194                           
  7195                           ; BSR set to: 0
  7196  00352C  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7197                           
  7198                           ; BSR set to: 0
  7199  003530  C024  F022         	movff	___fladd@grs,___fladd@aexp
  7200                           
  7201                           ; BSR set to: 0
  7202  003534  C015  F024         	movff	___fladd@b,___fladd@grs
  7203                           
  7204                           ; BSR set to: 0
  7205  003538  C019  F015         	movff	___fladd@a,___fladd@b
  7206                           
  7207                           ; BSR set to: 0
  7208  00353C  C024  F019         	movff	___fladd@grs,___fladd@a
  7209                           
  7210                           ; BSR set to: 0
  7211  003540  C016  F024         	movff	___fladd@b+1,___fladd@grs
  7212                           
  7213                           ; BSR set to: 0
  7214  003544  C01A  F016         	movff	___fladd@a+1,___fladd@b+1
  7215                           
  7216                           ; BSR set to: 0
  7217  003548  C024  F01A         	movff	___fladd@grs,___fladd@a+1
  7218                           
  7219                           ; BSR set to: 0
  7220  00354C  C017  F024         	movff	___fladd@b+2,___fladd@grs
  7221                           
  7222                           ; BSR set to: 0
  7223  003550  C01B  F017         	movff	___fladd@a+2,___fladd@b+2
  7224                           
  7225                           ; BSR set to: 0
  7226  003554  C024  F01B         	movff	___fladd@grs,___fladd@a+2
  7227                           
  7228                           ; BSR set to: 0
  7229  003558  C018  F024         	movff	___fladd@b+3,___fladd@grs
  7230                           
  7231                           ; BSR set to: 0
  7232  00355C  C01C  F018         	movff	___fladd@a+3,___fladd@b+3
  7233                           
  7234                           ; BSR set to: 0
  7235  003560  C024  F01C         	movff	___fladd@grs,___fladd@a+3
  7236  003564                     l8844:
  7237                           
  7238                           ; BSR set to: 0
  7239  003564  0E00               	movlw	0
  7240  003566  6E24               	movwf	___fladd@grs^0,c
  7241                           
  7242                           ; BSR set to: 0
  7243  003568  5023               	movf	___fladd@bexp^0,w,c
  7244  00356A  C022  F01D         	movff	___fladd@aexp,??___fladd
  7245  00356E  6A1E               	clrf	(??___fladd+1)^0,c
  7246  003570  5E1D               	subwf	??___fladd^0,f,c
  7247  003572  0E00               	movlw	0
  7248  003574  5A1E               	subwfb	(??___fladd+1)^0,f,c
  7249  003576  BE1E               	btfsc	(??___fladd+1)^0,7,c
  7250  003578  D02C               	goto	l1668
  7251  00357A  501E               	movf	(??___fladd+1)^0,w,c
  7252  00357C  E104               	bnz	u9660
  7253  00357E  0E1A               	movlw	26
  7254  003580  5C1D               	subwf	??___fladd^0,w,c
  7255  003582  A0D8               	btfss	status,0,c
  7256  003584  D026               	goto	l1668
  7257  003586                     u9660:
  7258                           
  7259                           ; BSR set to: 0
  7260  003586  5015               	movf	___fladd@b^0,w,c
  7261  003588  1016               	iorwf	(___fladd@b+1)^0,w,c
  7262  00358A  1017               	iorwf	(___fladd@b+2)^0,w,c
  7263  00358C  1018               	iorwf	(___fladd@b+3)^0,w,c
  7264  00358E  B4D8               	btfsc	status,2,c
  7265  003590  D002               	goto	u9670
  7266  003592  0E01               	movlw	1
  7267  003594  D001               	goto	u9680
  7268  003596                     u9670:
  7269  003596  0E00               	movlw	0
  7270  003598                     u9680:
  7271  003598  6E24               	movwf	___fladd@grs^0,c
  7272                           
  7273                           ; BSR set to: 0
  7274  00359A  0E00               	movlw	0
  7275  00359C  6E15               	movwf	___fladd@b^0,c
  7276  00359E  0E00               	movlw	0
  7277  0035A0  6E16               	movwf	(___fladd@b+1)^0,c
  7278  0035A2  0E00               	movlw	0
  7279  0035A4  6E17               	movwf	(___fladd@b+2)^0,c
  7280  0035A6  0E00               	movlw	0
  7281  0035A8  6E18               	movwf	(___fladd@b+3)^0,c
  7282                           
  7283                           ; BSR set to: 0
  7284  0035AA  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7285  0035AE  D015               	goto	u9710
  7286  0035B0                     l1669:
  7287                           
  7288                           ; BSR set to: 0
  7289  0035B0  A024               	btfss	___fladd@grs^0,0,c
  7290  0035B2  D005               	goto	l8856
  7291                           
  7292                           ; BSR set to: 0
  7293  0035B4  90D8               	bcf	status,0,c
  7294  0035B6  3024               	rrcf	___fladd@grs^0,w,c
  7295  0035B8  0901               	iorlw	1
  7296  0035BA  6E24               	movwf	___fladd@grs^0,c
  7297  0035BC  D002               	goto	l8858
  7298  0035BE                     l8856:
  7299                           
  7300                           ; BSR set to: 0
  7301  0035BE  90D8               	bcf	status,0,c
  7302  0035C0  3224               	rrcf	___fladd@grs^0,f,c
  7303  0035C2                     l8858:
  7304                           
  7305                           ; BSR set to: 0
  7306  0035C2  B015               	btfsc	___fladd@b^0,0,c
  7307                           
  7308                           ; BSR set to: 0
  7309  0035C4  8E24               	bsf	___fladd@grs^0,7,c
  7310                           
  7311                           ; BSR set to: 0
  7312  0035C6  3418               	rlcf	(___fladd@b+3)^0,w,c
  7313  0035C8  3218               	rrcf	(___fladd@b+3)^0,f,c
  7314  0035CA  3217               	rrcf	(___fladd@b+2)^0,f,c
  7315  0035CC  3216               	rrcf	(___fladd@b+1)^0,f,c
  7316  0035CE  3215               	rrcf	___fladd@b^0,f,c
  7317                           
  7318                           ; BSR set to: 0
  7319  0035D0  2A23               	incf	___fladd@bexp^0,f,c
  7320  0035D2                     l1668:
  7321                           
  7322                           ; BSR set to: 0
  7323  0035D2  5022               	movf	___fladd@aexp^0,w,c
  7324  0035D4  5C23               	subwf	___fladd@bexp^0,w,c
  7325  0035D6  A0D8               	btfss	status,0,c
  7326  0035D8  D7EB               	goto	l1669
  7327  0035DA                     u9710:
  7328                           
  7329                           ; BSR set to: 0
  7330  0035DA  BC21               	btfsc	___fladd@signs^0,6,c
  7331  0035DC  D028               	goto	l8890
  7332                           
  7333                           ; BSR set to: 0
  7334  0035DE  5023               	movf	___fladd@bexp^0,w,c
  7335  0035E0  A4D8               	btfss	status,2,c
  7336  0035E2  D009               	goto	l8872
  7337                           
  7338                           ; BSR set to: 0
  7339  0035E4  0E00               	movlw	0
  7340  0035E6  6E15               	movwf	?___fladd^0,c
  7341  0035E8  0E00               	movlw	0
  7342  0035EA  6E16               	movwf	(?___fladd+1)^0,c
  7343  0035EC  0E00               	movlw	0
  7344  0035EE  6E17               	movwf	(?___fladd+2)^0,c
  7345  0035F0  0E00               	movlw	0
  7346  0035F2  6E18               	movwf	(?___fladd+3)^0,c
  7347  0035F4  0012               	return	
  7348  0035F6                     l8872:
  7349                           
  7350                           ; BSR set to: 0
  7351  0035F6  5019               	movf	___fladd@a^0,w,c
  7352  0035F8  2615               	addwf	___fladd@b^0,f,c
  7353  0035FA  501A               	movf	(___fladd@a+1)^0,w,c
  7354  0035FC  2216               	addwfc	(___fladd@b+1)^0,f,c
  7355  0035FE  501B               	movf	(___fladd@a+2)^0,w,c
  7356  003600  2217               	addwfc	(___fladd@b+2)^0,f,c
  7357  003602  501C               	movf	(___fladd@a+3)^0,w,c
  7358  003604  2218               	addwfc	(___fladd@b+3)^0,f,c
  7359                           
  7360                           ; BSR set to: 0
  7361  003606  A018               	btfss	(___fladd@b+3)^0,0,c
  7362  003608  D071               	goto	u9840
  7363                           
  7364                           ; BSR set to: 0
  7365  00360A  A024               	btfss	___fladd@grs^0,0,c
  7366  00360C  D005               	goto	l8880
  7367                           
  7368                           ; BSR set to: 0
  7369  00360E  90D8               	bcf	status,0,c
  7370  003610  3024               	rrcf	___fladd@grs^0,w,c
  7371  003612  0901               	iorlw	1
  7372  003614  6E24               	movwf	___fladd@grs^0,c
  7373  003616  D002               	goto	l8882
  7374  003618                     l8880:
  7375                           
  7376                           ; BSR set to: 0
  7377  003618  90D8               	bcf	status,0,c
  7378  00361A  3224               	rrcf	___fladd@grs^0,f,c
  7379  00361C                     l8882:
  7380                           
  7381                           ; BSR set to: 0
  7382  00361C  B015               	btfsc	___fladd@b^0,0,c
  7383                           
  7384                           ; BSR set to: 0
  7385  00361E  8E24               	bsf	___fladd@grs^0,7,c
  7386                           
  7387                           ; BSR set to: 0
  7388  003620  3418               	rlcf	(___fladd@b+3)^0,w,c
  7389  003622  3218               	rrcf	(___fladd@b+3)^0,f,c
  7390  003624  3217               	rrcf	(___fladd@b+2)^0,f,c
  7391  003626  3216               	rrcf	(___fladd@b+1)^0,f,c
  7392  003628  3215               	rrcf	___fladd@b^0,f,c
  7393                           
  7394                           ; BSR set to: 0
  7395  00362A  2A23               	incf	___fladd@bexp^0,f,c
  7396  00362C  D05F               	goto	u9840
  7397  00362E                     l8890:
  7398                           
  7399                           ; BSR set to: 0
  7400  00362E  5019               	movf	___fladd@a^0,w,c
  7401  003630  5C15               	subwf	___fladd@b^0,w,c
  7402  003632  501A               	movf	(___fladd@a+1)^0,w,c
  7403  003634  5816               	subwfb	(___fladd@b+1)^0,w,c
  7404  003636  501B               	movf	(___fladd@a+2)^0,w,c
  7405  003638  5817               	subwfb	(___fladd@b+2)^0,w,c
  7406  00363A  5018               	movf	(___fladd@b+3)^0,w,c
  7407  00363C  0A80               	xorlw	128
  7408  00363E  6E1D               	movwf	??___fladd^0,c
  7409  003640  501C               	movf	(___fladd@a+3)^0,w,c
  7410  003642  0A80               	xorlw	128
  7411  003644  581D               	subwfb	??___fladd^0,w,c
  7412  003646  B0D8               	btfsc	status,0,c
  7413  003648  D025               	goto	l8900
  7414                           
  7415                           ; BSR set to: 0
  7416  00364A  5015               	movf	___fladd@b^0,w,c
  7417  00364C  5C19               	subwf	___fladd@a^0,w,c
  7418  00364E  6E1D               	movwf	??___fladd^0,c
  7419  003650  5016               	movf	(___fladd@b+1)^0,w,c
  7420  003652  581A               	subwfb	(___fladd@a+1)^0,w,c
  7421  003654  6E1E               	movwf	(??___fladd+1)^0,c
  7422  003656  5017               	movf	(___fladd@b+2)^0,w,c
  7423  003658  581B               	subwfb	(___fladd@a+2)^0,w,c
  7424  00365A  6E1F               	movwf	(??___fladd+2)^0,c
  7425  00365C  5018               	movf	(___fladd@b+3)^0,w,c
  7426  00365E  581C               	subwfb	(___fladd@a+3)^0,w,c
  7427  003660  6E20               	movwf	(??___fladd+3)^0,c
  7428  003662  0EFF               	movlw	255
  7429  003664  241D               	addwf	??___fladd^0,w,c
  7430  003666  6E15               	movwf	___fladd@b^0,c
  7431  003668  0EFF               	movlw	255
  7432  00366A  201E               	addwfc	(??___fladd+1)^0,w,c
  7433  00366C  6E16               	movwf	(___fladd@b+1)^0,c
  7434  00366E  0EFF               	movlw	255
  7435  003670  201F               	addwfc	(??___fladd+2)^0,w,c
  7436  003672  6E17               	movwf	(___fladd@b+2)^0,c
  7437  003674  0EFF               	movlw	255
  7438  003676  2020               	addwfc	(??___fladd+3)^0,w,c
  7439  003678  6E18               	movwf	(___fladd@b+3)^0,c
  7440  00367A  0E80               	movlw	128
  7441  00367C  1A21               	xorwf	___fladd@signs^0,f,c
  7442                           
  7443                           ; BSR set to: 0
  7444  00367E  6C24               	negf	___fladd@grs^0,c
  7445                           
  7446                           ; BSR set to: 0
  7447  003680  5024               	movf	___fladd@grs^0,w,c
  7448  003682  A4D8               	btfss	status,2,c
  7449  003684  D00F               	goto	l1684
  7450                           
  7451                           ; BSR set to: 0
  7452  003686  0E01               	movlw	1
  7453  003688  2615               	addwf	___fladd@b^0,f,c
  7454  00368A  0E00               	movlw	0
  7455  00368C  2216               	addwfc	(___fladd@b+1)^0,f,c
  7456  00368E  2217               	addwfc	(___fladd@b+2)^0,f,c
  7457  003690  2218               	addwfc	(___fladd@b+3)^0,f,c
  7458  003692  D008               	goto	l1684
  7459  003694                     l8900:
  7460                           
  7461                           ; BSR set to: 0
  7462  003694  5019               	movf	___fladd@a^0,w,c
  7463  003696  5E15               	subwf	___fladd@b^0,f,c
  7464  003698  501A               	movf	(___fladd@a+1)^0,w,c
  7465  00369A  5A16               	subwfb	(___fladd@b+1)^0,f,c
  7466  00369C  501B               	movf	(___fladd@a+2)^0,w,c
  7467  00369E  5A17               	subwfb	(___fladd@b+2)^0,f,c
  7468  0036A0  501C               	movf	(___fladd@a+3)^0,w,c
  7469  0036A2  5A18               	subwfb	(___fladd@b+3)^0,f,c
  7470  0036A4                     l1684:
  7471                           
  7472                           ; BSR set to: 0
  7473  0036A4  5015               	movf	___fladd@b^0,w,c
  7474  0036A6  1016               	iorwf	(___fladd@b+1)^0,w,c
  7475  0036A8  1017               	iorwf	(___fladd@b+2)^0,w,c
  7476  0036AA  1018               	iorwf	(___fladd@b+3)^0,w,c
  7477  0036AC  A4D8               	btfss	status,2,c
  7478  0036AE  D01C               	goto	l8924
  7479                           
  7480                           ; BSR set to: 0
  7481  0036B0  5024               	movf	___fladd@grs^0,w,c
  7482  0036B2  A4D8               	btfss	status,2,c
  7483  0036B4  D019               	goto	l8924
  7484                           
  7485                           ; BSR set to: 0
  7486  0036B6  0E00               	movlw	0
  7487  0036B8  6E15               	movwf	?___fladd^0,c
  7488  0036BA  0E00               	movlw	0
  7489  0036BC  6E16               	movwf	(?___fladd+1)^0,c
  7490  0036BE  0E00               	movlw	0
  7491  0036C0  6E17               	movwf	(?___fladd+2)^0,c
  7492  0036C2  0E00               	movlw	0
  7493  0036C4  6E18               	movwf	(?___fladd+3)^0,c
  7494  0036C6  0012               	return	
  7495  0036C8                     l8908:
  7496                           
  7497                           ; BSR set to: 0
  7498  0036C8  90D8               	bcf	status,0,c
  7499  0036CA  3615               	rlcf	___fladd@b^0,f,c
  7500  0036CC  3616               	rlcf	(___fladd@b+1)^0,f,c
  7501  0036CE  3617               	rlcf	(___fladd@b+2)^0,f,c
  7502  0036D0  3618               	rlcf	(___fladd@b+3)^0,f,c
  7503                           
  7504                           ; BSR set to: 0
  7505  0036D2  BE24               	btfsc	___fladd@grs^0,7,c
  7506                           
  7507                           ; BSR set to: 0
  7508  0036D4  8015               	bsf	___fladd@b^0,0,c
  7509                           
  7510                           ; BSR set to: 0
  7511  0036D6  A024               	btfss	___fladd@grs^0,0,c
  7512  0036D8  D002               	goto	l8918
  7513                           
  7514                           ; BSR set to: 0
  7515  0036DA  80D8               	bsf	status,0,c
  7516  0036DC  D001               	goto	L10
  7517  0036DE                     l8918:
  7518                           
  7519                           ; BSR set to: 0
  7520  0036DE  90D8               	bcf	status,0,c
  7521  0036E0                     L10:
  7522  0036E0  3624               	rlcf	___fladd@grs^0,f,c
  7523                           
  7524                           ; BSR set to: 0
  7525  0036E2  5023               	movf	___fladd@bexp^0,w,c
  7526  0036E4  A4D8               	btfss	status,2,c
  7527                           
  7528                           ; BSR set to: 0
  7529  0036E6  0623               	decf	___fladd@bexp^0,f,c
  7530  0036E8                     l8924:
  7531                           
  7532                           ; BSR set to: 0
  7533  0036E8  AE17               	btfss	(___fladd@b+2)^0,7,c
  7534  0036EA  D7EE               	goto	l8908
  7535  0036EC                     u9840:
  7536                           
  7537                           ; BSR set to: 0
  7538  0036EC  0E00               	movlw	0
  7539  0036EE  6E22               	movwf	___fladd@aexp^0,c
  7540                           
  7541                           ; BSR set to: 0
  7542  0036F0  AE24               	btfss	___fladd@grs^0,7,c
  7543  0036F2  D00B               	goto	l1693
  7544                           
  7545                           ; BSR set to: 0
  7546  0036F4  C024  F01D         	movff	___fladd@grs,??___fladd
  7547  0036F8  0E7F               	movlw	127
  7548  0036FA  161D               	andwf	??___fladd^0,f,c
  7549  0036FC  B4D8               	btfsc	status,2,c
  7550  0036FE  D003               	goto	l1694
  7551  003700                     u9860:
  7552                           
  7553                           ; BSR set to: 0
  7554  003700  0E01               	movlw	1
  7555  003702  6E22               	movwf	___fladd@aexp^0,c
  7556  003704  D002               	goto	l1693
  7557  003706                     l1694:
  7558                           
  7559                           ; BSR set to: 0
  7560  003706  B015               	btfsc	___fladd@b^0,0,c
  7561  003708  D7FB               	goto	u9860
  7562  00370A                     l1693:
  7563                           
  7564                           ; BSR set to: 0
  7565  00370A  5022               	movf	___fladd@aexp^0,w,c
  7566  00370C  B4D8               	btfsc	status,2,c
  7567  00370E  D020               	goto	l8944
  7568                           
  7569                           ; BSR set to: 0
  7570  003710  0E01               	movlw	1
  7571  003712  2615               	addwf	___fladd@b^0,f,c
  7572  003714  0E00               	movlw	0
  7573  003716  2216               	addwfc	(___fladd@b+1)^0,f,c
  7574  003718  2217               	addwfc	(___fladd@b+2)^0,f,c
  7575  00371A  2218               	addwfc	(___fladd@b+3)^0,f,c
  7576                           
  7577                           ; BSR set to: 0
  7578  00371C  A018               	btfss	(___fladd@b+3)^0,0,c
  7579  00371E  D018               	goto	l8944
  7580                           
  7581                           ; BSR set to: 0
  7582  003720  C015  F01D         	movff	___fladd@b,??___fladd
  7583  003724  C016  F01E         	movff	___fladd@b+1,??___fladd+1
  7584  003728  C017  F01F         	movff	___fladd@b+2,??___fladd+2
  7585  00372C  C018  F020         	movff	___fladd@b+3,??___fladd+3
  7586  003730  3420               	rlcf	(??___fladd+3)^0,w,c
  7587  003732  3220               	rrcf	(??___fladd+3)^0,f,c
  7588  003734  321F               	rrcf	(??___fladd+2)^0,f,c
  7589  003736  321E               	rrcf	(??___fladd+1)^0,f,c
  7590  003738  321D               	rrcf	??___fladd^0,f,c
  7591  00373A  C01D  F015         	movff	??___fladd,___fladd@b
  7592  00373E  C01E  F016         	movff	??___fladd+1,___fladd@b+1
  7593  003742  C01F  F017         	movff	??___fladd+2,___fladd@b+2
  7594  003746  C020  F018         	movff	??___fladd+3,___fladd@b+3
  7595  00374A  2823               	incf	___fladd@bexp^0,w,c
  7596  00374C  A4D8               	btfss	status,2,c
  7597                           
  7598                           ; BSR set to: 0
  7599  00374E  2A23               	incf	___fladd@bexp^0,f,c
  7600  003750                     l8944:
  7601                           
  7602                           ; BSR set to: 0
  7603  003750  2823               	incf	___fladd@bexp^0,w,c
  7604  003752  B4D8               	btfsc	status,2,c
  7605  003754  D003               	goto	u9920
  7606                           
  7607                           ; BSR set to: 0
  7608  003756  5023               	movf	___fladd@bexp^0,w,c
  7609  003758  A4D8               	btfss	status,2,c
  7610  00375A  D00D               	goto	l8952
  7611  00375C                     u9920:
  7612                           
  7613                           ; BSR set to: 0
  7614  00375C  0E00               	movlw	0
  7615  00375E  6E15               	movwf	___fladd@b^0,c
  7616  003760  0E00               	movlw	0
  7617  003762  6E16               	movwf	(___fladd@b+1)^0,c
  7618  003764  0E00               	movlw	0
  7619  003766  6E17               	movwf	(___fladd@b+2)^0,c
  7620  003768  0E00               	movlw	0
  7621  00376A  6E18               	movwf	(___fladd@b+3)^0,c
  7622  00376C  5023               	movf	___fladd@bexp^0,w,c
  7623  00376E  A4D8               	btfss	status,2,c
  7624  003770  D002               	goto	l8952
  7625                           
  7626                           ; BSR set to: 0
  7627  003772  0E00               	movlw	0
  7628  003774  6E21               	movwf	___fladd@signs^0,c
  7629  003776                     l8952:
  7630                           
  7631                           ; BSR set to: 0
  7632  003776  A023               	btfss	___fladd@bexp^0,0,c
  7633  003778  D002               	goto	l8956
  7634                           
  7635                           ; BSR set to: 0
  7636  00377A  8E17               	bsf	(___fladd@b+2)^0,7,c
  7637  00377C  D001               	goto	l8958
  7638  00377E                     l8956:
  7639                           
  7640                           ; BSR set to: 0
  7641  00377E  9E17               	bcf	(___fladd@b+2)^0,7,c
  7642  003780                     l8958:
  7643                           
  7644                           ; BSR set to: 0
  7645  003780  90D8               	bcf	status,0,c
  7646  003782  3023               	rrcf	___fladd@bexp^0,w,c
  7647  003784  6E18               	movwf	(___fladd@b+3)^0,c
  7648                           
  7649                           ; BSR set to: 0
  7650  003786  BE21               	btfsc	___fladd@signs^0,7,c
  7651                           
  7652                           ; BSR set to: 0
  7653  003788  8E18               	bsf	(___fladd@b+3)^0,7,c
  7654                           
  7655                           ; BSR set to: 0
  7656  00378A  C015  F015         	movff	___fladd@b,?___fladd
  7657  00378E  C016  F016         	movff	___fladd@b+1,?___fladd+1
  7658  003792  C017  F017         	movff	___fladd@b+2,?___fladd+2
  7659  003796  C018  F018         	movff	___fladd@b+3,?___fladd+3
  7660                           
  7661                           ; BSR set to: 0
  7662  00379A  0012               	return		;funcret
  7663  00379C                     __end_of___fladd:
  7664                           	callstack 0
  7665                           
  7666 ;; *************** function ___flneg *****************
  7667 ;; Defined at:
  7668 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  f1              4   20[COMRAM] unsigned char 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  4   20[COMRAM] unsigned char 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2, status,0
  7677 ;; Tracked objects:
  7678 ;;		On entry : 3F/0
  7679 ;;		On exit  : 3F/0
  7680 ;;		Unchanged: 3F/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;Total ram usage:        4 bytes
  7687 ;; Hardware stack levels used: 1
  7688 ;; Hardware stack levels required when called: 4
  7689 ;; This function calls:
  7690 ;;		Nothing
  7691 ;; This function is called by:
  7692 ;;		_efgtoa
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text21
  7697  005A42                     __ptext21:
  7698                           	callstack 0
  7699  005A42                     ___flneg:
  7700                           	callstack 20
  7701                           
  7702                           ; BSR set to: 0
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;incstack = 0
  7706  005A42  5015               	movf	___flneg@f1^0,w,c
  7707  005A44  1016               	iorwf	(___flneg@f1+1)^0,w,c
  7708  005A46  1017               	iorwf	(___flneg@f1+2)^0,w,c
  7709  005A48  1018               	iorwf	(___flneg@f1+3)^0,w,c
  7710  005A4A  B4D8               	btfsc	status,2,c
  7711  005A4C  D008               	goto	l9382
  7712                           
  7713                           ; BSR set to: 0
  7714  005A4E  0E00               	movlw	0
  7715  005A50  1A15               	xorwf	___flneg@f1^0,f,c
  7716  005A52  0E00               	movlw	0
  7717  005A54  1A16               	xorwf	(___flneg@f1+1)^0,f,c
  7718  005A56  0E00               	movlw	0
  7719  005A58  1A17               	xorwf	(___flneg@f1+2)^0,f,c
  7720  005A5A  0E80               	movlw	128
  7721  005A5C  1A18               	xorwf	(___flneg@f1+3)^0,f,c
  7722  005A5E                     l9382:
  7723                           
  7724                           ; BSR set to: 0
  7725  005A5E  C015  F015         	movff	___flneg@f1,?___flneg
  7726  005A62  C016  F016         	movff	___flneg@f1+1,?___flneg+1
  7727  005A66  C017  F017         	movff	___flneg@f1+2,?___flneg+2
  7728  005A6A  C018  F018         	movff	___flneg@f1+3,?___flneg+3
  7729                           
  7730                           ; BSR set to: 0
  7731  005A6E  0012               	return		;funcret
  7732  005A70                     __end_of___flneg:
  7733                           	callstack 0
  7734                           
  7735 ;; *************** function ___flmul *****************
  7736 ;; Defined at:
  7737 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  b               4   34[COMRAM] unsigned char 
  7740 ;;  a               4   38[COMRAM] unsigned char 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  prod            4    7[BANK0 ] struct .
  7743 ;;  grs             4    3[BANK0 ] unsigned long 
  7744 ;;  temp            2   11[BANK0 ] struct .
  7745 ;;  bexp            1    2[BANK0 ] unsigned char 
  7746 ;;  aexp            1    1[BANK0 ] unsigned char 
  7747 ;;  sign            1    0[BANK0 ] unsigned char 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  4   34[COMRAM] unsigned char 
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0, prodl, prodh
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 3F/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7757 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7758 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7759 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7760 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7761 ;;Total ram usage:       25 bytes
  7762 ;; Hardware stack levels used: 1
  7763 ;; Hardware stack levels required when called: 4
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_main
  7768 ;;		_efgtoa
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text22
  7773  00313E                     __ptext22:
  7774                           	callstack 0
  7775  00313E                     ___flmul:
  7776                           	callstack 20
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;incstack = 0
  7780  00313E  5026               	movf	(___flmul@b+3)^0,w,c
  7781  003140  0B80               	andlw	128
  7782  003142  0100               	movlb	0	; () banked
  7783  003144  6F60               	movwf	___flmul@sign& (0+255),b
  7784  003146  5026               	movf	(___flmul@b+3)^0,w,c
  7785  003148  2426               	addwf	(___flmul@b+3)^0,w,c
  7786  00314A  6F62               	movwf	___flmul@bexp& (0+255),b
  7787                           
  7788                           ; BSR set to: 0
  7789  00314C  BE25               	btfsc	(___flmul@b+2)^0,7,c
  7790                           
  7791                           ; BSR set to: 0
  7792  00314E  8162               	bsf	___flmul@bexp& (0+255),0,b
  7793                           
  7794                           ; BSR set to: 0
  7795  003150  5162               	movf	___flmul@bexp& (0+255),w,b
  7796  003152  B4D8               	btfsc	status,2,c
  7797  003154  D00D               	goto	l9138
  7798                           
  7799                           ; BSR set to: 0
  7800  003156  2962               	incf	___flmul@bexp& (0+255),w,b
  7801  003158  A4D8               	btfss	status,2,c
  7802  00315A  D008               	goto	l9136
  7803                           
  7804                           ; BSR set to: 0
  7805  00315C  0E00               	movlw	0
  7806  00315E  6E23               	movwf	___flmul@b^0,c
  7807  003160  0E00               	movlw	0
  7808  003162  6E24               	movwf	(___flmul@b+1)^0,c
  7809  003164  0E00               	movlw	0
  7810  003166  6E25               	movwf	(___flmul@b+2)^0,c
  7811  003168  0E00               	movlw	0
  7812  00316A  6E26               	movwf	(___flmul@b+3)^0,c
  7813  00316C                     l9136:
  7814                           
  7815                           ; BSR set to: 0
  7816  00316C  8E25               	bsf	(___flmul@b+2)^0,7,c
  7817  00316E  D008               	goto	l9140
  7818  003170                     l9138:
  7819                           
  7820                           ; BSR set to: 0
  7821  003170  0E00               	movlw	0
  7822  003172  6E23               	movwf	___flmul@b^0,c
  7823  003174  0E00               	movlw	0
  7824  003176  6E24               	movwf	(___flmul@b+1)^0,c
  7825  003178  0E00               	movlw	0
  7826  00317A  6E25               	movwf	(___flmul@b+2)^0,c
  7827  00317C  0E00               	movlw	0
  7828  00317E  6E26               	movwf	(___flmul@b+3)^0,c
  7829  003180                     l9140:
  7830                           
  7831                           ; BSR set to: 0
  7832  003180  502A               	movf	(___flmul@a+3)^0,w,c
  7833  003182  0B80               	andlw	128
  7834  003184  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7835                           
  7836                           ; BSR set to: 0
  7837  003186  502A               	movf	(___flmul@a+3)^0,w,c
  7838  003188  242A               	addwf	(___flmul@a+3)^0,w,c
  7839  00318A  6F61               	movwf	___flmul@aexp& (0+255),b
  7840                           
  7841                           ; BSR set to: 0
  7842  00318C  BE29               	btfsc	(___flmul@a+2)^0,7,c
  7843                           
  7844                           ; BSR set to: 0
  7845  00318E  8161               	bsf	___flmul@aexp& (0+255),0,b
  7846                           
  7847                           ; BSR set to: 0
  7848  003190  5161               	movf	___flmul@aexp& (0+255),w,b
  7849  003192  B4D8               	btfsc	status,2,c
  7850  003194  D00D               	goto	l9156
  7851                           
  7852                           ; BSR set to: 0
  7853  003196  2961               	incf	___flmul@aexp& (0+255),w,b
  7854  003198  A4D8               	btfss	status,2,c
  7855  00319A  D008               	goto	l9154
  7856                           
  7857                           ; BSR set to: 0
  7858  00319C  0E00               	movlw	0
  7859  00319E  6E27               	movwf	___flmul@a^0,c
  7860  0031A0  0E00               	movlw	0
  7861  0031A2  6E28               	movwf	(___flmul@a+1)^0,c
  7862  0031A4  0E00               	movlw	0
  7863  0031A6  6E29               	movwf	(___flmul@a+2)^0,c
  7864  0031A8  0E00               	movlw	0
  7865  0031AA  6E2A               	movwf	(___flmul@a+3)^0,c
  7866  0031AC                     l9154:
  7867                           
  7868                           ; BSR set to: 0
  7869  0031AC  8E29               	bsf	(___flmul@a+2)^0,7,c
  7870  0031AE  D008               	goto	l1753
  7871  0031B0                     l9156:
  7872                           
  7873                           ; BSR set to: 0
  7874  0031B0  0E00               	movlw	0
  7875  0031B2  6E27               	movwf	___flmul@a^0,c
  7876  0031B4  0E00               	movlw	0
  7877  0031B6  6E28               	movwf	(___flmul@a+1)^0,c
  7878  0031B8  0E00               	movlw	0
  7879  0031BA  6E29               	movwf	(___flmul@a+2)^0,c
  7880  0031BC  0E00               	movlw	0
  7881  0031BE  6E2A               	movwf	(___flmul@a+3)^0,c
  7882  0031C0                     l1753:
  7883                           
  7884                           ; BSR set to: 0
  7885  0031C0  5161               	movf	___flmul@aexp& (0+255),w,b
  7886  0031C2  B4D8               	btfsc	status,2,c
  7887  0031C4  D003               	goto	u10300
  7888                           
  7889                           ; BSR set to: 0
  7890  0031C6  5162               	movf	___flmul@bexp& (0+255),w,b
  7891  0031C8  A4D8               	btfss	status,2,c
  7892  0031CA  D009               	goto	l9164
  7893  0031CC                     u10300:
  7894                           
  7895                           ; BSR set to: 0
  7896  0031CC  0E00               	movlw	0
  7897  0031CE  6E23               	movwf	?___flmul^0,c
  7898  0031D0  0E00               	movlw	0
  7899  0031D2  6E24               	movwf	(?___flmul+1)^0,c
  7900  0031D4  0E00               	movlw	0
  7901  0031D6  6E25               	movwf	(?___flmul+2)^0,c
  7902  0031D8  0E00               	movlw	0
  7903  0031DA  6E26               	movwf	(?___flmul+3)^0,c
  7904  0031DC  0012               	return	
  7905  0031DE                     l9164:
  7906                           
  7907                           ; BSR set to: 0
  7908  0031DE  5029               	movf	(___flmul@a+2)^0,w,c
  7909  0031E0  0223               	mulwf	___flmul@b^0,c
  7910  0031E2  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7911  0031E8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7912                           
  7913                           ; BSR set to: 0
  7914  0031EE  516B               	movf	___flmul@temp& (0+255),w,b
  7915  0031F0  6F63               	movwf	___flmul@grs& (0+255),b
  7916  0031F2  6B64               	clrf	(___flmul@grs+1)& (0+255),b
  7917  0031F4  6B65               	clrf	(___flmul@grs+2)& (0+255),b
  7918  0031F6  6B66               	clrf	(___flmul@grs+3)& (0+255),b
  7919                           
  7920                           ; BSR set to: 0
  7921  0031F8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7922  0031FA  6F67               	movwf	___flmul@prod& (0+255),b
  7923  0031FC  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7924  0031FE  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7925  003200  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7926  003202  5028               	movf	(___flmul@a+1)^0,w,c
  7927  003204  0224               	mulwf	(___flmul@b+1)^0,c
  7928  003206  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7929  00320C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7930                           
  7931                           ; BSR set to: 0
  7932  003212  516B               	movf	___flmul@temp& (0+255),w,b
  7933  003214  2763               	addwf	___flmul@grs& (0+255),f,b
  7934  003216  0E00               	movlw	0
  7935  003218  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7936  00321A  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7937  00321C  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7938                           
  7939                           ; BSR set to: 0
  7940  00321E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7941  003220  2767               	addwf	___flmul@prod& (0+255),f,b
  7942  003222  0E00               	movlw	0
  7943  003224  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7944  003226  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7945  003228  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7946  00322A  5027               	movf	___flmul@a^0,w,c
  7947  00322C  0225               	mulwf	(___flmul@b+2)^0,c
  7948  00322E  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7949  003234  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7950                           
  7951                           ; BSR set to: 0
  7952  00323A  516B               	movf	___flmul@temp& (0+255),w,b
  7953  00323C  2763               	addwf	___flmul@grs& (0+255),f,b
  7954  00323E  0E00               	movlw	0
  7955  003240  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7956  003242  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7957  003244  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7958                           
  7959                           ; BSR set to: 0
  7960  003246  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7961  003248  2767               	addwf	___flmul@prod& (0+255),f,b
  7962  00324A  0E00               	movlw	0
  7963  00324C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7964  00324E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7965  003250  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7966                           
  7967                           ; BSR set to: 0
  7968  003252  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  7969  003256  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  7970  00325A  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  7971  00325E  6B63               	clrf	___flmul@grs& (0+255),b
  7972                           
  7973                           ; BSR set to: 0
  7974  003260  5027               	movf	___flmul@a^0,w,c
  7975  003262  0224               	mulwf	(___flmul@b+1)^0,c
  7976  003264  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7977  00326A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7978                           
  7979                           ; BSR set to: 0
  7980  003270  516B               	movf	___flmul@temp& (0+255),w,b
  7981  003272  2763               	addwf	___flmul@grs& (0+255),f,b
  7982  003274  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7983  003276  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7984  003278  0E00               	movlw	0
  7985  00327A  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7986  00327C  0E00               	movlw	0
  7987  00327E  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7988                           
  7989                           ; BSR set to: 0
  7990  003280  5028               	movf	(___flmul@a+1)^0,w,c
  7991  003282  0223               	mulwf	___flmul@b^0,c
  7992  003284  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7993  00328A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7994                           
  7995                           ; BSR set to: 0
  7996  003290  516B               	movf	___flmul@temp& (0+255),w,b
  7997  003292  2763               	addwf	___flmul@grs& (0+255),f,b
  7998  003294  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7999  003296  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8000  003298  0E00               	movlw	0
  8001  00329A  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8002  00329C  0E00               	movlw	0
  8003  00329E  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8004                           
  8005                           ; BSR set to: 0
  8006  0032A0  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8007  0032A4  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8008  0032A8  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8009  0032AC  6B63               	clrf	___flmul@grs& (0+255),b
  8010  0032AE  5027               	movf	___flmul@a^0,w,c
  8011  0032B0  0223               	mulwf	___flmul@b^0,c
  8012  0032B2  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8013  0032B8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8014                           
  8015                           ; BSR set to: 0
  8016  0032BE  516B               	movf	___flmul@temp& (0+255),w,b
  8017  0032C0  2763               	addwf	___flmul@grs& (0+255),f,b
  8018  0032C2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8019  0032C4  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8020  0032C6  0E00               	movlw	0
  8021  0032C8  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8022  0032CA  0E00               	movlw	0
  8023  0032CC  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8024                           
  8025                           ; BSR set to: 0
  8026  0032CE  5029               	movf	(___flmul@a+2)^0,w,c
  8027  0032D0  0224               	mulwf	(___flmul@b+1)^0,c
  8028  0032D2  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8029  0032D8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8030  0032DE  516B               	movf	___flmul@temp& (0+255),w,b
  8031  0032E0  2767               	addwf	___flmul@prod& (0+255),f,b
  8032  0032E2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8033  0032E4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8034  0032E6  0E00               	movlw	0
  8035  0032E8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8036  0032EA  0E00               	movlw	0
  8037  0032EC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8038                           
  8039                           ; BSR set to: 0
  8040  0032EE  5028               	movf	(___flmul@a+1)^0,w,c
  8041  0032F0  0225               	mulwf	(___flmul@b+2)^0,c
  8042  0032F2  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8043  0032F8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8044                           
  8045                           ; BSR set to: 0
  8046  0032FE  516B               	movf	___flmul@temp& (0+255),w,b
  8047  003300  2767               	addwf	___flmul@prod& (0+255),f,b
  8048  003302  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8049  003304  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8050  003306  0E00               	movlw	0
  8051  003308  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8052  00330A  0E00               	movlw	0
  8053  00330C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8054  00330E  5029               	movf	(___flmul@a+2)^0,w,c
  8055  003310  0225               	mulwf	(___flmul@b+2)^0,c
  8056  003312  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8057  003318  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8058                           
  8059                           ; BSR set to: 0
  8060  00331E  516B               	movf	___flmul@temp& (0+255),w,b
  8061  003320  6E2B               	movwf	??___flmul^0,c
  8062  003322  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8063  003324  6E2C               	movwf	(??___flmul+1)^0,c
  8064  003326  6A2D               	clrf	(??___flmul+2)^0,c
  8065  003328  6A2E               	clrf	(??___flmul+3)^0,c
  8066  00332A  C02D  F02E         	movff	??___flmul+2,??___flmul+3
  8067  00332E  C02C  F02D         	movff	??___flmul+1,??___flmul+2
  8068  003332  C02B  F02C         	movff	??___flmul,??___flmul+1
  8069  003336  6A2B               	clrf	??___flmul^0,c
  8070  003338  502B               	movf	??___flmul^0,w,c
  8071  00333A  2767               	addwf	___flmul@prod& (0+255),f,b
  8072  00333C  502C               	movf	(??___flmul+1)^0,w,c
  8073  00333E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8074  003340  502D               	movf	(??___flmul+2)^0,w,c
  8075  003342  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8076  003344  502E               	movf	(??___flmul+3)^0,w,c
  8077  003346  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8078                           
  8079                           ; BSR set to: 0
  8080  003348  5166               	movf	(___flmul@grs+3)& (0+255),w,b
  8081  00334A  2767               	addwf	___flmul@prod& (0+255),f,b
  8082  00334C  0E00               	movlw	0
  8083  00334E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8084  003350  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8085  003352  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8086                           
  8087                           ; BSR set to: 0
  8088  003354  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8089  003358  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8090  00335C  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8091  003360  6B63               	clrf	___flmul@grs& (0+255),b
  8092                           
  8093                           ; BSR set to: 0
  8094  003362  5161               	movf	___flmul@aexp& (0+255),w,b
  8095  003364  C062  F02B         	movff	___flmul@bexp,??___flmul
  8096  003368  6A2C               	clrf	(??___flmul+1)^0,c
  8097  00336A  262B               	addwf	??___flmul^0,f,c
  8098  00336C  0E00               	movlw	0
  8099  00336E  222C               	addwfc	(??___flmul+1)^0,f,c
  8100  003370  0E82               	movlw	130
  8101  003372  242B               	addwf	??___flmul^0,w,c
  8102  003374  6F6B               	movwf	___flmul@temp& (0+255),b
  8103  003376  0EFF               	movlw	255
  8104  003378  202C               	addwfc	(??___flmul+1)^0,w,c
  8105  00337A  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  8106  00337C  D00F               	goto	l9212
  8107  00337E                     l9206:
  8108                           
  8109                           ; BSR set to: 0
  8110  00337E  90D8               	bcf	status,0,c
  8111  003380  3767               	rlcf	___flmul@prod& (0+255),f,b
  8112  003382  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8113  003384  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8114  003386  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8115                           
  8116                           ; BSR set to: 0
  8117  003388  BF66               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8118                           
  8119                           ; BSR set to: 0
  8120  00338A  8167               	bsf	___flmul@prod& (0+255),0,b
  8121                           
  8122                           ; BSR set to: 0
  8123  00338C  90D8               	bcf	status,0,c
  8124  00338E  3763               	rlcf	___flmul@grs& (0+255),f,b
  8125  003390  3764               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8126  003392  3765               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8127  003394  3766               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8128  003396  076B               	decf	___flmul@temp& (0+255),f,b
  8129  003398  A0D8               	btfss	status,0,c
  8130  00339A  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  8131  00339C                     l9212:
  8132                           
  8133                           ; BSR set to: 0
  8134  00339C  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  8135  00339E  D7EF               	goto	l9206
  8136                           
  8137                           ; BSR set to: 0
  8138  0033A0  0E00               	movlw	0
  8139  0033A2  6F61               	movwf	___flmul@aexp& (0+255),b
  8140                           
  8141                           ; BSR set to: 0
  8142  0033A4  AF66               	btfss	(___flmul@grs+3)& (0+255),7,b
  8143  0033A6  D017               	goto	l1762
  8144                           
  8145                           ; BSR set to: 0
  8146  0033A8  0EFF               	movlw	255
  8147  0033AA  1563               	andwf	___flmul@grs& (0+255),w,b
  8148  0033AC  6E2B               	movwf	??___flmul^0,c
  8149  0033AE  0EFF               	movlw	255
  8150  0033B0  1564               	andwf	(___flmul@grs+1)& (0+255),w,b
  8151  0033B2  6E2C               	movwf	(??___flmul+1)^0,c
  8152  0033B4  0EFF               	movlw	255
  8153  0033B6  1565               	andwf	(___flmul@grs+2)& (0+255),w,b
  8154  0033B8  6E2D               	movwf	(??___flmul+2)^0,c
  8155  0033BA  0E7F               	movlw	127
  8156  0033BC  1566               	andwf	(___flmul@grs+3)& (0+255),w,b
  8157  0033BE  6E2E               	movwf	(??___flmul+3)^0,c
  8158  0033C0  502B               	movf	??___flmul^0,w,c
  8159  0033C2  102C               	iorwf	(??___flmul+1)^0,w,c
  8160  0033C4  102D               	iorwf	(??___flmul+2)^0,w,c
  8161  0033C6  102E               	iorwf	(??___flmul+3)^0,w,c
  8162  0033C8  B4D8               	btfsc	status,2,c
  8163  0033CA  D003               	goto	l1763
  8164  0033CC                     u10340:
  8165                           
  8166                           ; BSR set to: 0
  8167  0033CC  0E01               	movlw	1
  8168  0033CE  6F61               	movwf	___flmul@aexp& (0+255),b
  8169  0033D0  D002               	goto	l1762
  8170  0033D2                     l1763:
  8171                           
  8172                           ; BSR set to: 0
  8173  0033D2  B167               	btfsc	___flmul@prod& (0+255),0,b
  8174  0033D4  D7FB               	goto	u10340
  8175  0033D6                     l1762:
  8176                           
  8177                           ; BSR set to: 0
  8178  0033D6  5161               	movf	___flmul@aexp& (0+255),w,b
  8179  0033D8  B4D8               	btfsc	status,2,c
  8180  0033DA  D01F               	goto	l9232
  8181                           
  8182                           ; BSR set to: 0
  8183  0033DC  0E01               	movlw	1
  8184  0033DE  2767               	addwf	___flmul@prod& (0+255),f,b
  8185  0033E0  0E00               	movlw	0
  8186  0033E2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8187  0033E4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8188  0033E6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8189                           
  8190                           ; BSR set to: 0
  8191  0033E8  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  8192  0033EA  D017               	goto	l9232
  8193                           
  8194                           ; BSR set to: 0
  8195  0033EC  C067  F02B         	movff	___flmul@prod,??___flmul
  8196  0033F0  C068  F02C         	movff	___flmul@prod+1,??___flmul+1
  8197  0033F4  C069  F02D         	movff	___flmul@prod+2,??___flmul+2
  8198  0033F8  C06A  F02E         	movff	___flmul@prod+3,??___flmul+3
  8199  0033FC  342E               	rlcf	(??___flmul+3)^0,w,c
  8200  0033FE  322E               	rrcf	(??___flmul+3)^0,f,c
  8201  003400  322D               	rrcf	(??___flmul+2)^0,f,c
  8202  003402  322C               	rrcf	(??___flmul+1)^0,f,c
  8203  003404  322B               	rrcf	??___flmul^0,f,c
  8204  003406  C02B  F067         	movff	??___flmul,___flmul@prod
  8205  00340A  C02C  F068         	movff	??___flmul+1,___flmul@prod+1
  8206  00340E  C02D  F069         	movff	??___flmul+2,___flmul@prod+2
  8207  003412  C02E  F06A         	movff	??___flmul+3,___flmul@prod+3
  8208                           
  8209                           ; BSR set to: 0
  8210  003416  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  8211  003418  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  8212  00341A                     l9232:
  8213                           
  8214                           ; BSR set to: 0
  8215  00341A  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8216  00341C  D00D               	goto	l9236
  8217  00341E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8218  003420  E103               	bnz	u10380
  8219  003422  296B               	incf	___flmul@temp& (0+255),w,b
  8220  003424  A0D8               	btfss	status,0,c
  8221  003426  D008               	goto	l9236
  8222  003428                     u10380:
  8223                           
  8224                           ; BSR set to: 0
  8225  003428  0E00               	movlw	0
  8226  00342A  6F67               	movwf	___flmul@prod& (0+255),b
  8227  00342C  0E00               	movlw	0
  8228  00342E  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8229  003430  0E80               	movlw	128
  8230  003432  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8231  003434  0E7F               	movlw	127
  8232  003436  D020               	goto	L11
  8233  003438                     l9236:
  8234                           
  8235                           ; BSR set to: 0
  8236  003438  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8237  00343A  D005               	goto	u10390
  8238  00343C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8239  00343E  E10E               	bnz	l1770
  8240  003440  056B               	decf	___flmul@temp& (0+255),w,b
  8241  003442  B0D8               	btfsc	status,0,c
  8242  003444  D00B               	goto	l1770
  8243  003446                     u10390:
  8244                           
  8245                           ; BSR set to: 0
  8246  003446  0E00               	movlw	0
  8247  003448  6F67               	movwf	___flmul@prod& (0+255),b
  8248  00344A  0E00               	movlw	0
  8249  00344C  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8250  00344E  0E00               	movlw	0
  8251  003450  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8252  003452  0E00               	movlw	0
  8253  003454  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8254  003456  0E00               	movlw	0
  8255  003458  6F60               	movwf	___flmul@sign& (0+255),b
  8256  00345A  D00F               	goto	l9248
  8257  00345C                     l1770:
  8258                           
  8259                           ; BSR set to: 0
  8260  00345C  C06B  F062         	movff	___flmul@temp,___flmul@bexp
  8261                           
  8262                           ; BSR set to: 0
  8263  003460  0EFF               	movlw	255
  8264  003462  1767               	andwf	___flmul@prod& (0+255),f,b
  8265  003464  0EFF               	movlw	255
  8266  003466  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  8267  003468  0E7F               	movlw	127
  8268  00346A  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  8269  00346C  0E00               	movlw	0
  8270  00346E  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  8271                           
  8272                           ; BSR set to: 0
  8273  003470  B162               	btfsc	___flmul@bexp& (0+255),0,b
  8274                           
  8275                           ; BSR set to: 0
  8276  003472  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  8277                           
  8278                           ; BSR set to: 0
  8279  003474  90D8               	bcf	status,0,c
  8280  003476  3162               	rrcf	___flmul@bexp& (0+255),w,b
  8281  003478                     L11:
  8282  003478  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8283  00347A                     l9248:
  8284                           
  8285                           ; BSR set to: 0
  8286  00347A  5160               	movf	___flmul@sign& (0+255),w,b
  8287  00347C  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8288                           
  8289                           ; BSR set to: 0
  8290  00347E  C067  F023         	movff	___flmul@prod,?___flmul
  8291  003482  C068  F024         	movff	___flmul@prod+1,?___flmul+1
  8292  003486  C069  F025         	movff	___flmul@prod+2,?___flmul+2
  8293  00348A  C06A  F026         	movff	___flmul@prod+3,?___flmul+3
  8294                           
  8295                           ; BSR set to: 0
  8296  00348E  0012               	return		;funcret
  8297  003490                     __end_of___flmul:
  8298                           	callstack 0
  8299                           
  8300 ;; *************** function ___flge *****************
  8301 ;; Defined at:
  8302 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  ff1             4   46[COMRAM] unsigned char 
  8305 ;;  ff2             4   50[COMRAM] unsigned char 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;		None               void
  8310 ;; Registers used:
  8311 ;;		wreg, status,2, status,0
  8312 ;; Tracked objects:
  8313 ;;		On entry : 3F/0
  8314 ;;		On exit  : 3F/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8317 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8319 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8320 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8321 ;;Total ram usage:       12 bytes
  8322 ;; Hardware stack levels used: 1
  8323 ;; Hardware stack levels required when called: 4
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_efgtoa
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text23
  8332  004956                     __ptext23:
  8333                           	callstack 0
  8334  004956                     ___flge:
  8335                           	callstack 20
  8336                           
  8337                           ; BSR set to: 0
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;incstack = 0
  8341  004956  0E00               	movlw	0
  8342  004958  142F               	andwf	___flge@ff1^0,w,c
  8343  00495A  6F6D               	movwf	??___flge& (0+255),b
  8344  00495C  0E00               	movlw	0
  8345  00495E  1430               	andwf	(___flge@ff1+1)^0,w,c
  8346  004960  6F6E               	movwf	(??___flge+1)& (0+255),b
  8347  004962  0E80               	movlw	128
  8348  004964  1431               	andwf	(___flge@ff1+2)^0,w,c
  8349  004966  6F6F               	movwf	(??___flge+2)& (0+255),b
  8350  004968  0E7F               	movlw	127
  8351  00496A  1432               	andwf	(___flge@ff1+3)^0,w,c
  8352  00496C  6F70               	movwf	(??___flge+3)& (0+255),b
  8353  00496E  516D               	movf	??___flge& (0+255),w,b
  8354  004970  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8355  004972  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8356  004974  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8357  004976  A4D8               	btfss	status,2,c
  8358  004978  D008               	goto	l9360
  8359                           
  8360                           ; BSR set to: 0
  8361  00497A  0E00               	movlw	0
  8362  00497C  6E2F               	movwf	___flge@ff1^0,c
  8363  00497E  0E00               	movlw	0
  8364  004980  6E30               	movwf	(___flge@ff1+1)^0,c
  8365  004982  0E00               	movlw	0
  8366  004984  6E31               	movwf	(___flge@ff1+2)^0,c
  8367  004986  0E00               	movlw	0
  8368  004988  6E32               	movwf	(___flge@ff1+3)^0,c
  8369  00498A                     l9360:
  8370                           
  8371                           ; BSR set to: 0
  8372  00498A  0E00               	movlw	0
  8373  00498C  1433               	andwf	___flge@ff2^0,w,c
  8374  00498E  6F6D               	movwf	??___flge& (0+255),b
  8375  004990  0E00               	movlw	0
  8376  004992  1434               	andwf	(___flge@ff2+1)^0,w,c
  8377  004994  6F6E               	movwf	(??___flge+1)& (0+255),b
  8378  004996  0E80               	movlw	128
  8379  004998  1435               	andwf	(___flge@ff2+2)^0,w,c
  8380  00499A  6F6F               	movwf	(??___flge+2)& (0+255),b
  8381  00499C  0E7F               	movlw	127
  8382  00499E  1436               	andwf	(___flge@ff2+3)^0,w,c
  8383  0049A0  6F70               	movwf	(??___flge+3)& (0+255),b
  8384  0049A2  516D               	movf	??___flge& (0+255),w,b
  8385  0049A4  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8386  0049A6  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8387  0049A8  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8388  0049AA  A4D8               	btfss	status,2,c
  8389  0049AC  D008               	goto	l9364
  8390                           
  8391                           ; BSR set to: 0
  8392  0049AE  0E00               	movlw	0
  8393  0049B0  6E33               	movwf	___flge@ff2^0,c
  8394  0049B2  0E00               	movlw	0
  8395  0049B4  6E34               	movwf	(___flge@ff2+1)^0,c
  8396  0049B6  0E00               	movlw	0
  8397  0049B8  6E35               	movwf	(___flge@ff2+2)^0,c
  8398  0049BA  0E00               	movlw	0
  8399  0049BC  6E36               	movwf	(___flge@ff2+3)^0,c
  8400  0049BE                     l9364:
  8401                           
  8402                           ; BSR set to: 0
  8403  0049BE  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8404  0049C0  D009               	goto	l9368
  8405                           
  8406                           ; BSR set to: 0
  8407  0049C2  6C2F               	negf	___flge@ff1^0,c
  8408  0049C4  1E30               	comf	(___flge@ff1+1)^0,f,c
  8409  0049C6  B0D8               	btfsc	status,0,c
  8410  0049C8  2A30               	incf	(___flge@ff1+1)^0,f,c
  8411  0049CA  1E31               	comf	(___flge@ff1+2)^0,f,c
  8412  0049CC  B0D8               	btfsc	status,0,c
  8413  0049CE  2A31               	incf	(___flge@ff1+2)^0,f,c
  8414  0049D0  0E80               	movlw	128
  8415  0049D2  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8416  0049D4                     l9368:
  8417                           
  8418                           ; BSR set to: 0
  8419  0049D4  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8420  0049D6  D009               	goto	l1404
  8421                           
  8422                           ; BSR set to: 0
  8423  0049D8  6C33               	negf	___flge@ff2^0,c
  8424  0049DA  1E34               	comf	(___flge@ff2+1)^0,f,c
  8425  0049DC  B0D8               	btfsc	status,0,c
  8426  0049DE  2A34               	incf	(___flge@ff2+1)^0,f,c
  8427  0049E0  1E35               	comf	(___flge@ff2+2)^0,f,c
  8428  0049E2  B0D8               	btfsc	status,0,c
  8429  0049E4  2A35               	incf	(___flge@ff2+2)^0,f,c
  8430  0049E6  0E80               	movlw	128
  8431  0049E8  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8432  0049EA                     l1404:
  8433                           
  8434                           ; BSR set to: 0
  8435  0049EA  0E00               	movlw	0
  8436  0049EC  1A2F               	xorwf	___flge@ff1^0,f,c
  8437  0049EE  0E00               	movlw	0
  8438  0049F0  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8439  0049F2  0E00               	movlw	0
  8440  0049F4  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8441  0049F6  0E80               	movlw	128
  8442  0049F8  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8443  0049FA  0E00               	movlw	0
  8444  0049FC  1A33               	xorwf	___flge@ff2^0,f,c
  8445  0049FE  0E00               	movlw	0
  8446  004A00  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8447  004A02  0E00               	movlw	0
  8448  004A04  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8449  004A06  0E80               	movlw	128
  8450  004A08  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8451  004A0A  5033               	movf	___flge@ff2^0,w,c
  8452  004A0C  5C2F               	subwf	___flge@ff1^0,w,c
  8453  004A0E  5034               	movf	(___flge@ff2+1)^0,w,c
  8454  004A10  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8455  004A12  5035               	movf	(___flge@ff2+2)^0,w,c
  8456  004A14  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8457  004A16  5036               	movf	(___flge@ff2+3)^0,w,c
  8458  004A18  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8459  004A1A  B0D8               	btfsc	status,0,c
  8460  004A1C  D002               	goto	l9374
  8461                           
  8462                           ; BSR set to: 0
  8463  004A1E  90D8               	bcf	status,0,c
  8464  004A20  0012               	return	
  8465  004A22                     l9374:
  8466                           
  8467                           ; BSR set to: 0
  8468  004A22  80D8               	bsf	status,0,c
  8469                           
  8470                           ; BSR set to: 0
  8471  004A24  0012               	return		;funcret
  8472  004A26                     __end_of___flge:
  8473                           	callstack 0
  8474                           
  8475 ;; *************** function ___fleq *****************
  8476 ;; Defined at:
  8477 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;  ff1             4   20[COMRAM] unsigned char 
  8480 ;;  ff2             4   24[COMRAM] unsigned char 
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;		None
  8483 ;; Return value:  Size  Location     Type
  8484 ;;		None               void
  8485 ;; Registers used:
  8486 ;;		wreg, status,2, status,0
  8487 ;; Tracked objects:
  8488 ;;		On entry : 3F/0
  8489 ;;		On exit  : 3F/0
  8490 ;;		Unchanged: 3F/0
  8491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8492 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8494 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8495 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8496 ;;Total ram usage:       12 bytes
  8497 ;; Hardware stack levels used: 1
  8498 ;; Hardware stack levels required when called: 4
  8499 ;; This function calls:
  8500 ;;		Nothing
  8501 ;; This function is called by:
  8502 ;;		_efgtoa
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           	psect	text24
  8507  0051E4                     __ptext24:
  8508                           	callstack 0
  8509  0051E4                     ___fleq:
  8510                           	callstack 20
  8511                           
  8512                           ; BSR set to: 0
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;incstack = 0
  8516  0051E4  0E00               	movlw	0
  8517  0051E6  1415               	andwf	___fleq@ff1^0,w,c
  8518  0051E8  6E1D               	movwf	??___fleq^0,c
  8519  0051EA  0E00               	movlw	0
  8520  0051EC  1416               	andwf	(___fleq@ff1+1)^0,w,c
  8521  0051EE  6E1E               	movwf	(??___fleq+1)^0,c
  8522  0051F0  0E80               	movlw	128
  8523  0051F2  1417               	andwf	(___fleq@ff1+2)^0,w,c
  8524  0051F4  6E1F               	movwf	(??___fleq+2)^0,c
  8525  0051F6  0E7F               	movlw	127
  8526  0051F8  1418               	andwf	(___fleq@ff1+3)^0,w,c
  8527  0051FA  6E20               	movwf	(??___fleq+3)^0,c
  8528  0051FC  501D               	movf	??___fleq^0,w,c
  8529  0051FE  101E               	iorwf	(??___fleq+1)^0,w,c
  8530  005200  101F               	iorwf	(??___fleq+2)^0,w,c
  8531  005202  1020               	iorwf	(??___fleq+3)^0,w,c
  8532  005204  A4D8               	btfss	status,2,c
  8533  005206  D008               	goto	l9344
  8534                           
  8535                           ; BSR set to: 0
  8536  005208  0E00               	movlw	0
  8537  00520A  6E15               	movwf	___fleq@ff1^0,c
  8538  00520C  0E00               	movlw	0
  8539  00520E  6E16               	movwf	(___fleq@ff1+1)^0,c
  8540  005210  0E00               	movlw	0
  8541  005212  6E17               	movwf	(___fleq@ff1+2)^0,c
  8542  005214  0E00               	movlw	0
  8543  005216  6E18               	movwf	(___fleq@ff1+3)^0,c
  8544  005218                     l9344:
  8545                           
  8546                           ; BSR set to: 0
  8547  005218  0E00               	movlw	0
  8548  00521A  1419               	andwf	___fleq@ff2^0,w,c
  8549  00521C  6E1D               	movwf	??___fleq^0,c
  8550  00521E  0E00               	movlw	0
  8551  005220  141A               	andwf	(___fleq@ff2+1)^0,w,c
  8552  005222  6E1E               	movwf	(??___fleq+1)^0,c
  8553  005224  0E80               	movlw	128
  8554  005226  141B               	andwf	(___fleq@ff2+2)^0,w,c
  8555  005228  6E1F               	movwf	(??___fleq+2)^0,c
  8556  00522A  0E7F               	movlw	127
  8557  00522C  141C               	andwf	(___fleq@ff2+3)^0,w,c
  8558  00522E  6E20               	movwf	(??___fleq+3)^0,c
  8559  005230  501D               	movf	??___fleq^0,w,c
  8560  005232  101E               	iorwf	(??___fleq+1)^0,w,c
  8561  005234  101F               	iorwf	(??___fleq+2)^0,w,c
  8562  005236  1020               	iorwf	(??___fleq+3)^0,w,c
  8563  005238  A4D8               	btfss	status,2,c
  8564  00523A  D008               	goto	l9348
  8565                           
  8566                           ; BSR set to: 0
  8567  00523C  0E00               	movlw	0
  8568  00523E  6E19               	movwf	___fleq@ff2^0,c
  8569  005240  0E00               	movlw	0
  8570  005242  6E1A               	movwf	(___fleq@ff2+1)^0,c
  8571  005244  0E00               	movlw	0
  8572  005246  6E1B               	movwf	(___fleq@ff2+2)^0,c
  8573  005248  0E00               	movlw	0
  8574  00524A  6E1C               	movwf	(___fleq@ff2+3)^0,c
  8575  00524C                     l9348:
  8576                           
  8577                           ; BSR set to: 0
  8578  00524C  5019               	movf	___fleq@ff2^0,w,c
  8579  00524E  1815               	xorwf	___fleq@ff1^0,w,c
  8580  005250  E10A               	bnz	u10550
  8581  005252  501A               	movf	(___fleq@ff2+1)^0,w,c
  8582  005254  1816               	xorwf	(___fleq@ff1+1)^0,w,c
  8583  005256  E107               	bnz	u10550
  8584  005258  501B               	movf	(___fleq@ff2+2)^0,w,c
  8585  00525A  1817               	xorwf	(___fleq@ff1+2)^0,w,c
  8586  00525C  E104               	bnz	u10550
  8587  00525E  501C               	movf	(___fleq@ff2+3)^0,w,c
  8588  005260  1818               	xorwf	(___fleq@ff1+3)^0,w,c
  8589  005262  B4D8               	btfsc	status,2,c
  8590  005264  D002               	goto	l9352
  8591  005266                     u10550:
  8592                           
  8593                           ; BSR set to: 0
  8594  005266  90D8               	bcf	status,0,c
  8595  005268  0012               	return	
  8596  00526A                     l9352:
  8597                           
  8598                           ; BSR set to: 0
  8599  00526A  80D8               	bsf	status,0,c
  8600                           
  8601                           ; BSR set to: 0
  8602  00526C  0012               	return		;funcret
  8603  00526E                     __end_of___fleq:
  8604                           	callstack 0
  8605                           
  8606 ;; *************** function ___fldiv *****************
  8607 ;; Defined at:
  8608 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  b               4   20[COMRAM] unsigned char 
  8611 ;;  a               4   24[COMRAM] unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  grs             4   39[COMRAM] unsigned long 
  8614 ;;  rem             4   32[COMRAM] unsigned long 
  8615 ;;  new_exp         2   37[COMRAM] short 
  8616 ;;  aexp            1   44[COMRAM] unsigned char 
  8617 ;;  bexp            1   43[COMRAM] unsigned char 
  8618 ;;  sign            1   36[COMRAM] unsigned char 
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  4   20[COMRAM] unsigned char 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2, status,0
  8623 ;; Tracked objects:
  8624 ;;		On entry : 3F/0
  8625 ;;		On exit  : 3F/0
  8626 ;;		Unchanged: 3F/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8628 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8629 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8631 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8632 ;;Total ram usage:       25 bytes
  8633 ;; Hardware stack levels used: 1
  8634 ;; Hardware stack levels required when called: 4
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_efgtoa
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text25
  8643  00379C                     __ptext25:
  8644                           	callstack 0
  8645  00379C                     ___fldiv:
  8646                           	callstack 20
  8647                           
  8648                           ; BSR set to: 0
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;incstack = 0
  8652  00379C  5018               	movf	(___fldiv@b+3)^0,w,c
  8653  00379E  0B80               	andlw	128
  8654  0037A0  6E25               	movwf	___fldiv@sign^0,c
  8655  0037A2  5018               	movf	(___fldiv@b+3)^0,w,c
  8656  0037A4  2418               	addwf	(___fldiv@b+3)^0,w,c
  8657  0037A6  6E2C               	movwf	___fldiv@bexp^0,c
  8658                           
  8659                           ; BSR set to: 0
  8660  0037A8  BE17               	btfsc	(___fldiv@b+2)^0,7,c
  8661                           
  8662                           ; BSR set to: 0
  8663  0037AA  802C               	bsf	___fldiv@bexp^0,0,c
  8664                           
  8665                           ; BSR set to: 0
  8666  0037AC  502C               	movf	___fldiv@bexp^0,w,c
  8667  0037AE  B4D8               	btfsc	status,2,c
  8668  0037B0  D00D               	goto	l9002
  8669                           
  8670                           ; BSR set to: 0
  8671  0037B2  282C               	incf	___fldiv@bexp^0,w,c
  8672  0037B4  A4D8               	btfss	status,2,c
  8673  0037B6  D008               	goto	l8998
  8674                           
  8675                           ; BSR set to: 0
  8676  0037B8  0E00               	movlw	0
  8677  0037BA  6E15               	movwf	___fldiv@b^0,c
  8678  0037BC  0E00               	movlw	0
  8679  0037BE  6E16               	movwf	(___fldiv@b+1)^0,c
  8680  0037C0  0E00               	movlw	0
  8681  0037C2  6E17               	movwf	(___fldiv@b+2)^0,c
  8682  0037C4  0E00               	movlw	0
  8683  0037C6  6E18               	movwf	(___fldiv@b+3)^0,c
  8684  0037C8                     l8998:
  8685                           
  8686                           ; BSR set to: 0
  8687  0037C8  8E17               	bsf	(___fldiv@b+2)^0,7,c
  8688  0037CA  D006               	goto	L12
  8689  0037CC                     l9002:
  8690                           
  8691                           ; BSR set to: 0
  8692  0037CC  0E00               	movlw	0
  8693  0037CE  6E15               	movwf	___fldiv@b^0,c
  8694  0037D0  0E00               	movlw	0
  8695  0037D2  6E16               	movwf	(___fldiv@b+1)^0,c
  8696  0037D4  0E00               	movlw	0
  8697  0037D6  6E17               	movwf	(___fldiv@b+2)^0,c
  8698  0037D8                     L12:
  8699  0037D8  0E00               	movlw	0
  8700  0037DA  6E18               	movwf	(___fldiv@b+3)^0,c
  8701                           
  8702                           ; BSR set to: 0
  8703  0037DC  501C               	movf	(___fldiv@a+3)^0,w,c
  8704  0037DE  0B80               	andlw	128
  8705  0037E0  1A25               	xorwf	___fldiv@sign^0,f,c
  8706                           
  8707                           ; BSR set to: 0
  8708  0037E2  501C               	movf	(___fldiv@a+3)^0,w,c
  8709  0037E4  241C               	addwf	(___fldiv@a+3)^0,w,c
  8710  0037E6  6E2D               	movwf	___fldiv@aexp^0,c
  8711                           
  8712                           ; BSR set to: 0
  8713  0037E8  BE1B               	btfsc	(___fldiv@a+2)^0,7,c
  8714                           
  8715                           ; BSR set to: 0
  8716  0037EA  802D               	bsf	___fldiv@aexp^0,0,c
  8717                           
  8718                           ; BSR set to: 0
  8719  0037EC  502D               	movf	___fldiv@aexp^0,w,c
  8720  0037EE  B4D8               	btfsc	status,2,c
  8721  0037F0  D00D               	goto	l9022
  8722                           
  8723                           ; BSR set to: 0
  8724  0037F2  282D               	incf	___fldiv@aexp^0,w,c
  8725  0037F4  A4D8               	btfss	status,2,c
  8726  0037F6  D008               	goto	l9018
  8727                           
  8728                           ; BSR set to: 0
  8729  0037F8  0E00               	movlw	0
  8730  0037FA  6E19               	movwf	___fldiv@a^0,c
  8731  0037FC  0E00               	movlw	0
  8732  0037FE  6E1A               	movwf	(___fldiv@a+1)^0,c
  8733  003800  0E00               	movlw	0
  8734  003802  6E1B               	movwf	(___fldiv@a+2)^0,c
  8735  003804  0E00               	movlw	0
  8736  003806  6E1C               	movwf	(___fldiv@a+3)^0,c
  8737  003808                     l9018:
  8738                           
  8739                           ; BSR set to: 0
  8740  003808  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  8741  00380A  D006               	goto	L13
  8742  00380C                     l9022:
  8743                           
  8744                           ; BSR set to: 0
  8745  00380C  0E00               	movlw	0
  8746  00380E  6E19               	movwf	___fldiv@a^0,c
  8747  003810  0E00               	movlw	0
  8748  003812  6E1A               	movwf	(___fldiv@a+1)^0,c
  8749  003814  0E00               	movlw	0
  8750  003816  6E1B               	movwf	(___fldiv@a+2)^0,c
  8751  003818                     L13:
  8752  003818  0E00               	movlw	0
  8753  00381A  6E1C               	movwf	(___fldiv@a+3)^0,c
  8754                           
  8755                           ; BSR set to: 0
  8756  00381C  5019               	movf	___fldiv@a^0,w,c
  8757  00381E  101A               	iorwf	(___fldiv@a+1)^0,w,c
  8758  003820  101B               	iorwf	(___fldiv@a+2)^0,w,c
  8759  003822  101C               	iorwf	(___fldiv@a+3)^0,w,c
  8760  003824  A4D8               	btfss	status,2,c
  8761  003826  D017               	goto	l9036
  8762                           
  8763                           ; BSR set to: 0
  8764  003828  0E00               	movlw	0
  8765  00382A  6E15               	movwf	___fldiv@b^0,c
  8766  00382C  0E00               	movlw	0
  8767  00382E  6E16               	movwf	(___fldiv@b+1)^0,c
  8768  003830  0E00               	movlw	0
  8769  003832  6E17               	movwf	(___fldiv@b+2)^0,c
  8770  003834  0E00               	movlw	0
  8771  003836  6E18               	movwf	(___fldiv@b+3)^0,c
  8772                           
  8773                           ; BSR set to: 0
  8774  003838  0E80               	movlw	128
  8775  00383A  1217               	iorwf	(___fldiv@b+2)^0,f,c
  8776  00383C  0E7F               	movlw	127
  8777  00383E  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8778  003840                     l9030:
  8779                           
  8780                           ; BSR set to: 0
  8781  003840  5025               	movf	___fldiv@sign^0,w,c
  8782  003842  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8783                           
  8784                           ; BSR set to: 0
  8785  003844  C015  F015         	movff	___fldiv@b,?___fldiv
  8786  003848  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  8787  00384C  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  8788  003850  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  8789  003854  0012               	return	
  8790  003856                     l9036:
  8791                           
  8792                           ; BSR set to: 0
  8793  003856  502C               	movf	___fldiv@bexp^0,w,c
  8794  003858  A4D8               	btfss	status,2,c
  8795  00385A  D009               	goto	l9044
  8796                           
  8797                           ; BSR set to: 0
  8798                           
  8799                           ; BSR set to: 0
  8800  00385C  0E00               	movlw	0
  8801  00385E  6E15               	movwf	?___fldiv^0,c
  8802  003860  0E00               	movlw	0
  8803  003862  6E16               	movwf	(?___fldiv+1)^0,c
  8804  003864  0E00               	movlw	0
  8805  003866  6E17               	movwf	(?___fldiv+2)^0,c
  8806  003868  0E00               	movlw	0
  8807  00386A  6E18               	movwf	(?___fldiv+3)^0,c
  8808  00386C  0012               	return	
  8809  00386E                     l9044:
  8810                           
  8811                           ; BSR set to: 0
  8812  00386E  502D               	movf	___fldiv@aexp^0,w,c
  8813  003870  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  8814  003874  6A1E               	clrf	(??___fldiv+1)^0,c
  8815  003876  5E1D               	subwf	??___fldiv^0,f,c
  8816  003878  0E00               	movlw	0
  8817  00387A  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  8818  00387C  0E7F               	movlw	127
  8819  00387E  241D               	addwf	??___fldiv^0,w,c
  8820  003880  6E26               	movwf	___fldiv@new_exp^0,c
  8821  003882  0E00               	movlw	0
  8822  003884  201E               	addwfc	(??___fldiv+1)^0,w,c
  8823  003886  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  8824                           
  8825                           ; BSR set to: 0
  8826  003888  C015  F021         	movff	___fldiv@b,___fldiv@rem
  8827  00388C  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  8828  003890  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  8829  003894  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  8830                           
  8831                           ; BSR set to: 0
  8832  003898  0E00               	movlw	0
  8833  00389A  6E15               	movwf	___fldiv@b^0,c
  8834  00389C  0E00               	movlw	0
  8835  00389E  6E16               	movwf	(___fldiv@b+1)^0,c
  8836  0038A0  0E00               	movlw	0
  8837  0038A2  6E17               	movwf	(___fldiv@b+2)^0,c
  8838  0038A4  0E00               	movlw	0
  8839  0038A6  6E18               	movwf	(___fldiv@b+3)^0,c
  8840                           
  8841                           ; BSR set to: 0
  8842  0038A8  0E00               	movlw	0
  8843  0038AA  6E28               	movwf	___fldiv@grs^0,c
  8844  0038AC  0E00               	movlw	0
  8845  0038AE  6E29               	movwf	(___fldiv@grs+1)^0,c
  8846  0038B0  0E00               	movlw	0
  8847  0038B2  6E2A               	movwf	(___fldiv@grs+2)^0,c
  8848  0038B4  0E00               	movlw	0
  8849  0038B6  6E2B               	movwf	(___fldiv@grs+3)^0,c
  8850                           
  8851                           ; BSR set to: 0
  8852  0038B8  0E00               	movlw	0
  8853  0038BA  6E2D               	movwf	___fldiv@aexp^0,c
  8854  0038BC  D028               	goto	l1723
  8855  0038BE                     l9054:
  8856                           
  8857                           ; BSR set to: 0
  8858  0038BE  502D               	movf	___fldiv@aexp^0,w,c
  8859  0038C0  B4D8               	btfsc	status,2,c
  8860  0038C2  D011               	goto	l9062
  8861                           
  8862                           ; BSR set to: 0
  8863  0038C4  90D8               	bcf	status,0,c
  8864  0038C6  3621               	rlcf	___fldiv@rem^0,f,c
  8865  0038C8  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  8866  0038CA  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  8867  0038CC  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  8868  0038CE  90D8               	bcf	status,0,c
  8869  0038D0  3615               	rlcf	___fldiv@b^0,f,c
  8870  0038D2  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8871  0038D4  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8872  0038D6  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8873                           
  8874                           ; BSR set to: 0
  8875  0038D8  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8876                           
  8877                           ; BSR set to: 0
  8878  0038DA  8015               	bsf	___fldiv@b^0,0,c
  8879                           
  8880                           ; BSR set to: 0
  8881  0038DC  90D8               	bcf	status,0,c
  8882  0038DE  3628               	rlcf	___fldiv@grs^0,f,c
  8883  0038E0  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8884  0038E2  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8885  0038E4  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8886  0038E6                     l9062:
  8887                           
  8888                           ; BSR set to: 0
  8889  0038E6  5019               	movf	___fldiv@a^0,w,c
  8890  0038E8  5C21               	subwf	___fldiv@rem^0,w,c
  8891  0038EA  501A               	movf	(___fldiv@a+1)^0,w,c
  8892  0038EC  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  8893  0038EE  501B               	movf	(___fldiv@a+2)^0,w,c
  8894  0038F0  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  8895  0038F2  501C               	movf	(___fldiv@a+3)^0,w,c
  8896  0038F4  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  8897  0038F6  A0D8               	btfss	status,0,c
  8898  0038F8  D009               	goto	l9068
  8899                           
  8900                           ; BSR set to: 0
  8901  0038FA  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  8902                           
  8903                           ; BSR set to: 0
  8904  0038FC  5019               	movf	___fldiv@a^0,w,c
  8905  0038FE  5E21               	subwf	___fldiv@rem^0,f,c
  8906  003900  501A               	movf	(___fldiv@a+1)^0,w,c
  8907  003902  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  8908  003904  501B               	movf	(___fldiv@a+2)^0,w,c
  8909  003906  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  8910  003908  501C               	movf	(___fldiv@a+3)^0,w,c
  8911  00390A  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  8912  00390C                     l9068:
  8913                           
  8914                           ; BSR set to: 0
  8915  00390C  2A2D               	incf	___fldiv@aexp^0,f,c
  8916  00390E                     l1723:
  8917                           
  8918                           ; BSR set to: 0
  8919  00390E  0E19               	movlw	25
  8920  003910  642D               	cpfsgt	___fldiv@aexp^0,c
  8921  003912  D7D5               	goto	l9054
  8922                           
  8923                           ; BSR set to: 0
  8924  003914  5021               	movf	___fldiv@rem^0,w,c
  8925  003916  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  8926  003918  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  8927  00391A  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  8928  00391C  B4D8               	btfsc	status,2,c
  8929  00391E  D011               	goto	l9080
  8930                           
  8931                           ; BSR set to: 0
  8932  003920  8028               	bsf	___fldiv@grs^0,0,c
  8933  003922  D00F               	goto	l9080
  8934  003924                     l9074:
  8935                           
  8936                           ; BSR set to: 0
  8937  003924  90D8               	bcf	status,0,c
  8938  003926  3615               	rlcf	___fldiv@b^0,f,c
  8939  003928  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8940  00392A  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8941  00392C  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8942                           
  8943                           ; BSR set to: 0
  8944  00392E  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8945                           
  8946                           ; BSR set to: 0
  8947  003930  8015               	bsf	___fldiv@b^0,0,c
  8948                           
  8949                           ; BSR set to: 0
  8950  003932  90D8               	bcf	status,0,c
  8951  003934  3628               	rlcf	___fldiv@grs^0,f,c
  8952  003936  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8953  003938  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8954  00393A  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8955  00393C  0626               	decf	___fldiv@new_exp^0,f,c
  8956  00393E  A0D8               	btfss	status,0,c
  8957  003940  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  8958  003942                     l9080:
  8959                           
  8960                           ; BSR set to: 0
  8961  003942  AE17               	btfss	(___fldiv@b+2)^0,7,c
  8962  003944  D7EF               	goto	l9074
  8963                           
  8964                           ; BSR set to: 0
  8965  003946  0E00               	movlw	0
  8966  003948  6E2D               	movwf	___fldiv@aexp^0,c
  8967                           
  8968                           ; BSR set to: 0
  8969  00394A  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  8970  00394C  D017               	goto	l1734
  8971                           
  8972                           ; BSR set to: 0
  8973  00394E  0EFF               	movlw	255
  8974  003950  1428               	andwf	___fldiv@grs^0,w,c
  8975  003952  6E1D               	movwf	??___fldiv^0,c
  8976  003954  0EFF               	movlw	255
  8977  003956  1429               	andwf	(___fldiv@grs+1)^0,w,c
  8978  003958  6E1E               	movwf	(??___fldiv+1)^0,c
  8979  00395A  0EFF               	movlw	255
  8980  00395C  142A               	andwf	(___fldiv@grs+2)^0,w,c
  8981  00395E  6E1F               	movwf	(??___fldiv+2)^0,c
  8982  003960  0E7F               	movlw	127
  8983  003962  142B               	andwf	(___fldiv@grs+3)^0,w,c
  8984  003964  6E20               	movwf	(??___fldiv+3)^0,c
  8985  003966  501D               	movf	??___fldiv^0,w,c
  8986  003968  101E               	iorwf	(??___fldiv+1)^0,w,c
  8987  00396A  101F               	iorwf	(??___fldiv+2)^0,w,c
  8988  00396C  1020               	iorwf	(??___fldiv+3)^0,w,c
  8989  00396E  B4D8               	btfsc	status,2,c
  8990  003970  D003               	goto	l1735
  8991  003972                     u10160:
  8992                           
  8993                           ; BSR set to: 0
  8994  003972  0E01               	movlw	1
  8995  003974  6E2D               	movwf	___fldiv@aexp^0,c
  8996  003976  D002               	goto	l1734
  8997  003978                     l1735:
  8998                           
  8999                           ; BSR set to: 0
  9000  003978  B015               	btfsc	___fldiv@b^0,0,c
  9001  00397A  D7FB               	goto	u10160
  9002  00397C                     l1734:
  9003                           
  9004                           ; BSR set to: 0
  9005  00397C  502D               	movf	___fldiv@aexp^0,w,c
  9006  00397E  B4D8               	btfsc	status,2,c
  9007  003980  D01F               	goto	l9100
  9008                           
  9009                           ; BSR set to: 0
  9010  003982  0E01               	movlw	1
  9011  003984  2615               	addwf	___fldiv@b^0,f,c
  9012  003986  0E00               	movlw	0
  9013  003988  2216               	addwfc	(___fldiv@b+1)^0,f,c
  9014  00398A  2217               	addwfc	(___fldiv@b+2)^0,f,c
  9015  00398C  2218               	addwfc	(___fldiv@b+3)^0,f,c
  9016                           
  9017                           ; BSR set to: 0
  9018  00398E  A018               	btfss	(___fldiv@b+3)^0,0,c
  9019  003990  D017               	goto	l9100
  9020                           
  9021                           ; BSR set to: 0
  9022  003992  C015  F01D         	movff	___fldiv@b,??___fldiv
  9023  003996  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  9024  00399A  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  9025  00399E  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  9026  0039A2  3420               	rlcf	(??___fldiv+3)^0,w,c
  9027  0039A4  3220               	rrcf	(??___fldiv+3)^0,f,c
  9028  0039A6  321F               	rrcf	(??___fldiv+2)^0,f,c
  9029  0039A8  321E               	rrcf	(??___fldiv+1)^0,f,c
  9030  0039AA  321D               	rrcf	??___fldiv^0,f,c
  9031  0039AC  C01D  F015         	movff	??___fldiv,___fldiv@b
  9032  0039B0  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  9033  0039B4  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  9034  0039B8  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  9035                           
  9036                           ; BSR set to: 0
  9037  0039BC  4A26               	infsnz	___fldiv@new_exp^0,f,c
  9038  0039BE  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  9039  0039C0                     l9100:
  9040                           
  9041                           ; BSR set to: 0
  9042  0039C0  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9043  0039C2  D010               	goto	l9104
  9044  0039C4  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9045  0039C6  E103               	bnz	u10200
  9046  0039C8  2826               	incf	___fldiv@new_exp^0,w,c
  9047  0039CA  A0D8               	btfss	status,0,c
  9048  0039CC  D00B               	goto	l9104
  9049  0039CE                     u10200:
  9050                           
  9051                           ; BSR set to: 0
  9052  0039CE  0E00               	movlw	0
  9053  0039D0  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9054  0039D2  6826               	setf	___fldiv@new_exp^0,c
  9055  0039D4  0E00               	movlw	0
  9056  0039D6  6E15               	movwf	___fldiv@b^0,c
  9057  0039D8  0E00               	movlw	0
  9058  0039DA  6E16               	movwf	(___fldiv@b+1)^0,c
  9059  0039DC  0E00               	movlw	0
  9060  0039DE  6E17               	movwf	(___fldiv@b+2)^0,c
  9061  0039E0  0E00               	movlw	0
  9062  0039E2  6E18               	movwf	(___fldiv@b+3)^0,c
  9063  0039E4                     l9104:
  9064                           
  9065                           ; BSR set to: 0
  9066  0039E4  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9067  0039E6  D005               	goto	u10210
  9068  0039E8  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9069  0039EA  E111               	bnz	l9108
  9070  0039EC  0426               	decf	___fldiv@new_exp^0,w,c
  9071  0039EE  B0D8               	btfsc	status,0,c
  9072  0039F0  D00E               	goto	l9108
  9073  0039F2                     u10210:
  9074                           
  9075                           ; BSR set to: 0
  9076  0039F2  0E00               	movlw	0
  9077  0039F4  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9078  0039F6  0E00               	movlw	0
  9079  0039F8  6E26               	movwf	___fldiv@new_exp^0,c
  9080  0039FA  0E00               	movlw	0
  9081  0039FC  6E15               	movwf	___fldiv@b^0,c
  9082  0039FE  0E00               	movlw	0
  9083  003A00  6E16               	movwf	(___fldiv@b+1)^0,c
  9084  003A02  0E00               	movlw	0
  9085  003A04  6E17               	movwf	(___fldiv@b+2)^0,c
  9086  003A06  0E00               	movlw	0
  9087  003A08  6E18               	movwf	(___fldiv@b+3)^0,c
  9088  003A0A  0E00               	movlw	0
  9089  003A0C  6E25               	movwf	___fldiv@sign^0,c
  9090  003A0E                     l9108:
  9091                           
  9092                           ; BSR set to: 0
  9093  003A0E  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  9094                           
  9095                           ; BSR set to: 0
  9096  003A12  A02C               	btfss	___fldiv@bexp^0,0,c
  9097  003A14  D002               	goto	l9114
  9098                           
  9099                           ; BSR set to: 0
  9100  003A16  8E17               	bsf	(___fldiv@b+2)^0,7,c
  9101  003A18  D001               	goto	l9116
  9102  003A1A                     l9114:
  9103                           
  9104                           ; BSR set to: 0
  9105  003A1A  9E17               	bcf	(___fldiv@b+2)^0,7,c
  9106  003A1C                     l9116:
  9107                           
  9108                           ; BSR set to: 0
  9109  003A1C  90D8               	bcf	status,0,c
  9110  003A1E  302C               	rrcf	___fldiv@bexp^0,w,c
  9111  003A20  6E18               	movwf	(___fldiv@b+3)^0,c
  9112  003A22  D70E               	goto	l9030
  9113  003A24                     __end_of___fldiv:
  9114                           	callstack 0
  9115                           
  9116 ;; *************** function ___awmod *****************
  9117 ;; Defined at:
  9118 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;  dividend        2   20[COMRAM] int 
  9121 ;;  divisor         2   22[COMRAM] int 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  sign            1   25[COMRAM] unsigned char 
  9124 ;;  counter         1   24[COMRAM] unsigned char 
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  2   20[COMRAM] int 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0
  9129 ;; Tracked objects:
  9130 ;;		On entry : 3F/0
  9131 ;;		On exit  : 3F/0
  9132 ;;		Unchanged: 3F/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9137 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9138 ;;Total ram usage:        6 bytes
  9139 ;; Hardware stack levels used: 1
  9140 ;; Hardware stack levels required when called: 4
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_efgtoa
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           	psect	text26
  9149  0053E8                     __ptext26:
  9150                           	callstack 0
  9151  0053E8                     ___awmod:
  9152                           	callstack 20
  9153                           
  9154                           ; BSR set to: 0
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;incstack = 0
  9158  0053E8  0E00               	movlw	0
  9159  0053EA  6E1A               	movwf	___awmod@sign^0,c
  9160                           
  9161                           ; BSR set to: 0
  9162  0053EC  AE16               	btfss	(___awmod@dividend+1)^0,7,c
  9163  0053EE  D006               	goto	l9312
  9164                           
  9165                           ; BSR set to: 0
  9166  0053F0  6C15               	negf	___awmod@dividend^0,c
  9167  0053F2  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9168  0053F4  B0D8               	btfsc	status,0,c
  9169  0053F6  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9170                           
  9171                           ; BSR set to: 0
  9172  0053F8  0E01               	movlw	1
  9173  0053FA  6E1A               	movwf	___awmod@sign^0,c
  9174  0053FC                     l9312:
  9175                           
  9176                           ; BSR set to: 0
  9177  0053FC  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9178  0053FE  D004               	goto	l9316
  9179                           
  9180                           ; BSR set to: 0
  9181  005400  6C17               	negf	___awmod@divisor^0,c
  9182  005402  1E18               	comf	(___awmod@divisor+1)^0,f,c
  9183  005404  B0D8               	btfsc	status,0,c
  9184  005406  2A18               	incf	(___awmod@divisor+1)^0,f,c
  9185  005408                     l9316:
  9186                           
  9187                           ; BSR set to: 0
  9188  005408  5017               	movf	___awmod@divisor^0,w,c
  9189  00540A  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  9190  00540C  B4D8               	btfsc	status,2,c
  9191  00540E  D018               	goto	l9332
  9192                           
  9193                           ; BSR set to: 0
  9194  005410  0E01               	movlw	1
  9195  005412  6E19               	movwf	___awmod@counter^0,c
  9196  005414  D004               	goto	l9322
  9197  005416                     l9320:
  9198                           
  9199                           ; BSR set to: 0
  9200  005416  90D8               	bcf	status,0,c
  9201  005418  3617               	rlcf	___awmod@divisor^0,f,c
  9202  00541A  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  9203  00541C  2A19               	incf	___awmod@counter^0,f,c
  9204  00541E                     l9322:
  9205                           
  9206                           ; BSR set to: 0
  9207  00541E  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9208  005420  D7FA               	goto	l9320
  9209  005422                     u10500:
  9210                           
  9211                           ; BSR set to: 0
  9212  005422  5017               	movf	___awmod@divisor^0,w,c
  9213  005424  5C15               	subwf	___awmod@dividend^0,w,c
  9214  005426  5018               	movf	(___awmod@divisor+1)^0,w,c
  9215  005428  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  9216  00542A  A0D8               	btfss	status,0,c
  9217  00542C  D004               	goto	l9328
  9218                           
  9219                           ; BSR set to: 0
  9220  00542E  5017               	movf	___awmod@divisor^0,w,c
  9221  005430  5E15               	subwf	___awmod@dividend^0,f,c
  9222  005432  5018               	movf	(___awmod@divisor+1)^0,w,c
  9223  005434  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  9224  005436                     l9328:
  9225                           
  9226                           ; BSR set to: 0
  9227  005436  90D8               	bcf	status,0,c
  9228  005438  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  9229  00543A  3217               	rrcf	___awmod@divisor^0,f,c
  9230                           
  9231                           ; BSR set to: 0
  9232  00543C  2E19               	decfsz	___awmod@counter^0,f,c
  9233  00543E  D7F1               	goto	u10500
  9234  005440                     l9332:
  9235                           
  9236                           ; BSR set to: 0
  9237  005440  501A               	movf	___awmod@sign^0,w,c
  9238  005442  B4D8               	btfsc	status,2,c
  9239  005444  D004               	goto	l9336
  9240                           
  9241                           ; BSR set to: 0
  9242  005446  6C15               	negf	___awmod@dividend^0,c
  9243  005448  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9244  00544A  B0D8               	btfsc	status,0,c
  9245  00544C  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9246  00544E                     l9336:
  9247                           
  9248                           ; BSR set to: 0
  9249  00544E  C015  F015         	movff	___awmod@dividend,?___awmod
  9250  005452  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  9251                           
  9252                           ; BSR set to: 0
  9253  005456  0012               	return		;funcret
  9254  005458                     __end_of___awmod:
  9255                           	callstack 0
  9256                           
  9257 ;; *************** function ___awdiv *****************
  9258 ;; Defined at:
  9259 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;  dividend        2   20[COMRAM] int 
  9262 ;;  divisor         2   22[COMRAM] int 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  quotient        2   26[COMRAM] int 
  9265 ;;  sign            1   25[COMRAM] unsigned char 
  9266 ;;  counter         1   24[COMRAM] unsigned char 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  2   20[COMRAM] int 
  9269 ;; Registers used:
  9270 ;;		wreg, status,2, status,0
  9271 ;; Tracked objects:
  9272 ;;		On entry : 3F/0
  9273 ;;		On exit  : 3F/0
  9274 ;;		Unchanged: 3F/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9277 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9279 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9280 ;;Total ram usage:        8 bytes
  9281 ;; Hardware stack levels used: 1
  9282 ;; Hardware stack levels required when called: 4
  9283 ;; This function calls:
  9284 ;;		Nothing
  9285 ;; This function is called by:
  9286 ;;		_efgtoa
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text27
  9291  0052F2                     __ptext27:
  9292                           	callstack 0
  9293  0052F2                     ___awdiv:
  9294                           	callstack 20
  9295                           
  9296                           ; BSR set to: 0
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;incstack = 0
  9300  0052F2  0E00               	movlw	0
  9301  0052F4  6E1A               	movwf	___awdiv@sign^0,c
  9302                           
  9303                           ; BSR set to: 0
  9304  0052F6  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9305  0052F8  D006               	goto	l9268
  9306                           
  9307                           ; BSR set to: 0
  9308  0052FA  6C17               	negf	___awdiv@divisor^0,c
  9309  0052FC  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  9310  0052FE  B0D8               	btfsc	status,0,c
  9311  005300  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  9312                           
  9313                           ; BSR set to: 0
  9314  005302  0E01               	movlw	1
  9315  005304  6E1A               	movwf	___awdiv@sign^0,c
  9316  005306                     l9268:
  9317                           
  9318                           ; BSR set to: 0
  9319  005306  AE16               	btfss	(___awdiv@dividend+1)^0,7,c
  9320  005308  D006               	goto	l9274
  9321                           
  9322                           ; BSR set to: 0
  9323  00530A  6C15               	negf	___awdiv@dividend^0,c
  9324  00530C  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  9325  00530E  B0D8               	btfsc	status,0,c
  9326  005310  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  9327                           
  9328                           ; BSR set to: 0
  9329  005312  0E01               	movlw	1
  9330  005314  1A1A               	xorwf	___awdiv@sign^0,f,c
  9331  005316                     l9274:
  9332                           
  9333                           ; BSR set to: 0
  9334  005316  0E00               	movlw	0
  9335  005318  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  9336  00531A  0E00               	movlw	0
  9337  00531C  6E1B               	movwf	___awdiv@quotient^0,c
  9338                           
  9339                           ; BSR set to: 0
  9340  00531E  5017               	movf	___awdiv@divisor^0,w,c
  9341  005320  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  9342  005322  B4D8               	btfsc	status,2,c
  9343  005324  D01C               	goto	l9296
  9344                           
  9345                           ; BSR set to: 0
  9346  005326  0E01               	movlw	1
  9347  005328  6E19               	movwf	___awdiv@counter^0,c
  9348  00532A  D004               	goto	l9282
  9349  00532C                     l9280:
  9350                           
  9351                           ; BSR set to: 0
  9352  00532C  90D8               	bcf	status,0,c
  9353  00532E  3617               	rlcf	___awdiv@divisor^0,f,c
  9354  005330  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  9355  005332  2A19               	incf	___awdiv@counter^0,f,c
  9356  005334                     l9282:
  9357                           
  9358                           ; BSR set to: 0
  9359  005334  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9360  005336  D7FA               	goto	l9280
  9361  005338                     u10440:
  9362                           
  9363                           ; BSR set to: 0
  9364  005338  90D8               	bcf	status,0,c
  9365  00533A  361B               	rlcf	___awdiv@quotient^0,f,c
  9366  00533C  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  9367                           
  9368                           ; BSR set to: 0
  9369  00533E  5017               	movf	___awdiv@divisor^0,w,c
  9370  005340  5C15               	subwf	___awdiv@dividend^0,w,c
  9371  005342  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9372  005344  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  9373  005346  A0D8               	btfss	status,0,c
  9374  005348  D005               	goto	l9292
  9375                           
  9376                           ; BSR set to: 0
  9377  00534A  5017               	movf	___awdiv@divisor^0,w,c
  9378  00534C  5E15               	subwf	___awdiv@dividend^0,f,c
  9379  00534E  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9380  005350  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  9381                           
  9382                           ; BSR set to: 0
  9383  005352  801B               	bsf	___awdiv@quotient^0,0,c
  9384  005354                     l9292:
  9385                           
  9386                           ; BSR set to: 0
  9387  005354  90D8               	bcf	status,0,c
  9388  005356  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  9389  005358  3217               	rrcf	___awdiv@divisor^0,f,c
  9390                           
  9391                           ; BSR set to: 0
  9392  00535A  2E19               	decfsz	___awdiv@counter^0,f,c
  9393  00535C  D7ED               	goto	u10440
  9394  00535E                     l9296:
  9395                           
  9396                           ; BSR set to: 0
  9397  00535E  501A               	movf	___awdiv@sign^0,w,c
  9398  005360  B4D8               	btfsc	status,2,c
  9399  005362  D004               	goto	l9300
  9400                           
  9401                           ; BSR set to: 0
  9402  005364  6C1B               	negf	___awdiv@quotient^0,c
  9403  005366  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  9404  005368  B0D8               	btfsc	status,0,c
  9405  00536A  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  9406  00536C                     l9300:
  9407                           
  9408                           ; BSR set to: 0
  9409  00536C  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  9410  005370  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  9411                           
  9412                           ; BSR set to: 0
  9413  005374  0012               	return		;funcret
  9414  005376                     __end_of___awdiv:
  9415                           	callstack 0
  9416                           
  9417 ;; *************** function _atoi *****************
  9418 ;; Defined at:
  9419 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  s               1   27[COMRAM] PTR const unsigned char 
  9422 ;;		 -> STR_10(21), STR_6(74), 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  n               2   35[COMRAM] int 
  9425 ;;  neg             2   33[COMRAM] int 
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  2   27[COMRAM] int 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9430 ;; Tracked objects:
  9431 ;;		On entry : 3F/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9436 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9437 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9438 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9439 ;;Total ram usage:       10 bytes
  9440 ;; Hardware stack levels used: 1
  9441 ;; Hardware stack levels required when called: 5
  9442 ;; This function calls:
  9443 ;;		___wmul
  9444 ;;		_isdigit
  9445 ;;		_isspace
  9446 ;; This function is called by:
  9447 ;;		_vfpfcnvrt
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           	psect	text28
  9452  004824                     __ptext28:
  9453                           	callstack 0
  9454  004824                     _atoi:
  9455                           	callstack 20
  9456                           
  9457                           ; BSR set to: 0
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;incstack = 0
  9461  004824  0E00               	movlw	0
  9462  004826  6E25               	movwf	(atoi@n+1)^0,c
  9463  004828  0E00               	movlw	0
  9464  00482A  6E24               	movwf	atoi@n^0,c
  9465  00482C  0E00               	movlw	0
  9466  00482E  6E23               	movwf	(atoi@neg+1)^0,c
  9467  004830  0E00               	movlw	0
  9468  004832  6E22               	movwf	atoi@neg^0,c
  9469  004834  D001               	goto	l9980
  9470  004836                     l9976:
  9471                           
  9472                           ; BSR set to: 0
  9473  004836  2A1C               	incf	atoi@s^0,f,c
  9474  004838                     l9980:
  9475                           
  9476                           ; BSR set to: 0
  9477  004838  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9478  00483E                     	if	1	;There is more than 1 active tblptr byte
  9479  00483E  0E20               	movlw	high __smallconst
  9480  004840  6EF7               	movwf	tblptrh,c
  9481  004842                     	endif
  9482  004842                     	if	0	;tblptru may be non-zero
  9483  004842                     	endif
  9484  004842                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9485  004842  0E00               	movlw	low (__smallconst shr (0+16))
  9486  004844  6EF8               	movwf	tblptru,c
  9487  004846                     	endif
  9488  004846  0008               	tblrd		*
  9489  004848  50F5               	movf	tablat,w,c
  9490  00484A  0A20               	xorlw	32
  9491  00484C  B4D8               	btfsc	status,2,c
  9492  00484E  D7F3               	goto	l9976
  9493                           
  9494                           ; BSR set to: 0
  9495  004850  0EF7               	movlw	247
  9496  004852  6E1E               	movwf	??_atoi^0,c
  9497  004854  0EFF               	movlw	255
  9498  004856  6E1F               	movwf	(??_atoi+1)^0,c
  9499  004858  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9500  00485E                     	if	1	;There is more than 1 active tblptr byte
  9501  00485E  0E20               	movlw	high __smallconst
  9502  004860  6EF7               	movwf	tblptrh,c
  9503  004862                     	endif
  9504  004862                     	if	0	;tblptru may be non-zero
  9505  004862                     	endif
  9506  004862                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9507  004862  0E00               	movlw	low (__smallconst shr (0+16))
  9508  004864  6EF8               	movwf	tblptru,c
  9509  004866                     	endif
  9510  004866  0008               	tblrd		*
  9511  004868  50F5               	movf	tablat,w,c
  9512  00486A  6E20               	movwf	(??_atoi+2)^0,c
  9513  00486C  6A21               	clrf	(??_atoi+3)^0,c
  9514  00486E  501E               	movf	??_atoi^0,w,c
  9515  004870  2620               	addwf	(??_atoi+2)^0,f,c
  9516  004872  501F               	movf	(??_atoi+1)^0,w,c
  9517  004874  2221               	addwfc	(??_atoi+3)^0,f,c
  9518  004876  5021               	movf	(??_atoi+3)^0,w,c
  9519  004878  E10B               	bnz	l9988
  9520  00487A  0E05               	movlw	5
  9521  00487C  5C20               	subwf	(??_atoi+2)^0,w,c
  9522  00487E  B0D8               	btfsc	status,0,c
  9523  004880  D007               	goto	l9988
  9524  004882  D7D9               	goto	l9976
  9525  004884                     l9984:
  9526                           
  9527                           ; BSR set to: 0
  9528  004884  0E00               	movlw	0
  9529  004886  6E23               	movwf	(atoi@neg+1)^0,c
  9530  004888  0E01               	movlw	1
  9531  00488A  6E22               	movwf	atoi@neg^0,c
  9532  00488C                     l9986:
  9533  00488C  2A1C               	incf	atoi@s^0,f,c
  9534  00488E  D034               	goto	l9996
  9535  004890                     l9988:
  9536                           
  9537                           ; BSR set to: 0
  9538  004890  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9539  004896                     	if	1	;There is more than 1 active tblptr byte
  9540  004896  0E20               	movlw	high __smallconst
  9541  004898  6EF7               	movwf	tblptrh,c
  9542  00489A                     	endif
  9543  00489A                     	if	0	;tblptru may be non-zero
  9544  00489A                     	endif
  9545  00489A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9546  00489A  0E00               	movlw	low (__smallconst shr (0+16))
  9547  00489C  6EF8               	movwf	tblptru,c
  9548  00489E                     	endif
  9549  00489E  0008               	tblrd		*
  9550  0048A0  50F5               	movf	tablat,w,c
  9551  0048A2  6E1E               	movwf	??_atoi^0,c
  9552  0048A4  6A1F               	clrf	(??_atoi+1)^0,c
  9553                           
  9554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9555                           ; Switch size 1, requested type "simple"
  9556                           ; Number of cases is 1, Range of values is 0 to 0
  9557                           ; switch strategies available:
  9558                           ; Name         Instructions Cycles
  9559                           ; simple_byte            4     3 (average)
  9560                           ;	Chosen strategy is simple_byte
  9561  0048A6  501F               	movf	(??_atoi+1)^0,w,c
  9562  0048A8  0A00               	xorlw	0	; case 0
  9563  0048AA  A4D8               	btfss	status,2,c
  9564  0048AC  D025               	goto	l9996
  9565                           
  9566                           ; BSR set to: 0
  9567                           ; Switch size 1, requested type "simple"
  9568                           ; Number of cases is 2, Range of values is 43 to 45
  9569                           ; switch strategies available:
  9570                           ; Name         Instructions Cycles
  9571                           ; simple_byte            7     4 (average)
  9572                           ;	Chosen strategy is simple_byte
  9573  0048AE  501E               	movf	??_atoi^0,w,c
  9574  0048B0  0A2B               	xorlw	43	; case 43
  9575  0048B2  B4D8               	btfsc	status,2,c
  9576  0048B4  D7EB               	goto	l9986
  9577  0048B6  0A06               	xorlw	6	; case 45
  9578  0048B8  B4D8               	btfsc	status,2,c
  9579  0048BA  D7E4               	goto	l9984
  9580  0048BC  D01D               	goto	l9996
  9581  0048BE                     l9990:
  9582  0048BE  C024  F015         	movff	atoi@n,___wmul@multiplier
  9583  0048C2  C025  F016         	movff	atoi@n+1,___wmul@multiplier+1
  9584  0048C6  0E00               	movlw	0
  9585  0048C8  6E18               	movwf	(___wmul@multiplicand+1)^0,c
  9586  0048CA  0E0A               	movlw	10
  9587  0048CC  6E17               	movwf	___wmul@multiplicand^0,c
  9588  0048CE  EC65  F02D         	call	___wmul	;wreg free
  9589  0048D2  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9590  0048D8                     	if	1	;There is more than 1 active tblptr byte
  9591  0048D8  0E20               	movlw	high __smallconst
  9592  0048DA  6EF7               	movwf	tblptrh,c
  9593  0048DC                     	endif
  9594  0048DC                     	if	0	;tblptru may be non-zero
  9595  0048DC                     	endif
  9596  0048DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9597  0048DC  0E00               	movlw	low (__smallconst shr (0+16))
  9598  0048DE  6EF8               	movwf	tblptru,c
  9599  0048E0                     	endif
  9600  0048E0  0008               	tblrd		*
  9601  0048E2  50F5               	movf	tablat,w,c
  9602  0048E4  5E15               	subwf	?___wmul^0,f,c
  9603  0048E6  0E00               	movlw	0
  9604  0048E8  5A16               	subwfb	(?___wmul+1)^0,f,c
  9605  0048EA  0E30               	movlw	48
  9606  0048EC  2415               	addwf	?___wmul^0,w,c
  9607  0048EE  6E24               	movwf	atoi@n^0,c
  9608  0048F0  0E00               	movlw	0
  9609  0048F2  2016               	addwfc	(?___wmul+1)^0,w,c
  9610  0048F4  6E25               	movwf	(atoi@n+1)^0,c
  9611  0048F6  D7CA               	goto	l9986
  9612  0048F8                     l9996:
  9613  0048F8  0ED0               	movlw	208
  9614  0048FA  6E1E               	movwf	??_atoi^0,c
  9615  0048FC  0EFF               	movlw	255
  9616  0048FE  6E1F               	movwf	(??_atoi+1)^0,c
  9617  004900  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9618  004906                     	if	1	;There is more than 1 active tblptr byte
  9619  004906  0E20               	movlw	high __smallconst
  9620  004908  6EF7               	movwf	tblptrh,c
  9621  00490A                     	endif
  9622  00490A                     	if	0	;tblptru may be non-zero
  9623  00490A                     	endif
  9624  00490A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9625  00490A  0E00               	movlw	low (__smallconst shr (0+16))
  9626  00490C  6EF8               	movwf	tblptru,c
  9627  00490E                     	endif
  9628  00490E  0008               	tblrd		*
  9629  004910  50F5               	movf	tablat,w,c
  9630  004912  6E20               	movwf	(??_atoi+2)^0,c
  9631  004914  6A21               	clrf	(??_atoi+3)^0,c
  9632  004916  501E               	movf	??_atoi^0,w,c
  9633  004918  2620               	addwf	(??_atoi+2)^0,f,c
  9634  00491A  501F               	movf	(??_atoi+1)^0,w,c
  9635  00491C  2221               	addwfc	(??_atoi+3)^0,f,c
  9636  00491E  5021               	movf	(??_atoi+3)^0,w,c
  9637  004920  E104               	bnz	u11810
  9638  004922  0E0A               	movlw	10
  9639  004924  5C20               	subwf	(??_atoi+2)^0,w,c
  9640  004926  A0D8               	btfss	status,0,c
  9641  004928  D7CA               	goto	l9990
  9642  00492A                     u11810:
  9643  00492A  5022               	movf	atoi@neg^0,w,c
  9644  00492C  1023               	iorwf	(atoi@neg+1)^0,w,c
  9645  00492E  A4D8               	btfss	status,2,c
  9646  004930  D00D               	goto	l2086
  9647  004932  C024  F01E         	movff	atoi@n,??_atoi
  9648  004936  C025  F01F         	movff	atoi@n+1,??_atoi+1
  9649  00493A  1E1E               	comf	??_atoi^0,f,c
  9650  00493C  1E1F               	comf	(??_atoi+1)^0,f,c
  9651  00493E  4A1E               	infsnz	??_atoi^0,f,c
  9652  004940  2A1F               	incf	(??_atoi+1)^0,f,c
  9653  004942  C01E  F01C         	movff	??_atoi,?_atoi
  9654  004946  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9655  00494A  0012               	return	
  9656  00494C                     l2086:
  9657  00494C  C024  F01C         	movff	atoi@n,?_atoi
  9658  004950  C025  F01D         	movff	atoi@n+1,?_atoi+1
  9659  004954  0012               	return		;funcret
  9660  004956                     __end_of_atoi:
  9661                           	callstack 0
  9662                           
  9663 ;; *************** function _isspace *****************
  9664 ;; Defined at:
  9665 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  c               2   20[COMRAM] int 
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;		None
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  2   20[COMRAM] int 
  9672 ;; Registers used:
  9673 ;;		wreg, status,2, status,0
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 0/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9681 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9682 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9683 ;;Total ram usage:        7 bytes
  9684 ;; Hardware stack levels used: 1
  9685 ;; Hardware stack levels required when called: 4
  9686 ;; This function calls:
  9687 ;;		Nothing
  9688 ;; This function is called by:
  9689 ;;		_atoi
  9690 ;; This function uses a non-reentrant model
  9691 ;;
  9692                           
  9693                           	psect	text29
  9694  0057C2                     __ptext29:
  9695                           	callstack 0
  9696  0057C2                     _isspace:
  9697                           	callstack 20
  9698                           
  9699                           ;incstack = 0
  9700  0057C2  0E01               	movlw	1
  9701  0057C4  6E1B               	movwf	_isspace$2835^0,c
  9702  0057C6  0E20               	movlw	32
  9703  0057C8  1815               	xorwf	isspace@c^0,w,c
  9704  0057CA  1016               	iorwf	(isspace@c+1)^0,w,c
  9705  0057CC  B4D8               	btfsc	status,2,c
  9706  0057CE  D014               	goto	l9566
  9707  0057D0  0EF7               	movlw	247
  9708  0057D2  6E17               	movwf	??_isspace^0,c
  9709  0057D4  0EFF               	movlw	255
  9710  0057D6  6E18               	movwf	(??_isspace+1)^0,c
  9711  0057D8  C015  F019         	movff	isspace@c,??_isspace+2
  9712  0057DC  C016  F01A         	movff	isspace@c+1,??_isspace+3
  9713  0057E0  5017               	movf	??_isspace^0,w,c
  9714  0057E2  2619               	addwf	(??_isspace+2)^0,f,c
  9715  0057E4  5018               	movf	(??_isspace+1)^0,w,c
  9716  0057E6  221A               	addwfc	(??_isspace+3)^0,f,c
  9717  0057E8  501A               	movf	(??_isspace+3)^0,w,c
  9718  0057EA  E104               	bnz	u11030
  9719  0057EC  0E05               	movlw	5
  9720  0057EE  5C19               	subwf	(??_isspace+2)^0,w,c
  9721  0057F0  A0D8               	btfss	status,0,c
  9722  0057F2  D002               	goto	l9566
  9723  0057F4                     u11030:
  9724  0057F4  0E00               	movlw	0
  9725  0057F6  6E1B               	movwf	_isspace$2835^0,c
  9726  0057F8                     l9566:
  9727  0057F8  C01B  F015         	movff	_isspace$2835,?_isspace
  9728  0057FC  6A16               	clrf	(?_isspace+1)^0,c
  9729  0057FE  0012               	return		;funcret
  9730  005800                     __end_of_isspace:
  9731                           	callstack 0
  9732                           
  9733 ;; *************** function _isdigit *****************
  9734 ;; Defined at:
  9735 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  c               2   20[COMRAM] int 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;		None
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  2   20[COMRAM] int 
  9742 ;; Registers used:
  9743 ;;		wreg, status,2, status,0
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9751 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9752 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9753 ;;Total ram usage:        6 bytes
  9754 ;; Hardware stack levels used: 1
  9755 ;; Hardware stack levels required when called: 4
  9756 ;; This function calls:
  9757 ;;		Nothing
  9758 ;; This function is called by:
  9759 ;;		_vfpfcnvrt
  9760 ;;		_atoi
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text30
  9765  005A12                     __ptext30:
  9766                           	callstack 0
  9767  005A12                     _isdigit:
  9768                           	callstack 21
  9769                           
  9770                           ;incstack = 0
  9771  005A12  0ED0               	movlw	208
  9772  005A14  6E17               	movwf	??_isdigit^0,c
  9773  005A16  0EFF               	movlw	255
  9774  005A18  6E18               	movwf	(??_isdigit+1)^0,c
  9775  005A1A  C015  F019         	movff	isdigit@c,??_isdigit+2
  9776  005A1E  C016  F01A         	movff	isdigit@c+1,??_isdigit+3
  9777  005A22  5017               	movf	??_isdigit^0,w,c
  9778  005A24  2619               	addwf	(??_isdigit+2)^0,f,c
  9779  005A26  5018               	movf	(??_isdigit+1)^0,w,c
  9780  005A28  221A               	addwfc	(??_isdigit+3)^0,f,c
  9781  005A2A  501A               	movf	(??_isdigit+3)^0,w,c
  9782  005A2C  E106               	bnz	u11000
  9783  005A2E  0E0A               	movlw	10
  9784  005A30  5C19               	subwf	(??_isdigit+2)^0,w,c
  9785  005A32  B0D8               	btfsc	status,0,c
  9786  005A34  D002               	goto	u11000
  9787  005A36  0E01               	movlw	1
  9788  005A38  D001               	goto	u11010
  9789  005A3A                     u11000:
  9790  005A3A  0E00               	movlw	0
  9791  005A3C                     u11010:
  9792  005A3C  6E15               	movwf	?_isdigit^0,c
  9793  005A3E  6A16               	clrf	(?_isdigit+1)^0,c
  9794  005A40  0012               	return		;funcret
  9795  005A42                     __end_of_isdigit:
  9796                           	callstack 0
  9797                           
  9798 ;; *************** function ___wmul *****************
  9799 ;; Defined at:
  9800 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  multiplier      2   20[COMRAM] unsigned int 
  9803 ;;  multiplicand    2   22[COMRAM] unsigned int 
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;  product         2   24[COMRAM] unsigned int 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  2   20[COMRAM] unsigned int 
  9808 ;; Registers used:
  9809 ;;		wreg, status,2, status,0, prodl, prodh
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9818 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9819 ;;Total ram usage:        6 bytes
  9820 ;; Hardware stack levels used: 1
  9821 ;; Hardware stack levels required when called: 4
  9822 ;; This function calls:
  9823 ;;		Nothing
  9824 ;; This function is called by:
  9825 ;;		_atoi
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           	psect	text31
  9830  005ACA                     __ptext31:
  9831                           	callstack 0
  9832  005ACA                     ___wmul:
  9833                           	callstack 20
  9834                           
  9835                           ;incstack = 0
  9836  005ACA  5015               	movf	___wmul@multiplier^0,w,c
  9837  005ACC  0217               	mulwf	___wmul@multiplicand^0,c
  9838  005ACE  006F FFCC  F019    	movff	prodl,___wmul@product
  9839  005AD4  006F FFD0  F01A    	movff	prodh,___wmul@product+1
  9840  005ADA  5015               	movf	___wmul@multiplier^0,w,c
  9841  005ADC  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  9842  005ADE  50F3               	movf	243,w,c
  9843  005AE0  261A               	addwf	(___wmul@product+1)^0,f,c
  9844  005AE2  5016               	movf	(___wmul@multiplier+1)^0,w,c
  9845  005AE4  0217               	mulwf	___wmul@multiplicand^0,c
  9846  005AE6  50F3               	movf	243,w,c
  9847  005AE8  261A               	addwf	(___wmul@product+1)^0,f,c
  9848  005AEA  C019  F015         	movff	___wmul@product,?___wmul
  9849  005AEE  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  9850  005AF2  0012               	return		;funcret
  9851  005AF4                     __end_of___wmul:
  9852                           	callstack 0
  9853                           
  9854 ;; *************** function _display_led *****************
  9855 ;; Defined at:
  9856 ;;		line 3 in file "disp_led.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;  led             1    wreg     enum E17121
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;  led             1   22[COMRAM] enum E17121
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  1    wreg      void 
  9863 ;; Registers used:
  9864 ;;		wreg, status,2, status,0
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9873 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9874 ;;Total ram usage:        3 bytes
  9875 ;; Hardware stack levels used: 1
  9876 ;; Hardware stack levels required when called: 4
  9877 ;; This function calls:
  9878 ;;		Nothing
  9879 ;; This function is called by:
  9880 ;;		_main
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           	psect	text32
  9885  004D40                     __ptext32:
  9886                           	callstack 0
  9887  004D40                     _display_led:
  9888                           	callstack 26
  9889                           
  9890                           ;incstack = 0
  9891                           ;display_led@led stored from wreg
  9892  004D40  6E17               	movwf	display_led@led^0,c
  9893                           
  9894                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
  9895  004D42  D02D               	goto	l10500
  9896  004D44                     l983:
  9897  004D44  98BD               	bcf	189,4,c	;volatile
  9898                           
  9899                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
  9900  004D46  9ABD               	bcf	189,5,c	;volatile
  9901  004D48  0012               	return	
  9902  004D4A                     l989:
  9903  004D4A  98BD               	bcf	189,4,c	;volatile
  9904                           
  9905                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
  9906  004D4C  8ABD               	bsf	189,5,c	;volatile
  9907  004D4E  0012               	return	
  9908  004D50                     l994:
  9909  004D50  88BD               	bsf	189,4,c	;volatile
  9910                           
  9911                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
  9912  004D52  9ABD               	bcf	189,5,c	;volatile
  9913  004D54  0012               	return	
  9914  004D56                     l999:
  9915  004D56  9CBD               	bcf	189,6,c	;volatile
  9916                           
  9917                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
  9918  004D58  9EBD               	bcf	189,7,c	;volatile
  9919  004D5A  0012               	return	
  9920  004D5C                     l1004:
  9921  004D5C  9CBD               	bcf	189,6,c	;volatile
  9922                           
  9923                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
  9924  004D5E  8EBD               	bsf	189,7,c	;volatile
  9925  004D60  0012               	return	
  9926  004D62                     l1009:
  9927  004D62  8CBD               	bsf	189,6,c	;volatile
  9928                           
  9929                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
  9930  004D64  9EBD               	bcf	189,7,c	;volatile
  9931  004D66  0012               	return	
  9932  004D68                     l1014:
  9933  004D68  98BF               	bcf	191,4,c	;volatile
  9934                           
  9935                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
  9936  004D6A  9ABF               	bcf	191,5,c	;volatile
  9937  004D6C  0012               	return	
  9938  004D6E                     l1019:
  9939  004D6E  98BF               	bcf	191,4,c	;volatile
  9940                           
  9941                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
  9942  004D70  8ABF               	bsf	191,5,c	;volatile
  9943  004D72  0012               	return	
  9944  004D74                     l1024:
  9945  004D74  88BF               	bsf	191,4,c	;volatile
  9946                           
  9947                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
  9948  004D76  9ABF               	bcf	191,5,c	;volatile
  9949  004D78  0012               	return	
  9950  004D7A                     l1029:
  9951  004D7A  9CBF               	bcf	191,6,c	;volatile
  9952                           
  9953                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
  9954  004D7C  9EBF               	bcf	191,7,c	;volatile
  9955  004D7E  0012               	return	
  9956  004D80                     l1034:
  9957  004D80  9CBF               	bcf	191,6,c	;volatile
  9958                           
  9959                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
  9960  004D82  8EBF               	bsf	191,7,c	;volatile
  9961  004D84  0012               	return	
  9962  004D86                     l1039:
  9963  004D86  8CBF               	bsf	191,6,c	;volatile
  9964                           
  9965                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
  9966  004D88  9EBF               	bcf	191,7,c	;volatile
  9967  004D8A  0012               	return	
  9968  004D8C                     l1044:
  9969  004D8C  98BD               	bcf	189,4,c	;volatile
  9970                           
  9971                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
  9972  004D8E  9ABD               	bcf	189,5,c	;volatile
  9973                           
  9974                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
  9975  004D90  9CBD               	bcf	189,6,c	;volatile
  9976                           
  9977                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
  9978  004D92  9EBD               	bcf	189,7,c	;volatile
  9979                           
  9980                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
  9981  004D94  98BF               	bcf	191,4,c	;volatile
  9982                           
  9983                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
  9984  004D96  9ABF               	bcf	191,5,c	;volatile
  9985                           
  9986                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
  9987  004D98  9CBF               	bcf	191,6,c	;volatile
  9988                           
  9989                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
  9990  004D9A  9EBF               	bcf	191,7,c	;volatile
  9991  004D9C  0012               	return	
  9992  004D9E                     l10500:
  9993  004D9E  5017               	movf	display_led@led^0,w,c
  9994  004DA0  6E15               	movwf	??_display_led^0,c
  9995  004DA2  6A16               	clrf	(??_display_led+1)^0,c
  9996                           
  9997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9998                           ; Switch size 1, requested type "simple"
  9999                           ; Number of cases is 1, Range of values is 0 to 0
 10000                           ; switch strategies available:
 10001                           ; Name         Instructions Cycles
 10002                           ; simple_byte            4     3 (average)
 10003                           ;	Chosen strategy is simple_byte
 10004  004DA4  5016               	movf	(??_display_led+1)^0,w,c
 10005  004DA6  0A00               	xorlw	0	; case 0
 10006  004DA8  A4D8               	btfss	status,2,c
 10007  004DAA  D7F0               	goto	l1044
 10008                           
 10009                           ; Switch size 1, requested type "simple"
 10010                           ; Number of cases is 12, Range of values is 0 to 11
 10011                           ; switch strategies available:
 10012                           ; Name         Instructions Cycles
 10013                           ; simple_byte           37    19 (average)
 10014                           ;	Chosen strategy is simple_byte
 10015  004DAC  5015               	movf	??_display_led^0,w,c
 10016  004DAE  0A00               	xorlw	0	; case 0
 10017  004DB0  B4D8               	btfsc	status,2,c
 10018  004DB2  D7C8               	goto	l983
 10019  004DB4  0A01               	xorlw	1	; case 1
 10020  004DB6  B4D8               	btfsc	status,2,c
 10021  004DB8  D7CB               	goto	l994
 10022  004DBA  0A03               	xorlw	3	; case 2
 10023  004DBC  B4D8               	btfsc	status,2,c
 10024  004DBE  D7C5               	goto	l989
 10025  004DC0  0A01               	xorlw	1	; case 3
 10026  004DC2  B4D8               	btfsc	status,2,c
 10027  004DC4  D7C8               	goto	l999
 10028  004DC6  0A07               	xorlw	7	; case 4
 10029  004DC8  B4D8               	btfsc	status,2,c
 10030  004DCA  D7CB               	goto	l1009
 10031  004DCC  0A01               	xorlw	1	; case 5
 10032  004DCE  B4D8               	btfsc	status,2,c
 10033  004DD0  D7C5               	goto	l1004
 10034  004DD2  0A03               	xorlw	3	; case 6
 10035  004DD4  B4D8               	btfsc	status,2,c
 10036  004DD6  D7C8               	goto	l1014
 10037  004DD8  0A01               	xorlw	1	; case 7
 10038  004DDA  B4D8               	btfsc	status,2,c
 10039  004DDC  D7CB               	goto	l1024
 10040  004DDE  0A0F               	xorlw	15	; case 8
 10041  004DE0  B4D8               	btfsc	status,2,c
 10042  004DE2  D7C5               	goto	l1019
 10043  004DE4  0A01               	xorlw	1	; case 9
 10044  004DE6  B4D8               	btfsc	status,2,c
 10045  004DE8  D7C8               	goto	l1029
 10046  004DEA  0A03               	xorlw	3	; case 10
 10047  004DEC  B4D8               	btfsc	status,2,c
 10048  004DEE  D7CB               	goto	l1039
 10049  004DF0  0A01               	xorlw	1	; case 11
 10050  004DF2  B4D8               	btfsc	status,2,c
 10051  004DF4  D7C5               	goto	l1034
 10052  004DF6  D7CA               	goto	l1044
 10053  004DF8                     __end_of_display_led:
 10054                           	callstack 0
 10055                           
 10056 ;; *************** function _cli_read *****************
 10057 ;; Defined at:
 10058 ;;		line 82 in file "scdm.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;  a_ctx           2   49[COMRAM] PTR struct _t_cli_ctx
 10061 ;;		 -> cli_ctx(131), 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  i               1   12[BANK0 ] unsigned char 
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  1    wreg      void 
 10066 ;; Registers used:
 10067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/0
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10074 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10075 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10076 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10077 ;;Total ram usage:        8 bytes
 10078 ;; Hardware stack levels used: 1
 10079 ;; Hardware stack levels required when called: 11
 10080 ;; This function calls:
 10081 ;;		__cli_interpret_cmd
 10082 ;;		_linux_getc
 10083 ;;		_linux_putc
 10084 ;;		_memset
 10085 ;; This function is called by:
 10086 ;;		_main
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text33
 10091  0042FA                     __ptext33:
 10092                           	callstack 0
 10093  0042FA                     _cli_read:
 10094                           	callstack 19
 10095                           
 10096                           ;scdm.c: 82: void cli_read(t_cli_ctx *a_ctx);scdm.c: 83: {;scdm.c: 84:  uint8_t i = 0x00
      +                          ;
 10097                           
 10098                           ;incstack = 0
 10099  0042FA  0E00               	movlw	0
 10100  0042FC  0100               	movlb	0	; () banked
 10101  0042FE  6F6C               	movwf	cli_read@i& (0+255),b
 10102                           
 10103                           ; BSR set to: 0
 10104                           ;scdm.c: 87:  if (!linux_getc(&i)) {
 10105  004300  0E6C               	movlw	low cli_read@i
 10106  004302  6E16               	movwf	linux_getc@a_data^0,c
 10107  004304  EC8F  F02D         	call	_linux_getc	;wreg free
 10108  004308  0900               	iorlw	0
 10109  00430A  B4D8               	btfsc	status,2,c
 10110  00430C  0012               	return	
 10111  00430E  D08A               	goto	l10540
 10112  004310                     l10518:
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;scdm.c: 99:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cpo
      +                          s))] = '\0';
 10116  004310  EE20 F082          	lfsr	2,130
 10117  004314  5032               	movf	cli_read@a_ctx^0,w,c
 10118  004316  26D9               	addwf	fsr2l,f,c
 10119  004318  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10120  00431A  22DA               	addwfc	fsr2h,f,c
 10121  00431C  0E7E               	movlw	126
 10122  00431E  64DF               	cpfsgt	indf2,c
 10123  004320  D00C               	goto	l10522
 10124                           
 10125                           ; BSR set to: 0
 10126  004322  EE20 F082          	lfsr	2,130
 10127  004326  5032               	movf	cli_read@a_ctx^0,w,c
 10128  004328  26D9               	addwf	fsr2l,f,c
 10129  00432A  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10130  00432C  22DA               	addwfc	fsr2h,f,c
 10131  00432E  50DF               	movf	indf2,w,c
 10132  004330  6E34               	movwf	??_cli_read^0,c
 10133  004332  5034               	movf	??_cli_read^0,w,c
 10134  004334  6F6A               	movwf	_cli_read$2151& (0+255),b
 10135  004336  6B6B               	clrf	(_cli_read$2151+1)& (0+255),b
 10136  004338  D00E               	goto	l1134
 10137  00433A                     l10522:
 10138                           
 10139                           ; BSR set to: 0
 10140  00433A  EE20 F082          	lfsr	2,130
 10141  00433E  5032               	movf	cli_read@a_ctx^0,w,c
 10142  004340  26D9               	addwf	fsr2l,f,c
 10143  004342  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10144  004344  22DA               	addwfc	fsr2h,f,c
 10145  004346  50DF               	movf	indf2,w,c
 10146  004348  6E34               	movwf	??_cli_read^0,c
 10147  00434A  0E01               	movlw	1
 10148  00434C  2434               	addwf	??_cli_read^0,w,c
 10149  00434E  6F6A               	movwf	_cli_read$2151& (0+255),b
 10150  004350  6B6B               	clrf	(_cli_read$2151+1)& (0+255),b
 10151  004352  0E00               	movlw	0
 10152  004354  236B               	addwfc	(_cli_read$2151+1)& (0+255),f,b
 10153  004356                     l1134:
 10154                           
 10155                           ; BSR set to: 0
 10156  004356  516A               	movf	_cli_read$2151& (0+255),w,b
 10157  004358  2432               	addwf	cli_read@a_ctx^0,w,c
 10158  00435A  6E34               	movwf	??_cli_read^0,c
 10159  00435C  516B               	movf	(_cli_read$2151+1)& (0+255),w,b
 10160  00435E  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10161  004360  6E35               	movwf	(??_cli_read+1)^0,c
 10162  004362  0E02               	movlw	2
 10163  004364  2434               	addwf	??_cli_read^0,w,c
 10164  004366  6ED9               	movwf	fsr2l,c
 10165  004368  0E00               	movlw	0
 10166  00436A  2035               	addwfc	(??_cli_read+1)^0,w,c
 10167  00436C  6EDA               	movwf	fsr2h,c
 10168  00436E  0E00               	movlw	0
 10169  004370  6EDF               	movwf	indf2,c
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;scdm.c: 100:   linux_putc((unsigned char *) "\r\n", 2);
 10173  004372  0EC1               	movlw	low (STR_5+15)
 10174  004374  6E2C               	movwf	linux_putc@data^0,c
 10175  004376  502C               	movf	linux_putc@data^0,w,c
 10176  004378  A4D8               	btfss	status,2,c
 10177  00437A  0E20               	movlw	high __smallconst
 10178  00437C  6E2D               	movwf	(linux_putc@data+1)^0,c
 10179  00437E  0E02               	movlw	2
 10180  004380  6E2E               	movwf	linux_putc@a_len^0,c
 10181  004382  EC6F  F02E         	call	_linux_putc	;wreg free
 10182                           
 10183                           ;scdm.c: 101:   res = _cli_interpret_cmd(a_ctx);
 10184  004386  C032  F02E         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 10185  00438A  C033  F02F         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 10186  00438E  EC3D  F01E         	call	__cli_interpret_cmd	;wreg free
 10187  004392  6E43               	movwf	_res^0,c
 10188                           
 10189                           ;scdm.c: 102:   a_ctx->cpos = 0;
 10190  004394  EE20 F082          	lfsr	2,130
 10191  004398  5032               	movf	cli_read@a_ctx^0,w,c
 10192  00439A  26D9               	addwf	fsr2l,f,c
 10193  00439C  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10194  00439E  22DA               	addwfc	fsr2h,f,c
 10195  0043A0  0E00               	movlw	0
 10196  0043A2  6EDF               	movwf	indf2,c
 10197                           
 10198                           ;scdm.c: 103:   memset(a_ctx->cmd, 0x00, 128);
 10199  0043A4  0E02               	movlw	2
 10200  0043A6  2432               	addwf	cli_read@a_ctx^0,w,c
 10201  0043A8  6E15               	movwf	memset@dest^0,c
 10202  0043AA  0E00               	movlw	0
 10203  0043AC  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10204  0043AE  6E16               	movwf	(memset@dest+1)^0,c
 10205  0043B0  0E00               	movlw	0
 10206  0043B2  6E18               	movwf	(memset@c+1)^0,c
 10207  0043B4  0E00               	movlw	0
 10208  0043B6  6E17               	movwf	memset@c^0,c
 10209  0043B8  0E00               	movlw	0
 10210  0043BA  6E1A               	movwf	(memset@n+1)^0,c
 10211  0043BC  0E80               	movlw	128
 10212  0043BE  6E19               	movwf	memset@n^0,c
 10213  0043C0  EC28  F022         	call	_memset	;wreg free
 10214                           
 10215                           ;scdm.c: 104:   break;
 10216  0043C4  0012               	return	
 10217  0043C6                     l10532:
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;scdm.c: 107:   if (a_ctx->cpos < (128 - 1)) {
 10221  0043C6  EE20 F082          	lfsr	2,130
 10222  0043CA  5032               	movf	cli_read@a_ctx^0,w,c
 10223  0043CC  26D9               	addwf	fsr2l,f,c
 10224  0043CE  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10225  0043D0  22DA               	addwfc	fsr2h,f,c
 10226  0043D2  0E7F               	movlw	127
 10227  0043D4  60DF               	cpfslt	indf2,c
 10228  0043D6  0012               	return	
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;scdm.c: 108:    a_ctx->cmd[a_ctx->cpos++] = i;
 10232  0043D8  EE20 F082          	lfsr	2,130
 10233  0043DC  5032               	movf	cli_read@a_ctx^0,w,c
 10234  0043DE  26D9               	addwf	fsr2l,f,c
 10235  0043E0  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10236  0043E2  22DA               	addwfc	fsr2h,f,c
 10237  0043E4  50DF               	movf	indf2,w,c
 10238  0043E6  6E34               	movwf	??_cli_read^0,c
 10239  0043E8  5034               	movf	??_cli_read^0,w,c
 10240  0043EA  2432               	addwf	cli_read@a_ctx^0,w,c
 10241  0043EC  6E35               	movwf	(??_cli_read+1)^0,c
 10242  0043EE  0E00               	movlw	0
 10243  0043F0  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10244  0043F2  6E36               	movwf	(??_cli_read+2)^0,c
 10245  0043F4  0E02               	movlw	2
 10246  0043F6  2435               	addwf	(??_cli_read+1)^0,w,c
 10247  0043F8  6ED9               	movwf	fsr2l,c
 10248  0043FA  0E00               	movlw	0
 10249  0043FC  2036               	addwfc	(??_cli_read+2)^0,w,c
 10250  0043FE  6EDA               	movwf	fsr2h,c
 10251  004400  0060  F1B3  FFDF   	movff	cli_read@i,indf2
 10252  004406  EE20 F082          	lfsr	2,130
 10253  00440A  5032               	movf	cli_read@a_ctx^0,w,c
 10254  00440C  26D9               	addwf	fsr2l,f,c
 10255  00440E  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10256  004410  22DA               	addwfc	fsr2h,f,c
 10257  004412  2ADF               	incf	indf2,f,c
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;scdm.c: 109:    linux_putc(&i, 1);
 10261  004414  0E6C               	movlw	low cli_read@i
 10262  004416  6E2C               	movwf	linux_putc@data^0,c
 10263  004418  6A2D               	clrf	(linux_putc@data+1)^0,c
 10264  00441A  0E01               	movlw	1
 10265  00441C  6E2E               	movwf	linux_putc@a_len^0,c
 10266  00441E  EC6F  F02E         	call	_linux_putc	;wreg free
 10267  004422  0012               	return	
 10268  004424                     l10540:
 10269  004424  0100               	movlb	0	; () banked
 10270  004426  516C               	movf	cli_read@i& (0+255),w,b
 10271  004428  6E34               	movwf	??_cli_read^0,c
 10272  00442A  6A35               	clrf	(??_cli_read+1)^0,c
 10273                           
 10274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10275                           ; Switch size 1, requested type "simple"
 10276                           ; Number of cases is 1, Range of values is 0 to 0
 10277                           ; switch strategies available:
 10278                           ; Name         Instructions Cycles
 10279                           ; simple_byte            4     3 (average)
 10280                           ;	Chosen strategy is simple_byte
 10281  00442C  5035               	movf	(??_cli_read+1)^0,w,c
 10282  00442E  0A00               	xorlw	0	; case 0
 10283  004430  A4D8               	btfss	status,2,c
 10284  004432  D7C9               	goto	l10532
 10285                           
 10286                           ; BSR set to: 0
 10287                           ; Switch size 1, requested type "simple"
 10288                           ; Number of cases is 4, Range of values is 13 to 127
 10289                           ; switch strategies available:
 10290                           ; Name         Instructions Cycles
 10291                           ; simple_byte           13     7 (average)
 10292                           ;	Chosen strategy is simple_byte
 10293  004434  5034               	movf	??_cli_read^0,w,c
 10294  004436  0A0D               	xorlw	13	; case 13
 10295  004438  B4D8               	btfsc	status,2,c
 10296  00443A  D76A               	goto	l10518
 10297  00443C  0A16               	xorlw	22	; case 27
 10298  00443E  B4D8               	btfsc	status,2,c
 10299  004440  0012               	return	
 10300  004442  0A65               	xorlw	101	; case 126
 10301  004444  B4D8               	btfsc	status,2,c
 10302  004446  0012               	return	
 10303  004448  0A01               	xorlw	1	; case 127
 10304  00444A  B4D8               	btfsc	status,2,c
 10305  00444C  0012               	return		;funcret
 10306  00444E  D7BB               	goto	l10532
 10307  004450                     __end_of_cli_read:
 10308                           	callstack 0
 10309                           
 10310 ;; *************** function _memset *****************
 10311 ;; Defined at:
 10312 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  dest            2   20[COMRAM] PTR void 
 10315 ;;		 -> cli_ctx(131), 
 10316 ;;  c               2   22[COMRAM] int 
 10317 ;;  n               2   24[COMRAM] unsigned int 
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  s               2   30[COMRAM] PTR unsigned char 
 10320 ;;		 -> cli_ctx(131), 
 10321 ;;  k               2   28[COMRAM] unsigned int 
 10322 ;; Return value:  Size  Location     Type
 10323 ;;                  2   20[COMRAM] PTR void 
 10324 ;; Registers used:
 10325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10326 ;; Tracked objects:
 10327 ;;		On entry : 0/2
 10328 ;;		On exit  : 0/0
 10329 ;;		Unchanged: 0/0
 10330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10331 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10334 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10335 ;;Total ram usage:       12 bytes
 10336 ;; Hardware stack levels used: 1
 10337 ;; Hardware stack levels required when called: 4
 10338 ;; This function calls:
 10339 ;;		Nothing
 10340 ;; This function is called by:
 10341 ;;		_cli_init
 10342 ;;		_cli_read
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text34
 10347  004450                     __ptext34:
 10348                           	callstack 0
 10349  004450                     _memset:
 10350                           	callstack 24
 10351                           
 10352                           ;incstack = 0
 10353  004450  C015  F01F         	movff	memset@dest,memset@s
 10354  004454  C016  F020         	movff	memset@dest+1,memset@s+1
 10355  004458  5019               	movf	memset@n^0,w,c
 10356  00445A  101A               	iorwf	(memset@n+1)^0,w,c
 10357  00445C  B4D8               	btfsc	status,2,c
 10358  00445E  0012               	return	
 10359  004460  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10360  004466  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10361  00446C  0060  F05F  FFDF   	movff	memset@c,indf2
 10362  004472  5019               	movf	memset@n^0,w,c
 10363  004474  241F               	addwf	memset@s^0,w,c
 10364  004476  6E1B               	movwf	??_memset^0,c
 10365  004478  501A               	movf	(memset@n+1)^0,w,c
 10366  00447A  2020               	addwfc	(memset@s+1)^0,w,c
 10367  00447C  6E1C               	movwf	(??_memset+1)^0,c
 10368  00447E  0EFF               	movlw	255
 10369  004480  241B               	addwf	??_memset^0,w,c
 10370  004482  6ED9               	movwf	fsr2l,c
 10371  004484  0EFF               	movlw	255
 10372  004486  201C               	addwfc	(??_memset+1)^0,w,c
 10373  004488  6EDA               	movwf	fsr2h,c
 10374  00448A  0060  F05F  FFDF   	movff	memset@c,indf2
 10375  004490  501A               	movf	(memset@n+1)^0,w,c
 10376  004492  E104               	bnz	l10258
 10377  004494  0E03               	movlw	3
 10378  004496  5C19               	subwf	memset@n^0,w,c
 10379  004498  A0D8               	btfss	status,0,c
 10380  00449A  0012               	return	
 10381  00449C                     l10258:
 10382  00449C  EE20 F001          	lfsr	2,1
 10383  0044A0  501F               	movf	memset@s^0,w,c
 10384  0044A2  26D9               	addwf	fsr2l,f,c
 10385  0044A4  5020               	movf	(memset@s+1)^0,w,c
 10386  0044A6  22DA               	addwfc	fsr2h,f,c
 10387  0044A8  0060  F05F  FFDF   	movff	memset@c,indf2
 10388  0044AE  EE20 F002          	lfsr	2,2
 10389  0044B2  501F               	movf	memset@s^0,w,c
 10390  0044B4  26D9               	addwf	fsr2l,f,c
 10391  0044B6  5020               	movf	(memset@s+1)^0,w,c
 10392  0044B8  22DA               	addwfc	fsr2h,f,c
 10393  0044BA  0060  F05F  FFDF   	movff	memset@c,indf2
 10394  0044C0  5019               	movf	memset@n^0,w,c
 10395  0044C2  241F               	addwf	memset@s^0,w,c
 10396  0044C4  6E1B               	movwf	??_memset^0,c
 10397  0044C6  501A               	movf	(memset@n+1)^0,w,c
 10398  0044C8  2020               	addwfc	(memset@s+1)^0,w,c
 10399  0044CA  6E1C               	movwf	(??_memset+1)^0,c
 10400  0044CC  0EFE               	movlw	254
 10401  0044CE  241B               	addwf	??_memset^0,w,c
 10402  0044D0  6ED9               	movwf	fsr2l,c
 10403  0044D2  0EFF               	movlw	255
 10404  0044D4  201C               	addwfc	(??_memset+1)^0,w,c
 10405  0044D6  6EDA               	movwf	fsr2h,c
 10406  0044D8  0060  F05F  FFDF   	movff	memset@c,indf2
 10407  0044DE  5019               	movf	memset@n^0,w,c
 10408  0044E0  241F               	addwf	memset@s^0,w,c
 10409  0044E2  6E1B               	movwf	??_memset^0,c
 10410  0044E4  501A               	movf	(memset@n+1)^0,w,c
 10411  0044E6  2020               	addwfc	(memset@s+1)^0,w,c
 10412  0044E8  6E1C               	movwf	(??_memset+1)^0,c
 10413  0044EA  0EFD               	movlw	253
 10414  0044EC  241B               	addwf	??_memset^0,w,c
 10415  0044EE  6ED9               	movwf	fsr2l,c
 10416  0044F0  0EFF               	movlw	255
 10417  0044F2  201C               	addwfc	(??_memset+1)^0,w,c
 10418  0044F4  6EDA               	movwf	fsr2h,c
 10419  0044F6  0060  F05F  FFDF   	movff	memset@c,indf2
 10420  0044FC  501A               	movf	(memset@n+1)^0,w,c
 10421  0044FE  E104               	bnz	l10264
 10422  004500  0E07               	movlw	7
 10423  004502  5C19               	subwf	memset@n^0,w,c
 10424  004504  A0D8               	btfss	status,0,c
 10425  004506  0012               	return	
 10426  004508                     l10264:
 10427  004508  EE20 F003          	lfsr	2,3
 10428  00450C  501F               	movf	memset@s^0,w,c
 10429  00450E  26D9               	addwf	fsr2l,f,c
 10430  004510  5020               	movf	(memset@s+1)^0,w,c
 10431  004512  22DA               	addwfc	fsr2h,f,c
 10432  004514  0060  F05F  FFDF   	movff	memset@c,indf2
 10433  00451A  5019               	movf	memset@n^0,w,c
 10434  00451C  241F               	addwf	memset@s^0,w,c
 10435  00451E  6E1B               	movwf	??_memset^0,c
 10436  004520  501A               	movf	(memset@n+1)^0,w,c
 10437  004522  2020               	addwfc	(memset@s+1)^0,w,c
 10438  004524  6E1C               	movwf	(??_memset+1)^0,c
 10439  004526  0EFC               	movlw	252
 10440  004528  241B               	addwf	??_memset^0,w,c
 10441  00452A  6ED9               	movwf	fsr2l,c
 10442  00452C  0EFF               	movlw	255
 10443  00452E  201C               	addwfc	(??_memset+1)^0,w,c
 10444  004530  6EDA               	movwf	fsr2h,c
 10445  004532  0060  F05F  FFDF   	movff	memset@c,indf2
 10446  004538  501A               	movf	(memset@n+1)^0,w,c
 10447  00453A  E104               	bnz	l10270
 10448  00453C  0E09               	movlw	9
 10449  00453E  5C19               	subwf	memset@n^0,w,c
 10450  004540  A0D8               	btfss	status,0,c
 10451  004542  0012               	return	
 10452  004544                     l10270:
 10453  004544  C01F  F01B         	movff	memset@s,??_memset
 10454  004548  C020  F01C         	movff	memset@s+1,??_memset+1
 10455  00454C  1E1B               	comf	??_memset^0,f,c
 10456  00454E  1E1C               	comf	(??_memset+1)^0,f,c
 10457  004550  4A1B               	infsnz	??_memset^0,f,c
 10458  004552  2A1C               	incf	(??_memset+1)^0,f,c
 10459  004554  0E03               	movlw	3
 10460  004556  141B               	andwf	??_memset^0,w,c
 10461  004558  6E1D               	movwf	memset@k^0,c
 10462  00455A  6A1E               	clrf	(memset@k+1)^0,c
 10463  00455C  501D               	movf	memset@k^0,w,c
 10464  00455E  261F               	addwf	memset@s^0,f,c
 10465  004560  501E               	movf	(memset@k+1)^0,w,c
 10466  004562  2220               	addwfc	(memset@s+1)^0,f,c
 10467  004564  501D               	movf	memset@k^0,w,c
 10468  004566  5E19               	subwf	memset@n^0,f,c
 10469  004568  501E               	movf	(memset@k+1)^0,w,c
 10470  00456A  5A1A               	subwfb	(memset@n+1)^0,f,c
 10471  00456C  0EFC               	movlw	252
 10472  00456E  1619               	andwf	memset@n^0,f,c
 10473  004570  0EFF               	movlw	255
 10474  004572  161A               	andwf	(memset@n+1)^0,f,c
 10475  004574  D00E               	goto	l10278
 10476  004576                     l10272:
 10477  004576  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10478  00457C  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10479  004582  0060  F05F  FFDF   	movff	memset@c,indf2
 10480  004588  0619               	decf	memset@n^0,f,c
 10481  00458A  A0D8               	btfss	status,0,c
 10482  00458C  061A               	decf	(memset@n+1)^0,f,c
 10483  00458E  4A1F               	infsnz	memset@s^0,f,c
 10484  004590  2A20               	incf	(memset@s+1)^0,f,c
 10485  004592                     l10278:
 10486  004592  5019               	movf	memset@n^0,w,c
 10487  004594  101A               	iorwf	(memset@n+1)^0,w,c
 10488  004596  B4D8               	btfsc	status,2,c
 10489  004598  0012               	return	
 10490  00459A  D7ED               	goto	l10272
 10491  00459C                     __end_of_memset:
 10492                           	callstack 0
 10493                           
 10494 ;; *************** function _linux_putc *****************
 10495 ;; Defined at:
 10496 ;;		line 47 in file "scdm.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  data            2   43[COMRAM] PTR unsigned char 
 10499 ;;		 -> STR_11(3), cli_read@i(1), 
 10500 ;;  a_len           1   45[COMRAM] unsigned char 
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;		None
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  1    wreg      unsigned char 
 10505 ;; Registers used:
 10506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10507 ;; Tracked objects:
 10508 ;;		On entry : 0/0
 10509 ;;		On exit  : 0/0
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10512 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10515 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10516 ;;Total ram usage:        3 bytes
 10517 ;; Hardware stack levels used: 1
 10518 ;; Hardware stack levels required when called: 9
 10519 ;; This function calls:
 10520 ;;		_puts
 10521 ;; This function is called by:
 10522 ;;		_cli_read
 10523 ;; This function uses a non-reentrant model
 10524 ;;
 10525                           
 10526                           	psect	text35
 10527  005CDE                     __ptext35:
 10528                           	callstack 0
 10529  005CDE                     _linux_putc:
 10530                           	callstack 20
 10531                           
 10532                           ;scdm.c: 47: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 48: {;scdm.c: 49: 
      +                           puts((const char *) data);
 10533                           
 10534                           ;incstack = 0
 10535  005CDE  C02C  F029         	movff	linux_putc@data,puts@s
 10536  005CE2  C02D  F02A         	movff	linux_putc@data+1,puts@s+1
 10537  005CE6  EC9A  F02C         	call	_puts	;wreg free
 10538  005CEA  0012               	return		;funcret
 10539  005CEC                     __end_of_linux_putc:
 10540                           	callstack 0
 10541                           
 10542 ;; *************** function _linux_getc *****************
 10543 ;; Defined at:
 10544 ;;		line 37 in file "scdm.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  a_data          1   21[COMRAM] PTR unsigned char 
 10547 ;;		 -> cli_read@i(1), 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;		None
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      unsigned char 
 10552 ;; Registers used:
 10553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10554 ;; Tracked objects:
 10555 ;;		On entry : 3F/0
 10556 ;;		On exit  : 6/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10559 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10563 ;;Total ram usage:        2 bytes
 10564 ;; Hardware stack levels used: 1
 10565 ;; Hardware stack levels required when called: 5
 10566 ;; This function calls:
 10567 ;;		_UART1_Read
 10568 ;;		_UART1_is_rx_ready
 10569 ;; This function is called by:
 10570 ;;		_cli_read
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           	psect	text36
 10575  005B1E                     __ptext36:
 10576                           	callstack 0
 10577  005B1E                     _linux_getc:
 10578                           	callstack 24
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;scdm.c: 37: uint8_t linux_getc(uint8_t *a_data);scdm.c: 38: {;scdm.c: 39:  if (UART1_is
      +                          _rx_ready()) {
 10582                           
 10583                           ;incstack = 0
 10584  005B1E  EC76  F02E         	call	_UART1_is_rx_ready	;wreg free
 10585  005B22  0900               	iorlw	0
 10586  005B24  B4D8               	btfsc	status,2,c
 10587  005B26  D00B               	goto	l10442
 10588                           
 10589                           ; BSR set to: 0
 10590                           ;scdm.c: 40:   a_data[0] = UART1_Read();
 10591  005B28  EC00  F02C         	call	_UART1_Read	;wreg free
 10592  005B2C  6E17               	movwf	??_linux_getc^0,c
 10593  005B2E  5016               	movf	linux_getc@a_data^0,w,c
 10594  005B30  6ED9               	movwf	fsr2l,c
 10595  005B32  6ADA               	clrf	fsr2h,c
 10596  005B34  0060  F05F  FFDF   	movff	??_linux_getc,indf2
 10597                           
 10598                           ; BSR set to: 57
 10599                           ;scdm.c: 41:   return 1;
 10600  005B3A  0E01               	movlw	1
 10601  005B3C  0012               	return	
 10602  005B3E                     l10442:
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;scdm.c: 43:   return 0;
 10606  005B3E  0E00               	movlw	0
 10607  005B40  0012               	return		;funcret
 10608  005B42                     __end_of_linux_getc:
 10609                           	callstack 0
 10610                           
 10611 ;; *************** function _UART1_is_rx_ready *****************
 10612 ;; Defined at:
 10613 ;;		line 161 in file "mcc_generated_files/uart1.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;		None
 10616 ;; Auto vars:     Size  Location     Type
 10617 ;;		None
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  1    wreg      _Bool 
 10620 ;; Registers used:
 10621 ;;		wreg, status,2
 10622 ;; Tracked objects:
 10623 ;;		On entry : 3F/0
 10624 ;;		On exit  : 3F/0
 10625 ;;		Unchanged: 3F/0
 10626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10631 ;;Total ram usage:        0 bytes
 10632 ;; Hardware stack levels used: 1
 10633 ;; Hardware stack levels required when called: 4
 10634 ;; This function calls:
 10635 ;;		Nothing
 10636 ;; This function is called by:
 10637 ;;		_linux_getc
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641                           	psect	text37
 10642  005CEC                     __ptext37:
 10643                           	callstack 0
 10644  005CEC                     _UART1_is_rx_ready:
 10645                           	callstack 24
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;mcc_generated_files/uart1.c: 163:     return (uart1RxCount ? 1 : 0);
 10649                           
 10650                           ;incstack = 0
 10651  005CEC  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10652  005CEE  B4D8               	btfsc	status,2,c
 10653  005CF0  D002               	goto	u12050
 10654  005CF2  0E01               	movlw	1
 10655  005CF4  0012               	return	
 10656  005CF6                     u12050:
 10657  005CF6  0E00               	movlw	0
 10658                           
 10659                           ; BSR set to: 0
 10660  005CF8  0012               	return		;funcret
 10661  005CFA                     __end_of_UART1_is_rx_ready:
 10662                           	callstack 0
 10663                           
 10664 ;; *************** function _UART1_Read *****************
 10665 ;; Defined at:
 10666 ;;		line 180 in file "mcc_generated_files/uart1.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;  readValue       1   20[COMRAM] unsigned char 
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      unsigned char 
 10673 ;; Registers used:
 10674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10675 ;; Tracked objects:
 10676 ;;		On entry : 3F/0
 10677 ;;		On exit  : 3F/39
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10684 ;;Total ram usage:        1 bytes
 10685 ;; Hardware stack levels used: 1
 10686 ;; Hardware stack levels required when called: 4
 10687 ;; This function calls:
 10688 ;;		Nothing
 10689 ;; This function is called by:
 10690 ;;		_linux_getc
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           	psect	text38
 10695  005800                     __ptext38:
 10696                           	callstack 0
 10697  005800                     _UART1_Read:
 10698                           	callstack 24
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10705                           
 10706                           ; BSR set to: 0
 10707                           ;incstack = 0
 10708  005800  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10709  005802  B4D8               	btfsc	status,2,c
 10710  005804  D7FD               	goto	__ptext38
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;mcc_generated_files/uart1.c: 188:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10714  005806  0E00               	movlw	low _uart1RxStatusBuffer
 10715  005808  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10716  00580A  6ED9               	movwf	fsr2l,c
 10717  00580C  6ADA               	clrf	fsr2h,c
 10718  00580E  0E01               	movlw	high _uart1RxStatusBuffer
 10719  005810  22DA               	addwfc	fsr2h,f,c
 10720  005812  50DF               	movf	indf2,w,c
 10721  005814  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 10722                           
 10723                           ;mcc_generated_files/uart1.c: 190:     readValue = uart1RxBuffer[uart1RxTail++];
 10724  005816  0E00               	movlw	low _uart1RxBuffer
 10725  005818  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10726  00581A  6ED9               	movwf	fsr2l,c
 10727  00581C  6ADA               	clrf	fsr2h,c
 10728  00581E  0E02               	movlw	high _uart1RxBuffer
 10729  005820  22DA               	addwfc	fsr2h,f,c
 10730  005822  50DF               	movf	indf2,w,c
 10731  005824  6E15               	movwf	UART1_Read@readValue^0,c
 10732                           
 10733                           ; BSR set to: 0
 10734  005826  2A47               	incf	_uart1RxTail^0,f,c	;volatile
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;mcc_generated_files/uart1.c: 191:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10738  005828  0E3F               	movlw	63
 10739  00582A  6447               	cpfsgt	_uart1RxTail^0,c
 10740  00582C  D002               	goto	l10224
 10741                           
 10742                           ; BSR set to: 0
 10743                           ;mcc_generated_files/uart1.c: 192:     {;mcc_generated_files/uart1.c: 193:         uart1
      +                          RxTail = 0;
 10744  00582E  0E00               	movlw	0
 10745  005830  6E47               	movwf	_uart1RxTail^0,c	;volatile
 10746  005832                     l10224:
 10747                           
 10748                           ; BSR set to: 0
 10749                           ;mcc_generated_files/uart1.c: 195:     PIE3bits.U1RXIE = 0;
 10750  005832  0139               	movlb	57	; () banked
 10751  005834  9793               	bcf	147,3,b	;volatile
 10752                           
 10753                           ; BSR set to: 57
 10754                           ;mcc_generated_files/uart1.c: 196:     uart1RxCount--;
 10755  005836  0646               	decf	_uart1RxCount^0,f,c	;volatile
 10756                           
 10757                           ; BSR set to: 57
 10758                           ;mcc_generated_files/uart1.c: 197:     PIE3bits.U1RXIE = 1;
 10759  005838  8793               	bsf	147,3,b	;volatile
 10760                           
 10761                           ; BSR set to: 57
 10762                           ;mcc_generated_files/uart1.c: 199:     return readValue;
 10763  00583A  5015               	movf	UART1_Read@readValue^0,w,c
 10764                           
 10765                           ; BSR set to: 57
 10766  00583C  0012               	return		;funcret
 10767  00583E                     __end_of_UART1_Read:
 10768                           	callstack 0
 10769                           
 10770 ;; *************** function __cli_interpret_cmd *****************
 10771 ;; Defined at:
 10772 ;;		line 53 in file "scdm.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  a_ctx           2   45[COMRAM] PTR struct _t_cli_ctx
 10775 ;;		 -> cli_ctx(131), 
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;  i               1   48[COMRAM] unsigned char 
 10778 ;;  ret             1   47[COMRAM] unsigned char 
 10779 ;; Return value:  Size  Location     Type
 10780 ;;                  1    wreg      unsigned char 
 10781 ;; Registers used:
 10782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10783 ;; Tracked objects:
 10784 ;;		On entry : 0/0
 10785 ;;		On exit  : 0/0
 10786 ;;		Unchanged: 0/0
 10787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10790 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10791 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10792 ;;Total ram usage:       14 bytes
 10793 ;; Hardware stack levels used: 1
 10794 ;; Hardware stack levels required when called: 10
 10795 ;; This function calls:
 10796 ;;		Absolute function
 10797 ;;		_fh_po
 10798 ;;		_fh_pr
 10799 ;;		_fh_ps
 10800 ;;		_strlen
 10801 ;;		_strncmp
 10802 ;; This function is called by:
 10803 ;;		_cli_read
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807                           	psect	text39
 10808  003C7A                     __ptext39:
 10809                           	callstack 0
 10810  003C7A                     __cli_interpret_cmd:
 10811                           	callstack 19
 10812                           
 10813                           ;scdm.c: 53: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 54: {;scdm.c: 5
      +                          5:  uint8_t i = 0;
 10814                           
 10815                           ; BSR set to: 57
 10816                           ;incstack = 0
 10817  003C7A  0E00               	movlw	0
 10818  003C7C  6E31               	movwf	__cli_interpret_cmd@i^0,c
 10819                           
 10820                           ;scdm.c: 56:  uint8_t ret = E_CMD_OK;
 10821  003C7E  0E00               	movlw	0
 10822  003C80  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 10823                           
 10824                           ;scdm.c: 58:  if (!strlen(a_ctx->cmd)) {
 10825  003C82  0E02               	movlw	2
 10826  003C84  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10827  003C86  6E15               	movwf	strlen@s^0,c
 10828  003C88  0E00               	movlw	0
 10829  003C8A  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10830  003C8C  6E16               	movwf	(strlen@s+1)^0,c
 10831  003C8E  EC31  F02B         	call	_strlen	;wreg free
 10832  003C92  5015               	movf	?_strlen^0,w,c
 10833  003C94  1016               	iorwf	(?_strlen+1)^0,w,c
 10834  003C96  A4D8               	btfss	status,2,c
 10835  003C98  D002               	goto	l10458
 10836                           
 10837                           ;scdm.c: 59:   return E_CMD_EMPTY;
 10838  003C9A  0E03               	movlw	3
 10839  003C9C  0012               	return	
 10840  003C9E                     l10458:
 10841                           
 10842                           ;scdm.c: 62:  if (strlen(a_ctx->cmd) < 2) {
 10843  003C9E  0E02               	movlw	2
 10844  003CA0  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10845  003CA2  6E15               	movwf	strlen@s^0,c
 10846  003CA4  0E00               	movlw	0
 10847  003CA6  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10848  003CA8  6E16               	movwf	(strlen@s+1)^0,c
 10849  003CAA  EC31  F02B         	call	_strlen	;wreg free
 10850  003CAE  5016               	movf	(?_strlen+1)^0,w,c
 10851  003CB0  E103               	bnz	u12181
 10852  003CB2  0E02               	movlw	2
 10853  003CB4  5C15               	subwf	?_strlen^0,w,c
 10854  003CB6  B0D8               	btfsc	status,0,c
 10855  003CB8                     u12181:
 10856  003CB8  D082               	goto	l10470
 10857                           
 10858                           ;scdm.c: 63:   return E_CMD_TOO_SHORT;
 10859  003CBA  0E02               	movlw	2
 10860  003CBC  0012               	return	
 10861  003CBE                     l10464:
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;scdm.c: 67:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 10865  003CBE  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10866  003CC0  0D04               	mullw	4
 10867  003CC2  006F FFCC  F060    	movff	prodl,??__cli_interpret_cmd
 10868  003CC8  006F FFD0  F061    	movff	prodh,??__cli_interpret_cmd+1
 10869  003CCE  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10870  003CD4  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10871  003CDA  006F FF78  F062    	movff	postinc2,??__cli_interpret_cmd+2
 10872  003CE0  006F FF74  F063    	movff	postdec2,??__cli_interpret_cmd+3
 10873  003CE6  5160               	movf	??__cli_interpret_cmd& (0+255),w,b
 10874  003CE8  2562               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 10875  003CEA  6ED9               	movwf	fsr2l,c
 10876  003CEC  5161               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 10877  003CEE  2163               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 10878  003CF0  6EDA               	movwf	fsr2h,c
 10879  003CF2  50DF               	movf	indf2,w,c
 10880  003CF4  6F64               	movwf	(??__cli_interpret_cmd+4)& (0+255),b
 10881  003CF6  C064  F019         	movff	??__cli_interpret_cmd+4,strncmp@_l
 10882  003CFA  5019               	movf	strncmp@_l^0,w,c
 10883  003CFC  A4D8               	btfss	status,2,c
 10884  003CFE  0E20               	movlw	high __smallconst
 10885  003D00  6E1A               	movwf	(strncmp@_l+1)^0,c
 10886  003D02  0E02               	movlw	2
 10887  003D04  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10888  003D06  6E1B               	movwf	strncmp@_r^0,c
 10889  003D08  0E00               	movlw	0
 10890  003D0A  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10891  003D0C  6E1C               	movwf	(strncmp@_r+1)^0,c
 10892  003D0E  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10893  003D10  0D04               	mullw	4
 10894  003D12  006F FFCC  F065    	movff	prodl,??__cli_interpret_cmd+5
 10895  003D18  006F FFD0  F066    	movff	prodh,??__cli_interpret_cmd+6
 10896  003D1E  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10897  003D24  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10898  003D2A  006F FF78  F067    	movff	postinc2,??__cli_interpret_cmd+7
 10899  003D30  006F FF74  F068    	movff	postdec2,??__cli_interpret_cmd+8
 10900  003D36  5165               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 10901  003D38  2567               	addwf	(??__cli_interpret_cmd+7)& (0+255),w,b
 10902  003D3A  6ED9               	movwf	fsr2l,c
 10903  003D3C  5166               	movf	(??__cli_interpret_cmd+6)& (0+255),w,b
 10904  003D3E  2168               	addwfc	(??__cli_interpret_cmd+8)& (0+255),w,b
 10905  003D40  6EDA               	movwf	fsr2h,c
 10906  003D42  50DF               	movf	indf2,w,c
 10907  003D44  6F69               	movwf	(??__cli_interpret_cmd+9)& (0+255),b
 10908  003D46  C069  F015         	movff	??__cli_interpret_cmd+9,strlen@s
 10909  003D4A  5015               	movf	strlen@s^0,w,c
 10910  003D4C  A4D8               	btfss	status,2,c
 10911  003D4E  0E20               	movlw	high __smallconst
 10912  003D50  6E16               	movwf	(strlen@s+1)^0,c
 10913  003D52  EC31  F02B         	call	_strlen	;wreg free
 10914  003D56  C015  F01D         	movff	?_strlen,strncmp@n
 10915  003D5A  C016  F01E         	movff	?_strlen+1,strncmp@n+1
 10916  003D5E  ECCC  F020         	call	_strncmp	;wreg free
 10917  003D62  5019               	movf	?_strncmp^0,w,c
 10918  003D64  101A               	iorwf	(?_strncmp+1)^0,w,c
 10919  003D66  A4D8               	btfss	status,2,c
 10920  003D68  D029               	goto	l10468
 10921                           
 10922                           ;scdm.c: 69:    a_ctx->cmds[i].fh((void *) a_ctx);
 10923  003D6A  C02E  F02C         	movff	__cli_interpret_cmd@a_ctx,fh_po@a_data
 10924  003D6E  C02F  F02D         	movff	__cli_interpret_cmd@a_ctx+1,fh_po@a_data+1
 10925  003D72  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10926  003D74  0D04               	mullw	4
 10927  003D76  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10928  003D7C  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10929  003D82  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10930  003D88  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10931  003D8E  50F3               	movf	243,w,c
 10932  003D90  0100               	movlb	0	; () banked
 10933  003D92  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10934  003D94  50F4               	movf	244,w,c
 10935  003D96  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10936  003D98  0E01               	movlw	1
 10937  003D9A  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10938  003D9C  6ED9               	movwf	fsr2l,c
 10939  003D9E  0E00               	movlw	0
 10940  003DA0  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10941  003DA2  6EDA               	movwf	fsr2h,c
 10942  003DA4  D801               	call	u12208
 10943  003DA6  D029               	goto	u12210
 10944  003DA8                     u12208:
 10945  003DA8  0005               	push	
 10946  003DAA  6EFA               	movwf	pclath,c
 10947  003DAC  50DE               	movf	postinc2,w,c
 10948  003DAE  6EFD               	movwf	tosl,c
 10949  003DB0  50DE               	movf	postinc2,w,c
 10950  003DB2  6EFE               	movwf	tosh,c
 10951  003DB4  50DE               	movf	postinc2,w,c
 10952  003DB6  6EFF               	movwf	tosu,c
 10953  003DB8  50FA               	movf	pclath,w,c
 10954  003DBA  0012               	return		;indir
 10955  003DBC                     l10468:
 10956                           
 10957                           ;scdm.c: 72:   i++;
 10958  003DBC  2A31               	incf	__cli_interpret_cmd@i^0,f,c
 10959  003DBE                     l10470:
 10960                           
 10961                           ;scdm.c: 66:  while (a_ctx->cmds[i].fh) {
 10962  003DBE  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10963  003DC0  0D04               	mullw	4
 10964  003DC2  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10965  003DC8  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10966  003DCE  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10967  003DD4  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10968  003DDA  50F3               	movf	243,w,c
 10969  003DDC  0100               	movlb	0	; () banked
 10970  003DDE  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10971  003DE0  50F4               	movf	244,w,c
 10972  003DE2  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10973  003DE4  0E01               	movlw	1
 10974  003DE6  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10975  003DE8  6ED9               	movwf	fsr2l,c
 10976  003DEA  0E00               	movlw	0
 10977  003DEC  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10978  003DEE  6EDA               	movwf	fsr2h,c
 10979  003DF0  50DE               	movf	postinc2,w,c
 10980  003DF2  10DE               	iorwf	postinc2,w,c
 10981  003DF4  10DE               	iorwf	postinc2,w,c
 10982  003DF6  A4D8               	btfss	status,2,c
 10983  003DF8  D762               	goto	l10464
 10984  003DFA                     u12210:
 10985                           
 10986                           ;scdm.c: 75:  if (!a_ctx->cmds[i].fh) {
 10987  003DFA  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10988  003DFC  0D04               	mullw	4
 10989  003DFE  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10990  003E04  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10991  003E0A  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10992  003E10  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10993  003E16  50F3               	movf	243,w,c
 10994  003E18  0100               	movlb	0	; () banked
 10995  003E1A  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10996  003E1C  50F4               	movf	244,w,c
 10997  003E1E  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10998  003E20  0E01               	movlw	1
 10999  003E22  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 11000  003E24  6ED9               	movwf	fsr2l,c
 11001  003E26  0E00               	movlw	0
 11002  003E28  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 11003  003E2A  6EDA               	movwf	fsr2h,c
 11004  003E2C  50DE               	movf	postinc2,w,c
 11005  003E2E  10DE               	iorwf	postinc2,w,c
 11006  003E30  10DE               	iorwf	postinc2,w,c
 11007  003E32  A4D8               	btfss	status,2,c
 11008  003E34  D002               	goto	l1120
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;scdm.c: 76:   ret = E_CMD_NOT_FOUND;
 11012  003E36  0E01               	movlw	1
 11013  003E38  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 11014  003E3A                     l1120:
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;scdm.c: 79:  return ret;
 11018  003E3A  5030               	movf	__cli_interpret_cmd@ret^0,w,c
 11019  003E3C  0012               	return		;funcret
 11020  003E3E                     __end_of__cli_interpret_cmd:
 11021                           	callstack 0
 11022                           
 11023 ;; *************** function _strncmp *****************
 11024 ;; Defined at:
 11025 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;  _l              2   24[COMRAM] PTR const unsigned char 
 11028 ;;		 -> vfpfcnvrt@ct(3), STR_10(21), NULL(0), STR_9(3), 
 11029 ;;		 -> STR_8(3), STR_7(3), STR_6(74), 
 11030 ;;  _r              2   26[COMRAM] PTR const unsigned char 
 11031 ;;		 -> cli_ctx.cmd(128), STR_27(4), STR_22(3), cli_ctx(131), 
 11032 ;;  n               2   28[COMRAM] unsigned int 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;  r               2   34[COMRAM] PTR const unsigned char 
 11035 ;;		 -> cli_ctx.cmd(128), STR_27(4), STR_22(3), cli_ctx(131), 
 11036 ;;  l               2   32[COMRAM] PTR const unsigned char 
 11037 ;;		 -> vfpfcnvrt@ct(3), STR_10(21), NULL(0), STR_9(3), 
 11038 ;;		 -> STR_8(3), STR_7(3), STR_6(74), 
 11039 ;; Return value:  Size  Location     Type
 11040 ;;                  2   24[COMRAM] int 
 11041 ;; Registers used:
 11042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11048 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11049 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11050 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11051 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11052 ;;Total ram usage:       12 bytes
 11053 ;; Hardware stack levels used: 1
 11054 ;; Hardware stack levels required when called: 4
 11055 ;; This function calls:
 11056 ;;		Nothing
 11057 ;; This function is called by:
 11058 ;;		__cli_interpret_cmd
 11059 ;;		_vfpfcnvrt
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text40
 11064  004198                     __ptext40:
 11065                           	callstack 0
 11066  004198                     _strncmp:
 11067                           	callstack 21
 11068                           
 11069                           ;incstack = 0
 11070  004198  C019  F021         	movff	strncmp@_l,strncmp@l
 11071  00419C  C01A  F022         	movff	strncmp@_l+1,strncmp@l+1
 11072  0041A0  C01B  F023         	movff	strncmp@_r,strncmp@r
 11073  0041A4  C01C  F024         	movff	strncmp@_r+1,strncmp@r+1
 11074  0041A8  061D               	decf	strncmp@n^0,f,c
 11075  0041AA  A0D8               	btfss	status,0,c
 11076  0041AC  061E               	decf	(strncmp@n+1)^0,f,c
 11077  0041AE  281D               	incf	strncmp@n^0,w,c
 11078  0041B0  E10F               	bnz	l9578
 11079  0041B2  281E               	incf	(strncmp@n+1)^0,w,c
 11080  0041B4  A4D8               	btfss	status,2,c
 11081  0041B6  D00C               	goto	l9578
 11082  0041B8  0E00               	movlw	0
 11083  0041BA  6E1A               	movwf	(?_strncmp+1)^0,c
 11084  0041BC  0E00               	movlw	0
 11085  0041BE  6E19               	movwf	?_strncmp^0,c
 11086  0041C0  0012               	return	
 11087  0041C2                     l9576:
 11088  0041C2  4A21               	infsnz	strncmp@l^0,f,c
 11089  0041C4  2A22               	incf	(strncmp@l+1)^0,f,c
 11090  0041C6  4A23               	infsnz	strncmp@r^0,f,c
 11091  0041C8  2A24               	incf	(strncmp@r+1)^0,f,c
 11092  0041CA  061D               	decf	strncmp@n^0,f,c
 11093  0041CC  A0D8               	btfss	status,0,c
 11094  0041CE  061E               	decf	(strncmp@n+1)^0,f,c
 11095  0041D0                     l9578:
 11096  0041D0  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11097  0041D6  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11098  0041DC  0E00               	movlw	low (__smallconst shr (0+16))
 11099  0041DE  6EF8               	movwf	tblptru,c
 11100  0041E0  0E1F               	movlw	(high __ramtop+-1)
 11101  0041E2  64F7               	cpfsgt	tblptrh,c
 11102  0041E4  D003               	bra	u11057
 11103  0041E6  0008               	tblrd		*
 11104  0041E8  50F5               	movf	tablat,w,c
 11105  0041EA  D007               	bra	u11050
 11106  0041EC                     u11057:
 11107  0041EC  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11108  0041F2  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11109  0041F8  50E7               	movf	indf1,w,c
 11110  0041FA                     u11050:
 11111  0041FA  0900               	iorlw	0
 11112  0041FC  B4D8               	btfsc	status,2,c
 11113  0041FE  D04A               	goto	u11110
 11114  004200  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11115  004206  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11116  00420C  0E00               	movlw	low (__smallconst shr (0+16))
 11117  00420E  6EF8               	movwf	tblptru,c
 11118  004210  0E1F               	movlw	(high __ramtop+-1)
 11119  004212  64F7               	cpfsgt	tblptrh,c
 11120  004214  D003               	bra	u11077
 11121  004216  0008               	tblrd		*
 11122  004218  50F5               	movf	tablat,w,c
 11123  00421A  D007               	bra	u11070
 11124  00421C                     u11077:
 11125  00421C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11126  004222  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11127  004228  50E7               	movf	indf1,w,c
 11128  00422A                     u11070:
 11129  00422A  0900               	iorlw	0
 11130  00422C  B4D8               	btfsc	status,2,c
 11131  00422E  D032               	goto	u11110
 11132  004230  501D               	movf	strncmp@n^0,w,c
 11133  004232  101E               	iorwf	(strncmp@n+1)^0,w,c
 11134  004234  B4D8               	btfsc	status,2,c
 11135  004236  D02E               	goto	u11110
 11136  004238  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11137  00423E  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11138  004244  0E00               	movlw	low (__smallconst shr (0+16))
 11139  004246  6EF8               	movwf	tblptru,c
 11140  004248  0E1F               	movlw	(high __ramtop+-1)
 11141  00424A  64F7               	cpfsgt	tblptrh,c
 11142  00424C  D003               	bra	u11107
 11143  00424E  0008               	tblrd		*
 11144  004250  50F5               	movf	tablat,w,c
 11145  004252  D007               	bra	u11100
 11146  004254                     u11107:
 11147  004254  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11148  00425A  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11149  004260  50E7               	movf	indf1,w,c
 11150  004262                     u11100:
 11151  004262  6E1F               	movwf	??_strncmp^0,c
 11152  004264  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11153  00426A  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11154  004270  0E00               	movlw	low (__smallconst shr (0+16))
 11155  004272  6EF8               	movwf	tblptru,c
 11156  004274  0E1F               	movlw	(high __ramtop+-1)
 11157  004276  64F7               	cpfsgt	tblptrh,c
 11158  004278  D003               	bra	u11117
 11159  00427A  0008               	tblrd		*
 11160  00427C  50F5               	movf	tablat,w,c
 11161  00427E  D007               	bra	u11115
 11162  004280                     u11117:
 11163  004280  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11164  004286  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11165  00428C  50E7               	movf	indf1,w,c
 11166  00428E                     u11115:
 11167  00428E  181F               	xorwf	??_strncmp^0,w,c
 11168  004290  B4D8               	btfsc	status,2,c
 11169  004292  D797               	goto	l9576
 11170  004294                     u11110:
 11171  004294  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11172  00429A  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11173  0042A0  0E00               	movlw	low (__smallconst shr (0+16))
 11174  0042A2  6EF8               	movwf	tblptru,c
 11175  0042A4  0E1F               	movlw	(high __ramtop+-1)
 11176  0042A6  64F7               	cpfsgt	tblptrh,c
 11177  0042A8  D003               	bra	u11127
 11178  0042AA  0008               	tblrd		*
 11179  0042AC  50F5               	movf	tablat,w,c
 11180  0042AE  D007               	bra	u11120
 11181  0042B0                     u11127:
 11182  0042B0  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11183  0042B6  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11184  0042BC  50E7               	movf	indf1,w,c
 11185  0042BE                     u11120:
 11186  0042BE  6E1F               	movwf	??_strncmp^0,c
 11187  0042C0  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11188  0042C6  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11189  0042CC  0E00               	movlw	low (__smallconst shr (0+16))
 11190  0042CE  6EF8               	movwf	tblptru,c
 11191  0042D0  0E1F               	movlw	(high __ramtop+-1)
 11192  0042D2  64F7               	cpfsgt	tblptrh,c
 11193  0042D4  D003               	bra	u11137
 11194  0042D6  0008               	tblrd		*
 11195  0042D8  50F5               	movf	tablat,w,c
 11196  0042DA  D007               	bra	u11130
 11197  0042DC                     u11137:
 11198  0042DC  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11199  0042E2  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11200  0042E8  50E7               	movf	indf1,w,c
 11201  0042EA                     u11130:
 11202  0042EA  6E20               	movwf	(??_strncmp+1)^0,c
 11203  0042EC  5020               	movf	(??_strncmp+1)^0,w,c
 11204  0042EE  5C1F               	subwf	??_strncmp^0,w,c
 11205  0042F0  6E19               	movwf	?_strncmp^0,c
 11206  0042F2  6A1A               	clrf	(?_strncmp+1)^0,c
 11207  0042F4  A0D8               	btfss	status,0,c
 11208  0042F6  061A               	decf	(?_strncmp+1)^0,f,c
 11209  0042F8  0012               	return		;funcret
 11210  0042FA                     __end_of_strncmp:
 11211                           	callstack 0
 11212                           
 11213 ;; *************** function _strlen *****************
 11214 ;; Defined at:
 11215 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  s               2   20[COMRAM] PTR const unsigned char 
 11218 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11219 ;;		 -> ?_sprintf(2), NULL(0), STR_9(3), STR_8(3), 
 11220 ;;		 -> STR_7(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;  a               2   22[COMRAM] PTR const unsigned char 
 11223 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11224 ;;		 -> ?_sprintf(2), NULL(0), STR_9(3), STR_8(3), 
 11225 ;;		 -> STR_7(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  2   20[COMRAM] unsigned int 
 11228 ;; Registers used:
 11229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11238 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11239 ;;Total ram usage:        4 bytes
 11240 ;; Hardware stack levels used: 1
 11241 ;; Hardware stack levels required when called: 4
 11242 ;; This function calls:
 11243 ;;		Nothing
 11244 ;; This function is called by:
 11245 ;;		__cli_interpret_cmd
 11246 ;;		_pad
 11247 ;;		_stoa
 11248 ;; This function uses a non-reentrant model
 11249 ;;
 11250                           
 11251                           	psect	text41
 11252  005662                     __ptext41:
 11253                           	callstack 0
 11254  005662                     _strlen:
 11255                           	callstack 19
 11256                           
 11257                           ;incstack = 0
 11258  005662  C015  F017         	movff	strlen@s,strlen@a
 11259  005666  C016  F018         	movff	strlen@s+1,strlen@a+1
 11260  00566A  D002               	goto	l8760
 11261  00566C                     l8758:
 11262  00566C  4A15               	infsnz	strlen@s^0,f,c
 11263  00566E  2A16               	incf	(strlen@s+1)^0,f,c
 11264  005670                     l8760:
 11265  005670  0060  F057  FFF6   	movff	strlen@s,tblptrl
 11266  005676  0060  F05B  FFF7   	movff	strlen@s+1,tblptrh
 11267  00567C  0E00               	movlw	low (__smallconst shr (0+16))
 11268  00567E  6EF8               	movwf	tblptru,c
 11269  005680  0E1F               	movlw	(high __ramtop+-1)
 11270  005682  64F7               	cpfsgt	tblptrh,c
 11271  005684  D003               	bra	u9557
 11272  005686  0008               	tblrd		*
 11273  005688  50F5               	movf	tablat,w,c
 11274  00568A  D007               	bra	u9550
 11275  00568C                     u9557:
 11276  00568C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11277  005692  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11278  005698  50E7               	movf	indf1,w,c
 11279  00569A                     u9550:
 11280  00569A  0900               	iorlw	0
 11281  00569C  A4D8               	btfss	status,2,c
 11282  00569E  D7E6               	goto	l8758
 11283  0056A0  5017               	movf	strlen@a^0,w,c
 11284  0056A2  5C15               	subwf	strlen@s^0,w,c
 11285  0056A4  6E15               	movwf	?_strlen^0,c
 11286  0056A6  5018               	movf	(strlen@a+1)^0,w,c
 11287  0056A8  5816               	subwfb	(strlen@s+1)^0,w,c
 11288  0056AA  6E16               	movwf	(?_strlen+1)^0,c
 11289  0056AC  0012               	return		;funcret
 11290  0056AE                     __end_of_strlen:
 11291                           	callstack 0
 11292                           
 11293 ;; *************** function _fh_po *****************
 11294 ;; Defined at:
 11295 ;;		line 112 in file "main.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  a_data          2   43[COMRAM] PTR void 
 11298 ;;		 -> cli_ctx(131), 
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;		None
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  1    wreg      void 
 11303 ;; Registers used:
 11304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11305 ;; Tracked objects:
 11306 ;;		On entry : 3F/0
 11307 ;;		On exit  : 3F/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11314 ;;Total ram usage:        2 bytes
 11315 ;; Hardware stack levels used: 1
 11316 ;; Hardware stack levels required when called: 9
 11317 ;; This function calls:
 11318 ;;		_puts
 11319 ;; This function is called by:
 11320 ;;		__cli_interpret_cmd
 11321 ;; This function uses a non-reentrant model
 11322 ;;
 11323                           
 11324                           	psect	text42
 11325  005C80                     __ptext42:
 11326                           	callstack 0
 11327  005C80                     _fh_po:
 11328                           	callstack 19
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;main.c: 112: void fh_po(void *a_data);main.c: 113: {;main.c: 114:  puts("\r\n Voltage O
      +                          FF \r\n");
 11332                           
 11333                           ;incstack = 0
 11334  005C80  0EB2               	movlw	low STR_5
 11335  005C82  6E29               	movwf	puts@s^0,c
 11336  005C84  5029               	movf	puts@s^0,w,c
 11337  005C86  A4D8               	btfss	status,2,c
 11338  005C88  0E20               	movlw	high __smallconst
 11339  005C8A  6E2A               	movwf	(puts@s+1)^0,c
 11340  005C8C  EC9A  F02C         	call	_puts	;wreg free
 11341                           
 11342                           ;main.c: 115:  mode = off_mode;
 11343  005C90  0E00               	movlw	0
 11344  005C92  0100               	movlb	0	; () banked
 11345  005C94  6FFD               	movwf	_mode& (0+255),b
 11346                           
 11347                           ; BSR set to: 0
 11348  005C96  0012               	return		;funcret
 11349  005C98                     __end_of_fh_po:
 11350                           	callstack 0
 11351                           
 11352 ;; *************** function _fh_pr *****************
 11353 ;; Defined at:
 11354 ;;		line 99 in file "main.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;  a_data          2   43[COMRAM] PTR void 
 11357 ;;		 -> cli_ctx(131), 
 11358 ;; Auto vars:     Size  Location     Type
 11359 ;;		None
 11360 ;; Return value:  Size  Location     Type
 11361 ;;                  1    wreg      void 
 11362 ;; Registers used:
 11363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11364 ;; Tracked objects:
 11365 ;;		On entry : 3F/0
 11366 ;;		On exit  : 3F/0
 11367 ;;		Unchanged: 0/0
 11368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11373 ;;Total ram usage:        2 bytes
 11374 ;; Hardware stack levels used: 1
 11375 ;; Hardware stack levels required when called: 9
 11376 ;; This function calls:
 11377 ;;		_puts
 11378 ;; This function is called by:
 11379 ;;		__cli_interpret_cmd
 11380 ;; This function uses a non-reentrant model
 11381 ;;
 11382                           
 11383                           	psect	text43
 11384  005B42                     __ptext43:
 11385                           	callstack 0
 11386  005B42                     _fh_pr:
 11387                           	callstack 19
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;main.c: 99: void fh_pr(void *a_data);main.c: 100: {;main.c: 101:  puts((const char *) a
      +                          _data);
 11391                           
 11392                           ; BSR set to: 0
 11393                           ;incstack = 0
 11394  005B42  C02C  F029         	movff	fh_pr@a_data,puts@s
 11395  005B46  C02D  F02A         	movff	fh_pr@a_data+1,puts@s+1
 11396  005B4A  EC9A  F02C         	call	_puts	;wreg free
 11397                           
 11398                           ;main.c: 102:  puts("\r\n Ramp to 1000VDC ON \r\n");
 11399  005B4E  0E6C               	movlw	low STR_3
 11400  005B50  6E29               	movwf	puts@s^0,c
 11401  005B52  5029               	movf	puts@s^0,w,c
 11402  005B54  A4D8               	btfss	status,2,c
 11403  005B56  0E20               	movlw	high __smallconst
 11404  005B58  6E2A               	movwf	(puts@s+1)^0,c
 11405  005B5A  EC9A  F02C         	call	_puts	;wreg free
 11406                           
 11407                           ;main.c: 103:  mode = roll_mode;
 11408  005B5E  0E01               	movlw	1
 11409  005B60  0100               	movlb	0	; () banked
 11410  005B62  6FFD               	movwf	_mode& (0+255),b
 11411                           
 11412                           ; BSR set to: 0
 11413  005B64  0012               	return		;funcret
 11414  005B66                     __end_of_fh_pr:
 11415                           	callstack 0
 11416                           
 11417 ;; *************** function _fh_ps *****************
 11418 ;; Defined at:
 11419 ;;		line 106 in file "main.c"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;  a_data          2   43[COMRAM] PTR void 
 11422 ;;		 -> cli_ctx(131), 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;		None
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      void 
 11427 ;; Registers used:
 11428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11429 ;; Tracked objects:
 11430 ;;		On entry : 3F/0
 11431 ;;		On exit  : 3F/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11438 ;;Total ram usage:        2 bytes
 11439 ;; Hardware stack levels used: 1
 11440 ;; Hardware stack levels required when called: 9
 11441 ;; This function calls:
 11442 ;;		_puts
 11443 ;; This function is called by:
 11444 ;;		__cli_interpret_cmd
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448                           	psect	text44
 11449  005C98                     __ptext44:
 11450                           	callstack 0
 11451  005C98                     _fh_ps:
 11452                           	callstack 19
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;main.c: 106: void fh_ps(void *a_data);main.c: 107: {;main.c: 108:  puts("\r\n Steady 10
      +                          00VDC ON \r\n");
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;incstack = 0
 11459  005C98  0E85               	movlw	low STR_4
 11460  005C9A  6E29               	movwf	puts@s^0,c
 11461  005C9C  5029               	movf	puts@s^0,w,c
 11462  005C9E  A4D8               	btfss	status,2,c
 11463  005CA0  0E20               	movlw	high __smallconst
 11464  005CA2  6E2A               	movwf	(puts@s+1)^0,c
 11465  005CA4  EC9A  F02C         	call	_puts	;wreg free
 11466                           
 11467                           ;main.c: 109:  mode = static_mode;
 11468  005CA8  0E02               	movlw	2
 11469  005CAA  0100               	movlb	0	; () banked
 11470  005CAC  6FFD               	movwf	_mode& (0+255),b
 11471                           
 11472                           ; BSR set to: 0
 11473  005CAE  0012               	return		;funcret
 11474  005CB0                     __end_of_fh_ps:
 11475                           	callstack 0
 11476                           
 11477 ;; *************** function _puts *****************
 11478 ;; Defined at:
 11479 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;  s               2   40[COMRAM] PTR const unsigned char 
 11482 ;;		 -> cli_ctx.cmd(128), STR_11(3), cli_read@i(1), cmdm(28), 
 11483 ;;		 -> cli_ctx(131), STR_5(18), STR_4(24), STR_3(25), 
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;  r               2    0        int 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  2   40[COMRAM] int 
 11488 ;; Registers used:
 11489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/2
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11498 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11499 ;;Total ram usage:        3 bytes
 11500 ;; Hardware stack levels used: 1
 11501 ;; Hardware stack levels required when called: 8
 11502 ;; This function calls:
 11503 ;;		_fputc
 11504 ;;		_fputs
 11505 ;; This function is called by:
 11506 ;;		_fh_pr
 11507 ;;		_fh_ps
 11508 ;;		_fh_po
 11509 ;;		_cli_init
 11510 ;;		_linux_putc
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           	psect	text45
 11515  005934                     __ptext45:
 11516                           	callstack 0
 11517  005934                     _puts:
 11518                           	callstack 20
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;incstack = 0
 11522  005934  0E01               	movlw	1
 11523  005936  6E2B               	movwf	_puts$2914^0,c
 11524  005938  C029  F020         	movff	puts@s,fputs@s
 11525  00593C  C02A  F021         	movff	puts@s+1,fputs@s+1
 11526  005940  0E00               	movlw	0
 11527  005942  6E22               	movwf	fputs@fp^0,c
 11528  005944  0E00               	movlw	0
 11529  005946  6E23               	movwf	(fputs@fp+1)^0,c
 11530  005948  EC2C  F02A         	call	_fputs	;wreg free
 11531  00594C  BE21               	btfsc	(?_fputs+1)^0,7,c
 11532  00594E  0012               	return	
 11533  005950  0E00               	movlw	0
 11534  005952  6E18               	movwf	(fputc@c+1)^0,c
 11535  005954  0E0A               	movlw	10
 11536  005956  6E17               	movwf	fputc@c^0,c
 11537  005958  0E00               	movlw	0
 11538  00595A  6E19               	movwf	fputc@fp^0,c
 11539  00595C  0E00               	movlw	0
 11540  00595E  6E1A               	movwf	(fputc@fp+1)^0,c
 11541  005960  EC57  F027         	call	_fputc	;wreg free
 11542  005964  BE18               	btfsc	(?_fputc+1)^0,7,c
 11543  005966  0012               	return	
 11544  005968  0E00               	movlw	0
 11545  00596A  6E2B               	movwf	_puts$2914^0,c
 11546  00596C  0012               	return		;funcret
 11547  00596E                     __end_of_puts:
 11548                           	callstack 0
 11549                           
 11550 ;; *************** function _fputs *****************
 11551 ;; Defined at:
 11552 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;  s               2   31[COMRAM] PTR const unsigned char 
 11555 ;;		 -> cli_ctx.cmd(128), dbuf(80), STR_11(3), cli_read@i(1), 
 11556 ;;		 -> cmdm(28), cli_ctx(131), STR_5(18), STR_4(24), 
 11557 ;;		 -> STR_3(25), 
 11558 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11559 ;;		 -> sprintf@f(11), NULL(0), 
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;  i               2   38[COMRAM] int 
 11562 ;;  c               1   37[COMRAM] unsigned char 
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  2   31[COMRAM] int 
 11565 ;; Registers used:
 11566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11572 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11573 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11575 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11576 ;;Total ram usage:        9 bytes
 11577 ;; Hardware stack levels used: 1
 11578 ;; Hardware stack levels required when called: 7
 11579 ;; This function calls:
 11580 ;;		_fputc
 11581 ;; This function is called by:
 11582 ;;		_pad
 11583 ;;		_puts
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           	psect	text46
 11588  005458                     __ptext46:
 11589                           	callstack 0
 11590  005458                     _fputs:
 11591                           	callstack 16
 11592                           
 11593                           ;incstack = 0
 11594  005458  0E00               	movlw	0
 11595  00545A  6E28               	movwf	(fputs@i+1)^0,c
 11596  00545C  0E00               	movlw	0
 11597  00545E  6E27               	movwf	fputs@i^0,c
 11598  005460  D00B               	goto	l8974
 11599  005462                     l8970:
 11600  005462  C026  F017         	movff	fputs@c,fputc@c
 11601  005466  6A18               	clrf	(fputc@c+1)^0,c
 11602  005468  C022  F019         	movff	fputs@fp,fputc@fp
 11603  00546C  C023  F01A         	movff	fputs@fp+1,fputc@fp+1
 11604  005470  EC57  F027         	call	_fputc	;wreg free
 11605  005474  4A27               	infsnz	fputs@i^0,f,c
 11606  005476  2A28               	incf	(fputs@i+1)^0,f,c
 11607  005478                     l8974:
 11608  005478  5027               	movf	fputs@i^0,w,c
 11609  00547A  2420               	addwf	fputs@s^0,w,c
 11610  00547C  6E24               	movwf	??_fputs^0,c
 11611  00547E  5028               	movf	(fputs@i+1)^0,w,c
 11612  005480  2021               	addwfc	(fputs@s+1)^0,w,c
 11613  005482  6E25               	movwf	(??_fputs+1)^0,c
 11614  005484  0060  F093  FFF6   	movff	??_fputs,tblptrl
 11615  00548A  0060  F097  FFF7   	movff	??_fputs+1,tblptrh
 11616  005490  0E00               	movlw	low (__smallconst shr (0+16))
 11617  005492  6EF8               	movwf	tblptru,c
 11618  005494  0E1F               	movlw	(high __ramtop+-1)
 11619  005496  64F7               	cpfsgt	tblptrh,c
 11620  005498  D003               	bra	u9967
 11621  00549A  0008               	tblrd		*
 11622  00549C  50F5               	movf	tablat,w,c
 11623  00549E  D007               	bra	u9960
 11624  0054A0                     u9967:
 11625  0054A0  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11626  0054A6  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11627  0054AC  50E7               	movf	indf1,w,c
 11628  0054AE                     u9960:
 11629  0054AE  6E26               	movwf	fputs@c^0,c
 11630  0054B0  5026               	movf	fputs@c^0,w,c
 11631  0054B2  A4D8               	btfss	status,2,c
 11632  0054B4  D7D6               	goto	l8970
 11633  0054B6  C027  F020         	movff	fputs@i,?_fputs
 11634  0054BA  C028  F021         	movff	fputs@i+1,?_fputs+1
 11635  0054BE  0012               	return		;funcret
 11636  0054C0                     __end_of_fputs:
 11637                           	callstack 0
 11638                           
 11639 ;; *************** function _fputc *****************
 11640 ;; Defined at:
 11641 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;  c               2   22[COMRAM] int 
 11644 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
 11645 ;;		 -> sprintf@f(11), NULL(0), 
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;		None
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  2   22[COMRAM] int 
 11650 ;; Registers used:
 11651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11659 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11660 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11661 ;;Total ram usage:        9 bytes
 11662 ;; Hardware stack levels used: 1
 11663 ;; Hardware stack levels required when called: 6
 11664 ;; This function calls:
 11665 ;;		_putch
 11666 ;; This function is called by:
 11667 ;;		_pad
 11668 ;;		_stoa
 11669 ;;		_vfpfcnvrt
 11670 ;;		_fputs
 11671 ;;		_puts
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675                           	psect	text47
 11676  004EAE                     __ptext47:
 11677                           	callstack 0
 11678  004EAE                     _fputc:
 11679                           	callstack 16
 11680                           
 11681                           ;incstack = 0
 11682  004EAE  5019               	movf	fputc@fp^0,w,c
 11683  004EB0  101A               	iorwf	(fputc@fp+1)^0,w,c
 11684  004EB2  B4D8               	btfsc	status,2,c
 11685  004EB4  D004               	goto	u9520
 11686  004EB6  5019               	movf	fputc@fp^0,w,c
 11687  004EB8  101A               	iorwf	(fputc@fp+1)^0,w,c
 11688  004EBA  A4D8               	btfss	status,2,c
 11689  004EBC  D004               	goto	l8746
 11690  004EBE                     u9520:
 11691  004EBE  5017               	movf	fputc@c^0,w,c
 11692  004EC0  ECBB  F02E         	call	_putch
 11693  004EC4  D04A               	goto	l8752
 11694  004EC6                     l8746:
 11695  004EC6  EE20 F009          	lfsr	2,9
 11696  004ECA  5019               	movf	fputc@fp^0,w,c
 11697  004ECC  26D9               	addwf	fsr2l,f,c
 11698  004ECE  501A               	movf	(fputc@fp+1)^0,w,c
 11699  004ED0  22DA               	addwfc	fsr2h,f,c
 11700  004ED2  50DE               	movf	postinc2,w,c
 11701  004ED4  10DE               	iorwf	postinc2,w,c
 11702  004ED6  B4D8               	btfsc	status,2,c
 11703  004ED8  D016               	goto	u9540
 11704  004EDA  EE20 F009          	lfsr	2,9
 11705  004EDE  5019               	movf	fputc@fp^0,w,c
 11706  004EE0  26D9               	addwf	fsr2l,f,c
 11707  004EE2  501A               	movf	(fputc@fp+1)^0,w,c
 11708  004EE4  22DA               	addwfc	fsr2h,f,c
 11709  004EE6  EE10 F003          	lfsr	1,3
 11710  004EEA  5019               	movf	fputc@fp^0,w,c
 11711  004EEC  26E1               	addwf	fsr1l,f,c
 11712  004EEE  501A               	movf	(fputc@fp+1)^0,w,c
 11713  004EF0  22E2               	addwfc	fsr1h,f,c
 11714  004EF2  50DE               	movf	postinc2,w,c
 11715  004EF4  5CE6               	subwf	postinc1,w,c
 11716  004EF6  50E6               	movf	postinc1,w,c
 11717  004EF8  0A80               	xorlw	128
 11718  004EFA  6E1F               	movwf	(??_fputc+4)^0,c
 11719  004EFC  50DE               	movf	postinc2,w,c
 11720  004EFE  0A80               	xorlw	128
 11721  004F00  581F               	subwfb	(??_fputc+4)^0,w,c
 11722  004F02  B0D8               	btfsc	status,0,c
 11723  004F04  D02A               	goto	l8752
 11724  004F06                     u9540:
 11725  004F06  EE20 F003          	lfsr	2,3
 11726  004F0A  5019               	movf	fputc@fp^0,w,c
 11727  004F0C  26D9               	addwf	fsr2l,f,c
 11728  004F0E  501A               	movf	(fputc@fp+1)^0,w,c
 11729  004F10  22DA               	addwfc	fsr2h,f,c
 11730  004F12  006F FF78  F01B    	movff	postinc2,??_fputc
 11731  004F18  006F FF74  F01C    	movff	postdec2,??_fputc+1
 11732  004F1E  0060  F067  FFD9   	movff	fputc@fp,fsr2l
 11733  004F24  0060  F06B  FFDA   	movff	fputc@fp+1,fsr2h
 11734  004F2A  006F FF78  F01D    	movff	postinc2,??_fputc+2
 11735  004F30  006F FF74  F01E    	movff	postdec2,??_fputc+3
 11736  004F36  501B               	movf	??_fputc^0,w,c
 11737  004F38  241D               	addwf	(??_fputc+2)^0,w,c
 11738  004F3A  6ED9               	movwf	fsr2l,c
 11739  004F3C  501C               	movf	(??_fputc+1)^0,w,c
 11740  004F3E  201E               	addwfc	(??_fputc+3)^0,w,c
 11741  004F40  6EDA               	movwf	fsr2h,c
 11742  004F42  0060  F05F  FFDF   	movff	fputc@c,indf2
 11743  004F48  EE20 F003          	lfsr	2,3
 11744  004F4C  5019               	movf	fputc@fp^0,w,c
 11745  004F4E  26D9               	addwf	fsr2l,f,c
 11746  004F50  501A               	movf	(fputc@fp+1)^0,w,c
 11747  004F52  22DA               	addwfc	fsr2h,f,c
 11748  004F54  2ADE               	incf	postinc2,f,c
 11749  004F56  0E00               	movlw	0
 11750  004F58  22DD               	addwfc	postdec2,f,c
 11751  004F5A                     l8752:
 11752  004F5A  C017  F017         	movff	fputc@c,?_fputc
 11753  004F5E  6A18               	clrf	(?_fputc+1)^0,c
 11754  004F60  0012               	return		;funcret
 11755  004F62                     __end_of_fputc:
 11756                           	callstack 0
 11757                           
 11758 ;; *************** function _putch *****************
 11759 ;; Defined at:
 11760 ;;		line 230 in file "mcc_generated_files/uart1.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  txData          1    wreg     unsigned char 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;  txData          1   21[COMRAM] unsigned char 
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      void 
 11767 ;; Registers used:
 11768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 3F/39
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11778 ;;Total ram usage:        1 bytes
 11779 ;; Hardware stack levels used: 1
 11780 ;; Hardware stack levels required when called: 5
 11781 ;; This function calls:
 11782 ;;		_UART1_Write
 11783 ;; This function is called by:
 11784 ;;		_fputc
 11785 ;; This function uses a non-reentrant model
 11786 ;;
 11787                           
 11788                           	psect	text48
 11789  005D76                     __ptext48:
 11790                           	callstack 0
 11791  005D76                     _putch:
 11792                           	callstack 16
 11793                           
 11794                           ;incstack = 0
 11795                           ;putch@txData stored from wreg
 11796  005D76  6E16               	movwf	putch@txData^0,c
 11797                           
 11798                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
 11799  005D78  5016               	movf	putch@txData^0,w,c
 11800  005D7A  EC5F  F02C         	call	_UART1_Write
 11801                           
 11802                           ; BSR set to: 57
 11803  005D7E  0012               	return		;funcret
 11804  005D80                     __end_of_putch:
 11805                           	callstack 0
 11806                           
 11807 ;; *************** function _UART1_Write *****************
 11808 ;; Defined at:
 11809 ;;		line 202 in file "mcc_generated_files/uart1.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;  txData          1    wreg     unsigned char 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  txData          1   20[COMRAM] unsigned char 
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      void 
 11816 ;; Registers used:
 11817 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 3F/39
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11827 ;;Total ram usage:        1 bytes
 11828 ;; Hardware stack levels used: 1
 11829 ;; Hardware stack levels required when called: 4
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_putch
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           	psect	text49
 11838  0058BE                     __ptext49:
 11839                           	callstack 0
 11840  0058BE                     _UART1_Write:
 11841                           	callstack 16
 11842                           
 11843                           ; BSR set to: 57
 11844                           ;incstack = 0
 11845                           ;UART1_Write@txData stored from wreg
 11846  0058BE  6E15               	movwf	UART1_Write@txData^0,c
 11847  0058C0                     
 11848                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11849                           
 11850                           ;mcc_generated_files/uart1.c: 202: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 203: {;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11851  0058C0  5049               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 11852  0058C2  B4D8               	btfsc	status,2,c
 11853  0058C4  D7FD               	goto	l8720
 11854                           
 11855                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
 11856  0058C6  0139               	movlb	57	; () banked
 11857  0058C8  B993               	btfsc	147,4,b	;volatile
 11858  0058CA  D004               	goto	l616
 11859                           
 11860                           ; BSR set to: 57
 11861                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
 11862  0058CC  0060  F057  FDEA   	movff	UART1_Write@txData,15850	;volatile
 11863                           
 11864                           ;mcc_generated_files/uart1.c: 211:     }
 11865  0058D2  D011               	goto	l8736
 11866  0058D4                     l616:
 11867                           
 11868                           ; BSR set to: 57
 11869                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
 11870  0058D4  9993               	bcf	147,4,b	;volatile
 11871                           
 11872                           ; BSR set to: 57
 11873                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
 11874  0058D6  0E40               	movlw	low _uart1TxBuffer
 11875  0058D8  244B               	addwf	_uart1TxHead^0,w,c	;volatile
 11876  0058DA  6ED9               	movwf	fsr2l,c
 11877  0058DC  6ADA               	clrf	fsr2h,c
 11878  0058DE  0E01               	movlw	high _uart1TxBuffer
 11879  0058E0  22DA               	addwfc	fsr2h,f,c
 11880  0058E2  0060  F057  FFDF   	movff	UART1_Write@txData,indf2
 11881                           
 11882                           ; BSR set to: 57
 11883  0058E8  2A4B               	incf	_uart1TxHead^0,f,c	;volatile
 11884                           
 11885                           ; BSR set to: 57
 11886                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 11887  0058EA  0E3F               	movlw	63
 11888  0058EC  644B               	cpfsgt	_uart1TxHead^0,c
 11889  0058EE  D002               	goto	l8734
 11890                           
 11891                           ; BSR set to: 57
 11892                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
 11893  0058F0  0E00               	movlw	0
 11894  0058F2  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 11895  0058F4                     l8734:
 11896                           
 11897                           ; BSR set to: 57
 11898                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
 11899  0058F4  0649               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 11900  0058F6                     l8736:
 11901                           
 11902                           ; BSR set to: 57
 11903                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
 11904  0058F6  8993               	bsf	147,4,b	;volatile
 11905                           
 11906                           ; BSR set to: 57
 11907  0058F8  0012               	return		;funcret
 11908  0058FA                     __end_of_UART1_Write:
 11909                           	callstack 0
 11910                           
 11911 ;; *************** function ___xxtofl *****************
 11912 ;; Defined at:
 11913 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 11914 ;; Parameters:    Size  Location     Type
 11915 ;;  sign            1    wreg     unsigned char 
 11916 ;;  val             4   20[COMRAM] long 
 11917 ;; Auto vars:     Size  Location     Type
 11918 ;;  sign            1   28[COMRAM] unsigned char 
 11919 ;;  arg             4   30[COMRAM] unsigned long 
 11920 ;;  exp             1   29[COMRAM] unsigned char 
 11921 ;; Return value:  Size  Location     Type
 11922 ;;                  4   20[COMRAM] unsigned char 
 11923 ;; Registers used:
 11924 ;;		wreg, status,2, status,0
 11925 ;; Tracked objects:
 11926 ;;		On entry : 3F/0
 11927 ;;		On exit  : 0/0
 11928 ;;		Unchanged: 0/0
 11929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11931 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11933 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11934 ;;Total ram usage:       14 bytes
 11935 ;; Hardware stack levels used: 1
 11936 ;; Hardware stack levels required when called: 4
 11937 ;; This function calls:
 11938 ;;		Nothing
 11939 ;; This function is called by:
 11940 ;;		_main
 11941 ;; This function uses a non-reentrant model
 11942 ;;
 11943                           
 11944                           	psect	text50
 11945  0046E4                     __ptext50:
 11946                           	callstack 0
 11947  0046E4                     ___xxtofl:
 11948                           	callstack 26
 11949                           
 11950                           ; BSR set to: 57
 11951                           ;incstack = 0
 11952                           ;___xxtofl@sign stored from wreg
 11953  0046E4  6E1D               	movwf	___xxtofl@sign^0,c
 11954  0046E6  501D               	movf	___xxtofl@sign^0,w,c
 11955  0046E8  A4D8               	btfss	status,2,c
 11956  0046EA  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 11957  0046EC  D01A               	goto	l1794
 11958  0046EE  C015  F019         	movff	___xxtofl@val,??___xxtofl
 11959  0046F2  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
 11960  0046F6  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
 11961  0046FA  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
 11962  0046FE  1E19               	comf	??___xxtofl^0,f,c
 11963  004700  1E1A               	comf	(??___xxtofl+1)^0,f,c
 11964  004702  1E1B               	comf	(??___xxtofl+2)^0,f,c
 11965  004704  1E1C               	comf	(??___xxtofl+3)^0,f,c
 11966  004706  2A19               	incf	??___xxtofl^0,f,c
 11967  004708  0E00               	movlw	0
 11968  00470A  221A               	addwfc	(??___xxtofl+1)^0,f,c
 11969  00470C  221B               	addwfc	(??___xxtofl+2)^0,f,c
 11970  00470E  221C               	addwfc	(??___xxtofl+3)^0,f,c
 11971  004710  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
 11972  004714  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
 11973  004718  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
 11974  00471C  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
 11975  004720  D008               	goto	l10554
 11976  004722                     l1794:
 11977  004722  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
 11978  004726  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11979  00472A  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11980  00472E  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11981  004732                     l10554:
 11982  004732  5015               	movf	___xxtofl@val^0,w,c
 11983  004734  1016               	iorwf	(___xxtofl@val+1)^0,w,c
 11984  004736  1017               	iorwf	(___xxtofl@val+2)^0,w,c
 11985  004738  1018               	iorwf	(___xxtofl@val+3)^0,w,c
 11986  00473A  A4D8               	btfss	status,2,c
 11987  00473C  D009               	goto	l10560
 11988  00473E  0E00               	movlw	0
 11989  004740  6E15               	movwf	?___xxtofl^0,c
 11990  004742  0E00               	movlw	0
 11991  004744  6E16               	movwf	(?___xxtofl+1)^0,c
 11992  004746  0E00               	movlw	0
 11993  004748  6E17               	movwf	(?___xxtofl+2)^0,c
 11994  00474A  0E00               	movlw	0
 11995  00474C  6E18               	movwf	(?___xxtofl+3)^0,c
 11996  00474E  0012               	return	
 11997  004750                     l10560:
 11998  004750  0E96               	movlw	150
 11999  004752  6E1E               	movwf	___xxtofl@exp^0,c
 12000  004754  D006               	goto	l10564
 12001  004756                     l10562:
 12002  004756  2A1E               	incf	___xxtofl@exp^0,f,c
 12003  004758  90D8               	bcf	status,0,c
 12004  00475A  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 12005  00475C  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 12006  00475E  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 12007  004760  321F               	rrcf	___xxtofl@arg^0,f,c
 12008  004762                     l10564:
 12009  004762  0E00               	movlw	0
 12010  004764  141F               	andwf	___xxtofl@arg^0,w,c
 12011  004766  6E19               	movwf	??___xxtofl^0,c
 12012  004768  0E00               	movlw	0
 12013  00476A  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 12014  00476C  6E1A               	movwf	(??___xxtofl+1)^0,c
 12015  00476E  0E00               	movlw	0
 12016  004770  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 12017  004772  6E1B               	movwf	(??___xxtofl+2)^0,c
 12018  004774  0EFE               	movlw	254
 12019  004776  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 12020  004778  6E1C               	movwf	(??___xxtofl+3)^0,c
 12021  00477A  5019               	movf	??___xxtofl^0,w,c
 12022  00477C  101A               	iorwf	(??___xxtofl+1)^0,w,c
 12023  00477E  101B               	iorwf	(??___xxtofl+2)^0,w,c
 12024  004780  101C               	iorwf	(??___xxtofl+3)^0,w,c
 12025  004782  B4D8               	btfsc	status,2,c
 12026  004784  D00D               	goto	l1801
 12027  004786  D7E7               	goto	l10562
 12028  004788                     l10566:
 12029  004788  2A1E               	incf	___xxtofl@exp^0,f,c
 12030  00478A  0E01               	movlw	1
 12031  00478C  261F               	addwf	___xxtofl@arg^0,f,c
 12032  00478E  0E00               	movlw	0
 12033  004790  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
 12034  004792  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
 12035  004794  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
 12036  004796  90D8               	bcf	status,0,c
 12037  004798  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 12038  00479A  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 12039  00479C  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 12040  00479E  321F               	rrcf	___xxtofl@arg^0,f,c
 12041  0047A0                     l1801:
 12042  0047A0  0E00               	movlw	0
 12043  0047A2  141F               	andwf	___xxtofl@arg^0,w,c
 12044  0047A4  6E19               	movwf	??___xxtofl^0,c
 12045  0047A6  0E00               	movlw	0
 12046  0047A8  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 12047  0047AA  6E1A               	movwf	(??___xxtofl+1)^0,c
 12048  0047AC  0E00               	movlw	0
 12049  0047AE  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 12050  0047B0  6E1B               	movwf	(??___xxtofl+2)^0,c
 12051  0047B2  0EFF               	movlw	255
 12052  0047B4  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 12053  0047B6  6E1C               	movwf	(??___xxtofl+3)^0,c
 12054  0047B8  5019               	movf	??___xxtofl^0,w,c
 12055  0047BA  101A               	iorwf	(??___xxtofl+1)^0,w,c
 12056  0047BC  101B               	iorwf	(??___xxtofl+2)^0,w,c
 12057  0047BE  101C               	iorwf	(??___xxtofl+3)^0,w,c
 12058  0047C0  B4D8               	btfsc	status,2,c
 12059  0047C2  D007               	goto	l10574
 12060  0047C4  D7E1               	goto	l10566
 12061  0047C6                     l10572:
 12062  0047C6  061E               	decf	___xxtofl@exp^0,f,c
 12063  0047C8  90D8               	bcf	status,0,c
 12064  0047CA  361F               	rlcf	___xxtofl@arg^0,f,c
 12065  0047CC  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
 12066  0047CE  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
 12067  0047D0  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
 12068  0047D2                     l10574:
 12069  0047D2  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
 12070  0047D4  D003               	goto	u12320
 12071  0047D6  0E02               	movlw	2
 12072  0047D8  601E               	cpfslt	___xxtofl@exp^0,c
 12073  0047DA  D7F5               	goto	l10572
 12074  0047DC                     u12320:
 12075  0047DC  A01E               	btfss	___xxtofl@exp^0,0,c
 12076  0047DE  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
 12077  0047E0  90D8               	bcf	status,0,c
 12078  0047E2  321E               	rrcf	___xxtofl@exp^0,f,c
 12079  0047E4  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
 12080  0047E8  6A1A               	clrf	(??___xxtofl+1)^0,c
 12081  0047EA  6A1B               	clrf	(??___xxtofl+2)^0,c
 12082  0047EC  6A1C               	clrf	(??___xxtofl+3)^0,c
 12083  0047EE  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
 12084  0047F2  6A1B               	clrf	(??___xxtofl+2)^0,c
 12085  0047F4  6A1A               	clrf	(??___xxtofl+1)^0,c
 12086  0047F6  6A19               	clrf	??___xxtofl^0,c
 12087  0047F8  5019               	movf	??___xxtofl^0,w,c
 12088  0047FA  121F               	iorwf	___xxtofl@arg^0,f,c
 12089  0047FC  501A               	movf	(??___xxtofl+1)^0,w,c
 12090  0047FE  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
 12091  004800  501B               	movf	(??___xxtofl+2)^0,w,c
 12092  004802  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
 12093  004804  501C               	movf	(??___xxtofl+3)^0,w,c
 12094  004806  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
 12095  004808  501D               	movf	___xxtofl@sign^0,w,c
 12096  00480A  A4D8               	btfss	status,2,c
 12097  00480C  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 12098  00480E  D001               	goto	l10590
 12099  004810  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
 12100  004812                     l10590:
 12101  004812  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
 12102  004816  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
 12103  00481A  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
 12104  00481E  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
 12105  004822  0012               	return		;funcret
 12106  004824                     __end_of___xxtofl:
 12107                           	callstack 0
 12108                           
 12109 ;; *************** function _SYSTEM_Initialize *****************
 12110 ;; Defined at:
 12111 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;		None
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;		None
 12116 ;; Return value:  Size  Location     Type
 12117 ;;                  1    wreg      void 
 12118 ;; Registers used:
 12119 ;;		wreg, status,2, status,0, cstack
 12120 ;; Tracked objects:
 12121 ;;		On entry : 3F/0
 12122 ;;		On exit  : 3F/3D
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12129 ;;Total ram usage:        0 bytes
 12130 ;; Hardware stack levels used: 1
 12131 ;; Hardware stack levels required when called: 6
 12132 ;; This function calls:
 12133 ;;		_ADCC_Initialize
 12134 ;;		_DAC1_Initialize
 12135 ;;		_INTERRUPT_Initialize
 12136 ;;		_OSCILLATOR_Initialize
 12137 ;;		_PIN_MANAGER_Initialize
 12138 ;;		_PMD_Initialize
 12139 ;;		_SPI1_Initialize
 12140 ;;		_TMR5_Initialize
 12141 ;;		_TMR6_Initialize
 12142 ;;		_UART1_Initialize
 12143 ;; This function is called by:
 12144 ;;		_main
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           	psect	text51
 12149  005AF4                     __ptext51:
 12150                           	callstack 0
 12151  005AF4                     _SYSTEM_Initialize:
 12152                           	callstack 24
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12156                           
 12157                           ;incstack = 0
 12158  005AF4  EC9E  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12159                           
 12160                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12161  005AF8  ECE8  F02D         	call	_PMD_Initialize	;wreg free
 12162                           
 12163                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12164  005AFC  ECE0  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 12165                           
 12166                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12167  005B00  EC19  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 12168                           
 12169                           ; BSR set to: 57
 12170                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
 12171  005B04  EC4F  F02D         	call	_TMR6_Initialize	;wreg free
 12172                           
 12173                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 12174  005B08  ECBB  F029         	call	_ADCC_Initialize	;wreg free
 12175                           
 12176                           ;mcc_generated_files/mcc.c: 58:     DAC1_Initialize();
 12177  005B0C  ECB5  F02E         	call	_DAC1_Initialize	;wreg free
 12178                           
 12179                           ; BSR set to: 62
 12180                           ;mcc_generated_files/mcc.c: 59:     TMR5_Initialize();
 12181  005B10  EC57  F02B         	call	_TMR5_Initialize	;wreg free
 12182                           
 12183                           ;mcc_generated_files/mcc.c: 60:     UART1_Initialize();
 12184  005B14  ECFC  F026         	call	_UART1_Initialize	;wreg free
 12185                           
 12186                           ;mcc_generated_files/mcc.c: 61:     SPI1_Initialize();
 12187  005B18  EC27  F02E         	call	_SPI1_Initialize	;wreg free
 12188                           
 12189                           ; BSR set to: 61
 12190  005B1C  0012               	return		;funcret
 12191  005B1E                     __end_of_SYSTEM_Initialize:
 12192                           	callstack 0
 12193                           
 12194 ;; *************** function _UART1_Initialize *****************
 12195 ;; Defined at:
 12196 ;;		line 87 in file "mcc_generated_files/uart1.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;		None
 12199 ;; Auto vars:     Size  Location     Type
 12200 ;;		None
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      void 
 12203 ;; Registers used:
 12204 ;;		wreg, status,2, status,0, cstack
 12205 ;; Tracked objects:
 12206 ;;		On entry : 3B/3D
 12207 ;;		On exit  : 3F/39
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12214 ;;Total ram usage:        0 bytes
 12215 ;; Hardware stack levels used: 1
 12216 ;; Hardware stack levels required when called: 5
 12217 ;; This function calls:
 12218 ;;		_UART1_SetErrorHandler
 12219 ;;		_UART1_SetFramingErrorHandler
 12220 ;;		_UART1_SetOverrunErrorHandler
 12221 ;;		_UART1_SetRxInterruptHandler
 12222 ;;		_UART1_SetTxInterruptHandler
 12223 ;; This function is called by:
 12224 ;;		_SYSTEM_Initialize
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           	psect	text52
 12229  004DF8                     __ptext52:
 12230                           	callstack 0
 12231  004DF8                     _UART1_Initialize:
 12232                           	callstack 24
 12233                           
 12234                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 12235                           
 12236                           ; BSR set to: 61
 12237                           ;incstack = 0
 12238  004DF8  0139               	movlb	57	; () banked
 12239  004DFA  9793               	bcf	147,3,b	;volatile
 12240                           
 12241                           ; BSR set to: 57
 12242                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12243  004DFC  0E10               	movlw	low _UART1_Receive_ISR
 12244  004DFE  6E15               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 12245  004E00  0E50               	movlw	high _UART1_Receive_ISR
 12246  004E02  6E16               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 12247  004E04  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12248  004E06  6E17               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
 12249  004E08  EC84  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12250                           
 12251                           ; BSR set to: 57
 12252                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 12253  004E0C  9993               	bcf	147,4,b	;volatile
 12254                           
 12255                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12256  004E0E  0E70               	movlw	low _UART1_Transmit_ISR
 12257  004E10  6E15               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 12258  004E12  0E5A               	movlw	high _UART1_Transmit_ISR
 12259  004E14  6E16               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 12260  004E16  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12261  004E18  6E17               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
 12262  004E1A  EC7D  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12263                           
 12264                           ; BSR set to: 57
 12265                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 12266  004E1E  0E00               	movlw	0
 12267  004E20  013D               	movlb	61	; () banked
 12268  004E22  6FEC               	movwf	236,b	;volatile
 12269                           
 12270                           ; BSR set to: 61
 12271                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 12272  004E24  0E00               	movlw	0
 12273  004E26  6FED               	movwf	237,b	;volatile
 12274                           
 12275                           ; BSR set to: 61
 12276                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 12277  004E28  0E00               	movlw	0
 12278  004E2A  6FEE               	movwf	238,b	;volatile
 12279                           
 12280                           ; BSR set to: 61
 12281                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 12282  004E2C  0E00               	movlw	0
 12283  004E2E  6FEF               	movwf	239,b	;volatile
 12284                           
 12285                           ; BSR set to: 61
 12286                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 12287  004E30  0E00               	movlw	0
 12288  004E32  6FF0               	movwf	240,b	;volatile
 12289                           
 12290                           ; BSR set to: 61
 12291                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 12292  004E34  0E00               	movlw	0
 12293  004E36  6FF1               	movwf	241,b	;volatile
 12294                           
 12295                           ; BSR set to: 61
 12296                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 12297  004E38  0EB0               	movlw	176
 12298  004E3A  6FF2               	movwf	242,b	;volatile
 12299                           
 12300                           ; BSR set to: 61
 12301                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 12302  004E3C  0E80               	movlw	128
 12303  004E3E  6FF3               	movwf	243,b	;volatile
 12304                           
 12305                           ; BSR set to: 61
 12306                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 12307  004E40  0E00               	movlw	0
 12308  004E42  6FF4               	movwf	244,b	;volatile
 12309                           
 12310                           ; BSR set to: 61
 12311                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 12312  004E44  0E8A               	movlw	138
 12313  004E46  6FF5               	movwf	245,b	;volatile
 12314                           
 12315                           ; BSR set to: 61
 12316                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 12317  004E48  0E00               	movlw	0
 12318  004E4A  6FF6               	movwf	246,b	;volatile
 12319                           
 12320                           ; BSR set to: 61
 12321                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 12322  004E4C  0E00               	movlw	0
 12323  004E4E  6FF7               	movwf	247,b	;volatile
 12324                           
 12325                           ; BSR set to: 61
 12326                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 12327  004E50  0E00               	movlw	0
 12328  004E52  6FF8               	movwf	248,b	;volatile
 12329                           
 12330                           ; BSR set to: 61
 12331                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 12332  004E54  0E00               	movlw	0
 12333  004E56  6FF9               	movwf	249,b	;volatile
 12334                           
 12335                           ; BSR set to: 61
 12336                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 12337  004E58  0E00               	movlw	0
 12338  004E5A  6FFA               	movwf	250,b	;volatile
 12339                           
 12340                           ; BSR set to: 61
 12341                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 12342  004E5C  0EA4               	movlw	low _UART1_DefaultFramingErrorHandler
 12343  004E5E  6E15               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 12344  004E60  0E5D               	movlw	high _UART1_DefaultFramingErrorHandler
 12345  004E62  6E16               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 12346  004E64  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 12347  004E66  6E17               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
 12348  004E68  EC92  F02E         	call	_UART1_SetFramingErrorHandler	;wreg free
 12349                           
 12350                           ; BSR set to: 61
 12351                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 12352  004E6C  0EA2               	movlw	low _UART1_DefaultOverrunErrorHandler
 12353  004E6E  6E15               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 12354  004E70  0E5D               	movlw	high _UART1_DefaultOverrunErrorHandler
 12355  004E72  6E16               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 12356  004E74  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 12357  004E76  6E17               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
 12358  004E78  EC8B  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 12359                           
 12360                           ; BSR set to: 61
 12361                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 12362  004E7C  0E90               	movlw	low _UART1_DefaultErrorHandler
 12363  004E7E  6E15               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 12364  004E80  0E5D               	movlw	high _UART1_DefaultErrorHandler
 12365  004E82  6E16               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 12366  004E84  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 12367  004E86  6E17               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
 12368  004E88  EC99  F02E         	call	_UART1_SetErrorHandler	;wreg free
 12369                           
 12370                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 12371  004E8C  0E00               	movlw	0
 12372  004E8E  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 12373                           
 12374                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 12375  004E90  0E00               	movlw	0
 12376  004E92  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 12377                           
 12378                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 12379  004E94  0E00               	movlw	0
 12380  004E96  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 12381                           
 12382                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12383  004E98  0E40               	movlw	64
 12384  004E9A  6E49               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 12385                           
 12386                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 12387  004E9C  0E00               	movlw	0
 12388  004E9E  6E48               	movwf	_uart1RxHead^0,c	;volatile
 12389                           
 12390                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 12391  004EA0  0E00               	movlw	0
 12392  004EA2  6E47               	movwf	_uart1RxTail^0,c	;volatile
 12393                           
 12394                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 12395  004EA4  0E00               	movlw	0
 12396  004EA6  6E46               	movwf	_uart1RxCount^0,c	;volatile
 12397                           
 12398                           ; BSR set to: 61
 12399                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 12400  004EA8  0139               	movlb	57	; () banked
 12401  004EAA  8793               	bsf	147,3,b	;volatile
 12402                           
 12403                           ; BSR set to: 57
 12404  004EAC  0012               	return		;funcret
 12405  004EAE                     __end_of_UART1_Initialize:
 12406                           	callstack 0
 12407                           
 12408 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12409 ;; Defined at:
 12410 ;;		line 333 in file "mcc_generated_files/uart1.c"
 12411 ;; Parameters:    Size  Location     Type
 12412 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12413 ;;		 -> UART1_Transmit_ISR(1), 
 12414 ;; Auto vars:     Size  Location     Type
 12415 ;;		None
 12416 ;; Return value:  Size  Location     Type
 12417 ;;                  1    wreg      void 
 12418 ;; Registers used:
 12419 ;;		wreg, status,2, status,0
 12420 ;; Tracked objects:
 12421 ;;		On entry : 3F/39
 12422 ;;		On exit  : 3F/39
 12423 ;;		Unchanged: 3E/0
 12424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12425 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12428 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12429 ;;Total ram usage:        3 bytes
 12430 ;; Hardware stack levels used: 1
 12431 ;; Hardware stack levels required when called: 4
 12432 ;; This function calls:
 12433 ;;		Nothing
 12434 ;; This function is called by:
 12435 ;;		_UART1_Initialize
 12436 ;; This function uses a non-reentrant model
 12437 ;;
 12438                           
 12439                           	psect	text53
 12440  005CFA                     __ptext53:
 12441                           	callstack 0
 12442  005CFA                     _UART1_SetTxInterruptHandler:
 12443                           	callstack 24
 12444                           
 12445                           ; BSR set to: 57
 12446                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 12447                           
 12448                           ; BSR set to: 57
 12449                           ;incstack = 0
 12450  005CFA  C015  F0EF         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 12451  005CFE  C016  F0F0         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 12452  005D02  C017  F0F1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 12453                           
 12454                           ; BSR set to: 57
 12455  005D06  0012               	return		;funcret
 12456  005D08                     __end_of_UART1_SetTxInterruptHandler:
 12457                           	callstack 0
 12458                           
 12459 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12460 ;; Defined at:
 12461 ;;		line 329 in file "mcc_generated_files/uart1.c"
 12462 ;; Parameters:    Size  Location     Type
 12463 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12464 ;;		 -> UART1_Receive_ISR(1), 
 12465 ;; Auto vars:     Size  Location     Type
 12466 ;;		None
 12467 ;; Return value:  Size  Location     Type
 12468 ;;                  1    wreg      void 
 12469 ;; Registers used:
 12470 ;;		wreg, status,2, status,0
 12471 ;; Tracked objects:
 12472 ;;		On entry : 3F/39
 12473 ;;		On exit  : 3F/39
 12474 ;;		Unchanged: 3E/0
 12475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12476 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12479 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12480 ;;Total ram usage:        3 bytes
 12481 ;; Hardware stack levels used: 1
 12482 ;; Hardware stack levels required when called: 4
 12483 ;; This function calls:
 12484 ;;		Nothing
 12485 ;; This function is called by:
 12486 ;;		_UART1_Initialize
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           	psect	text54
 12491  005D08                     __ptext54:
 12492                           	callstack 0
 12493  005D08                     _UART1_SetRxInterruptHandler:
 12494                           	callstack 24
 12495                           
 12496                           ; BSR set to: 57
 12497                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 12498                           
 12499                           ; BSR set to: 57
 12500                           ;incstack = 0
 12501  005D08  C015  F0F2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 12502  005D0C  C016  F0F3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 12503  005D10  C017  F0F4         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 12504                           
 12505                           ; BSR set to: 57
 12506  005D14  0012               	return		;funcret
 12507  005D16                     __end_of_UART1_SetRxInterruptHandler:
 12508                           	callstack 0
 12509                           
 12510 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 12511 ;; Defined at:
 12512 ;;		line 319 in file "mcc_generated_files/uart1.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12515 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;		None
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  1    wreg      void 
 12520 ;; Registers used:
 12521 ;;		wreg, status,2, status,0
 12522 ;; Tracked objects:
 12523 ;;		On entry : 3F/3D
 12524 ;;		On exit  : 3F/3D
 12525 ;;		Unchanged: 3E/0
 12526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12527 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12530 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12531 ;;Total ram usage:        3 bytes
 12532 ;; Hardware stack levels used: 1
 12533 ;; Hardware stack levels required when called: 4
 12534 ;; This function calls:
 12535 ;;		Nothing
 12536 ;; This function is called by:
 12537 ;;		_UART1_Initialize
 12538 ;; This function uses a non-reentrant model
 12539 ;;
 12540                           
 12541                           	psect	text55
 12542  005D16                     __ptext55:
 12543                           	callstack 0
 12544  005D16                     _UART1_SetOverrunErrorHandler:
 12545                           	callstack 24
 12546                           
 12547                           ; BSR set to: 61
 12548                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 12549                           
 12550                           ; BSR set to: 57
 12551                           ;incstack = 0
 12552  005D16  C015  F0E3         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 12553  005D1A  C016  F0E4         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 12554  005D1E  C017  F0E5         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 12555                           
 12556                           ; BSR set to: 61
 12557  005D22  0012               	return		;funcret
 12558  005D24                     __end_of_UART1_SetOverrunErrorHandler:
 12559                           	callstack 0
 12560                           
 12561 ;; *************** function _UART1_SetFramingErrorHandler *****************
 12562 ;; Defined at:
 12563 ;;		line 315 in file "mcc_generated_files/uart1.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12566 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 12567 ;; Auto vars:     Size  Location     Type
 12568 ;;		None
 12569 ;; Return value:  Size  Location     Type
 12570 ;;                  1    wreg      void 
 12571 ;; Registers used:
 12572 ;;		wreg, status,2, status,0
 12573 ;; Tracked objects:
 12574 ;;		On entry : 3F/3D
 12575 ;;		On exit  : 3F/3D
 12576 ;;		Unchanged: 3E/0
 12577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12578 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12581 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12582 ;;Total ram usage:        3 bytes
 12583 ;; Hardware stack levels used: 1
 12584 ;; Hardware stack levels required when called: 4
 12585 ;; This function calls:
 12586 ;;		Nothing
 12587 ;; This function is called by:
 12588 ;;		_UART1_Initialize
 12589 ;; This function uses a non-reentrant model
 12590 ;;
 12591                           
 12592                           	psect	text56
 12593  005D24                     __ptext56:
 12594                           	callstack 0
 12595  005D24                     _UART1_SetFramingErrorHandler:
 12596                           	callstack 24
 12597                           
 12598                           ; BSR set to: 61
 12599                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 12600                           
 12601                           ; BSR set to: 61
 12602                           ;incstack = 0
 12603  005D24  C015  F0E6         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 12604  005D28  C016  F0E7         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 12605  005D2C  C017  F0E8         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 12606                           
 12607                           ; BSR set to: 61
 12608  005D30  0012               	return		;funcret
 12609  005D32                     __end_of_UART1_SetFramingErrorHandler:
 12610                           	callstack 0
 12611                           
 12612 ;; *************** function _UART1_SetErrorHandler *****************
 12613 ;; Defined at:
 12614 ;;		line 323 in file "mcc_generated_files/uart1.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12617 ;;		 -> UART1_DefaultErrorHandler(1), 
 12618 ;; Auto vars:     Size  Location     Type
 12619 ;;		None
 12620 ;; Return value:  Size  Location     Type
 12621 ;;                  1    wreg      void 
 12622 ;; Registers used:
 12623 ;;		wreg, status,2, status,0
 12624 ;; Tracked objects:
 12625 ;;		On entry : 3F/3D
 12626 ;;		On exit  : 3F/3D
 12627 ;;		Unchanged: 3E/0
 12628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12629 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12632 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12633 ;;Total ram usage:        3 bytes
 12634 ;; Hardware stack levels used: 1
 12635 ;; Hardware stack levels required when called: 4
 12636 ;; This function calls:
 12637 ;;		Nothing
 12638 ;; This function is called by:
 12639 ;;		_UART1_Initialize
 12640 ;; This function uses a non-reentrant model
 12641 ;;
 12642                           
 12643                           	psect	text57
 12644  005D32                     __ptext57:
 12645                           	callstack 0
 12646  005D32                     _UART1_SetErrorHandler:
 12647                           	callstack 24
 12648                           
 12649                           ; BSR set to: 61
 12650                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 12651                           
 12652                           ; BSR set to: 61
 12653                           ;incstack = 0
 12654  005D32  C015  F0E0         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 12655  005D36  C016  F0E1         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 12656  005D3A  C017  F0E2         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 12657                           
 12658                           ; BSR set to: 61
 12659  005D3E  0012               	return		;funcret
 12660  005D40                     __end_of_UART1_SetErrorHandler:
 12661                           	callstack 0
 12662                           
 12663 ;; *************** function _TMR6_Initialize *****************
 12664 ;; Defined at:
 12665 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;		None
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;		None
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  1    wreg      void 
 12672 ;; Registers used:
 12673 ;;		wreg, status,2, status,0, cstack
 12674 ;; Tracked objects:
 12675 ;;		On entry : 3F/39
 12676 ;;		On exit  : 3B/39
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12683 ;;Total ram usage:        0 bytes
 12684 ;; Hardware stack levels used: 1
 12685 ;; Hardware stack levels required when called: 5
 12686 ;; This function calls:
 12687 ;;		_TMR6_SetInterruptHandler
 12688 ;; This function is called by:
 12689 ;;		_SYSTEM_Initialize
 12690 ;; This function uses a non-reentrant model
 12691 ;;
 12692                           
 12693                           	psect	text58
 12694  005A9E                     __ptext58:
 12695                           	callstack 0
 12696  005A9E                     _TMR6_Initialize:
 12697                           	callstack 24
 12698                           
 12699                           ; BSR set to: 57
 12700                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 12701                           
 12702                           ; BSR set to: 61
 12703                           ;incstack = 0
 12704  005A9E  0E01               	movlw	1
 12705  005AA0  6E96               	movwf	150,c	;volatile
 12706                           
 12707                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 12708  005AA2  0E20               	movlw	32
 12709  005AA4  6E95               	movwf	149,c	;volatile
 12710                           
 12711                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 12712  005AA6  0E00               	movlw	0
 12713  005AA8  6E97               	movwf	151,c	;volatile
 12714                           
 12715                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 12716  005AAA  0E4D               	movlw	77
 12717  005AAC  6E93               	movwf	147,c	;volatile
 12718                           
 12719                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 12720  005AAE  0E00               	movlw	0
 12721  005AB0  6E92               	movwf	146,c	;volatile
 12722                           
 12723                           ; BSR set to: 57
 12724                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 12725  005AB2  91A9               	bcf	169,0,b	;volatile
 12726                           
 12727                           ; BSR set to: 57
 12728                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 12729  005AB4  8199               	bsf	153,0,b	;volatile
 12730                           
 12731                           ; BSR set to: 57
 12732                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 12733  005AB6  0E9C               	movlw	low _TMR6_DefaultInterruptHandler
 12734  005AB8  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
 12735  005ABA  0E5D               	movlw	high _TMR6_DefaultInterruptHandler
 12736  005ABC  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
 12737  005ABE  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12738  005AC0  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
 12739  005AC2  ECA0  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12740                           
 12741                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 12742  005AC6  6894               	setf	148,c	;volatile
 12743  005AC8  0012               	return		;funcret
 12744  005ACA                     __end_of_TMR6_Initialize:
 12745                           	callstack 0
 12746                           
 12747 ;; *************** function _TMR6_SetInterruptHandler *****************
 12748 ;; Defined at:
 12749 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12752 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;		None
 12755 ;; Return value:  Size  Location     Type
 12756 ;;                  1    wreg      void 
 12757 ;; Registers used:
 12758 ;;		wreg, status,2, status,0
 12759 ;; Tracked objects:
 12760 ;;		On entry : 3B/3D
 12761 ;;		On exit  : 3B/39
 12762 ;;		Unchanged: 3A/0
 12763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12764 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12767 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12768 ;;Total ram usage:        3 bytes
 12769 ;; Hardware stack levels used: 1
 12770 ;; Hardware stack levels required when called: 4
 12771 ;; This function calls:
 12772 ;;		Nothing
 12773 ;; This function is called by:
 12774 ;;		_TMR6_Initialize
 12775 ;;		_main
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           	psect	text59
 12780  005D40                     __ptext59:
 12781                           	callstack 0
 12782  005D40                     _TMR6_SetInterruptHandler:
 12783                           	callstack 26
 12784                           
 12785                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 12786                           
 12787                           ;incstack = 0
 12788  005D40  C015  F0E9         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 12789  005D44  C016  F0EA         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 12790  005D48  C017  F0EB         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 12791  005D4C  0012               	return		;funcret
 12792  005D4E                     __end_of_TMR6_SetInterruptHandler:
 12793                           	callstack 0
 12794                           
 12795 ;; *************** function _TMR5_Initialize *****************
 12796 ;; Defined at:
 12797 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;		None
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;		None
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  1    wreg      void 
 12804 ;; Registers used:
 12805 ;;		wreg, status,2, status,0, cstack
 12806 ;; Tracked objects:
 12807 ;;		On entry : 3F/3E
 12808 ;;		On exit  : 3B/39
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12815 ;;Total ram usage:        2 bytes
 12816 ;; Hardware stack levels used: 1
 12817 ;; Hardware stack levels required when called: 5
 12818 ;; This function calls:
 12819 ;;		_TMR5_SetInterruptHandler
 12820 ;; This function is called by:
 12821 ;;		_SYSTEM_Initialize
 12822 ;; This function uses a non-reentrant model
 12823 ;;
 12824                           
 12825                           	psect	text60
 12826  0056AE                     __ptext60:
 12827                           	callstack 0
 12828  0056AE                     _TMR5_Initialize:
 12829                           	callstack 24
 12830                           
 12831                           ; BSR set to: 62
 12832                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 12833                           
 12834                           ;incstack = 0
 12835  0056AE  0E00               	movlw	0
 12836  0056B0  6E9B               	movwf	155,c	;volatile
 12837                           
 12838                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 12839  0056B2  0E00               	movlw	0
 12840  0056B4  6E9C               	movwf	156,c	;volatile
 12841                           
 12842                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 12843  0056B6  0E02               	movlw	2
 12844  0056B8  6E9D               	movwf	157,c	;volatile
 12845                           
 12846                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 12847  0056BA  0E83               	movlw	131
 12848  0056BC  6E99               	movwf	153,c	;volatile
 12849                           
 12850                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 12851  0056BE  0E00               	movlw	0
 12852  0056C0  6E98               	movwf	152,c	;volatile
 12853                           
 12854                           ; BSR set to: 62
 12855                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 12856  0056C2  0139               	movlb	57	; () banked
 12857  0056C4  9DA8               	bcf	168,6,b	;volatile
 12858                           
 12859                           ; BSR set to: 57
 12860                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 12861  0056C6  5098               	movf	152,w,c	;volatile
 12862  0056C8  006F FE64  F018    	movff	16281,??_TMR5_Initialize	;volatile
 12863  0056CE  6A19               	clrf	(??_TMR5_Initialize+1)^0,c
 12864  0056D0  C018  F019         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 12865  0056D4  6A18               	clrf	??_TMR5_Initialize^0,c
 12866  0056D6  1018               	iorwf	??_TMR5_Initialize^0,w,c
 12867  0056D8  6E3F               	movwf	_timer5ReloadVal^0,c	;volatile
 12868  0056DA  5019               	movf	(??_TMR5_Initialize+1)^0,w,c
 12869  0056DC  6E40               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 12870                           
 12871                           ; BSR set to: 57
 12872                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 12873  0056DE  8D98               	bsf	152,6,b	;volatile
 12874                           
 12875                           ; BSR set to: 57
 12876                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 12877  0056E0  0EA6               	movlw	low _TMR5_DefaultInterruptHandler
 12878  0056E2  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
 12879  0056E4  0E5D               	movlw	high _TMR5_DefaultInterruptHandler
 12880  0056E6  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
 12881  0056E8  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12882  0056EA  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
 12883  0056EC  ECA7  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 12884                           
 12885                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 12886  0056F0  0E01               	movlw	1
 12887  0056F2  6E9A               	movwf	154,c	;volatile
 12888  0056F4  0012               	return		;funcret
 12889  0056F6                     __end_of_TMR5_Initialize:
 12890                           	callstack 0
 12891                           
 12892 ;; *************** function _TMR5_SetInterruptHandler *****************
 12893 ;; Defined at:
 12894 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12897 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;		None
 12900 ;; Return value:  Size  Location     Type
 12901 ;;                  1    wreg      void 
 12902 ;; Registers used:
 12903 ;;		wreg, status,2, status,0
 12904 ;; Tracked objects:
 12905 ;;		On entry : 3B/3D
 12906 ;;		On exit  : 3B/39
 12907 ;;		Unchanged: 3A/0
 12908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12909 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12912 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12913 ;;Total ram usage:        3 bytes
 12914 ;; Hardware stack levels used: 1
 12915 ;; Hardware stack levels required when called: 4
 12916 ;; This function calls:
 12917 ;;		Nothing
 12918 ;; This function is called by:
 12919 ;;		_TMR5_Initialize
 12920 ;;		_main
 12921 ;; This function uses a non-reentrant model
 12922 ;;
 12923                           
 12924                           	psect	text61
 12925  005D4E                     __ptext61:
 12926                           	callstack 0
 12927  005D4E                     _TMR5_SetInterruptHandler:
 12928                           	callstack 26
 12929                           
 12930                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 12931                           
 12932                           ;incstack = 0
 12933  005D4E  C015  F0DD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 12934  005D52  C016  F0DE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 12935  005D56  C017  F0DF         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 12936  005D5A  0012               	return		;funcret
 12937  005D5C                     __end_of_TMR5_SetInterruptHandler:
 12938                           	callstack 0
 12939                           
 12940 ;; *************** function _SPI1_Initialize *****************
 12941 ;; Defined at:
 12942 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;		None
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;		None
 12947 ;; Return value:  Size  Location     Type
 12948 ;;                  1    wreg      void 
 12949 ;; Registers used:
 12950 ;;		wreg, status,2
 12951 ;; Tracked objects:
 12952 ;;		On entry : 3F/39
 12953 ;;		On exit  : 3F/3D
 12954 ;;		Unchanged: 0/0
 12955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12960 ;;Total ram usage:        0 bytes
 12961 ;; Hardware stack levels used: 1
 12962 ;; Hardware stack levels required when called: 4
 12963 ;; This function calls:
 12964 ;;		Nothing
 12965 ;; This function is called by:
 12966 ;;		_SYSTEM_Initialize
 12967 ;; This function uses a non-reentrant model
 12968 ;;
 12969                           
 12970                           	psect	text62
 12971  005C4E                     __ptext62:
 12972                           	callstack 0
 12973  005C4E                     _SPI1_Initialize:
 12974                           	callstack 25
 12975                           
 12976                           ; BSR set to: 57
 12977                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 12978                           
 12979                           ;incstack = 0
 12980  005C4E  0E02               	movlw	2
 12981  005C50  013D               	movlb	61	; () banked
 12982  005C52  6F14               	movwf	20,b	;volatile
 12983                           
 12984                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 12985  005C54  0E40               	movlw	64
 12986  005C56  6F15               	movwf	21,b	;volatile
 12987                           
 12988                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 12989  005C58  0E00               	movlw	0
 12990  005C5A  6F16               	movwf	22,b	;volatile
 12991                           
 12992                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 12993  005C5C  0E00               	movlw	0
 12994  005C5E  6F1C               	movwf	28,b	;volatile
 12995                           
 12996                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x08;
 12997  005C60  0E08               	movlw	8
 12998  005C62  6F19               	movwf	25,b	;volatile
 12999                           
 13000                           ; BSR set to: 61
 13001                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 13002  005C64  96C4               	bcf	196,3,c	;volatile
 13003                           
 13004                           ; BSR set to: 61
 13005  005C66  0012               	return		;funcret
 13006  005C68                     __end_of_SPI1_Initialize:
 13007                           	callstack 0
 13008                           
 13009 ;; *************** function _PMD_Initialize *****************
 13010 ;; Defined at:
 13011 ;;		line 82 in file "mcc_generated_files/mcc.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;		None
 13014 ;; Auto vars:     Size  Location     Type
 13015 ;;		None
 13016 ;; Return value:  Size  Location     Type
 13017 ;;                  1    wreg      void 
 13018 ;; Registers used:
 13019 ;;		wreg, status,2
 13020 ;; Tracked objects:
 13021 ;;		On entry : 3F/39
 13022 ;;		On exit  : 3F/39
 13023 ;;		Unchanged: 0/0
 13024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13029 ;;Total ram usage:        0 bytes
 13030 ;; Hardware stack levels used: 1
 13031 ;; Hardware stack levels required when called: 4
 13032 ;; This function calls:
 13033 ;;		Nothing
 13034 ;; This function is called by:
 13035 ;;		_SYSTEM_Initialize
 13036 ;; This function uses a non-reentrant model
 13037 ;;
 13038                           
 13039                           	psect	text63
 13040  005BD0                     __ptext63:
 13041                           	callstack 0
 13042  005BD0                     _PMD_Initialize:
 13043                           	callstack 25
 13044                           
 13045                           ; BSR set to: 57
 13046                           ;mcc_generated_files/mcc.c: 85:     PMD0 = 0x00;
 13047                           
 13048                           ; BSR set to: 61
 13049                           ;incstack = 0
 13050  005BD0  0E00               	movlw	0
 13051  005BD2  6FC0               	movwf	192,b	;volatile
 13052                           
 13053                           ;mcc_generated_files/mcc.c: 87:     PMD1 = 0x00;
 13054  005BD4  0E00               	movlw	0
 13055  005BD6  6FC1               	movwf	193,b	;volatile
 13056                           
 13057                           ;mcc_generated_files/mcc.c: 89:     PMD2 = 0x00;
 13058  005BD8  0E00               	movlw	0
 13059  005BDA  6FC2               	movwf	194,b	;volatile
 13060                           
 13061                           ;mcc_generated_files/mcc.c: 91:     PMD3 = 0x00;
 13062  005BDC  0E00               	movlw	0
 13063  005BDE  6FC3               	movwf	195,b	;volatile
 13064                           
 13065                           ;mcc_generated_files/mcc.c: 93:     PMD4 = 0x00;
 13066  005BE0  0E00               	movlw	0
 13067  005BE2  6FC4               	movwf	196,b	;volatile
 13068                           
 13069                           ;mcc_generated_files/mcc.c: 95:     PMD5 = 0x00;
 13070  005BE4  0E00               	movlw	0
 13071  005BE6  6FC5               	movwf	197,b	;volatile
 13072                           
 13073                           ;mcc_generated_files/mcc.c: 97:     PMD6 = 0x00;
 13074  005BE8  0E00               	movlw	0
 13075  005BEA  6FC6               	movwf	198,b	;volatile
 13076                           
 13077                           ;mcc_generated_files/mcc.c: 99:     PMD7 = 0x00;
 13078  005BEC  0E00               	movlw	0
 13079  005BEE  6FC7               	movwf	199,b	;volatile
 13080                           
 13081                           ; BSR set to: 57
 13082  005BF0  0012               	return		;funcret
 13083  005BF2                     __end_of_PMD_Initialize:
 13084                           	callstack 0
 13085                           
 13086 ;; *************** function _PIN_MANAGER_Initialize *****************
 13087 ;; Defined at:
 13088 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;		None
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;		None
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      void 
 13095 ;; Registers used:
 13096 ;;		wreg, status,2
 13097 ;; Tracked objects:
 13098 ;;		On entry : 3F/39
 13099 ;;		On exit  : 3F/3A
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13106 ;;Total ram usage:        0 bytes
 13107 ;; Hardware stack levels used: 1
 13108 ;; Hardware stack levels required when called: 4
 13109 ;; This function calls:
 13110 ;;		Nothing
 13111 ;; This function is called by:
 13112 ;;		_SYSTEM_Initialize
 13113 ;; This function uses a non-reentrant model
 13114 ;;
 13115                           
 13116                           	psect	text64
 13117  004BC0                     __ptext64:
 13118                           	callstack 0
 13119  004BC0                     _PIN_MANAGER_Initialize:
 13120                           	callstack 25
 13121                           
 13122                           ; BSR set to: 57
 13123                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13124                           
 13125                           ; BSR set to: 57
 13126                           ;incstack = 0
 13127  004BC0  0E00               	movlw	0
 13128  004BC2  6EBE               	movwf	190,c	;volatile
 13129                           
 13130                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 13131  004BC4  0E11               	movlw	17
 13132  004BC6  6EBD               	movwf	189,c	;volatile
 13133                           
 13134                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 13135  004BC8  0E20               	movlw	32
 13136  004BCA  6EBA               	movwf	186,c	;volatile
 13137                           
 13138                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 13139  004BCC  0E00               	movlw	0
 13140  004BCE  6EBF               	movwf	191,c	;volatile
 13141                           
 13142                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 13143  004BD0  0E00               	movlw	0
 13144  004BD2  6EBB               	movwf	187,c	;volatile
 13145                           
 13146                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
 13147  004BD4  0E00               	movlw	0
 13148  004BD6  6EBC               	movwf	188,c	;volatile
 13149                           
 13150                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 13151  004BD8  0E02               	movlw	2
 13152  004BDA  6EC6               	movwf	198,c	;volatile
 13153                           
 13154                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0F;
 13155  004BDC  0E0F               	movlw	15
 13156  004BDE  6EC7               	movwf	199,c	;volatile
 13157                           
 13158                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 13159  004BE0  0EDF               	movlw	223
 13160  004BE2  6EC2               	movwf	194,c	;volatile
 13161                           
 13162                           ; BSR set to: 57
 13163                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 13164  004BE4  68C3               	setf	195,c	;volatile
 13165                           
 13166                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 13167  004BE6  0E90               	movlw	144
 13168  004BE8  6EC4               	movwf	196,c	;volatile
 13169                           
 13170                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x0C;
 13171  004BEA  0E0C               	movlw	12
 13172  004BEC  6EC5               	movwf	197,c	;volatile
 13173                           
 13174                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x0C;
 13175  004BEE  0E0C               	movlw	12
 13176  004BF0  013A               	movlb	58	; () banked
 13177  004BF2  6F70               	movwf	112,b	;volatile
 13178                           
 13179                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x60;
 13180  004BF4  0E60               	movlw	96
 13181  004BF6  6F60               	movwf	96,b	;volatile
 13182                           
 13183                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 13184  004BF8  0EFE               	movlw	254
 13185  004BFA  6F50               	movwf	80,b	;volatile
 13186                           
 13187                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 13188  004BFC  0E02               	movlw	2
 13189  004BFE  6F80               	movwf	128,b	;volatile
 13190                           
 13191                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0F;
 13192  004C00  0E0F               	movlw	15
 13193  004C02  6F90               	movwf	144,b	;volatile
 13194                           
 13195                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 13196  004C04  0E8F               	movlw	143
 13197  004C06  6F40               	movwf	64,b	;volatile
 13198                           
 13199                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 13200  004C08  0E00               	movlw	0
 13201  004C0A  6F71               	movwf	113,b	;volatile
 13202                           
 13203                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 13204  004C0C  0E00               	movlw	0
 13205  004C0E  6F91               	movwf	145,b	;volatile
 13206                           
 13207                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 13208  004C10  0E00               	movlw	0
 13209  004C12  6F81               	movwf	129,b	;volatile
 13210                           
 13211                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 13212  004C14  0E01               	movlw	1
 13213  004C16  6F51               	movwf	81,b	;volatile
 13214                           
 13215                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 13216  004C18  0E50               	movlw	80
 13217  004C1A  6F41               	movwf	65,b	;volatile
 13218                           
 13219                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 13220  004C1C  0E00               	movlw	0
 13221  004C1E  6F61               	movwf	97,b	;volatile
 13222                           
 13223                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 13224  004C20  0E00               	movlw	0
 13225  004C22  6F5A               	movwf	90,b	;volatile
 13226                           
 13227                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 13228  004C24  0E00               	movlw	0
 13229  004C26  6F5B               	movwf	91,b	;volatile
 13230                           
 13231                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 13232  004C28  0E00               	movlw	0
 13233  004C2A  6F6A               	movwf	106,b	;volatile
 13234                           
 13235                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 13236  004C2C  0E00               	movlw	0
 13237  004C2E  6F6B               	movwf	107,b	;volatile
 13238                           
 13239                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 13240  004C30  0E00               	movlw	0
 13241  004C32  6F7A               	movwf	122,b	;volatile
 13242                           
 13243                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 13244  004C34  0E00               	movlw	0
 13245  004C36  6F7B               	movwf	123,b	;volatile
 13246                           
 13247                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 13248  004C38  0E00               	movlw	0
 13249  004C3A  6F82               	movwf	130,b	;volatile
 13250                           
 13251                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 13252  004C3C  0E00               	movlw	0
 13253  004C3E  6F92               	movwf	146,b	;volatile
 13254                           
 13255                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 13256  004C40  0E00               	movlw	0
 13257  004C42  6F42               	movwf	66,b	;volatile
 13258                           
 13259                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 13260  004C44  0E00               	movlw	0
 13261  004C46  6F52               	movwf	82,b	;volatile
 13262                           
 13263                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 13264  004C48  0E00               	movlw	0
 13265  004C4A  6F62               	movwf	98,b	;volatile
 13266                           
 13267                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 13268  004C4C  0E00               	movlw	0
 13269  004C4E  6F72               	movwf	114,b	;volatile
 13270                           
 13271                           ; BSR set to: 58
 13272                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 13273  004C50  6943               	setf	67,b	;volatile
 13274                           
 13275                           ; BSR set to: 58
 13276                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 13277  004C52  6953               	setf	83,b	;volatile
 13278                           
 13279                           ; BSR set to: 58
 13280                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 13281  004C54  6963               	setf	99,b	;volatile
 13282                           
 13283                           ; BSR set to: 58
 13284                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 13285  004C56  6973               	setf	115,b	;volatile
 13286                           
 13287                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 13288  004C58  0E07               	movlw	7
 13289  004C5A  6F83               	movwf	131,b	;volatile
 13290                           
 13291                           ; BSR set to: 58
 13292                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 13293  004C5C  6993               	setf	147,b	;volatile
 13294                           
 13295                           ; BSR set to: 58
 13296                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 13297  004C5E  6944               	setf	68,b	;volatile
 13298                           
 13299                           ; BSR set to: 58
 13300                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 13301  004C60  6954               	setf	84,b	;volatile
 13302                           
 13303                           ; BSR set to: 58
 13304                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 13305  004C62  6964               	setf	100,b	;volatile
 13306                           
 13307                           ; BSR set to: 58
 13308                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 13309  004C64  6974               	setf	116,b	;volatile
 13310                           
 13311                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 13312  004C66  0E0F               	movlw	15
 13313  004C68  6F84               	movwf	132,b	;volatile
 13314                           
 13315                           ; BSR set to: 58
 13316                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 13317  004C6A  6994               	setf	148,b	;volatile
 13318                           
 13319                           ;mcc_generated_files/pin_manager.c: 144:     SPI1SCKPPS = 0x13;
 13320  004C6C  0E13               	movlw	19
 13321  004C6E  6FDE               	movwf	222,b	;volatile
 13322                           
 13323                           ;mcc_generated_files/pin_manager.c: 145:     RC3PPS = 0x1E;
 13324  004C70  0E1E               	movlw	30
 13325  004C72  6F13               	movwf	19,b	;volatile
 13326                           
 13327                           ;mcc_generated_files/pin_manager.c: 146:     RC5PPS = 0x1F;
 13328  004C74  0E1F               	movlw	31
 13329  004C76  6F15               	movwf	21,b	;volatile
 13330                           
 13331                           ;mcc_generated_files/pin_manager.c: 147:     RC6PPS = 0x13;
 13332  004C78  0E13               	movlw	19
 13333  004C7A  6F16               	movwf	22,b	;volatile
 13334                           
 13335                           ;mcc_generated_files/pin_manager.c: 148:     U1RXPPS = 0x17;
 13336  004C7C  0E17               	movlw	23
 13337  004C7E  6FE5               	movwf	229,b	;volatile
 13338                           
 13339                           ;mcc_generated_files/pin_manager.c: 149:     SPI1SDIPPS = 0x14;
 13340  004C80  0E14               	movlw	20
 13341  004C82  6FDF               	movwf	223,b	;volatile
 13342                           
 13343                           ; BSR set to: 58
 13344  004C84  0012               	return		;funcret
 13345  004C86                     __end_of_PIN_MANAGER_Initialize:
 13346                           	callstack 0
 13347                           
 13348 ;; *************** function _OSCILLATOR_Initialize *****************
 13349 ;; Defined at:
 13350 ;;		line 64 in file "mcc_generated_files/mcc.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;		None
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;		None
 13355 ;; Return value:  Size  Location     Type
 13356 ;;                  1    wreg      void 
 13357 ;; Registers used:
 13358 ;;		wreg, status,2
 13359 ;; Tracked objects:
 13360 ;;		On entry : 3F/3A
 13361 ;;		On exit  : 3F/39
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13368 ;;Total ram usage:        0 bytes
 13369 ;; Hardware stack levels used: 1
 13370 ;; Hardware stack levels required when called: 4
 13371 ;; This function calls:
 13372 ;;		Nothing
 13373 ;; This function is called by:
 13374 ;;		_SYSTEM_Initialize
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378                           	psect	text65
 13379  005C32                     __ptext65:
 13380                           	callstack 0
 13381  005C32                     _OSCILLATOR_Initialize:
 13382                           	callstack 25
 13383                           
 13384                           ; BSR set to: 58
 13385                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x20;
 13386                           
 13387                           ; BSR set to: 58
 13388                           ;incstack = 0
 13389  005C32  0E20               	movlw	32
 13390  005C34  0139               	movlb	57	; () banked
 13391  005C36  6FD9               	movwf	217,b	;volatile
 13392                           
 13393                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 13394  005C38  0E00               	movlw	0
 13395  005C3A  6FDB               	movwf	219,b	;volatile
 13396                           
 13397                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 13398  005C3C  0E00               	movlw	0
 13399  005C3E  6FDD               	movwf	221,b	;volatile
 13400                           
 13401                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x05;
 13402  005C40  0E05               	movlw	5
 13403  005C42  6FDF               	movwf	223,b	;volatile
 13404                           
 13405                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 13406  005C44  0E00               	movlw	0
 13407  005C46  6FDE               	movwf	222,b	;volatile
 13408  005C48                     l185:
 13409                           
 13410                           ; BSR set to: 57
 13411                           ;mcc_generated_files/mcc.c: 77:     while(PLLR == 0)
 13412  005C48  B1DC               	btfsc	220,0,b	;volatile
 13413  005C4A  0012               	return	
 13414  005C4C  D7FD               	goto	l185
 13415  005C4E                     __end_of_OSCILLATOR_Initialize:
 13416                           	callstack 0
 13417                           
 13418 ;; *************** function _INTERRUPT_Initialize *****************
 13419 ;; Defined at:
 13420 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;		None
 13423 ;; Auto vars:     Size  Location     Type
 13424 ;;  state           1   20[COMRAM] _Bool 
 13425 ;; Return value:  Size  Location     Type
 13426 ;;                  1    wreg      void 
 13427 ;; Registers used:
 13428 ;;		wreg, status,2
 13429 ;; Tracked objects:
 13430 ;;		On entry : 3F/0
 13431 ;;		On exit  : 3F/39
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13438 ;;Total ram usage:        1 bytes
 13439 ;; Hardware stack levels used: 1
 13440 ;; Hardware stack levels required when called: 4
 13441 ;; This function calls:
 13442 ;;		Nothing
 13443 ;; This function is called by:
 13444 ;;		_SYSTEM_Initialize
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           	psect	text66
 13449  00573C                     __ptext66:
 13450                           	callstack 0
 13451  00573C                     _INTERRUPT_Initialize:
 13452                           	callstack 25
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13456                           
 13457                           ; BSR set to: 57
 13458                           ;incstack = 0
 13459  00573C  8AD2               	bsf	210,5,c	;volatile
 13460                           
 13461                           ; BSR set to: 0
 13462                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13463  00573E  0E00               	movlw	0
 13464  005740  BED2               	btfsc	16338,7,c	;volatile
 13465  005742  0E01               	movlw	1
 13466  005744  6E15               	movwf	INTERRUPT_Initialize@state^0,c
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13470  005746  9ED2               	bcf	16338,7,c	;volatile
 13471                           
 13472                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13473  005748  0E55               	movlw	85
 13474  00574A  6ED4               	movwf	212,c	;volatile
 13475                           
 13476                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13477  00574C  0EAA               	movlw	170
 13478  00574E  6ED4               	movwf	212,c	;volatile
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13482  005750  90D4               	bcf	212,0,c	;volatile
 13483                           
 13484                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 13485  005752  0E00               	movlw	0
 13486  005754  6ED7               	movwf	215,c	;volatile
 13487                           
 13488                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 13489  005756  0E00               	movlw	0
 13490  005758  6ED6               	movwf	214,c	;volatile
 13491                           
 13492                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 13493  00575A  0E08               	movlw	8
 13494  00575C  6ED5               	movwf	213,c	;volatile
 13495                           
 13496                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13497  00575E  0E55               	movlw	85
 13498  005760  6ED4               	movwf	212,c	;volatile
 13499                           
 13500                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13501  005762  0EAA               	movlw	170
 13502  005764  6ED4               	movwf	212,c	;volatile
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13506  005766  80D4               	bsf	212,0,c	;volatile
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13510  005768  B015               	btfsc	INTERRUPT_Initialize@state^0,0,c
 13511  00576A  D002               	bra	u12145
 13512  00576C  9ED2               	bcf	16338,7,c	;volatile
 13513  00576E  D001               	bra	u12146
 13514  005770                     u12145:
 13515  005770  8ED2               	bsf	16338,7,c	;volatile
 13516  005772                     u12146:
 13517                           
 13518                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 13519  005772  0139               	movlb	57	; () banked
 13520  005774  8983               	bsf	131,4,b	;volatile
 13521                           
 13522                           ; BSR set to: 57
 13523                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 13524  005776  8783               	bsf	131,3,b	;volatile
 13525                           
 13526                           ; BSR set to: 57
 13527                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR9bits.TMR6IP = 1;
 13528  005778  8189               	bsf	137,0,b	;volatile
 13529                           
 13530                           ; BSR set to: 57
 13531                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR8bits.TMR5IP = 1;
 13532  00577A  8D88               	bsf	136,6,b	;volatile
 13533                           
 13534                           ; BSR set to: 57
 13535                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.ADIP = 1;
 13536  00577C  8581               	bsf	129,2,b	;volatile
 13537                           
 13538                           ; BSR set to: 57
 13539  00577E  0012               	return		;funcret
 13540  005780                     __end_of_INTERRUPT_Initialize:
 13541                           	callstack 0
 13542                           
 13543 ;; *************** function _DAC1_Initialize *****************
 13544 ;; Defined at:
 13545 ;;		line 58 in file "mcc_generated_files/dac1.c"
 13546 ;; Parameters:    Size  Location     Type
 13547 ;;		None
 13548 ;; Auto vars:     Size  Location     Type
 13549 ;;		None
 13550 ;; Return value:  Size  Location     Type
 13551 ;;                  1    wreg      void 
 13552 ;; Registers used:
 13553 ;;		wreg, status,2
 13554 ;; Tracked objects:
 13555 ;;		On entry : 3B/39
 13556 ;;		On exit  : 3F/3E
 13557 ;;		Unchanged: 0/0
 13558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13563 ;;Total ram usage:        0 bytes
 13564 ;; Hardware stack levels used: 1
 13565 ;; Hardware stack levels required when called: 4
 13566 ;; This function calls:
 13567 ;;		Nothing
 13568 ;; This function is called by:
 13569 ;;		_SYSTEM_Initialize
 13570 ;; This function uses a non-reentrant model
 13571 ;;
 13572                           
 13573                           	psect	text67
 13574  005D6A                     __ptext67:
 13575                           	callstack 0
 13576  005D6A                     _DAC1_Initialize:
 13577                           	callstack 25
 13578                           
 13579                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 13580                           
 13581                           ; BSR set to: 57
 13582                           ;incstack = 0
 13583  005D6A  0EA4               	movlw	164
 13584  005D6C  013E               	movlb	62	; () banked
 13585  005D6E  6F9E               	movwf	158,b	;volatile
 13586                           
 13587                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 13588  005D70  0E1F               	movlw	31
 13589  005D72  6F9C               	movwf	156,b	;volatile
 13590                           
 13591                           ; BSR set to: 62
 13592  005D74  0012               	return		;funcret
 13593  005D76                     __end_of_DAC1_Initialize:
 13594                           	callstack 0
 13595                           
 13596 ;; *************** function _ADCC_Initialize *****************
 13597 ;; Defined at:
 13598 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13599 ;; Parameters:    Size  Location     Type
 13600 ;;		None
 13601 ;; Auto vars:     Size  Location     Type
 13602 ;;		None
 13603 ;; Return value:  Size  Location     Type
 13604 ;;                  1    wreg      void 
 13605 ;; Registers used:
 13606 ;;		wreg, status,2, status,0, cstack
 13607 ;; Tracked objects:
 13608 ;;		On entry : 3B/39
 13609 ;;		On exit  : 3B/39
 13610 ;;		Unchanged: 0/0
 13611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13616 ;;Total ram usage:        0 bytes
 13617 ;; Hardware stack levels used: 1
 13618 ;; Hardware stack levels required when called: 5
 13619 ;; This function calls:
 13620 ;;		_ADCC_SetADIInterruptHandler
 13621 ;; This function is called by:
 13622 ;;		_SYSTEM_Initialize
 13623 ;; This function uses a non-reentrant model
 13624 ;;
 13625                           
 13626                           	psect	text68
 13627  005376                     __ptext68:
 13628                           	callstack 0
 13629  005376                     _ADCC_Initialize:
 13630                           	callstack 24
 13631                           
 13632                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13633                           
 13634                           ; BSR set to: 62
 13635                           ;incstack = 0
 13636  005376  0E00               	movlw	0
 13637  005378  013E               	movlb	62	; () banked
 13638  00537A  6FDE               	movwf	222,b	;volatile
 13639                           
 13640                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13641  00537C  0E00               	movlw	0
 13642  00537E  6FDF               	movwf	223,b	;volatile
 13643                           
 13644                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13645  005380  0E00               	movlw	0
 13646  005382  6FE0               	movwf	224,b	;volatile
 13647                           
 13648                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13649  005384  0E00               	movlw	0
 13650  005386  6FE1               	movwf	225,b	;volatile
 13651                           
 13652                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13653  005388  0E00               	movlw	0
 13654  00538A  6FE4               	movwf	228,b	;volatile
 13655                           
 13656                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13657  00538C  0E00               	movlw	0
 13658  00538E  6FE5               	movwf	229,b	;volatile
 13659                           
 13660                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13661  005390  0E00               	movlw	0
 13662  005392  6FEA               	movwf	234,b	;volatile
 13663                           
 13664                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13665  005394  0E00               	movlw	0
 13666  005396  6FEC               	movwf	236,b	;volatile
 13667                           
 13668                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13669  005398  0E00               	movlw	0
 13670  00539A  6FF1               	movwf	241,b	;volatile
 13671                           
 13672                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 13673  00539C  0E10               	movlw	16
 13674  00539E  6FF3               	movwf	243,b	;volatile
 13675                           
 13676                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13677  0053A0  0E00               	movlw	0
 13678  0053A2  6FF4               	movwf	244,b	;volatile
 13679                           
 13680                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13681  0053A4  0E00               	movlw	0
 13682  0053A6  6FF5               	movwf	245,b	;volatile
 13683                           
 13684                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13685  0053A8  0E00               	movlw	0
 13686  0053AA  6FF6               	movwf	246,b	;volatile
 13687                           
 13688                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13689  0053AC  0E00               	movlw	0
 13690  0053AE  6FF7               	movwf	247,b	;volatile
 13691                           
 13692                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13693  0053B0  0E00               	movlw	0
 13694  0053B2  6FF9               	movwf	249,b	;volatile
 13695                           
 13696                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13697  0053B4  0E00               	movlw	0
 13698  0053B6  6FFA               	movwf	250,b	;volatile
 13699                           
 13700                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 13701  0053B8  0E00               	movlw	0
 13702  0053BA  6FFB               	movwf	251,b	;volatile
 13703                           
 13704                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13705  0053BC  0E00               	movlw	0
 13706  0053BE  6FFC               	movwf	252,b	;volatile
 13707                           
 13708                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13709  0053C0  0E02               	movlw	2
 13710  0053C2  6FFD               	movwf	253,b	;volatile
 13711                           
 13712                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 13713  0053C4  0E07               	movlw	7
 13714  0053C6  6FFE               	movwf	254,b	;volatile
 13715                           
 13716                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13717  0053C8  0E00               	movlw	0
 13718  0053CA  6FFF               	movwf	255,b	;volatile
 13719                           
 13720                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 13721  0053CC  0E94               	movlw	148
 13722  0053CE  6FF8               	movwf	248,b	;volatile
 13723                           
 13724                           ; BSR set to: 62
 13725                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 13726  0053D0  0139               	movlb	57	; () banked
 13727  0053D2  95A1               	bcf	161,2,b	;volatile
 13728                           
 13729                           ; BSR set to: 57
 13730                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 13731  0053D4  8591               	bsf	145,2,b	;volatile
 13732                           
 13733                           ; BSR set to: 57
 13734                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 13735  0053D6  0E9A               	movlw	low _ADCC_DefaultInterruptHandler
 13736  0053D8  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
 13737  0053DA  0E5D               	movlw	high _ADCC_DefaultInterruptHandler
 13738  0053DC  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
 13739  0053DE  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 13740  0053E0  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
 13741  0053E2  ECAE  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 13742  0053E6  0012               	return		;funcret
 13743  0053E8                     __end_of_ADCC_Initialize:
 13744                           	callstack 0
 13745                           
 13746 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 13747 ;; Defined at:
 13748 ;;		line 316 in file "mcc_generated_files/adcc.c"
 13749 ;; Parameters:    Size  Location     Type
 13750 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 13751 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 13752 ;; Auto vars:     Size  Location     Type
 13753 ;;		None
 13754 ;; Return value:  Size  Location     Type
 13755 ;;                  1    wreg      void 
 13756 ;; Registers used:
 13757 ;;		wreg, status,2, status,0
 13758 ;; Tracked objects:
 13759 ;;		On entry : 3B/3D
 13760 ;;		On exit  : 3B/39
 13761 ;;		Unchanged: 3A/0
 13762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13763 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13766 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13767 ;;Total ram usage:        3 bytes
 13768 ;; Hardware stack levels used: 1
 13769 ;; Hardware stack levels required when called: 4
 13770 ;; This function calls:
 13771 ;;		Nothing
 13772 ;; This function is called by:
 13773 ;;		_ADCC_Initialize
 13774 ;;		_main
 13775 ;; This function uses a non-reentrant model
 13776 ;;
 13777                           
 13778                           	psect	text69
 13779  005D5C                     __ptext69:
 13780                           	callstack 0
 13781  005D5C                     _ADCC_SetADIInterruptHandler:
 13782                           	callstack 24
 13783                           
 13784                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 13785                           
 13786                           ;incstack = 0
 13787  005D5C  C015  F0EC         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 13788  005D60  C016  F0ED         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 13789  005D64  C017  F0EE         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 13790  005D68  0012               	return		;funcret
 13791  005D6A                     __end_of_ADCC_SetADIInterruptHandler:
 13792                           	callstack 0
 13793                           
 13794 ;; *************** function _DAC1_SetOutput *****************
 13795 ;; Defined at:
 13796 ;;		line 66 in file "mcc_generated_files/dac1.c"
 13797 ;; Parameters:    Size  Location     Type
 13798 ;;  inputData       1    wreg     unsigned char 
 13799 ;; Auto vars:     Size  Location     Type
 13800 ;;  inputData       1   20[COMRAM] unsigned char 
 13801 ;; Return value:  Size  Location     Type
 13802 ;;                  1    wreg      void 
 13803 ;; Registers used:
 13804 ;;		wreg
 13805 ;; Tracked objects:
 13806 ;;		On entry : 0/3D
 13807 ;;		On exit  : 0/0
 13808 ;;		Unchanged: 0/0
 13809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13814 ;;Total ram usage:        1 bytes
 13815 ;; Hardware stack levels used: 1
 13816 ;; Hardware stack levels required when called: 4
 13817 ;; This function calls:
 13818 ;;		Nothing
 13819 ;; This function is called by:
 13820 ;;		_main
 13821 ;; This function uses a non-reentrant model
 13822 ;;
 13823                           
 13824                           	psect	text70
 13825  005D80                     __ptext70:
 13826                           	callstack 0
 13827  005D80                     _DAC1_SetOutput:
 13828                           	callstack 26
 13829                           
 13830                           ;incstack = 0
 13831                           ;DAC1_SetOutput@inputData stored from wreg
 13832  005D80  6E15               	movwf	DAC1_SetOutput@inputData^0,c
 13833                           
 13834                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 13835  005D82  0060  F057  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 13836  005D88  0012               	return		;funcret
 13837  005D8A                     __end_of_DAC1_SetOutput:
 13838                           	callstack 0
 13839                           
 13840 ;; *************** function _DAC1_GetOutput *****************
 13841 ;; Defined at:
 13842 ;;		line 71 in file "mcc_generated_files/dac1.c"
 13843 ;; Parameters:    Size  Location     Type
 13844 ;;		None
 13845 ;; Auto vars:     Size  Location     Type
 13846 ;;		None
 13847 ;; Return value:  Size  Location     Type
 13848 ;;                  1    wreg      unsigned char 
 13849 ;; Registers used:
 13850 ;;		wreg, status,2
 13851 ;; Tracked objects:
 13852 ;;		On entry : 3F/2
 13853 ;;		On exit  : 3F/3E
 13854 ;;		Unchanged: 0/0
 13855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13860 ;;Total ram usage:        0 bytes
 13861 ;; Hardware stack levels used: 1
 13862 ;; Hardware stack levels required when called: 4
 13863 ;; This function calls:
 13864 ;;		Nothing
 13865 ;; This function is called by:
 13866 ;;		_main
 13867 ;; This function uses a non-reentrant model
 13868 ;;
 13869                           
 13870                           	psect	text71
 13871  005D8A                     __ptext71:
 13872                           	callstack 0
 13873  005D8A                     _DAC1_GetOutput:
 13874                           	callstack 26
 13875                           
 13876                           ; BSR set to: 2
 13877                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 13878                           
 13879                           ;incstack = 0
 13880  005D8A  013E               	movlb	62	; () banked
 13881  005D8C  519C               	movf	156,w,b	;volatile
 13882                           
 13883                           ; BSR set to: 62
 13884  005D8E  0012               	return		;funcret
 13885  005D90                     __end_of_DAC1_GetOutput:
 13886                           	callstack 0
 13887                           
 13888 ;; *************** function _ADCC_ISR *****************
 13889 ;; Defined at:
 13890 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;		None
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;		None
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      void 
 13897 ;; Registers used:
 13898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13908 ;;Total ram usage:        2 bytes
 13909 ;; Hardware stack levels used: 1
 13910 ;; Hardware stack levels required when called: 2
 13911 ;; This function calls:
 13912 ;;		Absolute function
 13913 ;;		_ADCC_DefaultInterruptHandler
 13914 ;;		_Adc_Isr
 13915 ;; This function is called by:
 13916 ;;		Interrupt level 2
 13917 ;; This function uses a non-reentrant model
 13918 ;;
 13919                           
 13920                           	psect	text72
 13921  005780                     __ptext72:
 13922                           	callstack 0
 13923  005780                     _ADCC_ISR:
 13924                           	callstack 17
 13925                           
 13926                           ; BSR set to: 62
 13927                           ;incstack = 0
 13928  005780  006F FFE8  F006    	movff	pclath,??_ADCC_ISR
 13929  005786  006F FFEC  F007    	movff	pclatu,??_ADCC_ISR+1
 13930                           
 13931                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13932  00578C  0139               	movlb	57	; () banked
 13933  00578E  95A1               	bcf	161,2,b	;volatile
 13934                           
 13935                           ; BSR set to: 57
 13936                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13937  005790  0100               	movlb	0	; () banked
 13938  005792  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 13939  005794  11ED               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 13940  005796  11EE               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 13941  005798  B4D8               	btfsc	status,2,c
 13942  00579A  D00C               	goto	i2u630_49
 13943                           
 13944                           ; BSR set to: 0
 13945                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13946  00579C  D801               	call	i2u630_48
 13947  00579E  D00A               	goto	i2u630_49
 13948  0057A0                     i2u630_48:
 13949  0057A0  0005               	push	
 13950  0057A2  6EFA               	movwf	pclath,c
 13951  0057A4  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 13952  0057A6  6EFD               	movwf	tosl,c
 13953  0057A8  51ED               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 13954  0057AA  6EFE               	movwf	tosh,c
 13955  0057AC  51EE               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 13956  0057AE  6EFF               	movwf	tosu,c
 13957  0057B0  50FA               	movf	pclath,w,c
 13958  0057B2  0012               	return		;indir
 13959  0057B4                     i2u630_49:
 13960  0057B4  0060  F01F  FFFB   	movff	??_ADCC_ISR+1,pclatu
 13961  0057BA  0060  F01B  FFFA   	movff	??_ADCC_ISR,pclath
 13962  0057C0  0011               	retfie		f
 13963  0057C2                     __end_of_ADCC_ISR:
 13964                           	callstack 0
 13965                           
 13966 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13967 ;; Defined at:
 13968 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13969 ;; Parameters:    Size  Location     Type
 13970 ;;		None
 13971 ;; Auto vars:     Size  Location     Type
 13972 ;;		None
 13973 ;; Return value:  Size  Location     Type
 13974 ;;                  1    wreg      void 
 13975 ;; Registers used:
 13976 ;;		None
 13977 ;; Tracked objects:
 13978 ;;		On entry : 3F/0
 13979 ;;		On exit  : 3F/0
 13980 ;;		Unchanged: 3F/0
 13981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13986 ;;Total ram usage:        0 bytes
 13987 ;; Hardware stack levels used: 1
 13988 ;; This function calls:
 13989 ;;		Nothing
 13990 ;; This function is called by:
 13991 ;;		_ADCC_Initialize
 13992 ;;		_ADCC_ISR
 13993 ;; This function uses a non-reentrant model
 13994 ;;
 13995                           
 13996                           	psect	text73
 13997  005D9A                     __ptext73:
 13998                           	callstack 0
 13999  005D9A                     _ADCC_DefaultInterruptHandler:
 14000                           	callstack 18
 14001                           
 14002                           ; BSR set to: 0
 14003                           
 14004                           ;incstack = 0
 14005  005D9A  0012               	return		;funcret
 14006  005D9C                     __end_of_ADCC_DefaultInterruptHandler:
 14007                           	callstack 0
 14008                           
 14009 ;; *************** function _Adc_Isr *****************
 14010 ;; Defined at:
 14011 ;;		line 83 in file "main.c"
 14012 ;; Parameters:    Size  Location     Type
 14013 ;;		None
 14014 ;; Auto vars:     Size  Location     Type
 14015 ;;		None
 14016 ;; Return value:  Size  Location     Type
 14017 ;;                  1    wreg      void 
 14018 ;; Registers used:
 14019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14020 ;; Tracked objects:
 14021 ;;		On entry : 3F/0
 14022 ;;		On exit  : 3F/0
 14023 ;;		Unchanged: 0/0
 14024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14029 ;;Total ram usage:        1 bytes
 14030 ;; Hardware stack levels used: 1
 14031 ;; Hardware stack levels required when called: 1
 14032 ;; This function calls:
 14033 ;;		_ADCC_GetConversionResult
 14034 ;; This function is called by:
 14035 ;;		_main
 14036 ;;		_ADCC_ISR
 14037 ;; This function uses a non-reentrant model
 14038 ;;
 14039                           
 14040                           	psect	text74
 14041  00596E                     __ptext74:
 14042                           	callstack 0
 14043  00596E                     _Adc_Isr:
 14044                           	callstack 17
 14045                           
 14046                           ; BSR set to: 0
 14047                           ;main.c: 85:  ana[adc_chan] = ADCC_GetConversionResult();
 14048                           
 14049                           ; BSR set to: 0
 14050                           ;incstack = 0
 14051  00596E  EC64  F02E         	call	_ADCC_GetConversionResult	;wreg free
 14052  005972  5044               	movf	_adc_chan^0,w,c
 14053  005974  0D02               	mullw	2
 14054  005976  50F3               	movf	243,w,c
 14055  005978  0F39               	addlw	low _ana
 14056  00597A  6ED9               	movwf	fsr2l,c
 14057  00597C  6ADA               	clrf	fsr2h,c
 14058  00597E  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 14059  005984  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 14060                           
 14061                           ; BSR set to: 62
 14062                           ;main.c: 86:  if (adc_chan++ >= 2) {
 14063  00598A  2A44               	incf	_adc_chan^0,f,c	;volatile
 14064  00598C  0444               	decf	_adc_chan^0,w,c	;volatile
 14065  00598E  6E05               	movwf	??_Adc_Isr^0,c
 14066  005990  0E01               	movlw	1
 14067  005992  6405               	cpfsgt	??_Adc_Isr^0,c
 14068  005994  D002               	goto	i2l6240
 14069                           
 14070                           ; BSR set to: 62
 14071                           ;main.c: 87:   adc_chan = 0;
 14072  005996  0E00               	movlw	0
 14073  005998  6E44               	movwf	_adc_chan^0,c	;volatile
 14074  00599A                     i2l6240:
 14075                           
 14076                           ; BSR set to: 62
 14077                           ;main.c: 89:  ADPCH = adc_chan;
 14078  00599A  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
 14079                           
 14080                           ;main.c: 93:  adc_tick = 1;
 14081  0059A0  0E01               	movlw	1
 14082  0059A2  0100               	movlb	0	; () banked
 14083  0059A4  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
 14084                           
 14085                           ; BSR set to: 0
 14086  0059A6  0012               	return		;funcret
 14087  0059A8                     __end_of_Adc_Isr:
 14088                           	callstack 0
 14089                           
 14090 ;; *************** function _ADCC_GetConversionResult *****************
 14091 ;; Defined at:
 14092 ;;		line 139 in file "mcc_generated_files/adcc.c"
 14093 ;; Parameters:    Size  Location     Type
 14094 ;;		None
 14095 ;; Auto vars:     Size  Location     Type
 14096 ;;		None
 14097 ;; Return value:  Size  Location     Type
 14098 ;;                  2    0[COMRAM] unsigned short 
 14099 ;; Registers used:
 14100 ;;		wreg, status,2, status,0
 14101 ;; Tracked objects:
 14102 ;;		On entry : 3F/0
 14103 ;;		On exit  : 3F/3E
 14104 ;;		Unchanged: 0/0
 14105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14110 ;;Total ram usage:        4 bytes
 14111 ;; Hardware stack levels used: 1
 14112 ;; This function calls:
 14113 ;;		Nothing
 14114 ;; This function is called by:
 14115 ;;		_Adc_Isr
 14116 ;; This function uses a non-reentrant model
 14117 ;;
 14118                           
 14119                           	psect	text75
 14120  005CC8                     __ptext75:
 14121                           	callstack 0
 14122  005CC8                     _ADCC_GetConversionResult:
 14123                           	callstack 17
 14124                           
 14125                           ; BSR set to: 0
 14126                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14127                           
 14128                           ; BSR set to: 0
 14129                           ;incstack = 0
 14130  005CC8  013E               	movlb	62	; () banked
 14131  005CCA  51F0               	movf	240,w,b	;volatile
 14132  005CCC  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 14133  005CCE  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 14134  005CD0  51EF               	movf	239,w,b	;volatile
 14135  005CD2  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 14136  005CD4  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 14137  005CD6  0E00               	movlw	0
 14138  005CD8  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 14139  005CDA  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 14140                           
 14141                           ; BSR set to: 62
 14142  005CDC  0012               	return		;funcret
 14143  005CDE                     __end_of_ADCC_GetConversionResult:
 14144                           	callstack 0
 14145                           
 14146 ;; *************** function _TMR6_ISR *****************
 14147 ;; Defined at:
 14148 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 14149 ;; Parameters:    Size  Location     Type
 14150 ;;		None
 14151 ;; Auto vars:     Size  Location     Type
 14152 ;;		None
 14153 ;; Return value:  Size  Location     Type
 14154 ;;                  1    wreg      void 
 14155 ;; Registers used:
 14156 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14166 ;;Total ram usage:        2 bytes
 14167 ;; Hardware stack levels used: 1
 14168 ;; Hardware stack levels required when called: 2
 14169 ;; This function calls:
 14170 ;;		_TMR6_CallBack
 14171 ;; This function is called by:
 14172 ;;		Interrupt level 2
 14173 ;; This function uses a non-reentrant model
 14174 ;;
 14175                           
 14176                           	psect	text76
 14177  0059A8                     __ptext76:
 14178                           	callstack 0
 14179  0059A8                     _TMR6_ISR:
 14180                           	callstack 17
 14181                           
 14182                           ; BSR set to: 62
 14183                           ;incstack = 0
 14184  0059A8  006F FFE8  F009    	movff	pclath,??_TMR6_ISR
 14185  0059AE  006F FFEC  F00A    	movff	pclatu,??_TMR6_ISR+1
 14186                           
 14187                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 14188  0059B4  0139               	movlb	57	; () banked
 14189  0059B6  91A9               	bcf	169,0,b	;volatile
 14190                           
 14191                           ; BSR set to: 57
 14192                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 14193  0059B8  4A41               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 14194  0059BA  2A42               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 14195  0059BC  5042               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 14196  0059BE  E104               	bnz	i2u631_40
 14197  0059C0  0E17               	movlw	23
 14198  0059C2  5C41               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 14199  0059C4  A0D8               	btfss	status,0,c
 14200  0059C6  D006               	goto	i2l454
 14201  0059C8                     i2u631_40:
 14202                           
 14203                           ; BSR set to: 57
 14204                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 14205  0059C8  ECB3  F02D         	call	_TMR6_CallBack	;wreg free
 14206                           
 14207                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 14208  0059CC  0E00               	movlw	0
 14209  0059CE  6E42               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 14210  0059D0  0E00               	movlw	0
 14211  0059D2  6E41               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 14212  0059D4                     i2l454:
 14213  0059D4  0060  F02B  FFFB   	movff	??_TMR6_ISR+1,pclatu
 14214  0059DA  0060  F027  FFFA   	movff	??_TMR6_ISR,pclath
 14215  0059E0  0011               	retfie		f
 14216  0059E2                     __end_of_TMR6_ISR:
 14217                           	callstack 0
 14218                           
 14219 ;; *************** function _TMR6_CallBack *****************
 14220 ;; Defined at:
 14221 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;		None
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;		None
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  1    wreg      void 
 14228 ;; Registers used:
 14229 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14230 ;; Tracked objects:
 14231 ;;		On entry : 3F/39
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14239 ;;Total ram usage:        0 bytes
 14240 ;; Hardware stack levels used: 1
 14241 ;; Hardware stack levels required when called: 1
 14242 ;; This function calls:
 14243 ;;		Absolute function
 14244 ;;		_Led_Blink
 14245 ;;		_TMR6_DefaultInterruptHandler
 14246 ;; This function is called by:
 14247 ;;		_TMR6_ISR
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           	psect	text77
 14252  005B66                     __ptext77:
 14253                           	callstack 0
 14254  005B66                     _TMR6_CallBack:
 14255                           	callstack 17
 14256                           
 14257                           ; BSR set to: 57
 14258                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 14259                           
 14260                           ;incstack = 0
 14261  005B66  0100               	movlb	0	; () banked
 14262  005B68  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14263  005B6A  11EA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14264  005B6C  11EB               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14265  005B6E  B4D8               	btfsc	status,2,c
 14266  005B70  0012               	return	
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 14270  005B72  D801               	call	i2u603_48
 14271  005B74  0012               	return	
 14272  005B76                     i2u603_48:
 14273  005B76  0005               	push	
 14274  005B78  6EFA               	movwf	pclath,c
 14275  005B7A  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14276  005B7C  6EFD               	movwf	tosl,c
 14277  005B7E  51EA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14278  005B80  6EFE               	movwf	tosh,c
 14279  005B82  51EB               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14280  005B84  6EFF               	movwf	tosu,c
 14281  005B86  50FA               	movf	pclath,w,c
 14282  005B88  0012               	return		;indir
 14283  005B8A                     __end_of_TMR6_CallBack:
 14284                           	callstack 0
 14285                           
 14286 ;; *************** function _Led_Blink *****************
 14287 ;; Defined at:
 14288 ;;		line 67 in file "main.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;		None
 14291 ;; Auto vars:     Size  Location     Type
 14292 ;;		None
 14293 ;; Return value:  Size  Location     Type
 14294 ;;                  1    wreg      void 
 14295 ;; Registers used:
 14296 ;;		wreg, status,2, status,0
 14297 ;; Tracked objects:
 14298 ;;		On entry : 3F/0
 14299 ;;		On exit  : 3F/0
 14300 ;;		Unchanged: 0/0
 14301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14305 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;Total ram usage:        1 bytes
 14307 ;; Hardware stack levels used: 1
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		_main
 14312 ;;		_TMR6_CallBack
 14313 ;; This function uses a non-reentrant model
 14314 ;;
 14315                           
 14316                           	psect	text78
 14317  005C14                     __ptext78:
 14318                           	callstack 0
 14319  005C14                     _Led_Blink:
 14320                           	callstack 17
 14321                           
 14322                           ; BSR set to: 0
 14323                           
 14324                           ; BSR set to: 0
 14325                           
 14326                           ;incstack = 0
 14327                           ;main.c: 69:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 14328  005C14  A0BE               	btfss	190,0,c	;volatile
 14329  005C16  D002               	goto	i2u594_40
 14330  005C18  0E01               	movlw	1
 14331  005C1A  D001               	goto	i2u594_46
 14332  005C1C                     i2u594_40:
 14333  005C1C  0E00               	movlw	0
 14334  005C1E                     i2u594_46:
 14335  005C1E  0AFF               	xorlw	255
 14336  005C20  6E08               	movwf	??_Led_Blink^0,c
 14337  005C22  50BE               	movf	190,w,c	;volatile
 14338  005C24  1808               	xorwf	??_Led_Blink^0,w,c
 14339  005C26  0BFE               	andlw	-2
 14340  005C28  1808               	xorwf	??_Led_Blink^0,w,c
 14341  005C2A  6EBE               	movwf	190,c	;volatile
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;main.c: 73:  disp_tick = 1;
 14345  005C2C  0E01               	movlw	1
 14346  005C2E  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
 14347                           
 14348                           ; BSR set to: 0
 14349  005C30  0012               	return		;funcret
 14350  005C32                     __end_of_Led_Blink:
 14351                           	callstack 0
 14352                           
 14353 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14354 ;; Defined at:
 14355 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 14356 ;; Parameters:    Size  Location     Type
 14357 ;;		None
 14358 ;; Auto vars:     Size  Location     Type
 14359 ;;		None
 14360 ;; Return value:  Size  Location     Type
 14361 ;;                  1    wreg      void 
 14362 ;; Registers used:
 14363 ;;		None
 14364 ;; Tracked objects:
 14365 ;;		On entry : 3F/0
 14366 ;;		On exit  : 3F/0
 14367 ;;		Unchanged: 3F/0
 14368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14373 ;;Total ram usage:        0 bytes
 14374 ;; Hardware stack levels used: 1
 14375 ;; This function calls:
 14376 ;;		Nothing
 14377 ;; This function is called by:
 14378 ;;		_TMR6_Initialize
 14379 ;;		_TMR6_CallBack
 14380 ;; This function uses a non-reentrant model
 14381 ;;
 14382                           
 14383                           	psect	text79
 14384  005D9C                     __ptext79:
 14385                           	callstack 0
 14386  005D9C                     _TMR6_DefaultInterruptHandler:
 14387                           	callstack 17
 14388                           
 14389                           ; BSR set to: 0
 14390                           
 14391                           ; BSR set to: 0
 14392                           ;incstack = 0
 14393  005D9C  0012               	return		;funcret
 14394  005D9E                     __end_of_TMR6_DefaultInterruptHandler:
 14395                           	callstack 0
 14396                           
 14397 ;; *************** function _Default_ISR *****************
 14398 ;; Defined at:
 14399 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
 14400 ;; Parameters:    Size  Location     Type
 14401 ;;		None
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;		None
 14404 ;; Return value:  Size  Location     Type
 14405 ;;                  1    wreg      void 
 14406 ;; Registers used:
 14407 ;;		None
 14408 ;; Tracked objects:
 14409 ;;		On entry : 0/0
 14410 ;;		On exit  : 0/0
 14411 ;;		Unchanged: 0/0
 14412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14417 ;;Total ram usage:        0 bytes
 14418 ;; Hardware stack levels used: 1
 14419 ;; This function calls:
 14420 ;;		Nothing
 14421 ;; This function is called by:
 14422 ;;		Interrupt level 2
 14423 ;; This function uses a non-reentrant model
 14424 ;;
 14425                           
 14426                           	psect	text80
 14427  005DA0                     __ptext80:
 14428                           	callstack 0
 14429  005DA0                     _Default_ISR:
 14430                           	callstack 19
 14431                           
 14432                           ; BSR set to: 0
 14433                           ;incstack = 0
 14434  005DA0  0011               	retfie		f
 14435  005DA2                     __end_of_Default_ISR:
 14436                           	callstack 0
 14437                           
 14438 ;; *************** function _UART1_tx_vect_isr *****************
 14439 ;; Defined at:
 14440 ;;		line 235 in file "mcc_generated_files/uart1.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;		None
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;		None
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      void 
 14447 ;; Registers used:
 14448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14456 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14458 ;;Total ram usage:        2 bytes
 14459 ;; Hardware stack levels used: 1
 14460 ;; Hardware stack levels required when called: 1
 14461 ;; This function calls:
 14462 ;;		Absolute function
 14463 ;;		_UART1_Transmit_ISR
 14464 ;; This function is called by:
 14465 ;;		Interrupt level 2
 14466 ;; This function uses a non-reentrant model
 14467 ;;
 14468                           
 14469                           	psect	text81
 14470  005840                     __ptext81:
 14471                           	callstack 0
 14472  005840                     _UART1_tx_vect_isr:
 14473                           	callstack 18
 14474                           
 14475                           ;incstack = 0
 14476  005840  006F FFE8  F00B    	movff	pclath,??_UART1_tx_vect_isr
 14477  005846  006F FFEC  F00C    	movff	pclatu,??_UART1_tx_vect_isr+1
 14478                           
 14479                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 14480  00584C  0100               	movlb	0	; () banked
 14481  00584E  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14482  005850  11F0               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14483  005852  11F1               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14484  005854  B4D8               	btfsc	status,2,c
 14485  005856  D00C               	goto	i2u633_49
 14486                           
 14487                           ; BSR set to: 0
 14488                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 14489  005858  D801               	call	i2u633_48
 14490  00585A  D00A               	goto	i2u633_49
 14491  00585C                     i2u633_48:
 14492  00585C  0005               	push	
 14493  00585E  6EFA               	movwf	pclath,c
 14494  005860  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14495  005862  6EFD               	movwf	tosl,c
 14496  005864  51F0               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14497  005866  6EFE               	movwf	tosh,c
 14498  005868  51F1               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14499  00586A  6EFF               	movwf	tosu,c
 14500  00586C  50FA               	movf	pclath,w,c
 14501  00586E  0012               	return		;indir
 14502  005870                     i2u633_49:
 14503  005870  0060  F033  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 14504  005876  0060  F02F  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 14505  00587C  0011               	retfie		f
 14506  00587E                     __end_of_UART1_tx_vect_isr:
 14507                           	callstack 0
 14508                           
 14509 ;; *************** function _UART1_Transmit_ISR *****************
 14510 ;; Defined at:
 14511 ;;		line 253 in file "mcc_generated_files/uart1.c"
 14512 ;; Parameters:    Size  Location     Type
 14513 ;;		None
 14514 ;; Auto vars:     Size  Location     Type
 14515 ;;		None
 14516 ;; Return value:  Size  Location     Type
 14517 ;;                  1    wreg      void 
 14518 ;; Registers used:
 14519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14520 ;; Tracked objects:
 14521 ;;		On entry : 3F/0
 14522 ;;		On exit  : 3B/39
 14523 ;;		Unchanged: 0/0
 14524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14529 ;;Total ram usage:        0 bytes
 14530 ;; Hardware stack levels used: 1
 14531 ;; This function calls:
 14532 ;;		Nothing
 14533 ;; This function is called by:
 14534 ;;		_UART1_Initialize
 14535 ;;		_UART1_tx_vect_isr
 14536 ;; This function uses a non-reentrant model
 14537 ;;
 14538                           
 14539                           	psect	text82
 14540  005A70                     __ptext82:
 14541                           	callstack 0
 14542  005A70                     _UART1_Transmit_ISR:
 14543                           	callstack 18
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 14547                           
 14548                           ;incstack = 0
 14549  005A70  0E40               	movlw	64
 14550  005A72  6049               	cpfslt	_uart1TxBufferRemaining^0,c
 14551  005A74  D011               	goto	i2l640
 14552                           
 14553                           ; BSR set to: 0
 14554                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 14555  005A76  0E40               	movlw	low _uart1TxBuffer
 14556  005A78  244A               	addwf	_uart1TxTail^0,w,c	;volatile
 14557  005A7A  6ED9               	movwf	fsr2l,c
 14558  005A7C  6ADA               	clrf	fsr2h,c
 14559  005A7E  0E01               	movlw	high _uart1TxBuffer
 14560  005A80  22DA               	addwfc	fsr2h,f,c
 14561  005A82  50DF               	movf	indf2,w,c
 14562  005A84  013D               	movlb	61	; () banked
 14563  005A86  6FEA               	movwf	234,b	;volatile
 14564                           
 14565                           ; BSR set to: 61
 14566  005A88  2A4A               	incf	_uart1TxTail^0,f,c	;volatile
 14567                           
 14568                           ; BSR set to: 61
 14569                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 14570  005A8A  0E3F               	movlw	63
 14571  005A8C  644A               	cpfsgt	_uart1TxTail^0,c
 14572  005A8E  D002               	goto	i2l6208
 14573                           
 14574                           ; BSR set to: 61
 14575                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 14576  005A90  0E00               	movlw	0
 14577  005A92  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 14578  005A94                     i2l6208:
 14579                           
 14580                           ; BSR set to: 61
 14581                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 14582  005A94  2A49               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 14583                           
 14584                           ;mcc_generated_files/uart1.c: 264:     }
 14585  005A96  0012               	return	
 14586  005A98                     i2l640:
 14587                           
 14588                           ; BSR set to: 0
 14589                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 14590  005A98  0139               	movlb	57	; () banked
 14591  005A9A  9993               	bcf	147,4,b	;volatile
 14592  005A9C  0012               	return		;funcret
 14593  005A9E                     __end_of_UART1_Transmit_ISR:
 14594                           	callstack 0
 14595                           
 14596 ;; *************** function _UART1_rx_vect_isr *****************
 14597 ;; Defined at:
 14598 ;;		line 243 in file "mcc_generated_files/uart1.c"
 14599 ;; Parameters:    Size  Location     Type
 14600 ;;		None
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;		None
 14603 ;; Return value:  Size  Location     Type
 14604 ;;                  1    wreg      void 
 14605 ;; Registers used:
 14606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14607 ;; Tracked objects:
 14608 ;;		On entry : 0/0
 14609 ;;		On exit  : 0/0
 14610 ;;		Unchanged: 0/0
 14611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14615 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14616 ;;Total ram usage:        2 bytes
 14617 ;; Hardware stack levels used: 1
 14618 ;; Hardware stack levels required when called: 3
 14619 ;; This function calls:
 14620 ;;		Absolute function
 14621 ;;		_UART1_Receive_ISR
 14622 ;; This function is called by:
 14623 ;;		Interrupt level 2
 14624 ;; This function uses a non-reentrant model
 14625 ;;
 14626                           
 14627                           	psect	text83
 14628  005880                     __ptext83:
 14629                           	callstack 0
 14630  005880                     _UART1_rx_vect_isr:
 14631                           	callstack 16
 14632                           
 14633                           ;incstack = 0
 14634  005880  006F FFE8  F00D    	movff	pclath,??_UART1_rx_vect_isr
 14635  005886  006F FFEC  F00E    	movff	pclatu,??_UART1_rx_vect_isr+1
 14636                           
 14637                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 14638  00588C  0100               	movlb	0	; () banked
 14639  00588E  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14640  005890  11F3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14641  005892  11F4               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14642  005894  B4D8               	btfsc	status,2,c
 14643  005896  D00C               	goto	i2u635_49
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 14647  005898  D801               	call	i2u635_48
 14648  00589A  D00A               	goto	i2u635_49
 14649  00589C                     i2u635_48:
 14650  00589C  0005               	push	
 14651  00589E  6EFA               	movwf	pclath,c
 14652  0058A0  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14653  0058A2  6EFD               	movwf	tosl,c
 14654  0058A4  51F3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14655  0058A6  6EFE               	movwf	tosh,c
 14656  0058A8  51F4               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14657  0058AA  6EFF               	movwf	tosu,c
 14658  0058AC  50FA               	movf	pclath,w,c
 14659  0058AE  0012               	return		;indir
 14660  0058B0                     i2u635_49:
 14661  0058B0  0060  F03B  FFFB   	movff	??_UART1_rx_vect_isr+1,pclatu
 14662  0058B6  0060  F037  FFFA   	movff	??_UART1_rx_vect_isr,pclath
 14663  0058BC  0011               	retfie		f
 14664  0058BE                     __end_of_UART1_rx_vect_isr:
 14665                           	callstack 0
 14666                           
 14667 ;; *************** function _UART1_Receive_ISR *****************
 14668 ;; Defined at:
 14669 ;;		line 273 in file "mcc_generated_files/uart1.c"
 14670 ;; Parameters:    Size  Location     Type
 14671 ;;		None
 14672 ;; Auto vars:     Size  Location     Type
 14673 ;;		None
 14674 ;; Return value:  Size  Location     Type
 14675 ;;                  1    wreg      void 
 14676 ;; Registers used:
 14677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14678 ;; Tracked objects:
 14679 ;;		On entry : 3F/0
 14680 ;;		On exit  : 0/0
 14681 ;;		Unchanged: 0/0
 14682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14687 ;;Total ram usage:        0 bytes
 14688 ;; Hardware stack levels used: 1
 14689 ;; Hardware stack levels required when called: 2
 14690 ;; This function calls:
 14691 ;;		Absolute function
 14692 ;;		_UART1_DefaultErrorHandler
 14693 ;;		_UART1_DefaultFramingErrorHandler
 14694 ;;		_UART1_DefaultOverrunErrorHandler
 14695 ;;		_UART1_RxDataHandler
 14696 ;; This function is called by:
 14697 ;;		_UART1_Initialize
 14698 ;;		_UART1_rx_vect_isr
 14699 ;; This function uses a non-reentrant model
 14700 ;;
 14701                           
 14702                           	psect	text84
 14703  005010                     __ptext84:
 14704                           	callstack 0
 14705  005010                     _UART1_Receive_ISR:
 14706                           	callstack 16
 14707                           
 14708                           ; BSR set to: 0
 14709                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 14710                           
 14711                           ;incstack = 0
 14712  005010  0E00               	movlw	low _uart1RxStatusBuffer
 14713  005012  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14714  005014  6ED9               	movwf	fsr2l,c
 14715  005016  6ADA               	clrf	fsr2h,c
 14716  005018  0E01               	movlw	high _uart1RxStatusBuffer
 14717  00501A  22DA               	addwfc	fsr2h,f,c
 14718  00501C  0E00               	movlw	0
 14719  00501E  6EDF               	movwf	indf2,c
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 14723  005020  013D               	movlb	61	; () banked
 14724  005022  A7F9               	btfss	249,3,b	;volatile
 14725  005024  D015               	goto	i2u607_49
 14726                           
 14727                           ; BSR set to: 61
 14728                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 14729  005026  0E00               	movlw	low _uart1RxStatusBuffer
 14730  005028  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14731  00502A  6ED9               	movwf	fsr2l,c
 14732  00502C  6ADA               	clrf	fsr2h,c
 14733  00502E  0E01               	movlw	high _uart1RxStatusBuffer
 14734  005030  22DA               	addwfc	fsr2h,f,c
 14735  005032  0101               	movlb	1	; () banked
 14736  005034  82DF               	bsf	indf2,1,c
 14737                           
 14738                           ; BSR set to: 1
 14739                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 14740  005036  D801               	call	i2u607_48
 14741  005038  D00B               	goto	i2u607_49
 14742  00503A                     i2u607_48:
 14743  00503A  0005               	push	
 14744  00503C  6EFA               	movwf	pclath,c
 14745  00503E  0100               	movlb	0	; () banked
 14746  005040  51E6               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 14747  005042  6EFD               	movwf	tosl,c
 14748  005044  51E7               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 14749  005046  6EFE               	movwf	tosh,c
 14750  005048  51E8               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 14751  00504A  6EFF               	movwf	tosu,c
 14752  00504C  50FA               	movf	pclath,w,c
 14753  00504E  0012               	return		;indir
 14754  005050                     i2u607_49:
 14755                           
 14756                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 14757  005050  013D               	movlb	61	; () banked
 14758  005052  A3F9               	btfss	249,1,b	;volatile
 14759  005054  D015               	goto	i2u609_49
 14760                           
 14761                           ; BSR set to: 61
 14762                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 14763  005056  0E00               	movlw	low _uart1RxStatusBuffer
 14764  005058  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14765  00505A  6ED9               	movwf	fsr2l,c
 14766  00505C  6ADA               	clrf	fsr2h,c
 14767  00505E  0E01               	movlw	high _uart1RxStatusBuffer
 14768  005060  22DA               	addwfc	fsr2h,f,c
 14769  005062  0101               	movlb	1	; () banked
 14770  005064  84DF               	bsf	indf2,2,c
 14771                           
 14772                           ; BSR set to: 1
 14773                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 14774  005066  D801               	call	i2u609_48
 14775  005068  D00B               	goto	i2u609_49
 14776  00506A                     i2u609_48:
 14777  00506A  0005               	push	
 14778  00506C  6EFA               	movwf	pclath,c
 14779  00506E  0100               	movlb	0	; () banked
 14780  005070  51E3               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 14781  005072  6EFD               	movwf	tosl,c
 14782  005074  51E4               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 14783  005076  6EFE               	movwf	tosh,c
 14784  005078  51E5               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 14785  00507A  6EFF               	movwf	tosu,c
 14786  00507C  50FA               	movf	pclath,w,c
 14787  00507E  0012               	return		;indir
 14788  005080                     i2u609_49:
 14789                           
 14790                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 14791  005080  0E00               	movlw	low _uart1RxStatusBuffer
 14792  005082  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14793  005084  6ED9               	movwf	fsr2l,c
 14794  005086  6ADA               	clrf	fsr2h,c
 14795  005088  0E01               	movlw	high _uart1RxStatusBuffer
 14796  00508A  22DA               	addwfc	fsr2h,f,c
 14797  00508C  50DF               	movf	indf2,w,c
 14798  00508E  B4D8               	btfsc	status,2,c
 14799  005090  D00D               	goto	i2l6228
 14800                           
 14801                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 14802  005092  D801               	call	i2u611_48
 14803  005094  0012               	return	
 14804  005096                     i2u611_48:
 14805  005096  0005               	push	
 14806  005098  6EFA               	movwf	pclath,c
 14807  00509A  0100               	movlb	0	; () banked
 14808  00509C  51E0               	movf	_UART1_ErrorHandler& (0+255),w,b
 14809  00509E  6EFD               	movwf	tosl,c
 14810  0050A0  51E1               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 14811  0050A2  6EFE               	movwf	tosh,c
 14812  0050A4  51E2               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 14813  0050A6  6EFF               	movwf	tosu,c
 14814  0050A8  50FA               	movf	pclath,w,c
 14815  0050AA  0012               	return		;indir
 14816  0050AC                     i2l6228:
 14817                           
 14818                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 14819  0050AC  ECF9  F02D         	call	_UART1_RxDataHandler	;wreg free
 14820  0050B0  0012               	return		;funcret
 14821  0050B2                     __end_of_UART1_Receive_ISR:
 14822                           	callstack 0
 14823                           
 14824 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 14825 ;; Defined at:
 14826 ;;		line 309 in file "mcc_generated_files/uart1.c"
 14827 ;; Parameters:    Size  Location     Type
 14828 ;;		None
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;		None
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  1    wreg      void 
 14833 ;; Registers used:
 14834 ;;		None
 14835 ;; Tracked objects:
 14836 ;;		On entry : 3F/0
 14837 ;;		On exit  : 3F/0
 14838 ;;		Unchanged: 3F/0
 14839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14844 ;;Total ram usage:        0 bytes
 14845 ;; Hardware stack levels used: 1
 14846 ;; This function calls:
 14847 ;;		Nothing
 14848 ;; This function is called by:
 14849 ;;		_UART1_Initialize
 14850 ;;		_UART1_Receive_ISR
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854                           	psect	text85
 14855  005DA2                     __ptext85:
 14856                           	callstack 0
 14857  005DA2                     _UART1_DefaultOverrunErrorHandler:
 14858                           	callstack 17
 14859                           
 14860                           ; BSR set to: 0
 14861                           
 14862                           ;incstack = 0
 14863  005DA2  0012               	return		;funcret
 14864  005DA4                     __end_of_UART1_DefaultOverrunErrorHandler:
 14865                           	callstack 0
 14866                           
 14867 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 14868 ;; Defined at:
 14869 ;;		line 307 in file "mcc_generated_files/uart1.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;		None
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;		None
 14874 ;; Return value:  Size  Location     Type
 14875 ;;                  1    wreg      void 
 14876 ;; Registers used:
 14877 ;;		None
 14878 ;; Tracked objects:
 14879 ;;		On entry : 3F/0
 14880 ;;		On exit  : 3F/0
 14881 ;;		Unchanged: 3F/0
 14882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14887 ;;Total ram usage:        0 bytes
 14888 ;; Hardware stack levels used: 1
 14889 ;; This function calls:
 14890 ;;		Nothing
 14891 ;; This function is called by:
 14892 ;;		_UART1_Initialize
 14893 ;;		_UART1_Receive_ISR
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897                           	psect	text86
 14898  005DA4                     __ptext86:
 14899                           	callstack 0
 14900  005DA4                     _UART1_DefaultFramingErrorHandler:
 14901                           	callstack 17
 14902                           
 14903                           ; BSR set to: 0
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;incstack = 0
 14907  005DA4  0012               	return		;funcret
 14908  005DA6                     __end_of_UART1_DefaultFramingErrorHandler:
 14909                           	callstack 0
 14910                           
 14911 ;; *************** function _UART1_DefaultErrorHandler *****************
 14912 ;; Defined at:
 14913 ;;		line 311 in file "mcc_generated_files/uart1.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;		None
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;		None
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : 3F/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14931 ;;Total ram usage:        0 bytes
 14932 ;; Hardware stack levels used: 1
 14933 ;; Hardware stack levels required when called: 1
 14934 ;; This function calls:
 14935 ;;		_UART1_RxDataHandler
 14936 ;; This function is called by:
 14937 ;;		_UART1_Initialize
 14938 ;;		_UART1_Receive_ISR
 14939 ;; This function uses a non-reentrant model
 14940 ;;
 14941                           
 14942                           	psect	text87
 14943  005D90                     __ptext87:
 14944                           	callstack 0
 14945  005D90                     _UART1_DefaultErrorHandler:
 14946                           	callstack 16
 14947                           
 14948                           ; BSR set to: 0
 14949                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 14950                           
 14951                           ; BSR set to: 0
 14952                           ;incstack = 0
 14953  005D90  ECF9  F02D         	call	_UART1_RxDataHandler	;wreg free
 14954  005D94  0012               	return		;funcret
 14955  005D96                     __end_of_UART1_DefaultErrorHandler:
 14956                           	callstack 0
 14957                           
 14958 ;; *************** function _UART1_RxDataHandler *****************
 14959 ;; Defined at:
 14960 ;;		line 297 in file "mcc_generated_files/uart1.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;		None
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;		None
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  1    wreg      void 
 14967 ;; Registers used:
 14968 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/3D
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14978 ;;Total ram usage:        0 bytes
 14979 ;; Hardware stack levels used: 1
 14980 ;; This function calls:
 14981 ;;		Nothing
 14982 ;; This function is called by:
 14983 ;;		_UART1_Receive_ISR
 14984 ;;		_UART1_DefaultErrorHandler
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           	psect	text88
 14989  005BF2                     __ptext88:
 14990                           	callstack 0
 14991  005BF2                     _UART1_RxDataHandler:
 14992                           	callstack 17
 14993                           
 14994                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 14995                           
 14996                           ;incstack = 0
 14997  005BF2  0E00               	movlw	low _uart1RxBuffer
 14998  005BF4  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14999  005BF6  6ED9               	movwf	fsr2l,c
 15000  005BF8  6ADA               	clrf	fsr2h,c
 15001  005BFA  0E02               	movlw	high _uart1RxBuffer
 15002  005BFC  22DA               	addwfc	fsr2h,f,c
 15003  005BFE  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15004  005C04  2A48               	incf	_uart1RxHead^0,f,c	;volatile
 15005                           
 15006                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15007  005C06  0E3F               	movlw	63
 15008  005C08  6448               	cpfsgt	_uart1RxHead^0,c
 15009  005C0A  D002               	goto	i2l5922
 15010                           
 15011                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15012  005C0C  0E00               	movlw	0
 15013  005C0E  6E48               	movwf	_uart1RxHead^0,c	;volatile
 15014  005C10                     i2l5922:
 15015                           
 15016                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15017  005C10  2A46               	incf	_uart1RxCount^0,f,c	;volatile
 15018  005C12  0012               	return		;funcret
 15019  005C14                     __end_of_UART1_RxDataHandler:
 15020                           	callstack 0
 15021                           
 15022 ;; *************** function _TMR5_ISR *****************
 15023 ;; Defined at:
 15024 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;		None
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;		None
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1    wreg      void 
 15031 ;; Registers used:
 15032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/0
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15042 ;;Total ram usage:        2 bytes
 15043 ;; Hardware stack levels used: 1
 15044 ;; Hardware stack levels required when called: 1
 15045 ;; This function calls:
 15046 ;;		Absolute function
 15047 ;;		_TMR5_DefaultInterruptHandler
 15048 ;;		_TMR5_WriteTimer
 15049 ;;		_Timers_Isr
 15050 ;; This function is called by:
 15051 ;;		Interrupt level 2
 15052 ;; This function uses a non-reentrant model
 15053 ;;
 15054                           
 15055                           	psect	text89
 15056  005614                     __ptext89:
 15057                           	callstack 0
 15058  005614                     _TMR5_ISR:
 15059                           	callstack 18
 15060                           
 15061                           ;incstack = 0
 15062  005614  006F FFE8  F013    	movff	pclath,??_TMR5_ISR
 15063  00561A  006F FFEC  F014    	movff	pclatu,??_TMR5_ISR+1
 15064                           
 15065                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 15066  005620  0139               	movlb	57	; () banked
 15067  005622  9DA8               	bcf	168,6,b	;volatile
 15068                           
 15069                           ; BSR set to: 57
 15070                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 15071  005624  C03F  F00F         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 15072  005628  C040  F010         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 15073  00562C  ECC5  F02D         	call	_TMR5_WriteTimer	;wreg free
 15074                           
 15075                           ; BSR set to: 57
 15076                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 15077  005630  0100               	movlb	0	; () banked
 15078  005632  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 15079  005634  11DE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 15080  005636  11DF               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 15081  005638  B4D8               	btfsc	status,2,c
 15082  00563A  D00C               	goto	i2u637_49
 15083                           
 15084                           ; BSR set to: 0
 15085                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 15086  00563C  D801               	call	i2u637_48
 15087  00563E  D00A               	goto	i2u637_49
 15088  005640                     i2u637_48:
 15089  005640  0005               	push	
 15090  005642  6EFA               	movwf	pclath,c
 15091  005644  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 15092  005646  6EFD               	movwf	tosl,c
 15093  005648  51DE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 15094  00564A  6EFE               	movwf	tosh,c
 15095  00564C  51DF               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 15096  00564E  6EFF               	movwf	tosu,c
 15097  005650  50FA               	movf	pclath,w,c
 15098  005652  0012               	return		;indir
 15099  005654                     i2u637_49:
 15100  005654  0060  F053  FFFB   	movff	??_TMR5_ISR+1,pclatu
 15101  00565A  0060  F04F  FFFA   	movff	??_TMR5_ISR,pclath
 15102  005660  0011               	retfie		f
 15103  005662                     __end_of_TMR5_ISR:
 15104                           	callstack 0
 15105                           
 15106 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15107 ;; Defined at:
 15108 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 15109 ;; Parameters:    Size  Location     Type
 15110 ;;		None
 15111 ;; Auto vars:     Size  Location     Type
 15112 ;;		None
 15113 ;; Return value:  Size  Location     Type
 15114 ;;                  1    wreg      void 
 15115 ;; Registers used:
 15116 ;;		None
 15117 ;; Tracked objects:
 15118 ;;		On entry : 3F/0
 15119 ;;		On exit  : 3F/0
 15120 ;;		Unchanged: 3F/0
 15121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15126 ;;Total ram usage:        0 bytes
 15127 ;; Hardware stack levels used: 1
 15128 ;; This function calls:
 15129 ;;		Nothing
 15130 ;; This function is called by:
 15131 ;;		_TMR5_Initialize
 15132 ;;		_TMR5_ISR
 15133 ;; This function uses a non-reentrant model
 15134 ;;
 15135                           
 15136                           	psect	text90
 15137  005DA6                     __ptext90:
 15138                           	callstack 0
 15139  005DA6                     _TMR5_DefaultInterruptHandler:
 15140                           	callstack 18
 15141                           
 15142                           ; BSR set to: 0
 15143                           
 15144                           ;incstack = 0
 15145  005DA6  0012               	return		;funcret
 15146  005DA8                     __end_of_TMR5_DefaultInterruptHandler:
 15147                           	callstack 0
 15148                           
 15149 ;; *************** function _Timers_Isr *****************
 15150 ;; Defined at:
 15151 ;;		line 48 in file "timers.c"
 15152 ;; Parameters:    Size  Location     Type
 15153 ;;		None
 15154 ;; Auto vars:     Size  Location     Type
 15155 ;;  i               2   16[COMRAM] int 
 15156 ;; Return value:  Size  Location     Type
 15157 ;;                  1    wreg      void 
 15158 ;; Registers used:
 15159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15160 ;; Tracked objects:
 15161 ;;		On entry : 3F/0
 15162 ;;		On exit  : 3F/0
 15163 ;;		Unchanged: 3F/0
 15164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15169 ;;Total ram usage:        4 bytes
 15170 ;; Hardware stack levels used: 1
 15171 ;; This function calls:
 15172 ;;		Nothing
 15173 ;; This function is called by:
 15174 ;;		_main
 15175 ;;		_TMR5_ISR
 15176 ;; This function uses a non-reentrant model
 15177 ;;
 15178                           
 15179                           	psect	text91
 15180  005572                     __ptext91:
 15181                           	callstack 0
 15182  005572                     _Timers_Isr:
 15183                           	callstack 18
 15184                           
 15185                           ; BSR set to: 0
 15186                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 15187                           
 15188                           ; BSR set to: 0
 15189                           ;incstack = 0
 15190  005572  0E00               	movlw	0
 15191  005574  6E12               	movwf	(Timers_Isr@i+1)^0,c
 15192  005576  0E00               	movlw	0
 15193  005578  6E11               	movwf	Timers_Isr@i^0,c
 15194  00557A                     i2l6300:
 15195                           
 15196                           ; BSR set to: 0
 15197                           ;timers.c: 52:   if (tickCount[i] != 0) {
 15198  00557A  90D8               	bcf	status,0,c
 15199  00557C  3411               	rlcf	Timers_Isr@i^0,w,c
 15200  00557E  6ED9               	movwf	fsr2l,c
 15201  005580  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15202  005582  6EDA               	movwf	fsr2h,c
 15203  005584  0E80               	movlw	low _tickCount
 15204  005586  26D9               	addwf	fsr2l,f,c
 15205  005588  0E01               	movlw	high _tickCount
 15206  00558A  22DA               	addwfc	fsr2h,f,c
 15207  00558C  50DE               	movf	postinc2,w,c
 15208  00558E  10DE               	iorwf	postinc2,w,c
 15209  005590  B4D8               	btfsc	status,2,c
 15210  005592  D00C               	goto	i2l6304
 15211                           
 15212                           ; BSR set to: 0
 15213                           ;timers.c: 53:    tickCount[i]--;
 15214  005594  90D8               	bcf	status,0,c
 15215  005596  3411               	rlcf	Timers_Isr@i^0,w,c
 15216  005598  6ED9               	movwf	fsr2l,c
 15217  00559A  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15218  00559C  6EDA               	movwf	fsr2h,c
 15219  00559E  0E80               	movlw	low _tickCount
 15220  0055A0  26D9               	addwf	fsr2l,f,c
 15221  0055A2  0E01               	movlw	high _tickCount
 15222  0055A4  22DA               	addwfc	fsr2h,f,c
 15223  0055A6  06DE               	decf	postinc2,f,c
 15224  0055A8  0E00               	movlw	0
 15225  0055AA  5ADD               	subwfb	postdec2,f,c
 15226  0055AC                     i2l6304:
 15227                           
 15228                           ; BSR set to: 0
 15229                           ;timers.c: 55:  }
 15230  0055AC  4A11               	infsnz	Timers_Isr@i^0,f,c
 15231  0055AE  2A12               	incf	(Timers_Isr@i+1)^0,f,c
 15232                           
 15233                           ; BSR set to: 0
 15234  0055B0  BE12               	btfsc	(Timers_Isr@i+1)^0,7,c
 15235  0055B2  D7E3               	goto	i2l6300
 15236  0055B4  5012               	movf	(Timers_Isr@i+1)^0,w,c
 15237  0055B6  E105               	bnz	i2u618_40
 15238  0055B8  0E06               	movlw	6
 15239  0055BA  5C11               	subwf	Timers_Isr@i^0,w,c
 15240  0055BC  B0D8               	btfsc	status,0,c
 15241  0055BE  0012               	return	
 15242  0055C0  D7DC               	goto	i2l6300
 15243  0055C2                     i2u618_40:
 15244                           
 15245                           ; BSR set to: 0
 15246  0055C2  0012               	return		;funcret
 15247  0055C4                     __end_of_Timers_Isr:
 15248                           	callstack 0
 15249                           
 15250 ;; *************** function _TMR5_WriteTimer *****************
 15251 ;; Defined at:
 15252 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 15253 ;; Parameters:    Size  Location     Type
 15254 ;;  timerVal        2   14[COMRAM] unsigned short 
 15255 ;; Auto vars:     Size  Location     Type
 15256 ;;		None
 15257 ;; Return value:  Size  Location     Type
 15258 ;;                  1    wreg      void 
 15259 ;; Registers used:
 15260 ;;		None
 15261 ;; Tracked objects:
 15262 ;;		On entry : 3F/39
 15263 ;;		On exit  : 3F/39
 15264 ;;		Unchanged: 3E/0
 15265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15270 ;;Total ram usage:        2 bytes
 15271 ;; Hardware stack levels used: 1
 15272 ;; This function calls:
 15273 ;;		Nothing
 15274 ;; This function is called by:
 15275 ;;		_TMR5_ISR
 15276 ;; This function uses a non-reentrant model
 15277 ;;
 15278                           
 15279                           	psect	text92
 15280  005B8A                     __ptext92:
 15281                           	callstack 0
 15282  005B8A                     _TMR5_WriteTimer:
 15283                           	callstack 18
 15284                           
 15285                           ; BSR set to: 57
 15286                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;incstack = 0
 15290  005B8A  A49A               	btfss	154,2,c	;volatile
 15291  005B8C  D009               	goto	i2l721
 15292                           
 15293                           ; BSR set to: 57
 15294                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 15295  005B8E  909A               	bcf	154,0,c	;volatile
 15296                           
 15297                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 15298  005B90  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15299                           
 15300                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 15301  005B96  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15302                           
 15303                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 15304  005B9C  809A               	bsf	154,0,c	;volatile
 15305                           
 15306                           ;mcc_generated_files/tmr5.c: 141:     }
 15307  005B9E  0012               	return	
 15308  005BA0                     i2l721:
 15309                           
 15310                           ; BSR set to: 57
 15311                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 15312  005BA0  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15313                           
 15314                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 15315  005BA6  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15316                           
 15317                           ; BSR set to: 57
 15318  005BAC  0012               	return		;funcret
 15319  005BAE                     __end_of_TMR5_WriteTimer:
 15320                           	callstack 0
 15321                           
 15322                           ;
 15323                           ; Interrupt Vector Table @ 0x8
 15324                           ;
 15325                           
 15326                           	psect	ivt0x8
 15327  000008                     __pivt0x8:
 15328                           	callstack 0
 15329  000008                     ivt0x8_base:
 15330                           	callstack 0
 15331                           
 15332                           ; Vector 0 : SWINT
 15333  000008  1768               	dw	_Default_ISR shr (0+2)
 15334                           
 15335                           ; Vector 1 : HLVD
 15336  00000A  1768               	dw	_Default_ISR shr (0+2)
 15337                           
 15338                           ; Vector 2 : OSF
 15339  00000C  1768               	dw	_Default_ISR shr (0+2)
 15340                           
 15341                           ; Vector 3 : CSW
 15342  00000E  1768               	dw	_Default_ISR shr (0+2)
 15343                           
 15344                           ; Vector 4 : NVM
 15345  000010  1768               	dw	_Default_ISR shr (0+2)
 15346                           
 15347                           ; Vector 5 : SCAN
 15348  000012  1768               	dw	_Default_ISR shr (0+2)
 15349                           
 15350                           ; Vector 6 : CRC
 15351  000014  1768               	dw	_Default_ISR shr (0+2)
 15352                           
 15353                           ; Vector 7 : IOC
 15354  000016  1768               	dw	_Default_ISR shr (0+2)
 15355                           
 15356                           ; Vector 8 : INT0
 15357  000018  1768               	dw	_Default_ISR shr (0+2)
 15358                           
 15359                           ; Vector 9 : ZCD
 15360  00001A  1768               	dw	_Default_ISR shr (0+2)
 15361                           
 15362                           ; Vector 10 : AD
 15363  00001C  15E0               	dw	_ADCC_ISR shr (0+2)
 15364                           
 15365                           ; Vector 11 : ADT
 15366  00001E  1768               	dw	_Default_ISR shr (0+2)
 15367                           
 15368                           ; Vector 12 : CMP1
 15369  000020  1768               	dw	_Default_ISR shr (0+2)
 15370                           
 15371                           ; Vector 13 : SMT1
 15372  000022  1768               	dw	_Default_ISR shr (0+2)
 15373                           
 15374                           ; Vector 14 : SMT1PRA
 15375  000024  1768               	dw	_Default_ISR shr (0+2)
 15376                           
 15377                           ; Vector 15 : SMT1PRW
 15378  000026  1768               	dw	_Default_ISR shr (0+2)
 15379                           
 15380                           ; Vector 16 : DMA1SCNT
 15381  000028  1768               	dw	_Default_ISR shr (0+2)
 15382                           
 15383                           ; Vector 17 : DMA1DCNT
 15384  00002A  1768               	dw	_Default_ISR shr (0+2)
 15385                           
 15386                           ; Vector 18 : DMA1OR
 15387  00002C  1768               	dw	_Default_ISR shr (0+2)
 15388                           
 15389                           ; Vector 19 : DMA1A
 15390  00002E  1768               	dw	_Default_ISR shr (0+2)
 15391                           
 15392                           ; Vector 20 : SPI1RX
 15393  000030  1768               	dw	_Default_ISR shr (0+2)
 15394                           
 15395                           ; Vector 21 : SPI1TX
 15396  000032  1768               	dw	_Default_ISR shr (0+2)
 15397                           
 15398                           ; Vector 22 : SPI1
 15399  000034  1768               	dw	_Default_ISR shr (0+2)
 15400                           
 15401                           ; Vector 23 : I2C1RX
 15402  000036  1768               	dw	_Default_ISR shr (0+2)
 15403                           
 15404                           ; Vector 24 : I2C1TX
 15405  000038  1768               	dw	_Default_ISR shr (0+2)
 15406                           
 15407                           ; Vector 25 : I2C1
 15408  00003A  1768               	dw	_Default_ISR shr (0+2)
 15409                           
 15410                           ; Vector 26 : I2C1E
 15411  00003C  1768               	dw	_Default_ISR shr (0+2)
 15412                           
 15413                           ; Vector 27 : U1RX
 15414  00003E  1620               	dw	_UART1_rx_vect_isr shr (0+2)
 15415                           
 15416                           ; Vector 28 : U1TX
 15417  000040  1610               	dw	_UART1_tx_vect_isr shr (0+2)
 15418                           
 15419                           ; Vector 29 : U1E
 15420  000042  1768               	dw	_Default_ISR shr (0+2)
 15421                           
 15422                           ; Vector 30 : U1
 15423  000044  1768               	dw	_Default_ISR shr (0+2)
 15424                           
 15425                           ; Vector 31 : TMR0
 15426  000046  1768               	dw	_Default_ISR shr (0+2)
 15427                           
 15428                           ; Vector 32 : TMR1
 15429  000048  1768               	dw	_Default_ISR shr (0+2)
 15430                           
 15431                           ; Vector 33 : TMR1G
 15432  00004A  1768               	dw	_Default_ISR shr (0+2)
 15433                           
 15434                           ; Vector 34 : TMR2
 15435  00004C  1768               	dw	_Default_ISR shr (0+2)
 15436                           
 15437                           ; Vector 35 : CCP1
 15438  00004E  1768               	dw	_Default_ISR shr (0+2)
 15439                           
 15440                           ; Vector 36 : Undefined
 15441  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15442                           
 15443                           ; Vector 37 : NCO1
 15444  000052  1768               	dw	_Default_ISR shr (0+2)
 15445                           
 15446                           ; Vector 38 : CWG1
 15447  000054  1768               	dw	_Default_ISR shr (0+2)
 15448                           
 15449                           ; Vector 39 : CLC1
 15450  000056  1768               	dw	_Default_ISR shr (0+2)
 15451                           
 15452                           ; Vector 40 : INT1
 15453  000058  1768               	dw	_Default_ISR shr (0+2)
 15454                           
 15455                           ; Vector 41 : CMP2
 15456  00005A  1768               	dw	_Default_ISR shr (0+2)
 15457                           
 15458                           ; Vector 42 : DMA2SCNT
 15459  00005C  1768               	dw	_Default_ISR shr (0+2)
 15460                           
 15461                           ; Vector 43 : DMA2DCNT
 15462  00005E  1768               	dw	_Default_ISR shr (0+2)
 15463                           
 15464                           ; Vector 44 : DMA2OR
 15465  000060  1768               	dw	_Default_ISR shr (0+2)
 15466                           
 15467                           ; Vector 45 : DMA2A
 15468  000062  1768               	dw	_Default_ISR shr (0+2)
 15469                           
 15470                           ; Vector 46 : I2C2RX
 15471  000064  1768               	dw	_Default_ISR shr (0+2)
 15472                           
 15473                           ; Vector 47 : I2C2TX
 15474  000066  1768               	dw	_Default_ISR shr (0+2)
 15475                           
 15476                           ; Vector 48 : I2C2
 15477  000068  1768               	dw	_Default_ISR shr (0+2)
 15478                           
 15479                           ; Vector 49 : I2C2E
 15480  00006A  1768               	dw	_Default_ISR shr (0+2)
 15481                           
 15482                           ; Vector 50 : U2RX
 15483  00006C  1768               	dw	_Default_ISR shr (0+2)
 15484                           
 15485                           ; Vector 51 : U2TX
 15486  00006E  1768               	dw	_Default_ISR shr (0+2)
 15487                           
 15488                           ; Vector 52 : U2E
 15489  000070  1768               	dw	_Default_ISR shr (0+2)
 15490                           
 15491                           ; Vector 53 : U2
 15492  000072  1768               	dw	_Default_ISR shr (0+2)
 15493                           
 15494                           ; Vector 54 : TMR3
 15495  000074  1768               	dw	_Default_ISR shr (0+2)
 15496                           
 15497                           ; Vector 55 : TMR3G
 15498  000076  1768               	dw	_Default_ISR shr (0+2)
 15499                           
 15500                           ; Vector 56 : TMR4
 15501  000078  1768               	dw	_Default_ISR shr (0+2)
 15502                           
 15503                           ; Vector 57 : CCP2
 15504  00007A  1768               	dw	_Default_ISR shr (0+2)
 15505                           
 15506                           ; Vector 58 : Undefined
 15507  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15508                           
 15509                           ; Vector 59 : CWG2
 15510  00007E  1768               	dw	_Default_ISR shr (0+2)
 15511                           
 15512                           ; Vector 60 : CLC2
 15513  000080  1768               	dw	_Default_ISR shr (0+2)
 15514                           
 15515                           ; Vector 61 : INT2
 15516  000082  1768               	dw	_Default_ISR shr (0+2)
 15517                           
 15518                           ; Vector 62 : Undefined
 15519  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15520                           
 15521                           ; Vector 63 : Undefined
 15522  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15523                           
 15524                           ; Vector 64 : Undefined
 15525  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15526                           
 15527                           ; Vector 65 : Undefined
 15528  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15529                           
 15530                           ; Vector 66 : Undefined
 15531  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15532                           
 15533                           ; Vector 67 : Undefined
 15534  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15535                           
 15536                           ; Vector 68 : Undefined
 15537  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15538                           
 15539                           ; Vector 69 : Undefined
 15540  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15541                           
 15542                           ; Vector 70 : TMR5
 15543  000094  1585               	dw	_TMR5_ISR shr (0+2)
 15544                           
 15545                           ; Vector 71 : TMR5G
 15546  000096  1768               	dw	_Default_ISR shr (0+2)
 15547                           
 15548                           ; Vector 72 : TMR6
 15549  000098  166A               	dw	_TMR6_ISR shr (0+2)
 15550                           
 15551                           ; Vector 73 : CCP3
 15552  00009A  1768               	dw	_Default_ISR shr (0+2)
 15553                           
 15554                           ; Vector 74 : CWG3
 15555  00009C  1768               	dw	_Default_ISR shr (0+2)
 15556                           
 15557                           ; Vector 75 : CLC3
 15558  00009E  1768               	dw	_Default_ISR shr (0+2)
 15559                           
 15560                           ; Vector 76 : Undefined
 15561  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15562                           
 15563                           ; Vector 77 : Undefined
 15564  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15565                           
 15566                           ; Vector 78 : Undefined
 15567  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15568                           
 15569                           ; Vector 79 : Undefined
 15570  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15571                           
 15572                           ; Vector 80 : CCP4
 15573  0000A8  1768               	dw	_Default_ISR shr (0+2)
 15574                           
 15575                           ; Vector 81 : CLC4
 15576  0000AA  1768               	dw	_Default_ISR shr (0+2)
 15577  0000AC                     ivt0x8_undefint:
 15578                           	callstack 0
 15579  0000AC  00FF               	reset	
 15580                           
 15581                           	psect	text93
 15582  000000                     __ptext93:
 15583                           	callstack 0
 15584                           
 15585                           	psect	rparam
 15586  0000                     
 15587                           	psect	idloc
 15588                           
 15589                           ;Config register IDLOC0 @ 0x200000
 15590                           ;	unspecified, using default values
 15591  200000                     	org	2097152
 15592  200000  0FFF               	dw	4095
 15593                           
 15594                           ;Config register IDLOC1 @ 0x200002
 15595                           ;	unspecified, using default values
 15596  200002                     	org	2097154
 15597  200002  0FFF               	dw	4095
 15598                           
 15599                           ;Config register IDLOC2 @ 0x200004
 15600                           ;	unspecified, using default values
 15601  200004                     	org	2097156
 15602  200004  0FFF               	dw	4095
 15603                           
 15604                           ;Config register IDLOC3 @ 0x200006
 15605                           ;	unspecified, using default values
 15606  200006                     	org	2097158
 15607  200006  0FFF               	dw	4095
 15608                           
 15609                           ;Config register IDLOC4 @ 0x200008
 15610                           ;	unspecified, using default values
 15611  200008                     	org	2097160
 15612  200008  0FFF               	dw	4095
 15613                           
 15614                           ;Config register IDLOC5 @ 0x20000A
 15615                           ;	unspecified, using default values
 15616  20000A                     	org	2097162
 15617  20000A  0FFF               	dw	4095
 15618                           
 15619                           ;Config register IDLOC6 @ 0x20000C
 15620                           ;	unspecified, using default values
 15621  20000C                     	org	2097164
 15622  20000C  0FFF               	dw	4095
 15623                           
 15624                           ;Config register IDLOC7 @ 0x20000E
 15625                           ;	unspecified, using default values
 15626  20000E                     	org	2097166
 15627  20000E  0FFF               	dw	4095
 15628                           
 15629                           	psect	config
 15630                           
 15631                           ;Config register CONFIG1L @ 0x300000
 15632                           ;	External Oscillator Selection
 15633                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 15634                           ;	Reset Oscillator Selection
 15635                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15636  300000                     	org	3145728
 15637  300000  AF                 	db	175
 15638                           
 15639                           ;Config register CONFIG1H @ 0x300001
 15640                           ;	Clock out Enable bit
 15641                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 15642                           ;	PRLOCKED One-Way Set Enable bit
 15643                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 15644                           ;	Clock Switch Enable bit
 15645                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15646                           ;	Fail-Safe Clock Monitor Enable bit
 15647                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 15648  300001                     	org	3145729
 15649  300001  FF                 	db	255
 15650                           
 15651                           ;Config register CONFIG2L @ 0x300002
 15652                           ;	MCLR Enable bit
 15653                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 15654                           ;	Power-up timer selection bits
 15655                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 15656                           ;	Multi-vector enable bit
 15657                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 15658                           ;	IVTLOCK bit One-way set enable bit
 15659                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 15660                           ;	Low Power BOR Enable bit
 15661                           ;	LPBOREN = OFF, ULPBOR disabled
 15662                           ;	Brown-out Reset Enable bits
 15663                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 15664  300002                     	org	3145730
 15665  300002  FF                 	db	255
 15666                           
 15667                           ;Config register CONFIG2H @ 0x300003
 15668                           ;	Brown-out Reset Voltage Selection bits
 15669                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 15670                           ;	ZCD Disable bit
 15671                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 15672                           ;	PPSLOCK bit One-Way Set Enable bit
 15673                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 15674                           ;	Stack Full/Underflow Reset Enable bit
 15675                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15676                           ;	Debugger Enable bit
 15677                           ;	DEBUG = OFF, Background debugger disabled
 15678                           ;	Extended Instruction Set Enable bit
 15679                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 15680  300003                     	org	3145731
 15681  300003  FF                 	db	255
 15682                           
 15683                           ;Config register CONFIG3L @ 0x300004
 15684                           ;	WDT Period selection bits
 15685                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15686                           ;	WDT operating mode
 15687                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 15688  300004                     	org	3145732
 15689  300004  9F                 	db	159
 15690                           
 15691                           ;Config register CONFIG3H @ 0x300005
 15692                           ;	WDT Window Select bits
 15693                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15694                           ;	WDT input clock selector
 15695                           ;	WDTCCS = SC, Software Control
 15696  300005                     	org	3145733
 15697  300005  FF                 	db	255
 15698                           
 15699                           ;Config register CONFIG4L @ 0x300006
 15700                           ;	Boot Block Size selection bits
 15701                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 15702                           ;	Boot Block enable bit
 15703                           ;	BBEN = OFF, Boot block disabled
 15704                           ;	Storage Area Flash enable bit
 15705                           ;	SAFEN = OFF, SAF disabled
 15706                           ;	Application Block write protection bit
 15707                           ;	WRTAPP = OFF, Application Block not write protected
 15708  300006                     	org	3145734
 15709  300006  FF                 	db	255
 15710                           
 15711                           ;Config register CONFIG4H @ 0x300007
 15712                           ;	Boot Block Write Protection bit
 15713                           ;	WRTB = OFF, Boot Block not write-protected
 15714                           ;	Configuration Register Write Protection bit
 15715                           ;	WRTC = OFF, Configuration registers not write-protected
 15716                           ;	Data EEPROM Write Protection bit
 15717                           ;	WRTD = OFF, Data EEPROM not write-protected
 15718                           ;	SAF Write protection bit
 15719                           ;	WRTSAF = OFF, SAF not Write Protected
 15720                           ;	Low Voltage Programming Enable bit
 15721                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 15722  300007                     	org	3145735
 15723  300007  FF                 	db	255
 15724                           
 15725                           ;Config register CONFIG5L @ 0x300008
 15726                           ;	PFM and Data EEPROM Code Protection bit
 15727                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 15728  300008                     	org	3145736
 15729  300008  FF                 	db	255
 15730                           
 15731                           ;Config register CONFIG5H @ 0x300009
 15732                           ;	unspecified, using default values
 15733  300009                     	org	3145737
 15734  300009  FF                 	db	255
 15735                           tosu	equ	0x3FFF
 15736                           tosh	equ	0x3FFE
 15737                           tosl	equ	0x3FFD
 15738                           stkptr	equ	0x3FFC
 15739                           pclatu	equ	0x3FFB
 15740                           pclath	equ	0x3FFA
 15741                           pcl	equ	0x3FF9
 15742                           tblptru	equ	0x3FF8
 15743                           tblptrh	equ	0x3FF7
 15744                           tblptrl	equ	0x3FF6
 15745                           tablat	equ	0x3FF5
 15746                           prodh	equ	0x3FF4
 15747                           prodl	equ	0x3FF3
 15748                           indf0	equ	0x3FEF
 15749                           postinc0	equ	0x3FEE
 15750                           postdec0	equ	0x3FED
 15751                           preinc0	equ	0x3FEC
 15752                           plusw0	equ	0x3FEB
 15753                           fsr0h	equ	0x3FEA
 15754                           fsr0l	equ	0x3FE9
 15755                           wreg	equ	0x3FE8
 15756                           indf1	equ	0x3FE7
 15757                           postinc1	equ	0x3FE6
 15758                           postdec1	equ	0x3FE5
 15759                           preinc1	equ	0x3FE4
 15760                           plusw1	equ	0x3FE3
 15761                           fsr1h	equ	0x3FE2
 15762                           fsr1l	equ	0x3FE1
 15763                           bsr	equ	0x3FE0
 15764                           indf2	equ	0x3FDF
 15765                           postinc2	equ	0x3FDE
 15766                           postdec2	equ	0x3FDD
 15767                           preinc2	equ	0x3FDC
 15768                           plusw2	equ	0x3FDB
 15769                           fsr2h	equ	0x3FDA
 15770                           fsr2l	equ	0x3FD9
 15771                           status	equ	0x3FD8

Data Sizes:
    Strings     215
    Constant    33
    Data        26
    BSS         737
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     56      75
    BANK0           160    121     160
    BANK1           256      0     255
    BANK2           256     24     219
    BANK3           256      0     255
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    fh_ps@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_po@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1822$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_27(CODE[4]), STR_22(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_27(CODE[4]), STR_22(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 74
		 -> vfpfcnvrt@ct(BANK0[3]), STR_10(CODE[21]), NULL(NULL[0]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[74]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 74
		 -> vfpfcnvrt@ct(BANK0[3]), STR_10(CODE[21]), NULL(NULL[0]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[74]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_11(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK2[131]), STR_5(CODE[18]), STR_4(CODE[24]), STR_3(CODE[25]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_6(CODE[74]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), dbuf(BANK1[80]), STR_11(CODE[3]), cli_read@i(BANK0[1]), 
		 -> cmdm(CODE[28]), cli_ctx(BANK2[131]), STR_5(CODE[18]), STR_4(CODE[24]), 
		 -> STR_3(CODE[25]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_10(CODE[21]), STR_6(CODE[74]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_10(CODE[21]), STR_6(CODE[74]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 74
		 -> STR_10(CODE[21]), STR_6(CODE[74]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_10(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    S2599$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2599$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(1) Largest target is 1
		 -> cli_read@i(BANK0[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1822_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    S1822_t_cmd$cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    fh_pr@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    build_time	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    S1829_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _printf->_vfprintf
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    _linux_getc->_UART1_Read
    __cli_interpret_cmd->_fh_po
    __cli_interpret_cmd->_fh_pr
    __cli_interpret_cmd->_fh_ps
    _strncmp->_strlen
    _fh_ps->_puts
    _fh_pr->_puts
    _fh_po->_puts
    _puts->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _cli_read->__cli_interpret_cmd

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _scmd_init->_cli_init
    _cli_init->_sprintf

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  187537
                                            117 BANK0      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                             _printf
                          _scmd_init
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0   78149
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4   78149
                                             20 BANK2      4     0      4
                             _memset
                               _puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7   69423
                                              0 BANK2     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21     4     17   68987
                                            115 BANK0      2     2      0
                                              0 BANK2     17     0     17
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     1      5   68693
                                             55 COMRAM     1     1      0
                                            110 BANK0      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           44    39      5   67481
                                             79 BANK0     31    26      5
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    9760
                                              0 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     536
                                             20 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     554
                                             20 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    4144
                                             31 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              62    55      7   41977
                                             17 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              6     4      2    1318
                                             26 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     649
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1248
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    7900
                                             40 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     890
                                             45 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     482
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     686
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    5410
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    4742
                                             20 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     196
                                             20 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    5194
                                             34 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1220
                                             46 COMRAM     8     0      8
                                             13 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     912
                                             20 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3620
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     818
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     842
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                10     8      2    2172
                                             27 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     321
                                             20 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     437
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     698
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      42
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   31633
                                             49 COMRAM     5     3      2
                                             10 BANK0      3     3      0
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2020
                                             20 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    6750
                                             43 COMRAM     3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (2) _linux_getc                                           2     1      1     202
                                             21 COMRAM     2     1      1
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Read                                           1     1      0      54
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  14    12      2   21847
                                             45 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                   Absolute function *
                              _fh_po *
                              _fh_pr *
                              _fh_ps *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             12     6      6    1404
                                             24 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     710
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _fh_ps                                                2     0      2    6284
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pr                                                2     0      2    6326
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_po                                                2     0      2    6363
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    6284
                                             40 COMRAM     3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                9     5      4    3148
                                             31 COMRAM     9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    2284
                                             22 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0     126
                                             21 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      84
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     884
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1550
                    _ADCC_Initialize
                    _DAC1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     740
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     254
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     254
                                             23 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      48
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     254
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      42
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            2     2      0       0
                                              5 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (13) _Adc_Isr                                             1     1      0       0
                                              4 COMRAM     1     1      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (14) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Led_Blink                                           1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   2     2      0       0
                                             12 COMRAM     2     2      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            2     2      0     319
                                             18 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (13) _Timers_Isr                                          4     4      0      90
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     229
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_po *
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_pr *
         _puts
       _fh_ps *
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _scmd_init
     _cli_init
       _memset
       _puts
       _sprintf
         _vfprintf

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0     111        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhh    22A      0       0      85        0.0%
BITBIGSFRllllll    181      0       0     109        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     18      DB       9       85.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBIGSFRllhhhh     CB      0       0      81        0.0%
BITBIGSFRllhhhh     A1      0       0      78        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     79      A0       5      100.0%
BITBIGSFRllhhhh     92      0       0      74        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     38      4B       1       78.9%
BITBIGSFRllhhhl     49      0       0      87        0.0%
BITBIGSFRllhhhh     3F      0       0      76        0.0%
BITBIGSFRllllll     33      0       0      98        0.0%
BITBIGSFRllllll     29      0       0      96        0.0%
BITBIGSFRhhhhh      28      0       0      68        0.0%
BITBIGSFRllhhhh     1C      0       0      73        0.0%
BITBIGSFRllllll     16      0       0     101        0.0%
BITBIGSFRllllll     11      0       0     100        0.0%
BITBIGSFRlllllh      B      0       0      95        0.0%
BITBIGSFRllhhl       B      0       0      88        0.0%
BITBIGSFRllllll      7      0       0     106        0.0%
BITBIGSFRllllll      7      0       0     103        0.0%
BITBIGSFRhhlh        6      0       0      70        0.0%
BITBIGSFRllllll      5      0       0     102        0.0%
BITBIGSFRllhhhh      5      0       0      86        0.0%
BITBIGSFRllllhl      5      0       0      94        0.0%
BITBIGSFRlllhl       5      0       0      92        0.0%
BITBIGSFRllhll       5      0       0      90        0.0%
BITBIGSFRllllll      4      0       0     104        0.0%
BITBIGSFRllllll      4      0       0     107        0.0%
BITBIGSFRllhlh       4      0       0      89        0.0%
BITBIGSFRlllhh       4      0       0      91        0.0%
BITBIGSFRllllhh      4      0       0      93        0.0%
BITBIGSFRllhhhh      2      0       0      82        0.0%
BITBIGSFRllhhhh      2      0       0      83        0.0%
BITBIGSFRhhll        2      0       0      71        0.0%
BITBIGSFRhll         2      0       0      72        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      80        0.0%
BITBIGSFRllhhhh      1      0       0      79        0.0%
BITBIGSFRllllll      1      0       0     108        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRllllll      1      0       0     105        0.0%
BITBIGSFRllhhhh      1      0       0      75        0.0%
BITBIGSFRllllll      1      0       0      99        0.0%
BITBIGSFRllhhhh      1      0       0      77        0.0%
BITBIGSFRllllll      1      0       0      97        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C4     110        0.0%
DATA                 0      0     3C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar  9 11:55:16 2022

                                ___fldiv@aexp 002D                                  ___fldiv@bexp 002C  
            __end_of_TMR5_SetInterruptHandler 5D5C                                  ___fldiv@sign 0025  
                                ?_display_led 0001                                  ___awdiv@sign 001A  
                         ___wmul@multiplicand 0017                             ??_TMR5_WriteTimer 0011  
                             _DAC1_Initialize 5D6A                                           l185 5C48  
                                         l616 58D4                                           l983 4D44  
                                         l994 4D50                                           _GIE 01FE97  
                                         l989 4D4A                                           l999 4D56  
                                         _ana 0039                                           _pad 514E  
                                         _res 0043                                  ___awmod@sign 001A  
                                         tosl 003FFD                                           wreg 003FE8  
                              _DAC1_SetOutput 5D80                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0062                  ?_ADCC_SetADIInterruptHandler 0015  
                          _UART1_Transmit_ISR 5A70                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                      __end_of_DAC1_GetOutput 5D90                                  ___fltol@exp1 001E  
                                        l1004 4D5C                                          l1014 4D68  
                                        l1120 3E3A                                          l1024 4D74  
                                        l1009 4D62                                          l1034 4D80  
                                        l1019 4D6E                                          l1044 4D8C  
                                        l1029 4D7A                                          l1134 4356  
                                        l1039 4D86                                          l1404 49EA  
                                        l2086 494C                                          l2184 592A  
                                        l1801 47A0                                          l2098 4100  
                                        l1723 390E                                          l1734 397C  
                                        l1735 3978                                          l1753 31C0  
                                        l1905 2418                                          l1577 4AD2  
                                        l1770 345C                                          l1762 33D6  
                                        l1763 33D2                                          l1587 4FEE  
                                        l1684 36A4                                          l1668 35D2  
                                        l1693 370A                                          l1669 35B0  
                                        l1933 277C                                          l1694 3706  
                                        l1794 4722                                          l1868 517C  
                                        l1990 3E62                                          ?_pad 0029  
                                        l1969 4602                                          l1988 3E5A  
                                        l9002 37CC                                          l9100 39C0  
                                        l9030 3840                                          l9022 380C  
                                        l9104 39E4                                          l9114 3A1A  
                                        l9018 3808                                          l9300 536C  
                                        l9116 3A1C                                          l9108 3A0E  
                                        l9044 386E                                          l9036 3856  
                                        l9212 339C                                          l9140 3180  
                                        l9062 38E6                                          l9054 38BE  
                                        l9206 337E                                          l9320 5416  
                                        l9312 53FC                                          l9080 3942  
                                        l9232 341A                                          l9136 316C  
                                        l9322 541E                                          l9074 3924  
                                        l9154 31AC                                          l9138 3170  
                                        l9332 5440                                          l9316 5408  
                                        l9068 390C                                          l9236 3438  
                                        l9164 31DE                                          l9156 31B0  
                                        l9420 4D12                                          l9412 4CFE  
                                        l9502 4B76                                          l8720 58C0  
                                        l9280 532C                                          l9336 544E  
                                        l9328 5436                                          l9352 526A  
                                        l9344 5218                                          l9360 498A  
                                        l9248 347A                                          l9408 4CEE  
                                        l9600 2142                                          l9282 5334  
                                        l9274 5316                                          l8802 3504  
                                        l9426 4D2E                                          l9418 4D06  
                                        l9514 54D0                                          l9292 5354  
                                        l9268 5306                                          l9348 524C  
                                        l9364 49BE                                          l8900 3694  
                                        l9508 4BB6                                          l9532 4066  
                                        l9612 216E                                          l9620 2184  
                                        l9436 4A4C                                          l8734 58F4  
                                        l9374 4A22                                          l9382 5A5E  
                                        l8814 3528                                          l8806 3508  
                                        l9550 4186                                          l9542 4122  
                                        l9702 2470                                          l9630 21E2  
                                        l9438 4A60                                          l8736 58F6  
                                        l8752 4F5A                                          l8760 5670  
                                        l9296 535E                                          l9368 49D4  
                                        l9392 4CA4                                          l9472 5166  
                                        l9720 24B6                                          l9704 2474  
                                        l9632 21FE                                          l9448 4ABC  
                                        l9464 4FD8                                          l9456 4F7C  
                                        l8746 4EC6                                          l9546 4158  
                                        l9482 519E                                          l9730 24F0  
                                        l9714 2492                                          l9634 2208  
                                        l9458 4F90                                          l8908 36C8  
                                        l8924 36E8                                          l8844 3564  
                                        l9476 5174                                          l9804 2864  
                                        l9812 2888                                          l9820 291E  
                                        l9724 24C6                                          l8758 566C  
                                        l9566 57F8                                          l8918 36DE  
                                        l8782 34C0                                          l9486 51CA  
                                        l9478 5186                                          l9662 22EE  
                                        l9638 222E                                          l9576 41C2  
                                        l8952 3776                                          l8944 3750  
                                        l8880 3618                                          l8872 35F6  
                                        l8856 35BE                                          l9832 2960  
                                        l9752 268E                                          l9672 23AE  
                                        l9648 228C                                          l9656 22AA  
                                        l9904 45C6                                          l8970 5462  
                                        l9578 41D0                                          l8882 361C  
                                        l8890 362E                                          l8858 35C2  
                                        l8778 34BC                                          l9498 4B6C  
                                        l9850 29B6                                          l9770 2774  
                                        l9738 25E4                                          l9666 2326  
                                        l9922 464E                                          l9914 4618  
                                        l8956 377E                                          l9860 2A0A  
                                        l9772 2796                                          l9764 2752  
                                        l9684 2400                                          l9668 2374  
                                        l9932 46AE                                          l8974 5478  
                                        l8958 3780                                          l9870 2A36  
                                        l9694 2428                                          l9918 4630  
                                        l9950 3E9A                                          STR_1 20C4  
                                        l9848 29AC                                          l9784 2816  
                                        l9688 2422                                          l9936 46C6  
                                        l9928 4694                                          l9960 3F86  
                                        STR_2 20D0                                          STR_3 206C  
                                        STR_4 2085                                          STR_5 20B2  
                                        l9980 4838                                          l9884 2A86  
                                        l9796 2844                                          STR_6 2022  
                                        STR_7 20F3                                          l9990 48BE  
                                        l8998 37C8                                          STR_8 20F6  
                                        STR_9 20F0                                          l9984 4884  
                                        l9976 4836                                          l9986 488C  
                                        l9996 48F8                                          l9988 4890  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _LATF 003FBF  
                                        _T6PR 003F93                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u9520 4EBE  
                                        u9540 4F06                                          u9550 569A  
                                        u9710 35DA                                          _PLLR 01CEE0  
                                        u9660 3586                                          u9557 568C  
                                        u9670 3596                                          u9920 375C  
                                        u9840 36EC                                          u9680 3598  
                                        u9860 3700                                          u9960 54AE  
                                        u9980 5A0A                                          u9990 5A0C  
                                        u9967 54A0                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                                        _WPUF 003A91                              __end_of_ADCC_ISR 57C2  
                                 main@mode_sw 00D7                           ?_UART1_Transmit_ISR 0001  
                                        _dbuf 0198                                          _cmdm 2006  
                                        _atoi 4824                                          _main 3A24  
                                        _ival 0194                                          _mode 00FD  
                             __end_of_Adc_Isr 59A8                                          _prec 00F9  
                                        _nout 00F5                                          pad@i 0030  
                                        pad@p 002D                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 0032                                          fsr2l 003FD9  
                                        _stoa 459C                                          _puts 5934  
                                        _vval 00D9                                          _utoa 3E3E  
                               ___fpclassifyf 4AF4                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 003F                               ___fldiv@new_exp 0026  
               ??_UART1_SetTxInterruptHandler 0018                             _UART1_rx_vect_isr 5880  
                                ___param_bank 000000                                   ?_UART1_Read 0001  
                          ?_UART1_rx_vect_isr 0001                                         ??_pad 002F  
                        ??_UART1_Transmit_ISR 000B                 __end_of_OSCILLATOR_Initialize 5C4E  
                                       l10100 2E28                                         l10020 2B0A  
                                       l10030 2B1C                                         l10022 2B14  
                                       l10104 2E52                                         l10130 2FA0  
                                       l10114 2ED2                                         l10122 2F22  
                                       l10042 2B2E                                         l10034 2B20  
                                       l10026 2B18                                         l10018 2B08  
                                       l10140 3008                                         l10044 2B74  
                                       l10062 2C0E                                         l10038 2B24  
                                       l10224 5832                                         l10080 2CF6  
                                       l10056 2BEE                                         l10154 30EC  
                                       l10074 2CD6                                         l10058 2C06  
                                       l10500 4D9E                                         l10148 30B2  
                                       l10092 2DB8                                         l10076 2CEE  
                                       l10164 310A                                         l10270 4544  
                                       l10158 30F8                                         l10190 552E  
                                       l10272 4576                                         l10264 4508  
                                       l10192 5550                                         l10442 5B3E  
                                       l10258 449C                                         l10522 433A  
                                       l10532 43C6                                         l10540 4424  
                                       l10470 3DBE                                         l10278 4592  
                                       l10518 4310                                         l10702 3C72  
                                       l10622 3A94                                         l10560 4750  
                                       l10464 3CBE                                         l10632 3AC2  
                                       l10616 3A78                                         l10562 4756  
                                       l10554 4732                                         l10458 3C9E  
                                       l10650 3B00                                         l10626 3AA8  
                                       l10572 47C6                                         l10564 4762  
                                       l10468 3DBC                                         l10652 3B06  
                                       l10644 3AEE                                         l10636 3AD6  
                                       l10628 3AAE                                         l10590 4812  
                                       l10574 47D2                                         l10566 4788  
                                       l10662 3BF6                                         l10646 3AF4  
                                       l10638 3ADC                                         l10672 3C0E  
                                       l10666 3C00                                         l10658 3BEC  
                                       l10676 3C12                                         l10668 3C04  
                                       l10686 3C26                                         l10688 3C4A  
                               ___fltol@sign1 001D                                         _ADACT 003EFE  
                                       _ADCAP 003EF5                                         ?_atoi 001C  
                             __end_of___fladd 379C                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 3A24  
                                       _ADREF 003EFD                               __end_of___awdiv 5376  
                             __end_of___flneg 5A70                                         STR_10 209D  
                                       STR_11 20C1                                         STR_20 20ED  
                                       STR_12 20D9                                         STR_13 20E1  
                                       STR_22 20ED                                         STR_16 20DD  
                                       STR_25 20E9                                         STR_17 20E5  
                                       STR_27 20E9                               __end_of___awmod 5458  
                                       _ADRPT 003EEC                               __end_of___flmul 3490  
                             __end_of___flsub 573C                               __end_of___fltol 4D40  
                                       ?_stoa 0020                                         ?_puts 0029  
                                       ?_utoa 0060                                         u11000 5A3A  
                                       u10200 39CE                                         u11010 5A3C  
                                       u10210 39F2                                         u11100 4262  
                                       u10300 31CC                                         u11110 4294  
                                       u11030 57F4                                         u11120 42BE  
                                       u10160 3972                                         u11130 42EA  
                                       u11050 41FA                                         u11115 428E  
                                       u11107 4254                                         u10500 5422  
                                       u10340 33CC                                         u11300 2440  
                                       u11117 4280                                         u11070 422A  
                                       u11127 42B0                                         u10440 5338  
                                       u11240 23D6                                         u11160 215E  
                                       u11137 42DC                                         u11057 41EC  
                                       u12210 3DFA                                         u12050 5CF6  
                                       u11410 267E                               __end_of___lodiv 4AF4  
                                       u10380 3428                                         u10620 4C92  
                                       u11340 248E                               ___awdiv@divisor 0017  
                                       u11077 421C                                         u10550 5266  
                                       u10390 3446                                         u10630 4CC2  
                                       u11270 240E                                         u10710 4A64  
                                       u12320 47DC                                         u12208 3DA8  
                                       u10800 4B32                                         u12400 3ACE  
                                       u12145 5770                                         u12146 5772  
                                       u11610 2A7E                                         u11530 2942  
                                       _U1P1H 003DED                                         u10635 4CB8  
                                       u10900 4034                                         u10740 4F94  
                                       _U1P2H 003DEF                                         u12181 3CB8  
                                       u10805 4B28                                         u11621 45A6  
                                       u10670 4D18                                         u10910 4054  
                                       u11710 46DA                                         _U1P3H 003DF1  
                                       _U1P1L 003DEC                                         _U1P2L 003DEE  
                                       u10905 402A                                         u11810 492A  
                                       u10850 4BAE                                         u11730 3E50  
                                       _U1P3L 003DF0                                         u10691 4A2C  
                                       u10860 4BB0                                         u10845 4B90  
                                       u10950 40E6                                         u10870 5516  
                                       u11590 2A20                                         u11670 4644  
                                       u11910 2D30                                         u10935 407E  
                                       u10936 4084                                         u11680 4678  
                                       u11760 3FB2                                         u10937 4092  
                                       u11761 3FB0                                         u10970 4140  
                                       u11770 3FC0                                         u10955 40DC  
                                       u11780 3FC4                                         u10877 5508  
                                       u10975 4136                                         u11687 466A  
                                       _T5CLK 003F9D                                         u11880 2C48  
                             __end_of___lomod 5010                                         u11980 2F78  
                                       _T5CON 003F9A                                         _T6CON 003F94  
                                       _T6HLT 003F95                                         _U1UIR 003DF8  
                                       _U1RXB 003DE8                                         _U1TXB 003DEA  
                      __end_of_DAC1_SetOutput 5D8A                                         _T6TMR 003F92  
                                       i2l454 59D4                                         i2l640 5A98  
                                       i2l721 5BA0                                         _T6RST 003F97  
                         ??_UART1_rx_vect_isr 000D                               ___awdiv@counter 0019  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00B1  
                                vfpfcnvrt@llu 00B8                                         _TMR5H 003F99  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                       _TRISF 003FC7                                   _Default_ISR 5DA0  
                   ?_TMR6_SetInterruptHandler 0015                             _UART1_tx_vect_isr 5840  
                            __end_of_TMR5_ISR 5662                              __end_of_TMR6_ISR 59E2  
                                       _buff1 0300                                         _fh_po 5C80  
                                       _fh_pr 5B42                                         _fh_ps 5C98  
                                       _flags 003D                                         _fputc 4EAE  
                                       _fputs 5458                               __end_of_isdigit 5A42  
                             ?_DAC1_GetOutput 0001                            ?_UART1_tx_vect_isr 0001  
                                       atoi@n 0024                                         pad@fp 0029  
                                       atoi@s 001C                                         _width 00F7  
                                       _putch 5D76                               __end_of_isspace 5800  
                             __end_of_isupper 5A12                                         pclath 003FFA  
                                       pclatu 003FFB                                         tablat 003FF5  
                                       plusw1 003FE3                                         plusw2 003FDB  
                                       stoa@i 002C                                         stoa@l 0034  
                                       stoa@p 0032                                         stoa@s 0022  
                                       stoa@w 002E                                         puts@s 0029  
                                       utoa@d 0062                                         utoa@i 007E  
                                       utoa@n 0076                                         utoa@p 0072  
                                       utoa@w 0074                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 5D16                   _UART1_SetRxInterruptHandler 5D08  
                             __end_of_sprintf 5612                                ?___fpclassifyf 0015  
                             __end_of_tolower 5934                               __end_of_strncmp 42FA  
                            ___lodiv@dividend 0015      __end_of_UART1_DefaultFramingErrorHandler 5DA6  
          ??_UART1_DefaultFramingErrorHandler 000D             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5DA4                           ??_UART1_tx_vect_isr 000B  
                   __end_of_UART1_rx_vect_isr 58BE                ??_TMR6_DefaultInterruptHandler 0008  
                             _TMR5_Initialize 56AE                               __initialization 50B2  
                                __end_of_cmdm 2022                                  __end_of_atoi 4956  
                                __end_of_main 3C7A                       __end_of_DAC1_Initialize 5D76  
                                __end_of_stoa 46E4                                  __end_of_puts 596E  
                                __end_of_utoa 3FEE                   ??_UART1_DefaultErrorHandler 000D  
                                ?_UART1_Write 0001                                        ??_atoi 001E  
                                      ??_main 00D5                      _TMR5_SetInterruptHandler 5D4E  
                                      ??_stoa 0024                                        ??_puts 002B  
                                      ??_utoa 006A                                 __activetblptr 000003  
                             ?_DAC1_SetOutput 0001                     __end_of_UART1_tx_vect_isr 587E  
                            ___lodiv@quotient 0025                               _TMR6_Initialize 5A9E  
                            _UART1_Initialize 4DF8                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        ?_fh_po 002C  
                                      ?_fh_pr 002C                                        ?_fh_ps 002C  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                     ??_Adc_Isr 0005  
                                      ?_fputc 0017                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 0020  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0015                                        _ADUTHL 003EE0  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _ANSELF 003A90                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RD1I2C 003A7B  
                                      _RC3I2C 003A6A                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                            __cli_interpret_cmd 3C7A  
                                      _RC3PPS 003A13                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _RC6PPS 003A16                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      _ODCONF 003A92                                        i2l6300 557A  
                                      i2l6304 55AC                                        i2l6208 5A94  
                                      i2l6240 599A                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l6228 50AC                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        _INLVLF 003A94  
                                      i2l5922 5C10                                        _OSCFRQ 0039DF  
                               vfpfcnvrt@done 00C2                         _UART1_SetErrorHandler 5D32  
                            __end_of___xxtofl 4824                    ??_ADCC_GetConversionResult 0003  
                         ?__cli_interpret_cmd 002E                              __end_of_cli_init 52F2  
                            __end_of_cli_read 4450                       DAC1_SetOutput@inputData 0015  
                                vfprintf@cfmt 0038                                        ___flge 4956  
                                      ___fleq 51E4                                     ??___fladd 001D  
                                      ___wmul 5ACA                                     ??___fldiv 001D  
                                   ??___awdiv 0019                                     ??___flneg 0019  
                                   ??___awmod 0019                                        _g_cmds 01EF  
                                   ??___flmul 002B                                     ??___flsub 0037  
                                   ??___fltol 0019                                     ??___lodiv 0025  
                                   ??___lomod 0025                                        _efgtoa 20FA  
                                      _floorf 3FEE                                        _memset 4450  
                                      clear_0 5100                                        clear_1 5112  
                                      clear_2 511E                                        clear_3 512A  
                                      clear_4 5136                              ___awdiv@quotient 001B  
                             ___awmod@divisor 0017                                    _Timers_Isr 5572  
                                      isa$std 000001                               ___awmod@counter 0019  
                                      _printf 5BAE                                        pad@buf 002B  
                                      _strcpy 54C0                                     ?_ADCC_ISR 0001  
                                      _strlen 5662                               _ADCC_Initialize 5376  
                                      fputc@c 0017                                _PMD_Initialize 5BD0  
                        ??__cli_interpret_cmd 0060                                        fputs@c 0026  
                                      fputs@i 0027                                        fputs@s 0020  
                                   ??_isdigit 0017                               ___fpclassifyf@e 001D  
                             ___fpclassifyf@u 001F                               ___fpclassifyf@x 0015  
                                __mediumconst 0000                                     ??_isspace 0017  
                                      tblptrh 003FF7                                     ??_isupper 0017  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                                      stoa@cp 0030                                        stoa@fp 0020  
                            __end_of_vfprintf 5572                                        utoa@fp 0060  
    TMR5_SetInterruptHandler@InterruptHandler 0015   UART1_SetTxInterruptHandler@InterruptHandler 0015  
 UART1_SetRxInterruptHandler@InterruptHandler 0015      TMR6_SetInterruptHandler@InterruptHandler 0015  
 ADCC_SetADIInterruptHandler@InterruptHandler 0015          __end_of_UART1_SetOverrunErrorHandler 5D24  
                _UART1_SetOverrunErrorHandler 5D16                     _UART1_DefaultErrorHandler 5D90  
                                   ??_sprintf 0039                                     ??_tolower 001D  
                                   ??_strncmp 001F                                    ___flge@ff1 002F  
                                  ___flge@ff2 0033                               ??___fpclassifyf 0019  
                     __end_of_TMR5_Initialize 56F6                                  ___xxtofl@arg 001F  
                                ___xxtofl@exp 001E                             _SYSTEM_Initialize 5AF4  
                                ___xxtofl@val 0015                                    ___fleq@ff1 0015  
                                  ___fleq@ff2 0019                                    __accesstop 0060  
                     __end_of__initialization 5148                                    ___flneg@f1 0015  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                                  ___fltol@f1 0015                               _TMR5_WriteTimer 5B8A  
                           __end_of_Led_Blink 5C32                                __pcstackCOMRAM 0001  
                                __pidataBANK0 5D96                                  __pidataBANK1 5CB0  
                         ??_SYSTEM_Initialize 001A                              ?_DAC1_Initialize 0001  
                               __end_of_fh_po 5C98                                 __end_of_fh_pr 5B66  
                               __end_of_fh_ps 5CB0                                     ?_TMR5_ISR 0001  
                                   ?_TMR6_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 4F62                                 __end_of_fputs 54C0  
                           ??_SPI1_Initialize 0015                                 __end_of_putch 5D80  
                     __end_of_TMR6_Initialize 5ACA                        __end_of_PMD_Initialize 5BF2  
                                  ??_ADCC_ISR 0006                         __end_of_TMR6_CallBack 5B8A  
                          _spi1_configuration 2001                         TMR6_ISR@CountCallBack 0041  
                   _UART1_FramingErrorHandler 00E6                                       ??_fh_po 002E  
                                     ??_fh_pr 002E                                       ??_fh_ps 002E  
                                     ??_fputc 001B                     __end_of_SYSTEM_Initialize 5B1E  
                                     ??_fputs 0024                               linux_putc@a_len 002E  
                                     ??_putch 0016                                    __pbssBANK0 00D9  
                                  __pbssBANK1 0100                                    __pbssBANK2 0200  
                                  __pbssBANK3 0300                 ?_UART1_SetOverrunErrorHandler 0015  
                      ?_UART1_SetErrorHandler 0015                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                            linux_getc@a_data 0016                                cli_init@a_cmds 02D9  
                                     ?___flge 002F                                       ?___fleq 0015  
                                ??_UART1_Read 0015                                       ?___wmul 0015  
            __end_of_TMR6_SetInterruptHandler 5D4E                       __end_of_ADCC_Initialize 53E8  
                                  ??_TMR5_ISR 0013                                    ??_TMR6_ISR 0009  
                                     ?_efgtoa 0071                                       _ADFLTRH 003EE7  
                                     ?_floorf 002E                                       _ADFLTRL 003EE6  
                                     ?_memset 0015                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                                   ?_Timers_Isr 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 02C3                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 5010                                       ?_strcpy 0015  
                                     ?_strlen 0015                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                              ??_DAC1_GetOutput 0015  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0015  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                     _IVTLOCK 003FD4                                       _SPI1CLK 003D1C  
                                   ?_cli_init 02D7                                     ?_cli_read 0032  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                     _SLRCONF 003A93                                       _Adc_Isr 596E  
                                  _build_date 00FF                           ??_UART1_Receive_ISR 000D  
                                  _build_time 00FE                              ___lomod@dividend 0015  
                     __end_of_TMR5_WriteTimer 5BAE                            __end_of_UART1_Read 583E  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0015  
                                     __Hparam 0000                                       __Lparam 0000  
                    __end_of_UART1_Initialize 4EAE                    ??_TMR5_SetInterruptHandler 0018  
                    __cli_interpret_cmd@a_ctx 002E                                       ___fladd 3490  
                                     ___fldiv 379C                                       ___awdiv 52F2  
                                     ___flneg 5A42                                       ___awmod 53E8  
                                     ___flmul 313E                                       ___flsub 56F6  
                                     ___fltol 4C86                                       ___lodiv 4A26  
                                     ___lomod 4F62                              ??_DAC1_SetOutput 0015  
                   __end_of_UART1_Receive_ISR 50B2                                     ?_vfprintf 00CE  
                                __psmallconst 2000                                       __pcinit 50B2  
                            ?_TMR6_Initialize 0001                                       __ramtop 2000  
                                     _cli_ctx 0240                                       __ptext0 3A24  
                                     __ptext1 5C68                                       __ptext2 526E  
                                     __ptext3 55C4                                       __ptext4 5BAE  
                                     __ptext5 5520                                       __ptext6 2AC6  
                                     __ptext7 3E3E                                       __ptext8 4F62  
                                     __ptext9 4A26                         _OSCILLATOR_Initialize 5C32  
                                     _isdigit 5A12                                    ??___xxtofl 0019  
                            ___awmod@dividend 0015                      ??_PIN_MANAGER_Initialize 0015  
                                     _isspace 57C2                                   Timers_Isr@i 0011  
                                   _T5CONbits 003F9A                                       _isupper 59E2  
                                     efgtoa@c 0077                                       efgtoa@d 008F  
                                     efgtoa@e 00A7                                       efgtoa@f 0073  
                                     efgtoa@g 00A1                                       efgtoa@h 0099  
                                     efgtoa@i 00A5                                       efgtoa@l 009D  
                                     efgtoa@m 0089                                       efgtoa@n 00A9  
                                     efgtoa@p 0093                                       efgtoa@t 0083  
                                     efgtoa@u 00AB                                       efgtoa@w 0096  
                                  ??_cli_init 0039                                    ??_cli_read 0034  
                                     atoi@neg 0022                                    _linux_getc 5B1E  
                                     _sprintf 55C4                                       _tolower 58FA  
                                  _linux_putc 5CDE                             __end_of_scmd_init 5C80  
                                     _strncmp 4198                          end_of_initialization 5148  
                                     floorf@e 0064                                       floorf@m 0060  
                                     floorf@u 0066                                       floorf@x 002E  
                                     fputc@fp 0019                                       memset@c 0017  
                                     memset@k 001D                                       memset@n 0019  
                                     memset@s 001F           __end_of_UART1_SetTxInterruptHandler 5D08  
                 _UART1_SetTxInterruptHandler 5CFA                                       fputs@fp 0022  
                              display_led@led 0017                ??_UART1_SetOverrunErrorHandler 0018  
                           __end_of_vfpfcnvrt 313E                                    efgtoa@mode 0098  
                                  efgtoa@sign 0091                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                                  ??_vfprintf 0038                             UART1_Write@txData 0015  
                         _UART1_RxDataHandler 5BF2                                       strcpy@d 001D  
                                     strlen@a 0017                                       strcpy@s 001B  
                                     strlen@s 0015                                     _PORTAbits 003FCA  
                                   _PORTBbits 003FCB                      _TMR6_SetInterruptHandler 5D40  
                       _TMR5_InterruptHandler 00DD                                   ___fladd@grs 0024  
         __end_of_ADCC_SetADIInterruptHandler 5D6A                   _ADCC_SetADIInterruptHandler 5D5C  
                               ___xxtofl@sign 001D                                     _TRISCbits 003FC4  
                                 ___fldiv@grs 0028                                   ___fldiv@rem 0021  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 000F  
                     TMR5_WriteTimer@timerVal 000F                                   ___flmul@grs 0063  
               ??_ADCC_SetADIInterruptHandler 0018                               _SPI1_Initialize 5C4E  
                __end_of_INTERRUPT_Initialize 5780                                     _Led_Blink 5C14  
                               ??_display_led 0015                ??_ADCC_DefaultInterruptHandler 0001  
                              __end_of___flge 4A26                                __end_of___fleq 526E  
                                 vfpfcnvrt@ap 00B2                                   vfpfcnvrt@cp 00C0  
                                 vfpfcnvrt@ct 00CB                                   vfpfcnvrt@fp 00AF  
                              __end_of___wmul 5AF4                                __end_of_efgtoa 2AC6  
                              __end_of_floorf 4198                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F526 018C                                __end_of_memset 459C  
                   ?_ADCC_GetConversionResult 0001                                __end_of_printf 5BD0  
                              __end_of_strcpy 5520                                __end_of_strlen 56AE  
                         start_initialization 50B2                               ___lodiv@divisor 001D  
                             ___lodiv@counter 002D          __end_of_TMR5_DefaultInterruptHandler 5DA8  
                _TMR5_DefaultInterruptHandler 5DA6                                   __end_of_pad 51E4  
                     ??_UART1_SetErrorHandler 0018                                   ?_linux_getc 0016  
                                 ?_linux_putc 002C                         ??_UART1_RxDataHandler 000D  
                                 putch@txData 0016                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0200                         __end_of___fpclassifyf 4BC0  
                               _uart1TxBuffer 0140                                   vfprintf@fmt 00D0  
                                    ??___flge 006D                                      ??___fleq 001D  
                            ??_PMD_Initialize 0015                                      ??___wmul 0019  
                                  ?_Led_Blink 0001                                      ??_efgtoa 0078  
                                 __pdataBANK0 00FD                                   __pdataBANK1 01E8  
                                    ??_floorf 0032                                      ??_memset 001B  
                                ??_Timers_Isr 000F                                    memset@dest 0015  
                                    ??_printf 0039                                      ??_strcpy 0019  
                                    ??_strlen 0017                                     ___fladd@a 0019  
                                   ___fladd@b 0015                                     ___fldiv@a 0019  
                                   ___fldiv@b 0015                           __end_of_display_led 4DF8  
                                   ___flmul@a 0027                                     ___flmul@b 0023  
                                 __pbssCOMRAM 0039                                     ___flsub@a 0033  
                                   ___flsub@b 002F                            _UART1_ErrorHandler 00E0  
                               __pcstackBANK0 0060                                 __pcstackBANK2 02C3  
                     __end_of_SPI1_Initialize 5C68                      _UART1_RxInterruptHandler 00F2  
               ?_TMR5_DefaultInterruptHandler 0001                                      ?_Adc_Isr 0001  
                              linux_putc@data 002C                  ?_UART1_SetRxInterruptHandler 0015  
                          __end_of_Timers_Isr 55C4                         _TMR6_InterruptHandler 00E9  
                                 _efgtoa$2731 007F                                   _efgtoa$2723 007D  
                                 _efgtoa$2732 0081                        _PIN_MANAGER_Initialize 4BC0  
                               cli_init@a_ctx 02D7                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 5D32                  _UART1_SetFramingErrorHandler 5D24  
                               cli_read@a_ctx 0032                                      ?___fladd 0015  
                         UART1_Read@readValue 0015                                      ?___fldiv 0015  
                                    ?___awdiv 0015                                      ?___flneg 0015  
                                    ?___awmod 0015                                      ?___flmul 0023  
                                    ?___flsub 002F                                      ?___fltol 0015  
                                    ?___lodiv 0015                                      ?___lomod 0015  
                          ??_UART1_Initialize 0018                              _uart1RxLastError 0045  
                               _cli_read$2151 006A                                 ??_UART1_Write 0015  
                                    _DAC1CON0 003E9E                                      _DAC1CON1 003E9C  
                                   _disp_tick 00FC                                      _ADCC_ISR 5780  
                             ___lomod@divisor 001D                                   __smallconst 2000  
                             ___lomod@counter 0025      __end_of_UART1_DefaultOverrunErrorHandler 5DA4  
          ??_UART1_DefaultOverrunErrorHandler 000D             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 5DA2                                      ?_isdigit 0015  
                                    ?_isspace 0015                                      ?_isupper 0015  
                                    ?_sprintf 02C3                                      ?_tolower 001B  
                                    ?_strncmp 0019                                   _U1ERRIRbits 003DF9  
                        _INTERRUPT_Initialize 573C                                      _T6CLKCON 003F96  
                        __cli_interpret_cmd@i 0031                                ___wmul@product 0019  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0015  
                                    _LATDbits 003FBD                                      _LATEbits 003FBE  
                                   _scmd_init 5C68                                      _LATFbits 003FBF  
                                    _IPR1bits 003981                                      _PIE1bits 003991  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                   _tickCount 0180                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                   cli_read@i 006C                 ??_UART1_SetRxInterruptHandler 0018  
                                    _PIR1bits 0039A1                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      i2u611_48 5096  
                                    i2u603_48 5B76                                      i2u631_40 59C8  
                                    i2u630_48 57A0                                      i2u630_49 57B4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                      i2u607_48 503A  
                                    i2u607_49 5050                                     _puts$2914 002B  
                                    i2u618_40 55C2                                      i2u609_48 506A  
                                    i2u633_48 585C                                      i2u609_49 5080  
                                    i2u633_49 5870                                      i2u635_48 589C  
                                    i2u635_49 58B0                                      i2u637_48 5640  
                                    i2u637_49 5654                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      i2u594_40 5C1C  
                                    i2u594_46 5C1E                    ??_TMR6_SetInterruptHandler 0018  
                                 ??_Led_Blink 0008                    __end_of_UART1_Transmit_ISR 5A9E  
                                    _TMR5_ISR 5614                                      _TMR6_ISR 59A8  
               ?_UART1_SetFramingErrorHandler 0015                                   _display_led 4D40  
                                   _vfpfcnvrt 2AC6                             ___wmul@multiplier 0015  
                                   main@dac_v 00D8                                 _TMR6_CallBack 5B66  
                   ?_TMR5_SetInterruptHandler 0015                           __end_of_UART1_Write 58FA  
                                _isspace$2835 001B                                    vfpfcnvrt@c 00C6  
                                  vfpfcnvrt@f 00C7                              ?_SPI1_Initialize 0001  
                                 _INTCON0bits 003FD2                                     copy_data0 50C6  
                       ?_INTERRUPT_Initialize 0001                             ??_DAC1_Initialize 0015  
                      _uart1TxBufferRemaining 0049                ??_TMR5_DefaultInterruptHandler 000F  
                                  ?_scmd_init 0001                                  _uart1RxCount 0046  
                                    __Hrparam 0000              __end_of_ADCC_GetConversionResult 5CDE  
                                  vfprintf@ap 00D1                                      __Lrparam 0000  
                                  vfprintf@fp 00CE                       ??_OSCILLATOR_Initialize 0015  
                                  ?_vfpfcnvrt 00AF                                      _adc_chan 0044  
                                    _adc_tick 00FB                                ?_TMR6_CallBack 0001  
                          ___fpclassifyf@F465 0190                                    sprintf@fmt 02C5  
                                    ___xxtofl 46E4                                      __pivt0x8 0008  
                                    _cli_init 526E                                      _cli_read 42FA  
                                    __ptext10 459C                                      __ptext11 20FA  
                                    __ptext20 3490                                      __ptext12 58FA  
                                    __ptext21 5A42                                      __ptext13 59E2  
                                    __ptext30 5A12                                      __ptext22 313E  
                                    __ptext14 54C0                                      __ptext31 5ACA  
                                    __ptext23 4956                                      __ptext15 514E  
                                    __ptext40 4198                                      __ptext32 4D40  
                                    __ptext24 51E4                                      __ptext16 3FEE  
                                    __ptext41 5662                                      __ptext33 42FA  
                                    __ptext25 379C                                      __ptext17 4AF4  
                                    __ptext50 46E4                                      __ptext42 5C80  
                                    __ptext34 4450                                      __ptext26 53E8  
                                    __ptext18 4C86                                      __ptext51 5AF4  
                                    __ptext43 5B42                                      __ptext35 5CDE  
                                    __ptext27 52F2                                      __ptext19 56F6  
                                    __ptext60 56AE                                      __ptext52 4DF8  
                                    __ptext44 5C98                                      __ptext36 5B1E  
                                    __ptext28 4824                                      __ptext61 5D4E  
                                    __ptext53 5CFA                                      __ptext45 5934  
                                    __ptext37 5CEC                                      __ptext29 57C2  
                                    __ptext70 5D80                                      __ptext62 5C4E  
                                    __ptext54 5D08                                      __ptext46 5458  
                                    __ptext38 5800                                      __ptext71 5D8A  
                                    __ptext63 5BD0                                      __ptext55 5D16  
                                    __ptext47 4EAE                                      __ptext39 3C7A  
                                    __ptext80 5DA0                                      __ptext72 5780  
                                    __ptext64 4BC0                                      __ptext56 5D24  
                                    __ptext48 5D76                                      __ptext81 5840  
                                    __ptext73 5D9A                                      __ptext65 5C32  
                                    __ptext57 5D32                                      __ptext49 58BE  
                                    __ptext90 5DA6                                      __ptext82 5A70  
                                    __ptext74 596E                                      __ptext66 573C  
                                    __ptext58 5A9E                                      __ptext91 5572  
                                    __ptext83 5880                                      __ptext75 5CC8  
                                    __ptext67 5D6A                                      __ptext59 5D40  
                                    __ptext92 5B8A                                      __ptext84 5010  
                                    __ptext76 59A8                                      __ptext68 5376  
                                    __ptext93 0000                                      __ptext85 5DA2  
                                    __ptext77 5B66                                      __ptext69 5D5C  
                                    __ptext86 5DA4                                      __ptext78 5C14  
                                    __ptext87 5D90                                      __ptext79 5D9C  
                                    __ptext88 5BF2                                      __ptext89 5614  
                                ??_linux_getc 0017                                  ??_linux_putc 002F  
               __end_of_UART1_SetErrorHandler 5D40                                    strcpy@dest 0015  
                      __cli_interpret_cmd@ret 0030                                   _IVTLOCKbits 003FD4  
                                    efgtoa@fp 0071                                      efgtoa@ne 0087  
                                    efgtoa@pp 0085                                      efgtoa@ou 008B  
                   _UART1_OverrunErrorHandler 00E3                     _ADCC_ADI_InterruptHandler 00EC  
                                   stoa@F1164 01E8  UART1_SetOverrunErrorHandler@interruptHandler 0015  
                                    isa$xinst 000000                    ?_UART1_DefaultErrorHandler 0001  
                                    _vfprintf 5520                                     printf@fmt 02C3  
                          __end_of_linux_getc 5B42                             _UART1_is_rx_ready 5CEC  
                          __end_of_linux_putc 5CEC                                   _UART1_Write 58BE  
                  __end_of__cli_interpret_cmd 3E3E                             ??_TMR5_Initialize 0018  
                          ?_UART1_is_rx_ready 0001                                 ??_Default_ISR 000B  
              ??_UART1_SetFramingErrorHandler 0018                                _vfpfcnvrt$2770 00C4  
                 __end_of_UART1_RxDataHandler 5C14                                   _uart1RxHead 0048  
                                 _uart1TxHead 004B                                   _uart1RxTail 0047  
                                 fh_po@a_data 002C                                   _uart1TxTail 004A  
                                    isdigit@c 0015                        ??_INTERRUPT_Initialize 0015  
                                 fh_pr@a_data 002C                           ??_UART1_is_rx_ready 0015  
                                 fh_ps@a_data 002C          __end_of_TMR6_DefaultInterruptHandler 5D9E  
                _TMR6_DefaultInterruptHandler 5D9C          __end_of_ADCC_DefaultInterruptHandler 5D9C  
                _ADCC_DefaultInterruptHandler 5D9A                                      intlevel2 0000  
                                   sprintf@ap 02CA                                      isspace@c 0015  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0018  
                                 ??_scmd_init 0039                                     strcpy@src 0017  
                                    isupper@c 0015                                     strncmp@_l 0019  
                                   strncmp@_r 001B                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 0095                                    _SPI1SDIPPS 003ADF  
                                  _SPI1SCKPPS 003ADE                                      printf@ap 00D3  
                   __end_of_UART1_is_rx_ready 5CFA                                    _UART1_Read 5800  
UART1_SetFramingErrorHandler@interruptHandler 0015                      _ADCC_GetConversionResult 5CC8  
           __end_of_UART1_DefaultErrorHandler 5D96                                   ??_vfpfcnvrt 00B4  
                                    stoa@nuls 0025                               ??_TMR6_CallBack 0009  
                                    sprintf@f 02CC                                      tolower@c 001B  
                                    sprintf@s 02C3                                      strncmp@l 0021  
                                    strncmp@n 001D                                      strncmp@r 0023  
                    _UART1_TxInterruptHandler 00EF                                 ___fladd@signs 0021  
                         __end_of_Default_ISR 5DA2                __end_of_PIN_MANAGER_Initialize 4C86  
                           ??_ADCC_Initialize 0018                                _DAC1_GetOutput 5D8A  
               ?_TMR6_DefaultInterruptHandler 0001                                  ___fladd@aexp 0022  
                                ___fladd@bexp 0023                 ?_ADCC_DefaultInterruptHandler 0001  
                ?_UART1_SetTxInterruptHandler 0015                    __end_of_spi1_configuration 2006  
