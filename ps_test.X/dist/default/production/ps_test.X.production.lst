

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 14 22:11:24 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=3
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=3
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=3
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=4,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=4,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=4,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=4,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=4,class=CODE,delta=1
   158                           	psect	text132,global,reloc=4,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=4,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=4,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=4,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   170                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   171                           	psect	text143,global,reloc=2,class=CODE,delta=1
   172                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   173                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   174                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   175  0000                     
   176                           ; Version 2.40
   177                           ; Generated 17/11/2021 GMT
   178                           ; 
   179                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   180                           ; All rights reserved.
   181                           ; 
   182                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   183                           ; 
   184                           ; Redistribution and use in source and binary forms, with or without modification, are
   185                           ; permitted provided that the following conditions are met:
   186                           ; 
   187                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   188                           ;        conditions and the following disclaimer.
   189                           ; 
   190                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   191                           ;        of conditions and the following disclaimer in the documentation and/or other
   192                           ;        materials provided with the distribution. Publication is not required when
   193                           ;        this file is used in an embedded application.
   194                           ; 
   195                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   196                           ;        software without specific prior written permission.
   197                           ; 
   198                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   199                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   200                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   201                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   202                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   203                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   204                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   205                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   206                           ; 
   207                           ; 
   208                           ; Code-generator required, PIC18F57K42 Definitions
   209                           ; 
   210                           ; SFR Addresses
   211  0000                     
   212                           	psect	idataBIGRAM
   213  011BE2                     __pidataBIGRAM:
   214                           	callstack 0
   215                           
   216                           ;initializer for _port_data
   217  011BE2  FF                 	db	255
   218  011BE3  00                 	db	0
   219  011BE4  FF                 	db	255
   220  011BE5  00                 	db	0
   221  011BE6  FF                 	db	255
   222  011BE7  00                 	db	0
   223  011BE8  FF                 	db	255
   224  011BE9  00                 	db	0
   225  011BEA  FF                 	db	255
   226  011BEB  00                 	db	0
   227  011BEC  FF                 	db	255
   228  011BED  00                 	db	0
   229  011BEE  FF                 	db	255
   230  011BEF  00                 	db	0
   231  011BF0  FF                 	db	255
   232  011BF1  00                 	db	0
   233  011BF2  00                 	db	0
   234  011BF3  00                 	db	0
   235  011BF4  00                 	db	0
   236  011BF5  00                 	db	0
   237  011BF6  00                 	db	0
   238  011BF7  00                 	db	0
   239  011BF8  00                 	db	0
   240  011BF9  00                 	db	0
   241  011BFA  00                 	db	0
   242  011BFB  00                 	db	0
   243  011BFC  00                 	db	0
   244  011BFD  00                 	db	0
   245  011BFE  00                 	db	0
   246  011BFF  00                 	db	0
   247  011C00  00                 	db	0
   248  011C01  00                 	db	0
   249  011C02  00                 	db	0
   250  011C03  00                 	db	0
   251  011C04  00                 	db	0
   252  011C05  00                 	db	0
   253  011C06  00                 	db	0
   254  011C07  00                 	db	0
   255  011C08  00                 	db	0
   256  011C09  00                 	db	0
   257  011C0A  00                 	db	0
   258  011C0B  00                 	db	0
   259  011C0C  00                 	db	0
   260  011C0D  00                 	db	0
   261  011C0E  00                 	db	0
   262  011C0F  00                 	db	0
   263  011C10  00                 	db	0
   264  011C11  00                 	db	0
   265  011C12  00                 	db	0
   266  011C13  00                 	db	0
   267  011C14  00                 	db	0
   268  011C15  00                 	db	0
   269  011C16  00                 	db	0
   270  011C17  00                 	db	0
   271  011C18  00                 	db	0
   272  011C19  00                 	db	0
   273  011C1A  00                 	db	0
   274  011C1B  00                 	db	0
   275  011C1C  00                 	db	0
   276  011C1D  00                 	db	0
   277  011C1E  00                 	db	0
   278  011C1F  00                 	db	0
   279  011C20  00                 	db	0
   280  011C21  00                 	db	0
   281  011C22  00                 	db	0
   282  011C23  00                 	db	0
   283  011C24  00                 	db	0
   284  011C25  00                 	db	0
   285  011C26  00                 	db	0
   286  011C27  00                 	db	0
   287  011C28  00                 	db	0
   288  011C29  00                 	db	0
   289  011C2A  00                 	db	0
   290  011C2B  00                 	db	0
   291  011C2C  00                 	db	0
   292  011C2D  00                 	db	0
   293  011C2E  00                 	db	0
   294  011C2F  00                 	db	0
   295  011C30  00                 	db	0
   296  011C31  00                 	db	0
   297  011C32  00                 	db	0
   298  011C33  00                 	db	0
   299  011C34  00                 	db	0
   300  011C35  00                 	db	0
   301  011C36  00                 	db	0
   302  011C37  00                 	db	0
   303  011C38  00                 	db	0
   304  011C39  00                 	db	0
   305  011C3A  00                 	db	0
   306  011C3B  00                 	db	0
   307  011C3C  00                 	db	0
   308  011C3D  00                 	db	0
   309  011C3E  00                 	db	0
   310  011C3F  00                 	db	0
   311  011C40  00                 	db	0
   312  011C41  00                 	db	0
   313  011C42  00                 	db	0
   314  011C43  00                 	db	0
   315  011C44  00                 	db	0
   316  011C45  00                 	db	0
   317  011C46  00                 	db	0
   318  011C47  00                 	db	0
   319  011C48  00                 	db	0
   320  011C49  00                 	db	0
   321  011C4A  00                 	db	0
   322  011C4B  00                 	db	0
   323  011C4C  00                 	db	0
   324  011C4D  00                 	db	0
   325  011C4E  00                 	db	0
   326  011C4F  00                 	db	0
   327  011C50  00                 	db	0
   328  011C51  00                 	db	0
   329  011C52  00                 	db	0
   330  011C53  00                 	db	0
   331  011C54  00                 	db	0
   332  011C55  00                 	db	0
   333  011C56  00                 	db	0
   334  011C57  00                 	db	0
   335  011C58  00                 	db	0
   336  011C59  00                 	db	0
   337  011C5A  00                 	db	0
   338  011C5B  00                 	db	0
   339  011C5C  00                 	db	0
   340  011C5D  00                 	db	0
   341  011C5E  00                 	db	0
   342  011C5F  00                 	db	0
   343  011C60  00                 	db	0
   344  011C61  00                 	db	0
   345  011C62  00                 	db	0
   346  011C63  00                 	db	0
   347  011C64  00                 	db	0
   348  011C65  00                 	db	0
   349  011C66  00                 	db	0
   350  011C67  00                 	db	0
   351  011C68  00                 	db	0
   352  011C69  00                 	db	0
   353  011C6A  00                 	db	0
   354  011C6B  00                 	db	0
   355  011C6C  00                 	db	0
   356  011C6D  00                 	db	0
   357  011C6E  00                 	db	0
   358  011C6F  00                 	db	0
   359  011C70  00                 	db	0
   360  011C71  00                 	db	0
   361  011C72  00                 	db	0
   362  011C73  00                 	db	0
   363  011C74  00                 	db	0
   364  011C75  00                 	db	0
   365  011C76  00                 	db	0
   366  011C77  00                 	db	0
   367  011C78  00                 	db	0
   368  011C79  00                 	db	0
   369  011C7A  00                 	db	0
   370  011C7B  00                 	db	0
   371  011C7C  00                 	db	0
   372  011C7D  00                 	db	0
   373  011C7E  00                 	db	0
   374  011C7F  00                 	db	0
   375  011C80  00                 	db	0
   376  011C81  00                 	db	0
   377  011C82  00                 	db	0
   378  011C83  00                 	db	0
   379  011C84  00                 	db	0
   380  011C85  00                 	db	0
   381  011C86  00                 	db	0
   382  011C87  00                 	db	0
   383  011C88  00                 	db	0
   384  011C89  00                 	db	0
   385  011C8A  00                 	db	0
   386  011C8B  00                 	db	0
   387  011C8C  00                 	db	0
   388  011C8D  00                 	db	0
   389  011C8E  00                 	db	0
   390  011C8F  00                 	db	0
   391  011C90  00                 	db	0
   392  011C91  00                 	db	0
   393  011C92  00                 	db	0
   394  011C93  00                 	db	0
   395  011C94  00                 	db	0
   396  011C95  00                 	db	0
   397  011C96  00                 	db	0
   398  011C97  00                 	db	0
   399  011C98  00                 	db	0
   400  011C99  00                 	db	0
   401  011C9A  00                 	db	0
   402  011C9B  00                 	db	0
   403  011C9C  00                 	db	0
   404  011C9D  00                 	db	0
   405  011C9E  00                 	db	0
   406  011C9F  00                 	db	0
   407  011CA0  00                 	db	0
   408  011CA1  00                 	db	0
   409  011CA2  00                 	db	0
   410  011CA3  00                 	db	0
   411  011CA4  00                 	db	0
   412  011CA5  00                 	db	0
   413  011CA6  00                 	db	0
   414  011CA7  00                 	db	0
   415  011CA8  00                 	db	0
   416  011CA9  00                 	db	0
   417  011CAA  00                 	db	0
   418  011CAB  00                 	db	0
   419  011CAC  00                 	db	0
   420  011CAD  00                 	db	0
   421  011CAE  00                 	db	0
   422  011CAF  00                 	db	0
   423  011CB0  00                 	db	0
   424  011CB1  00                 	db	0
   425  011CB2  00                 	db	0
   426  011CB3  00                 	db	0
   427  011CB4  00                 	db	0
   428  011CB5  00                 	db	0
   429  011CB6  00                 	db	0
   430  011CB7  00                 	db	0
   431  011CB8  00                 	db	0
   432  011CB9  00                 	db	0
   433  011CBA  00                 	db	0
   434  011CBB  00                 	db	0
   435  011CBC  00                 	db	0
   436  011CBD  00                 	db	0
   437  011CBE  00                 	db	0
   438  011CBF  00                 	db	0
   439  011CC0  00                 	db	0
   440  011CC1  00                 	db	0
   441  011CC2  00                 	db	0
   442  011CC3  00                 	db	0
   443  011CC4  00                 	db	0
   444  011CC5  00                 	db	0
   445  011CC6  00                 	db	0
   446  011CC7  00                 	db	0
   447  011CC8  00                 	db	0
   448  011CC9  00                 	db	0
   449  011CCA  00                 	db	0
   450  011CCB  00                 	db	0
   451  011CCC  00                 	db	0
   452  011CCD  00                 	db	0
   453  011CCE  00                 	db	0
   454  011CCF  00                 	db	0
   455  011CD0  00                 	db	0
   456  011CD1  00                 	db	0
   457  011CD2  00                 	db	0
   458  011CD3  00                 	db	0
   459  011CD4  00                 	db	0
   460  011CD5  00                 	db	0
   461  011CD6  00                 	db	0
   462  011CD7  00                 	db	0
   463  011CD8  00                 	db	0
   464  011CD9  00                 	db	0
   465  011CDA  00                 	db	0
   466  011CDB  00                 	db	0
   467  011CDC  00                 	db	0
   468  011CDD  00                 	db	0
   469  011CDE  00                 	db	0
   470  011CDF  00                 	db	0
   471  011CE0  00                 	db	0
   472  011CE1  00                 	db	0
   473  011CE2  00                 	db	0
   474  011CE3  00                 	db	0
   475  011CE4  00                 	db	0
   476  011CE5  00                 	db	0
   477  011CE6  00                 	db	0
   478  011CE7  00                 	db	0
   479  011CE8  00                 	db	0
   480  011CE9  00                 	db	0
   481  011CEA  00                 	db	0
   482  011CEB  00                 	db	0
   483  011CEC  00                 	db	0
   484  011CED  00                 	db	0
   485  011CEE  00                 	db	0
   486  011CEF  00                 	db	0
   487  011CF0  00                 	db	0
   488  011CF1  00                 	db	0
   489  011CF2  00                 	db	0
   490  011CF3  00                 	db	0
   491  011CF4  00                 	db	0
   492  011CF5  00                 	db	0
   493  011CF6  00                 	db	0
   494  011CF7  00                 	db	0
   495  011CF8  00                 	db	0
   496  011CF9  00                 	db	0
   497  011CFA  00                 	db	0
   498  011CFB  00                 	db	0
   499  011CFC  00                 	db	0
   500  011CFD  00                 	db	0
   501  011CFE  00                 	db	0
   502  011CFF  00                 	db	0
   503  011D00  00                 	db	0
   504  011D01  00                 	db	0
   505  011D02  00                 	db	0
   506  011D03  00                 	db	0
   507  011D04  00                 	db	0
   508  011D05  00                 	db	0
   509  011D06  00                 	db	0
   510  011D07  00                 	db	0
   511  011D08  00                 	db	0
   512  011D09  00                 	db	0
   513  011D0A  00                 	db	0
   514  011D0B  00                 	db	0
   515  011D0C  00                 	db	0
   516  011D0D  00                 	db	0
   517  011D0E  00                 	db	0
   518  011D0F  00                 	db	0
   519  011D10  00                 	db	0
   520  011D11  00                 	db	0
   521  011D12  00                 	db	0
   522  011D13  00                 	db	0
   523  011D14  00                 	db	0
   524  011D15  00                 	db	0
   525  011D16  00                 	db	0
   526  011D17  00                 	db	0
   527  011D18  00                 	db	0
   528  011D19  00                 	db	0
   529  011D1A  00                 	db	0
   530  011D1B  00                 	db	0
   531  011D1C  00                 	db	0
   532  011D1D  00                 	db	0
   533  011D1E  00                 	db	0
   534  011D1F  00                 	db	0
   535  011D20  00                 	db	0
   536  011D21  00                 	db	0
   537  011D22  00                 	db	0
   538  011D23  00                 	db	0
   539  011D24  00                 	db	0
   540  011D25  00                 	db	0
   541  011D26  00                 	db	0
   542  011D27  00                 	db	0
   543  011D28  00                 	db	0
   544  011D29  00                 	db	0
   545  011D2A  00                 	db	0
   546  011D2B  00                 	db	0
   547  011D2C  00                 	db	0
   548  011D2D  00                 	db	0
   549  011D2E  00                 	db	0
   550  011D2F  00                 	db	0
   551  011D30  00                 	db	0
   552  011D31  00                 	db	0
   553  011D32  00                 	db	0
   554  011D33  00                 	db	0
   555  011D34  00                 	db	0
   556  011D35  00                 	db	0
   557  011D36  00                 	db	0
   558  011D37  00                 	db	0
   559  011D38  00                 	db	0
   560  011D39  00                 	db	0
   561  011D3A  00                 	db	0
   562  011D3B  00                 	db	0
   563  011D3C  00                 	db	0
   564  011D3D  00                 	db	0
   565  011D3E  00                 	db	0
   566  011D3F  00                 	db	0
   567  011D40  00                 	db	0
   568  011D41  00                 	db	0
   569  011D42  00                 	db	0
   570  011D43  00                 	db	0
   571  011D44  00                 	db	0
   572  011D45  00                 	db	0
   573  011D46  00                 	db	0
   574  011D47  00                 	db	0
   575  011D48  00                 	db	0
   576  011D49  00                 	db	0
   577  011D4A  00                 	db	0
   578  011D4B  00                 	db	0
   579  011D4C  00                 	db	0
   580  011D4D  00                 	db	0
   581  011D4E  00                 	db	0
   582  011D4F  00                 	db	0
   583  011D50  00                 	db	0
   584  011D51  00                 	db	0
   585  011D52  00                 	db	0
   586  011D53  00                 	db	0
   587  011D54  00                 	db	0
   588  011D55  00                 	db	0
   589  011D56  00                 	db	0
   590  011D57  00                 	db	0
   591  011D58  00                 	db	0
   592  011D59  00                 	db	0
   593  011D5A  00                 	db	0
   594  011D5B  00                 	db	0
   595  011D5C  00                 	db	0
   596  011D5D  00                 	db	0
   597  011D5E  00                 	db	0
   598  011D5F  00                 	db	0
   599  011D60  00                 	db	0
   600  011D61  00                 	db	0
   601  011D62  00                 	db	0
   602  011D63  00                 	db	0
   603  011D64  00                 	db	0
   604  011D65  00                 	db	0
   605  011D66  00                 	db	0
   606  011D67  00                 	db	0
   607  011D68  00                 	db	0
   608  011D69  00                 	db	0
   609  011D6A  00                 	db	0
   610  011D6B  00                 	db	0
   611  011D6C  00                 	db	0
   612  011D6D  00                 	db	0
   613  011D6E  00                 	db	0
   614  011D6F  00                 	db	0
   615  011D70  00                 	db	0
   616  011D71  00                 	db	0
   617  011D72  00                 	db	0
   618  011D73  00                 	db	0
   619  011D74  00                 	db	0
   620  011D75  00                 	db	0
   621  011D76  00                 	db	0
   622  011D77  00                 	db	0
   623  011D78  00                 	db	0
   624  011D79  00                 	db	0
   625  011D7A  00                 	db	0
   626  011D7B  00                 	db	0
   627  011D7C  00                 	db	0
   628  011D7D  00                 	db	0
   629  011D7E  00                 	db	0
   630  011D7F  00                 	db	0
   631  011D80  00                 	db	0
   632  011D81  00                 	db	0
   633  011D82  00                 	db	0
   634  011D83  00                 	db	0
   635  011D84  00                 	db	0
   636  011D85  00                 	db	0
   637  011D86  00                 	db	0
   638  011D87  00                 	db	0
   639  011D88  00                 	db	0
   640  011D89  00                 	db	0
   641  011D8A  00                 	db	0
   642  011D8B  00                 	db	0
   643  011D8C  00                 	db	0
   644  011D8D  00                 	db	0
   645  011D8E  00                 	db	0
   646  011D8F  00                 	db	0
   647  011D90  00                 	db	0
   648  011D91  00                 	db	0
   649  011D92  00                 	db	0
   650  011D93  00                 	db	0
   651  011D94  00                 	db	0
   652  011D95  00                 	db	0
   653  011D96  00                 	db	0
   654  011D97  00                 	db	0
   655  011D98  00                 	db	0
   656  011D99  00                 	db	0
   657  011D9A  00                 	db	0
   658  011D9B  00                 	db	0
   659  011D9C  00                 	db	0
   660  011D9D  00                 	db	0
   661  011D9E  00                 	db	0
   662  011D9F  00                 	db	0
   663  011DA0  00                 	db	0
   664  011DA1  00                 	db	0
   665  011DA2  00                 	db	0
   666  011DA3  00                 	db	0
   667  011DA4  00                 	db	0
   668  011DA5  00                 	db	0
   669  011DA6  00                 	db	0
   670  011DA7  00                 	db	0
   671  011DA8  00                 	db	0
   672  011DA9  00                 	db	0
   673  011DAA  00                 	db	0
   674  011DAB  00                 	db	0
   675  011DAC  00                 	db	0
   676  011DAD  00                 	db	0
   677  011DAE  00                 	db	0
   678  011DAF  00                 	db	0
   679  011DB0  00                 	db	0
   680  011DB1  00                 	db	0
   681  011DB2  00                 	db	0
   682  011DB3  00                 	db	0
   683  011DB4  00                 	db	0
   684  011DB5  00                 	db	0
   685  011DB6  00                 	db	0
   686  011DB7  00                 	db	0
   687  011DB8  00                 	db	0
   688  011DB9  00                 	db	0
   689  011DBA  00                 	db	0
   690  011DBB  00                 	db	0
   691  011DBC  00                 	db	0
   692  011DBD  00                 	db	0
   693  011DBE  00                 	db	0
   694  011DBF  00                 	db	0
   695  011DC0  00                 	db	0
   696  011DC1  00                 	db	0
   697  011DC2  00                 	db	0
   698  011DC3  00                 	db	0
   699  011DC4  00                 	db	0
   700  011DC5  00                 	db	0
   701  011DC6  00                 	db	0
   702  011DC7  00                 	db	0
   703  011DC8  00                 	db	0
   704  011DC9  00                 	db	0
   705  011DCA  00                 	db	0
   706  011DCB  00                 	db	0
   707  011DCC  00                 	db	0
   708  011DCD  00                 	db	0
   709  011DCE  00                 	db	0
   710  011DCF  00                 	db	0
   711  011DD0  00                 	db	0
   712  011DD1  00                 	db	0
   713  011DD2  00                 	db	0
   714  011DD3  00                 	db	0
   715  011DD4  00                 	db	0
   716  011DD5  00                 	db	0
   717  011DD6  00                 	db	0
   718  011DD7  00                 	db	0
   719  011DD8  00                 	db	0
   720  011DD9  00                 	db	0
   721  011DDA  00                 	db	0
   722  011DDB  00                 	db	0
   723  011DDC  00                 	db	0
   724  011DDD  00                 	db	0
   725  011DDE  00                 	db	0
   726  011DDF  00                 	db	0
   727  011DE0  00                 	db	0
   728  011DE1  00                 	db	0
   729  011DE2  00                 	db	0
   730  011DE3  00                 	db	0
   731  011DE4  00                 	db	0
   732  011DE5  00                 	db	0
   733  011DE6  00                 	db	0
   734  011DE7  00                 	db	0
   735  011DE8  00                 	db	0
   736  011DE9  00                 	db	0
   737  011DEA  00                 	db	0
   738  011DEB  00                 	db	0
   739  011DEC  00                 	db	0
   740  011DED  00                 	db	0
   741  011DEE  00                 	db	0
   742  011DEF  00                 	db	0
   743  011DF0  00                 	db	0
   744  011DF1  00                 	db	0
   745  011DF2  00                 	db	0
   746  011DF3  00                 	db	0
   747  011DF4  00                 	db	0
   748  011DF5  00                 	db	0
   749  011DF6  00                 	db	0
   750  011DF7  00                 	db	0
   751  011DF8  00                 	db	0
   752  011DF9  00                 	db	0
   753  011DFA  00                 	db	0
   754  011DFB  00                 	db	0
   755  011DFC  00                 	db	0
   756  011DFD  00                 	db	0
   757  011DFE  00                 	db	0
   758  011DFF  00                 	db	0
   759  011E00  00                 	db	0
   760  011E01  00                 	db	0
   761  011E02  00                 	db	0
   762  011E03  00                 	db	0
   763  011E04  00                 	db	0
   764  011E05  00                 	db	0
   765  011E06  00                 	db	0
   766  011E07  00                 	db	0
   767  011E08  00                 	db	0
   768  011E09  00                 	db	0
   769  011E0A  00                 	db	0
   770  011E0B  00                 	db	0
   771  011E0C  00                 	db	0
   772  011E0D  00                 	db	0
   773  011E0E  00                 	db	0
   774  011E0F  00                 	db	0
   775  011E10  00                 	db	0
   776  011E11  00                 	db	0
   777  011E12  00                 	db	0
   778  011E13  00                 	db	0
   779  011E14  00                 	db	0
   780  011E15  00                 	db	0
   781  011E16  00                 	db	0
   782  011E17  00                 	db	0
   783  011E18  00                 	db	0
   784  011E19  00                 	db	0
   785  011E1A  00                 	db	0
   786  011E1B  00                 	db	0
   787  011E1C  00                 	db	0
   788  011E1D  00                 	db	0
   789  011E1E  00                 	db	0
   790  011E1F  00                 	db	0
   791  011E20  00                 	db	0
   792  011E21  00                 	db	0
   793  011E22  00                 	db	0
   794  011E23  00                 	db	0
   795  011E24  00                 	db	0
   796  011E25  00                 	db	0
   797  011E26  00                 	db	0
   798  011E27  00                 	db	0
   799  011E28  00                 	db	0
   800  011E29  00                 	db	0
   801  011E2A  00                 	db	0
   802  011E2B  00                 	db	0
   803  011E2C  00                 	db	0
   804  011E2D  00                 	db	0
   805  011E2E  00                 	db	0
   806  011E2F  00                 	db	0
   807  011E30  00                 	db	0
   808  011E31  00                 	db	0
   809  011E32  00                 	db	0
   810  011E33  00                 	db	0
   811  011E34  00                 	db	0
   812  011E35  00                 	db	0
   813  011E36  00                 	db	0
   814  011E37  00                 	db	0
   815  011E38  00                 	db	0
   816  011E39  00                 	db	0
   817  011E3A  00                 	db	0
   818  011E3B  00                 	db	0
   819  011E3C  00                 	db	0
   820  011E3D  00                 	db	0
   821  011E3E  00                 	db	0
   822  011E3F  00                 	db	0
   823  011E40  00                 	db	0
   824  011E41  00                 	db	0
   825  011E42  00                 	db	0
   826  011E43  00                 	db	0
   827  011E44  00                 	db	0
   828  011E45  00                 	db	0
   829  011E46  00                 	db	0
   830  011E47  00                 	db	0
   831  011E48  00                 	db	0
   832  011E49  00                 	db	0
   833  011E4A  00                 	db	0
   834  011E4B  00                 	db	0
   835  011E4C  00                 	db	0
   836  011E4D  00                 	db	0
   837  011E4E  00                 	db	0
   838  011E4F  00                 	db	0
   839  011E50  00                 	db	0
   840  011E51  00                 	db	0
   841  011E52  00                 	db	0
   842  011E53  00                 	db	0
   843  011E54  00                 	db	0
   844  011E55  00                 	db	0
   845  011E56  00                 	db	0
   846  011E57  00                 	db	0
   847  011E58  00                 	db	0
   848  011E59  00                 	db	0
   849  011E5A  00                 	db	0
   850  011E5B  00                 	db	0
   851  011E5C  00                 	db	0
   852  011E5D  00                 	db	0
   853  011E5E  00                 	db	0
   854  011E5F  00                 	db	0
   855  011E60  00                 	db	0
   856  011E61  00                 	db	0
   857  011E62  00                 	db	0
   858  011E63  00                 	db	0
   859  011E64  00                 	db	0
   860  011E65  00                 	db	0
   861  011E66  00                 	db	0
   862  011E67  00                 	db	0
   863  011E68  00                 	db	0
   864  011E69  00                 	db	0
   865  011E6A  00                 	db	0
   866  011E6B  00                 	db	0
   867  011E6C  00                 	db	0
   868  011E6D  00                 	db	0
   869  011E6E  00                 	db	0
   870  011E6F  00                 	db	0
   871  011E70  00                 	db	0
   872  011E71  00                 	db	0
   873  011E72  00                 	db	0
   874  011E73  00                 	db	0
   875  011E74  00                 	db	0
   876  011E75  00                 	db	0
   877  011E76  00                 	db	0
   878  011E77  00                 	db	0
   879  011E78  00                 	db	0
   880  011E79  00                 	db	0
   881  011E7A  00                 	db	0
   882  011E7B  00                 	db	0
   883  011E7C  00                 	db	0
   884  011E7D  00                 	db	0
   885  011E7E  00                 	db	0
   886  011E7F  00                 	db	0
   887  011E80  00                 	db	0
   888  011E81  00                 	db	0
   889  011E82  00                 	db	0
   890  011E83  00                 	db	0
   891  011E84  00                 	db	0
   892  011E85  00                 	db	0
   893  011E86  00                 	db	0
   894  011E87  00                 	db	0
   895  011E88  00                 	db	0
   896  011E89  00                 	db	0
   897  011E8A  00                 	db	0
   898  011E8B  00                 	db	0
   899  011E8C  00                 	db	0
   900  011E8D  00                 	db	0
   901  011E8E  00                 	db	0
   902  011E8F  00                 	db	0
   903  011E90  00                 	db	0
   904  011E91  00                 	db	0
   905  011E92  00                 	db	0
   906  011E93  00                 	db	0
   907  011E94  00                 	db	0
   908  011E95  00                 	db	0
   909  011E96  00                 	db	0
   910  011E97  00                 	db	0
   911  011E98  00                 	db	0
   912  011E99  00                 	db	0
   913  011E9A  00                 	db	0
   914  011E9B  00                 	db	0
   915  011E9C  00                 	db	0
   916  011E9D  00                 	db	0
   917  011E9E  00                 	db	0
   918  011E9F  00                 	db	0
   919  011EA0  00                 	db	0
   920  011EA1  00                 	db	0
   921  011EA2  00                 	db	0
   922  011EA3  00                 	db	0
   923  011EA4  00                 	db	0
   924  011EA5  00                 	db	0
   925  011EA6  00                 	db	0
   926  011EA7  00                 	db	0
   927  011EA8  00                 	db	0
   928  011EA9  00                 	db	0
   929  011EAA  00                 	db	0
   930  011EAB  00                 	db	0
   931  011EAC  00                 	db	0
   932  011EAD  00                 	db	0
   933  011EAE  00                 	db	0
   934  011EAF  00                 	db	0
   935  011EB0  00                 	db	0
   936  011EB1  00                 	db	0
   937  011EB2  00                 	db	0
   938  011EB3  00                 	db	0
   939  011EB4  00                 	db	0
   940  011EB5  00                 	db	0
   941  011EB6  00                 	db	0
   942  011EB7  00                 	db	0
   943  011EB8  00                 	db	0
   944  011EB9  00                 	db	0
   945  011EBA  00                 	db	0
   946  011EBB  00                 	db	0
   947  011EBC  00                 	db	0
   948  011EBD  00                 	db	0
   949  011EBE  00                 	db	0
   950  011EBF  00                 	db	0
   951  011EC0  00                 	db	0
   952  011EC1  00                 	db	0
   953  011EC2  00                 	db	0
   954  011EC3  00                 	db	0
   955  011EC4  00                 	db	0
   956  011EC5  00                 	db	0
   957  011EC6  00                 	db	0
   958  011EC7  00                 	db	0
   959  011EC8  00                 	db	0
   960  011EC9  00                 	db	0
   961  011ECA  00                 	db	0
   962  011ECB  00                 	db	0
   963  011ECC  00                 	db	0
   964  011ECD  00                 	db	0
   965  011ECE  00                 	db	0
   966  011ECF  00                 	db	0
   967  011ED0  00                 	db	0
   968  011ED1  00                 	db	0
   969  011ED2  00                 	db	0
   970  011ED3  00                 	db	0
   971  011ED4  00                 	db	0
   972  011ED5  00                 	db	0
   973  011ED6  00                 	db	0
   974  011ED7  00                 	db	0
   975  011ED8  00                 	db	0
   976  011ED9  00                 	db	0
   977  011EDA  00                 	db	0
   978  011EDB  00                 	db	0
   979  011EDC  00                 	db	0
   980  011EDD  00                 	db	0
   981  011EDE  00                 	db	0
   982  011EDF  00                 	db	0
   983  011EE0  00                 	db	0
   984  011EE1  00                 	db	0
   985  011EE2  00                 	db	0
   986  011EE3  00                 	db	0
   987  011EE4  00                 	db	0
   988  011EE5  00                 	db	0
   989  011EE6  00                 	db	0
   990  011EE7  00                 	db	0
   991  011EE8  00                 	db	0
   992  011EE9  00                 	db	0
   993  011EEA  00                 	db	0
   994  011EEB  00                 	db	0
   995  011EEC  00                 	db	0
   996  011EED  00                 	db	0
   997  011EEE  00                 	db	0
   998  011EEF  00                 	db	0
   999  011EF0  00                 	db	0
  1000  011EF1  00                 	db	0
  1001  011EF2  00                 	db	0
  1002  011EF3  00                 	db	0
  1003  011EF4  00                 	db	0
  1004  011EF5  00                 	db	0
  1005  011EF6  00                 	db	0
  1006  011EF7  00                 	db	0
  1007  011EF8  00                 	db	0
  1008  011EF9  00                 	db	0
  1009  011EFA  00                 	db	0
  1010  011EFB  00                 	db	0
  1011  011EFC  00                 	db	0
  1012  011EFD  00                 	db	0
  1013  011EFE  00                 	db	0
  1014  011EFF  00                 	db	0
  1015  011F00  00                 	db	0
  1016  011F01  00                 	db	0
  1017  011F02  00                 	db	0
  1018  011F03  00                 	db	0
  1019  011F04  00                 	db	0
  1020  011F05  00                 	db	0
  1021  011F06  00                 	db	0
  1022  011F07  00                 	db	0
  1023  011F08  00                 	db	0
  1024  011F09  00                 	db	0
  1025  011F0A  00                 	db	0
  1026  011F0B  00                 	db	0
  1027  011F0C  00                 	db	0
  1028  011F0D  00                 	db	0
  1029  011F0E  00                 	db	0
  1030  011F0F  00                 	db	0
  1031  011F10  00                 	db	0
  1032  011F11  00                 	db	0
  1033  011F12  00                 	db	0
  1034  011F13  00                 	db	0
  1035  011F14  00                 	db	0
  1036  011F15  00                 	db	0
  1037  011F16  00                 	db	0
  1038  011F17  00                 	db	0
  1039  011F18  00                 	db	0
  1040  011F19  00                 	db	0
  1041  011F1A  00                 	db	0
  1042  011F1B  00                 	db	0
  1043  011F1C  00                 	db	0
  1044  011F1D  00                 	db	0
  1045  011F1E  00                 	db	0
  1046  011F1F  00                 	db	0
  1047  011F20  00                 	db	0
  1048  011F21  00                 	db	0
  1049  011F22  00                 	db	0
  1050  011F23  00                 	db	0
  1051  011F24  00                 	db	0
  1052  011F25  00                 	db	0
  1053  011F26  00                 	db	0
  1054  011F27  00                 	db	0
  1055  011F28  00                 	db	0
  1056  011F29  00                 	db	0
  1057  011F2A  00                 	db	0
  1058  011F2B  00                 	db	0
  1059  011F2C  00                 	db	0
  1060  011F2D  00                 	db	0
  1061  011F2E  00                 	db	0
  1062  011F2F  00                 	db	0
  1063  011F30  00                 	db	0
  1064  011F31  00                 	db	0
  1065  011F32  00                 	db	0
  1066  011F33  00                 	db	0
  1067  011F34  00                 	db	0
  1068  011F35  00                 	db	0
  1069  011F36  00                 	db	0
  1070  011F37  00                 	db	0
  1071  011F38  00                 	db	0
  1072  011F39  00                 	db	0
  1073  011F3A  00                 	db	0
  1074  011F3B  00                 	db	0
  1075  011F3C  00                 	db	0
  1076  011F3D  00                 	db	0
  1077  011F3E  00                 	db	0
  1078  011F3F  00                 	db	0
  1079  011F40  00                 	db	0
  1080  011F41  00                 	db	0
  1081  011F42  00                 	db	0
  1082  011F43  00                 	db	0
  1083  011F44  00                 	db	0
  1084  011F45  00                 	db	0
  1085  011F46  00                 	db	0
  1086  011F47  00                 	db	0
  1087  011F48  00                 	db	0
  1088  011F49  00                 	db	0
  1089  011F4A  00                 	db	0
  1090  011F4B  00                 	db	0
  1091  011F4C  00                 	db	0
  1092  011F4D  00                 	db	0
  1093  011F4E  00                 	db	0
  1094  011F4F  00                 	db	0
  1095  011F50  00                 	db	0
  1096  011F51  00                 	db	0
  1097  011F52  00                 	db	0
  1098  011F53  00                 	db	0
  1099  011F54  00                 	db	0
  1100  011F55  00                 	db	0
  1101  011F56  00                 	db	0
  1102  011F57  00                 	db	0
  1103  011F58  00                 	db	0
  1104  011F59  00                 	db	0
  1105  011F5A  00                 	db	0
  1106  011F5B  00                 	db	0
  1107  011F5C  00                 	db	0
  1108  011F5D  00                 	db	0
  1109  011F5E  00                 	db	0
  1110  011F5F  00                 	db	0
  1111  011F60  00                 	db	0
  1112  011F61  00                 	db	0
  1113  011F62  00                 	db	0
  1114  011F63  00                 	db	0
  1115  011F64  00                 	db	0
  1116  011F65  00                 	db	0
  1117  011F66  00                 	db	0
  1118  011F67  00                 	db	0
  1119  011F68  00                 	db	0
  1120  011F69  00                 	db	0
  1121  011F6A  00                 	db	0
  1122  011F6B  00                 	db	0
  1123  011F6C  00                 	db	0
  1124  011F6D  00                 	db	0
  1125  011F6E  00                 	db	0
  1126  011F6F  00                 	db	0
  1127  011F70  00                 	db	0
  1128  011F71  00                 	db	0
  1129  011F72  00                 	db	0
  1130  011F73  00                 	db	0
  1131  011F74  00                 	db	0
  1132  011F75  00                 	db	0
  1133  011F76  00                 	db	0
  1134  011F77  00                 	db	0
  1135  011F78  00                 	db	0
  1136  011F79  00                 	db	0
  1137  011F7A  00                 	db	0
  1138  011F7B  00                 	db	0
  1139  011F7C  00                 	db	0
  1140  011F7D  00                 	db	0
  1141  011F7E  00                 	db	0
  1142  011F7F  00                 	db	0
  1143  011F80  00                 	db	0
  1144  011F81  00                 	db	0
  1145  011F82  00                 	db	0
  1146  011F83  00                 	db	0
  1147  011F84  00                 	db	0
  1148  011F85  00                 	db	0
  1149  011F86  00                 	db	0
  1150  011F87  00                 	db	0
  1151  011F88  00                 	db	0
  1152  011F89  00                 	db	0
  1153  011F8A  00                 	db	0
  1154  011F8B  00                 	db	0
  1155  011F8C  00                 	db	0
  1156  011F8D  00                 	db	0
  1157  011F8E  00                 	db	0
  1158  011F8F  00                 	db	0
  1159  011F90  00                 	db	0
  1160  011F91  00                 	db	0
  1161  011F92  00                 	db	0
  1162  011F93  00                 	db	0
  1163  011F94  00                 	db	0
  1164  011F95  00                 	db	0
  1165  011F96  00                 	db	0
  1166  011F97  00                 	db	0
  1167  011F98  00                 	db	0
  1168  011F99  00                 	db	0
  1169  011F9A  00                 	db	0
  1170  011F9B  00                 	db	0
  1171  011F9C  00                 	db	0
  1172  011F9D  00                 	db	0
  1173  011F9E  00                 	db	0
  1174  011F9F  00                 	db	0
  1175  011FA0  00                 	db	0
  1176  011FA1  00                 	db	0
  1177  011FA2  00                 	db	0
  1178  011FA3  00                 	db	0
  1179  011FA4  00                 	db	0
  1180  011FA5  00                 	db	0
  1181  011FA6  00                 	db	0
  1182  011FA7  00                 	db	0
  1183  011FA8  00                 	db	0
  1184  011FA9  00                 	db	0
  1185  011FAA  00                 	db	0
  1186  011FAB  00                 	db	0
  1187  011FAC  00                 	db	0
  1188  011FAD  00                 	db	0
  1189  011FAE  00                 	db	0
  1190  011FAF  00                 	db	0
  1191  011FB0  00                 	db	0
  1192  011FB1  00                 	db	0
  1193  011FB2  00                 	db	0
  1194  011FB3  00                 	db	0
  1195  011FB4  00                 	db	0
  1196  011FB5  00                 	db	0
  1197  011FB6  00                 	db	0
  1198  011FB7  00                 	db	0
  1199  011FB8  00                 	db	0
  1200  011FB9  00                 	db	0
  1201  011FBA  00                 	db	0
  1202  011FBB  00                 	db	0
  1203  011FBC  00                 	db	0
  1204  011FBD  00                 	db	0
  1205  011FBE  00                 	db	0
  1206  011FBF  00                 	db	0
  1207  011FC0  00                 	db	0
  1208  011FC1  00                 	db	0
  1209  011FC2  00                 	db	0
  1210  011FC3  00                 	db	0
  1211  011FC4  00                 	db	0
  1212  011FC5  00                 	db	0
  1213  011FC6  00                 	db	0
  1214  011FC7  00                 	db	0
  1215  011FC8  00                 	db	0
  1216  011FC9  00                 	db	0
  1217  011FCA  00                 	db	0
  1218  011FCB  00                 	db	0
  1219  011FCC  00                 	db	0
  1220  011FCD  00                 	db	0
  1221  011FCE  00                 	db	0
  1222  011FCF  00                 	db	0
  1223  011FD0  00                 	db	0
  1224  011FD1  00                 	db	0
  1225  011FD2  00                 	db	0
  1226  011FD3  00                 	db	0
  1227  011FD4  00                 	db	0
  1228  011FD5  00                 	db	0
  1229  011FD6  00                 	db	0
  1230  011FD7  00                 	db	0
  1231  011FD8  00                 	db	0
  1232  011FD9  00                 	db	0
  1233  011FDA  00                 	db	0
  1234  011FDB  00                 	db	0
  1235  011FDC  00                 	db	0
  1236  011FDD  00                 	db	0
  1237  011FDE  00                 	db	0
  1238  011FDF  00                 	db	0
  1239  011FE0  00                 	db	0
  1240  011FE1  00                 	db	0
  1241                           
  1242                           	psect	idataBANK0
  1243  0156C6                     __pidataBANK0:
  1244                           	callstack 0
  1245                           
  1246                           ;initializer for _ps_type_ptr
  1247  0156C6  C2                 	db	low _ps_type
  1248  0156C7  02                 	db	high _ps_type
  1249                           
  1250                           	psect	idataBANK1
  1251  01566E                     __pidataBANK1:
  1252                           	callstack 0
  1253                           
  1254                           ;initializer for stoa@F1164
  1255  01566E  28                 	db	40
  1256  01566F  6E                 	db	110
  1257  015670  75                 	db	117
  1258  015671  6C                 	db	108
  1259  015672  6C                 	db	108
  1260  015673  29                 	db	41
  1261  015674  00                 	db	0
  1262                           
  1263                           ;initializer for _build_time
  1264  015675  BD                 	db	low STR_2
  1265  015676  FF                 	db	high STR_2
  1266                           
  1267                           ;initializer for _build_date
  1268  015677  B1                 	db	low STR_1
  1269  015678  FF                 	db	high STR_1
  1270                           
  1271                           ;initializer for _static_ps
  1272  015679  14                 	db	20
  1273                           
  1274                           ;initializer for _roll_max
  1275  01567A  13                 	db	19
  1276                           
  1277                           	psect	idataBANK2
  1278  0147BE                     __pidataBANK2:
  1279                           	callstack 0
  1280                           
  1281                           ;initializer for _g_cmds
  1282  0147BE  F5                 	db	low STR_20
  1283  0147BF  FF                 	db	high STR_20
  1284  0147C0  E0                 	db	low _fh_pr
  1285  0147C1  53                 	db	high _fh_pr
  1286  0147C2  01                 	db	low (_fh_pr shr (0+16))
  1287  0147C3  F8                 	db	low STR_21
  1288  0147C4  FF                 	db	high STR_21
  1289  0147C5  58                 	db	low _fh_ps
  1290  0147C6  54                 	db	high _fh_ps
  1291  0147C7  01                 	db	low (_fh_ps shr (0+16))
  1292  0147C8  EF                 	db	low STR_22
  1293  0147C9  FF                 	db	high STR_22
  1294  0147CA  7C                 	db	low _fh_po
  1295  0147CB  55                 	db	high _fh_po
  1296  0147CC  01                 	db	low (_fh_po shr (0+16))
  1297  0147CD  F2                 	db	low STR_23
  1298  0147CE  FF                 	db	high STR_23
  1299  0147CF  6A                 	db	low _fh_pp
  1300  0147D0  55                 	db	high _fh_pp
  1301  0147D1  01                 	db	low (_fh_pp shr (0+16))
  1302  0147D2  FB                 	db	low STR_24
  1303  0147D3  FF                 	db	high STR_24
  1304  0147D4  0C                 	db	low _fh_pu
  1305  0147D5  55                 	db	high _fh_pu
  1306  0147D6  01                 	db	low (_fh_pu shr (0+16))
  1307  0147D7  E9                 	db	low STR_25
  1308  0147D8  FF                 	db	high STR_25
  1309  0147D9  F4                 	db	low _fh_pd
  1310  0147DA  54                 	db	high _fh_pd
  1311  0147DB  01                 	db	low (_fh_pd shr (0+16))
  1312  0147DC  EC                 	db	low STR_26
  1313  0147DD  FF                 	db	high STR_26
  1314  0147DE  DC                 	db	low _fh_pl
  1315  0147DF  54                 	db	high _fh_pl
  1316  0147E0  01                 	db	low (_fh_pl shr (0+16))
  1317  0147E1  E3                 	db	low STR_27
  1318  0147E2  FF                 	db	high STR_27
  1319  0147E3  3C                 	db	low _fh_p0
  1320  0147E4  53                 	db	high _fh_p0
  1321  0147E5  01                 	db	low (_fh_p0 shr (0+16))
  1322  0147E6  E6                 	db	low STR_28
  1323  0147E7  FF                 	db	high STR_28
  1324  0147E8  1A                 	db	low _fh_p1
  1325  0147E9  53                 	db	high _fh_p1
  1326  0147EA  01                 	db	low (_fh_p1 shr (0+16))
  1327  0147EB  00                 	db	0
  1328  0147EC  00                 	db	0
  1329  0147ED  00                 	db	0
  1330  0147EE  00                 	db	0
  1331  0147EF  00                 	db	0
  1332                           
  1333                           ;initializer for _ps_type
  1334                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1335  0147F0  7597               	dw	30103
  1336  0147F2  3ECF               	dw	16079
  1337                           
  1338                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1339  0147F4  126F               	dw	4719
  1340  0147F6  3B83               	dw	15235
  1341                           
  1342                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1343  0147F8  5C29               	dw	23593
  1344  0147FA  3F4F               	dw	16207
  1345                           
  1346                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1347  0147FC  126F               	dw	4719
  1348  0147FE  3B83               	dw	15235
  1349                           
  1350                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1351  014800  7597               	dw	30103
  1352  014802  3ECF               	dw	16079
  1353                           
  1354                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1355  014804  126F               	dw	4719
  1356  014806  3B83               	dw	15235
  1357                           
  1358                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1359  014808  7597               	dw	30103
  1360  01480A  3ECF               	dw	16079
  1361                           
  1362                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1363  01480C  126F               	dw	4719
  1364  01480E  3B83               	dw	15235
  1365                           
  1366                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1367  014810  7597               	dw	30103
  1368  014812  3ECF               	dw	16079
  1369                           
  1370                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr 14 2022", *build_time = "22:11:10";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: double deviation, sum, sumsqr, mean, variance, stddeviation;;main.c: 59: uint8_t d
      +                          ac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 60: PS_TYPE ps_type[] = {
  1371  014814  126F               	dw	4719
  1372  014816  3B83               	dw	15235
  1373                           
  1374                           	psect	mediumconst
  1375  00FDBE                     __pmediumconst:
  1376                           	callstack 0
  1377  00FDBE  00                 	db	0
  1378  00FDBF  02                 	db	2
  1379  00FDC0  40                 	db	64
  1380  00FDC1  00                 	db	0
  1381  00FDC2  50                 	db	80
  1382  00FDC3  00                 	db	0
  1383  00FDC4                     __end_of_spi1_configuration:
  1384                           	callstack 0
  1385  00FDC4  4260               	dw	16992
  1386  00FDC6  0DA2               	dw	3490
  1387  00FDC8                     __end_of_tiny:
  1388                           	callstack 0
  1389  00FDC8                     _cmdm:
  1390                           	callstack 0
  1391  00FDC8  0D                 	db	13
  1392  00FDC9  0A                 	db	10
  1393  00FDCA  20                 	db	32
  1394  00FDCB  43                 	db	67
  1395  00FDCC  6F                 	db	111
  1396  00FDCD  6D                 	db	109
  1397  00FDCE  6D                 	db	109
  1398  00FDCF  61                 	db	97
  1399  00FDD0  6E                 	db	110
  1400  00FDD1  64                 	db	100
  1401  00FDD2  20                 	db	32
  1402  00FDD3  70                 	db	112
  1403  00FDD4  72                 	db	114
  1404  00FDD5  6F                 	db	111
  1405  00FDD6  63                 	db	99
  1406  00FDD7  65                 	db	101
  1407  00FDD8  73                 	db	115
  1408  00FDD9  73                 	db	115
  1409  00FDDA  6F                 	db	111
  1410  00FDDB  72                 	db	114
  1411  00FDDC  20                 	db	32
  1412  00FDDD  56                 	db	86
  1413  00FDDE  30                 	db	48
  1414  00FDDF  2E                 	db	46
  1415  00FDE0  32                 	db	50
  1416  00FDE1  0D                 	db	13
  1417  00FDE2  0A                 	db	10
  1418  00FDE3  00                 	db	0
  1419  00FDE4                     __end_of_cmdm:
  1420                           	callstack 0
  1421  00FDE4                     _build_version:
  1422                           	callstack 0
  1423  00FDE4  56                 	db	86
  1424  00FDE5  31                 	db	49
  1425  00FDE6  2E                 	db	46
  1426  00FDE7  30                 	db	48
  1427  00FDE8  31                 	db	49
  1428  00FDE9  20                 	db	32
  1429  00FDEA  50                 	db	80
  1430  00FDEB  53                 	db	83
  1431  00FDEC  20                 	db	32
  1432  00FDED  54                 	db	84
  1433  00FDEE  45                 	db	69
  1434  00FDEF  53                 	db	83
  1435  00FDF0  54                 	db	84
  1436  00FDF1  00                 	db	0
  1437  00FDF2                     __end_of_build_version:
  1438                           	callstack 0
  1439  0000                     _NVMADRL	set	14816
  1440  0000                     _NVMADRH	set	14817
  1441  0000                     _NVMCON1bits	set	14821
  1442  0000                     _DMA1CON0	set	15356
  1443  0000                     _DMA1AIRQ	set	15358
  1444  0000                     _DMA1SIRQ	set	15359
  1445  0000                     _DMA1CON1	set	15357
  1446  0000                     _T2CON	set	16300
  1447  0000                     _T5CON	set	16282
  1448  0000                     _TMR5L	set	16280
  1449  0000                     _TMR5H	set	16281
  1450  0000                     _T5GCON	set	16283
  1451  0000                     _IVTBASEL	set	16341
  1452  0000                     _IVTBASEH	set	16342
  1453  0000                     _IVTBASEU	set	16343
  1454  0000                     _T6CON	set	16276
  1455  0000                     _T6RST	set	16279
  1456  0000                     _ADERRL	set	16098
  1457  0000                     _ADERRH	set	16099
  1458  0000                     _ADPREVL	set	16109
  1459  0000                     _ADPREVH	set	16110
  1460  0000                     _ADFLTRL	set	16102
  1461  0000                     _ADFLTRH	set	16103
  1462  0000                     _ADACCL	set	16104
  1463  0000                     _ADACCH	set	16105
  1464  0000                     _ADCNT	set	16107
  1465  0000                     _ADRESL	set	16111
  1466  0000                     _ADRESH	set	16112
  1467  0000                     _ADCON0	set	16120
  1468  0000                     _ADCON1	set	16121
  1469  0000                     _ADPREH	set	16119
  1470  0000                     _ADPREL	set	16118
  1471  0000                     _ADCAP	set	16117
  1472  0000                     _ADACQH	set	16116
  1473  0000                     _ADPCH	set	16113
  1474  0000                     _ADRPT	set	16108
  1475  0000                     _ADACCU	set	16106
  1476  0000                     _ADSTPTH	set	16101
  1477  0000                     _ADSTPTL	set	16100
  1478  0000                     _ADUTHH	set	16097
  1479  0000                     _ADUTHL	set	16096
  1480  0000                     _ADLTHH	set	16095
  1481  0000                     _PRLOCK	set	14831
  1482  0000                     _OSCTUNE	set	14814
  1483  0000                     _OSCFRQ	set	14815
  1484  0000                     _OSCEN	set	14813
  1485  0000                     _TRISD	set	16325
  1486  0000                     _TRISC	set	16324
  1487  0000                     _TRISB	set	16323
  1488  0000                     _LATC	set	16316
  1489  0000                     _LATB	set	16315
  1490  0000                     _PLLR	set	118496
  1491  0000                     _PRLOCKbits	set	14831
  1492  0000                     _DMA1CON0bits	set	15356
  1493  0000                     _DMA1CON1bits	set	15357
  1494  0000                     _U1UIRbits	set	15864
  1495  0000                     _U1ERRIRbits	set	15865
  1496  0000                     _SPI1CON0bits	set	15636
  1497  0000                     _LATCbits	set	16316
  1498  0000                     _LATFbits	set	16319
  1499  0000                     _LATAbits	set	16314
  1500  0000                     _LATDbits	set	16317
  1501  0000                     _LATEbits	set	16318
  1502  0000                     _TRISCbits	set	16324
  1503  0000                     _T5CONbits	set	16282
  1504  0000                     _IVTLOCKbits	set	16340
  1505  0000                     _GIE	set	130711
  1506  0000                     _IPR1bits	set	14721
  1507  0000                     _IPR2bits	set	14722
  1508  0000                     _PIE1bits	set	14737
  1509  0000                     _PIR1bits	set	14753
  1510  0000                     _PMD0	set	14784
  1511  0000                     _OSCCON1	set	14809
  1512  0000                     _RC3PPS	set	14867
  1513  0000                     _RD2PPS	set	14874
  1514  0000                     _ANSELA	set	14912
  1515  0000                     _ANSELB	set	14928
  1516  0000                     _ANSELC	set	14944
  1517  0000                     _ANSELD	set	14960
  1518  0000                     _LATA	set	16314
  1519  0000                     _LATD	set	16317
  1520  0000                     _LATE	set	16318
  1521  0000                     _TRISA	set	16322
  1522  0000                     _TRISE	set	16326
  1523  0000                     _LATF	set	16319
  1524  0000                     _PORTAbits	set	16330
  1525  0000                     _INTCON0bits	set	16338
  1526  0000                     _TRISF	set	16327
  1527  0000                     _INLVLD	set	14964
  1528  0000                     _SLRCOND	set	14963
  1529  0000                     _ODCOND	set	14962
  1530  0000                     _RD0I2C	set	14970
  1531  0000                     _WPUD	set	14961
  1532  0000                     _ANSELE	set	14976
  1533  0000                     _INLVLC	set	14948
  1534  0000                     _SLRCONC	set	14947
  1535  0000                     _ODCONC	set	14946
  1536  0000                     _RC3I2C	set	14954
  1537  0000                     _WPUC	set	14945
  1538  0000                     _INLVLB	set	14932
  1539  0000                     _SLRCONB	set	14931
  1540  0000                     _ODCONB	set	14930
  1541  0000                     _RB1I2C	set	14938
  1542  0000                     _WPUB	set	14929
  1543  0000                     _INLVLE	set	14980
  1544  0000                     _SLRCONE	set	14979
  1545  0000                     _ODCONE	set	14978
  1546  0000                     _WPUE	set	14977
  1547  0000                     _ANSELF	set	14992
  1548  0000                     _SPI1SCKPPS	set	15070
  1549  0000                     _INLVLF	set	14996
  1550  0000                     _SLRCONF	set	14995
  1551  0000                     _ODCONF	set	14994
  1552  0000                     _WPUF	set	14993
  1553  0000                     _INLVLA	set	14916
  1554  0000                     _SLRCONA	set	14915
  1555  0000                     _ODCONA	set	14914
  1556  0000                     _WPUA	set	14913
  1557  0000                     _RB2I2C	set	14939
  1558  0000                     _RC4I2C	set	14955
  1559  0000                     _RD1I2C	set	14971
  1560  0000                     _RF2PPS	set	14890
  1561  0000                     _SPI1SDIPPS	set	15071
  1562  0000                     _U1RXPPS	set	15077
  1563  0000                     _RC5PPS	set	14869
  1564  0000                     _RC6PPS	set	14870
  1565  0000                     _DMA1SSA	set	15353
  1566  0000                     _DMA2DSZ	set	15310
  1567  0000                     _DMA2DSA	set	15312
  1568  0000                     _DMA1DPTR	set	15340
  1569  0000                     _DMA1DSZ	set	15342
  1570  0000                     _DMA1DSA	set	15344
  1571  0000                     _DMA2CON0bits	set	15324
  1572  0000                     _DMA2CON1bits	set	15325
  1573  0000                     _SPI1RXB	set	15632
  1574  0000                     _SPI1TCNTL	set	15634
  1575  0000                     _SPI1CON0	set	15636
  1576  0000                     _DAC1CON1	set	16028
  1577  0000                     _DAC1CON0	set	16030
  1578  0000                     _SPI1TXB	set	15633
  1579  0000                     _ADLTHL	set	16094
  1580  0000                     _OSCCON3	set	14811
  1581  0000                     _PMD7	set	14791
  1582  0000                     _PMD6	set	14790
  1583  0000                     _PMD5	set	14789
  1584  0000                     _PMD4	set	14788
  1585  0000                     _PMD3	set	14787
  1586  0000                     _PMD2	set	14786
  1587  0000                     _PMD1	set	14785
  1588  0000                     _DMA1PR	set	14835
  1589  0000                     _ADACQL	set	16115
  1590  0000                     _CCPTMRS1bits	set	16223
  1591  0000                     _PWM5DCL	set	16236
  1592  0000                     _PWM5DCH	set	16237
  1593  0000                     _PWM5CON	set	16238
  1594  0000                     _T6TMR	set	16274
  1595  0000                     _T6PR	set	16275
  1596  0000                     _T6HLT	set	16277
  1597  0000                     _T6CLKCON	set	16278
  1598  0000                     _ADCLK	set	16127
  1599  0000                     _ADACT	set	16126
  1600  0000                     _ADREF	set	16125
  1601  0000                     _ADSTAT	set	16124
  1602  0000                     _ADCON3	set	16123
  1603  0000                     _ADCON2	set	16122
  1604  0000                     _PIR4bits	set	14756
  1605  0000                     _PIR2bits	set	14754
  1606  0000                     _PIR8bits	set	14760
  1607  0000                     _PIR9bits	set	14761
  1608  0000                     _PIE3bits	set	14739
  1609  0000                     _PIE2bits	set	14738
  1610  0000                     _PIE8bits	set	14744
  1611  0000                     _PIE9bits	set	14745
  1612  0000                     _PIR0bits	set	14752
  1613  0000                     _IVTLOCK	set	16340
  1614  0000                     _TABLAT	set	16373
  1615  0000                     _TBLPTRL	set	16374
  1616  0000                     _TBLPTRH	set	16375
  1617  0000                     _TBLPTRU	set	16376
  1618  0000                     _IPR8bits	set	14728
  1619  0000                     _IPR9bits	set	14729
  1620  0000                     _IPR3bits	set	14723
  1621  0000                     _T2TMR	set	16298
  1622  0000                     _T2PR	set	16299
  1623  0000                     _T2HLT	set	16301
  1624  0000                     _T2CLKCON	set	16302
  1625  0000                     _T5CLK	set	16285
  1626  0000                     _T5GATE	set	16284
  1627  0000                     _SPI1STATUSbits	set	15639
  1628  0000                     _SPI1BAUD	set	15641
  1629  0000                     _SPI1CLK	set	15644
  1630  0000                     _SPI1CON2	set	15638
  1631  0000                     _SPI1CON1	set	15637
  1632  0000                     _U1RXB	set	15848
  1633  0000                     _U1TXB	set	15850
  1634  0000                     _U1P1L	set	15852
  1635  0000                     _SPI1INTFbits	set	15642
  1636  0000                     _PWM6DCL	set	16232
  1637  0000                     _PWM6DCH	set	16233
  1638  0000                     _PWM6CON	set	16234
  1639  0000                     _T2RST	set	16303
  1640  0000                     _DMA1SPTR	set	15348
  1641  0000                     _DMA1SSZ	set	15351
  1642  0000                     _U1ERRIE	set	15866
  1643  0000                     _U1ERRIR	set	15865
  1644  0000                     _U1UIR	set	15864
  1645  0000                     _U1FIFO	set	15863
  1646  0000                     _U1BRGH	set	15862
  1647  0000                     _U1BRGL	set	15861
  1648  0000                     _U1CON2	set	15860
  1649  0000                     _U1CON1	set	15859
  1650  0000                     _U1CON0	set	15858
  1651  0000                     _U1P3H	set	15857
  1652  0000                     _U1P3L	set	15856
  1653  0000                     _U1P2H	set	15855
  1654  0000                     _U1P2L	set	15854
  1655  0000                     _U1P1H	set	15853
  1656  0000                     _NVMCON2	set	14822
  1657  0000                     _NVMDAT	set	14819
  1658  0000                     _PORTBbits	set	16331
  1659  0000                     _DMA2SSA	set	15321
  1660  0000                     _DMA2SSZ	set	15319
  1661  00FDF2                     STR_15:
  1662                           
  1663                           ; BSR set to: 61
  1664  00FDF2  20                 	db	32
  1665  00FDF3  50                 	db	80	;'P'
  1666  00FDF4  53                 	db	83	;'S'
  1667  00FDF5  20                 	db	32
  1668  00FDF6  54                 	db	84	;'T'
  1669  00FDF7  59                 	db	89	;'Y'
  1670  00FDF8  50                 	db	80	;'P'
  1671  00FDF9  45                 	db	69	;'E'
  1672  00FDFA  20                 	db	32
  1673  00FDFB  25                 	db	37
  1674  00FDFC  31                 	db	49	;'1'
  1675  00FDFD  75                 	db	117	;'u'
  1676  00FDFE  3A                 	db	58	;':'
  1677  00FDFF  20                 	db	32
  1678  00FE00  50                 	db	80	;'P'
  1679  00FE01  53                 	db	83	;'S'
  1680  00FE02  20                 	db	32
  1681  00FE03  54                 	db	84	;'T'
  1682  00FE04  65                 	db	101	;'e'
  1683  00FE05  73                 	db	115	;'s'
  1684  00FE06  74                 	db	116	;'t'
  1685  00FE07  20                 	db	32
  1686  00FE08  25                 	db	37
  1687  00FE09  31                 	db	49	;'1'
  1688  00FE0A  75                 	db	117	;'u'
  1689  00FE0B  3A                 	db	58	;':'
  1690  00FE0C  20                 	db	32
  1691  00FE0D  44                 	db	68	;'D'
  1692  00FE0E  41                 	db	65	;'A'
  1693  00FE0F  43                 	db	67	;'C'
  1694  00FE10  20                 	db	32
  1695  00FE11  4F                 	db	79	;'O'
  1696  00FE12  55                 	db	85	;'U'
  1697  00FE13  54                 	db	84	;'T'
  1698  00FE14  20                 	db	32
  1699  00FE15  25                 	db	37
  1700  00FE16  34                 	db	52	;'4'
  1701  00FE17  2E                 	db	46
  1702  00FE18  34                 	db	52	;'4'
  1703  00FE19  75                 	db	117	;'u'
  1704  00FE1A  6D                 	db	109	;'m'
  1705  00FE1B  56                 	db	86	;'V'
  1706  00FE1C  20                 	db	32
  1707  00FE1D  42                 	db	66	;'B'
  1708  00FE1E  3D                 	db	61	;'='
  1709  00FE1F  25                 	db	37
  1710  00FE20  2E                 	db	46
  1711  00FE21  32                 	db	50	;'2'
  1712  00FE22  75                 	db	117	;'u'
  1713  00FE23  2C                 	db	44
  1714  00FE24  20                 	db	32
  1715  00FE25  53                 	db	83	;'S'
  1716  00FE26  75                 	db	117	;'u'
  1717  00FE27  70                 	db	112	;'p'
  1718  00FE28  70                 	db	112	;'p'
  1719  00FE29  6C                 	db	108	;'l'
  1720  00FE2A  79                 	db	121	;'y'
  1721  00FE2B  20                 	db	32
  1722  00FE2C  52                 	db	82	;'R'
  1723  00FE2D  65                 	db	101	;'e'
  1724  00FE2E  61                 	db	97	;'a'
  1725  00FE2F  64                 	db	100	;'d'
  1726  00FE30  42                 	db	66	;'B'
  1727  00FE31  61                 	db	97	;'a'
  1728  00FE32  63                 	db	99	;'c'
  1729  00FE33  6B                 	db	107	;'k'
  1730  00FE34  20                 	db	32
  1731  00FE35  25                 	db	37
  1732  00FE36  34                 	db	52	;'4'
  1733  00FE37  2E                 	db	46
  1734  00FE38  34                 	db	52	;'4'
  1735  00FE39  75                 	db	117	;'u'
  1736  00FE3A  6D                 	db	109	;'m'
  1737  00FE3B  56                 	db	86	;'V'
  1738  00FE3C  20                 	db	32
  1739  00FE3D  56                 	db	86	;'V'
  1740  00FE3E  3D                 	db	61	;'='
  1741  00FE3F  25                 	db	37
  1742  00FE40  2B                 	db	43
  1743  00FE41  36                 	db	54	;'6'
  1744  00FE42  2E                 	db	46
  1745  00FE43  31                 	db	49	;'1'
  1746  00FE44  66                 	db	102	;'f'
  1747  00FE45  56                 	db	86	;'V'
  1748  00FE46  20                 	db	32
  1749  00FE47  25                 	db	37
  1750  00FE48  34                 	db	52	;'4'
  1751  00FE49  2E                 	db	46
  1752  00FE4A  34                 	db	52	;'4'
  1753  00FE4B  75                 	db	117	;'u'
  1754  00FE4C  6D                 	db	109	;'m'
  1755  00FE4D  56                 	db	86	;'V'
  1756  00FE4E  20                 	db	32
  1757  00FE4F  49                 	db	73	;'I'
  1758  00FE50  3D                 	db	61	;'='
  1759  00FE51  25                 	db	37
  1760  00FE52  2B                 	db	43
  1761  00FE53  33                 	db	51	;'3'
  1762  00FE54  2E                 	db	46
  1763  00FE55  31                 	db	49	;'1'
  1764  00FE56  66                 	db	102	;'f'
  1765  00FE57  6D                 	db	109	;'m'
  1766  00FE58  41                 	db	65	;'A'
  1767  00FE59  20                 	db	32
  1768  00FE5A  3A                 	db	58	;':'
  1769  00FE5B  20                 	db	32
  1770  00FE5C  53                 	db	83	;'S'
  1771  00FE5D  74                 	db	116	;'t'
  1772  00FE5E  61                 	db	97	;'a'
  1773  00FE5F  74                 	db	116	;'t'
  1774  00FE60  69                 	db	105	;'i'
  1775  00FE61  73                 	db	115	;'s'
  1776  00FE62  74                 	db	116	;'t'
  1777  00FE63  69                 	db	105	;'i'
  1778  00FE64  63                 	db	99	;'c'
  1779  00FE65  73                 	db	115	;'s'
  1780  00FE66  20                 	db	32
  1781  00FE67  53                 	db	83	;'S'
  1782  00FE68  74                 	db	116	;'t'
  1783  00FE69  64                 	db	100	;'d'
  1784  00FE6A  3D                 	db	61	;'='
  1785  00FE6B  25                 	db	37
  1786  00FE6C  36                 	db	54	;'6'
  1787  00FE6D  2E                 	db	46
  1788  00FE6E  31                 	db	49	;'1'
  1789  00FE6F  66                 	db	102	;'f'
  1790  00FE70  56                 	db	86	;'V'
  1791  00FE71  20                 	db	32
  1792  00FE72  56                 	db	86	;'V'
  1793  00FE73  61                 	db	97	;'a'
  1794  00FE74  72                 	db	114	;'r'
  1795  00FE75  3D                 	db	61	;'='
  1796  00FE76  25                 	db	37
  1797  00FE77  36                 	db	54	;'6'
  1798  00FE78  2E                 	db	46
  1799  00FE79  31                 	db	49	;'1'
  1800  00FE7A  66                 	db	102	;'f'
  1801  00FE7B  56                 	db	86	;'V'
  1802  00FE7C  20                 	db	32
  1803  00FE7D  4D                 	db	77	;'M'
  1804  00FE7E  65                 	db	101	;'e'
  1805  00FE7F  61                 	db	97	;'a'
  1806  00FE80  6E                 	db	110	;'n'
  1807  00FE81  3D                 	db	61	;'='
  1808  00FE82  25                 	db	37
  1809  00FE83  36                 	db	54	;'6'
  1810  00FE84  2E                 	db	46
  1811  00FE85  31                 	db	49	;'1'
  1812  00FE86  66                 	db	102	;'f'
  1813  00FE87  56                 	db	86	;'V'
  1814  00FE88  0D                 	db	13
  1815  00FE89  0A                 	db	10
  1816  00FE8A  00                 	db	0
  1817  00FE8B                     STR_11:
  1818                           
  1819                           ; BSR set to: 61
  1820  00FE8B  0D                 	db	13
  1821  00FE8C  0A                 	db	10
  1822  00FE8D  20                 	db	32
  1823  00FE8E  41                 	db	65	;'A'
  1824  00FE8F  43                 	db	67	;'C'
  1825  00FE90  43                 	db	67	;'C'
  1826  00FE91  45                 	db	69	;'E'
  1827  00FE92  4C                 	db	76	;'L'
  1828  00FE93  20                 	db	32
  1829  00FE94  53                 	db	83	;'S'
  1830  00FE95  75                 	db	117	;'u'
  1831  00FE96  70                 	db	112	;'p'
  1832  00FE97  70                 	db	112	;'p'
  1833  00FE98  72                 	db	114	;'r'
  1834  00FE99  65                 	db	101	;'e'
  1835  00FE9A  73                 	db	115	;'s'
  1836  00FE9B  73                 	db	115	;'s'
  1837  00FE9C  69                 	db	105	;'i'
  1838  00FE9D  6F                 	db	111	;'o'
  1839  00FE9E  6E                 	db	110	;'n'
  1840  00FE9F  20                 	db	32
  1841  00FEA0  53                 	db	83	;'S'
  1842  00FEA1  75                 	db	117	;'u'
  1843  00FEA2  70                 	db	112	;'p'
  1844  00FEA3  70                 	db	112	;'p'
  1845  00FEA4  6C                 	db	108	;'l'
  1846  00FEA5  79                 	db	121	;'y'
  1847  00FEA6  20                 	db	32
  1848  00FEA7  0D                 	db	13
  1849  00FEA8  0A                 	db	10
  1850  00FEA9  00                 	db	0
  1851  00FEAA                     STR_10:
  1852                           
  1853                           ; BSR set to: 61
  1854  00FEAA  0D                 	db	13
  1855  00FEAB  0A                 	db	10
  1856  00FEAC  20                 	db	32
  1857  00FEAD  45                 	db	69	;'E'
  1858  00FEAE  58                 	db	88	;'X'
  1859  00FEAF  54                 	db	84	;'T'
  1860  00FEB0  20                 	db	32
  1861  00FEB1  53                 	db	83	;'S'
  1862  00FEB2  75                 	db	117	;'u'
  1863  00FEB3  70                 	db	112	;'p'
  1864  00FEB4  70                 	db	112	;'p'
  1865  00FEB5  72                 	db	114	;'r'
  1866  00FEB6  65                 	db	101	;'e'
  1867  00FEB7  73                 	db	115	;'s'
  1868  00FEB8  73                 	db	115	;'s'
  1869  00FEB9  69                 	db	105	;'i'
  1870  00FEBA  6F                 	db	111	;'o'
  1871  00FEBB  6E                 	db	110	;'n'
  1872  00FEBC  20                 	db	32
  1873  00FEBD  53                 	db	83	;'S'
  1874  00FEBE  75                 	db	117	;'u'
  1875  00FEBF  70                 	db	112	;'p'
  1876  00FEC0  70                 	db	112	;'p'
  1877  00FEC1  6C                 	db	108	;'l'
  1878  00FEC2  79                 	db	121	;'y'
  1879  00FEC3  20                 	db	32
  1880  00FEC4  0D                 	db	13
  1881  00FEC5  0A                 	db	10
  1882  00FEC6  00                 	db	0
  1883  00FEC7                     STR_4:
  1884                           
  1885                           ; BSR set to: 61
  1886  00FEC7  0D                 	db	13
  1887  00FEC8  0A                 	db	10
  1888  00FEC9  20                 	db	32
  1889  00FECA  53                 	db	83	;'S'
  1890  00FECB  74                 	db	116	;'t'
  1891  00FECC  65                 	db	101	;'e'
  1892  00FECD  61                 	db	97	;'a'
  1893  00FECE  64                 	db	100	;'d'
  1894  00FECF  79                 	db	121	;'y'
  1895  00FED0  20                 	db	32
  1896  00FED1  56                 	db	86	;'V'
  1897  00FED2  44                 	db	68	;'D'
  1898  00FED3  43                 	db	67	;'C'
  1899  00FED4  20                 	db	32
  1900  00FED5  4F                 	db	79	;'O'
  1901  00FED6  4E                 	db	78	;'N'
  1902  00FED7  20                 	db	32
  1903  00FED8  3A                 	db	58	;':'
  1904  00FED9  20                 	db	32
  1905  00FEDA  44                 	db	68	;'D'
  1906  00FEDB  65                 	db	101	;'e'
  1907  00FEDC  66                 	db	102	;'f'
  1908  00FEDD  61                 	db	97	;'a'
  1909  00FEDE  75                 	db	117	;'u'
  1910  00FEDF  6C                 	db	108	;'l'
  1911  00FEE0  74                 	db	116	;'t'
  1912  00FEE1  0D                 	db	13
  1913  00FEE2  0A                 	db	10
  1914  00FEE3  00                 	db	0
  1915  00FEE4                     STR_18:
  1916                           
  1917                           ; BSR set to: 61
  1918  00FEE4  4D                 	db	77	;'M'
  1919  00FEE5  25                 	db	37
  1920  00FEE6  31                 	db	49	;'1'
  1921  00FEE7  75                 	db	117	;'u'
  1922  00FEE8  2C                 	db	44
  1923  00FEE9  20                 	db	32
  1924  00FEEA  50                 	db	80	;'P'
  1925  00FEEB  25                 	db	37
  1926  00FEEC  31                 	db	49	;'1'
  1927  00FEED  75                 	db	117	;'u'
  1928  00FEEE  2C                 	db	44
  1929  00FEEF  20                 	db	32
  1930  00FEF0  44                 	db	68	;'D'
  1931  00FEF1  25                 	db	37
  1932  00FEF2  33                 	db	51	;'3'
  1933  00FEF3  2E                 	db	46
  1934  00FEF4  31                 	db	49	;'1'
  1935  00FEF5  66                 	db	102	;'f'
  1936  00FEF6  20                 	db	32
  1937  00FEF7  56                 	db	86	;'V'
  1938  00FEF8  25                 	db	37
  1939  00FEF9  33                 	db	51	;'3'
  1940  00FEFA  2E                 	db	46
  1941  00FEFB  31                 	db	49	;'1'
  1942  00FEFC  66                 	db	102	;'f'
  1943  00FEFD  20                 	db	32
  1944  00FEFE  20                 	db	32
  1945  00FEFF  20                 	db	32
  1946  00FF00  00                 	db	0
  1947  00FF01                     STR_16:
  1948                           
  1949                           ; BSR set to: 61
  1950  00FF01  25                 	db	37
  1951  00FF02  34                 	db	52	;'4'
  1952  00FF03  2E                 	db	46
  1953  00FF04  34                 	db	52	;'4'
  1954  00FF05  75                 	db	117	;'u'
  1955  00FF06  6D                 	db	109	;'m'
  1956  00FF07  56                 	db	86	;'V'
  1957  00FF08  20                 	db	32
  1958  00FF09  25                 	db	37
  1959  00FF0A  34                 	db	52	;'4'
  1960  00FF0B  2E                 	db	46
  1961  00FF0C  34                 	db	52	;'4'
  1962  00FF0D  75                 	db	117	;'u'
  1963  00FF0E  6D                 	db	109	;'m'
  1964  00FF0F  56                 	db	86	;'V'
  1965  00FF10  20                 	db	32
  1966  00FF11  25                 	db	37
  1967  00FF12  34                 	db	52	;'4'
  1968  00FF13  2E                 	db	46
  1969  00FF14  34                 	db	52	;'4'
  1970  00FF15  75                 	db	117	;'u'
  1971  00FF16  6D                 	db	109	;'m'
  1972  00FF17  56                 	db	86	;'V'
  1973  00FF18  00                 	db	0
  1974  00FF19                     STR_19:
  1975                           
  1976                           ; BSR set to: 61
  1977  00FF19  56                 	db	86	;'V'
  1978  00FF1A  3D                 	db	61	;'='
  1979  00FF1B  25                 	db	37
  1980  00FF1C  2B                 	db	43
  1981  00FF1D  36                 	db	54	;'6'
  1982  00FF1E  2E                 	db	46
  1983  00FF1F  31                 	db	49	;'1'
  1984  00FF20  66                 	db	102	;'f'
  1985  00FF21  56                 	db	86	;'V'
  1986  00FF22  20                 	db	32
  1987  00FF23  49                 	db	73	;'I'
  1988  00FF24  3D                 	db	61	;'='
  1989  00FF25  25                 	db	37
  1990  00FF26  2B                 	db	43
  1991  00FF27  33                 	db	51	;'3'
  1992  00FF28  2E                 	db	46
  1993  00FF29  31                 	db	49	;'1'
  1994  00FF2A  66                 	db	102	;'f'
  1995  00FF2B  6D                 	db	109	;'m'
  1996  00FF2C  41                 	db	65	;'A'
  1997  00FF2D  20                 	db	32
  1998  00FF2E  20                 	db	32
  1999  00FF2F  00                 	db	0
  2000  00FF30                     STR_6:
  2001                           
  2002                           ; BSR set to: 61
  2003  00FF30  0D                 	db	13
  2004  00FF31  0A                 	db	10
  2005  00FF32  20                 	db	32
  2006  00FF33  56                 	db	86	;'V'
  2007  00FF34  6F                 	db	111	;'o'
  2008  00FF35  6C                 	db	108	;'l'
  2009  00FF36  74                 	db	116	;'t'
  2010  00FF37  61                 	db	97	;'a'
  2011  00FF38  67                 	db	103	;'g'
  2012  00FF39  65                 	db	101	;'e'
  2013  00FF3A  20                 	db	32
  2014  00FF3B  4F                 	db	79	;'O'
  2015  00FF3C  4E                 	db	78	;'N'
  2016  00FF3D  20                 	db	32
  2017  00FF3E  3A                 	db	58	;':'
  2018  00FF3F  20                 	db	32
  2019  00FF40  53                 	db	83	;'S'
  2020  00FF41  65                 	db	101	;'e'
  2021  00FF42  74                 	db	116	;'t'
  2022  00FF43  0D                 	db	13
  2023  00FF44  0A                 	db	10
  2024  00FF45  00                 	db	0
  2025  00FF46                     STR_8:
  2026                           
  2027                           ; BSR set to: 61
  2028  00FF46  0D                 	db	13
  2029  00FF47  0A                 	db	10
  2030  00FF48  20                 	db	32
  2031  00FF49  56                 	db	86	;'V'
  2032  00FF4A  6F                 	db	111	;'o'
  2033  00FF4B  6C                 	db	108	;'l'
  2034  00FF4C  74                 	db	116	;'t'
  2035  00FF4D  61                 	db	97	;'a'
  2036  00FF4E  67                 	db	103	;'g'
  2037  00FF4F  65                 	db	101	;'e'
  2038  00FF50  20                 	db	32
  2039  00FF51  44                 	db	68	;'D'
  2040  00FF52  4F                 	db	79	;'O'
  2041  00FF53  57                 	db	87	;'W'
  2042  00FF54  4E                 	db	78	;'N'
  2043  00FF55  20                 	db	32
  2044  00FF56  0D                 	db	13
  2045  00FF57  0A                 	db	10
  2046  00FF58  00                 	db	0
  2047  00FF59                     STR_5:
  2048                           
  2049                           ; BSR set to: 61
  2050  00FF59  0D                 	db	13
  2051  00FF5A  0A                 	db	10
  2052  00FF5B  20                 	db	32
  2053  00FF5C  56                 	db	86	;'V'
  2054  00FF5D  6F                 	db	111	;'o'
  2055  00FF5E  6C                 	db	108	;'l'
  2056  00FF5F  74                 	db	116	;'t'
  2057  00FF60  61                 	db	97	;'a'
  2058  00FF61  67                 	db	103	;'g'
  2059  00FF62  65                 	db	101	;'e'
  2060  00FF63  20                 	db	32
  2061  00FF64  4F                 	db	79	;'O'
  2062  00FF65  46                 	db	70	;'F'
  2063  00FF66  46                 	db	70	;'F'
  2064  00FF67  20                 	db	32
  2065  00FF68  0D                 	db	13
  2066  00FF69  0A                 	db	10
  2067  00FF6A  00                 	db	0
  2068  00FF6B                     STR_3:
  2069                           
  2070                           ; BSR set to: 61
  2071  00FF6B  0D                 	db	13
  2072  00FF6C  0A                 	db	10
  2073  00FF6D  20                 	db	32
  2074  00FF6E  52                 	db	82	;'R'
  2075  00FF6F  61                 	db	97	;'a'
  2076  00FF70  6D                 	db	109	;'m'
  2077  00FF71  70                 	db	112	;'p'
  2078  00FF72  20                 	db	32
  2079  00FF73  56                 	db	86	;'V'
  2080  00FF74  44                 	db	68	;'D'
  2081  00FF75  43                 	db	67	;'C'
  2082  00FF76  20                 	db	32
  2083  00FF77  4F                 	db	79	;'O'
  2084  00FF78  4E                 	db	78	;'N'
  2085  00FF79  20                 	db	32
  2086  00FF7A  0D                 	db	13
  2087  00FF7B  0A                 	db	10
  2088  00FF7C  00                 	db	0
  2089  00FF7D                     STR_9:
  2090                           
  2091                           ; BSR set to: 61
  2092  00FF7D  0D                 	db	13
  2093  00FF7E  0A                 	db	10
  2094  00FF7F  20                 	db	32
  2095  00FF80  56                 	db	86	;'V'
  2096  00FF81  6F                 	db	111	;'o'
  2097  00FF82  6C                 	db	108	;'l'
  2098  00FF83  74                 	db	116	;'t'
  2099  00FF84  61                 	db	97	;'a'
  2100  00FF85  67                 	db	103	;'g'
  2101  00FF86  65                 	db	101	;'e'
  2102  00FF87  20                 	db	32
  2103  00FF88  4C                 	db	76	;'L'
  2104  00FF89  4F                 	db	79	;'O'
  2105  00FF8A  57                 	db	87	;'W'
  2106  00FF8B  20                 	db	32
  2107  00FF8C  0D                 	db	13
  2108  00FF8D  0A                 	db	10
  2109  00FF8E  00                 	db	0
  2110  00FF8F                     STR_7:
  2111                           
  2112                           ; BSR set to: 61
  2113  00FF8F  0D                 	db	13
  2114  00FF90  0A                 	db	10
  2115  00FF91  20                 	db	32
  2116  00FF92  56                 	db	86	;'V'
  2117  00FF93  6F                 	db	111	;'o'
  2118  00FF94  6C                 	db	108	;'l'
  2119  00FF95  74                 	db	116	;'t'
  2120  00FF96  61                 	db	97	;'a'
  2121  00FF97  67                 	db	103	;'g'
  2122  00FF98  65                 	db	101	;'e'
  2123  00FF99  20                 	db	32
  2124  00FF9A  55                 	db	85	;'U'
  2125  00FF9B  50                 	db	80	;'P'
  2126  00FF9C  20                 	db	32
  2127  00FF9D  0D                 	db	13
  2128  00FF9E  0A                 	db	10
  2129  00FF9F  00                 	db	0
  2130  00FFA0                     STR_12:
  2131                           
  2132                           ; BSR set to: 61
  2133  00FFA0  0D                 	db	13
  2134  00FFA1  0A                 	db	10
  2135  00FFA2  20                 	db	32
  2136  00FFA3  42                 	db	66	;'B'
  2137  00FFA4  75                 	db	117	;'u'
  2138  00FFA5  69                 	db	105	;'i'
  2139  00FFA6  6C                 	db	108	;'l'
  2140  00FFA7  64                 	db	100	;'d'
  2141  00FFA8  20                 	db	32
  2142  00FFA9  25                 	db	37
  2143  00FFAA  73                 	db	115	;'s'
  2144  00FFAB  20                 	db	32
  2145  00FFAC  25                 	db	37
  2146  00FFAD  73                 	db	115	;'s'
  2147  00FFAE  0D                 	db	13
  2148  00FFAF  0A                 	db	10
  2149  00FFB0  00                 	db	0
  2150  00FFB1                     STR_1:
  2151                           
  2152                           ; BSR set to: 61
  2153  00FFB1  41                 	db	65	;'A'
  2154  00FFB2  70                 	db	112	;'p'
  2155  00FFB3  72                 	db	114	;'r'
  2156  00FFB4  20                 	db	32
  2157  00FFB5  31                 	db	49	;'1'
  2158  00FFB6  34                 	db	52	;'4'
  2159  00FFB7  20                 	db	32
  2160  00FFB8  32                 	db	50	;'2'
  2161  00FFB9  30                 	db	48	;'0'
  2162  00FFBA  32                 	db	50	;'2'
  2163  00FFBB  32                 	db	50	;'2'
  2164  00FFBC  00                 	db	0
  2165  00FFBD                     STR_2:
  2166                           
  2167                           ; BSR set to: 61
  2168  00FFBD  32                 	db	50	;'2'
  2169  00FFBE  32                 	db	50	;'2'
  2170  00FFBF  3A                 	db	58	;':'
  2171  00FFC0  31                 	db	49	;'1'
  2172  00FFC1  31                 	db	49	;'1'
  2173  00FFC2  3A                 	db	58	;':'
  2174  00FFC3  31                 	db	49	;'1'
  2175  00FFC4  30                 	db	48	;'0'
  2176  00FFC5  00                 	db	0
  2177  00FFC6                     STR_13:
  2178                           
  2179                           ; BSR set to: 61
  2180  00FFC6  25                 	db	37
  2181  00FFC7  73                 	db	115	;'s'
  2182  00FFC8  20                 	db	32
  2183  00FFC9  25                 	db	37
  2184  00FFCA  73                 	db	115	;'s'
  2185  00FFCB  00                 	db	0
  2186  00FFCC                     STR_30:
  2187                           
  2188                           ; BSR set to: 61
  2189  00FFCC  49                 	db	73	;'I'
  2190  00FFCD  4E                 	db	78	;'N'
  2191  00FFCE  46                 	db	70	;'F'
  2192  00FFCF  00                 	db	0
  2193  00FFD0                     STR_34:
  2194                           
  2195                           ; BSR set to: 61
  2196  00FFD0  4E                 	db	78	;'N'
  2197  00FFD1  41                 	db	65	;'A'
  2198  00FFD2  4E                 	db	78	;'N'
  2199  00FFD3  00                 	db	0
  2200  00FFD4                     STR_31:
  2201                           
  2202                           ; BSR set to: 61
  2203  00FFD4  69                 	db	105	;'i'
  2204  00FFD5  6E                 	db	110	;'n'
  2205  00FFD6  66                 	db	102	;'f'
  2206  00FFD7  00                 	db	0
  2207  00FFD8                     STR_35:
  2208                           
  2209                           ; BSR set to: 61
  2210  00FFD8  6E                 	db	110	;'n'
  2211  00FFD9  61                 	db	97	;'a'
  2212  00FFDA  6E                 	db	110	;'n'
  2213  00FFDB  00                 	db	0
  2214  00FFDC                     STR_43:
  2215                           
  2216                           ; BSR set to: 61
  2217  00FFDC  6C                 	db	108	;'l'
  2218  00FFDD  6C                 	db	108	;'l'
  2219  00FFDE  73                 	db	115	;'s'
  2220  00FFDF  00                 	db	0
  2221  00FFE0                     STR_38:
  2222                           
  2223                           ; BSR set to: 61
  2224  00FFE0  6C                 	db	108	;'l'
  2225  00FFE1  66                 	db	102	;'f'
  2226  00FFE2  00                 	db	0
  2227  00FFE3                     STR_27:
  2228                           
  2229                           ; BSR set to: 61
  2230  00FFE3  70                 	db	112	;'p'
  2231  00FFE4  30                 	db	48	;'0'
  2232  00FFE5  00                 	db	0
  2233  00FFE6                     STR_28:
  2234                           
  2235                           ; BSR set to: 61
  2236  00FFE6  70                 	db	112	;'p'
  2237  00FFE7  31                 	db	49	;'1'
  2238  00FFE8  00                 	db	0
  2239  00FFE9                     STR_25:
  2240                           
  2241                           ; BSR set to: 61
  2242  00FFE9  70                 	db	112	;'p'
  2243  00FFEA  64                 	db	100	;'d'
  2244  00FFEB  00                 	db	0
  2245  00FFEC                     STR_26:
  2246                           
  2247                           ; BSR set to: 61
  2248  00FFEC  70                 	db	112	;'p'
  2249  00FFED  6C                 	db	108	;'l'
  2250  00FFEE  00                 	db	0
  2251  00FFEF                     STR_22:
  2252                           
  2253                           ; BSR set to: 61
  2254  00FFEF  70                 	db	112	;'p'
  2255  00FFF0  6F                 	db	111	;'o'
  2256  00FFF1  00                 	db	0
  2257  00FFF2                     STR_23:
  2258                           
  2259                           ; BSR set to: 61
  2260  00FFF2  70                 	db	112	;'p'
  2261  00FFF3  70                 	db	112	;'p'
  2262  00FFF4  00                 	db	0
  2263  00FFF5                     STR_20:
  2264                           
  2265                           ; BSR set to: 61
  2266  00FFF5  70                 	db	112	;'p'
  2267  00FFF6  72                 	db	114	;'r'
  2268  00FFF7  00                 	db	0
  2269  00FFF8                     STR_21:
  2270                           
  2271                           ; BSR set to: 61
  2272  00FFF8  70                 	db	112	;'p'
  2273  00FFF9  73                 	db	115	;'s'
  2274  00FFFA  00                 	db	0
  2275  00FFFB                     STR_24:
  2276                           
  2277                           ; BSR set to: 61
  2278  00FFFB  70                 	db	112	;'p'
  2279  00FFFC  75                 	db	117	;'u'
  2280  00FFFD  00                 	db	0
  2281  00FFFE  00                 	db	0	; dummy byte at the end
  2282  0000                     
  2283                           ; #config settings
  2284                           
  2285                           	psect	cinit
  2286  013888                     __pcinit:
  2287                           	callstack 0
  2288  013888                     start_initialization:
  2289                           	callstack 0
  2290  013888                     __initialization:
  2291                           	callstack 0
  2292                           
  2293                           ; Initialize objects allocated to BIGRAM (1024 bytes)
  2294                           ; load TBLPTR registers with __pidataBIGRAM
  2295  013888  0EE2               	movlw	low __pidataBIGRAM
  2296  01388A  6EF6               	movwf	tblptrl,c
  2297  01388C  0E1B               	movlw	high __pidataBIGRAM
  2298  01388E  6EF7               	movwf	tblptrh,c
  2299  013890  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2300  013892  6EF8               	movwf	tblptru,c
  2301  013894  EE05  F143         	lfsr	0,__pdataBIGRAM
  2302  013898  EE11 F000          	lfsr	1,1024
  2303  01389C                     copy_data0:
  2304  01389C  0009               	tblrd		*+
  2305  01389E  006F FFD7 FFEE     	movff	tablat,postinc0
  2306  0138A4  50E5               	movf	postdec1,w,c
  2307  0138A6  50E1               	movf	fsr1l,w,c
  2308  0138A8  E1F9               	bnz	copy_data0
  2309  0138AA  50E2               	movf	fsr1h,w,c
  2310  0138AC  E1F7               	bnz	copy_data0
  2311                           
  2312                           ; Initialize objects allocated to BANK2 (90 bytes)
  2313                           ; load TBLPTR registers with __pidataBANK2
  2314  0138AE  0EBE               	movlw	low __pidataBANK2
  2315  0138B0  6EF6               	movwf	tblptrl,c
  2316  0138B2  0E47               	movlw	high __pidataBANK2
  2317  0138B4  6EF7               	movwf	tblptrh,c
  2318  0138B6  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2319  0138B8  6EF8               	movwf	tblptru,c
  2320  0138BA  EE00  F290         	lfsr	0,__pdataBANK2
  2321  0138BE  EE10 F05A          	lfsr	1,90
  2322  0138C2                     copy_data1:
  2323  0138C2  0009               	tblrd		*+
  2324  0138C4  006F FFD7 FFEE     	movff	tablat,postinc0
  2325  0138CA  50E5               	movf	postdec1,w,c
  2326  0138CC  50E1               	movf	fsr1l,w,c
  2327  0138CE  E1F9               	bnz	copy_data1
  2328                           
  2329                           ; Initialize objects allocated to BANK1 (13 bytes)
  2330                           ; load TBLPTR registers with __pidataBANK1
  2331  0138D0  0E6E               	movlw	low __pidataBANK1
  2332  0138D2  6EF6               	movwf	tblptrl,c
  2333  0138D4  0E56               	movlw	high __pidataBANK1
  2334  0138D6  6EF7               	movwf	tblptrh,c
  2335  0138D8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2336  0138DA  6EF8               	movwf	tblptru,c
  2337  0138DC  EE00  F1A4         	lfsr	0,__pdataBANK1
  2338  0138E0  EE10 F00D          	lfsr	1,13
  2339  0138E4                     copy_data2:
  2340  0138E4  0009               	tblrd		*+
  2341  0138E6  006F FFD7 FFEE     	movff	tablat,postinc0
  2342  0138EC  50E5               	movf	postdec1,w,c
  2343  0138EE  50E1               	movf	fsr1l,w,c
  2344  0138F0  E1F9               	bnz	copy_data2
  2345                           
  2346                           ; Initialize objects allocated to BANK0 (2 bytes)
  2347                           ; load TBLPTR registers with __pidataBANK0
  2348  0138F2  0EC6               	movlw	low __pidataBANK0
  2349  0138F4  6EF6               	movwf	tblptrl,c
  2350  0138F6  0E56               	movlw	high __pidataBANK0
  2351  0138F8  6EF7               	movwf	tblptrh,c
  2352  0138FA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2353  0138FC  6EF8               	movwf	tblptru,c
  2354  0138FE  0009               	tblrd		*+	;fetch initializer
  2355  013900  006F FFD4  F0FB    	movff	tablat,__pdataBANK0
  2356  013906  0009               	tblrd		*+	;fetch initializer
  2357  013908  006F FFD4  F0FC    	movff	tablat,__pdataBANK0+1
  2358                           
  2359                           ; Clear objects allocated to BIGRAM (4032 bytes)
  2360  01390E  EE01  F183         	lfsr	0,__pbssBIGRAM
  2361  013912  EE13 F3C0          	lfsr	1,4032
  2362  013916                     clear_0:
  2363  013916  6AEE               	clrf	postinc0,c
  2364  013918  50E5               	movf	postdec1,w,c
  2365  01391A  50E1               	movf	fsr1l,w,c
  2366  01391C  E1FC               	bnz	clear_0
  2367  01391E  50E2               	movf	fsr1h,w,c
  2368  013920  E1FA               	bnz	clear_0
  2369                           
  2370                           ; Clear objects allocated to BANK5 (131 bytes)
  2371  013922  EE01  F100         	lfsr	0,__pbssBANK5
  2372  013926  0E83               	movlw	131
  2373  013928                     clear_1:
  2374  013928  6AEE               	clrf	postinc0,c
  2375  01392A  06E8               	decf	wreg,f,c
  2376  01392C  E1FD               	bnz	clear_1
  2377                           
  2378                           ; Clear objects allocated to BANK4 (255 bytes)
  2379  01392E  EE01  F000         	lfsr	0,__pbssBANK4
  2380  013932  EE10 F0FF          	lfsr	1,255
  2381  013936                     clear_2:
  2382  013936  6AEE               	clrf	postinc0,c
  2383  013938  50E5               	movf	postdec1,w,c
  2384  01393A  50E1               	movf	fsr1l,w,c
  2385  01393C  E1FC               	bnz	clear_2
  2386  01393E  50E2               	movf	fsr1h,w,c
  2387  013940  E1FA               	bnz	clear_2
  2388                           
  2389                           ; Clear objects allocated to BANK3 (195 bytes)
  2390  013942  EE00  F300         	lfsr	0,__pbssBANK3
  2391  013946  0EC3               	movlw	195
  2392  013948                     clear_3:
  2393  013948  6AEE               	clrf	postinc0,c
  2394  01394A  06E8               	decf	wreg,f,c
  2395  01394C  E1FD               	bnz	clear_3
  2396                           
  2397                           ; Clear objects allocated to BANK2 (144 bytes)
  2398  01394E  EE00  F200         	lfsr	0,__pbssBANK2
  2399  013952  0E90               	movlw	144
  2400  013954                     clear_4:
  2401  013954  6AEE               	clrf	postinc0,c
  2402  013956  06E8               	decf	wreg,f,c
  2403  013958  E1FD               	bnz	clear_4
  2404                           
  2405                           ; Clear objects allocated to BANK1 (108 bytes)
  2406  01395A  EE00  F100         	lfsr	0,__pbssBANK1
  2407  01395E  0E6C               	movlw	108
  2408  013960                     clear_5:
  2409  013960  6AEE               	clrf	postinc0,c
  2410  013962  06E8               	decf	wreg,f,c
  2411  013964  E1FD               	bnz	clear_5
  2412                           
  2413                           ; Clear objects allocated to BANK0 (3 bytes)
  2414  013966  0100               	movlb	0
  2415  013968  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
  2416  01396A  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
  2417  01396C  6BF8               	clrf	__pbssBANK0& (0+255),b
  2418                           
  2419                           ; Clear objects allocated to COMRAM (31 bytes)
  2420  01396E  EE00  F022         	lfsr	0,__pbssCOMRAM
  2421  013972  0E1F               	movlw	31
  2422  013974                     clear_6:
  2423  013974  6AEE               	clrf	postinc0,c
  2424  013976  06E8               	decf	wreg,f,c
  2425  013978  E1FD               	bnz	clear_6
  2426                           
  2427                           ;
  2428                           ; Setup IVTBASE
  2429                           ;
  2430  01397A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2431  01397C  6ED5               	movwf	213,c
  2432  01397E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2433  013980  6ED6               	movwf	214,c
  2434  013982  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2435  013984  6ED7               	movwf	215,c
  2436  013986                     end_of_initialization:
  2437                           	callstack 0
  2438  013986                     __end_of__initialization:
  2439                           	callstack 0
  2440  013986  0100               	movlb	0
  2441  013988  EF64  F088         	goto	_main	;jump to C main() function
  2442                           
  2443                           	psect	bssCOMRAM
  2444  000022                     __pbssCOMRAM:
  2445                           	callstack 0
  2446  000022                     _variance:
  2447                           	callstack 0
  2448  000022                     	ds	4
  2449  000026                     _UART1_TxInterruptHandler:
  2450                           	callstack 0
  2451  000026                     	ds	3
  2452  000029                     _UART1_RxInterruptHandler:
  2453                           	callstack 0
  2454  000029                     	ds	3
  2455  00002C                     _width:
  2456                           	callstack 0
  2457  00002C                     	ds	2
  2458  00002E                     _flags:
  2459                           	callstack 0
  2460  00002E                     	ds	2
  2461  000030                     _timer5ReloadVal:
  2462                           	callstack 0
  2463  000030                     	ds	2
  2464  000032                     TMR6_ISR@CountCallBack:
  2465                           	callstack 0
  2466  000032                     	ds	2
  2467  000034                     _res:
  2468                           	callstack 0
  2469  000034                     	ds	1
  2470  000035                     Adc_Isr@c_adc_chan:
  2471                           	callstack 0
  2472  000035                     	ds	1
  2473  000036                     _ps_type_index:
  2474                           	callstack 0
  2475  000036                     	ds	1
  2476  000037                     _mode:
  2477                           	callstack 0
  2478  000037                     	ds	1
  2479  000038                     _i_index:
  2480                           	callstack 0
  2481  000038                     	ds	1
  2482  000039                     _a_index:
  2483                           	callstack 0
  2484  000039                     	ds	1
  2485  00003A                     _uart1RxLastError:
  2486                           	callstack 0
  2487  00003A                     	ds	1
  2488  00003B                     _uart1RxCount:
  2489                           	callstack 0
  2490  00003B                     	ds	1
  2491  00003C                     _uart1RxTail:
  2492                           	callstack 0
  2493  00003C                     	ds	1
  2494  00003D                     _uart1RxHead:
  2495                           	callstack 0
  2496  00003D                     	ds	1
  2497  00003E                     _uart1TxBufferRemaining:
  2498                           	callstack 0
  2499  00003E                     	ds	1
  2500  00003F                     _uart1TxTail:
  2501                           	callstack 0
  2502  00003F                     	ds	1
  2503  000040                     _uart1TxHead:
  2504                           	callstack 0
  2505  000040                     	ds	1
  2506                           
  2507                           	psect	bssBANK0
  2508  0000F8                     __pbssBANK0:
  2509                           	callstack 0
  2510  0000F8                     _prec:
  2511                           	callstack 0
  2512  0000F8                     	ds	2
  2513  0000FA                     _dac_v:
  2514                           	callstack 0
  2515  0000FA                     	ds	1
  2516                           
  2517                           	psect	dataBANK0
  2518  0000FB                     __pdataBANK0:
  2519                           	callstack 0
  2520  0000FB                     _ps_type_ptr:
  2521                           	callstack 0
  2522  0000FB                     	ds	2
  2523                           
  2524                           	psect	bssBANK1
  2525  000100                     __pbssBANK1:
  2526                           	callstack 0
  2527  000100                     _spi_link:
  2528                           	callstack 0
  2529  000100                     	ds	12
  2530  00010C                     _tickCount:
  2531                           	callstack 0
  2532  00010C                     	ds	12
  2533  000118                     floorf@F526:
  2534                           	callstack 0
  2535  000118                     	ds	4
  2536  00011C                     ___fpclassifyf@F465:
  2537                           	callstack 0
  2538  00011C                     	ds	4
  2539  000120                     wdtdelay@dcount:
  2540                           	callstack 0
  2541  000120                     	ds	4
  2542  000124                     _stddeviation:
  2543                           	callstack 0
  2544  000124                     	ds	4
  2545  000128                     _mean:
  2546                           	callstack 0
  2547  000128                     	ds	4
  2548  00012C                     _sumsqr:
  2549                           	callstack 0
  2550  00012C                     	ds	4
  2551  000130                     _sum:
  2552                           	callstack 0
  2553  000130                     	ds	4
  2554  000134                     _deviation:
  2555                           	callstack 0
  2556  000134                     	ds	4
  2557  000138                     _ival:
  2558                           	callstack 0
  2559  000138                     	ds	4
  2560  00013C                     _vval:
  2561                           	callstack 0
  2562  00013C                     	ds	4
  2563  000140                     _UART1_ErrorHandler:
  2564                           	callstack 0
  2565  000140                     	ds	3
  2566  000143                     _UART1_OverrunErrorHandler:
  2567                           	callstack 0
  2568  000143                     	ds	3
  2569  000146                     _UART1_FramingErrorHandler:
  2570                           	callstack 0
  2571  000146                     	ds	3
  2572  000149                     _DMA1_SCNTI_InterruptHandler:
  2573                           	callstack 0
  2574  000149                     	ds	3
  2575  00014C                     _TMR5_InterruptHandler:
  2576                           	callstack 0
  2577  00014C                     	ds	3
  2578  00014F                     _TMR6_InterruptHandler:
  2579                           	callstack 0
  2580  00014F                     	ds	3
  2581  000152                     _ADCC_ADI_InterruptHandler:
  2582                           	callstack 0
  2583  000152                     	ds	3
  2584  000155                     _UART1_UARTInterruptHandler:
  2585                           	callstack 0
  2586  000155                     	ds	3
  2587  000158                     _UART1_FramingErrorInterruptHandler:
  2588                           	callstack 0
  2589  000158                     	ds	3
  2590  00015B                     _errno:
  2591                           	callstack 0
  2592  00015B                     	ds	2
  2593  00015D                     _nout:
  2594                           	callstack 0
  2595  00015D                     	ds	2
  2596  00015F                     _mode_sw:
  2597                           	callstack 0
  2598  00015F                     	ds	1
  2599  000160                     _adc_tick:
  2600                           	callstack 0
  2601  000160                     	ds	1
  2602  000161                     _disp_tick:
  2603                           	callstack 0
  2604  000161                     	ds	1
  2605  000162                     _SrcVarName0:
  2606                           	callstack 0
  2607  000162                     	ds	10
  2608                           
  2609                           	psect	dataBANK1
  2610  0001A4                     __pdataBANK1:
  2611                           	callstack 0
  2612  0001A4                     stoa@F1164:
  2613                           	callstack 0
  2614  0001A4                     	ds	7
  2615  0001AB                     _build_time:
  2616                           	callstack 0
  2617  0001AB                     	ds	2
  2618  0001AD                     _build_date:
  2619                           	callstack 0
  2620  0001AD                     	ds	2
  2621  0001AF                     _static_ps:
  2622                           	callstack 0
  2623  0001AF                     	ds	1
  2624  0001B0                     _roll_max:
  2625                           	callstack 0
  2626  0001B0                     	ds	1
  2627                           
  2628                           	psect	bssBANK2
  2629  000200                     __pbssBANK2:
  2630                           	callstack 0
  2631  000200                     _uart1RxStatusBuffer:
  2632                           	callstack 0
  2633  000200                     	ds	64
  2634  000240                     _dbuf:
  2635                           	callstack 0
  2636  000240                     	ds	80
  2637                           
  2638                           	psect	dataBANK2
  2639  000290                     __pdataBANK2:
  2640                           	callstack 0
  2641  000290                     _g_cmds:
  2642                           	callstack 0
  2643  000290                     	ds	50
  2644  0002C2                     _ps_type:
  2645                           	callstack 0
  2646  0002C2                     	ds	40
  2647                           
  2648                           	psect	bssBANK3
  2649  000300                     __pbssBANK3:
  2650                           	callstack 0
  2651  000300                     _uart1RxBuffer:
  2652                           	callstack 0
  2653  000300                     	ds	64
  2654  000340                     _uart1TxBuffer:
  2655                           	callstack 0
  2656  000340                     	ds	64
  2657  000380                     _ring_buf1:
  2658                           	callstack 0
  2659  000380                     	ds	67
  2660                           
  2661                           	psect	bssBANK4
  2662  000400                     __pbssBANK4:
  2663                           	callstack 0
  2664  000400                     _buff1:
  2665                           	callstack 0
  2666  000400                     	ds	255
  2667                           
  2668                           	psect	bssBANK5
  2669  000500                     __pbssBANK5:
  2670                           	callstack 0
  2671  000500                     _cli_ctx:
  2672                           	callstack 0
  2673  000500                     	ds	131
  2674                           
  2675                           	psect	bssBIGRAM
  2676  000583                     __pbssBIGRAM:
  2677                           	callstack 0
  2678  000583                     _a:
  2679                           	callstack 0
  2680  000583                     	ds	4032
  2681                           
  2682                           	psect	dataBIGRAM
  2683  001543                     __pdataBIGRAM:
  2684                           	callstack 0
  2685  001543                     	ds	1024
  2686                           
  2687                           	psect	cstackBANK1
  2688  00016C                     __pcstackBANK1:
  2689                           	callstack 0
  2690  00016C                     vfpfcnvrt@llu:
  2691                           	callstack 0
  2692                           
  2693                           ; 8 bytes @ 0x0
  2694  00016C                     	ds	8
  2695  000174                     vfpfcnvrt@cp:
  2696                           	callstack 0
  2697                           
  2698                           ; 2 bytes @ 0x8
  2699  000174                     	ds	2
  2700  000176                     vfpfcnvrt@done:
  2701                           	callstack 0
  2702                           
  2703                           ; 2 bytes @ 0xA
  2704  000176                     	ds	2
  2705  000178                     _vfpfcnvrt$4236:
  2706                           	callstack 0
  2707                           
  2708                           ; 2 bytes @ 0xC
  2709  000178                     	ds	2
  2710  00017A                     vfpfcnvrt@f:
  2711                           	callstack 0
  2712                           
  2713                           ; 4 bytes @ 0xE
  2714  00017A                     	ds	4
  2715  00017E                     vfpfcnvrt@ct:
  2716                           	callstack 0
  2717                           
  2718                           ; 3 bytes @ 0x12
  2719  00017E                     	ds	3
  2720  000181                     vfpfcnvrt@c:
  2721                           	callstack 0
  2722                           
  2723                           ; 1 bytes @ 0x15
  2724  000181                     	ds	1
  2725  000182                     ?_sprintf:
  2726                           	callstack 0
  2727  000182                     ?_printf:
  2728                           	callstack 0
  2729  000182                     sprintf@s:
  2730                           	callstack 0
  2731  000182                     printf@fmt:
  2732                           	callstack 0
  2733                           
  2734                           ; 2 bytes @ 0x16
  2735  000182                     	ds	2
  2736  000184                     sprintf@fmt:
  2737                           	callstack 0
  2738                           
  2739                           ; 2 bytes @ 0x18
  2740  000184                     	ds	14
  2741  000192                     sprintf@ap:
  2742                           	callstack 0
  2743                           
  2744                           ; 2 bytes @ 0x26
  2745  000192                     	ds	2
  2746  000194                     sprintf@f:
  2747                           	callstack 0
  2748                           
  2749                           ; 11 bytes @ 0x28
  2750  000194                     	ds	16
  2751                           
  2752                           	psect	cstackBANK0
  2753  000060                     __pcstackBANK0:
  2754                           	callstack 0
  2755  000060                     ??_linux_getc:
  2756  000060                     ??_isupper:
  2757  000060                     ??_isdigit:
  2758  000060                     ??_isspace:
  2759  000060                     ??_PWM5_LoadDutyValue:
  2760  000060                     ??_PWM6_LoadDutyValue:
  2761  000060                     ??_StartTimer:
  2762  000060                     ?_fputc:
  2763                           	callstack 0
  2764  000060                     ?___fpclassifyf:
  2765                           	callstack 0
  2766  000060                     ?___wmul:
  2767                           	callstack 0
  2768  000060                     ?___awdiv:
  2769                           	callstack 0
  2770  000060                     ?___awmod:
  2771                           	callstack 0
  2772  000060                     ?_nanf:
  2773                           	callstack 0
  2774  000060                     ?___flneg:
  2775                           	callstack 0
  2776  000060                     ?___fltol:
  2777                           	callstack 0
  2778  000060                     ?___lodiv:
  2779                           	callstack 0
  2780  000060                     ?___lomod:
  2781                           	callstack 0
  2782  000060                     TimerDone@timer:
  2783                           	callstack 0
  2784  000060                     display_led@led:
  2785                           	callstack 0
  2786  000060                     DATAEE_WriteByte@bAdd:
  2787                           	callstack 0
  2788  000060                     ringBufS_put_dma@_this:
  2789                           	callstack 0
  2790  000060                     ___wmul@multiplier:
  2791                           	callstack 0
  2792  000060                     ___awdiv@dividend:
  2793                           	callstack 0
  2794  000060                     ___awmod@dividend:
  2795                           	callstack 0
  2796  000060                     memcpy@d1:
  2797                           	callstack 0
  2798  000060                     memset@dest:
  2799                           	callstack 0
  2800  000060                     fputc@c:
  2801                           	callstack 0
  2802  000060                     nanf@s:
  2803                           	callstack 0
  2804  000060                     strcpy@dest:
  2805                           	callstack 0
  2806  000060                     strlen@a:
  2807                           	callstack 0
  2808  000060                     ADCC_SetADIInterruptHandler@InterruptHandler:
  2809                           	callstack 0
  2810  000060                     TMR6_SetInterruptHandler@InterruptHandler:
  2811                           	callstack 0
  2812  000060                     TMR5_SetInterruptHandler@InterruptHandler:
  2813                           	callstack 0
  2814  000060                     DMA1_SetSCNTIInterruptHandler@InterruptHandler:
  2815                           	callstack 0
  2816  000060                     UART1_SetFramingErrorHandler@interruptHandler:
  2817                           	callstack 0
  2818  000060                     UART1_SetOverrunErrorHandler@interruptHandler:
  2819                           	callstack 0
  2820  000060                     UART1_SetErrorHandler@interruptHandler:
  2821                           	callstack 0
  2822  000060                     UART1_SetRxInterruptHandler@InterruptHandler:
  2823                           	callstack 0
  2824  000060                     UART1_SetTxInterruptHandler@InterruptHandler:
  2825                           	callstack 0
  2826  000060                     UART1_SetFramingErrorInterruptHandler@InterruptHandler:
  2827                           	callstack 0
  2828  000060                     UART1_SetUartInterruptHandler@InterruptHandler:
  2829                           	callstack 0
  2830  000060                     wdtdelay@delay:
  2831                           	callstack 0
  2832  000060                     ___fleq@ff1:
  2833                           	callstack 0
  2834  000060                     ___flneg@f1:
  2835                           	callstack 0
  2836  000060                     ___fltol@f1:
  2837                           	callstack 0
  2838  000060                     ___fpclassifyf@x:
  2839                           	callstack 0
  2840  000060                     ___lodiv@dividend:
  2841                           	callstack 0
  2842  000060                     ___lomod@dividend:
  2843                           	callstack 0
  2844                           
  2845                           ; 8 bytes @ 0x0
  2846  000060                     	ds	2
  2847  000062                     ?_strncmp:
  2848                           	callstack 0
  2849  000062                     DATAEE_WriteByte@bData:
  2850                           	callstack 0
  2851  000062                     StartTimer@timer:
  2852                           	callstack 0
  2853  000062                     ringBufS_put_dma@c:
  2854                           	callstack 0
  2855  000062                     ___wmul@multiplicand:
  2856                           	callstack 0
  2857  000062                     ___awdiv@divisor:
  2858                           	callstack 0
  2859  000062                     ___awmod@divisor:
  2860                           	callstack 0
  2861  000062                     memcpy@s1:
  2862                           	callstack 0
  2863  000062                     memset@c:
  2864                           	callstack 0
  2865  000062                     fputc@fp:
  2866                           	callstack 0
  2867  000062                     strcpy@src:
  2868                           	callstack 0
  2869  000062                     strncmp@_l:
  2870                           	callstack 0
  2871                           
  2872                           ; 2 bytes @ 0x2
  2873  000062                     	ds	1
  2874  000063                     WaitMs@numMilliseconds:
  2875                           	callstack 0
  2876                           
  2877                           ; 2 bytes @ 0x3
  2878  000063                     	ds	1
  2879  000064                     ??_fputc:
  2880  000064                     ??___fpclassifyf:
  2881  000064                     ??___fltol:
  2882  000064                     ?_tolower:
  2883                           	callstack 0
  2884  000064                     ?___xxtofl:
  2885                           	callstack 0
  2886  000064                     ___awdiv@counter:
  2887                           	callstack 0
  2888  000064                     _isspace$4301:
  2889                           	callstack 0
  2890  000064                     memcpy@n:
  2891                           	callstack 0
  2892  000064                     memset@n:
  2893                           	callstack 0
  2894  000064                     strcpy@s:
  2895                           	callstack 0
  2896  000064                     strncmp@_r:
  2897                           	callstack 0
  2898  000064                     tolower@c:
  2899                           	callstack 0
  2900  000064                     ___fleq@ff2:
  2901                           	callstack 0
  2902  000064                     ___xxtofl@val:
  2903                           	callstack 0
  2904  000064                     nanf@u:
  2905                           	callstack 0
  2906                           
  2907                           ; 4 bytes @ 0x4
  2908  000064                     	ds	1
  2909  000065                     ?_atoi:
  2910                           	callstack 0
  2911  000065                     ___awdiv@sign:
  2912                           	callstack 0
  2913  000065                     atoi@s:
  2914                           	callstack 0
  2915                           
  2916                           ; 2 bytes @ 0x5
  2917  000065                     	ds	1
  2918  000066                     ??_tolower:
  2919  000066                     memcpy@tmp:
  2920                           	callstack 0
  2921  000066                     ___awdiv@quotient:
  2922                           	callstack 0
  2923  000066                     memset@k:
  2924                           	callstack 0
  2925  000066                     strcpy@d:
  2926                           	callstack 0
  2927  000066                     strncmp@n:
  2928                           	callstack 0
  2929                           
  2930                           ; 2 bytes @ 0x6
  2931  000066                     	ds	1
  2932  000067                     ??_atoi:
  2933  000067                     memcpy@d:
  2934                           	callstack 0
  2935                           
  2936                           ; 2 bytes @ 0x7
  2937  000067                     	ds	1
  2938  000068                     ??_strncmp:
  2939  000068                     ??___fleq:
  2940  000068                     ??___xxtofl:
  2941  000068                     memset@s:
  2942                           	callstack 0
  2943  000068                     ___fpclassifyf@e:
  2944                           	callstack 0
  2945  000068                     ___lodiv@divisor:
  2946                           	callstack 0
  2947  000068                     ___lomod@divisor:
  2948                           	callstack 0
  2949                           
  2950                           ; 8 bytes @ 0x8
  2951  000068                     	ds	1
  2952  000069                     ?_fputs:
  2953                           	callstack 0
  2954  000069                     ?_stoa:
  2955                           	callstack 0
  2956  000069                     memcpy@s:
  2957                           	callstack 0
  2958  000069                     stoa@fp:
  2959                           	callstack 0
  2960  000069                     fputs@s:
  2961                           	callstack 0
  2962                           
  2963                           ; 2 bytes @ 0x9
  2964  000069                     	ds	1
  2965  00006A                     ringBufS_init@_this:
  2966                           	callstack 0
  2967  00006A                     ringBufS_flush@_this:
  2968                           	callstack 0
  2969  00006A                     strncmp@l:
  2970                           	callstack 0
  2971  00006A                     ___fpclassifyf@u:
  2972                           	callstack 0
  2973                           
  2974                           ; 4 bytes @ 0xA
  2975  00006A                     	ds	1
  2976  00006B                     ringBufS_put_dma_cpy@_this:
  2977                           	callstack 0
  2978  00006B                     stoa@s:
  2979                           	callstack 0
  2980  00006B                     atoi@neg:
  2981                           	callstack 0
  2982  00006B                     fputs@fp:
  2983                           	callstack 0
  2984                           
  2985                           ; 2 bytes @ 0xB
  2986  00006B                     	ds	1
  2987  00006C                     ringBufS_flush@clearBuffer:
  2988                           	callstack 0
  2989  00006C                     ___xxtofl@sign:
  2990                           	callstack 0
  2991  00006C                     strncmp@r:
  2992                           	callstack 0
  2993                           
  2994                           ; 2 bytes @ 0xC
  2995  00006C                     	ds	1
  2996  00006D                     ??_fputs:
  2997  00006D                     ??_stoa:
  2998  00006D                     send_lcd_data_dma@strPtr:
  2999                           	callstack 0
  3000  00006D                     ___xxtofl@exp:
  3001                           	callstack 0
  3002  00006D                     ringBufS_put_dma_cpy@ptr:
  3003                           	callstack 0
  3004  00006D                     atoi@n:
  3005                           	callstack 0
  3006                           
  3007                           ; 2 bytes @ 0xD
  3008  00006D                     	ds	1
  3009  00006E                     send_lcd_cmd_dma@strPtr:
  3010                           	callstack 0
  3011  00006E                     ___xxtofl@arg:
  3012                           	callstack 0
  3013  00006E                     stoa@nuls:
  3014                           	callstack 0
  3015                           
  3016                           ; 7 bytes @ 0xE
  3017  00006E                     	ds	1
  3018  00006F                     eaDogM_WriteCommand@cmd:
  3019                           	callstack 0
  3020  00006F                     ringBufS_put_dma_cpy@len:
  3021                           	callstack 0
  3022  00006F                     fputs@c:
  3023                           	callstack 0
  3024                           
  3025                           ; 1 bytes @ 0xF
  3026  00006F                     	ds	1
  3027  000070                     eaDogM_WriteString@strPtr:
  3028                           	callstack 0
  3029  000070                     fputs@i:
  3030                           	callstack 0
  3031  000070                     ___lodiv@quotient:
  3032                           	callstack 0
  3033                           
  3034                           ; 8 bytes @ 0x10
  3035  000070                     	ds	2
  3036  000072                     ?_pad:
  3037                           	callstack 0
  3038  000072                     ?___fldiv:
  3039                           	callstack 0
  3040  000072                     ?___flmul:
  3041                           	callstack 0
  3042  000072                     eaDogM_WriteString@len:
  3043                           	callstack 0
  3044  000072                     pad@fp:
  3045                           	callstack 0
  3046  000072                     puts@s:
  3047                           	callstack 0
  3048  000072                     ___fldiv@b:
  3049                           	callstack 0
  3050  000072                     ___flmul@b:
  3051                           	callstack 0
  3052                           
  3053                           ; 4 bytes @ 0x12
  3054  000072                     	ds	1
  3055  000073                     eaDogM_WriteStringAtPos@c:
  3056                           	callstack 0
  3057                           
  3058                           ; 1 bytes @ 0x13
  3059  000073                     	ds	1
  3060  000074                     _puts$4380:
  3061                           	callstack 0
  3062  000074                     eaDogM_WriteStringAtPos@strPtr:
  3063                           	callstack 0
  3064  000074                     pad@buf:
  3065                           	callstack 0
  3066                           
  3067                           ; 2 bytes @ 0x14
  3068  000074                     	ds	1
  3069  000075                     fh_pr@a_data:
  3070                           	callstack 0
  3071  000075                     fh_p1@a_data:
  3072                           	callstack 0
  3073  000075                     cli_init@a_ctx:
  3074                           	callstack 0
  3075  000075                     linux_putc@data:
  3076                           	callstack 0
  3077  000075                     stoa@i:
  3078                           	callstack 0
  3079                           
  3080                           ; 2 bytes @ 0x15
  3081  000075                     	ds	1
  3082  000076                     ??_eaDogM_WriteStringAtPos:
  3083  000076                     pad@p:
  3084                           	callstack 0
  3085  000076                     ___fldiv@a:
  3086                           	callstack 0
  3087  000076                     ___flmul@a:
  3088                           	callstack 0
  3089                           
  3090                           ; 4 bytes @ 0x16
  3091  000076                     	ds	1
  3092  000077                     linux_putc@a_len:
  3093                           	callstack 0
  3094  000077                     cli_init@a_cmds:
  3095                           	callstack 0
  3096  000077                     __cli_interpret_cmd@a_ctx:
  3097                           	callstack 0
  3098  000077                     stoa@w:
  3099                           	callstack 0
  3100                           
  3101                           ; 2 bytes @ 0x17
  3102  000077                     	ds	1
  3103  000078                     ??_pad:
  3104  000078                     eaDogM_WriteStringAtPos@r:
  3105                           	callstack 0
  3106  000078                     ___lodiv@counter:
  3107                           	callstack 0
  3108                           
  3109                           ; 1 bytes @ 0x18
  3110  000078                     	ds	1
  3111  000079                     ??__cli_interpret_cmd:
  3112  000079                     eaDogM_WriteStringAtPos@row:
  3113                           	callstack 0
  3114  000079                     pad@i:
  3115                           	callstack 0
  3116  000079                     stoa@cp:
  3117                           	callstack 0
  3118                           
  3119                           ; 2 bytes @ 0x19
  3120  000079                     	ds	1
  3121  00007A                     ??___fldiv:
  3122  00007A                     ??___flmul:
  3123                           
  3124                           ; 1 bytes @ 0x1A
  3125  00007A                     	ds	1
  3126  00007B                     pad@w:
  3127                           	callstack 0
  3128  00007B                     stoa@p:
  3129                           	callstack 0
  3130                           
  3131                           ; 2 bytes @ 0x1B
  3132  00007B                     	ds	2
  3133  00007D                     ?_utoa:
  3134                           	callstack 0
  3135  00007D                     stoa@l:
  3136                           	callstack 0
  3137  00007D                     utoa@fp:
  3138                           	callstack 0
  3139                           
  3140                           ; 2 bytes @ 0x1D
  3141  00007D                     	ds	1
  3142  00007E                     ___flmul@sign:
  3143                           	callstack 0
  3144  00007E                     ___fldiv@rem:
  3145                           	callstack 0
  3146                           
  3147                           ; 4 bytes @ 0x1E
  3148  00007E                     	ds	1
  3149  00007F                     ___flmul@aexp:
  3150                           	callstack 0
  3151  00007F                     utoa@d:
  3152                           	callstack 0
  3153                           
  3154                           ; 8 bytes @ 0x1F
  3155  00007F                     	ds	1
  3156  000080                     ___flmul@bexp:
  3157                           	callstack 0
  3158                           
  3159                           ; 1 bytes @ 0x20
  3160  000080                     	ds	1
  3161  000081                     __cli_interpret_cmd@ret:
  3162                           	callstack 0
  3163  000081                     ___flmul@grs:
  3164                           	callstack 0
  3165                           
  3166                           ; 4 bytes @ 0x21
  3167  000081                     	ds	1
  3168  000082                     __cli_interpret_cmd@i:
  3169                           	callstack 0
  3170  000082                     ___fldiv@sign:
  3171                           	callstack 0
  3172                           
  3173                           ; 1 bytes @ 0x22
  3174  000082                     	ds	1
  3175  000083                     cli_read@a_ctx:
  3176                           	callstack 0
  3177  000083                     ___fldiv@new_exp:
  3178                           	callstack 0
  3179                           
  3180                           ; 2 bytes @ 0x23
  3181  000083                     	ds	2
  3182  000085                     ??_cli_read:
  3183  000085                     ___fldiv@grs:
  3184                           	callstack 0
  3185  000085                     ___flmul@prod:
  3186                           	callstack 0
  3187                           
  3188                           ; 4 bytes @ 0x25
  3189  000085                     	ds	2
  3190  000087                     ??_utoa:
  3191                           
  3192                           ; 1 bytes @ 0x27
  3193  000087                     	ds	1
  3194  000088                     _cli_read$3097:
  3195                           	callstack 0
  3196                           
  3197                           ; 2 bytes @ 0x28
  3198  000088                     	ds	1
  3199  000089                     ___fldiv@bexp:
  3200                           	callstack 0
  3201  000089                     ___flmul@temp:
  3202                           	callstack 0
  3203                           
  3204                           ; 2 bytes @ 0x29
  3205  000089                     	ds	1
  3206  00008A                     cli_read@i:
  3207                           	callstack 0
  3208  00008A                     ___fldiv@aexp:
  3209                           	callstack 0
  3210                           
  3211                           ; 1 bytes @ 0x2A
  3212  00008A                     	ds	1
  3213  00008B                     ?___fladd:
  3214                           	callstack 0
  3215  00008B                     ?_floorf:
  3216                           	callstack 0
  3217  00008B                     ___flge@ff1:
  3218                           	callstack 0
  3219  00008B                     ___fladd@b:
  3220                           	callstack 0
  3221  00008B                     floorf@x:
  3222                           	callstack 0
  3223                           
  3224                           ; 4 bytes @ 0x2B
  3225  00008B                     	ds	4
  3226  00008F                     ??_floorf:
  3227  00008F                     utoa@p:
  3228                           	callstack 0
  3229  00008F                     ___flge@ff2:
  3230                           	callstack 0
  3231  00008F                     ___fladd@a:
  3232                           	callstack 0
  3233                           
  3234                           ; 4 bytes @ 0x2F
  3235  00008F                     	ds	2
  3236  000091                     utoa@w:
  3237                           	callstack 0
  3238                           
  3239                           ; 2 bytes @ 0x31
  3240  000091                     	ds	2
  3241  000093                     ??___fladd:
  3242  000093                     ??___flge:
  3243  000093                     utoa@n:
  3244                           	callstack 0
  3245                           
  3246                           ; 8 bytes @ 0x33
  3247  000093                     	ds	2
  3248  000095                     floorf@m:
  3249                           	callstack 0
  3250                           
  3251                           ; 4 bytes @ 0x35
  3252  000095                     	ds	2
  3253  000097                     ___fladd@signs:
  3254                           	callstack 0
  3255                           
  3256                           ; 1 bytes @ 0x37
  3257  000097                     	ds	1
  3258  000098                     ___fladd@aexp:
  3259                           	callstack 0
  3260                           
  3261                           ; 1 bytes @ 0x38
  3262  000098                     	ds	1
  3263  000099                     ___fladd@bexp:
  3264                           	callstack 0
  3265  000099                     floorf@e:
  3266                           	callstack 0
  3267                           
  3268                           ; 2 bytes @ 0x39
  3269  000099                     	ds	1
  3270  00009A                     ___fladd@grs:
  3271                           	callstack 0
  3272                           
  3273                           ; 1 bytes @ 0x3A
  3274  00009A                     	ds	1
  3275  00009B                     ?_sqrtf:
  3276                           	callstack 0
  3277  00009B                     ?___flsub:
  3278                           	callstack 0
  3279  00009B                     utoa@i:
  3280                           	callstack 0
  3281  00009B                     ___flsub@b:
  3282                           	callstack 0
  3283  00009B                     floorf@u:
  3284                           	callstack 0
  3285  00009B                     sqrtf@x:
  3286                           	callstack 0
  3287                           
  3288                           ; 4 bytes @ 0x3B
  3289  00009B                     	ds	4
  3290  00009F                     ??_sqrtf:
  3291  00009F                     ___flsub@a:
  3292                           	callstack 0
  3293                           
  3294                           ; 4 bytes @ 0x3F
  3295  00009F                     	ds	4
  3296  0000A3                     ?_efgtoa:
  3297                           	callstack 0
  3298  0000A3                     efgtoa@fp:
  3299                           	callstack 0
  3300                           
  3301                           ; 2 bytes @ 0x43
  3302  0000A3                     	ds	1
  3303  0000A4                     sqrtf@s:
  3304                           	callstack 0
  3305                           
  3306                           ; 4 bytes @ 0x44
  3307  0000A4                     	ds	1
  3308  0000A5                     efgtoa@f:
  3309                           	callstack 0
  3310                           
  3311                           ; 4 bytes @ 0x45
  3312  0000A5                     	ds	3
  3313  0000A8                     sqrtf@i:
  3314                           	callstack 0
  3315                           
  3316                           ; 4 bytes @ 0x48
  3317  0000A8                     	ds	1
  3318  0000A9                     efgtoa@c:
  3319                           	callstack 0
  3320                           
  3321                           ; 1 bytes @ 0x49
  3322  0000A9                     	ds	1
  3323  0000AA                     ??_efgtoa:
  3324                           
  3325                           ; 1 bytes @ 0x4A
  3326  0000AA                     	ds	2
  3327  0000AC                     sqrtf@__xc8_float_word:
  3328                           	callstack 0
  3329                           
  3330                           ; 4 bytes @ 0x4C
  3331  0000AC                     	ds	3
  3332  0000AF                     _efgtoa$4189:
  3333                           	callstack 0
  3334                           
  3335                           ; 2 bytes @ 0x4F
  3336  0000AF                     	ds	1
  3337  0000B0                     sqrtf@q:
  3338                           	callstack 0
  3339                           
  3340                           ; 4 bytes @ 0x50
  3341  0000B0                     	ds	1
  3342  0000B1                     _efgtoa$4197:
  3343                           	callstack 0
  3344                           
  3345                           ; 2 bytes @ 0x51
  3346  0000B1                     	ds	2
  3347  0000B3                     _efgtoa$4198:
  3348                           	callstack 0
  3349                           
  3350                           ; 2 bytes @ 0x53
  3351  0000B3                     	ds	1
  3352  0000B4                     sqrtf@t:
  3353                           	callstack 0
  3354                           
  3355                           ; 4 bytes @ 0x54
  3356  0000B4                     	ds	1
  3357  0000B5                     efgtoa@t:
  3358                           	callstack 0
  3359                           
  3360                           ; 2 bytes @ 0x55
  3361  0000B5                     	ds	2
  3362  0000B7                     efgtoa@pp:
  3363                           	callstack 0
  3364                           
  3365                           ; 2 bytes @ 0x57
  3366  0000B7                     	ds	1
  3367  0000B8                     sqrtf@z:
  3368                           	callstack 0
  3369                           
  3370                           ; 4 bytes @ 0x58
  3371  0000B8                     	ds	1
  3372  0000B9                     efgtoa@ne:
  3373                           	callstack 0
  3374                           
  3375                           ; 2 bytes @ 0x59
  3376  0000B9                     	ds	2
  3377  0000BB                     efgtoa@m:
  3378                           	callstack 0
  3379                           
  3380                           ; 2 bytes @ 0x5B
  3381  0000BB                     	ds	1
  3382  0000BC                     sqrtf@m:
  3383                           	callstack 0
  3384                           
  3385                           ; 4 bytes @ 0x5C
  3386  0000BC                     	ds	1
  3387  0000BD                     efgtoa@ou:
  3388                           	callstack 0
  3389                           
  3390                           ; 4 bytes @ 0x5D
  3391  0000BD                     	ds	3
  3392  0000C0                     sqrtf@r:
  3393                           	callstack 0
  3394                           
  3395                           ; 4 bytes @ 0x60
  3396  0000C0                     	ds	1
  3397  0000C1                     efgtoa@d:
  3398                           	callstack 0
  3399                           
  3400                           ; 2 bytes @ 0x61
  3401  0000C1                     	ds	2
  3402  0000C3                     efgtoa@sign:
  3403                           	callstack 0
  3404                           
  3405                           ; 2 bytes @ 0x63
  3406  0000C3                     	ds	1
  3407  0000C4                     sqrtf@ix:
  3408                           	callstack 0
  3409                           
  3410                           ; 4 bytes @ 0x64
  3411  0000C4                     	ds	1
  3412  0000C5                     efgtoa@p:
  3413                           	callstack 0
  3414                           
  3415                           ; 2 bytes @ 0x65
  3416  0000C5                     	ds	2
  3417  0000C7                     efgtoa@w:
  3418                           	callstack 0
  3419                           
  3420                           ; 2 bytes @ 0x67
  3421  0000C7                     	ds	1
  3422  0000C8                     ps_math@scale:
  3423                           	callstack 0
  3424                           
  3425                           ; 4 bytes @ 0x68
  3426  0000C8                     	ds	1
  3427  0000C9                     efgtoa@nmode:
  3428                           	callstack 0
  3429                           
  3430                           ; 1 bytes @ 0x69
  3431  0000C9                     	ds	1
  3432  0000CA                     efgtoa@mode:
  3433                           	callstack 0
  3434                           
  3435                           ; 1 bytes @ 0x6A
  3436  0000CA                     	ds	1
  3437  0000CB                     efgtoa@h:
  3438                           	callstack 0
  3439                           
  3440                           ; 4 bytes @ 0x6B
  3441  0000CB                     	ds	1
  3442  0000CC                     ps_math@chan:
  3443                           	callstack 0
  3444                           
  3445                           ; 1 bytes @ 0x6C
  3446  0000CC                     	ds	1
  3447  0000CD                     ??_ps_math:
  3448                           
  3449                           ; 1 bytes @ 0x6D
  3450  0000CD                     	ds	2
  3451  0000CF                     efgtoa@l:
  3452                           	callstack 0
  3453                           
  3454                           ; 4 bytes @ 0x6F
  3455  0000CF                     	ds	2
  3456  0000D1                     ps_math@n:
  3457                           	callstack 0
  3458                           
  3459                           ; 2 bytes @ 0x71
  3460  0000D1                     	ds	2
  3461  0000D3                     ps_math@i:
  3462                           	callstack 0
  3463  0000D3                     efgtoa@i:
  3464                           	callstack 0
  3465                           
  3466                           ; 2 bytes @ 0x73
  3467  0000D3                     	ds	2
  3468  0000D5                     efgtoa@g:
  3469                           	callstack 0
  3470                           
  3471                           ; 4 bytes @ 0x75
  3472  0000D5                     	ds	4
  3473  0000D9                     efgtoa@e:
  3474                           	callstack 0
  3475                           
  3476                           ; 2 bytes @ 0x79
  3477  0000D9                     	ds	2
  3478  0000DB                     efgtoa@n:
  3479                           	callstack 0
  3480                           
  3481                           ; 2 bytes @ 0x7B
  3482  0000DB                     	ds	2
  3483  0000DD                     efgtoa@u:
  3484                           	callstack 0
  3485                           
  3486                           ; 4 bytes @ 0x7D
  3487  0000DD                     	ds	4
  3488  0000E1                     ?_vfpfcnvrt:
  3489                           	callstack 0
  3490  0000E1                     vfpfcnvrt@fp:
  3491                           	callstack 0
  3492                           
  3493                           ; 2 bytes @ 0x81
  3494  0000E1                     	ds	2
  3495  0000E3                     vfpfcnvrt@fmt:
  3496                           	callstack 0
  3497                           
  3498                           ; 1 bytes @ 0x83
  3499  0000E3                     	ds	1
  3500  0000E4                     vfpfcnvrt@ap:
  3501                           	callstack 0
  3502                           
  3503                           ; 2 bytes @ 0x84
  3504  0000E4                     	ds	2
  3505  0000E6                     ??_vfpfcnvrt:
  3506                           
  3507                           ; 1 bytes @ 0x86
  3508  0000E6                     	ds	4
  3509  0000EA                     ?_vfprintf:
  3510                           	callstack 0
  3511  0000EA                     vfprintf@fp:
  3512                           	callstack 0
  3513                           
  3514                           ; 2 bytes @ 0x8A
  3515  0000EA                     	ds	2
  3516  0000EC                     vfprintf@fmt:
  3517                           	callstack 0
  3518                           
  3519                           ; 2 bytes @ 0x8C
  3520  0000EC                     	ds	2
  3521  0000EE                     vfprintf@ap:
  3522                           	callstack 0
  3523                           
  3524                           ; 2 bytes @ 0x8E
  3525  0000EE                     	ds	2
  3526  0000F0                     vfprintf@cfmt:
  3527                           	callstack 0
  3528                           
  3529                           ; 2 bytes @ 0x90
  3530  0000F0                     	ds	2
  3531  0000F2                     printf@ap:
  3532                           	callstack 0
  3533                           
  3534                           ; 2 bytes @ 0x92
  3535  0000F2                     	ds	2
  3536  0000F4                     ??_main:
  3537                           
  3538                           ; 1 bytes @ 0x94
  3539  0000F4                     	ds	2
  3540  0000F6                     main@lcd_update:
  3541                           	callstack 0
  3542                           
  3543                           ; 1 bytes @ 0x96
  3544  0000F6                     	ds	1
  3545  0000F7                     main@i:
  3546                           	callstack 0
  3547                           
  3548                           ; 1 bytes @ 0x97
  3549  0000F7                     	ds	1
  3550                           
  3551                           	psect	cstackCOMRAM
  3552  000001                     __pcstackCOMRAM:
  3553                           	callstack 0
  3554  000001                     ?_ADCC_GetConversionResult:
  3555                           	callstack 0
  3556                           
  3557                           ; 2 bytes @ 0x0
  3558  000001                     	ds	2
  3559  000003                     ??_ADCC_GetConversionResult:
  3560                           
  3561                           ; 1 bytes @ 0x2
  3562  000003                     	ds	2
  3563  000005                     ??_Adc_Isr:
  3564                           
  3565                           ; 1 bytes @ 0x4
  3566  000005                     	ds	4
  3567  000009                     ??_ADCC_ISR:
  3568                           
  3569                           ; 1 bytes @ 0x8
  3570  000009                     	ds	2
  3571  00000B                     ??_Led_Blink:
  3572                           
  3573                           ; 1 bytes @ 0xA
  3574  00000B                     	ds	1
  3575  00000C                     ??_TMR6_ISR:
  3576                           
  3577                           ; 1 bytes @ 0xB
  3578  00000C                     	ds	2
  3579  00000E                     TMR5_WriteTimer@timerVal:
  3580                           	callstack 0
  3581                           
  3582                           ; 2 bytes @ 0xD
  3583  00000E                     	ds	2
  3584  000010                     Timers_Isr@i:
  3585                           	callstack 0
  3586                           
  3587                           ; 2 bytes @ 0xF
  3588  000010                     	ds	2
  3589  000012                     ??_TMR5_ISR:
  3590                           
  3591                           ; 1 bytes @ 0x11
  3592  000012                     	ds	2
  3593  000014                     ??_DMA1_DMASCNTI_ISR:
  3594                           
  3595                           ; 1 bytes @ 0x13
  3596  000014                     	ds	2
  3597  000016                     ??_UART1_framing_err_vect_isr:
  3598                           
  3599                           ; 1 bytes @ 0x15
  3600  000016                     	ds	2
  3601  000018                     ??_UART1_vect_isr:
  3602                           
  3603                           ; 1 bytes @ 0x17
  3604  000018                     	ds	2
  3605  00001A                     ??_UART1_tx_vect_isr:
  3606                           
  3607                           ; 1 bytes @ 0x19
  3608  00001A                     	ds	3
  3609  00001D                     ??_UART1_rx_vect_isr:
  3610                           
  3611                           ; 1 bytes @ 0x1C
  3612  00001D                     	ds	3
  3613  000020                     ??_TMR5_Initialize:
  3614  000020                     ??_display_led:
  3615  000020                     ??_memset:
  3616  000020                     ??_ringBufS_put_dma:
  3617  000020                     ??_strcpy:
  3618  000020                     ?_strlen:
  3619                           	callstack 0
  3620  000020                     ?_isupper:
  3621                           	callstack 0
  3622  000020                     ?_isdigit:
  3623                           	callstack 0
  3624  000020                     ?_isspace:
  3625                           	callstack 0
  3626  000020                     DAC1_SetOutput@inputData:
  3627                           	callstack 0
  3628  000020                     INTERRUPT_Initialize@state:
  3629                           	callstack 0
  3630  000020                     SPI1_ExchangeByte@data:
  3631                           	callstack 0
  3632  000020                     UART1_Read@readValue:
  3633                           	callstack 0
  3634  000020                     UART1_Write@txData:
  3635                           	callstack 0
  3636  000020                     DATAEE_WriteByte@GIEBitValue:
  3637                           	callstack 0
  3638  000020                     ___awmod@counter:
  3639                           	callstack 0
  3640  000020                     ___fltol@sign1:
  3641                           	callstack 0
  3642  000020                     ___lomod@counter:
  3643                           	callstack 0
  3644  000020                     PWM5_LoadDutyValue@dutyValue:
  3645                           	callstack 0
  3646  000020                     PWM6_LoadDutyValue@dutyValue:
  3647                           	callstack 0
  3648  000020                     DATAEE_ReadByte@bAdd:
  3649                           	callstack 0
  3650  000020                     StartTimer@count:
  3651                           	callstack 0
  3652  000020                     ___wmul@product:
  3653                           	callstack 0
  3654  000020                     isdigit@c:
  3655                           	callstack 0
  3656  000020                     isspace@c:
  3657                           	callstack 0
  3658  000020                     isupper@c:
  3659                           	callstack 0
  3660  000020                     strlen@s:
  3661                           	callstack 0
  3662                           
  3663                           ; 2 bytes @ 0x1F
  3664  000020                     	ds	1
  3665  000021                     putch@txData:
  3666                           	callstack 0
  3667  000021                     linux_getc@a_data:
  3668                           	callstack 0
  3669  000021                     send_lcd_data@data:
  3670                           	callstack 0
  3671  000021                     send_lcd_cmd@cmd:
  3672                           	callstack 0
  3673  000021                     send_lcd_cmd_long@cmd:
  3674                           	callstack 0
  3675  000021                     ___awmod@sign:
  3676                           	callstack 0
  3677  000021                     ___fltol@exp1:
  3678                           	callstack 0
  3679                           
  3680                           ; 1 bytes @ 0x20
  3681  000021                     	ds	1
  3682  000022                     
  3683                           ; 1 bytes @ 0x21
  3684 ;;
  3685 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3686 ;;
  3687 ;; *************** function _main *****************
  3688 ;; Defined at:
  3689 ;;		line 241 in file "main.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  i               1  151[BANK0 ] unsigned char 
  3694 ;;  lcd_update      1  150[BANK0 ] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 3F/1
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3705 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3706 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3707 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3708 ;;Total ram usage:        4 bytes
  3709 ;; Hardware stack levels required when called: 16
  3710 ;; This function calls:
  3711 ;;		_ADCC_SetADIInterruptHandler
  3712 ;;		_DAC1_GetOutput
  3713 ;;		_DAC1_SetOutput
  3714 ;;		_DATAEE_ReadByte
  3715 ;;		_DATAEE_WriteByte
  3716 ;;		_DMA1_SetSCNTIInterruptHandler
  3717 ;;		_PWM5_LoadDutyValue
  3718 ;;		_PWM6_LoadDutyValue
  3719 ;;		_SYSTEM_Initialize
  3720 ;;		_TMR5_SetInterruptHandler
  3721 ;;		_TMR6_SetInterruptHandler
  3722 ;;		_WaitMs
  3723 ;;		___flmul
  3724 ;;		___xxtofl
  3725 ;;		_cli_read
  3726 ;;		_display_led
  3727 ;;		_eaDogM_WriteCommand
  3728 ;;		_eaDogM_WriteStringAtPos
  3729 ;;		_init_display
  3730 ;;		_linux_getc
  3731 ;;		_printf
  3732 ;;		_ps_math
  3733 ;;		_puts
  3734 ;;		_scmd_init
  3735 ;;		_sprintf
  3736 ;; This function is called by:
  3737 ;;		Startup code after reset
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text0
  3742  0110C8                     __ptext0:
  3743                           	callstack 0
  3744  0110C8                     _main:
  3745                           	callstack 15
  3746                           
  3747                           ;main.c: 243:  uint8_t lcd_update = 0, i = 0;
  3748                           
  3749                           ;incstack = 0
  3750  0110C8  0E00               	movlw	0
  3751  0110CA  0100               	movlb	0	; () banked
  3752  0110CC  6FF6               	movwf	main@lcd_update& (0+255),b
  3753  0110CE  0E00               	movlw	0
  3754  0110D0  6FF7               	movwf	main@i& (0+255),b
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;main.c: 246:  SYSTEM_Initialize();
  3758  0110D2  EC4C  F0A7         	call	_SYSTEM_Initialize	;wreg free
  3759                           
  3760                           ; BSR set to: 57
  3761  0110D6  92BD               	bcf	189,1,c	;volatile
  3762                           
  3763                           ; BSR set to: 57
  3764  0110D8  94BE               	bcf	190,2,c	;volatile
  3765                           
  3766                           ; BSR set to: 57
  3767                           ;main.c: 250:  TMR6_SetInterruptHandler(Led_Blink);
  3768  0110DA  0E3A               	movlw	low _Led_Blink
  3769  0110DC  0100               	movlb	0	; () banked
  3770  0110DE  6F60               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  3771  0110E0  0E54               	movlw	high _Led_Blink
  3772  0110E2  6F61               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3773  0110E4  0E01               	movlw	low (_Led_Blink shr (0+16))
  3774  0110E6  6F62               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3775  0110E8  EC14  F0AB         	call	_TMR6_SetInterruptHandler	;wreg free
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;main.c: 251:  TMR5_SetInterruptHandler(Timers_Isr);
  3779  0110EC  0E14               	movlw	low _Timers_Isr
  3780  0110EE  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
  3781  0110F0  0E49               	movlw	high _Timers_Isr
  3782  0110F2  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3783  0110F4  0E01               	movlw	low (_Timers_Isr shr (0+16))
  3784  0110F6  6F62               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3785  0110F8  EC1B  F0AB         	call	_TMR5_SetInterruptHandler	;wreg free
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;main.c: 252:  ADCC_SetADIInterruptHandler(Adc_Isr);
  3789  0110FC  0E7A               	movlw	low _Adc_Isr
  3790  0110FE  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  3791  011100  0E3A               	movlw	high _Adc_Isr
  3792  011102  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  3793  011104  0E01               	movlw	low (_Adc_Isr shr (0+16))
  3794  011106  6F62               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  3795  011108  EC30  F0AB         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3796                           
  3797                           ;main.c: 253:  ADPCH = PS_V_ANA;
  3798  01110C  0E00               	movlw	0
  3799  01110E  013E               	movlb	62	; () banked
  3800  011110  6FF1               	movwf	241,b	;volatile
  3801                           
  3802                           ; BSR set to: 62
  3803                           ;main.c: 254:  PWM5_LoadDutyValue(0);
  3804  011112  0E00               	movlw	0
  3805  011114  6E21               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  3806  011116  0E00               	movlw	0
  3807  011118  6E20               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  3808  01111A  EC21  F0A8         	call	_PWM5_LoadDutyValue	;wreg free
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;main.c: 255:  PWM6_LoadDutyValue(0);
  3812  01111E  0E00               	movlw	0
  3813  011120  6E21               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  3814  011122  0E00               	movlw	0
  3815  011124  6E20               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  3816  011126  EC6D  F0A8         	call	_PWM6_LoadDutyValue	;wreg free
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;main.c: 256:  DMA1_SetSCNTIInterruptHandler(source_dma_done);
  3820  01112A  0EC2               	movlw	low _source_dma_done
  3821  01112C  6F60               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler& (0+255),b
  3822  01112E  0E56               	movlw	high _source_dma_done
  3823  011130  6F61               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)& (0+255),b
  3824  011132  0E01               	movlw	low (_source_dma_done shr (0+16))
  3825  011134  6F62               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)& (0+255),b
  3826  011136  EC29  F0AB         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;main.c: 259:  (INTCON0bits.GIEH = 1);
  3830  01113A  8ED2               	bsf	210,7,c	;volatile
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;main.c: 262:  (INTCON0bits.GIEL = 1);
  3834  01113C  8CD2               	bsf	210,6,c	;volatile
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;main.c: 264:  DAC1_SetOutput(dac_v);
  3838  01113E  51FA               	movf	_dac_v& (0+255),w,b
  3839  011140  EC49  F0AB         	call	_DAC1_SetOutput
  3840                           
  3841                           ;main.c: 266:  init_display();
  3842  011144  EC4D  F09F         	call	_init_display	;wreg free
  3843                           
  3844                           ; BSR set to: 61
  3845                           ;main.c: 267:  eaDogM_WriteCommand(0b00001100);
  3846  011148  0E0C               	movlw	12
  3847  01114A  ECC7  F0AA         	call	_eaDogM_WriteCommand
  3848  01114E                     l10910:
  3849  01114E  0EF7               	movlw	low main@i
  3850  011150  6E21               	movwf	linux_getc@a_data^0,c
  3851  011152  EC34  F0A9         	call	_linux_getc	;wreg free
  3852  011156  0900               	iorlw	0
  3853  011158  A4D8               	btfss	status,2,c
  3854  01115A  D7F9               	goto	l10910
  3855                           
  3856                           ;main.c: 272:  scmd_init();
  3857  01115C  EC62  F0AA         	call	_scmd_init	;wreg free
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;main.c: 273:  sprintf(buff1, "\r\n Build %s %s\r\n", build_date, build_time);
  3861  011160  0E00               	movlw	low _buff1
  3862  011162  0101               	movlb	1	; () banked
  3863  011164  6F82               	movwf	sprintf@s& (0+255),b
  3864  011166  0E04               	movlw	high _buff1
  3865  011168  6F83               	movwf	(sprintf@s+1)& (0+255),b
  3866  01116A  0EA0               	movlw	low STR_12
  3867  01116C  6F84               	movwf	sprintf@fmt& (0+255),b
  3868  01116E  0EFF               	movlw	high STR_12
  3869  011170  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  3870  011172  0EB1               	movlw	low STR_1
  3871  011174  6F86               	movwf	(?_sprintf+4)& (0+255),b
  3872  011176  0EFF               	movlw	high STR_1
  3873  011178  6F87               	movwf	(?_sprintf+5)& (0+255),b
  3874  01117A  0EBD               	movlw	low STR_2
  3875  01117C  6F88               	movwf	(?_sprintf+6)& (0+255),b
  3876  01117E  0EFF               	movlw	high STR_2
  3877  011180  6F89               	movwf	(?_sprintf+7)& (0+255),b
  3878  011182  ECB3  F0A4         	call	_sprintf	;wreg free
  3879                           
  3880                           ; BSR set to: 1
  3881                           ;main.c: 274:  puts(buff1);
  3882  011186  0E00               	movlw	low _buff1
  3883  011188  0100               	movlb	0	; () banked
  3884  01118A  6F72               	movwf	puts@s& (0+255),b
  3885  01118C  0E04               	movlw	high _buff1
  3886  01118E  6F73               	movwf	(puts@s+1)& (0+255),b
  3887  011190  ECE6  F0A7         	call	_puts	;wreg free
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;main.c: 275:  WaitMs(300);
  3891  011194  0E01               	movlw	1
  3892  011196  6F64               	movwf	(WaitMs@numMilliseconds+1)& (0+255),b
  3893  011198  0E2C               	movlw	44
  3894  01119A  6F63               	movwf	WaitMs@numMilliseconds& (0+255),b
  3895  01119C  ECF9  F0A8         	call	_WaitMs	;wreg free
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;main.c: 276:  sprintf(buff1, "%s %s", build_date, build_time);
  3899  0111A0  0E00               	movlw	low _buff1
  3900  0111A2  0101               	movlb	1	; () banked
  3901  0111A4  6F82               	movwf	sprintf@s& (0+255),b
  3902  0111A6  0E04               	movlw	high _buff1
  3903  0111A8  6F83               	movwf	(sprintf@s+1)& (0+255),b
  3904  0111AA  0EC6               	movlw	low STR_13
  3905  0111AC  6F84               	movwf	sprintf@fmt& (0+255),b
  3906  0111AE  0EFF               	movlw	high STR_13
  3907  0111B0  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  3908  0111B2  0EB1               	movlw	low STR_1
  3909  0111B4  6F86               	movwf	(?_sprintf+4)& (0+255),b
  3910  0111B6  0EFF               	movlw	high STR_1
  3911  0111B8  6F87               	movwf	(?_sprintf+5)& (0+255),b
  3912  0111BA  0EBD               	movlw	low STR_2
  3913  0111BC  6F88               	movwf	(?_sprintf+6)& (0+255),b
  3914  0111BE  0EFF               	movlw	high STR_2
  3915  0111C0  6F89               	movwf	(?_sprintf+7)& (0+255),b
  3916  0111C2  ECB3  F0A4         	call	_sprintf	;wreg free
  3917                           
  3918                           ; BSR set to: 1
  3919                           ;main.c: 277:  eaDogM_WriteStringAtPos(0, 0, buff1);
  3920  0111C6  0E00               	movlw	0
  3921  0111C8  0100               	movlb	0	; () banked
  3922  0111CA  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  3923  0111CC  0E00               	movlw	low _buff1
  3924  0111CE  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  3925  0111D0  0E04               	movlw	high _buff1
  3926  0111D2  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  3927  0111D4  0E00               	movlw	0
  3928  0111D6  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  3929                           
  3930                           ; BSR set to: 59
  3931                           ;main.c: 278:  sprintf(buff1, "%s", build_version);
  3932  0111DA  0E00               	movlw	low _buff1
  3933  0111DC  0101               	movlb	1	; () banked
  3934  0111DE  6F82               	movwf	sprintf@s& (0+255),b
  3935  0111E0  0E04               	movlw	high _buff1
  3936  0111E2  6F83               	movwf	(sprintf@s+1)& (0+255),b
  3937  0111E4  0EC9               	movlw	low (STR_13+3)
  3938  0111E6  6F84               	movwf	sprintf@fmt& (0+255),b
  3939  0111E8  0EFF               	movlw	high (STR_13+3)
  3940  0111EA  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  3941  0111EC  0EE4               	movlw	low _build_version
  3942  0111EE  6F86               	movwf	(?_sprintf+4)& (0+255),b
  3943  0111F0  0EFD               	movlw	high _build_version
  3944  0111F2  6F87               	movwf	(?_sprintf+5)& (0+255),b
  3945  0111F4  ECB3  F0A4         	call	_sprintf	;wreg free
  3946                           
  3947                           ; BSR set to: 1
  3948                           ;main.c: 279:  eaDogM_WriteStringAtPos(1, 0, buff1);
  3949  0111F8  0E00               	movlw	0
  3950  0111FA  0100               	movlb	0	; () banked
  3951  0111FC  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  3952  0111FE  0E00               	movlw	low _buff1
  3953  011200  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  3954  011202  0E04               	movlw	high _buff1
  3955  011204  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  3956  011206  0E01               	movlw	1
  3957  011208  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  3958                           
  3959                           ; BSR set to: 59
  3960                           ;main.c: 282:  if (DATAEE_ReadByte(0x00) != '1') {
  3961  01120C  0E00               	movlw	0
  3962  01120E  6E21               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  3963  011210  0E00               	movlw	0
  3964  011212  6E20               	movwf	DATAEE_ReadByte@bAdd^0,c
  3965  011214  EC0E  F0AA         	call	_DATAEE_ReadByte	;wreg free
  3966  011218  0A31               	xorlw	49
  3967  01121A  B4D8               	btfsc	status,2,c
  3968  01121C  D02E               	goto	l10932
  3969                           
  3970                           ; BSR set to: 57
  3971                           ;main.c: 283:   DATAEE_WriteByte(0x00, '1');
  3972  01121E  0E00               	movlw	0
  3973  011220  0100               	movlb	0	; () banked
  3974  011222  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3975  011224  0E00               	movlw	0
  3976  011226  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3977  011228  0E31               	movlw	49
  3978  01122A  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3979  01122C  ECCF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  3980                           
  3981                           ;main.c: 284:   DATAEE_WriteByte(0x00 + 1, '9');
  3982  011230  0E00               	movlw	0
  3983  011232  0100               	movlb	0	; () banked
  3984  011234  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3985  011236  0E01               	movlw	1
  3986  011238  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3987  01123A  0E39               	movlw	57
  3988  01123C  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3989  01123E  ECCF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  3990                           
  3991                           ;main.c: 285:   DATAEE_WriteByte(0x00 + 2, '5');
  3992  011242  0E00               	movlw	0
  3993  011244  0100               	movlb	0	; () banked
  3994  011246  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3995  011248  0E02               	movlw	2
  3996  01124A  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3997  01124C  0E35               	movlw	53
  3998  01124E  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3999  011250  ECCF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  4000                           
  4001                           ;main.c: 286:   DATAEE_WriteByte(0x00 + 3, '7');
  4002  011254  0E00               	movlw	0
  4003  011256  0100               	movlb	0	; () banked
  4004  011258  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  4005  01125A  0E03               	movlw	3
  4006  01125C  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  4007  01125E  0E37               	movlw	55
  4008  011260  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4009  011262  ECCF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  4010                           
  4011                           ;main.c: 287:   DATAEE_WriteByte(0x10, 0);
  4012  011266  0E00               	movlw	0
  4013  011268  0100               	movlb	0	; () banked
  4014  01126A  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  4015  01126C  0E10               	movlw	16
  4016  01126E  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  4017  011270  0E00               	movlw	0
  4018  011272  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4019  011274  ECCF  F0A6         	call	_DATAEE_WriteByte	;wreg free
  4020                           
  4021                           ;main.c: 288:  } else {
  4022  011278  D007               	goto	l10934
  4023  01127A                     l10932:
  4024                           
  4025                           ; BSR set to: 57
  4026                           ;main.c: 289:   ps_type_index = DATAEE_ReadByte(0x10);
  4027  01127A  0E00               	movlw	0
  4028  01127C  6E21               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  4029  01127E  0E10               	movlw	16
  4030  011280  6E20               	movwf	DATAEE_ReadByte@bAdd^0,c
  4031  011282  EC0E  F0AA         	call	_DATAEE_ReadByte	;wreg free
  4032  011286  6E36               	movwf	_ps_type_index^0,c	;volatile
  4033  011288                     l10934:
  4034                           
  4035                           ;main.c: 292:  WaitMs(2000);
  4036  011288  0E07               	movlw	7
  4037  01128A  0100               	movlb	0	; () banked
  4038  01128C  6F64               	movwf	(WaitMs@numMilliseconds+1)& (0+255),b
  4039  01128E  0ED0               	movlw	208
  4040  011290  6F63               	movwf	WaitMs@numMilliseconds& (0+255),b
  4041  011292  ECF9  F0A8         	call	_WaitMs	;wreg free
  4042  011296                     l10936:
  4043                           
  4044                           ;main.c: 295:   if (adc_tick) {
  4045  011296  0101               	movlb	1	; () banked
  4046  011298  5160               	movf	_adc_tick& (0+255),w,b	;volatile
  4047  01129A  B4D8               	btfsc	status,2,c
  4048  01129C  D7FC               	goto	l10936
  4049                           
  4050                           ; BSR set to: 1
  4051                           ;main.c: 296:    if (a[a_index].ana[PS_V_ANA] < 900) {
  4052  01129E  5039               	movf	_a_index^0,w,c	;volatile
  4053  0112A0  0D7E               	mullw	126
  4054  0112A2  0E83               	movlw	low _a
  4055  0112A4  24F3               	addwf	243,w,c
  4056  0112A6  6ED9               	movwf	fsr2l,c
  4057  0112A8  0E05               	movlw	high _a
  4058  0112AA  20F4               	addwfc	prodh,w,c
  4059  0112AC  6EDA               	movwf	fsr2h,c
  4060  0112AE  0E84               	movlw	132
  4061  0112B0  5CDE               	subwf	postinc2,w,c
  4062  0112B2  0E03               	movlw	3
  4063  0112B4  58DE               	subwfb	postinc2,w,c
  4064  0112B6  B0D8               	btfsc	status,0,c
  4065  0112B8  D004               	goto	l10942
  4066                           
  4067                           ; BSR set to: 1
  4068                           ;main.c: 297:     display_led(oo00_off);
  4069  0112BA  0E00               	movlw	0
  4070  0112BC  ECAE  F09F         	call	_display_led
  4071                           
  4072                           ;main.c: 298:    } else {
  4073  0112C0  D015               	goto	l10948
  4074  0112C2                     l10942:
  4075                           
  4076                           ; BSR set to: 1
  4077                           ;main.c: 299:     if (a[a_index].ana[PS_V_ANA] > 1800) {
  4078  0112C2  5039               	movf	_a_index^0,w,c	;volatile
  4079  0112C4  0D7E               	mullw	126
  4080  0112C6  0E83               	movlw	low _a
  4081  0112C8  24F3               	addwf	243,w,c
  4082  0112CA  6ED9               	movwf	fsr2l,c
  4083  0112CC  0E05               	movlw	high _a
  4084  0112CE  20F4               	addwfc	prodh,w,c
  4085  0112D0  6EDA               	movwf	fsr2h,c
  4086  0112D2  0E09               	movlw	9
  4087  0112D4  5CDE               	subwf	postinc2,w,c
  4088  0112D6  0E07               	movlw	7
  4089  0112D8  58DE               	subwfb	postinc2,w,c
  4090  0112DA  A0D8               	btfss	status,0,c
  4091  0112DC  D004               	goto	l10946
  4092                           
  4093                           ; BSR set to: 1
  4094                           ;main.c: 300:      display_led(oo00_g);
  4095  0112DE  0E01               	movlw	1
  4096  0112E0  ECAE  F09F         	call	_display_led
  4097                           
  4098                           ;main.c: 301:     } else {
  4099  0112E4  D003               	goto	l10948
  4100  0112E6                     l10946:
  4101                           
  4102                           ; BSR set to: 1
  4103                           ;main.c: 302:      display_led(oo00_r);
  4104  0112E6  0E02               	movlw	2
  4105  0112E8  ECAE  F09F         	call	_display_led
  4106  0112EC                     l10948:
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;main.c: 306:    if (a[a_index].ana[PS_I_ANA] < 50) {
  4110  0112EC  5039               	movf	_a_index^0,w,c	;volatile
  4111  0112EE  0D7E               	mullw	126
  4112  0112F0  0E85               	movlw	low (_a+2)
  4113  0112F2  24F3               	addwf	243,w,c
  4114  0112F4  6ED9               	movwf	fsr2l,c
  4115  0112F6  0E05               	movlw	high (_a+2)
  4116  0112F8  20F4               	addwfc	prodh,w,c
  4117  0112FA  6EDA               	movwf	fsr2h,c
  4118  0112FC  0E01               	movlw	1
  4119  0112FE  50DB               	movf	plusw2,w,c
  4120  011300  E108               	bnz	l10952
  4121  011302  0E32               	movlw	50
  4122  011304  5CDE               	subwf	postinc2,w,c
  4123  011306  B0D8               	btfsc	status,0,c
  4124  011308  D004               	goto	l10952
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;main.c: 307:     display_led(oo10_off);
  4128  01130A  0E03               	movlw	3
  4129  01130C  ECAE  F09F         	call	_display_led
  4130                           
  4131                           ;main.c: 308:    } else {
  4132  011310  D016               	goto	l10958
  4133  011312                     l10952:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;main.c: 309:     if (a[a_index].ana[PS_I_ANA] > 150) {
  4137  011312  5039               	movf	_a_index^0,w,c	;volatile
  4138  011314  0D7E               	mullw	126
  4139  011316  0E85               	movlw	low (_a+2)
  4140  011318  24F3               	addwf	243,w,c
  4141  01131A  6ED9               	movwf	fsr2l,c
  4142  01131C  0E05               	movlw	high (_a+2)
  4143  01131E  20F4               	addwfc	prodh,w,c
  4144  011320  6EDA               	movwf	fsr2h,c
  4145  011322  0E01               	movlw	1
  4146  011324  50DB               	movf	plusw2,w,c
  4147  011326  E104               	bnz	u10530
  4148  011328  0E97               	movlw	151
  4149  01132A  5CDE               	subwf	postinc2,w,c
  4150  01132C  A0D8               	btfss	status,0,c
  4151  01132E  D004               	goto	l10956
  4152  011330                     u10530:
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;main.c: 310:      display_led(oo10_g);
  4156  011330  0E04               	movlw	4
  4157  011332  ECAE  F09F         	call	_display_led
  4158                           
  4159                           ;main.c: 311:     } else {
  4160  011336  D003               	goto	l10958
  4161  011338                     l10956:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;main.c: 312:      display_led(oo10_r);
  4165  011338  0E05               	movlw	5
  4166  01133A  ECAE  F09F         	call	_display_led
  4167  01133E                     l10958:
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;main.c: 315:    adc_tick = 0;
  4171  01133E  0E00               	movlw	0
  4172  011340  0101               	movlb	1	; () banked
  4173  011342  6F60               	movwf	_adc_tick& (0+255),b	;volatile
  4174                           
  4175                           ; BSR set to: 1
  4176                           ;main.c: 317:    if (!PORTAbits.RA6) {
  4177  011344  BCCA               	btfsc	202,6,c	;volatile
  4178  011346  D004               	goto	l10964
  4179                           
  4180                           ; BSR set to: 1
  4181                           ;main.c: 318:     display_led(oo30_r);
  4182  011348  0E0B               	movlw	11
  4183  01134A  ECAE  F09F         	call	_display_led
  4184                           
  4185                           ;main.c: 319:    } else {
  4186  01134E  D003               	goto	l10966
  4187  011350                     l10964:
  4188                           
  4189                           ; BSR set to: 1
  4190                           ;main.c: 320:     display_led(oo30_off);
  4191  011350  0E09               	movlw	9
  4192  011352  ECAE  F09F         	call	_display_led
  4193  011356                     l10966:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;main.c: 324:    if (!PORTAbits.RA4) {
  4197  011356  B8CA               	btfsc	202,4,c	;volatile
  4198  011358  D004               	goto	l10970
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;main.c: 325:     display_led(oo20_g);
  4202  01135A  0E07               	movlw	7
  4203  01135C  ECAE  F09F         	call	_display_led
  4204                           
  4205                           ;main.c: 326:    } else {
  4206  011360  D003               	goto	l10972
  4207  011362                     l10970:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;main.c: 327:     display_led(oo20_off);
  4211  011362  0E06               	movlw	6
  4212  011364  ECAE  F09F         	call	_display_led
  4213  011368                     l10972:
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;main.c: 330:    if (disp_tick) {
  4217  011368  0101               	movlb	1	; () banked
  4218  01136A  5161               	movf	_disp_tick& (0+255),w,b	;volatile
  4219  01136C  B4D8               	btfsc	status,2,c
  4220  01136E  D793               	goto	l10936
  4221                           
  4222                           ; BSR set to: 1
  4223                           ;main.c: 331:     ps_type_ptr = &ps_type[ps_type_index];
  4224  011370  5036               	movf	_ps_type_index^0,w,c	;volatile
  4225  011372  0D08               	mullw	8
  4226  011374  0EC2               	movlw	low _ps_type
  4227  011376  24F3               	addwf	243,w,c
  4228  011378  0100               	movlb	0	; () banked
  4229  01137A  6FFB               	movwf	_ps_type_ptr& (0+255),b
  4230  01137C  0E02               	movlw	high _ps_type
  4231  01137E  20F4               	addwfc	prodh,w,c
  4232  011380  6FFC               	movwf	(_ps_type_ptr+1)& (0+255),b
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;main.c: 332:     vval = (double) a[a_index].ana[PS_V_ANA] * ps_type_ptr->v_scale;
  4236  011382  5039               	movf	_a_index^0,w,c	;volatile
  4237  011384  0D7E               	mullw	126
  4238  011386  0E83               	movlw	low _a
  4239  011388  24F3               	addwf	243,w,c
  4240  01138A  6ED9               	movwf	fsr2l,c
  4241  01138C  0E05               	movlw	high _a
  4242  01138E  20F4               	addwfc	prodh,w,c
  4243  011390  6EDA               	movwf	fsr2h,c
  4244  011392  006F FF78  F0F4    	movff	postinc2,??_main
  4245  011398  006F FF74  F0F5    	movff	postdec2,??_main+1
  4246  01139E  C0F4  F064         	movff	??_main,___xxtofl@val
  4247  0113A2  C0F5  F065         	movff	??_main+1,___xxtofl@val+1
  4248  0113A6  6B66               	clrf	(___xxtofl@val+2)& (0+255),b
  4249  0113A8  6B67               	clrf	(___xxtofl@val+3)& (0+255),b
  4250  0113AA  0E00               	movlw	0
  4251  0113AC  EC03  F09B         	call	___xxtofl
  4252  0113B0  C064  F072         	movff	?___xxtofl,___flmul@b
  4253  0113B4  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  4254  0113B8  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  4255  0113BC  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  4256  0113C0  0060  F3EF  FFD9   	movff	_ps_type_ptr,fsr2l
  4257  0113C6  0060  F3F3  FFDA   	movff	_ps_type_ptr+1,fsr2h
  4258  0113CC  006F FF78  F076    	movff	postinc2,___flmul@a
  4259  0113D2  006F FF78  F077    	movff	postinc2,___flmul@a+1
  4260  0113D8  006F FF78  F078    	movff	postinc2,___flmul@a+2
  4261  0113DE  006F FF78  F079    	movff	postinc2,___flmul@a+3
  4262  0113E4  ECF1  F08F         	call	___flmul	;wreg free
  4263  0113E8  C072  F13C         	movff	?___flmul,_vval
  4264  0113EC  C073  F13D         	movff	?___flmul+1,_vval+1
  4265  0113F0  C074  F13E         	movff	?___flmul+2,_vval+2
  4266  0113F4  C075  F13F         	movff	?___flmul+3,_vval+3
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;main.c: 333:     ival = (double) a[a_index].ana[PS_I_ANA] * ps_type_ptr->i_scale;
  4270  0113F8  5039               	movf	_a_index^0,w,c	;volatile
  4271  0113FA  0D7E               	mullw	126
  4272  0113FC  0E85               	movlw	low (_a+2)
  4273  0113FE  24F3               	addwf	243,w,c
  4274  011400  6ED9               	movwf	fsr2l,c
  4275  011402  0E05               	movlw	high (_a+2)
  4276  011404  20F4               	addwfc	prodh,w,c
  4277  011406  6EDA               	movwf	fsr2h,c
  4278  011408  006F FF78  F0F4    	movff	postinc2,??_main
  4279  01140E  006F FF74  F0F5    	movff	postdec2,??_main+1
  4280  011414  C0F4  F064         	movff	??_main,___xxtofl@val
  4281  011418  C0F5  F065         	movff	??_main+1,___xxtofl@val+1
  4282  01141C  6B66               	clrf	(___xxtofl@val+2)& (0+255),b
  4283  01141E  6B67               	clrf	(___xxtofl@val+3)& (0+255),b
  4284  011420  0E00               	movlw	0
  4285  011422  EC03  F09B         	call	___xxtofl
  4286  011426  C064  F072         	movff	?___xxtofl,___flmul@b
  4287  01142A  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  4288  01142E  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  4289  011432  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  4290  011436  EE20 F004          	lfsr	2,4
  4291  01143A  51FB               	movf	_ps_type_ptr& (0+255),w,b
  4292  01143C  26D9               	addwf	fsr2l,f,c
  4293  01143E  51FC               	movf	(_ps_type_ptr+1)& (0+255),w,b
  4294  011440  22DA               	addwfc	fsr2h,f,c
  4295  011442  006F FF78  F076    	movff	postinc2,___flmul@a
  4296  011448  006F FF78  F077    	movff	postinc2,___flmul@a+1
  4297  01144E  006F FF78  F078    	movff	postinc2,___flmul@a+2
  4298  011454  006F FF78  F079    	movff	postinc2,___flmul@a+3
  4299  01145A  ECF1  F08F         	call	___flmul	;wreg free
  4300  01145E  C072  F138         	movff	?___flmul,_ival
  4301  011462  C073  F139         	movff	?___flmul+1,_ival+1
  4302  011466  C074  F13A         	movff	?___flmul+2,_ival+2
  4303  01146A  C075  F13B         	movff	?___flmul+3,_ival+3
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;main.c: 334:     ps_math(ps_type_ptr->v_scale, PS_V_ANA);
  4307  01146E  0060  F3EF  FFD9   	movff	_ps_type_ptr,fsr2l
  4308  011474  0060  F3F3  FFDA   	movff	_ps_type_ptr+1,fsr2h
  4309  01147A  006F FF78  F0C8    	movff	postinc2,ps_math@scale
  4310  011480  006F FF78  F0C9    	movff	postinc2,ps_math@scale+1
  4311  011486  006F FF78  F0CA    	movff	postinc2,ps_math@scale+2
  4312  01148C  006F FF78  F0CB    	movff	postinc2,ps_math@scale+3
  4313  011492  0E00               	movlw	0
  4314  011494  6FCC               	movwf	ps_math@chan& (0+255),b
  4315  011496  EC1F  F093         	call	_ps_math	;wreg free
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;main.c: 335:     printf(" PS TYPE %1u: PS Test %1u: DAC OUT %4.4umV B=%.2u, Supply Read
      +                          Back %4.4umV V=%+6.1fV %4.4umV I=%+3.1fmA : Statistics Std=%6.1fV Var=%6.1fV Mean=%6.1fV
      +                          \r\n",
  4319  01149A  0EF2               	movlw	low STR_15
  4320  01149C  0101               	movlb	1	; () banked
  4321  01149E  6F82               	movwf	printf@fmt& (0+255),b
  4322  0114A0  0EFD               	movlw	high STR_15
  4323  0114A2  6F83               	movwf	(printf@fmt+1)& (0+255),b
  4324  0114A4  C036  F184         	movff	_ps_type_index,?_printf+2	;volatile
  4325  0114A8  6B85               	clrf	(?_printf+3)& (0+255),b
  4326  0114AA  C037  F186         	movff	_mode,?_printf+4
  4327  0114AE  6B87               	clrf	(?_printf+5)& (0+255),b
  4328  0114B0  5039               	movf	_a_index^0,w,c	;volatile
  4329  0114B2  0D7E               	mullw	126
  4330  0114B4  0EFD               	movlw	low (_a+122)
  4331  0114B6  24F3               	addwf	243,w,c
  4332  0114B8  6ED9               	movwf	fsr2l,c
  4333  0114BA  0E05               	movlw	high (_a+122)
  4334  0114BC  20F4               	addwfc	prodh,w,c
  4335  0114BE  6EDA               	movwf	fsr2h,c
  4336  0114C0  006F FF78  F188    	movff	postinc2,?_printf+6
  4337  0114C6  006F FF74  F189    	movff	postdec2,?_printf+7
  4338  0114CC  EC58  F0AB         	call	_DAC1_GetOutput	;wreg free
  4339  0114D0  0100               	movlb	0	; () banked
  4340  0114D2  6FF4               	movwf	??_main& (0+255),b
  4341  0114D4  51F4               	movf	??_main& (0+255),w,b
  4342  0114D6  0101               	movlb	1	; () banked
  4343  0114D8  6F8A               	movwf	(?_printf+8)& (0+255),b
  4344  0114DA  6B8B               	clrf	(?_printf+9)& (0+255),b
  4345  0114DC  5039               	movf	_a_index^0,w,c	;volatile
  4346  0114DE  0D7E               	mullw	126
  4347  0114E0  0E83               	movlw	low _a
  4348  0114E2  24F3               	addwf	243,w,c
  4349  0114E4  6ED9               	movwf	fsr2l,c
  4350  0114E6  0E05               	movlw	high _a
  4351  0114E8  20F4               	addwfc	prodh,w,c
  4352  0114EA  6EDA               	movwf	fsr2h,c
  4353  0114EC  006F FF78  F18C    	movff	postinc2,?_printf+10
  4354  0114F2  006F FF74  F18D    	movff	postdec2,?_printf+11
  4355  0114F8  C13C  F18E         	movff	_vval,?_printf+12
  4356  0114FC  C13D  F18F         	movff	_vval+1,?_printf+13
  4357  011500  C13E  F190         	movff	_vval+2,?_printf+14
  4358  011504  C13F  F191         	movff	_vval+3,?_printf+15
  4359  011508  5039               	movf	_a_index^0,w,c	;volatile
  4360  01150A  0D7E               	mullw	126
  4361  01150C  0E85               	movlw	low (_a+2)
  4362  01150E  24F3               	addwf	243,w,c
  4363  011510  6ED9               	movwf	fsr2l,c
  4364  011512  0E05               	movlw	high (_a+2)
  4365  011514  20F4               	addwfc	prodh,w,c
  4366  011516  6EDA               	movwf	fsr2h,c
  4367  011518  006F FF78  F192    	movff	postinc2,?_printf+16
  4368  01151E  006F FF74  F193    	movff	postdec2,?_printf+17
  4369  011524  C138  F194         	movff	_ival,?_printf+18
  4370  011528  C139  F195         	movff	_ival+1,?_printf+19
  4371  01152C  C13A  F196         	movff	_ival+2,?_printf+20
  4372  011530  C13B  F197         	movff	_ival+3,?_printf+21
  4373  011534  C124  F198         	movff	_stddeviation,?_printf+22
  4374  011538  C125  F199         	movff	_stddeviation+1,?_printf+23
  4375  01153C  C126  F19A         	movff	_stddeviation+2,?_printf+24
  4376  011540  C127  F19B         	movff	_stddeviation+3,?_printf+25
  4377  011544  C022  F19C         	movff	_variance,?_printf+26
  4378  011548  C023  F19D         	movff	_variance+1,?_printf+27
  4379  01154C  C024  F19E         	movff	_variance+2,?_printf+28
  4380  011550  C025  F19F         	movff	_variance+3,?_printf+29
  4381  011554  C128  F1A0         	movff	_mean,?_printf+30
  4382  011558  C129  F1A1         	movff	_mean+1,?_printf+31
  4383  01155C  C12A  F1A2         	movff	_mean+2,?_printf+32
  4384  011560  C12B  F1A3         	movff	_mean+3,?_printf+33
  4385  011564  EC21  F0A9         	call	_printf	;wreg free
  4386                           
  4387                           ; BSR set to: 1
  4388                           ;main.c: 338:     if (!(lcd_update++ & 0x03)) {
  4389  011568  0100               	movlb	0	; () banked
  4390  01156A  2BF6               	incf	main@lcd_update& (0+255),f,b
  4391  01156C  05F6               	decf	main@lcd_update& (0+255),w,b
  4392  01156E  6FF4               	movwf	??_main& (0+255),b
  4393  011570  0E03               	movlw	3
  4394  011572  17F4               	andwf	??_main& (0+255),f,b
  4395  011574  A4D8               	btfss	status,2,c
  4396  011576  D0F4               	goto	l11028
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;main.c: 339:      sprintf(buff1, "%4.4umV %4.4umV %4.4umV", a[a_index].ana[channel_DAC1
      +                          ], a[a_index].ana[PS_V_ANA], a[a_index].ana[PS_I_ANA]);
  4400  011578  0E00               	movlw	low _buff1
  4401  01157A  0101               	movlb	1	; () banked
  4402  01157C  6F82               	movwf	sprintf@s& (0+255),b
  4403  01157E  0E04               	movlw	high _buff1
  4404  011580  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4405  011582  0E01               	movlw	low STR_16
  4406  011584  6F84               	movwf	sprintf@fmt& (0+255),b
  4407  011586  0EFF               	movlw	high STR_16
  4408  011588  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4409  01158A  5039               	movf	_a_index^0,w,c	;volatile
  4410  01158C  0D7E               	mullw	126
  4411  01158E  0EFD               	movlw	low (_a+122)
  4412  011590  24F3               	addwf	243,w,c
  4413  011592  6ED9               	movwf	fsr2l,c
  4414  011594  0E05               	movlw	high (_a+122)
  4415  011596  20F4               	addwfc	prodh,w,c
  4416  011598  6EDA               	movwf	fsr2h,c
  4417  01159A  006F FF78  F186    	movff	postinc2,?_sprintf+4
  4418  0115A0  006F FF74  F187    	movff	postdec2,?_sprintf+5
  4419  0115A6  5039               	movf	_a_index^0,w,c	;volatile
  4420  0115A8  0D7E               	mullw	126
  4421  0115AA  0E83               	movlw	low _a
  4422  0115AC  24F3               	addwf	243,w,c
  4423  0115AE  6ED9               	movwf	fsr2l,c
  4424  0115B0  0E05               	movlw	high _a
  4425  0115B2  20F4               	addwfc	prodh,w,c
  4426  0115B4  6EDA               	movwf	fsr2h,c
  4427  0115B6  006F FF78  F188    	movff	postinc2,?_sprintf+6
  4428  0115BC  006F FF74  F189    	movff	postdec2,?_sprintf+7
  4429  0115C2  5039               	movf	_a_index^0,w,c	;volatile
  4430  0115C4  0D7E               	mullw	126
  4431  0115C6  0E85               	movlw	low (_a+2)
  4432  0115C8  24F3               	addwf	243,w,c
  4433  0115CA  6ED9               	movwf	fsr2l,c
  4434  0115CC  0E05               	movlw	high (_a+2)
  4435  0115CE  20F4               	addwfc	prodh,w,c
  4436  0115D0  6EDA               	movwf	fsr2h,c
  4437  0115D2  006F FF78  F18A    	movff	postinc2,?_sprintf+8
  4438  0115D8  006F FF74  F18B    	movff	postdec2,?_sprintf+9
  4439  0115DE  ECB3  F0A4         	call	_sprintf	;wreg free
  4440                           
  4441                           ; BSR set to: 1
  4442                           ;main.c: 340:      eaDogM_WriteStringAtPos(1, 0, buff1);
  4443  0115E2  0E00               	movlw	0
  4444  0115E4  0100               	movlb	0	; () banked
  4445  0115E6  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4446  0115E8  0E00               	movlw	low _buff1
  4447  0115EA  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4448  0115EC  0E04               	movlw	high _buff1
  4449  0115EE  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4450  0115F0  0E01               	movlw	1
  4451  0115F2  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  4452                           
  4453                           ; BSR set to: 59
  4454                           ;main.c: 341:      sprintf(buff1, "%4.4umV %4.4umV %4.4umV", a[a_index].ana[DAC_ANA], a[
      +                          a_index].ana[PWM5_ANA], a[a_index].ana[PWM6_ANA]);
  4455  0115F6  0E00               	movlw	low _buff1
  4456  0115F8  0101               	movlb	1	; () banked
  4457  0115FA  6F82               	movwf	sprintf@s& (0+255),b
  4458  0115FC  0E04               	movlw	high _buff1
  4459  0115FE  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4460  011600  0E01               	movlw	low STR_16
  4461  011602  6F84               	movwf	sprintf@fmt& (0+255),b
  4462  011604  0EFF               	movlw	high STR_16
  4463  011606  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4464  011608  5039               	movf	_a_index^0,w,c	;volatile
  4465  01160A  0D7E               	mullw	126
  4466  01160C  0EC5               	movlw	low (_a+66)
  4467  01160E  24F3               	addwf	243,w,c
  4468  011610  6ED9               	movwf	fsr2l,c
  4469  011612  0E05               	movlw	high (_a+66)
  4470  011614  20F4               	addwfc	prodh,w,c
  4471  011616  6EDA               	movwf	fsr2h,c
  4472  011618  006F FF78  F186    	movff	postinc2,?_sprintf+4
  4473  01161E  006F FF74  F187    	movff	postdec2,?_sprintf+5
  4474  011624  5039               	movf	_a_index^0,w,c	;volatile
  4475  011626  0D7E               	mullw	126
  4476  011628  0ED3               	movlw	low (_a+80)
  4477  01162A  24F3               	addwf	243,w,c
  4478  01162C  6ED9               	movwf	fsr2l,c
  4479  01162E  0E05               	movlw	high (_a+80)
  4480  011630  20F4               	addwfc	prodh,w,c
  4481  011632  6EDA               	movwf	fsr2h,c
  4482  011634  006F FF78  F188    	movff	postinc2,?_sprintf+6
  4483  01163A  006F FF74  F189    	movff	postdec2,?_sprintf+7
  4484  011640  5039               	movf	_a_index^0,w,c	;volatile
  4485  011642  0D7E               	mullw	126
  4486  011644  0ED5               	movlw	low (_a+82)
  4487  011646  24F3               	addwf	243,w,c
  4488  011648  6ED9               	movwf	fsr2l,c
  4489  01164A  0E05               	movlw	high (_a+82)
  4490  01164C  20F4               	addwfc	prodh,w,c
  4491  01164E  6EDA               	movwf	fsr2h,c
  4492  011650  006F FF78  F18A    	movff	postinc2,?_sprintf+8
  4493  011656  006F FF74  F18B    	movff	postdec2,?_sprintf+9
  4494  01165C  ECB3  F0A4         	call	_sprintf	;wreg free
  4495                           
  4496                           ;main.c: 342:      eaDogM_WriteStringAtPos(2, 0, buff1);
  4497  011660  0E00               	movlw	0
  4498  011662  0100               	movlb	0	; () banked
  4499  011664  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4500  011666  0E00               	movlw	low _buff1
  4501  011668  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4502  01166A  0E04               	movlw	high _buff1
  4503  01166C  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4504  01166E  0E02               	movlw	2
  4505  011670  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  4506                           
  4507                           ; BSR set to: 59
  4508                           ;main.c: 343:      sprintf(buff1, "M%1u, P%1u, D%3.1f V%3.1f   ", mode, ps_type_index, s
      +                          tddeviation, variance);
  4509  011674  0E00               	movlw	low _buff1
  4510  011676  0101               	movlb	1	; () banked
  4511  011678  6F82               	movwf	sprintf@s& (0+255),b
  4512  01167A  0E04               	movlw	high _buff1
  4513  01167C  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4514  01167E  0EE4               	movlw	low STR_18
  4515  011680  6F84               	movwf	sprintf@fmt& (0+255),b
  4516  011682  0EFE               	movlw	high STR_18
  4517  011684  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4518  011686  C037  F186         	movff	_mode,?_sprintf+4
  4519  01168A  6B87               	clrf	(?_sprintf+5)& (0+255),b
  4520  01168C  C036  F188         	movff	_ps_type_index,?_sprintf+6	;volatile
  4521  011690  6B89               	clrf	(?_sprintf+7)& (0+255),b
  4522  011692  C124  F18A         	movff	_stddeviation,?_sprintf+8
  4523  011696  C125  F18B         	movff	_stddeviation+1,?_sprintf+9
  4524  01169A  C126  F18C         	movff	_stddeviation+2,?_sprintf+10
  4525  01169E  C127  F18D         	movff	_stddeviation+3,?_sprintf+11
  4526  0116A2  C022  F18E         	movff	_variance,?_sprintf+12
  4527  0116A6  C023  F18F         	movff	_variance+1,?_sprintf+13
  4528  0116AA  C024  F190         	movff	_variance+2,?_sprintf+14
  4529  0116AE  C025  F191         	movff	_variance+3,?_sprintf+15
  4530  0116B2  ECB3  F0A4         	call	_sprintf	;wreg free
  4531                           
  4532                           ; BSR set to: 1
  4533                           ;main.c: 344:      eaDogM_WriteStringAtPos(3, 0, buff1);
  4534  0116B6  0E00               	movlw	0
  4535  0116B8  0100               	movlb	0	; () banked
  4536  0116BA  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4537  0116BC  0E00               	movlw	low _buff1
  4538  0116BE  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4539  0116C0  0E04               	movlw	high _buff1
  4540  0116C2  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4541  0116C4  0E03               	movlw	3
  4542  0116C6  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  4543                           
  4544                           ;main.c: 345:      sprintf(buff1, "V=%+6.1fV I=%+3.1fmA  ", vval, ival);
  4545  0116CA  0E00               	movlw	low _buff1
  4546  0116CC  0101               	movlb	1	; () banked
  4547  0116CE  6F82               	movwf	sprintf@s& (0+255),b
  4548  0116D0  0E04               	movlw	high _buff1
  4549  0116D2  6F83               	movwf	(sprintf@s+1)& (0+255),b
  4550  0116D4  0E19               	movlw	low STR_19
  4551  0116D6  6F84               	movwf	sprintf@fmt& (0+255),b
  4552  0116D8  0EFF               	movlw	high STR_19
  4553  0116DA  6F85               	movwf	(sprintf@fmt+1)& (0+255),b
  4554  0116DC  C13C  F186         	movff	_vval,?_sprintf+4
  4555  0116E0  C13D  F187         	movff	_vval+1,?_sprintf+5
  4556  0116E4  C13E  F188         	movff	_vval+2,?_sprintf+6
  4557  0116E8  C13F  F189         	movff	_vval+3,?_sprintf+7
  4558  0116EC  C138  F18A         	movff	_ival,?_sprintf+8
  4559  0116F0  C139  F18B         	movff	_ival+1,?_sprintf+9
  4560  0116F4  C13A  F18C         	movff	_ival+2,?_sprintf+10
  4561  0116F8  C13B  F18D         	movff	_ival+3,?_sprintf+11
  4562  0116FC  ECB3  F0A4         	call	_sprintf	;wreg free
  4563                           
  4564                           ; BSR set to: 1
  4565                           ;main.c: 346:      eaDogM_WriteStringAtPos(0, 0, buff1);
  4566  011700  0E00               	movlw	0
  4567  011702  0100               	movlb	0	; () banked
  4568  011704  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4569  011706  0E00               	movlw	low _buff1
  4570  011708  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4571  01170A  0E04               	movlw	high _buff1
  4572  01170C  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4573  01170E  0E00               	movlw	0
  4574  011710  EC1C  F0A3         	call	_eaDogM_WriteStringAtPos
  4575  011714  D025               	goto	l11028
  4576  011716                     l10998:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;main.c: 353:      i_index++;
  4580  011716  2A38               	incf	_i_index^0,f,c	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;main.c: 354:      if (dac_v > roll_max) {
  4584  011718  51FA               	movf	_dac_v& (0+255),w,b
  4585  01171A  0101               	movlb	1	; () banked
  4586  01171C  5DB0               	subwf	_roll_max& (0+255),w,b
  4587  01171E  B0D8               	btfsc	status,0,c
  4588  011720  D005               	goto	l11004
  4589                           
  4590                           ; BSR set to: 1
  4591                           ;main.c: 355:       dac_v = 0;
  4592  011722  0E00               	movlw	0
  4593  011724  0100               	movlb	0	; () banked
  4594  011726  6FFA               	movwf	_dac_v& (0+255),b
  4595                           
  4596                           ;main.c: 356:       i_index = 0;
  4597  011728  0E00               	movlw	0
  4598  01172A  6E38               	movwf	_i_index^0,c	;volatile
  4599  01172C                     l11004:
  4600                           
  4601                           ;main.c: 358:      DAC1_SetOutput(dac_v++);
  4602  01172C  0100               	movlb	0	; () banked
  4603  01172E  51FA               	movf	_dac_v& (0+255),w,b
  4604  011730  EC49  F0AB         	call	_DAC1_SetOutput
  4605  011734  0100               	movlb	0	; () banked
  4606  011736  2BFA               	incf	_dac_v& (0+255),f,b
  4607  011738  D007               	goto	l11014
  4608  01173A                     l11010:
  4609                           
  4610                           ; BSR set to: 0
  4611  01173A  9ABA               	bcf	186,5,c	;volatile
  4612  01173C  D024               	goto	l11030
  4613  01173E                     l1360:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;main.c: 363:      dac_v = static_ps;
  4617  01173E  C1AF  F0FA         	movff	_static_ps,_dac_v
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;main.c: 364:      DAC1_SetOutput(dac_v);
  4621  011742  51FA               	movf	_dac_v& (0+255),w,b
  4622  011744  EC49  F0AB         	call	_DAC1_SetOutput
  4623  011748                     l11014:
  4624  011748  82BD               	bsf	189,1,c	;volatile
  4625  01174A  D7F7               	goto	l11010
  4626  01174C                     l11018:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;main.c: 370:      mode = off_mode;
  4630  01174C  0E00               	movlw	0
  4631  01174E  6E37               	movwf	_mode^0,c
  4632                           
  4633                           ;main.c: 371:      dac_v = 0;
  4634  011750  0E00               	movlw	0
  4635  011752  6FFA               	movwf	_dac_v& (0+255),b
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;main.c: 372:      DAC1_SetOutput(dac_v);
  4639  011754  0E00               	movlw	0
  4640  011756  EC49  F0AB         	call	_DAC1_SetOutput
  4641  01175A  92BD               	bcf	189,1,c	;volatile
  4642  01175C  8ABA               	bsf	186,5,c	;volatile
  4643  01175E  D013               	goto	l11030
  4644  011760                     l11028:
  4645  011760  5037               	movf	_mode^0,w,c
  4646  011762  0100               	movlb	0	; () banked
  4647  011764  6FF4               	movwf	??_main& (0+255),b
  4648  011766  6BF5               	clrf	(??_main+1)& (0+255),b
  4649                           
  4650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4651                           ; Switch size 1, requested type "simple"
  4652                           ; Number of cases is 1, Range of values is 0 to 0
  4653                           ; switch strategies available:
  4654                           ; Name         Instructions Cycles
  4655                           ; simple_byte            4     3 (average)
  4656                           ;	Chosen strategy is simple_byte
  4657  011768  51F5               	movf	(??_main+1)& (0+255),w,b
  4658  01176A  0A00               	xorlw	0	; case 0
  4659  01176C  A4D8               	btfss	status,2,c
  4660  01176E  D7EE               	goto	l11018
  4661                           
  4662                           ; BSR set to: 0
  4663                           ; Switch size 1, requested type "simple"
  4664                           ; Number of cases is 3, Range of values is 0 to 2
  4665                           ; switch strategies available:
  4666                           ; Name         Instructions Cycles
  4667                           ; simple_byte           10     6 (average)
  4668                           ;	Chosen strategy is simple_byte
  4669  011770  51F4               	movf	??_main& (0+255),w,b
  4670  011772  0A00               	xorlw	0	; case 0
  4671  011774  B4D8               	btfsc	status,2,c
  4672  011776  D7EA               	goto	l11018
  4673  011778  0A01               	xorlw	1	; case 1
  4674  01177A  B4D8               	btfsc	status,2,c
  4675  01177C  D7CC               	goto	l10998
  4676  01177E  0A03               	xorlw	3	; case 2
  4677  011780  B4D8               	btfsc	status,2,c
  4678  011782  D7DD               	goto	l1360
  4679  011784  D7E3               	goto	l11018
  4680  011786                     l11030:
  4681                           
  4682                           ;main.c: 382:     cli_read(&cli_ctx);
  4683  011786  0E00               	movlw	low _cli_ctx
  4684  011788  0100               	movlb	0	; () banked
  4685  01178A  6F83               	movwf	cli_read@a_ctx& (0+255),b
  4686  01178C  0E05               	movlw	high _cli_ctx
  4687  01178E  6F84               	movwf	(cli_read@a_ctx+1)& (0+255),b
  4688  011790  EC0F  F099         	call	_cli_read	;wreg free
  4689                           
  4690                           ;main.c: 383:     disp_tick = 0;
  4691  011794  0E00               	movlw	0
  4692  011796  0101               	movlb	1	; () banked
  4693  011798  6F61               	movwf	_disp_tick& (0+255),b	;volatile
  4694                           
  4695                           ; BSR set to: 1
  4696                           ;main.c: 384:     if (!PORTBbits.RB0) {
  4697  01179A  B0CB               	btfsc	203,0,c	;volatile
  4698  01179C  D009               	goto	l11044
  4699                           
  4700                           ; BSR set to: 1
  4701                           ;main.c: 385:      if (++mode_sw > 4) {
  4702  01179E  2B5F               	incf	_mode_sw& (0+255),f,b
  4703  0117A0  0E04               	movlw	4
  4704  0117A2  655F               	cpfsgt	_mode_sw& (0+255),b
  4705  0117A4  D578               	goto	l10936
  4706                           
  4707                           ; BSR set to: 1
  4708                           ;main.c: 386:       mode++;
  4709  0117A6  2A37               	incf	_mode^0,f,c
  4710                           
  4711                           ; BSR set to: 1
  4712                           ;main.c: 387:       mode_sw = 0;
  4713  0117A8  0E00               	movlw	0
  4714  0117AA  6F5F               	movwf	_mode_sw& (0+255),b
  4715                           
  4716                           ; BSR set to: 1
  4717  0117AC  84BE               	bsf	190,2,c	;volatile
  4718  0117AE  D573               	goto	l10936
  4719  0117B0                     l11044:
  4720                           
  4721                           ; BSR set to: 1
  4722                           ;main.c: 391:      mode_sw = 0;
  4723  0117B0  0E00               	movlw	0
  4724  0117B2  6F5F               	movwf	_mode_sw& (0+255),b
  4725                           
  4726                           ; BSR set to: 1
  4727  0117B4  94BE               	bcf	190,2,c	;volatile
  4728  0117B6  D56F               	goto	l10936
  4729  0117B8                     __end_of_main:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _sprintf *****************
  4733 ;; Defined at:
  4734 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  s               2   22[BANK1 ] PTR unsigned char 
  4737 ;;		 -> buff1(255), 
  4738 ;;  fmt             2   24[BANK1 ] PTR const unsigned char 
  4739 ;;		 -> STR_19(23), STR_18(29), STR_17(24), STR_16(24), 
  4740 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  f              11   40[BANK1 ] struct _IO_FILE
  4743 ;;  ap              2   38[BANK1 ] PTR void [1]
  4744 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4745 ;;  ret             2    0        int 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  2   22[BANK1 ] int 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 3F/1
  4752 ;;		On exit  : 3F/1
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4755 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4756 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4758 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4759 ;;Total ram usage:       29 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; Hardware stack levels required when called: 15
  4762 ;; This function calls:
  4763 ;;		_vfprintf
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text1
  4770  014966                     __ptext1:
  4771                           	callstack 0
  4772  014966                     _sprintf:
  4773                           	callstack 15
  4774                           
  4775                           ; BSR set to: 1
  4776                           
  4777                           ; BSR set to: 1
  4778                           ;incstack = 0
  4779  014966  0E86               	movlw	low (?_sprintf+4)
  4780  014968  6F92               	movwf	sprintf@ap& (0+255),b
  4781  01496A  0E01               	movlw	high (?_sprintf+4)
  4782  01496C  6F93               	movwf	(sprintf@ap+1)& (0+255),b
  4783  01496E  C182  F194         	movff	sprintf@s,sprintf@f
  4784  014972  C183  F195         	movff	sprintf@s+1,sprintf@f+1
  4785                           
  4786                           ; BSR set to: 1
  4787  014976  0E00               	movlw	0
  4788  014978  6F98               	movwf	(sprintf@f+4)& (0+255),b
  4789  01497A  0E00               	movlw	0
  4790  01497C  6F97               	movwf	(sprintf@f+3)& (0+255),b
  4791                           
  4792                           ; BSR set to: 1
  4793  01497E  0E00               	movlw	0
  4794  014980  6F9E               	movwf	(sprintf@f+10)& (0+255),b
  4795  014982  0E00               	movlw	0
  4796  014984  6F9D               	movwf	(sprintf@f+9)& (0+255),b
  4797                           
  4798                           ; BSR set to: 1
  4799  014986  0E94               	movlw	low sprintf@f
  4800  014988  0100               	movlb	0	; () banked
  4801  01498A  6FEA               	movwf	vfprintf@fp& (0+255),b
  4802  01498C  0E01               	movlw	high sprintf@f
  4803  01498E  6FEB               	movwf	(vfprintf@fp+1)& (0+255),b
  4804  014990  C184  F0EC         	movff	sprintf@fmt,vfprintf@fmt
  4805  014994  C185  F0ED         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4806  014998  0E92               	movlw	low sprintf@ap
  4807  01499A  6FEE               	movwf	vfprintf@ap& (0+255),b
  4808  01499C  0E01               	movlw	high sprintf@ap
  4809  01499E  6FEF               	movwf	(vfprintf@ap+1)& (0+255),b
  4810  0149A0  EC7F  F0A3         	call	_vfprintf	;wreg free
  4811                           
  4812                           ; BSR set to: 1
  4813  0149A4  5197               	movf	(sprintf@f+3)& (0+255),w,b
  4814  0149A6  2582               	addwf	sprintf@s& (0+255),w,b
  4815  0149A8  6ED9               	movwf	fsr2l,c
  4816  0149AA  5198               	movf	(sprintf@f+4)& (0+255),w,b
  4817  0149AC  2183               	addwfc	(sprintf@s+1)& (0+255),w,b
  4818  0149AE  6EDA               	movwf	fsr2h,c
  4819  0149B0  0E00               	movlw	0
  4820  0149B2  6EDF               	movwf	indf2,c
  4821                           
  4822                           ; BSR set to: 1
  4823  0149B4  0012               	return		;funcret
  4824  0149B6                     __end_of_sprintf:
  4825                           	callstack 0
  4826                           
  4827 ;; *************** function _scmd_init *****************
  4828 ;; Defined at:
  4829 ;;		line 36 in file "scdm.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;		None
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/3D
  4840 ;;		On exit  : 3F/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4847 ;;Total ram usage:        0 bytes
  4848 ;; Hardware stack levels used: 1
  4849 ;; Hardware stack levels required when called: 13
  4850 ;; This function calls:
  4851 ;;		_cli_init
  4852 ;; This function is called by:
  4853 ;;		_main
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text2
  4858  0154C4                     __ptext2:
  4859                           	callstack 0
  4860  0154C4                     _scmd_init:
  4861                           	callstack 17
  4862                           
  4863                           ;scdm.c: 38:  cli_init(&cli_ctx, g_cmds);
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;incstack = 0
  4867  0154C4  0E00               	movlw	low _cli_ctx
  4868  0154C6  0100               	movlb	0	; () banked
  4869  0154C8  6F75               	movwf	cli_init@a_ctx& (0+255),b
  4870  0154CA  0E05               	movlw	high _cli_ctx
  4871  0154CC  6F76               	movwf	(cli_init@a_ctx+1)& (0+255),b
  4872  0154CE  0E90               	movlw	low _g_cmds
  4873  0154D0  6F77               	movwf	cli_init@a_cmds& (0+255),b
  4874  0154D2  0E02               	movlw	high _g_cmds
  4875  0154D4  6F78               	movwf	(cli_init@a_cmds+1)& (0+255),b
  4876  0154D6  EC2B  F0A6         	call	_cli_init	;wreg free
  4877                           
  4878                           ; BSR set to: 0
  4879  0154DA  0012               	return		;funcret
  4880  0154DC                     __end_of_scmd_init:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function _cli_init *****************
  4884 ;; Defined at:
  4885 ;;		line 26 in file "scdm.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  a_ctx           2   21[BANK0 ] PTR struct _t_cli_ctx
  4888 ;;		 -> cli_ctx(131), 
  4889 ;;  a_cmds          2   23[BANK0 ] PTR struct _t_cmd
  4890 ;;		 -> g_cmds(50), 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 3F/0
  4899 ;;		On exit  : 3F/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4905 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4906 ;;Total ram usage:        4 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; Hardware stack levels required when called: 12
  4909 ;; This function calls:
  4910 ;;		_memset
  4911 ;;		_puts
  4912 ;; This function is called by:
  4913 ;;		_scmd_init
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text3
  4918  014C56                     __ptext3:
  4919                           	callstack 0
  4920  014C56                     _cli_init:
  4921                           	callstack 17
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;scdm.c: 26: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 27: {;scdm.c:
      +                           28:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;incstack = 0
  4928  014C56  C075  F060         	movff	cli_init@a_ctx,memset@dest
  4929  014C5A  C076  F061         	movff	cli_init@a_ctx+1,memset@dest+1
  4930  014C5E  0E00               	movlw	0
  4931  014C60  6F63               	movwf	(memset@c+1)& (0+255),b
  4932  014C62  0E00               	movlw	0
  4933  014C64  6F62               	movwf	memset@c& (0+255),b
  4934  014C66  0E00               	movlw	0
  4935  014C68  6F65               	movwf	(memset@n+1)& (0+255),b
  4936  014C6A  0E83               	movlw	131
  4937  014C6C  6F64               	movwf	memset@n& (0+255),b
  4938  014C6E  EC5D  F09A         	call	_memset	;wreg free
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;scdm.c: 29:  a_ctx->cmds = a_cmds;
  4942  014C72  0060  F1D7  FFD9   	movff	cli_init@a_ctx,fsr2l
  4943  014C78  0060  F1DB  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  4944  014C7E  0060  F1DF  FFDE   	movff	cli_init@a_cmds,postinc2
  4945  014C84  0060  F1E3  FFDD   	movff	cli_init@a_cmds+1,postdec2
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;scdm.c: 33:  puts(cmdm);
  4949  014C8A  0EC8               	movlw	low _cmdm
  4950  014C8C  6F72               	movwf	puts@s& (0+255),b
  4951  014C8E  0EFD               	movlw	high _cmdm
  4952  014C90  6F73               	movwf	(puts@s+1)& (0+255),b
  4953  014C92  ECE6  F0A7         	call	_puts	;wreg free
  4954                           
  4955                           ; BSR set to: 0
  4956  014C96  0012               	return		;funcret
  4957  014C98                     __end_of_cli_init:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _ps_math *****************
  4961 ;; Defined at:
  4962 ;;		line 220 in file "main.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  scale           4  104[BANK0 ] void 
  4965 ;;  chan            1  108[BANK0 ] enum E17075
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  i               2  115[BANK0 ] int 
  4968 ;;  n               2  113[BANK0 ] int 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 3F/0
  4975 ;;		On exit  : 3F/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4978 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4979 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4980 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4981 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4982 ;;Total ram usage:       13 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; Hardware stack levels required when called: 9
  4985 ;; This function calls:
  4986 ;;		___fladd
  4987 ;;		___fldiv
  4988 ;;		___flmul
  4989 ;;		___flsub
  4990 ;;		___wmul
  4991 ;;		___xxtofl
  4992 ;;		_sqrtf
  4993 ;; This function is called by:
  4994 ;;		_main
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text4
  4999  01263E                     __ptext4:
  5000                           	callstack 0
  5001  01263E                     _ps_math:
  5002                           	callstack 21
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;main.c: 220: void ps_math(double scale, adcc_channel_t chan);main.c: 221: {;main.c: 222
      +                          :  int i, n = 0;
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;incstack = 0
  5009  01263E  0E00               	movlw	0
  5010  012640  6FD2               	movwf	(ps_math@n+1)& (0+255),b
  5011  012642  0E00               	movlw	0
  5012  012644  6FD1               	movwf	ps_math@n& (0+255),b
  5013                           
  5014                           ;main.c: 224:  sum = sumsqr = 0.0;
  5015  012646  0E00               	movlw	0
  5016  012648  0101               	movlb	1	; () banked
  5017  01264A  6F2C               	movwf	_sumsqr& (0+255),b
  5018  01264C  0E00               	movlw	0
  5019  01264E  6F2D               	movwf	(_sumsqr+1)& (0+255),b
  5020  012650  0E00               	movlw	0
  5021  012652  6F2E               	movwf	(_sumsqr+2)& (0+255),b
  5022  012654  0E00               	movlw	0
  5023  012656  6F2F               	movwf	(_sumsqr+3)& (0+255),b
  5024  012658  C12C  F130         	movff	_sumsqr,_sum
  5025  01265C  C12D  F131         	movff	_sumsqr+1,_sum+1
  5026  012660  C12E  F132         	movff	_sumsqr+2,_sum+2
  5027  012664  C12F  F133         	movff	_sumsqr+3,_sum+3
  5028                           
  5029                           ;main.c: 225:  for (i = 0; i < 32; i++) {
  5030  012668  0E00               	movlw	0
  5031  01266A  0100               	movlb	0	; () banked
  5032  01266C  6FD4               	movwf	(ps_math@i+1)& (0+255),b
  5033  01266E  0E00               	movlw	0
  5034  012670  6FD3               	movwf	ps_math@i& (0+255),b
  5035  012672                     l10694:
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;main.c: 226:   sum += ((double) a[i].ana[chan] * scale);
  5039  012672  C130  F08B         	movff	_sum,___fladd@b
  5040  012676  C131  F08C         	movff	_sum+1,___fladd@b+1
  5041  01267A  C132  F08D         	movff	_sum+2,___fladd@b+2
  5042  01267E  C133  F08E         	movff	_sum+3,___fladd@b+3
  5043  012682  C0C8  F076         	movff	ps_math@scale,___flmul@a
  5044  012686  C0C9  F077         	movff	ps_math@scale+1,___flmul@a+1
  5045  01268A  C0CA  F078         	movff	ps_math@scale+2,___flmul@a+2
  5046  01268E  C0CB  F079         	movff	ps_math@scale+3,___flmul@a+3
  5047  012692  C0D3  F060         	movff	ps_math@i,___wmul@multiplier
  5048  012696  C0D4  F061         	movff	ps_math@i+1,___wmul@multiplier+1
  5049  01269A  0E00               	movlw	0
  5050  01269C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5051  01269E  0E7E               	movlw	126
  5052  0126A0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5053  0126A2  ECE4  F0A8         	call	___wmul	;wreg free
  5054  0126A6  51CC               	movf	ps_math@chan& (0+255),w,b
  5055  0126A8  0D02               	mullw	2
  5056  0126AA  0E83               	movlw	low _a
  5057  0126AC  6FCD               	movwf	??_ps_math& (0+255),b
  5058  0126AE  0E05               	movlw	high _a
  5059  0126B0  6FCE               	movwf	(??_ps_math+1)& (0+255),b
  5060  0126B2  50F3               	movf	243,w,c
  5061  0126B4  27CD               	addwf	??_ps_math& (0+255),f,b
  5062  0126B6  50F4               	movf	244,w,c
  5063  0126B8  23CE               	addwfc	(??_ps_math+1)& (0+255),f,b
  5064  0126BA  5160               	movf	?___wmul& (0+255),w,b
  5065  0126BC  25CD               	addwf	??_ps_math& (0+255),w,b
  5066  0126BE  6ED9               	movwf	fsr2l,c
  5067  0126C0  5161               	movf	(?___wmul+1)& (0+255),w,b
  5068  0126C2  21CE               	addwfc	(??_ps_math+1)& (0+255),w,b
  5069  0126C4  6EDA               	movwf	fsr2h,c
  5070  0126C6  006F FF78  F0CF    	movff	postinc2,??_ps_math+2
  5071  0126CC  006F FF74  F0D0    	movff	postdec2,??_ps_math+3
  5072  0126D2  C0CF  F064         	movff	??_ps_math+2,___xxtofl@val
  5073  0126D6  C0D0  F065         	movff	??_ps_math+3,___xxtofl@val+1
  5074  0126DA  6B66               	clrf	(___xxtofl@val+2)& (0+255),b
  5075  0126DC  6B67               	clrf	(___xxtofl@val+3)& (0+255),b
  5076  0126DE  0E00               	movlw	0
  5077  0126E0  EC03  F09B         	call	___xxtofl
  5078  0126E4  C064  F072         	movff	?___xxtofl,___flmul@b
  5079  0126E8  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  5080  0126EC  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  5081  0126F0  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  5082  0126F4  ECF1  F08F         	call	___flmul	;wreg free
  5083  0126F8  C072  F08F         	movff	?___flmul,___fladd@a
  5084  0126FC  C073  F090         	movff	?___flmul+1,___fladd@a+1
  5085  012700  C074  F091         	movff	?___flmul+2,___fladd@a+2
  5086  012704  C075  F092         	movff	?___flmul+3,___fladd@a+3
  5087  012708  EC99  F091         	call	___fladd	;wreg free
  5088  01270C  C08B  F130         	movff	?___fladd,_sum
  5089  012710  C08C  F131         	movff	?___fladd+1,_sum+1
  5090  012714  C08D  F132         	movff	?___fladd+2,_sum+2
  5091  012718  C08E  F133         	movff	?___fladd+3,_sum+3
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;main.c: 227:   n += 1;
  5095  01271C  4BD1               	infsnz	ps_math@n& (0+255),f,b
  5096  01271E  2BD2               	incf	(ps_math@n+1)& (0+255),f,b
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;main.c: 228:  }
  5100  012720  4BD3               	infsnz	ps_math@i& (0+255),f,b
  5101  012722  2BD4               	incf	(ps_math@i+1)& (0+255),f,b
  5102                           
  5103                           ; BSR set to: 0
  5104  012724  BFD4               	btfsc	(ps_math@i+1)& (0+255),7,b
  5105  012726  D7A5               	goto	l10694
  5106  012728  51D4               	movf	(ps_math@i+1)& (0+255),w,b
  5107  01272A  E104               	bnz	u10390
  5108  01272C  0E20               	movlw	32
  5109  01272E  5DD3               	subwf	ps_math@i& (0+255),w,b
  5110  012730  A0D8               	btfss	status,0,c
  5111  012732  D79F               	goto	l10694
  5112  012734                     u10390:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;main.c: 229:  mean = sum / (double) n;
  5116  012734  C130  F072         	movff	_sum,___fldiv@b
  5117  012738  C131  F073         	movff	_sum+1,___fldiv@b+1
  5118  01273C  C132  F074         	movff	_sum+2,___fldiv@b+2
  5119  012740  C133  F075         	movff	_sum+3,___fldiv@b+3
  5120  012744  C0D1  F064         	movff	ps_math@n,___xxtofl@val
  5121  012748  C0D2  F065         	movff	ps_math@n+1,___xxtofl@val+1
  5122  01274C  0E00               	movlw	0
  5123  01274E  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5124  012750  0EFF               	movlw	-1
  5125  012752  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  5126  012754  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  5127  012756  0E01               	movlw	1
  5128  012758  EC03  F09B         	call	___xxtofl
  5129  01275C  C064  F076         	movff	?___xxtofl,___fldiv@a
  5130  012760  C065  F077         	movff	?___xxtofl+1,___fldiv@a+1
  5131  012764  C066  F078         	movff	?___xxtofl+2,___fldiv@a+2
  5132  012768  C067  F079         	movff	?___xxtofl+3,___fldiv@a+3
  5133  01276C  EC8B  F094         	call	___fldiv	;wreg free
  5134  012770  C072  F128         	movff	?___fldiv,_mean
  5135  012774  C073  F129         	movff	?___fldiv+1,_mean+1
  5136  012778  C074  F12A         	movff	?___fldiv+2,_mean+2
  5137  01277C  C075  F12B         	movff	?___fldiv+3,_mean+3
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;main.c: 230:  for (i = 0; i < n; i++) {
  5141  012780  0E00               	movlw	0
  5142  012782  6FD4               	movwf	(ps_math@i+1)& (0+255),b
  5143  012784  0E00               	movlw	0
  5144  012786  6FD3               	movwf	ps_math@i& (0+255),b
  5145  012788  D083               	goto	l10712
  5146  01278A                     l10706:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;main.c: 231:   deviation = ((double) a[i].ana[chan] * scale) - mean;
  5150  01278A  C0C8  F076         	movff	ps_math@scale,___flmul@a
  5151  01278E  C0C9  F077         	movff	ps_math@scale+1,___flmul@a+1
  5152  012792  C0CA  F078         	movff	ps_math@scale+2,___flmul@a+2
  5153  012796  C0CB  F079         	movff	ps_math@scale+3,___flmul@a+3
  5154  01279A  C0D3  F060         	movff	ps_math@i,___wmul@multiplier
  5155  01279E  C0D4  F061         	movff	ps_math@i+1,___wmul@multiplier+1
  5156  0127A2  0E00               	movlw	0
  5157  0127A4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5158  0127A6  0E7E               	movlw	126
  5159  0127A8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5160  0127AA  ECE4  F0A8         	call	___wmul	;wreg free
  5161  0127AE  51CC               	movf	ps_math@chan& (0+255),w,b
  5162  0127B0  0D02               	mullw	2
  5163  0127B2  0E83               	movlw	low _a
  5164  0127B4  6FCD               	movwf	??_ps_math& (0+255),b
  5165  0127B6  0E05               	movlw	high _a
  5166  0127B8  6FCE               	movwf	(??_ps_math+1)& (0+255),b
  5167  0127BA  50F3               	movf	243,w,c
  5168  0127BC  27CD               	addwf	??_ps_math& (0+255),f,b
  5169  0127BE  50F4               	movf	244,w,c
  5170  0127C0  23CE               	addwfc	(??_ps_math+1)& (0+255),f,b
  5171  0127C2  5160               	movf	?___wmul& (0+255),w,b
  5172  0127C4  25CD               	addwf	??_ps_math& (0+255),w,b
  5173  0127C6  6ED9               	movwf	fsr2l,c
  5174  0127C8  5161               	movf	(?___wmul+1)& (0+255),w,b
  5175  0127CA  21CE               	addwfc	(??_ps_math+1)& (0+255),w,b
  5176  0127CC  6EDA               	movwf	fsr2h,c
  5177  0127CE  006F FF78  F0CF    	movff	postinc2,??_ps_math+2
  5178  0127D4  006F FF74  F0D0    	movff	postdec2,??_ps_math+3
  5179  0127DA  C0CF  F064         	movff	??_ps_math+2,___xxtofl@val
  5180  0127DE  C0D0  F065         	movff	??_ps_math+3,___xxtofl@val+1
  5181  0127E2  6B66               	clrf	(___xxtofl@val+2)& (0+255),b
  5182  0127E4  6B67               	clrf	(___xxtofl@val+3)& (0+255),b
  5183  0127E6  0E00               	movlw	0
  5184  0127E8  EC03  F09B         	call	___xxtofl
  5185  0127EC  C064  F072         	movff	?___xxtofl,___flmul@b
  5186  0127F0  C065  F073         	movff	?___xxtofl+1,___flmul@b+1
  5187  0127F4  C066  F074         	movff	?___xxtofl+2,___flmul@b+2
  5188  0127F8  C067  F075         	movff	?___xxtofl+3,___flmul@b+3
  5189  0127FC  ECF1  F08F         	call	___flmul	;wreg free
  5190  012800  C072  F09B         	movff	?___flmul,___flsub@b
  5191  012804  C073  F09C         	movff	?___flmul+1,___flsub@b+1
  5192  012808  C074  F09D         	movff	?___flmul+2,___flsub@b+2
  5193  01280C  C075  F09E         	movff	?___flmul+3,___flsub@b+3
  5194  012810  C128  F09F         	movff	_mean,___flsub@a
  5195  012814  C129  F0A0         	movff	_mean+1,___flsub@a+1
  5196  012818  C12A  F0A1         	movff	_mean+2,___flsub@a+2
  5197  01281C  C12B  F0A2         	movff	_mean+3,___flsub@a+3
  5198  012820  EC08  F0A6         	call	___flsub	;wreg free
  5199  012824  C09B  F134         	movff	?___flsub,_deviation
  5200  012828  C09C  F135         	movff	?___flsub+1,_deviation+1
  5201  01282C  C09D  F136         	movff	?___flsub+2,_deviation+2
  5202  012830  C09E  F137         	movff	?___flsub+3,_deviation+3
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;main.c: 232:   sumsqr += deviation * deviation;
  5206  012834  C12C  F08B         	movff	_sumsqr,___fladd@b
  5207  012838  C12D  F08C         	movff	_sumsqr+1,___fladd@b+1
  5208  01283C  C12E  F08D         	movff	_sumsqr+2,___fladd@b+2
  5209  012840  C12F  F08E         	movff	_sumsqr+3,___fladd@b+3
  5210  012844  C134  F076         	movff	_deviation,___flmul@a
  5211  012848  C135  F077         	movff	_deviation+1,___flmul@a+1
  5212  01284C  C136  F078         	movff	_deviation+2,___flmul@a+2
  5213  012850  C137  F079         	movff	_deviation+3,___flmul@a+3
  5214  012854  C134  F072         	movff	_deviation,___flmul@b
  5215  012858  C135  F073         	movff	_deviation+1,___flmul@b+1
  5216  01285C  C136  F074         	movff	_deviation+2,___flmul@b+2
  5217  012860  C137  F075         	movff	_deviation+3,___flmul@b+3
  5218  012864  ECF1  F08F         	call	___flmul	;wreg free
  5219  012868  C072  F08F         	movff	?___flmul,___fladd@a
  5220  01286C  C073  F090         	movff	?___flmul+1,___fladd@a+1
  5221  012870  C074  F091         	movff	?___flmul+2,___fladd@a+2
  5222  012874  C075  F092         	movff	?___flmul+3,___fladd@a+3
  5223  012878  EC99  F091         	call	___fladd	;wreg free
  5224  01287C  C08B  F12C         	movff	?___fladd,_sumsqr
  5225  012880  C08C  F12D         	movff	?___fladd+1,_sumsqr+1
  5226  012884  C08D  F12E         	movff	?___fladd+2,_sumsqr+2
  5227  012888  C08E  F12F         	movff	?___fladd+3,_sumsqr+3
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;main.c: 233:  }
  5231  01288C  4BD3               	infsnz	ps_math@i& (0+255),f,b
  5232  01288E  2BD4               	incf	(ps_math@i+1)& (0+255),f,b
  5233  012890                     l10712:
  5234                           
  5235                           ; BSR set to: 0
  5236  012890  51D1               	movf	ps_math@n& (0+255),w,b
  5237  012892  5DD3               	subwf	ps_math@i& (0+255),w,b
  5238  012894  51D4               	movf	(ps_math@i+1)& (0+255),w,b
  5239  012896  0A80               	xorlw	128
  5240  012898  6FCD               	movwf	??_ps_math& (0+255),b
  5241  01289A  51D2               	movf	(ps_math@n+1)& (0+255),w,b
  5242  01289C  0A80               	xorlw	128
  5243  01289E  59CD               	subwfb	??_ps_math& (0+255),w,b
  5244  0128A0  A0D8               	btfss	status,0,c
  5245  0128A2  D773               	goto	l10706
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;main.c: 234:  variance = sumsqr / (double) n;
  5249  0128A4  C12C  F072         	movff	_sumsqr,___fldiv@b
  5250  0128A8  C12D  F073         	movff	_sumsqr+1,___fldiv@b+1
  5251  0128AC  C12E  F074         	movff	_sumsqr+2,___fldiv@b+2
  5252  0128B0  C12F  F075         	movff	_sumsqr+3,___fldiv@b+3
  5253  0128B4  C0D1  F064         	movff	ps_math@n,___xxtofl@val
  5254  0128B8  C0D2  F065         	movff	ps_math@n+1,___xxtofl@val+1
  5255  0128BC  0E00               	movlw	0
  5256  0128BE  BF65               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  5257  0128C0  0EFF               	movlw	-1
  5258  0128C2  6F66               	movwf	(___xxtofl@val+2)& (0+255),b
  5259  0128C4  6F67               	movwf	(___xxtofl@val+3)& (0+255),b
  5260  0128C6  0E01               	movlw	1
  5261  0128C8  EC03  F09B         	call	___xxtofl
  5262  0128CC  C064  F076         	movff	?___xxtofl,___fldiv@a
  5263  0128D0  C065  F077         	movff	?___xxtofl+1,___fldiv@a+1
  5264  0128D4  C066  F078         	movff	?___xxtofl+2,___fldiv@a+2
  5265  0128D8  C067  F079         	movff	?___xxtofl+3,___fldiv@a+3
  5266  0128DC  EC8B  F094         	call	___fldiv	;wreg free
  5267  0128E0  C072  F022         	movff	?___fldiv,_variance
  5268  0128E4  C073  F023         	movff	?___fldiv+1,_variance+1
  5269  0128E8  C074  F024         	movff	?___fldiv+2,_variance+2
  5270  0128EC  C075  F025         	movff	?___fldiv+3,_variance+3
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;main.c: 235:  stddeviation = sqrtf(variance);
  5274  0128F0  C022  F09B         	movff	_variance,sqrtf@x
  5275  0128F4  C023  F09C         	movff	_variance+1,sqrtf@x+1
  5276  0128F8  C024  F09D         	movff	_variance+2,sqrtf@x+2
  5277  0128FC  C025  F09E         	movff	_variance+3,sqrtf@x+3
  5278  012900  ECDC  F08B         	call	_sqrtf	;wreg free
  5279  012904  C09B  F124         	movff	?_sqrtf,_stddeviation
  5280  012908  C09C  F125         	movff	?_sqrtf+1,_stddeviation+1
  5281  01290C  C09D  F126         	movff	?_sqrtf+2,_stddeviation+2
  5282  012910  C09E  F127         	movff	?_sqrtf+3,_stddeviation+3
  5283                           
  5284                           ; BSR set to: 0
  5285  012914  0012               	return		;funcret
  5286  012916                     __end_of_ps_math:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function _sqrtf *****************
  5290 ;; Defined at:
  5291 ;;		line 22 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sqrtf.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  x               4   59[BANK0 ] float 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  ix              4  100[BANK0 ] long 
  5296 ;;  r               4   96[BANK0 ] unsigned long 
  5297 ;;  m               4   92[BANK0 ] long 
  5298 ;;  z               4   88[BANK0 ] float 
  5299 ;;  t               4   84[BANK0 ] long 
  5300 ;;  q               4   80[BANK0 ] long 
  5301 ;;  __xc8_float_    4   76[BANK0 ] struct .
  5302 ;;  i               4   72[BANK0 ] long 
  5303 ;;  s               4   68[BANK0 ] long 
  5304 ;;  sign            4    0        long 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  4   59[BANK0 ] float 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 3F/0
  5311 ;;		On exit  : 3F/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5314 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5315 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5316 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5317 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5318 ;;Total ram usage:       45 bytes
  5319 ;; Hardware stack levels used: 1
  5320 ;; Hardware stack levels required when called: 8
  5321 ;; This function calls:
  5322 ;;		___fladd
  5323 ;;		___flge
  5324 ;;		___flmul
  5325 ;;		_nanf
  5326 ;; This function is called by:
  5327 ;;		_ps_math
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           	psect	text5
  5332  0117B8                     __ptext5:
  5333                           	callstack 0
  5334  0117B8                     _sqrtf:
  5335                           	callstack 21
  5336                           
  5337                           ; BSR set to: 0
  5338                           
  5339                           ; BSR set to: 0
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;incstack = 0
  5343  0117B8  C09B  F0AC         	movff	sqrtf@x,sqrtf@__xc8_float_word
  5344  0117BC  C09C  F0AD         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
  5345  0117C0  C09D  F0AE         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
  5346  0117C4  C09E  F0AF         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
  5347                           
  5348                           ; BSR set to: 0
  5349  0117C8  C0AC  F0C4         	movff	sqrtf@__xc8_float_word,sqrtf@ix
  5350  0117CC  C0AD  F0C5         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
  5351  0117D0  C0AE  F0C6         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
  5352  0117D4  C0AF  F0C7         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
  5353                           
  5354                           ; BSR set to: 0
  5355  0117D8  0E00               	movlw	0
  5356  0117DA  15C4               	andwf	sqrtf@ix& (0+255),w,b
  5357  0117DC  6F9F               	movwf	??_sqrtf& (0+255),b
  5358  0117DE  0E00               	movlw	0
  5359  0117E0  15C5               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5360  0117E2  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5361  0117E4  0E80               	movlw	128
  5362  0117E6  15C6               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5363  0117E8  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5364  0117EA  0E7F               	movlw	127
  5365  0117EC  15C7               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5366  0117EE  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5367  0117F0  0E80               	movlw	128
  5368  0117F2  19A1               	xorwf	(??_sqrtf+2)& (0+255),w,b
  5369  0117F4  E133               	bnz	l10424
  5370  0117F6  0E7F               	movlw	127
  5371  0117F8  19A2               	xorwf	(??_sqrtf+3)& (0+255),w,b
  5372  0117FA  119F               	iorwf	??_sqrtf& (0+255),w,b
  5373  0117FC  11A0               	iorwf	(??_sqrtf+1)& (0+255),w,b
  5374  0117FE  A4D8               	btfss	status,2,c
  5375  011800  D02D               	goto	l10424
  5376                           
  5377                           ; BSR set to: 0
  5378  011802  C09B  F076         	movff	sqrtf@x,___flmul@a
  5379  011806  C09C  F077         	movff	sqrtf@x+1,___flmul@a+1
  5380  01180A  C09D  F078         	movff	sqrtf@x+2,___flmul@a+2
  5381  01180E  C09E  F079         	movff	sqrtf@x+3,___flmul@a+3
  5382  011812  C09B  F072         	movff	sqrtf@x,___flmul@b
  5383  011816  C09C  F073         	movff	sqrtf@x+1,___flmul@b+1
  5384  01181A  C09D  F074         	movff	sqrtf@x+2,___flmul@b+2
  5385  01181E  C09E  F075         	movff	sqrtf@x+3,___flmul@b+3
  5386  011822  ECF1  F08F         	call	___flmul	;wreg free
  5387  011826  C072  F08B         	movff	?___flmul,___fladd@b
  5388  01182A  C073  F08C         	movff	?___flmul+1,___fladd@b+1
  5389  01182E  C074  F08D         	movff	?___flmul+2,___fladd@b+2
  5390  011832  C075  F08E         	movff	?___flmul+3,___fladd@b+3
  5391  011836  C09B  F08F         	movff	sqrtf@x,___fladd@a
  5392  01183A  C09C  F090         	movff	sqrtf@x+1,___fladd@a+1
  5393  01183E  C09D  F091         	movff	sqrtf@x+2,___fladd@a+2
  5394  011842  C09E  F092         	movff	sqrtf@x+3,___fladd@a+3
  5395  011846  EC99  F091         	call	___fladd	;wreg free
  5396  01184A  C08B  F09B         	movff	?___fladd,?_sqrtf
  5397  01184E  C08C  F09C         	movff	?___fladd+1,?_sqrtf+1
  5398  011852  C08D  F09D         	movff	?___fladd+2,?_sqrtf+2
  5399  011856  C08E  F09E         	movff	?___fladd+3,?_sqrtf+3
  5400  01185A  0012               	return	
  5401  01185C                     l10424:
  5402                           
  5403                           ; BSR set to: 0
  5404  01185C  BFC7               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  5405  01185E  D007               	goto	u10020
  5406  011860  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5407  011862  11C6               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  5408  011864  11C5               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  5409  011866  E135               	bnz	l10438
  5410  011868  05C4               	decf	sqrtf@ix& (0+255),w,b
  5411  01186A  B0D8               	btfsc	status,0,c
  5412  01186C  D032               	goto	l10438
  5413  01186E                     u10020:
  5414                           
  5415                           ; BSR set to: 0
  5416  01186E  0EFF               	movlw	255
  5417  011870  15C4               	andwf	sqrtf@ix& (0+255),w,b
  5418  011872  6F9F               	movwf	??_sqrtf& (0+255),b
  5419  011874  0EFF               	movlw	255
  5420  011876  15C5               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5421  011878  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5422  01187A  0EFF               	movlw	255
  5423  01187C  15C6               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5424  01187E  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5425  011880  0E7F               	movlw	127
  5426  011882  15C7               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5427  011884  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5428  011886  519F               	movf	??_sqrtf& (0+255),w,b
  5429  011888  11A0               	iorwf	(??_sqrtf+1)& (0+255),w,b
  5430  01188A  11A1               	iorwf	(??_sqrtf+2)& (0+255),w,b
  5431  01188C  11A2               	iorwf	(??_sqrtf+3)& (0+255),w,b
  5432  01188E  A4D8               	btfss	status,2,c
  5433  011890  D009               	goto	l10430
  5434                           
  5435                           ; BSR set to: 0
  5436  011892  C09B  F09B         	movff	sqrtf@x,?_sqrtf
  5437  011896  C09C  F09C         	movff	sqrtf@x+1,?_sqrtf+1
  5438  01189A  C09D  F09D         	movff	sqrtf@x+2,?_sqrtf+2
  5439  01189E  C09E  F09E         	movff	sqrtf@x+3,?_sqrtf+3
  5440  0118A2  0012               	return	
  5441  0118A4                     l10430:
  5442                           
  5443                           ; BSR set to: 0
  5444  0118A4  AFC7               	btfss	(sqrtf@ix+3)& (0+255),7,b
  5445  0118A6  D015               	goto	l10438
  5446                           
  5447                           ; BSR set to: 0
  5448  0118A8  0E00               	movlw	0
  5449  0118AA  0101               	movlb	1	; () banked
  5450  0118AC  6F5C               	movwf	(_errno+1)& (0+255),b
  5451  0118AE  0E21               	movlw	33
  5452  0118B0  6F5B               	movwf	_errno& (0+255),b
  5453                           
  5454                           ; BSR set to: 1
  5455  0118B2  0E6A               	movlw	low (STR_5+17)
  5456  0118B4  0100               	movlb	0	; () banked
  5457  0118B6  6F60               	movwf	nanf@s& (0+255),b
  5458  0118B8  0EFF               	movlw	high (STR_5+17)
  5459  0118BA  6F61               	movwf	(nanf@s+1)& (0+255),b
  5460  0118BC  EC6B  F0A9         	call	_nanf	;wreg free
  5461  0118C0  C060  F09B         	movff	?_nanf,?_sqrtf
  5462  0118C4  C061  F09C         	movff	?_nanf+1,?_sqrtf+1
  5463  0118C8  C062  F09D         	movff	?_nanf+2,?_sqrtf+2
  5464  0118CC  C063  F09E         	movff	?_nanf+3,?_sqrtf+3
  5465  0118D0  0012               	return	
  5466  0118D2                     l10438:
  5467                           
  5468                           ; BSR set to: 0
  5469  0118D2  0E17               	movlw	23
  5470  0118D4  6F9F               	movwf	??_sqrtf& (0+255),b
  5471  0118D6  C0C4  F0A0         	movff	sqrtf@ix,??_sqrtf+1
  5472  0118DA  C0C5  F0A1         	movff	sqrtf@ix+1,??_sqrtf+2
  5473  0118DE  C0C6  F0A2         	movff	sqrtf@ix+2,??_sqrtf+3
  5474  0118E2  C0C7  F0A3         	movff	sqrtf@ix+3,??_sqrtf+4
  5475  0118E6                     u10055:
  5476  0118E6  679F               	tstfsz	??_sqrtf& (0+255),b
  5477  0118E8  D001               	goto	u10056
  5478  0118EA  D007               	goto	u10057
  5479  0118EC                     u10056:
  5480  0118EC  35A3               	rlcf	(??_sqrtf+4)& (0+255),w,b
  5481  0118EE  33A3               	rrcf	(??_sqrtf+4)& (0+255),f,b
  5482  0118F0  33A2               	rrcf	(??_sqrtf+3)& (0+255),f,b
  5483  0118F2  33A1               	rrcf	(??_sqrtf+2)& (0+255),f,b
  5484  0118F4  33A0               	rrcf	(??_sqrtf+1)& (0+255),f,b
  5485  0118F6  2F9F               	decfsz	??_sqrtf& (0+255),f,b
  5486  0118F8  D7F6               	goto	u10055
  5487  0118FA                     u10057:
  5488  0118FA  C0A0  F0BC         	movff	??_sqrtf+1,sqrtf@m
  5489  0118FE  C0A1  F0BD         	movff	??_sqrtf+2,sqrtf@m+1
  5490  011902  C0A2  F0BE         	movff	??_sqrtf+3,sqrtf@m+2
  5491  011906  C0A3  F0BF         	movff	??_sqrtf+4,sqrtf@m+3
  5492  01190A  0100               	movlb	0	; () banked
  5493  01190C  51BC               	movf	sqrtf@m& (0+255),w,b
  5494  01190E  11BD               	iorwf	(sqrtf@m+1)& (0+255),w,b
  5495  011910  11BE               	iorwf	(sqrtf@m+2)& (0+255),w,b
  5496  011912  11BF               	iorwf	(sqrtf@m+3)& (0+255),w,b
  5497  011914  A4D8               	btfss	status,2,c
  5498  011916  D02A               	goto	l2865
  5499                           
  5500                           ; BSR set to: 0
  5501  011918  0E00               	movlw	0
  5502  01191A  6FA8               	movwf	sqrtf@i& (0+255),b
  5503  01191C  0E00               	movlw	0
  5504  01191E  6FA9               	movwf	(sqrtf@i+1)& (0+255),b
  5505  011920  0E00               	movlw	0
  5506  011922  6FAA               	movwf	(sqrtf@i+2)& (0+255),b
  5507  011924  0E00               	movlw	0
  5508  011926  6FAB               	movwf	(sqrtf@i+3)& (0+255),b
  5509  011928  D00B               	goto	l10446
  5510  01192A                     l10442:
  5511                           
  5512                           ; BSR set to: 0
  5513  01192A  90D8               	bcf	status,0,c
  5514  01192C  37C4               	rlcf	sqrtf@ix& (0+255),f,b
  5515  01192E  37C5               	rlcf	(sqrtf@ix+1)& (0+255),f,b
  5516  011930  37C6               	rlcf	(sqrtf@ix+2)& (0+255),f,b
  5517  011932  37C7               	rlcf	(sqrtf@ix+3)& (0+255),f,b
  5518                           
  5519                           ; BSR set to: 0
  5520  011934  0E01               	movlw	1
  5521  011936  27A8               	addwf	sqrtf@i& (0+255),f,b
  5522  011938  0E00               	movlw	0
  5523  01193A  23A9               	addwfc	(sqrtf@i+1)& (0+255),f,b
  5524  01193C  23AA               	addwfc	(sqrtf@i+2)& (0+255),f,b
  5525  01193E  23AB               	addwfc	(sqrtf@i+3)& (0+255),f,b
  5526  011940                     l10446:
  5527                           
  5528                           ; BSR set to: 0
  5529  011940  AFC6               	btfss	(sqrtf@ix+2)& (0+255),7,b
  5530  011942  D7F3               	goto	l10442
  5531                           
  5532                           ; BSR set to: 0
  5533  011944  0EFF               	movlw	255
  5534  011946  25A8               	addwf	sqrtf@i& (0+255),w,b
  5535  011948  6F9F               	movwf	??_sqrtf& (0+255),b
  5536  01194A  0EFF               	movlw	255
  5537  01194C  21A9               	addwfc	(sqrtf@i+1)& (0+255),w,b
  5538  01194E  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5539  011950  0EFF               	movlw	255
  5540  011952  21AA               	addwfc	(sqrtf@i+2)& (0+255),w,b
  5541  011954  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5542  011956  0EFF               	movlw	255
  5543  011958  21AB               	addwfc	(sqrtf@i+3)& (0+255),w,b
  5544  01195A  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5545  01195C  519F               	movf	??_sqrtf& (0+255),w,b
  5546  01195E  5FBC               	subwf	sqrtf@m& (0+255),f,b
  5547  011960  51A0               	movf	(??_sqrtf+1)& (0+255),w,b
  5548  011962  5BBD               	subwfb	(sqrtf@m+1)& (0+255),f,b
  5549  011964  51A1               	movf	(??_sqrtf+2)& (0+255),w,b
  5550  011966  5BBE               	subwfb	(sqrtf@m+2)& (0+255),f,b
  5551  011968  51A2               	movf	(??_sqrtf+3)& (0+255),w,b
  5552  01196A  5BBF               	subwfb	(sqrtf@m+3)& (0+255),f,b
  5553  01196C                     l2865:
  5554                           
  5555                           ; BSR set to: 0
  5556  01196C  0E81               	movlw	129
  5557  01196E  27BC               	addwf	sqrtf@m& (0+255),f,b
  5558  011970  0EFF               	movlw	255
  5559  011972  23BD               	addwfc	(sqrtf@m+1)& (0+255),f,b
  5560  011974  0EFF               	movlw	255
  5561  011976  23BE               	addwfc	(sqrtf@m+2)& (0+255),f,b
  5562  011978  0EFF               	movlw	255
  5563  01197A  23BF               	addwfc	(sqrtf@m+3)& (0+255),f,b
  5564  01197C  0EFF               	movlw	255
  5565  01197E  15C4               	andwf	sqrtf@ix& (0+255),w,b
  5566  011980  6F9F               	movwf	??_sqrtf& (0+255),b
  5567  011982  0EFF               	movlw	255
  5568  011984  15C5               	andwf	(sqrtf@ix+1)& (0+255),w,b
  5569  011986  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5570  011988  0E7F               	movlw	127
  5571  01198A  15C6               	andwf	(sqrtf@ix+2)& (0+255),w,b
  5572  01198C  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5573  01198E  0E00               	movlw	0
  5574  011990  15C7               	andwf	(sqrtf@ix+3)& (0+255),w,b
  5575  011992  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5576  011994  0E00               	movlw	0
  5577  011996  119F               	iorwf	??_sqrtf& (0+255),w,b
  5578  011998  6FC4               	movwf	sqrtf@ix& (0+255),b
  5579  01199A  0E00               	movlw	0
  5580  01199C  11A0               	iorwf	(??_sqrtf+1)& (0+255),w,b
  5581  01199E  6FC5               	movwf	(sqrtf@ix+1)& (0+255),b
  5582  0119A0  0E80               	movlw	128
  5583  0119A2  11A1               	iorwf	(??_sqrtf+2)& (0+255),w,b
  5584  0119A4  6FC6               	movwf	(sqrtf@ix+2)& (0+255),b
  5585  0119A6  0E00               	movlw	0
  5586  0119A8  11A2               	iorwf	(??_sqrtf+3)& (0+255),w,b
  5587  0119AA  6FC7               	movwf	(sqrtf@ix+3)& (0+255),b
  5588                           
  5589                           ; BSR set to: 0
  5590  0119AC  A1BC               	btfss	sqrtf@m& (0+255),0,b
  5591  0119AE  D008               	goto	l2869
  5592                           
  5593                           ; BSR set to: 0
  5594  0119B0  51C4               	movf	sqrtf@ix& (0+255),w,b
  5595  0119B2  27C4               	addwf	sqrtf@ix& (0+255),f,b
  5596  0119B4  51C5               	movf	(sqrtf@ix+1)& (0+255),w,b
  5597  0119B6  23C5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5598  0119B8  51C6               	movf	(sqrtf@ix+2)& (0+255),w,b
  5599  0119BA  23C6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5600  0119BC  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5601  0119BE  23C7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5602  0119C0                     l2869:
  5603                           
  5604                           ; BSR set to: 0
  5605  0119C0  35BF               	rlcf	(sqrtf@m+3)& (0+255),w,b
  5606  0119C2  33BF               	rrcf	(sqrtf@m+3)& (0+255),f,b
  5607  0119C4  33BE               	rrcf	(sqrtf@m+2)& (0+255),f,b
  5608  0119C6  33BD               	rrcf	(sqrtf@m+1)& (0+255),f,b
  5609  0119C8  33BC               	rrcf	sqrtf@m& (0+255),f,b
  5610  0119CA  51C4               	movf	sqrtf@ix& (0+255),w,b
  5611  0119CC  27C4               	addwf	sqrtf@ix& (0+255),f,b
  5612  0119CE  51C5               	movf	(sqrtf@ix+1)& (0+255),w,b
  5613  0119D0  23C5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5614  0119D2  51C6               	movf	(sqrtf@ix+2)& (0+255),w,b
  5615  0119D4  23C6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5616  0119D6  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5617  0119D8  23C7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5618                           
  5619                           ; BSR set to: 0
  5620  0119DA  0E00               	movlw	0
  5621  0119DC  6FA4               	movwf	sqrtf@s& (0+255),b
  5622  0119DE  0E00               	movlw	0
  5623  0119E0  6FA5               	movwf	(sqrtf@s+1)& (0+255),b
  5624  0119E2  0E00               	movlw	0
  5625  0119E4  6FA6               	movwf	(sqrtf@s+2)& (0+255),b
  5626  0119E6  0E00               	movlw	0
  5627  0119E8  6FA7               	movwf	(sqrtf@s+3)& (0+255),b
  5628  0119EA  C0A4  F0B0         	movff	sqrtf@s,sqrtf@q
  5629  0119EE  C0A5  F0B1         	movff	sqrtf@s+1,sqrtf@q+1
  5630  0119F2  C0A6  F0B2         	movff	sqrtf@s+2,sqrtf@q+2
  5631  0119F6  C0A7  F0B3         	movff	sqrtf@s+3,sqrtf@q+3
  5632                           
  5633                           ; BSR set to: 0
  5634  0119FA  0E00               	movlw	0
  5635  0119FC  6FC0               	movwf	sqrtf@r& (0+255),b
  5636  0119FE  0E00               	movlw	0
  5637  011A00  6FC1               	movwf	(sqrtf@r+1)& (0+255),b
  5638  011A02  0E00               	movlw	0
  5639  011A04  6FC2               	movwf	(sqrtf@r+2)& (0+255),b
  5640  011A06  0E01               	movlw	1
  5641  011A08  6FC3               	movwf	(sqrtf@r+3)& (0+255),b
  5642  011A0A  D043               	goto	l10464
  5643  011A0C                     l10458:
  5644                           
  5645                           ; BSR set to: 0
  5646  011A0C  51A4               	movf	sqrtf@s& (0+255),w,b
  5647  011A0E  25C0               	addwf	sqrtf@r& (0+255),w,b
  5648  011A10  6FB4               	movwf	sqrtf@t& (0+255),b
  5649  011A12  51A5               	movf	(sqrtf@s+1)& (0+255),w,b
  5650  011A14  21C1               	addwfc	(sqrtf@r+1)& (0+255),w,b
  5651  011A16  6FB5               	movwf	(sqrtf@t+1)& (0+255),b
  5652  011A18  51A6               	movf	(sqrtf@s+2)& (0+255),w,b
  5653  011A1A  21C2               	addwfc	(sqrtf@r+2)& (0+255),w,b
  5654  011A1C  6FB6               	movwf	(sqrtf@t+2)& (0+255),b
  5655  011A1E  51A7               	movf	(sqrtf@s+3)& (0+255),w,b
  5656  011A20  21C3               	addwfc	(sqrtf@r+3)& (0+255),w,b
  5657  011A22  6FB7               	movwf	(sqrtf@t+3)& (0+255),b
  5658  011A24  51B4               	movf	sqrtf@t& (0+255),w,b
  5659  011A26  5DC4               	subwf	sqrtf@ix& (0+255),w,b
  5660  011A28  51B5               	movf	(sqrtf@t+1)& (0+255),w,b
  5661  011A2A  59C5               	subwfb	(sqrtf@ix+1)& (0+255),w,b
  5662  011A2C  51B6               	movf	(sqrtf@t+2)& (0+255),w,b
  5663  011A2E  59C6               	subwfb	(sqrtf@ix+2)& (0+255),w,b
  5664  011A30  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5665  011A32  0A80               	xorlw	128
  5666  011A34  6F9F               	movwf	??_sqrtf& (0+255),b
  5667  011A36  51B7               	movf	(sqrtf@t+3)& (0+255),w,b
  5668  011A38  0A80               	xorlw	128
  5669  011A3A  599F               	subwfb	??_sqrtf& (0+255),w,b
  5670  011A3C  A0D8               	btfss	status,0,c
  5671  011A3E  D01C               	goto	l2872
  5672                           
  5673                           ; BSR set to: 0
  5674  011A40  51B4               	movf	sqrtf@t& (0+255),w,b
  5675  011A42  25C0               	addwf	sqrtf@r& (0+255),w,b
  5676  011A44  6FA4               	movwf	sqrtf@s& (0+255),b
  5677  011A46  51B5               	movf	(sqrtf@t+1)& (0+255),w,b
  5678  011A48  21C1               	addwfc	(sqrtf@r+1)& (0+255),w,b
  5679  011A4A  6FA5               	movwf	(sqrtf@s+1)& (0+255),b
  5680  011A4C  51B6               	movf	(sqrtf@t+2)& (0+255),w,b
  5681  011A4E  21C2               	addwfc	(sqrtf@r+2)& (0+255),w,b
  5682  011A50  6FA6               	movwf	(sqrtf@s+2)& (0+255),b
  5683  011A52  51B7               	movf	(sqrtf@t+3)& (0+255),w,b
  5684  011A54  21C3               	addwfc	(sqrtf@r+3)& (0+255),w,b
  5685  011A56  6FA7               	movwf	(sqrtf@s+3)& (0+255),b
  5686  011A58  51B4               	movf	sqrtf@t& (0+255),w,b
  5687  011A5A  5FC4               	subwf	sqrtf@ix& (0+255),f,b
  5688  011A5C  51B5               	movf	(sqrtf@t+1)& (0+255),w,b
  5689  011A5E  5BC5               	subwfb	(sqrtf@ix+1)& (0+255),f,b
  5690  011A60  51B6               	movf	(sqrtf@t+2)& (0+255),w,b
  5691  011A62  5BC6               	subwfb	(sqrtf@ix+2)& (0+255),f,b
  5692  011A64  51B7               	movf	(sqrtf@t+3)& (0+255),w,b
  5693  011A66  5BC7               	subwfb	(sqrtf@ix+3)& (0+255),f,b
  5694  011A68  51C0               	movf	sqrtf@r& (0+255),w,b
  5695  011A6A  27B0               	addwf	sqrtf@q& (0+255),f,b
  5696  011A6C  51C1               	movf	(sqrtf@r+1)& (0+255),w,b
  5697  011A6E  23B1               	addwfc	(sqrtf@q+1)& (0+255),f,b
  5698  011A70  51C2               	movf	(sqrtf@r+2)& (0+255),w,b
  5699  011A72  23B2               	addwfc	(sqrtf@q+2)& (0+255),f,b
  5700  011A74  51C3               	movf	(sqrtf@r+3)& (0+255),w,b
  5701  011A76  23B3               	addwfc	(sqrtf@q+3)& (0+255),f,b
  5702  011A78                     l2872:
  5703                           
  5704                           ; BSR set to: 0
  5705  011A78  51C4               	movf	sqrtf@ix& (0+255),w,b
  5706  011A7A  27C4               	addwf	sqrtf@ix& (0+255),f,b
  5707  011A7C  51C5               	movf	(sqrtf@ix+1)& (0+255),w,b
  5708  011A7E  23C5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5709  011A80  51C6               	movf	(sqrtf@ix+2)& (0+255),w,b
  5710  011A82  23C6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5711  011A84  51C7               	movf	(sqrtf@ix+3)& (0+255),w,b
  5712  011A86  23C7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5713                           
  5714                           ; BSR set to: 0
  5715  011A88  90D8               	bcf	status,0,c
  5716  011A8A  33C3               	rrcf	(sqrtf@r+3)& (0+255),f,b
  5717  011A8C  33C2               	rrcf	(sqrtf@r+2)& (0+255),f,b
  5718  011A8E  33C1               	rrcf	(sqrtf@r+1)& (0+255),f,b
  5719  011A90  33C0               	rrcf	sqrtf@r& (0+255),f,b
  5720  011A92                     l10464:
  5721                           
  5722                           ; BSR set to: 0
  5723  011A92  51C0               	movf	sqrtf@r& (0+255),w,b
  5724  011A94  11C1               	iorwf	(sqrtf@r+1)& (0+255),w,b
  5725  011A96  11C2               	iorwf	(sqrtf@r+2)& (0+255),w,b
  5726  011A98  11C3               	iorwf	(sqrtf@r+3)& (0+255),w,b
  5727  011A9A  A4D8               	btfss	status,2,c
  5728  011A9C  D7B7               	goto	l10458
  5729                           
  5730                           ; BSR set to: 0
  5731  011A9E  51C4               	movf	sqrtf@ix& (0+255),w,b
  5732  011AA0  11C5               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  5733  011AA2  11C6               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  5734  011AA4  11C7               	iorwf	(sqrtf@ix+3)& (0+255),w,b
  5735  011AA6  B4D8               	btfsc	status,2,c
  5736  011AA8  D052               	goto	l2874
  5737                           
  5738                           ; BSR set to: 0
  5739  011AAA  0E00               	movlw	0
  5740  011AAC  6FB8               	movwf	sqrtf@z& (0+255),b
  5741  011AAE  0E00               	movlw	0
  5742  011AB0  6FB9               	movwf	(sqrtf@z+1)& (0+255),b
  5743  011AB2  0E80               	movlw	128
  5744  011AB4  6FBA               	movwf	(sqrtf@z+2)& (0+255),b
  5745  011AB6  0E3F               	movlw	63
  5746  011AB8  6FBB               	movwf	(sqrtf@z+3)& (0+255),b
  5747                           
  5748                           ; BSR set to: 0
  5749  011ABA  C0B8  F08B         	movff	sqrtf@z,___flge@ff1
  5750  011ABE  C0B9  F08C         	movff	sqrtf@z+1,___flge@ff1+1
  5751  011AC2  C0BA  F08D         	movff	sqrtf@z+2,___flge@ff1+2
  5752  011AC6  C0BB  F08E         	movff	sqrtf@z+3,___flge@ff1+3
  5753  011ACA  0E00               	movlw	0
  5754  011ACC  6F8F               	movwf	___flge@ff2& (0+255),b
  5755  011ACE  0E00               	movlw	0
  5756  011AD0  6F90               	movwf	(___flge@ff2+1)& (0+255),b
  5757  011AD2  0E80               	movlw	128
  5758  011AD4  6F91               	movwf	(___flge@ff2+2)& (0+255),b
  5759  011AD6  0E3F               	movlw	63
  5760  011AD8  6F92               	movwf	(___flge@ff2+3)& (0+255),b
  5761  011ADA  ECB1  F09D         	call	___flge	;wreg free
  5762  011ADE  A0D8               	btfss	status,0,c
  5763  011AE0  D036               	goto	l2874
  5764                           
  5765                           ; BSR set to: 0
  5766  011AE2  0E00               	movlw	0
  5767  011AE4  6FB8               	movwf	sqrtf@z& (0+255),b
  5768  011AE6  0E00               	movlw	0
  5769  011AE8  6FB9               	movwf	(sqrtf@z+1)& (0+255),b
  5770  011AEA  0E80               	movlw	128
  5771  011AEC  6FBA               	movwf	(sqrtf@z+2)& (0+255),b
  5772  011AEE  0E3F               	movlw	63
  5773  011AF0  6FBB               	movwf	(sqrtf@z+3)& (0+255),b
  5774                           
  5775                           ; BSR set to: 0
  5776  011AF2  0E00               	movlw	0
  5777  011AF4  6F8B               	movwf	___flge@ff1& (0+255),b
  5778  011AF6  0E00               	movlw	0
  5779  011AF8  6F8C               	movwf	(___flge@ff1+1)& (0+255),b
  5780  011AFA  0E80               	movlw	128
  5781  011AFC  6F8D               	movwf	(___flge@ff1+2)& (0+255),b
  5782  011AFE  0E3F               	movlw	63
  5783  011B00  6F8E               	movwf	(___flge@ff1+3)& (0+255),b
  5784  011B02  C0B8  F08F         	movff	sqrtf@z,___flge@ff2
  5785  011B06  C0B9  F090         	movff	sqrtf@z+1,___flge@ff2+1
  5786  011B0A  C0BA  F091         	movff	sqrtf@z+2,___flge@ff2+2
  5787  011B0E  C0BB  F092         	movff	sqrtf@z+3,___flge@ff2+3
  5788  011B12  ECB1  F09D         	call	___flge	;wreg free
  5789  011B16  B0D8               	btfsc	status,0,c
  5790  011B18  D006               	goto	l10478
  5791                           
  5792                           ; BSR set to: 0
  5793  011B1A  0E02               	movlw	2
  5794  011B1C  27B0               	addwf	sqrtf@q& (0+255),f,b
  5795  011B1E  0E00               	movlw	0
  5796  011B20  23B1               	addwfc	(sqrtf@q+1)& (0+255),f,b
  5797  011B22  23B2               	addwfc	(sqrtf@q+2)& (0+255),f,b
  5798  011B24  D013               	goto	L1
  5799  011B26                     l10478:
  5800                           
  5801                           ; BSR set to: 0
  5802  011B26  0E01               	movlw	1
  5803  011B28  15B0               	andwf	sqrtf@q& (0+255),w,b
  5804  011B2A  6F9F               	movwf	??_sqrtf& (0+255),b
  5805  011B2C  0E00               	movlw	0
  5806  011B2E  15B1               	andwf	(sqrtf@q+1)& (0+255),w,b
  5807  011B30  6FA0               	movwf	(??_sqrtf+1)& (0+255),b
  5808  011B32  0E00               	movlw	0
  5809  011B34  15B2               	andwf	(sqrtf@q+2)& (0+255),w,b
  5810  011B36  6FA1               	movwf	(??_sqrtf+2)& (0+255),b
  5811  011B38  0E00               	movlw	0
  5812  011B3A  15B3               	andwf	(sqrtf@q+3)& (0+255),w,b
  5813  011B3C  6FA2               	movwf	(??_sqrtf+3)& (0+255),b
  5814  011B3E  519F               	movf	??_sqrtf& (0+255),w,b
  5815  011B40  27B0               	addwf	sqrtf@q& (0+255),f,b
  5816  011B42  51A0               	movf	(??_sqrtf+1)& (0+255),w,b
  5817  011B44  23B1               	addwfc	(sqrtf@q+1)& (0+255),f,b
  5818  011B46  51A1               	movf	(??_sqrtf+2)& (0+255),w,b
  5819  011B48  23B2               	addwfc	(sqrtf@q+2)& (0+255),f,b
  5820  011B4A  51A2               	movf	(??_sqrtf+3)& (0+255),w,b
  5821  011B4C                     L1:
  5822  011B4C  23B3               	addwfc	(sqrtf@q+3)& (0+255),f,b
  5823  011B4E                     l2874:
  5824                           
  5825                           ; BSR set to: 0
  5826  011B4E  C0B0  F09F         	movff	sqrtf@q,??_sqrtf
  5827  011B52  C0B1  F0A0         	movff	sqrtf@q+1,??_sqrtf+1
  5828  011B56  C0B2  F0A1         	movff	sqrtf@q+2,??_sqrtf+2
  5829  011B5A  C0B3  F0A2         	movff	sqrtf@q+3,??_sqrtf+3
  5830  011B5E  35A2               	rlcf	(??_sqrtf+3)& (0+255),w,b
  5831  011B60  33A2               	rrcf	(??_sqrtf+3)& (0+255),f,b
  5832  011B62  33A1               	rrcf	(??_sqrtf+2)& (0+255),f,b
  5833  011B64  33A0               	rrcf	(??_sqrtf+1)& (0+255),f,b
  5834  011B66  339F               	rrcf	??_sqrtf& (0+255),f,b
  5835  011B68  0E00               	movlw	0
  5836  011B6A  259F               	addwf	??_sqrtf& (0+255),w,b
  5837  011B6C  6FC4               	movwf	sqrtf@ix& (0+255),b
  5838  011B6E  0E00               	movlw	0
  5839  011B70  21A0               	addwfc	(??_sqrtf+1)& (0+255),w,b
  5840  011B72  6FC5               	movwf	(sqrtf@ix+1)& (0+255),b
  5841  011B74  0E00               	movlw	0
  5842  011B76  21A1               	addwfc	(??_sqrtf+2)& (0+255),w,b
  5843  011B78  6FC6               	movwf	(sqrtf@ix+2)& (0+255),b
  5844  011B7A  0E3F               	movlw	63
  5845  011B7C  21A2               	addwfc	(??_sqrtf+3)& (0+255),w,b
  5846  011B7E  6FC7               	movwf	(sqrtf@ix+3)& (0+255),b
  5847  011B80  C0BC  F09F         	movff	sqrtf@m,??_sqrtf
  5848  011B84  C0BD  F0A0         	movff	sqrtf@m+1,??_sqrtf+1
  5849  011B88  C0BE  F0A1         	movff	sqrtf@m+2,??_sqrtf+2
  5850  011B8C  C0BF  F0A2         	movff	sqrtf@m+3,??_sqrtf+3
  5851  011B90  0E17               	movlw	23
  5852  011B92                     u10145:
  5853  011B92  90D8               	bcf	status,0,c
  5854  011B94  379F               	rlcf	??_sqrtf& (0+255),f,b
  5855  011B96  37A0               	rlcf	(??_sqrtf+1)& (0+255),f,b
  5856  011B98  37A1               	rlcf	(??_sqrtf+2)& (0+255),f,b
  5857  011B9A  37A2               	rlcf	(??_sqrtf+3)& (0+255),f,b
  5858  011B9C  2EE8               	decfsz	wreg,f,c
  5859  011B9E  D7F9               	goto	u10145
  5860  011BA0  519F               	movf	??_sqrtf& (0+255),w,b
  5861  011BA2  27C4               	addwf	sqrtf@ix& (0+255),f,b
  5862  011BA4  51A0               	movf	(??_sqrtf+1)& (0+255),w,b
  5863  011BA6  23C5               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  5864  011BA8  51A1               	movf	(??_sqrtf+2)& (0+255),w,b
  5865  011BAA  23C6               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  5866  011BAC  51A2               	movf	(??_sqrtf+3)& (0+255),w,b
  5867  011BAE  23C7               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  5868                           
  5869                           ; BSR set to: 0
  5870  011BB0  C0C4  F0AC         	movff	sqrtf@ix,sqrtf@__xc8_float_word
  5871  011BB4  C0C5  F0AD         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
  5872  011BB8  C0C6  F0AE         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
  5873  011BBC  C0C7  F0AF         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
  5874                           
  5875                           ; BSR set to: 0
  5876  011BC0  C0AC  F0B8         	movff	sqrtf@__xc8_float_word,sqrtf@z
  5877  011BC4  C0AD  F0B9         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
  5878  011BC8  C0AE  F0BA         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
  5879  011BCC  C0AF  F0BB         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
  5880                           
  5881                           ; BSR set to: 0
  5882  011BD0  C0B8  F09B         	movff	sqrtf@z,?_sqrtf
  5883  011BD4  C0B9  F09C         	movff	sqrtf@z+1,?_sqrtf+1
  5884  011BD8  C0BA  F09D         	movff	sqrtf@z+2,?_sqrtf+2
  5885  011BDC  C0BB  F09E         	movff	sqrtf@z+3,?_sqrtf+3
  5886                           
  5887                           ; BSR set to: 0
  5888  011BE0  0012               	return		;funcret
  5889  011BE2                     __end_of_sqrtf:
  5890                           	callstack 0
  5891                           
  5892 ;; *************** function _nanf *****************
  5893 ;; Defined at:
  5894 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nanf.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5897 ;;		 -> STR_48(1), 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  u               4    4[BANK0 ] struct .
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  4    0[BANK0 ] float 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2
  5904 ;; Tracked objects:
  5905 ;;		On entry : 3F/0
  5906 ;;		On exit  : 3F/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5909 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5910 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5912 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5913 ;;Total ram usage:        8 bytes
  5914 ;; Hardware stack levels used: 1
  5915 ;; Hardware stack levels required when called: 7
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_sqrtf
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text6
  5924  0152D6                     __ptext6:
  5925                           	callstack 0
  5926  0152D6                     _nanf:
  5927                           	callstack 21
  5928                           
  5929                           ; BSR set to: 0
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;incstack = 0
  5933  0152D6  0EFF               	movlw	255
  5934  0152D8  6F64               	movwf	nanf@u& (0+255),b
  5935  0152DA  0EFF               	movlw	255
  5936  0152DC  6F65               	movwf	(nanf@u+1)& (0+255),b
  5937  0152DE  0EFF               	movlw	255
  5938  0152E0  6F66               	movwf	(nanf@u+2)& (0+255),b
  5939  0152E2  0E7F               	movlw	127
  5940  0152E4  6F67               	movwf	(nanf@u+3)& (0+255),b
  5941                           
  5942                           ; BSR set to: 0
  5943  0152E6  C064  F060         	movff	nanf@u,?_nanf
  5944  0152EA  C065  F061         	movff	nanf@u+1,?_nanf+1
  5945  0152EE  C066  F062         	movff	nanf@u+2,?_nanf+2
  5946  0152F2  C067  F063         	movff	nanf@u+3,?_nanf+3
  5947                           
  5948                           ; BSR set to: 0
  5949  0152F6  0012               	return		;funcret
  5950  0152F8                     __end_of_nanf:
  5951                           	callstack 0
  5952                           
  5953 ;; *************** function ___xxtofl *****************
  5954 ;; Defined at:
  5955 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  sign            1    wreg     unsigned char 
  5958 ;;  val             4    4[BANK0 ] long 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  sign            1   12[BANK0 ] unsigned char 
  5961 ;;  arg             4   14[BANK0 ] unsigned long 
  5962 ;;  exp             1   13[BANK0 ] unsigned char 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  4    4[BANK0 ] unsigned char 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0
  5967 ;; Tracked objects:
  5968 ;;		On entry : 3F/0
  5969 ;;		On exit  : 3F/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5973 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5974 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5975 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5976 ;;Total ram usage:       14 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; Hardware stack levels required when called: 7
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		_ps_math
  5983 ;;		_main
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           	psect	text7
  5988  013606                     __ptext7:
  5989                           	callstack 0
  5990  013606                     ___xxtofl:
  5991                           	callstack 22
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;incstack = 0
  5995                           ;___xxtofl@sign stored from wreg
  5996  013606  6F6C               	movwf	___xxtofl@sign& (0+255),b
  5997  013608  0100               	movlb	0	; () banked
  5998  01360A  516C               	movf	___xxtofl@sign& (0+255),w,b
  5999  01360C  A4D8               	btfss	status,2,c
  6000                           
  6001                           ; BSR set to: 0
  6002  01360E  AF67               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6003  013610  D01A               	goto	l2479
  6004                           
  6005                           ; BSR set to: 0
  6006  013612  C064  F068         	movff	___xxtofl@val,??___xxtofl
  6007  013616  C065  F069         	movff	___xxtofl@val+1,??___xxtofl+1
  6008  01361A  C066  F06A         	movff	___xxtofl@val+2,??___xxtofl+2
  6009  01361E  C067  F06B         	movff	___xxtofl@val+3,??___xxtofl+3
  6010  013622  1F68               	comf	??___xxtofl& (0+255),f,b
  6011  013624  1F69               	comf	(??___xxtofl+1)& (0+255),f,b
  6012  013626  1F6A               	comf	(??___xxtofl+2)& (0+255),f,b
  6013  013628  1F6B               	comf	(??___xxtofl+3)& (0+255),f,b
  6014  01362A  2B68               	incf	??___xxtofl& (0+255),f,b
  6015  01362C  0E00               	movlw	0
  6016  01362E  2369               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6017  013630  236A               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6018  013632  236B               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6019  013634  C068  F06E         	movff	??___xxtofl,___xxtofl@arg
  6020  013638  C069  F06F         	movff	??___xxtofl+1,___xxtofl@arg+1
  6021  01363C  C06A  F070         	movff	??___xxtofl+2,___xxtofl@arg+2
  6022  013640  C06B  F071         	movff	??___xxtofl+3,___xxtofl@arg+3
  6023  013644  D008               	goto	l10610
  6024  013646                     l2479:
  6025                           
  6026                           ; BSR set to: 0
  6027  013646  C064  F06E         	movff	___xxtofl@val,___xxtofl@arg
  6028  01364A  C065  F06F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6029  01364E  C066  F070         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6030  013652  C067  F071         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6031  013656                     l10610:
  6032                           
  6033                           ; BSR set to: 0
  6034  013656  5164               	movf	___xxtofl@val& (0+255),w,b
  6035  013658  1165               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6036  01365A  1166               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6037  01365C  1167               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6038  01365E  A4D8               	btfss	status,2,c
  6039  013660  D009               	goto	l10616
  6040                           
  6041                           ; BSR set to: 0
  6042  013662  0E00               	movlw	0
  6043  013664  6F64               	movwf	?___xxtofl& (0+255),b
  6044  013666  0E00               	movlw	0
  6045  013668  6F65               	movwf	(?___xxtofl+1)& (0+255),b
  6046  01366A  0E00               	movlw	0
  6047  01366C  6F66               	movwf	(?___xxtofl+2)& (0+255),b
  6048  01366E  0E00               	movlw	0
  6049  013670  6F67               	movwf	(?___xxtofl+3)& (0+255),b
  6050  013672  0012               	return	
  6051  013674                     l10616:
  6052                           
  6053                           ; BSR set to: 0
  6054  013674  0E96               	movlw	150
  6055  013676  6F6D               	movwf	___xxtofl@exp& (0+255),b
  6056  013678  D006               	goto	l10620
  6057  01367A                     l10618:
  6058                           
  6059                           ; BSR set to: 0
  6060  01367A  2B6D               	incf	___xxtofl@exp& (0+255),f,b
  6061  01367C  90D8               	bcf	status,0,c
  6062  01367E  3371               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6063  013680  3370               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6064  013682  336F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6065  013684  336E               	rrcf	___xxtofl@arg& (0+255),f,b
  6066  013686                     l10620:
  6067                           
  6068                           ; BSR set to: 0
  6069  013686  0E00               	movlw	0
  6070  013688  156E               	andwf	___xxtofl@arg& (0+255),w,b
  6071  01368A  6F68               	movwf	??___xxtofl& (0+255),b
  6072  01368C  0E00               	movlw	0
  6073  01368E  156F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6074  013690  6F69               	movwf	(??___xxtofl+1)& (0+255),b
  6075  013692  0E00               	movlw	0
  6076  013694  1570               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6077  013696  6F6A               	movwf	(??___xxtofl+2)& (0+255),b
  6078  013698  0EFE               	movlw	254
  6079  01369A  1571               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6080  01369C  6F6B               	movwf	(??___xxtofl+3)& (0+255),b
  6081  01369E  5168               	movf	??___xxtofl& (0+255),w,b
  6082  0136A0  1169               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6083  0136A2  116A               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6084  0136A4  116B               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6085  0136A6  B4D8               	btfsc	status,2,c
  6086  0136A8  D00D               	goto	l2486
  6087  0136AA  D7E7               	goto	l10618
  6088  0136AC                     l10622:
  6089                           
  6090                           ; BSR set to: 0
  6091  0136AC  2B6D               	incf	___xxtofl@exp& (0+255),f,b
  6092                           
  6093                           ; BSR set to: 0
  6094  0136AE  0E01               	movlw	1
  6095  0136B0  276E               	addwf	___xxtofl@arg& (0+255),f,b
  6096  0136B2  0E00               	movlw	0
  6097  0136B4  236F               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6098  0136B6  2370               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6099  0136B8  2371               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6100                           
  6101                           ; BSR set to: 0
  6102  0136BA  90D8               	bcf	status,0,c
  6103  0136BC  3371               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6104  0136BE  3370               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6105  0136C0  336F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6106  0136C2  336E               	rrcf	___xxtofl@arg& (0+255),f,b
  6107  0136C4                     l2486:
  6108                           
  6109                           ; BSR set to: 0
  6110  0136C4  0E00               	movlw	0
  6111  0136C6  156E               	andwf	___xxtofl@arg& (0+255),w,b
  6112  0136C8  6F68               	movwf	??___xxtofl& (0+255),b
  6113  0136CA  0E00               	movlw	0
  6114  0136CC  156F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6115  0136CE  6F69               	movwf	(??___xxtofl+1)& (0+255),b
  6116  0136D0  0E00               	movlw	0
  6117  0136D2  1570               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6118  0136D4  6F6A               	movwf	(??___xxtofl+2)& (0+255),b
  6119  0136D6  0EFF               	movlw	255
  6120  0136D8  1571               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6121  0136DA  6F6B               	movwf	(??___xxtofl+3)& (0+255),b
  6122  0136DC  5168               	movf	??___xxtofl& (0+255),w,b
  6123  0136DE  1169               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6124  0136E0  116A               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6125  0136E2  116B               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6126  0136E4  B4D8               	btfsc	status,2,c
  6127  0136E6  D007               	goto	l10630
  6128  0136E8  D7E1               	goto	l10622
  6129  0136EA                     l10628:
  6130                           
  6131                           ; BSR set to: 0
  6132  0136EA  076D               	decf	___xxtofl@exp& (0+255),f,b
  6133  0136EC  90D8               	bcf	status,0,c
  6134  0136EE  376E               	rlcf	___xxtofl@arg& (0+255),f,b
  6135  0136F0  376F               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6136  0136F2  3770               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6137  0136F4  3771               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6138  0136F6                     l10630:
  6139                           
  6140                           ; BSR set to: 0
  6141  0136F6  BF70               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6142  0136F8  D003               	goto	u10300
  6143                           
  6144                           ; BSR set to: 0
  6145  0136FA  0E02               	movlw	2
  6146  0136FC  616D               	cpfslt	___xxtofl@exp& (0+255),b
  6147  0136FE  D7F5               	goto	l10628
  6148  013700                     u10300:
  6149                           
  6150                           ; BSR set to: 0
  6151  013700  A16D               	btfss	___xxtofl@exp& (0+255),0,b
  6152                           
  6153                           ; BSR set to: 0
  6154  013702  9F70               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  6155                           
  6156                           ; BSR set to: 0
  6157  013704  90D8               	bcf	status,0,c
  6158  013706  336D               	rrcf	___xxtofl@exp& (0+255),f,b
  6159                           
  6160                           ; BSR set to: 0
  6161  013708  C06D  F068         	movff	___xxtofl@exp,??___xxtofl
  6162  01370C  6B69               	clrf	(??___xxtofl+1)& (0+255),b
  6163  01370E  6B6A               	clrf	(??___xxtofl+2)& (0+255),b
  6164  013710  6B6B               	clrf	(??___xxtofl+3)& (0+255),b
  6165  013712  C068  F06B         	movff	??___xxtofl,??___xxtofl+3
  6166  013716  6B6A               	clrf	(??___xxtofl+2)& (0+255),b
  6167  013718  6B69               	clrf	(??___xxtofl+1)& (0+255),b
  6168  01371A  6B68               	clrf	??___xxtofl& (0+255),b
  6169  01371C  5168               	movf	??___xxtofl& (0+255),w,b
  6170  01371E  136E               	iorwf	___xxtofl@arg& (0+255),f,b
  6171  013720  5169               	movf	(??___xxtofl+1)& (0+255),w,b
  6172  013722  136F               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6173  013724  516A               	movf	(??___xxtofl+2)& (0+255),w,b
  6174  013726  1370               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6175  013728  516B               	movf	(??___xxtofl+3)& (0+255),w,b
  6176  01372A  1371               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6177                           
  6178                           ; BSR set to: 0
  6179  01372C  516C               	movf	___xxtofl@sign& (0+255),w,b
  6180  01372E  A4D8               	btfss	status,2,c
  6181                           
  6182                           ; BSR set to: 0
  6183  013730  AF67               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6184  013732  D001               	goto	l10646
  6185                           
  6186                           ; BSR set to: 0
  6187  013734  8F71               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6188  013736                     l10646:
  6189                           
  6190                           ; BSR set to: 0
  6191  013736  C06E  F064         	movff	___xxtofl@arg,?___xxtofl
  6192  01373A  C06F  F065         	movff	___xxtofl@arg+1,?___xxtofl+1
  6193  01373E  C070  F066         	movff	___xxtofl@arg+2,?___xxtofl+2
  6194  013742  C071  F067         	movff	___xxtofl@arg+3,?___xxtofl+3
  6195                           
  6196                           ; BSR set to: 0
  6197  013746  0012               	return		;funcret
  6198  013748                     __end_of___xxtofl:
  6199                           	callstack 0
  6200                           
  6201 ;; *************** function _printf *****************
  6202 ;; Defined at:
  6203 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  fmt             2   22[BANK1 ] PTR const unsigned char 
  6206 ;;		 -> STR_15(153), 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  ap              2  146[BANK0 ] PTR void [1]
  6209 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6210 ;;  ret             2    0        int 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  2   22[BANK1 ] int 
  6213 ;; Registers used:
  6214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 3F/1
  6217 ;;		On exit  : 3F/1
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6220 ;;      Params:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6221 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6223 ;;      Totals:         0       2      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6224 ;;Total ram usage:       36 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 15
  6227 ;; This function calls:
  6228 ;;		_vfprintf
  6229 ;; This function is called by:
  6230 ;;		_main
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text8
  6235  015242                     __ptext8:
  6236                           	callstack 0
  6237  015242                     _printf:
  6238                           	callstack 15
  6239                           
  6240                           ; BSR set to: 1
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;incstack = 0
  6244  015242  0E84               	movlw	low (?_printf+2)
  6245  015244  0100               	movlb	0	; () banked
  6246  015246  6FF2               	movwf	printf@ap& (0+255),b
  6247  015248  0E01               	movlw	high (?_printf+2)
  6248  01524A  6FF3               	movwf	(printf@ap+1)& (0+255),b
  6249                           
  6250                           ; BSR set to: 0
  6251  01524C  0E00               	movlw	0
  6252  01524E  6FEA               	movwf	vfprintf@fp& (0+255),b
  6253  015250  0E00               	movlw	0
  6254  015252  6FEB               	movwf	(vfprintf@fp+1)& (0+255),b
  6255  015254  C182  F0EC         	movff	printf@fmt,vfprintf@fmt
  6256  015258  C183  F0ED         	movff	printf@fmt+1,vfprintf@fmt+1
  6257  01525C  0EF2               	movlw	low printf@ap
  6258  01525E  6FEE               	movwf	vfprintf@ap& (0+255),b
  6259  015260  6BEF               	clrf	(vfprintf@ap+1)& (0+255),b
  6260  015262  EC7F  F0A3         	call	_vfprintf	;wreg free
  6261                           
  6262                           ; BSR set to: 1
  6263  015266  0012               	return		;funcret
  6264  015268                     __end_of_printf:
  6265                           	callstack 0
  6266                           
  6267 ;; *************** function _vfprintf *****************
  6268 ;; Defined at:
  6269 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  fp              2  138[BANK0 ] PTR struct _IO_FILE
  6272 ;;		 -> sprintf@f(11), NULL(0), 
  6273 ;;  fmt             2  140[BANK0 ] PTR const unsigned char 
  6274 ;;		 -> STR_19(23), STR_18(29), STR_17(24), STR_16(24), 
  6275 ;;		 -> STR_15(153), STR_14(3), STR_13(6), STR_12(17), 
  6276 ;;  ap              2  142[BANK0 ] PTR PTR void 
  6277 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  cfmt            2  144[BANK0 ] PTR unsigned char 
  6280 ;;		 -> STR_19(23), STR_18(29), STR_17(24), STR_16(24), 
  6281 ;;		 -> STR_15(153), STR_14(3), STR_13(6), STR_12(17), 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  2  138[BANK0 ] int 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 3F/0
  6288 ;;		On exit  : 3F/1
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6291 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6295 ;;Total ram usage:        8 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 14
  6298 ;; This function calls:
  6299 ;;		_vfpfcnvrt
  6300 ;; This function is called by:
  6301 ;;		_sprintf
  6302 ;;		_printf
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text9
  6307  0146FE                     __ptext9:
  6308                           	callstack 0
  6309  0146FE                     _vfprintf:
  6310                           	callstack 15
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  6314                           
  6315                           ; BSR set to: 1
  6316                           ;incstack = 0
  6317  0146FE  C0EC  F0F0         	movff	vfprintf@fmt,vfprintf@cfmt
  6318  014702  C0ED  F0F1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  6322  014706  0E00               	movlw	0
  6323  014708  0101               	movlb	1	; () banked
  6324  01470A  6F5E               	movwf	(_nout+1)& (0+255),b
  6325  01470C  0E00               	movlw	0
  6326  01470E  6F5D               	movwf	_nout& (0+255),b
  6327                           
  6328                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  6329  014710  D014               	goto	l10656
  6330  014712                     l10654:
  6331                           
  6332                           ; BSR set to: 1
  6333                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6334  014712  C0EA  F0E1         	movff	vfprintf@fp,vfpfcnvrt@fp
  6335  014716  C0EB  F0E2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6336  01471A  0EF0               	movlw	low vfprintf@cfmt
  6337  01471C  0100               	movlb	0	; () banked
  6338  01471E  6FE3               	movwf	vfpfcnvrt@fmt& (0+255),b
  6339  014720  C0EE  F0E4         	movff	vfprintf@ap,vfpfcnvrt@ap
  6340  014724  C0EF  F0E5         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6341  014728  ECDC  F084         	call	_vfpfcnvrt	;wreg free
  6342  01472C  51E1               	movf	?_vfpfcnvrt& (0+255),w,b
  6343  01472E  0101               	movlb	1	; () banked
  6344  014730  275D               	addwf	_nout& (0+255),f,b
  6345  014732  0100               	movlb	0	; () banked
  6346  014734  51E2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6347  014736  0101               	movlb	1	; () banked
  6348  014738  235E               	addwfc	(_nout+1)& (0+255),f,b
  6349  01473A                     l10656:
  6350                           
  6351                           ; BSR set to: 1
  6352                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  6353  01473A  0060  F3C3  FFF6   	movff	vfprintf@cfmt,tblptrl
  6354  014740  0060  F3C7  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  6355  014746                     	if	0	;tblptru may be non-zero
  6356  014746                     	endif
  6357  014746                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6358  014746  0E00               	movlw	low (__mediumconst shr (0+16))
  6359  014748  6EF8               	movwf	tblptru,c
  6360  01474A                     	endif
  6361  01474A  0008               	tblrd		*
  6362  01474C  50F5               	movf	tablat,w,c
  6363  01474E  0900               	iorlw	0
  6364  014750  A4D8               	btfss	status,2,c
  6365  014752  D7DF               	goto	l10654
  6366                           
  6367                           ; BSR set to: 1
  6368                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  6369  014754  C15D  F0EA         	movff	_nout,?_vfprintf
  6370  014758  C15E  F0EB         	movff	_nout+1,?_vfprintf+1
  6371                           
  6372                           ; BSR set to: 1
  6373  01475C  0012               	return		;funcret
  6374  01475E                     __end_of_vfprintf:
  6375                           	callstack 0
  6376                           
  6377 ;; *************** function _vfpfcnvrt *****************
  6378 ;; Defined at:
  6379 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  fp              2  129[BANK0 ] PTR struct _IO_FILE
  6382 ;;		 -> sprintf@f(11), NULL(0), 
  6383 ;;  fmt             1  131[BANK0 ] PTR PTR unsigned char 
  6384 ;;		 -> vfprintf@cfmt(2), 
  6385 ;;  ap              2  132[BANK0 ] PTR PTR void 
  6386 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  llu             8    0[BANK1 ] unsigned long long 
  6389 ;;  ll              8    0        long long 
  6390 ;;  f               4   14[BANK1 ] long long 
  6391 ;;  ct              3   18[BANK1 ] unsigned char [3]
  6392 ;;  vp              3    0        PTR void 
  6393 ;;  done            2   10[BANK1 ] int 
  6394 ;;  cp              2    8[BANK1 ] PTR unsigned char 
  6395 ;;		 -> ?_printf(2), ?_sprintf(2), build_version(14), STR_2(9), 
  6396 ;;		 -> STR_1(12), 
  6397 ;;  i               2    0        int 
  6398 ;;  c               1   21[BANK1 ] unsigned char 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  2  129[BANK0 ] int 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 3F/0
  6405 ;;		On exit  : 3F/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6408 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6409 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6410 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6411 ;;      Totals:         0       9      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6412 ;;Total ram usage:       31 bytes
  6413 ;; Hardware stack levels used: 1
  6414 ;; Hardware stack levels required when called: 13
  6415 ;; This function calls:
  6416 ;;		_atoi
  6417 ;;		_efgtoa
  6418 ;;		_fputc
  6419 ;;		_isdigit
  6420 ;;		_isupper
  6421 ;;		_stoa
  6422 ;;		_strncmp
  6423 ;;		_tolower
  6424 ;;		_utoa
  6425 ;; This function is called by:
  6426 ;;		_vfprintf
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text10
  6431  0109B8                     __ptext10:
  6432                           	callstack 0
  6433  0109B8                     _vfpfcnvrt:
  6434                           	callstack 15
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  6438                           
  6439                           ; BSR set to: 1
  6440                           ;incstack = 0
  6441  0109B8  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6442  0109BA  6ED9               	movwf	fsr2l,c
  6443  0109BC  6ADA               	clrf	fsr2h,c
  6444  0109BE  006F FF7B FFF6     	movff	postinc2,tblptrl
  6445  0109C4  006F FF77 FFF7     	movff	postdec2,tblptrh
  6446  0109CA                     	if	0	;tblptru may be non-zero
  6447  0109CA                     	endif
  6448  0109CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6449  0109CA  0E00               	movlw	low (__mediumconst shr (0+16))
  6450  0109CC  6EF8               	movwf	tblptru,c
  6451  0109CE                     	endif
  6452  0109CE  0008               	tblrd		*
  6453  0109D0  50F5               	movf	tablat,w,c
  6454  0109D2  0A25               	xorlw	37
  6455  0109D4  A4D8               	btfss	status,2,c
  6456  0109D6  D35C               	goto	l10290
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  6460  0109D8  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6461  0109DA  6ED9               	movwf	fsr2l,c
  6462  0109DC  6ADA               	clrf	fsr2h,c
  6463  0109DE  2ADE               	incf	postinc2,f,c
  6464  0109E0  0E00               	movlw	0
  6465  0109E2  22DD               	addwfc	postdec2,f,c
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  6469  0109E4  0E00               	movlw	0
  6470  0109E6  6E2D               	movwf	(_width+1)^0,c
  6471  0109E8  0E00               	movlw	0
  6472  0109EA  6E2C               	movwf	_width^0,c
  6473  0109EC  C02C  F02E         	movff	_width,_flags
  6474  0109F0  C02D  F02F         	movff	_width+1,_flags+1
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  6478  0109F4  69F8               	setf	_prec& (0+255),b
  6479  0109F6  69F9               	setf	(_prec+1)& (0+255),b
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  6483  0109F8  0E00               	movlw	0
  6484  0109FA  0101               	movlb	1	; () banked
  6485  0109FC  6F77               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6486  0109FE  0E00               	movlw	0
  6487  010A00  D014               	goto	L2
  6488  010A02                     l10146:
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  6492  010A02  802E               	bsf	_flags^0,0,c
  6493  010A04                     l10148:
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  6497  010A04  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6498  010A06  6ED9               	movwf	fsr2l,c
  6499  010A08  6ADA               	clrf	fsr2h,c
  6500  010A0A  2ADE               	incf	postinc2,f,c
  6501  010A0C  0E00               	movlw	0
  6502  010A0E  22DD               	addwfc	postdec2,f,c
  6503                           
  6504                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  6505  010A10  D033               	goto	l10172
  6506  010A12                     l10150:
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  6510  010A12  822E               	bsf	_flags^0,1,c
  6511  010A14  D7F7               	goto	l10148
  6512  010A16                     l10154:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  6516  010A16  842E               	bsf	_flags^0,2,c
  6517  010A18  D7F5               	goto	l10148
  6518  010A1A                     l10158:
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  6522  010A1A  862E               	bsf	_flags^0,3,c
  6523  010A1C  D7F3               	goto	l10148
  6524  010A1E                     l10162:
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  6528  010A1E  882E               	bsf	_flags^0,4,c
  6529  010A20  D7F1               	goto	l10148
  6530  010A22                     l10166:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  6534  010A22  0E00               	movlw	0
  6535  010A24  0101               	movlb	1	; () banked
  6536  010A26  6F77               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6537  010A28  0E01               	movlw	1
  6538  010A2A                     L2:
  6539  010A2A  6F76               	movwf	vfpfcnvrt@done& (0+255),b
  6540                           
  6541                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  6542  010A2C  D025               	goto	l10172
  6543  010A2E                     l10170:
  6544                           
  6545                           ; BSR set to: 1
  6546  010A2E  0100               	movlb	0	; () banked
  6547  010A30  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6548  010A32  6ED9               	movwf	fsr2l,c
  6549  010A34  6ADA               	clrf	fsr2h,c
  6550  010A36  006F FF7B FFF6     	movff	postinc2,tblptrl
  6551  010A3C  006F FF77 FFF7     	movff	postdec2,tblptrh
  6552  010A42                     	if	0	;tblptru may be non-zero
  6553  010A42                     	endif
  6554  010A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6555  010A42  0E00               	movlw	low (__mediumconst shr (0+16))
  6556  010A44  6EF8               	movwf	tblptru,c
  6557  010A46                     	endif
  6558  010A46  0008               	tblrd		*
  6559  010A48  50F5               	movf	tablat,w,c
  6560  010A4A  6FE6               	movwf	??_vfpfcnvrt& (0+255),b
  6561  010A4C  6BE7               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6562                           
  6563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6564                           ; Switch size 1, requested type "simple"
  6565                           ; Number of cases is 1, Range of values is 0 to 0
  6566                           ; switch strategies available:
  6567                           ; Name         Instructions Cycles
  6568                           ; simple_byte            4     3 (average)
  6569                           ;	Chosen strategy is simple_byte
  6570  010A4E  51E7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6571  010A50  0A00               	xorlw	0	; case 0
  6572  010A52  A4D8               	btfss	status,2,c
  6573  010A54  D7E6               	goto	l10166
  6574                           
  6575                           ; BSR set to: 0
  6576                           ; Switch size 1, requested type "simple"
  6577                           ; Number of cases is 5, Range of values is 32 to 48
  6578                           ; switch strategies available:
  6579                           ; Name         Instructions Cycles
  6580                           ; simple_byte           16     9 (average)
  6581                           ;	Chosen strategy is simple_byte
  6582  010A56  51E6               	movf	??_vfpfcnvrt& (0+255),w,b
  6583  010A58  0A20               	xorlw	32	; case 32
  6584  010A5A  B4D8               	btfsc	status,2,c
  6585  010A5C  D7DE               	goto	l10158
  6586  010A5E  0A03               	xorlw	3	; case 35
  6587  010A60  B4D8               	btfsc	status,2,c
  6588  010A62  D7DD               	goto	l10162
  6589  010A64  0A08               	xorlw	8	; case 43
  6590  010A66  B4D8               	btfsc	status,2,c
  6591  010A68  D7D6               	goto	l10154
  6592  010A6A  0A06               	xorlw	6	; case 45
  6593  010A6C  B4D8               	btfsc	status,2,c
  6594  010A6E  D7C9               	goto	l10146
  6595  010A70  0A1D               	xorlw	29	; case 48
  6596  010A72  B4D8               	btfsc	status,2,c
  6597  010A74  D7CE               	goto	l10150
  6598  010A76  D7D5               	goto	l10166
  6599  010A78                     l10172:
  6600                           
  6601                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  6602  010A78  0101               	movlb	1	; () banked
  6603  010A7A  5176               	movf	vfpfcnvrt@done& (0+255),w,b
  6604  010A7C  1177               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6605  010A7E  B4D8               	btfsc	status,2,c
  6606  010A80  D7D6               	goto	l10170
  6607                           
  6608                           ; BSR set to: 1
  6609                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  6610  010A82  B02E               	btfsc	_flags^0,0,c
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  6614  010A84  922E               	bcf	_flags^0,1,c
  6615                           
  6616                           ; BSR set to: 1
  6617                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  6618  010A86  0100               	movlb	0	; () banked
  6619  010A88  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6620  010A8A  6ED9               	movwf	fsr2l,c
  6621  010A8C  6ADA               	clrf	fsr2h,c
  6622  010A8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6623  010A94  006F FF77 FFF7     	movff	postdec2,tblptrh
  6624  010A9A                     	if	0	;tblptru may be non-zero
  6625  010A9A                     	endif
  6626  010A9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6627  010A9A  0E00               	movlw	low (__mediumconst shr (0+16))
  6628  010A9C  6EF8               	movwf	tblptru,c
  6629  010A9E                     	endif
  6630  010A9E  0008               	tblrd		*
  6631  010AA0  50F5               	movf	tablat,w,c
  6632  010AA2  0A2A               	xorlw	42
  6633  010AA4  A4D8               	btfss	status,2,c
  6634  010AA6  D02A               	goto	l10184
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  6638  010AA8  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6639  010AAA  6ED9               	movwf	fsr2l,c
  6640  010AAC  6ADA               	clrf	fsr2h,c
  6641  010AAE  2ADE               	incf	postinc2,f,c
  6642  010AB0  0E00               	movlw	0
  6643  010AB2  22DD               	addwfc	postdec2,f,c
  6644                           
  6645                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6646  010AB4  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  6647  010ABA  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  6648  010AC0  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  6649  010AC6  0E02               	movlw	2
  6650  010AC8  26DE               	addwf	postinc2,f,c
  6651  010ACA  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  6652  010AD0  0E00               	movlw	0
  6653  010AD2  22DD               	addwfc	postdec2,f,c
  6654  010AD4  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  6655  010ADA  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  6656  010AE0  006F FF78  F02C    	movff	postinc2,_width
  6657  010AE6  006F FF74  F02D    	movff	postdec2,_width+1
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  6661  010AEC  AE2D               	btfss	(_width+1)^0,7,c
  6662  010AEE  D039               	goto	u9870
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  6666  010AF0  802E               	bsf	_flags^0,0,c
  6667                           
  6668                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  6669  010AF2  6C2C               	negf	_width^0,c
  6670  010AF4  1E2D               	comf	(_width+1)^0,f,c
  6671  010AF6  B0D8               	btfsc	status,0,c
  6672  010AF8  2A2D               	incf	(_width+1)^0,f,c
  6673  010AFA  D033               	goto	u9870
  6674  010AFC                     l10184:
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  6678  010AFC  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6679  010AFE  6ED9               	movwf	fsr2l,c
  6680  010B00  6ADA               	clrf	fsr2h,c
  6681  010B02  006F FF78  F065    	movff	postinc2,atoi@s
  6682  010B08  006F FF74  F066    	movff	postdec2,atoi@s+1
  6683  010B0E  ECA4  F09B         	call	_atoi	;wreg free
  6684  010B12  C065  F02C         	movff	?_atoi,_width
  6685  010B16  C066  F02D         	movff	?_atoi+1,_width+1
  6686                           
  6687                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6688  010B1A  D006               	goto	l10190
  6689  010B1C                     l10186:
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  6693  010B1C  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6694  010B1E  6ED9               	movwf	fsr2l,c
  6695  010B20  6ADA               	clrf	fsr2h,c
  6696  010B22  2ADE               	incf	postinc2,f,c
  6697  010B24  0E00               	movlw	0
  6698  010B26  22DD               	addwfc	postdec2,f,c
  6699  010B28                     l10190:
  6700                           
  6701                           ; BSR set to: 0
  6702  010B28  0ED0               	movlw	208
  6703  010B2A  6FE6               	movwf	??_vfpfcnvrt& (0+255),b
  6704  010B2C  0EFF               	movlw	255
  6705  010B2E  6FE7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6706  010B30  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6707  010B32  6ED9               	movwf	fsr2l,c
  6708  010B34  6ADA               	clrf	fsr2h,c
  6709  010B36  006F FF7B FFF6     	movff	postinc2,tblptrl
  6710  010B3C  006F FF77 FFF7     	movff	postdec2,tblptrh
  6711  010B42                     	if	0	;tblptru may be non-zero
  6712  010B42                     	endif
  6713  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6714  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6715  010B44  6EF8               	movwf	tblptru,c
  6716  010B46                     	endif
  6717  010B46  0008               	tblrd		*
  6718  010B48  50F5               	movf	tablat,w,c
  6719  010B4A  6FE8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6720  010B4C  6BE9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6721  010B4E  51E6               	movf	??_vfpfcnvrt& (0+255),w,b
  6722  010B50  27E8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6723  010B52  51E7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6724  010B54  23E9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6725  010B56  51E9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6726  010B58  E104               	bnz	u9870
  6727  010B5A  0E0A               	movlw	10
  6728  010B5C  5DE8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6729  010B5E  A0D8               	btfss	status,0,c
  6730  010B60  D7DD               	goto	l10186
  6731  010B62                     u9870:
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  6735  010B62  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6736  010B64  6ED9               	movwf	fsr2l,c
  6737  010B66  6ADA               	clrf	fsr2h,c
  6738  010B68  006F FF7B FFF6     	movff	postinc2,tblptrl
  6739  010B6E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6740  010B74                     	if	0	;tblptru may be non-zero
  6741  010B74                     	endif
  6742  010B74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6743  010B74  0E00               	movlw	low (__mediumconst shr (0+16))
  6744  010B76  6EF8               	movwf	tblptru,c
  6745  010B78                     	endif
  6746  010B78  0008               	tblrd		*
  6747  010B7A  50F5               	movf	tablat,w,c
  6748  010B7C  0A2E               	xorlw	46
  6749  010B7E  A4D8               	btfss	status,2,c
  6750  010B80  D070               	goto	u9900
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  6754  010B82  0E00               	movlw	0
  6755  010B84  6FF9               	movwf	(_prec+1)& (0+255),b
  6756  010B86  0E00               	movlw	0
  6757  010B88  6FF8               	movwf	_prec& (0+255),b
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  6761  010B8A  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6762  010B8C  6ED9               	movwf	fsr2l,c
  6763  010B8E  6ADA               	clrf	fsr2h,c
  6764  010B90  2ADE               	incf	postinc2,f,c
  6765  010B92  0E00               	movlw	0
  6766  010B94  22DD               	addwfc	postdec2,f,c
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  6770  010B96  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6771  010B98  6ED9               	movwf	fsr2l,c
  6772  010B9A  6ADA               	clrf	fsr2h,c
  6773  010B9C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6774  010BA2  006F FF77 FFF7     	movff	postdec2,tblptrh
  6775  010BA8                     	if	0	;tblptru may be non-zero
  6776  010BA8                     	endif
  6777  010BA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6778  010BA8  0E00               	movlw	low (__mediumconst shr (0+16))
  6779  010BAA  6EF8               	movwf	tblptru,c
  6780  010BAC                     	endif
  6781  010BAC  0008               	tblrd		*
  6782  010BAE  50F5               	movf	tablat,w,c
  6783  010BB0  0A2A               	xorlw	42
  6784  010BB2  A4D8               	btfss	status,2,c
  6785  010BB4  D023               	goto	l10202
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  6789  010BB6  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6790  010BB8  6ED9               	movwf	fsr2l,c
  6791  010BBA  6ADA               	clrf	fsr2h,c
  6792  010BBC  2ADE               	incf	postinc2,f,c
  6793  010BBE  0E00               	movlw	0
  6794  010BC0  22DD               	addwfc	postdec2,f,c
  6795                           
  6796                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  6797  010BC2  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  6798  010BC8  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  6799  010BCE  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  6800  010BD4  0E02               	movlw	2
  6801  010BD6  26DE               	addwf	postinc2,f,c
  6802  010BD8  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  6803  010BDE  0E00               	movlw	0
  6804  010BE0  22DD               	addwfc	postdec2,f,c
  6805  010BE2  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  6806  010BE8  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  6807  010BEE  006F FF78  F0F8    	movff	postinc2,_prec
  6808  010BF4  006F FF74  F0F9    	movff	postdec2,_prec+1
  6809                           
  6810                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  6811  010BFA  D033               	goto	u9900
  6812  010BFC                     l10202:
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  6816  010BFC  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6817  010BFE  6ED9               	movwf	fsr2l,c
  6818  010C00  6ADA               	clrf	fsr2h,c
  6819  010C02  006F FF78  F065    	movff	postinc2,atoi@s
  6820  010C08  006F FF74  F066    	movff	postdec2,atoi@s+1
  6821  010C0E  ECA4  F09B         	call	_atoi	;wreg free
  6822  010C12  C065  F0F8         	movff	?_atoi,_prec
  6823  010C16  C066  F0F9         	movff	?_atoi+1,_prec+1
  6824                           
  6825                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6826  010C1A  D006               	goto	l10208
  6827  010C1C                     l10204:
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  6831  010C1C  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6832  010C1E  6ED9               	movwf	fsr2l,c
  6833  010C20  6ADA               	clrf	fsr2h,c
  6834  010C22  2ADE               	incf	postinc2,f,c
  6835  010C24  0E00               	movlw	0
  6836  010C26  22DD               	addwfc	postdec2,f,c
  6837  010C28                     l10208:
  6838                           
  6839                           ; BSR set to: 0
  6840  010C28  0ED0               	movlw	208
  6841  010C2A  6FE6               	movwf	??_vfpfcnvrt& (0+255),b
  6842  010C2C  0EFF               	movlw	255
  6843  010C2E  6FE7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6844  010C30  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6845  010C32  6ED9               	movwf	fsr2l,c
  6846  010C34  6ADA               	clrf	fsr2h,c
  6847  010C36  006F FF7B FFF6     	movff	postinc2,tblptrl
  6848  010C3C  006F FF77 FFF7     	movff	postdec2,tblptrh
  6849  010C42                     	if	0	;tblptru may be non-zero
  6850  010C42                     	endif
  6851  010C42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6852  010C42  0E00               	movlw	low (__mediumconst shr (0+16))
  6853  010C44  6EF8               	movwf	tblptru,c
  6854  010C46                     	endif
  6855  010C46  0008               	tblrd		*
  6856  010C48  50F5               	movf	tablat,w,c
  6857  010C4A  6FE8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6858  010C4C  6BE9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6859  010C4E  51E6               	movf	??_vfpfcnvrt& (0+255),w,b
  6860  010C50  27E8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6861  010C52  51E7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6862  010C54  23E9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6863  010C56  51E9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6864  010C58  E104               	bnz	u9900
  6865  010C5A  0E0A               	movlw	10
  6866  010C5C  5DE8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6867  010C5E  A0D8               	btfss	status,0,c
  6868  010C60  D7DD               	goto	l10204
  6869  010C62                     u9900:
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  6873  010C62  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6874  010C64  6ED9               	movwf	fsr2l,c
  6875  010C66  6ADA               	clrf	fsr2h,c
  6876  010C68  006F FF7B FFF6     	movff	postinc2,tblptrl
  6877  010C6E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6878  010C74                     	if	0	;tblptru may be non-zero
  6879  010C74                     	endif
  6880  010C74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6881  010C74  0E00               	movlw	low (__mediumconst shr (0+16))
  6882  010C76  6EF8               	movwf	tblptru,c
  6883  010C78                     	endif
  6884  010C78  0008               	tblrd		*
  6885  010C7A  50F5               	movf	tablat,w,c
  6886  010C7C  6F64               	movwf	tolower@c& (0+255),b
  6887  010C7E  6B65               	clrf	(tolower@c+1)& (0+255),b
  6888  010C80  ECC9  F0A7         	call	_tolower	;wreg free
  6889  010C84  5164               	movf	?_tolower& (0+255),w,b
  6890  010C86  0101               	movlb	1	; () banked
  6891  010C88  6F7E               	movwf	vfpfcnvrt@ct& (0+255),b
  6892                           
  6893                           ; BSR set to: 1
  6894                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  6895  010C8A  517E               	movf	vfpfcnvrt@ct& (0+255),w,b
  6896  010C8C  B4D8               	btfsc	status,2,c
  6897  010C8E  D041               	goto	l10220
  6898                           
  6899                           ; BSR set to: 1
  6900                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  6901  010C90  0100               	movlb	0	; () banked
  6902  010C92  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6903  010C94  6ED9               	movwf	fsr2l,c
  6904  010C96  6ADA               	clrf	fsr2h,c
  6905  010C98  006F FF78  F0E6    	movff	postinc2,??_vfpfcnvrt
  6906  010C9E  006F FF74  F0E7    	movff	postdec2,??_vfpfcnvrt+1
  6907  010CA4  0E01               	movlw	1
  6908  010CA6  27E6               	addwf	??_vfpfcnvrt& (0+255),f,b
  6909  010CA8  0E00               	movlw	0
  6910  010CAA  23E7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6911  010CAC  0060  F39B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  6912  010CB2  0060  F39F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  6913  010CB8                     	if	0	;tblptru may be non-zero
  6914  010CB8                     	endif
  6915  010CB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6916  010CB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6917  010CBA  6EF8               	movwf	tblptru,c
  6918  010CBC                     	endif
  6919  010CBC  0008               	tblrd		*
  6920  010CBE  50F5               	movf	tablat,w,c
  6921  010CC0  6F64               	movwf	tolower@c& (0+255),b
  6922  010CC2  6B65               	clrf	(tolower@c+1)& (0+255),b
  6923  010CC4  ECC9  F0A7         	call	_tolower	;wreg free
  6924  010CC8  5164               	movf	?_tolower& (0+255),w,b
  6925  010CCA  0101               	movlb	1	; () banked
  6926  010CCC  6F7F               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6927                           
  6928                           ; BSR set to: 1
  6929                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  6930  010CCE  517F               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6931  010CD0  B4D8               	btfsc	status,2,c
  6932  010CD2  D01F               	goto	l10220
  6933                           
  6934                           ; BSR set to: 1
  6935                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  6936  010CD4  0100               	movlb	0	; () banked
  6937  010CD6  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6938  010CD8  6ED9               	movwf	fsr2l,c
  6939  010CDA  6ADA               	clrf	fsr2h,c
  6940  010CDC  006F FF78  F0E6    	movff	postinc2,??_vfpfcnvrt
  6941  010CE2  006F FF74  F0E7    	movff	postdec2,??_vfpfcnvrt+1
  6942  010CE8  0E02               	movlw	2
  6943  010CEA  27E6               	addwf	??_vfpfcnvrt& (0+255),f,b
  6944  010CEC  0E00               	movlw	0
  6945  010CEE  23E7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6946  010CF0  0060  F39B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  6947  010CF6  0060  F39F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  6948  010CFC                     	if	0	;tblptru may be non-zero
  6949  010CFC                     	endif
  6950  010CFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6951  010CFC  0E00               	movlw	low (__mediumconst shr (0+16))
  6952  010CFE  6EF8               	movwf	tblptru,c
  6953  010D00                     	endif
  6954  010D00  0008               	tblrd		*
  6955  010D02  50F5               	movf	tablat,w,c
  6956  010D04  6F64               	movwf	tolower@c& (0+255),b
  6957  010D06  6B65               	clrf	(tolower@c+1)& (0+255),b
  6958  010D08  ECC9  F0A7         	call	_tolower	;wreg free
  6959  010D0C  5164               	movf	?_tolower& (0+255),w,b
  6960  010D0E  0101               	movlb	1	; () banked
  6961  010D10  6F80               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6962  010D12                     l10220:
  6963                           
  6964                           ; BSR set to: 1
  6965                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  6966  010D12  0E66               	movlw	102
  6967  010D14  197E               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6968  010D16  A4D8               	btfss	status,2,c
  6969  010D18  D04D               	goto	l10232
  6970                           
  6971                           ; BSR set to: 1
  6972                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  6973  010D1A  0100               	movlb	0	; () banked
  6974  010D1C  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6975  010D1E  6ED9               	movwf	fsr2l,c
  6976  010D20  6ADA               	clrf	fsr2h,c
  6977  010D22  006F FF7B FFF6     	movff	postinc2,tblptrl
  6978  010D28  006F FF77 FFF7     	movff	postdec2,tblptrh
  6979  010D2E                     	if	0	;tblptru may be non-zero
  6980  010D2E                     	endif
  6981  010D2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6982  010D2E  0E00               	movlw	low (__mediumconst shr (0+16))
  6983  010D30  6EF8               	movwf	tblptru,c
  6984  010D32                     	endif
  6985  010D32  0008               	tblrd		*
  6986  010D34  006F FFD4  F181    	movff	tablat,vfpfcnvrt@c
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  6990  010D3A  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6991  010D3C  6ED9               	movwf	fsr2l,c
  6992  010D3E  6ADA               	clrf	fsr2h,c
  6993  010D40  2ADE               	incf	postinc2,f,c
  6994  010D42  0E00               	movlw	0
  6995  010D44  22DD               	addwfc	postdec2,f,c
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  6999  010D46  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  7000  010D4C  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  7001  010D52  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  7002  010D58  0E04               	movlw	4
  7003  010D5A  26DE               	addwf	postinc2,f,c
  7004  010D5C  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  7005  010D62  0E00               	movlw	0
  7006  010D64  22DD               	addwfc	postdec2,f,c
  7007  010D66  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  7008  010D6C  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  7009  010D72  006F FF78  F17A    	movff	postinc2,vfpfcnvrt@f
  7010  010D78  006F FF78  F17B    	movff	postinc2,vfpfcnvrt@f+1
  7011  010D7E  006F FF78  F17C    	movff	postinc2,vfpfcnvrt@f+2
  7012  010D84  006F FF78  F17D    	movff	postinc2,vfpfcnvrt@f+3
  7013  010D8A                     l10228:
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  7017  010D8A  C0E1  F0A3         	movff	vfpfcnvrt@fp,efgtoa@fp
  7018  010D8E  C0E2  F0A4         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7019  010D92  C17A  F0A5         	movff	vfpfcnvrt@f,efgtoa@f
  7020  010D96  C17B  F0A6         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7021  010D9A  C17C  F0A7         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7022  010D9E  C17D  F0A8         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7023  010DA2  C181  F0A9         	movff	vfpfcnvrt@c,efgtoa@c
  7024  010DA6  EC00  F080         	call	_efgtoa	;wreg free
  7025  010DAA  C0A3  F0E1         	movff	?_efgtoa,?_vfpfcnvrt
  7026  010DAE  C0A4  F0E2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7027  010DB2  0012               	return	
  7028  010DB4                     l10232:
  7029                           
  7030                           ; BSR set to: 1
  7031                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7032  010DB4  0E7E               	movlw	low vfpfcnvrt@ct
  7033  010DB6  0100               	movlb	0	; () banked
  7034  010DB8  6F62               	movwf	strncmp@_l& (0+255),b
  7035  010DBA  0E01               	movlw	high vfpfcnvrt@ct
  7036  010DBC  6F63               	movwf	(strncmp@_l+1)& (0+255),b
  7037  010DBE  0EE0               	movlw	low STR_38
  7038  010DC0  6F64               	movwf	strncmp@_r& (0+255),b
  7039  010DC2  0EFF               	movlw	high STR_38
  7040  010DC4  6F65               	movwf	(strncmp@_r+1)& (0+255),b
  7041  010DC6  0E00               	movlw	0
  7042  010DC8  6F67               	movwf	(strncmp@n+1)& (0+255),b
  7043  010DCA  0E02               	movlw	2
  7044  010DCC  6F66               	movwf	strncmp@n& (0+255),b
  7045  010DCE  EC59  F098         	call	_strncmp	;wreg free
  7046  010DD2  5162               	movf	?_strncmp& (0+255),w,b
  7047  010DD4  1163               	iorwf	(?_strncmp+1)& (0+255),w,b
  7048  010DD6  A4D8               	btfss	status,2,c
  7049  010DD8  D05E               	goto	l10248
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  7053  010DDA  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7054  010DDC  6ED9               	movwf	fsr2l,c
  7055  010DDE  6ADA               	clrf	fsr2h,c
  7056  010DE0  006F FF78  F0E6    	movff	postinc2,??_vfpfcnvrt
  7057  010DE6  006F FF74  F0E7    	movff	postdec2,??_vfpfcnvrt+1
  7058  010DEC  0E01               	movlw	1
  7059  010DEE  27E6               	addwf	??_vfpfcnvrt& (0+255),f,b
  7060  010DF0  0E00               	movlw	0
  7061  010DF2  23E7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7062  010DF4  0060  F39B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  7063  010DFA  0060  F39F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  7064  010E00                     	if	0	;tblptru may be non-zero
  7065  010E00                     	endif
  7066  010E00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7067  010E00  0E00               	movlw	low (__mediumconst shr (0+16))
  7068  010E02  6EF8               	movwf	tblptru,c
  7069  010E04                     	endif
  7070  010E04  0008               	tblrd		*
  7071  010E06  006F FFD4  F181    	movff	tablat,vfpfcnvrt@c
  7072                           
  7073                           ; BSR set to: 0
  7074                           
  7075                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7076  010E0C  0EBF               	movlw	191
  7077  010E0E  6FE6               	movwf	??_vfpfcnvrt& (0+255),b
  7078  010E10  0EFF               	movlw	255
  7079  010E12  6FE7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7080  010E14  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7081  010E16  6ED9               	movwf	fsr2l,c
  7082  010E18  6ADA               	clrf	fsr2h,c
  7083  010E1A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7084  010E20  006F FF77 FFF7     	movff	postdec2,tblptrh
  7085  010E26                     	if	0	;tblptru may be non-zero
  7086  010E26                     	endif
  7087  010E26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7088  010E26  0E00               	movlw	low (__mediumconst shr (0+16))
  7089  010E28  6EF8               	movwf	tblptru,c
  7090  010E2A                     	endif
  7091  010E2A  0008               	tblrd		*
  7092  010E2C  50F5               	movf	tablat,w,c
  7093  010E2E  6FE8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7094  010E30  6BE9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7095  010E32  51E6               	movf	??_vfpfcnvrt& (0+255),w,b
  7096  010E34  27E8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7097  010E36  51E7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7098  010E38  23E9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7099  010E3A  51E9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7100  010E3C  E102               	bnz	l10242
  7101  010E3E  0E1A               	movlw	26
  7102  010E40  5DE8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7103  010E42                     l10242:
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7107  010E42  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  7108  010E48  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  7109  010E4E  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  7110  010E54  0E04               	movlw	4
  7111  010E56  26DE               	addwf	postinc2,f,c
  7112  010E58  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  7113  010E5E  0E00               	movlw	0
  7114  010E60  22DD               	addwfc	postdec2,f,c
  7115  010E62  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  7116  010E68  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  7117  010E6E  006F FF78  F17A    	movff	postinc2,vfpfcnvrt@f
  7118  010E74  006F FF78  F17B    	movff	postinc2,vfpfcnvrt@f+1
  7119  010E7A  006F FF78  F17C    	movff	postinc2,vfpfcnvrt@f+2
  7120  010E80  006F FF78  F17D    	movff	postinc2,vfpfcnvrt@f+3
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7124                           
  7125                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 957:             }
  7126  010E86  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7127  010E88  6ED9               	movwf	fsr2l,c
  7128  010E8A  6ADA               	clrf	fsr2h,c
  7129  010E8C  0E02               	movlw	2
  7130  010E8E  26DE               	addwf	postinc2,f,c
  7131  010E90  0E00               	movlw	0
  7132  010E92  22DD               	addwfc	postdec2,f,c
  7133  010E94  D77A               	goto	l10228
  7134  010E96                     l10248:
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  7138  010E96  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7139  010E98  6ED9               	movwf	fsr2l,c
  7140  010E9A  6ADA               	clrf	fsr2h,c
  7141  010E9C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7142  010EA2  006F FF77 FFF7     	movff	postdec2,tblptrh
  7143  010EA8                     	if	0	;tblptru may be non-zero
  7144  010EA8                     	endif
  7145  010EA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7146  010EA8  0E00               	movlw	low (__mediumconst shr (0+16))
  7147  010EAA  6EF8               	movwf	tblptru,c
  7148  010EAC                     	endif
  7149  010EAC  0008               	tblrd		*
  7150  010EAE  50F5               	movf	tablat,w,c
  7151  010EB0  0A73               	xorlw	115
  7152  010EB2  B4D8               	btfsc	status,2,c
  7153  010EB4  D017               	goto	u9970
  7154                           
  7155                           ; BSR set to: 0
  7156  010EB6  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7157  010EB8  6ED9               	movwf	fsr2l,c
  7158  010EBA  6ADA               	clrf	fsr2h,c
  7159  010EBC  006F FF78  F062    	movff	postinc2,strncmp@_l
  7160  010EC2  006F FF74  F063    	movff	postdec2,strncmp@_l+1
  7161  010EC8  0EDC               	movlw	low STR_43
  7162  010ECA  6F64               	movwf	strncmp@_r& (0+255),b
  7163  010ECC  0EFF               	movlw	high STR_43
  7164  010ECE  6F65               	movwf	(strncmp@_r+1)& (0+255),b
  7165  010ED0  0E00               	movlw	0
  7166  010ED2  6F67               	movwf	(strncmp@n+1)& (0+255),b
  7167  010ED4  0E03               	movlw	3
  7168  010ED6  6F66               	movwf	strncmp@n& (0+255),b
  7169  010ED8  EC59  F098         	call	_strncmp	;wreg free
  7170  010EDC  5162               	movf	?_strncmp& (0+255),w,b
  7171  010EDE  1163               	iorwf	(?_strncmp+1)& (0+255),w,b
  7172  010EE0  A4D8               	btfss	status,2,c
  7173  010EE2  D04E               	goto	l10266
  7174  010EE4                     u9970:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  7178  010EE4  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7179  010EE6  6ED9               	movwf	fsr2l,c
  7180  010EE8  6ADA               	clrf	fsr2h,c
  7181  010EEA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7182  010EF0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7183  010EF6                     	if	0	;tblptru may be non-zero
  7184  010EF6                     	endif
  7185  010EF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7186  010EF6  0E00               	movlw	low (__mediumconst shr (0+16))
  7187  010EF8  6EF8               	movwf	tblptru,c
  7188  010EFA                     	endif
  7189  010EFA  0008               	tblrd		*
  7190  010EFC  50F5               	movf	tablat,w,c
  7191  010EFE  0A73               	xorlw	115
  7192  010F00  B4D8               	btfsc	status,2,c
  7193  010F02  D005               	goto	l10256
  7194                           
  7195                           ; BSR set to: 0
  7196  010F04  0E00               	movlw	0
  7197  010F06  0101               	movlb	1	; () banked
  7198  010F08  6F79               	movwf	(_vfpfcnvrt$4236+1)& (0+255),b
  7199  010F0A  0E03               	movlw	3
  7200  010F0C  D004               	goto	L3
  7201  010F0E                     l10256:
  7202                           
  7203                           ; BSR set to: 0
  7204  010F0E  0E00               	movlw	0
  7205  010F10  0101               	movlb	1	; () banked
  7206  010F12  6F79               	movwf	(_vfpfcnvrt$4236+1)& (0+255),b
  7207  010F14  0E01               	movlw	1
  7208  010F16                     L3:
  7209  010F16  6F78               	movwf	_vfpfcnvrt$4236& (0+255),b
  7210                           
  7211                           ; BSR set to: 1
  7212  010F18  0100               	movlb	0	; () banked
  7213  010F1A  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7214  010F1C  6ED9               	movwf	fsr2l,c
  7215  010F1E  6ADA               	clrf	fsr2h,c
  7216  010F20  0101               	movlb	1	; () banked
  7217  010F22  5178               	movf	_vfpfcnvrt$4236& (0+255),w,b
  7218  010F24  26DE               	addwf	postinc2,f,c
  7219  010F26  5179               	movf	(_vfpfcnvrt$4236+1)& (0+255),w,b
  7220  010F28  22DD               	addwfc	postdec2,f,c
  7221                           
  7222                           ; BSR set to: 1
  7223                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7224  010F2A  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  7225  010F30  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  7226  010F36  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  7227  010F3C  0E02               	movlw	2
  7228  010F3E  26DE               	addwf	postinc2,f,c
  7229  010F40  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  7230  010F46  0E00               	movlw	0
  7231  010F48  22DD               	addwfc	postdec2,f,c
  7232  010F4A  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  7233  010F50  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  7234  010F56  006F FF78  F174    	movff	postinc2,vfpfcnvrt@cp
  7235  010F5C  006F FF74  F175    	movff	postdec2,vfpfcnvrt@cp+1
  7236                           
  7237                           ; BSR set to: 1
  7238                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  7239  010F62  C0E1  F069         	movff	vfpfcnvrt@fp,stoa@fp
  7240  010F66  C0E2  F06A         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7241  010F6A  C174  F06B         	movff	vfpfcnvrt@cp,stoa@s
  7242  010F6E  C175  F06C         	movff	vfpfcnvrt@cp+1,stoa@s+1
  7243  010F72  ECB7  F099         	call	_stoa	;wreg free
  7244  010F76  C069  F0E1         	movff	?_stoa,?_vfpfcnvrt
  7245  010F7A  C06A  F0E2         	movff	?_stoa+1,?_vfpfcnvrt+1
  7246  010F7E  0012               	return	
  7247  010F80                     l10266:
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  7251  010F80  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7252  010F82  6ED9               	movwf	fsr2l,c
  7253  010F84  6ADA               	clrf	fsr2h,c
  7254  010F86  006F FF7B FFF6     	movff	postinc2,tblptrl
  7255  010F8C  006F FF77 FFF7     	movff	postdec2,tblptrh
  7256  010F92                     	if	0	;tblptru may be non-zero
  7257  010F92                     	endif
  7258  010F92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7259  010F92  0E00               	movlw	low (__mediumconst shr (0+16))
  7260  010F94  6EF8               	movwf	tblptru,c
  7261  010F96                     	endif
  7262  010F96  0008               	tblrd		*
  7263  010F98  50F5               	movf	tablat,w,c
  7264  010F9A  0A75               	xorlw	117
  7265  010F9C  A4D8               	btfss	status,2,c
  7266  010F9E  D048               	goto	l10274
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  7270  010FA0  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7271  010FA2  6ED9               	movwf	fsr2l,c
  7272  010FA4  6ADA               	clrf	fsr2h,c
  7273  010FA6  2ADE               	incf	postinc2,f,c
  7274  010FA8  0E00               	movlw	0
  7275  010FAA  22DD               	addwfc	postdec2,f,c
  7276                           
  7277                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7278  010FAC  0060  F393  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  7279  010FB2  0060  F397  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  7280  010FB8  006F FF7C  F0E6    	movff	indf2,??_vfpfcnvrt
  7281  010FBE  0E02               	movlw	2
  7282  010FC0  26DE               	addwf	postinc2,f,c
  7283  010FC2  006F FF7C  F0E7    	movff	indf2,??_vfpfcnvrt+1
  7284  010FC8  0E00               	movlw	0
  7285  010FCA  22DD               	addwfc	postdec2,f,c
  7286  010FCC  0060  F39B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  7287  010FD2  0060  F39F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  7288  010FD8  006F FF78  F0E8    	movff	postinc2,??_vfpfcnvrt+2
  7289  010FDE  006F FF74  F0E9    	movff	postdec2,??_vfpfcnvrt+3
  7290  010FE4  C0E8  F16C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7291  010FE8  C0E9  F16D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7292  010FEC  0101               	movlb	1	; () banked
  7293  010FEE  6B6E               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7294  010FF0  6B6F               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7295  010FF2  6B70               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7296  010FF4  6B71               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7297  010FF6  6B72               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7298  010FF8  6B73               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7299                           
  7300                           ; BSR set to: 1
  7301                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  7302  010FFA  C0E1  F07D         	movff	vfpfcnvrt@fp,utoa@fp
  7303  010FFE  C0E2  F07E         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  7304  011002  C16C  F07F         	movff	vfpfcnvrt@llu,utoa@d
  7305  011006  C16D  F080         	movff	vfpfcnvrt@llu+1,utoa@d+1
  7306  01100A  C16E  F081         	movff	vfpfcnvrt@llu+2,utoa@d+2
  7307  01100E  C16F  F082         	movff	vfpfcnvrt@llu+3,utoa@d+3
  7308  011012  C170  F083         	movff	vfpfcnvrt@llu+4,utoa@d+4
  7309  011016  C171  F084         	movff	vfpfcnvrt@llu+5,utoa@d+5
  7310  01101A  C172  F085         	movff	vfpfcnvrt@llu+6,utoa@d+6
  7311  01101E  C173  F086         	movff	vfpfcnvrt@llu+7,utoa@d+7
  7312  011022  ECAB  F096         	call	_utoa	;wreg free
  7313  011026  C07D  F0E1         	movff	?_utoa,?_vfpfcnvrt
  7314  01102A  C07E  F0E2         	movff	?_utoa+1,?_vfpfcnvrt+1
  7315  01102E  0012               	return	
  7316  011030                     l10274:
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  7320  011030  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7321  011032  6ED9               	movwf	fsr2l,c
  7322  011034  6ADA               	clrf	fsr2h,c
  7323  011036  006F FF7B FFF6     	movff	postinc2,tblptrl
  7324  01103C  006F FF77 FFF7     	movff	postdec2,tblptrh
  7325  011042                     	if	0	;tblptru may be non-zero
  7326  011042                     	endif
  7327  011042                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7328  011042  0E00               	movlw	low (__mediumconst shr (0+16))
  7329  011044  6EF8               	movwf	tblptru,c
  7330  011046                     	endif
  7331  011046  0008               	tblrd		*
  7332  011048  50F5               	movf	tablat,w,c
  7333  01104A  0A25               	xorlw	37
  7334  01104C  A4D8               	btfss	status,2,c
  7335  01104E  D015               	goto	l10284
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  7339  011050  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7340  011052  6ED9               	movwf	fsr2l,c
  7341  011054  6ADA               	clrf	fsr2h,c
  7342  011056  2ADE               	incf	postinc2,f,c
  7343  011058  0E00               	movlw	0
  7344  01105A  22DD               	addwfc	postdec2,f,c
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  7348  01105C  0E00               	movlw	0
  7349  01105E  6F61               	movwf	(fputc@c+1)& (0+255),b
  7350  011060  0E25               	movlw	37
  7351  011062  6F60               	movwf	fputc@c& (0+255),b
  7352  011064  C0E1  F062         	movff	vfpfcnvrt@fp,fputc@fp
  7353  011068  C0E2  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7354  01106C  EC69  F0A0         	call	_fputc	;wreg free
  7355  011070                     l10280:
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  7359  011070  0E00               	movlw	0
  7360  011072  6FE2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7361  011074  0E01               	movlw	1
  7362  011076  6FE1               	movwf	?_vfpfcnvrt& (0+255),b
  7363  011078  0012               	return	
  7364  01107A                     l10284:
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  7368  01107A  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7369  01107C  6ED9               	movwf	fsr2l,c
  7370  01107E  6ADA               	clrf	fsr2h,c
  7371  011080  2ADE               	incf	postinc2,f,c
  7372  011082  0E00               	movlw	0
  7373  011084  22DD               	addwfc	postdec2,f,c
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  7377  011086  0E00               	movlw	0
  7378  011088  6FE2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7379  01108A  0E00               	movlw	0
  7380  01108C  6FE1               	movwf	?_vfpfcnvrt& (0+255),b
  7381  01108E  0012               	return	
  7382  011090                     l10290:
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  7386  011090  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7387  011092  6ED9               	movwf	fsr2l,c
  7388  011094  6ADA               	clrf	fsr2h,c
  7389  011096  006F FF7B FFF6     	movff	postinc2,tblptrl
  7390  01109C  006F FF77 FFF7     	movff	postdec2,tblptrh
  7391  0110A2                     	if	0	;tblptru may be non-zero
  7392  0110A2                     	endif
  7393  0110A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7394  0110A2  0E00               	movlw	low (__mediumconst shr (0+16))
  7395  0110A4  6EF8               	movwf	tblptru,c
  7396  0110A6                     	endif
  7397  0110A6  0008               	tblrd		*
  7398  0110A8  50F5               	movf	tablat,w,c
  7399  0110AA  6F60               	movwf	fputc@c& (0+255),b
  7400  0110AC  6B61               	clrf	(fputc@c+1)& (0+255),b
  7401  0110AE  C0E1  F062         	movff	vfpfcnvrt@fp,fputc@fp
  7402  0110B2  C0E2  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7403  0110B6  EC69  F0A0         	call	_fputc	;wreg free
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  7407  0110BA  51E3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7408  0110BC  6ED9               	movwf	fsr2l,c
  7409  0110BE  6ADA               	clrf	fsr2h,c
  7410  0110C0  2ADE               	incf	postinc2,f,c
  7411  0110C2  0E00               	movlw	0
  7412  0110C4  22DD               	addwfc	postdec2,f,c
  7413  0110C6  D7D4               	goto	l10280
  7414  0110C8                     __end_of_vfpfcnvrt:
  7415                           	callstack 0
  7416                           
  7417 ;; *************** function _utoa *****************
  7418 ;; Defined at:
  7419 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  7422 ;;		 -> sprintf@f(11), NULL(0), 
  7423 ;;  d               8   31[BANK0 ] unsigned long long 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  n               8   51[BANK0 ] unsigned long long 
  7426 ;;  i               2   59[BANK0 ] int 
  7427 ;;  w               2   49[BANK0 ] int 
  7428 ;;  p               2   47[BANK0 ] int 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  2   29[BANK0 ] int 
  7431 ;; Registers used:
  7432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 3F/1
  7435 ;;		On exit  : 3F/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7438 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7439 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7440 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7441 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7442 ;;Total ram usage:       32 bytes
  7443 ;; Hardware stack levels used: 1
  7444 ;; Hardware stack levels required when called: 12
  7445 ;; This function calls:
  7446 ;;		___lodiv
  7447 ;;		___lomod
  7448 ;;		_pad
  7449 ;; This function is called by:
  7450 ;;		_vfpfcnvrt
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454                           	psect	text11
  7455  012D56                     __ptext11:
  7456                           	callstack 0
  7457  012D56                     _utoa:
  7458                           	callstack 15
  7459                           
  7460                           ; BSR set to: 1
  7461                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;incstack = 0
  7465  012D56  0100               	movlb	0	; () banked
  7466  012D58  AFF9               	btfss	(_prec+1)& (0+255),7,b
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  7470  012D5A  922E               	bcf	_flags^0,1,c
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  7474  012D5C  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  7475  012D5E  D005               	goto	u9680
  7476  012D60  51F9               	movf	(_prec+1)& (0+255),w,b
  7477  012D62  E108               	bnz	l2679
  7478  012D64  05F8               	decf	_prec& (0+255),w,b
  7479  012D66  B0D8               	btfsc	status,0,c
  7480  012D68  D005               	goto	l2679
  7481  012D6A                     u9680:
  7482                           
  7483                           ; BSR set to: 0
  7484  012D6A  0E00               	movlw	0
  7485  012D6C  6F90               	movwf	(utoa@p+1)& (0+255),b
  7486  012D6E  0E01               	movlw	1
  7487  012D70  6F8F               	movwf	utoa@p& (0+255),b
  7488  012D72  D004               	goto	l2681
  7489  012D74                     l2679:
  7490                           
  7491                           ; BSR set to: 0
  7492  012D74  C0F8  F08F         	movff	_prec,utoa@p
  7493  012D78  C0F9  F090         	movff	_prec+1,utoa@p+1
  7494  012D7C                     l2681:
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  7498  012D7C  C02C  F091         	movff	_width,utoa@w
  7499  012D80  C02D  F092         	movff	_width+1,utoa@w+1
  7500                           
  7501                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  7502  012D84  C07F  F093         	movff	utoa@d,utoa@n
  7503  012D88  C080  F094         	movff	utoa@d+1,utoa@n+1
  7504  012D8C  C081  F095         	movff	utoa@d+2,utoa@n+2
  7505  012D90  C082  F096         	movff	utoa@d+3,utoa@n+3
  7506  012D94  C083  F097         	movff	utoa@d+4,utoa@n+4
  7507  012D98  C084  F098         	movff	utoa@d+5,utoa@n+5
  7508  012D9C  C085  F099         	movff	utoa@d+6,utoa@n+6
  7509  012DA0  C086  F09A         	movff	utoa@d+7,utoa@n+7
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  7513  012DA4  0E00               	movlw	0
  7514  012DA6  6F9C               	movwf	(utoa@i+1)& (0+255),b
  7515  012DA8  0E4F               	movlw	79
  7516  012DAA  6F9B               	movwf	utoa@i& (0+255),b
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  7520  012DAC  0E00               	movlw	0
  7521  012DAE  0102               	movlb	2	; () banked
  7522  012DB0  6F8F               	movwf	(_dbuf+79)& (0+255),b
  7523                           
  7524                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7525  012DB2  D076               	goto	l9984
  7526  012DB4                     l9974:
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  7530  012DB4  079B               	decf	utoa@i& (0+255),f,b
  7531  012DB6  A0D8               	btfss	status,0,c
  7532  012DB8  079C               	decf	(utoa@i+1)& (0+255),f,b
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  7536  012DBA  0E40               	movlw	low _dbuf
  7537  012DBC  259B               	addwf	utoa@i& (0+255),w,b
  7538  012DBE  6ED9               	movwf	fsr2l,c
  7539  012DC0  0E02               	movlw	high _dbuf
  7540  012DC2  219C               	addwfc	(utoa@i+1)& (0+255),w,b
  7541  012DC4  6EDA               	movwf	fsr2h,c
  7542  012DC6  C093  F060         	movff	utoa@n,___lomod@dividend
  7543  012DCA  C094  F061         	movff	utoa@n+1,___lomod@dividend+1
  7544  012DCE  C095  F062         	movff	utoa@n+2,___lomod@dividend+2
  7545  012DD2  C096  F063         	movff	utoa@n+3,___lomod@dividend+3
  7546  012DD6  C097  F064         	movff	utoa@n+4,___lomod@dividend+4
  7547  012DDA  C098  F065         	movff	utoa@n+5,___lomod@dividend+5
  7548  012DDE  C099  F066         	movff	utoa@n+6,___lomod@dividend+6
  7549  012DE2  C09A  F067         	movff	utoa@n+7,___lomod@dividend+7
  7550  012DE6  0E0A               	movlw	10
  7551  012DE8  6F68               	movwf	___lomod@divisor& (0+255),b
  7552  012DEA  0E00               	movlw	0
  7553  012DEC  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  7554  012DEE  0E00               	movlw	0
  7555  012DF0  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  7556  012DF2  0E00               	movlw	0
  7557  012DF4  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  7558  012DF6  0E00               	movlw	0
  7559  012DF8  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  7560  012DFA  0E00               	movlw	0
  7561  012DFC  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  7562  012DFE  0E00               	movlw	0
  7563  012E00  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  7564  012E02  0E00               	movlw	0
  7565  012E04  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  7566  012E06  ECC4  F0A0         	call	___lomod	;wreg free
  7567  012E0A  C060  F087         	movff	?___lomod,??_utoa
  7568  012E0E  C061  F088         	movff	?___lomod+1,??_utoa+1
  7569  012E12  C062  F089         	movff	?___lomod+2,??_utoa+2
  7570  012E16  C063  F08A         	movff	?___lomod+3,??_utoa+3
  7571  012E1A  C064  F08B         	movff	?___lomod+4,??_utoa+4
  7572  012E1E  C065  F08C         	movff	?___lomod+5,??_utoa+5
  7573  012E22  C066  F08D         	movff	?___lomod+6,??_utoa+6
  7574  012E26  C067  F08E         	movff	?___lomod+7,??_utoa+7
  7575  012E2A  5187               	movf	??_utoa& (0+255),w,b
  7576  012E2C  0F30               	addlw	48
  7577  012E2E  6EDF               	movwf	indf2,c
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  7581  012E30  078F               	decf	utoa@p& (0+255),f,b
  7582  012E32  A0D8               	btfss	status,0,c
  7583  012E34  0790               	decf	(utoa@p+1)& (0+255),f,b
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  7587  012E36  0791               	decf	utoa@w& (0+255),f,b
  7588  012E38  A0D8               	btfss	status,0,c
  7589  012E3A  0792               	decf	(utoa@w+1)& (0+255),f,b
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  7593  012E3C  C093  F060         	movff	utoa@n,___lodiv@dividend
  7594  012E40  C094  F061         	movff	utoa@n+1,___lodiv@dividend+1
  7595  012E44  C095  F062         	movff	utoa@n+2,___lodiv@dividend+2
  7596  012E48  C096  F063         	movff	utoa@n+3,___lodiv@dividend+3
  7597  012E4C  C097  F064         	movff	utoa@n+4,___lodiv@dividend+4
  7598  012E50  C098  F065         	movff	utoa@n+5,___lodiv@dividend+5
  7599  012E54  C099  F066         	movff	utoa@n+6,___lodiv@dividend+6
  7600  012E58  C09A  F067         	movff	utoa@n+7,___lodiv@dividend+7
  7601  012E5C  0E0A               	movlw	10
  7602  012E5E  6F68               	movwf	___lodiv@divisor& (0+255),b
  7603  012E60  0E00               	movlw	0
  7604  012E62  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  7605  012E64  0E00               	movlw	0
  7606  012E66  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  7607  012E68  0E00               	movlw	0
  7608  012E6A  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  7609  012E6C  0E00               	movlw	0
  7610  012E6E  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  7611  012E70  0E00               	movlw	0
  7612  012E72  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  7613  012E74  0E00               	movlw	0
  7614  012E76  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  7615  012E78  0E00               	movlw	0
  7616  012E7A  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  7617  012E7C  EC19  F09E         	call	___lodiv	;wreg free
  7618  012E80  C060  F093         	movff	?___lodiv,utoa@n
  7619  012E84  C061  F094         	movff	?___lodiv+1,utoa@n+1
  7620  012E88  C062  F095         	movff	?___lodiv+2,utoa@n+2
  7621  012E8C  C063  F096         	movff	?___lodiv+3,utoa@n+3
  7622  012E90  C064  F097         	movff	?___lodiv+4,utoa@n+4
  7623  012E94  C065  F098         	movff	?___lodiv+5,utoa@n+5
  7624  012E98  C066  F099         	movff	?___lodiv+6,utoa@n+6
  7625  012E9C  C067  F09A         	movff	?___lodiv+7,utoa@n+7
  7626  012EA0                     l9984:
  7627                           
  7628                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  7629  012EA0  0100               	movlb	0	; () banked
  7630  012EA2  519B               	movf	utoa@i& (0+255),w,b
  7631  012EA4  119C               	iorwf	(utoa@i+1)& (0+255),w,b
  7632  012EA6  B4D8               	btfsc	status,2,c
  7633  012EA8  D01A               	goto	u9730
  7634                           
  7635                           ; BSR set to: 0
  7636  012EAA  5193               	movf	utoa@n& (0+255),w,b
  7637  012EAC  1194               	iorwf	(utoa@n+1)& (0+255),w,b
  7638  012EAE  1195               	iorwf	(utoa@n+2)& (0+255),w,b
  7639  012EB0  1196               	iorwf	(utoa@n+3)& (0+255),w,b
  7640  012EB2  1197               	iorwf	(utoa@n+4)& (0+255),w,b
  7641  012EB4  1198               	iorwf	(utoa@n+5)& (0+255),w,b
  7642  012EB6  1199               	iorwf	(utoa@n+6)& (0+255),w,b
  7643  012EB8  119A               	iorwf	(utoa@n+7)& (0+255),w,b
  7644  012EBA  A4D8               	btfss	status,2,c
  7645  012EBC  D77B               	goto	l9974
  7646                           
  7647                           ; BSR set to: 0
  7648  012EBE  BF90               	btfsc	(utoa@p+1)& (0+255),7,b
  7649  012EC0  D005               	goto	u9710
  7650  012EC2  5190               	movf	(utoa@p+1)& (0+255),w,b
  7651  012EC4  E102               	bnz	u9711
  7652  012EC6  058F               	decf	utoa@p& (0+255),w,b
  7653  012EC8  B0D8               	btfsc	status,0,c
  7654  012ECA                     u9711:
  7655  012ECA  D774               	goto	l9974
  7656  012ECC                     u9710:
  7657                           
  7658                           ; BSR set to: 0
  7659  012ECC  BF92               	btfsc	(utoa@w+1)& (0+255),7,b
  7660  012ECE  D007               	goto	u9730
  7661  012ED0  5192               	movf	(utoa@w+1)& (0+255),w,b
  7662  012ED2  E103               	bnz	u9720
  7663  012ED4  0591               	decf	utoa@w& (0+255),w,b
  7664  012ED6  A0D8               	btfss	status,0,c
  7665  012ED8  D002               	goto	u9730
  7666  012EDA                     u9720:
  7667                           
  7668                           ; BSR set to: 0
  7669  012EDA  B22E               	btfsc	_flags^0,1,c
  7670  012EDC  D76B               	goto	l9974
  7671  012EDE                     u9730:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  7675  012EDE  C07D  F072         	movff	utoa@fp,pad@fp
  7676  012EE2  C07E  F073         	movff	utoa@fp+1,pad@fp+1
  7677  012EE6  0E40               	movlw	low _dbuf
  7678  012EE8  259B               	addwf	utoa@i& (0+255),w,b
  7679  012EEA  6F74               	movwf	pad@buf& (0+255),b
  7680  012EEC  0E02               	movlw	high _dbuf
  7681  012EEE  219C               	addwfc	(utoa@i+1)& (0+255),w,b
  7682  012EF0  6F75               	movwf	(pad@buf+1)& (0+255),b
  7683  012EF2  C091  F076         	movff	utoa@w,pad@p
  7684  012EF6  C092  F077         	movff	utoa@w+1,pad@p+1
  7685  012EFA  EC6C  F0A1         	call	_pad	;wreg free
  7686  012EFE  C072  F07D         	movff	?_pad,?_utoa
  7687  012F02  C073  F07E         	movff	?_pad+1,?_utoa+1
  7688                           
  7689                           ; BSR set to: 0
  7690  012F06  0012               	return		;funcret
  7691  012F08                     __end_of_utoa:
  7692                           	callstack 0
  7693                           
  7694 ;; *************** function ___lomod *****************
  7695 ;; Defined at:
  7696 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  dividend        8    0[BANK0 ] unsigned long long 
  7699 ;;  divisor         8    8[BANK0 ] unsigned long long 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  counter         1   31[COMRAM] unsigned char 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  8    0[BANK0 ] unsigned long long 
  7704 ;; Registers used:
  7705 ;;		wreg, status,2, status,0
  7706 ;; Tracked objects:
  7707 ;;		On entry : 3F/0
  7708 ;;		On exit  : 3F/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7711 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7714 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7715 ;;Total ram usage:       17 bytes
  7716 ;; Hardware stack levels used: 1
  7717 ;; Hardware stack levels required when called: 7
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_utoa
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text12
  7726  014188                     __ptext12:
  7727                           	callstack 0
  7728  014188                     ___lomod:
  7729                           	callstack 19
  7730                           
  7731                           ; BSR set to: 0
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;incstack = 0
  7735  014188  5168               	movf	___lomod@divisor& (0+255),w,b
  7736  01418A  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  7737  01418C  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  7738  01418E  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  7739  014190  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  7740  014192  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  7741  014194  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  7742  014196  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  7743  014198  B4D8               	btfsc	status,2,c
  7744  01419A  D03C               	goto	l2272
  7745                           
  7746                           ; BSR set to: 0
  7747  01419C  0E01               	movlw	1
  7748  01419E  6E20               	movwf	___lomod@counter^0,c
  7749  0141A0  D00A               	goto	l9426
  7750  0141A2                     l9424:
  7751                           
  7752                           ; BSR set to: 0
  7753  0141A2  90D8               	bcf	status,0,c
  7754  0141A4  3768               	rlcf	___lomod@divisor& (0+255),f,b
  7755  0141A6  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  7756  0141A8  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  7757  0141AA  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  7758  0141AC  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  7759  0141AE  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  7760  0141B0  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  7761  0141B2  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  7762  0141B4  2A20               	incf	___lomod@counter^0,f,c
  7763  0141B6                     l9426:
  7764                           
  7765                           ; BSR set to: 0
  7766  0141B6  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  7767  0141B8  D7F4               	goto	l9424
  7768  0141BA                     u8620:
  7769                           
  7770                           ; BSR set to: 0
  7771  0141BA  5168               	movf	___lomod@divisor& (0+255),w,b
  7772  0141BC  5D60               	subwf	___lomod@dividend& (0+255),w,b
  7773  0141BE  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  7774  0141C0  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  7775  0141C2  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  7776  0141C4  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  7777  0141C6  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  7778  0141C8  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  7779  0141CA  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  7780  0141CC  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  7781  0141CE  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  7782  0141D0  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  7783  0141D2  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  7784  0141D4  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  7785  0141D6  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  7786  0141D8  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  7787  0141DA  A0D8               	btfss	status,0,c
  7788  0141DC  D010               	goto	l9432
  7789                           
  7790                           ; BSR set to: 0
  7791  0141DE  5168               	movf	___lomod@divisor& (0+255),w,b
  7792  0141E0  5F60               	subwf	___lomod@dividend& (0+255),f,b
  7793  0141E2  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  7794  0141E4  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  7795  0141E6  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  7796  0141E8  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  7797  0141EA  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  7798  0141EC  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  7799  0141EE  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  7800  0141F0  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  7801  0141F2  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  7802  0141F4  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  7803  0141F6  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  7804  0141F8  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  7805  0141FA  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  7806  0141FC  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  7807  0141FE                     l9432:
  7808                           
  7809                           ; BSR set to: 0
  7810  0141FE  90D8               	bcf	status,0,c
  7811  014200  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  7812  014202  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  7813  014204  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  7814  014206  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  7815  014208  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  7816  01420A  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  7817  01420C  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  7818  01420E  3368               	rrcf	___lomod@divisor& (0+255),f,b
  7819                           
  7820                           ; BSR set to: 0
  7821  014210  2E20               	decfsz	___lomod@counter^0,f,c
  7822  014212  D7D3               	goto	u8620
  7823  014214                     l2272:
  7824                           
  7825                           ; BSR set to: 0
  7826  014214  C060  F060         	movff	___lomod@dividend,?___lomod
  7827  014218  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  7828  01421C  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  7829  014220  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  7830  014224  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  7831  014228  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  7832  01422C  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  7833  014230  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  7834                           
  7835                           ; BSR set to: 0
  7836  014234  0012               	return		;funcret
  7837  014236                     __end_of___lomod:
  7838                           	callstack 0
  7839                           
  7840 ;; *************** function ___lodiv *****************
  7841 ;; Defined at:
  7842 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  dividend        8    0[BANK0 ] unsigned long long 
  7845 ;;  divisor         8    8[BANK0 ] unsigned long long 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  quotient        8   16[BANK0 ] unsigned long long 
  7848 ;;  counter         1   24[BANK0 ] unsigned char 
  7849 ;; Return value:  Size  Location     Type
  7850 ;;                  8    0[BANK0 ] unsigned long long 
  7851 ;; Registers used:
  7852 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7853 ;; Tracked objects:
  7854 ;;		On entry : 3F/0
  7855 ;;		On exit  : 3F/0
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7858 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7859 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7861 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7862 ;;Total ram usage:       25 bytes
  7863 ;; Hardware stack levels used: 1
  7864 ;; Hardware stack levels required when called: 7
  7865 ;; This function calls:
  7866 ;;		Nothing
  7867 ;; This function is called by:
  7868 ;;		_utoa
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           	psect	text13
  7873  013C32                     __ptext13:
  7874                           	callstack 0
  7875  013C32                     ___lodiv:
  7876                           	callstack 19
  7877                           
  7878                           ; BSR set to: 0
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;incstack = 0
  7882  013C32  EE20  F070         	lfsr	2,___lodiv@quotient
  7883  013C36  0E07               	movlw	7
  7884  013C38                     u8571:
  7885  013C38  6ADE               	clrf	postinc2,c
  7886  013C3A  06E8               	decf	wreg,f,c
  7887  013C3C  E2FD               	bc	u8571
  7888                           
  7889                           ; BSR set to: 0
  7890  013C3E  5168               	movf	___lodiv@divisor& (0+255),w,b
  7891  013C40  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  7892  013C42  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  7893  013C44  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  7894  013C46  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  7895  013C48  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  7896  013C4A  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  7897  013C4C  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  7898  013C4E  B4D8               	btfsc	status,2,c
  7899  013C50  D046               	goto	l2262
  7900                           
  7901                           ; BSR set to: 0
  7902  013C52  0E01               	movlw	1
  7903  013C54  6F78               	movwf	___lodiv@counter& (0+255),b
  7904  013C56  D00A               	goto	l9406
  7905  013C58                     l9404:
  7906                           
  7907                           ; BSR set to: 0
  7908  013C58  90D8               	bcf	status,0,c
  7909  013C5A  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  7910  013C5C  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  7911  013C5E  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  7912  013C60  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  7913  013C62  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  7914  013C64  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  7915  013C66  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  7916  013C68  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  7917  013C6A  2B78               	incf	___lodiv@counter& (0+255),f,b
  7918  013C6C                     l9406:
  7919                           
  7920                           ; BSR set to: 0
  7921  013C6C  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  7922  013C6E  D7F4               	goto	l9404
  7923  013C70                     u8590:
  7924                           
  7925                           ; BSR set to: 0
  7926  013C70  90D8               	bcf	status,0,c
  7927  013C72  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  7928  013C74  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  7929  013C76  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  7930  013C78  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  7931  013C7A  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  7932  013C7C  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  7933  013C7E  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  7934  013C80  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  7935                           
  7936                           ; BSR set to: 0
  7937  013C82  5168               	movf	___lodiv@divisor& (0+255),w,b
  7938  013C84  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  7939  013C86  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  7940  013C88  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  7941  013C8A  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  7942  013C8C  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  7943  013C8E  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  7944  013C90  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  7945  013C92  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  7946  013C94  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  7947  013C96  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  7948  013C98  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  7949  013C9A  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  7950  013C9C  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  7951  013C9E  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  7952  013CA0  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  7953  013CA2  A0D8               	btfss	status,0,c
  7954  013CA4  D011               	goto	l9416
  7955                           
  7956                           ; BSR set to: 0
  7957  013CA6  5168               	movf	___lodiv@divisor& (0+255),w,b
  7958  013CA8  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  7959  013CAA  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  7960  013CAC  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  7961  013CAE  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  7962  013CB0  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  7963  013CB2  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  7964  013CB4  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  7965  013CB6  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  7966  013CB8  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  7967  013CBA  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  7968  013CBC  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  7969  013CBE  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  7970  013CC0  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  7971  013CC2  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  7972  013CC4  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  7973                           
  7974                           ; BSR set to: 0
  7975  013CC6  8170               	bsf	___lodiv@quotient& (0+255),0,b
  7976  013CC8                     l9416:
  7977                           
  7978                           ; BSR set to: 0
  7979  013CC8  90D8               	bcf	status,0,c
  7980  013CCA  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  7981  013CCC  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  7982  013CCE  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  7983  013CD0  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  7984  013CD2  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  7985  013CD4  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  7986  013CD6  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  7987  013CD8  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  7988                           
  7989                           ; BSR set to: 0
  7990  013CDA  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  7991  013CDC  D7C9               	goto	u8590
  7992  013CDE                     l2262:
  7993                           
  7994                           ; BSR set to: 0
  7995  013CDE  C070  F060         	movff	___lodiv@quotient,?___lodiv
  7996  013CE2  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  7997  013CE6  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  7998  013CEA  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  7999  013CEE  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  8000  013CF2  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  8001  013CF6  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  8002  013CFA  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  8003                           
  8004                           ; BSR set to: 0
  8005  013CFE  0012               	return		;funcret
  8006  013D00                     __end_of___lodiv:
  8007                           	callstack 0
  8008                           
  8009 ;; *************** function _stoa *****************
  8010 ;; Defined at:
  8011 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  8014 ;;		 -> sprintf@f(11), NULL(0), 
  8015 ;;  s               2   11[BANK0 ] PTR unsigned char 
  8016 ;;		 -> ?_printf(2), ?_sprintf(2), build_version(14), STR_2(9), 
  8017 ;;		 -> STR_1(12), 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;  nuls            7   14[BANK0 ] unsigned char [7]
  8020 ;;  l               2   29[BANK0 ] int 
  8021 ;;  p               2   27[BANK0 ] int 
  8022 ;;  cp              2   25[BANK0 ] PTR unsigned char 
  8023 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), build_version(14), 
  8024 ;;		 -> STR_2(9), STR_1(12), 
  8025 ;;  w               2   23[BANK0 ] int 
  8026 ;;  i               2   21[BANK0 ] int 
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  2    9[BANK0 ] int 
  8029 ;; Registers used:
  8030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8031 ;; Tracked objects:
  8032 ;;		On entry : 3F/1
  8033 ;;		On exit  : 3F/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8036 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8037 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8038 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8039 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8040 ;;Total ram usage:       22 bytes
  8041 ;; Hardware stack levels used: 1
  8042 ;; Hardware stack levels required when called: 10
  8043 ;; This function calls:
  8044 ;;		_fputc
  8045 ;;		_strlen
  8046 ;; This function is called by:
  8047 ;;		_vfpfcnvrt
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text14
  8052  01336E                     __ptext14:
  8053                           	callstack 0
  8054  01336E                     _stoa:
  8055                           	callstack 17
  8056                           
  8057                           ; BSR set to: 1
  8058                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;incstack = 0
  8062  01336E  EE20  F1A4         	lfsr	2,stoa@F1164
  8063  013372  EE10  F06E         	lfsr	1,stoa@nuls
  8064  013376  0E06               	movlw	6
  8065  013378                     u9571:
  8066  013378  006F FF6F FFE3     	movff	plusw2,plusw1
  8067  01337E  06E8               	decf	wreg,f,c
  8068  013380  E2FB               	bc	u9571
  8069                           
  8070                           ; BSR set to: 1
  8071                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  8072  013382  C06B  F079         	movff	stoa@s,stoa@cp
  8073  013386  C06C  F07A         	movff	stoa@s+1,stoa@cp+1
  8074                           
  8075                           ; BSR set to: 1
  8076                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  8077  01338A  0100               	movlb	0	; () banked
  8078  01338C  5179               	movf	stoa@cp& (0+255),w,b
  8079  01338E  117A               	iorwf	(stoa@cp+1)& (0+255),w,b
  8080  013390  A4D8               	btfss	status,2,c
  8081  013392  D003               	goto	l9928
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  8085  013394  0E6E               	movlw	low stoa@nuls
  8086  013396  6F79               	movwf	stoa@cp& (0+255),b
  8087  013398  6B7A               	clrf	(stoa@cp+1)& (0+255),b
  8088  01339A                     l9928:
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  8092  01339A  C079  F020         	movff	stoa@cp,strlen@s
  8093  01339E  C07A  F021         	movff	stoa@cp+1,strlen@s+1
  8094  0133A2  EC02  F0A5         	call	_strlen	;wreg free
  8095  0133A6  C020  F07D         	movff	?_strlen,stoa@l
  8096  0133AA  C021  F07E         	movff	?_strlen+1,stoa@l+1
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  8100  0133AE  C0F8  F07B         	movff	_prec,stoa@p
  8101  0133B2  C0F9  F07C         	movff	_prec+1,stoa@p+1
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8105  0133B6  BF7C               	btfsc	(stoa@p+1)& (0+255),7,b
  8106  0133B8  D00E               	goto	l2660
  8107                           
  8108                           ; BSR set to: 0
  8109  0133BA  517D               	movf	stoa@l& (0+255),w,b
  8110  0133BC  5D7B               	subwf	stoa@p& (0+255),w,b
  8111  0133BE  517C               	movf	(stoa@p+1)& (0+255),w,b
  8112  0133C0  0A80               	xorlw	128
  8113  0133C2  6F6D               	movwf	??_stoa& (0+255),b
  8114  0133C4  517E               	movf	(stoa@l+1)& (0+255),w,b
  8115  0133C6  0A80               	xorlw	128
  8116  0133C8  596D               	subwfb	??_stoa& (0+255),w,b
  8117  0133CA  B0D8               	btfsc	status,0,c
  8118  0133CC  D004               	goto	l2660
  8119                           
  8120                           ; BSR set to: 0
  8121  0133CE  C07B  F07D         	movff	stoa@p,stoa@l
  8122  0133D2  C07C  F07E         	movff	stoa@p+1,stoa@l+1
  8123  0133D6                     l2660:
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  8127  0133D6  C07D  F07B         	movff	stoa@l,stoa@p
  8128  0133DA  C07E  F07C         	movff	stoa@l+1,stoa@p+1
  8129                           
  8130                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  8131  0133DE  C02C  F077         	movff	_width,stoa@w
  8132  0133E2  C02D  F078         	movff	_width+1,stoa@w+1
  8133                           
  8134                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  8135  0133E6  A02E               	btfss	_flags^0,0,c
  8136  0133E8  D00D               	goto	l9942
  8137  0133EA  D016               	goto	u9620
  8138  0133EC                     l9938:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  8142  0133EC  0E00               	movlw	0
  8143  0133EE  6F61               	movwf	(fputc@c+1)& (0+255),b
  8144  0133F0  0E20               	movlw	32
  8145  0133F2  6F60               	movwf	fputc@c& (0+255),b
  8146  0133F4  C069  F062         	movff	stoa@fp,fputc@fp
  8147  0133F8  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  8148  0133FC  EC69  F0A0         	call	_fputc	;wreg free
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  8152  013400  4B7D               	infsnz	stoa@l& (0+255),f,b
  8153  013402  2B7E               	incf	(stoa@l+1)& (0+255),f,b
  8154  013404                     l9942:
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  8158  013404  5177               	movf	stoa@w& (0+255),w,b
  8159  013406  5D7D               	subwf	stoa@l& (0+255),w,b
  8160  013408  517E               	movf	(stoa@l+1)& (0+255),w,b
  8161  01340A  0A80               	xorlw	128
  8162  01340C  6F6D               	movwf	??_stoa& (0+255),b
  8163  01340E  5178               	movf	(stoa@w+1)& (0+255),w,b
  8164  013410  0A80               	xorlw	128
  8165  013412  596D               	subwfb	??_stoa& (0+255),w,b
  8166  013414  A0D8               	btfss	status,0,c
  8167  013416  D7EA               	goto	l9938
  8168  013418                     u9620:
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  8172  013418  0E00               	movlw	0
  8173  01341A  6F76               	movwf	(stoa@i+1)& (0+255),b
  8174  01341C  0E00               	movlw	0
  8175  01341E  6F75               	movwf	stoa@i& (0+255),b
  8176                           
  8177                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  8178  013420  D024               	goto	l9952
  8179  013422                     l9946:
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  8183  013422  0060  F1E7  FFF6   	movff	stoa@cp,tblptrl
  8184  013428  0060  F1EB  FFF7   	movff	stoa@cp+1,tblptrh
  8185  01342E  0E00               	movlw	low (__mediumconst shr (0+16))
  8186  013430  6EF8               	movwf	tblptru,c
  8187  013432  0E1F               	movlw	(high __ramtop+-1)
  8188  013434  64F7               	cpfsgt	tblptrh,c
  8189  013436  D003               	bra	u9637
  8190  013438  0008               	tblrd		*
  8191  01343A  50F5               	movf	tablat,w,c
  8192  01343C  D007               	bra	u9630
  8193  01343E                     u9637:
  8194  01343E  006F FFDB FFE1     	movff	tblptrl,fsr1l
  8195  013444  006F FFDF FFE2     	movff	tblptrh,fsr1h
  8196  01344A  50E7               	movf	indf1,w,c
  8197  01344C                     u9630:
  8198  01344C  0100               	movlb	0	; () banked
  8199  01344E  6F6D               	movwf	??_stoa& (0+255),b
  8200  013450  516D               	movf	??_stoa& (0+255),w,b
  8201  013452  6F60               	movwf	fputc@c& (0+255),b
  8202  013454  6B61               	clrf	(fputc@c+1)& (0+255),b
  8203  013456  C069  F062         	movff	stoa@fp,fputc@fp
  8204  01345A  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  8205  01345E  EC69  F0A0         	call	_fputc	;wreg free
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  8209  013462  4B79               	infsnz	stoa@cp& (0+255),f,b
  8210  013464  2B7A               	incf	(stoa@cp+1)& (0+255),f,b
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  8214  013466  4B75               	infsnz	stoa@i& (0+255),f,b
  8215  013468  2B76               	incf	(stoa@i+1)& (0+255),f,b
  8216  01346A                     l9952:
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  8220  01346A  517B               	movf	stoa@p& (0+255),w,b
  8221  01346C  5D75               	subwf	stoa@i& (0+255),w,b
  8222  01346E  5176               	movf	(stoa@i+1)& (0+255),w,b
  8223  013470  0A80               	xorlw	128
  8224  013472  6F6D               	movwf	??_stoa& (0+255),b
  8225  013474  517C               	movf	(stoa@p+1)& (0+255),w,b
  8226  013476  0A80               	xorlw	128
  8227  013478  596D               	subwfb	??_stoa& (0+255),w,b
  8228  01347A  A0D8               	btfss	status,0,c
  8229  01347C  D7D2               	goto	l9946
  8230                           
  8231                           ; BSR set to: 0
  8232                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  8233  01347E  B02E               	btfsc	_flags^0,0,c
  8234  013480  D00D               	goto	l9960
  8235  013482  D016               	goto	u9660
  8236  013484                     l9956:
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  8240  013484  0E00               	movlw	0
  8241  013486  6F61               	movwf	(fputc@c+1)& (0+255),b
  8242  013488  0E20               	movlw	32
  8243  01348A  6F60               	movwf	fputc@c& (0+255),b
  8244  01348C  C069  F062         	movff	stoa@fp,fputc@fp
  8245  013490  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  8246  013494  EC69  F0A0         	call	_fputc	;wreg free
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  8250  013498  4B7D               	infsnz	stoa@l& (0+255),f,b
  8251  01349A  2B7E               	incf	(stoa@l+1)& (0+255),f,b
  8252  01349C                     l9960:
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  8256  01349C  5177               	movf	stoa@w& (0+255),w,b
  8257  01349E  5D7D               	subwf	stoa@l& (0+255),w,b
  8258  0134A0  517E               	movf	(stoa@l+1)& (0+255),w,b
  8259  0134A2  0A80               	xorlw	128
  8260  0134A4  6F6D               	movwf	??_stoa& (0+255),b
  8261  0134A6  5178               	movf	(stoa@w+1)& (0+255),w,b
  8262  0134A8  0A80               	xorlw	128
  8263  0134AA  596D               	subwfb	??_stoa& (0+255),w,b
  8264  0134AC  A0D8               	btfss	status,0,c
  8265  0134AE  D7EA               	goto	l9956
  8266  0134B0                     u9660:
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  8270                           
  8271                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  8272  0134B0  C07D  F069         	movff	stoa@l,?_stoa
  8273  0134B4  C07E  F06A         	movff	stoa@l+1,?_stoa+1
  8274                           
  8275                           ; BSR set to: 0
  8276  0134B8  0012               	return		;funcret
  8277  0134BA                     __end_of_stoa:
  8278                           	callstack 0
  8279                           
  8280 ;; *************** function _efgtoa *****************
  8281 ;; Defined at:
  8282 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  8285 ;;		 -> sprintf@f(11), NULL(0), 
  8286 ;;  f               4   69[BANK0 ] PTR struct _IO_FILE
  8287 ;;  c               1   73[BANK0 ] unsigned char 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  u               4  125[BANK0 ] unsigned char 
  8290 ;;  g               4  117[BANK0 ] unsigned char 
  8291 ;;  l               4  111[BANK0 ] unsigned char 
  8292 ;;  h               4  107[BANK0 ] unsigned char 
  8293 ;;  ou              4   93[BANK0 ] unsigned char 
  8294 ;;  n               2  123[BANK0 ] int 
  8295 ;;  e               2  121[BANK0 ] int 
  8296 ;;  i               2  115[BANK0 ] int 
  8297 ;;  w               2  103[BANK0 ] int 
  8298 ;;  p               2  101[BANK0 ] int 
  8299 ;;  sign            2   99[BANK0 ] int 
  8300 ;;  d               2   97[BANK0 ] int 
  8301 ;;  m               2   91[BANK0 ] int 
  8302 ;;  ne              2   89[BANK0 ] int 
  8303 ;;  pp              2   87[BANK0 ] int 
  8304 ;;  t               2   85[BANK0 ] int 
  8305 ;;  mode            1  106[BANK0 ] unsigned char 
  8306 ;;  nmode           1  105[BANK0 ] unsigned char 
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  2   67[BANK0 ] int 
  8309 ;; Registers used:
  8310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 3F/0
  8313 ;;		On exit  : 3F/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8316 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8317 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8318 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8319 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8320 ;;Total ram usage:       62 bytes
  8321 ;; Hardware stack levels used: 1
  8322 ;; Hardware stack levels required when called: 12
  8323 ;; This function calls:
  8324 ;;		___awdiv
  8325 ;;		___awmod
  8326 ;;		___fladd
  8327 ;;		___fldiv
  8328 ;;		___fleq
  8329 ;;		___flge
  8330 ;;		___flmul
  8331 ;;		___flneg
  8332 ;;		___flsub
  8333 ;;		___fltol
  8334 ;;		___fpclassifyf
  8335 ;;		_floorf
  8336 ;;		_isupper
  8337 ;;		_pad
  8338 ;;		_strcpy
  8339 ;;		_tolower
  8340 ;; This function is called by:
  8341 ;;		_vfpfcnvrt
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text15
  8346  010000                     __ptext15:
  8347                           	callstack 0
  8348  010000                     _efgtoa:
  8349                           	callstack 15
  8350                           
  8351                           ; BSR set to: 0
  8352                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;incstack = 0
  8356  010000  0E00               	movlw	0
  8357  010002  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  8358  010004  0E00               	movlw	0
  8359  010006  6FC3               	movwf	efgtoa@sign& (0+255),b
  8360                           
  8361                           ; BSR set to: 0
  8362                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  8363  010008  C0A5  F0D5         	movff	efgtoa@f,efgtoa@g
  8364  01000C  C0A6  F0D6         	movff	efgtoa@f+1,efgtoa@g+1
  8365  010010  C0A7  F0D7         	movff	efgtoa@f+2,efgtoa@g+2
  8366  010014  C0A8  F0D8         	movff	efgtoa@f+3,efgtoa@g+3
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  8370  010018  AFD8               	btfss	(efgtoa@g+3)& (0+255),7,b
  8371  01001A  D016               	goto	l9624
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  8375  01001C  0E00               	movlw	0
  8376  01001E  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  8377  010020  0E01               	movlw	1
  8378  010022  6FC3               	movwf	efgtoa@sign& (0+255),b
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  8382  010024  C0D5  F060         	movff	efgtoa@g,___flneg@f1
  8383  010028  C0D6  F061         	movff	efgtoa@g+1,___flneg@f1+1
  8384  01002C  C0D7  F062         	movff	efgtoa@g+2,___flneg@f1+2
  8385  010030  C0D8  F063         	movff	efgtoa@g+3,___flneg@f1+3
  8386  010034  ECB6  F0A8         	call	___flneg	;wreg free
  8387  010038  C060  F0D5         	movff	?___flneg,efgtoa@g
  8388  01003C  C061  F0D6         	movff	?___flneg+1,efgtoa@g+1
  8389  010040  C062  F0D7         	movff	?___flneg+2,efgtoa@g+2
  8390  010044  C063  F0D8         	movff	?___flneg+3,efgtoa@g+3
  8391  010048                     l9624:
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  8395  010048  0E00               	movlw	0
  8396  01004A  6FDC               	movwf	(efgtoa@n+1)& (0+255),b
  8397  01004C  0E00               	movlw	0
  8398  01004E  6FDB               	movwf	efgtoa@n& (0+255),b
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  8402  010050  C02C  F0C7         	movff	_width,efgtoa@w
  8403  010054  C02D  F0C8         	movff	_width+1,efgtoa@w+1
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  8407  010058  51C3               	movf	efgtoa@sign& (0+255),w,b
  8408  01005A  11C4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8409  01005C  A4D8               	btfss	status,2,c
  8410  01005E  D002               	goto	u9110
  8411                           
  8412                           ; BSR set to: 0
  8413  010060  A42E               	btfss	_flags^0,2,c
  8414  010062  D013               	goto	l9644
  8415  010064                     u9110:
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  8419  010064  51C3               	movf	efgtoa@sign& (0+255),w,b
  8420  010066  11C4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8421  010068  A4D8               	btfss	status,2,c
  8422  01006A  D004               	goto	l9636
  8423                           
  8424                           ; BSR set to: 0
  8425  01006C  0E00               	movlw	0
  8426  01006E  6FB0               	movwf	(_efgtoa$4189+1)& (0+255),b
  8427  010070  0E2B               	movlw	43
  8428  010072  D003               	goto	L4
  8429  010074                     l9636:
  8430                           
  8431                           ; BSR set to: 0
  8432  010074  0E00               	movlw	0
  8433  010076  6FB0               	movwf	(_efgtoa$4189+1)& (0+255),b
  8434  010078  0E2D               	movlw	45
  8435  01007A                     L4:
  8436  01007A  6FAF               	movwf	_efgtoa$4189& (0+255),b
  8437                           
  8438                           ; BSR set to: 0
  8439  01007C  C0AF  F240         	movff	_efgtoa$4189,_dbuf
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  8443  010080  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  8444  010082  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  8448  010084  07C7               	decf	efgtoa@w& (0+255),f,b
  8449  010086  A0D8               	btfss	status,0,c
  8450  010088  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  8451  01008A                     l9644:
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  8455  01008A  C0D5  F060         	movff	efgtoa@g,___fpclassifyf@x
  8456  01008E  C0D6  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8457  010092  C0D7  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8458  010096  C0D8  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8459  01009A  ECE7  F09E         	call	___fpclassifyf	;wreg free
  8460  01009E  0560               	decf	?___fpclassifyf& (0+255),w,b
  8461  0100A0  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  8462  0100A2  A4D8               	btfss	status,2,c
  8463  0100A4  D043               	goto	l9662
  8464                           
  8465                           ; BSR set to: 0
  8466  0100A6  0EBF               	movlw	191
  8467  0100A8  6FAA               	movwf	??_efgtoa& (0+255),b
  8468  0100AA  0EFF               	movlw	255
  8469  0100AC  6FAB               	movwf	(??_efgtoa+1)& (0+255),b
  8470  0100AE  51A9               	movf	efgtoa@c& (0+255),w,b
  8471  0100B0  6FAC               	movwf	(??_efgtoa+2)& (0+255),b
  8472  0100B2  6BAD               	clrf	(??_efgtoa+3)& (0+255),b
  8473  0100B4  51AA               	movf	??_efgtoa& (0+255),w,b
  8474  0100B6  27AC               	addwf	(??_efgtoa+2)& (0+255),f,b
  8475  0100B8  51AB               	movf	(??_efgtoa+1)& (0+255),w,b
  8476  0100BA  23AD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8477  0100BC  51AD               	movf	(??_efgtoa+3)& (0+255),w,b
  8478  0100BE  E111               	bnz	l9654
  8479  0100C0  0E1A               	movlw	26
  8480  0100C2  5DAC               	subwf	(??_efgtoa+2)& (0+255),w,b
  8481  0100C4  B0D8               	btfsc	status,0,c
  8482  0100C6  D00D               	goto	l9654
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  8486  0100C8  0E40               	movlw	low _dbuf
  8487  0100CA  25DB               	addwf	efgtoa@n& (0+255),w,b
  8488  0100CC  6F60               	movwf	strcpy@dest& (0+255),b
  8489  0100CE  0E02               	movlw	high _dbuf
  8490  0100D0  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8491  0100D2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8492  0100D4  0ECC               	movlw	low STR_30
  8493  0100D6  6F62               	movwf	strcpy@src& (0+255),b
  8494  0100D8  0EFF               	movlw	high STR_30
  8495  0100DA  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8496  0100DC  EC4E  F0A3         	call	_strcpy	;wreg free
  8497                           
  8498                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  8499  0100E0  D00C               	goto	l9656
  8500  0100E2                     l9654:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  8504  0100E2  0E40               	movlw	low _dbuf
  8505  0100E4  25DB               	addwf	efgtoa@n& (0+255),w,b
  8506  0100E6  6F60               	movwf	strcpy@dest& (0+255),b
  8507  0100E8  0E02               	movlw	high _dbuf
  8508  0100EA  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8509  0100EC  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8510  0100EE  0ED4               	movlw	low STR_31
  8511  0100F0  6F62               	movwf	strcpy@src& (0+255),b
  8512  0100F2  0EFF               	movlw	high STR_31
  8513  0100F4  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8514  0100F6  EC4E  F0A3         	call	_strcpy	;wreg free
  8515  0100FA                     l9656:
  8516                           
  8517                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  8518  0100FA  0100               	movlb	0	; () banked
  8519  0100FC  0EFD               	movlw	253
  8520  0100FE  27C7               	addwf	efgtoa@w& (0+255),f,b
  8521  010100  0EFF               	movlw	255
  8522  010102  23C8               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8523  010104                     l9658:
  8524                           
  8525                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  8526  010104  C0A3  F072         	movff	efgtoa@fp,pad@fp
  8527  010108  C0A4  F073         	movff	efgtoa@fp+1,pad@fp+1
  8528  01010C  0E40               	movlw	low _dbuf
  8529  01010E  0100               	movlb	0	; () banked
  8530  010110  6F74               	movwf	pad@buf& (0+255),b
  8531  010112  0E02               	movlw	high _dbuf
  8532  010114  6F75               	movwf	(pad@buf+1)& (0+255),b
  8533  010116  C0C7  F076         	movff	efgtoa@w,pad@p
  8534  01011A  C0C8  F077         	movff	efgtoa@w+1,pad@p+1
  8535  01011E  EC6C  F0A1         	call	_pad	;wreg free
  8536  010122  C072  F0A3         	movff	?_pad,?_efgtoa
  8537  010126  C073  F0A4         	movff	?_pad+1,?_efgtoa+1
  8538  01012A  0012               	return	
  8539  01012C                     l9662:
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  8543  01012C  C0D5  F060         	movff	efgtoa@g,___fpclassifyf@x
  8544  010130  C0D6  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8545  010134  C0D7  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8546  010138  C0D8  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8547  01013C  ECE7  F09E         	call	___fpclassifyf	;wreg free
  8548  010140  5160               	movf	?___fpclassifyf& (0+255),w,b
  8549  010142  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  8550  010144  A4D8               	btfss	status,2,c
  8551  010146  D02B               	goto	l9680
  8552                           
  8553                           ; BSR set to: 0
  8554  010148  0EBF               	movlw	191
  8555  01014A  6FAA               	movwf	??_efgtoa& (0+255),b
  8556  01014C  0EFF               	movlw	255
  8557  01014E  6FAB               	movwf	(??_efgtoa+1)& (0+255),b
  8558  010150  51A9               	movf	efgtoa@c& (0+255),w,b
  8559  010152  6FAC               	movwf	(??_efgtoa+2)& (0+255),b
  8560  010154  6BAD               	clrf	(??_efgtoa+3)& (0+255),b
  8561  010156  51AA               	movf	??_efgtoa& (0+255),w,b
  8562  010158  27AC               	addwf	(??_efgtoa+2)& (0+255),f,b
  8563  01015A  51AB               	movf	(??_efgtoa+1)& (0+255),w,b
  8564  01015C  23AD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8565  01015E  51AD               	movf	(??_efgtoa+3)& (0+255),w,b
  8566  010160  E111               	bnz	l9672
  8567  010162  0E1A               	movlw	26
  8568  010164  5DAC               	subwf	(??_efgtoa+2)& (0+255),w,b
  8569  010166  B0D8               	btfsc	status,0,c
  8570  010168  D00D               	goto	l9672
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  8574  01016A  0E40               	movlw	low _dbuf
  8575  01016C  25DB               	addwf	efgtoa@n& (0+255),w,b
  8576  01016E  6F60               	movwf	strcpy@dest& (0+255),b
  8577  010170  0E02               	movlw	high _dbuf
  8578  010172  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8579  010174  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8580  010176  0ED0               	movlw	low STR_34
  8581  010178  6F62               	movwf	strcpy@src& (0+255),b
  8582  01017A  0EFF               	movlw	high STR_34
  8583  01017C  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8584  01017E  EC4E  F0A3         	call	_strcpy	;wreg free
  8585                           
  8586                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  8587  010182  D7BB               	goto	l9656
  8588  010184                     l9672:
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  8592  010184  0E40               	movlw	low _dbuf
  8593  010186  25DB               	addwf	efgtoa@n& (0+255),w,b
  8594  010188  6F60               	movwf	strcpy@dest& (0+255),b
  8595  01018A  0E02               	movlw	high _dbuf
  8596  01018C  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8597  01018E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8598  010190  0ED8               	movlw	low STR_35
  8599  010192  6F62               	movwf	strcpy@src& (0+255),b
  8600  010194  0EFF               	movlw	high STR_35
  8601  010196  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8602  010198  EC4E  F0A3         	call	_strcpy	;wreg free
  8603  01019C  D7AE               	goto	l9656
  8604  01019E                     l9680:
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  8608  01019E  0E00               	movlw	0
  8609  0101A0  6FDD               	movwf	efgtoa@u& (0+255),b
  8610  0101A2  0E00               	movlw	0
  8611  0101A4  6FDE               	movwf	(efgtoa@u+1)& (0+255),b
  8612  0101A6  0E80               	movlw	128
  8613  0101A8  6FDF               	movwf	(efgtoa@u+2)& (0+255),b
  8614  0101AA  0E3F               	movlw	63
  8615  0101AC  6FE0               	movwf	(efgtoa@u+3)& (0+255),b
  8616                           
  8617                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  8618  0101AE  0E00               	movlw	0
  8619  0101B0  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  8620  0101B2  0E00               	movlw	0
  8621  0101B4  6FD9               	movwf	efgtoa@e& (0+255),b
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  8625  0101B6  C0D5  F060         	movff	efgtoa@g,___fleq@ff1
  8626  0101BA  C0D6  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  8627  0101BE  C0D7  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  8628  0101C2  C0D8  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  8629  0101C6  0E00               	movlw	0
  8630  0101C8  6F64               	movwf	___fleq@ff2& (0+255),b
  8631  0101CA  0E00               	movlw	0
  8632  0101CC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  8633  0101CE  0E00               	movlw	0
  8634  0101D0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  8635  0101D2  0E00               	movlw	0
  8636  0101D4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  8637  0101D6  ECB7  F0A1         	call	___fleq	;wreg free
  8638  0101DA  A0D8               	btfss	status,0,c
  8639  0101DC  D01D               	goto	l9690
  8640  0101DE  D074               	goto	u9190
  8641  0101E0                     l9686:
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  8645  0101E0  C0DD  F072         	movff	efgtoa@u,___flmul@b
  8646  0101E4  C0DE  F073         	movff	efgtoa@u+1,___flmul@b+1
  8647  0101E8  C0DF  F074         	movff	efgtoa@u+2,___flmul@b+2
  8648  0101EC  C0E0  F075         	movff	efgtoa@u+3,___flmul@b+3
  8649  0101F0  0E00               	movlw	0
  8650  0101F2  6F76               	movwf	___flmul@a& (0+255),b
  8651  0101F4  0E00               	movlw	0
  8652  0101F6  6F77               	movwf	(___flmul@a+1)& (0+255),b
  8653  0101F8  0E20               	movlw	32
  8654  0101FA  6F78               	movwf	(___flmul@a+2)& (0+255),b
  8655  0101FC  0E41               	movlw	65
  8656  0101FE  6F79               	movwf	(___flmul@a+3)& (0+255),b
  8657  010200  ECF1  F08F         	call	___flmul	;wreg free
  8658  010204  C072  F0DD         	movff	?___flmul,efgtoa@u
  8659  010208  C073  F0DE         	movff	?___flmul+1,efgtoa@u+1
  8660  01020C  C074  F0DF         	movff	?___flmul+2,efgtoa@u+2
  8661  010210  C075  F0E0         	movff	?___flmul+3,efgtoa@u+3
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  8665  010214  4BD9               	infsnz	efgtoa@e& (0+255),f,b
  8666  010216  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  8667  010218                     l9690:
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  8671  010218  C0D5  F08B         	movff	efgtoa@g,___flge@ff1
  8672  01021C  C0D6  F08C         	movff	efgtoa@g+1,___flge@ff1+1
  8673  010220  C0D7  F08D         	movff	efgtoa@g+2,___flge@ff1+2
  8674  010224  C0D8  F08E         	movff	efgtoa@g+3,___flge@ff1+3
  8675  010228  0E00               	movlw	0
  8676  01022A  6F76               	movwf	___flmul@a& (0+255),b
  8677  01022C  0E00               	movlw	0
  8678  01022E  6F77               	movwf	(___flmul@a+1)& (0+255),b
  8679  010230  0E20               	movlw	32
  8680  010232  6F78               	movwf	(___flmul@a+2)& (0+255),b
  8681  010234  0E41               	movlw	65
  8682  010236  6F79               	movwf	(___flmul@a+3)& (0+255),b
  8683  010238  C0DD  F072         	movff	efgtoa@u,___flmul@b
  8684  01023C  C0DE  F073         	movff	efgtoa@u+1,___flmul@b+1
  8685  010240  C0DF  F074         	movff	efgtoa@u+2,___flmul@b+2
  8686  010244  C0E0  F075         	movff	efgtoa@u+3,___flmul@b+3
  8687  010248  ECF1  F08F         	call	___flmul	;wreg free
  8688  01024C  C072  F08F         	movff	?___flmul,___flge@ff2
  8689  010250  C073  F090         	movff	?___flmul+1,___flge@ff2+1
  8690  010254  C074  F091         	movff	?___flmul+2,___flge@ff2+2
  8691  010258  C075  F092         	movff	?___flmul+3,___flge@ff2+3
  8692  01025C  ECB1  F09D         	call	___flge	;wreg free
  8693  010260  A0D8               	btfss	status,0,c
  8694  010262  D01E               	goto	l9696
  8695  010264  D7BD               	goto	l9686
  8696  010266                     l9692:
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  8700  010266  C0DD  F072         	movff	efgtoa@u,___fldiv@b
  8701  01026A  C0DE  F073         	movff	efgtoa@u+1,___fldiv@b+1
  8702  01026E  C0DF  F074         	movff	efgtoa@u+2,___fldiv@b+2
  8703  010272  C0E0  F075         	movff	efgtoa@u+3,___fldiv@b+3
  8704  010276  0E00               	movlw	0
  8705  010278  6F76               	movwf	___fldiv@a& (0+255),b
  8706  01027A  0E00               	movlw	0
  8707  01027C  6F77               	movwf	(___fldiv@a+1)& (0+255),b
  8708  01027E  0E20               	movlw	32
  8709  010280  6F78               	movwf	(___fldiv@a+2)& (0+255),b
  8710  010282  0E41               	movlw	65
  8711  010284  6F79               	movwf	(___fldiv@a+3)& (0+255),b
  8712  010286  EC8B  F094         	call	___fldiv	;wreg free
  8713  01028A  C072  F0DD         	movff	?___fldiv,efgtoa@u
  8714  01028E  C073  F0DE         	movff	?___fldiv+1,efgtoa@u+1
  8715  010292  C074  F0DF         	movff	?___fldiv+2,efgtoa@u+2
  8716  010296  C075  F0E0         	movff	?___fldiv+3,efgtoa@u+3
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  8720  01029A  07D9               	decf	efgtoa@e& (0+255),f,b
  8721  01029C  A0D8               	btfss	status,0,c
  8722  01029E  07DA               	decf	(efgtoa@e+1)& (0+255),f,b
  8723  0102A0                     l9696:
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  8727  0102A0  C0D5  F08B         	movff	efgtoa@g,___flge@ff1
  8728  0102A4  C0D6  F08C         	movff	efgtoa@g+1,___flge@ff1+1
  8729  0102A8  C0D7  F08D         	movff	efgtoa@g+2,___flge@ff1+2
  8730  0102AC  C0D8  F08E         	movff	efgtoa@g+3,___flge@ff1+3
  8731  0102B0  C0DD  F08F         	movff	efgtoa@u,___flge@ff2
  8732  0102B4  C0DE  F090         	movff	efgtoa@u+1,___flge@ff2+1
  8733  0102B8  C0DF  F091         	movff	efgtoa@u+2,___flge@ff2+2
  8734  0102BC  C0E0  F092         	movff	efgtoa@u+3,___flge@ff2+3
  8735  0102C0  ECB1  F09D         	call	___flge	;wreg free
  8736  0102C4  A0D8               	btfss	status,0,c
  8737  0102C6  D7CF               	goto	l9692
  8738  0102C8                     u9190:
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  8742  0102C8  C0A9  F064         	movff	efgtoa@c,tolower@c
  8743  0102CC  6B65               	clrf	(tolower@c+1)& (0+255),b
  8744  0102CE  ECC9  F0A7         	call	_tolower	;wreg free
  8745  0102D2  5164               	movf	?_tolower& (0+255),w,b
  8746  0102D4  6FCA               	movwf	efgtoa@mode& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  8750  0102D6  C0CA  F0C9         	movff	efgtoa@mode,efgtoa@nmode
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  8754  0102DA  0E67               	movlw	103
  8755  0102DC  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  8756  0102DE  A4D8               	btfss	status,2,c
  8757  0102E0  D019               	goto	l9712
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  8761  0102E2  51F8               	movf	_prec& (0+255),w,b
  8762  0102E4  11F9               	iorwf	(_prec+1)& (0+255),w,b
  8763  0102E6  A4D8               	btfss	status,2,c
  8764  0102E8  D004               	goto	l9708
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  8768  0102EA  0E00               	movlw	0
  8769  0102EC  6FF9               	movwf	(_prec+1)& (0+255),b
  8770  0102EE  0E01               	movlw	1
  8771  0102F0  6FF8               	movwf	_prec& (0+255),b
  8772  0102F2                     l9708:
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  8776  0102F2  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  8777  0102F4  D005               	goto	u9220
  8778  0102F6  51F9               	movf	(_prec+1)& (0+255),w,b
  8779  0102F8  E108               	bnz	l2596
  8780  0102FA  05F8               	decf	_prec& (0+255),w,b
  8781  0102FC  B0D8               	btfsc	status,0,c
  8782  0102FE  D005               	goto	l2596
  8783  010300                     u9220:
  8784                           
  8785                           ; BSR set to: 0
  8786  010300  0E00               	movlw	0
  8787  010302  6FC6               	movwf	(efgtoa@p+1)& (0+255),b
  8788  010304  0E06               	movlw	6
  8789  010306  6FC5               	movwf	efgtoa@p& (0+255),b
  8790  010308  D008               	goto	l9718
  8791  01030A                     l2596:
  8792                           
  8793                           ; BSR set to: 0
  8794  01030A  C0F8  F0C5         	movff	_prec,efgtoa@p
  8795  01030E  C0F9  F0C6         	movff	_prec+1,efgtoa@p+1
  8796  010312  D003               	goto	l9718
  8797  010314                     l9712:
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  8801  010314  AFF9               	btfss	(_prec+1)& (0+255),7,b
  8802  010316  D7F9               	goto	l2596
  8803  010318  D7F3               	goto	u9220
  8804  01031A                     l9718:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  8808  01031A  0E67               	movlw	103
  8809  01031C  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  8810  01031E  A4D8               	btfss	status,2,c
  8811  010320  D022               	goto	l9728
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  8815  010322  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  8816  010324  D006               	goto	u9250
  8817  010326  0EFC               	movlw	252
  8818  010328  5DD9               	subwf	efgtoa@e& (0+255),w,b
  8819  01032A  0EFF               	movlw	255
  8820  01032C  59DA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8821  01032E  A0D8               	btfss	status,0,c
  8822  010330  D018               	goto	l9726
  8823  010332                     u9250:
  8824                           
  8825                           ; BSR set to: 0
  8826  010332  0EFF               	movlw	255
  8827  010334  6FAA               	movwf	??_efgtoa& (0+255),b
  8828  010336  0EFF               	movlw	255
  8829  010338  6FAB               	movwf	(??_efgtoa+1)& (0+255),b
  8830  01033A  C0C5  F0AC         	movff	efgtoa@p,??_efgtoa+2
  8831  01033E  C0C6  F0AD         	movff	efgtoa@p+1,??_efgtoa+3
  8832  010342  51AA               	movf	??_efgtoa& (0+255),w,b
  8833  010344  27AC               	addwf	(??_efgtoa+2)& (0+255),f,b
  8834  010346  51AB               	movf	(??_efgtoa+1)& (0+255),w,b
  8835  010348  23AD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8836  01034A  51D9               	movf	efgtoa@e& (0+255),w,b
  8837  01034C  5DAC               	subwf	(??_efgtoa+2)& (0+255),w,b
  8838  01034E  51AD               	movf	(??_efgtoa+3)& (0+255),w,b
  8839  010350  0A80               	xorlw	128
  8840  010352  6FAE               	movwf	(??_efgtoa+4)& (0+255),b
  8841  010354  51DA               	movf	(efgtoa@e+1)& (0+255),w,b
  8842  010356  0A80               	xorlw	128
  8843  010358  59AE               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8844  01035A  A0D8               	btfss	status,0,c
  8845  01035C  D002               	goto	l9726
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  8849  01035E  0E66               	movlw	102
  8850  010360  D001               	goto	L5
  8851  010362                     l9726:
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  8855  010362  0E65               	movlw	101
  8856  010364                     L5:
  8857  010364  6FC9               	movwf	efgtoa@nmode& (0+255),b
  8858  010366                     l9728:
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  8862  010366  C0C5  F0BB         	movff	efgtoa@p,efgtoa@m
  8863  01036A  C0C6  F0BC         	movff	efgtoa@p+1,efgtoa@m+1
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  8867  01036E  0E67               	movlw	103
  8868  010370  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  8869  010372  A4D8               	btfss	status,2,c
  8870  010374  D005               	goto	u9290
  8871                           
  8872                           ; BSR set to: 0
  8873  010376  0E66               	movlw	102
  8874  010378  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  8875  01037A  B4D8               	btfsc	status,2,c
  8876                           
  8877                           ; BSR set to: 0
  8878  01037C  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  8879  01037E  D002               	goto	l9738
  8880  010380                     u9290:
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  8884  010380  4BBB               	infsnz	efgtoa@m& (0+255),f,b
  8885  010382  2BBC               	incf	(efgtoa@m+1)& (0+255),f,b
  8886  010384                     l9738:
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  8890  010384  0E66               	movlw	102
  8891  010386  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  8892  010388  A4D8               	btfss	status,2,c
  8893  01038A  D016               	goto	l9748
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  8897  01038C  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  8898  01038E  D00C               	goto	l9744
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  8902  010390  0E00               	movlw	0
  8903  010392  6FDD               	movwf	efgtoa@u& (0+255),b
  8904  010394  0E00               	movlw	0
  8905  010396  6FDE               	movwf	(efgtoa@u+1)& (0+255),b
  8906  010398  0E80               	movlw	128
  8907  01039A  6FDF               	movwf	(efgtoa@u+2)& (0+255),b
  8908  01039C  0E3F               	movlw	63
  8909  01039E  6FE0               	movwf	(efgtoa@u+3)& (0+255),b
  8910                           
  8911                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  8912  0103A0  0E00               	movlw	0
  8913  0103A2  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  8914  0103A4  0E00               	movlw	0
  8915  0103A6  6FD9               	movwf	efgtoa@e& (0+255),b
  8916  0103A8                     l9744:
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  8920  0103A8  0E67               	movlw	103
  8921  0103AA  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  8922  0103AC  B4D8               	btfsc	status,2,c
  8923  0103AE  D004               	goto	l9748
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  8927  0103B0  51D9               	movf	efgtoa@e& (0+255),w,b
  8928  0103B2  27BB               	addwf	efgtoa@m& (0+255),f,b
  8929  0103B4  51DA               	movf	(efgtoa@e+1)& (0+255),w,b
  8930  0103B6  23BC               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8931  0103B8                     l9748:
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  8935  0103B8  0E00               	movlw	0
  8936  0103BA  6FD4               	movwf	(efgtoa@i+1)& (0+255),b
  8937  0103BC  0E00               	movlw	0
  8938  0103BE  6FD3               	movwf	efgtoa@i& (0+255),b
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  8942  0103C0  C0D5  F0CB         	movff	efgtoa@g,efgtoa@h
  8943  0103C4  C0D6  F0CC         	movff	efgtoa@g+1,efgtoa@h+1
  8944  0103C8  C0D7  F0CD         	movff	efgtoa@g+2,efgtoa@h+2
  8945  0103CC  C0D8  F0CE         	movff	efgtoa@g+3,efgtoa@h+3
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  8949  0103D0  C0DD  F0BD         	movff	efgtoa@u,efgtoa@ou
  8950  0103D4  C0DE  F0BE         	movff	efgtoa@u+1,efgtoa@ou+1
  8951  0103D8  C0DF  F0BF         	movff	efgtoa@u+2,efgtoa@ou+2
  8952  0103DC  C0E0  F0C0         	movff	efgtoa@u+3,efgtoa@ou+3
  8953                           
  8954                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  8955  0103E0  D07A               	goto	l9762
  8956  0103E2                     l9754:
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  8960  0103E2  C0CB  F072         	movff	efgtoa@h,___fldiv@b
  8961  0103E6  C0CC  F073         	movff	efgtoa@h+1,___fldiv@b+1
  8962  0103EA  C0CD  F074         	movff	efgtoa@h+2,___fldiv@b+2
  8963  0103EE  C0CE  F075         	movff	efgtoa@h+3,___fldiv@b+3
  8964  0103F2  C0DD  F076         	movff	efgtoa@u,___fldiv@a
  8965  0103F6  C0DE  F077         	movff	efgtoa@u+1,___fldiv@a+1
  8966  0103FA  C0DF  F078         	movff	efgtoa@u+2,___fldiv@a+2
  8967  0103FE  C0E0  F079         	movff	efgtoa@u+3,___fldiv@a+3
  8968  010402  EC8B  F094         	call	___fldiv	;wreg free
  8969  010406  C072  F08B         	movff	?___fldiv,floorf@x
  8970  01040A  C073  F08C         	movff	?___fldiv+1,floorf@x+1
  8971  01040E  C074  F08D         	movff	?___fldiv+2,floorf@x+2
  8972  010412  C075  F08E         	movff	?___fldiv+3,floorf@x+3
  8973  010416  EC84  F097         	call	_floorf	;wreg free
  8974  01041A  C08B  F0CF         	movff	?_floorf,efgtoa@l
  8975  01041E  C08C  F0D0         	movff	?_floorf+1,efgtoa@l+1
  8976  010422  C08D  F0D1         	movff	?_floorf+2,efgtoa@l+2
  8977  010426  C08E  F0D2         	movff	?_floorf+3,efgtoa@l+3
  8978                           
  8979                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  8980  01042A  C0CF  F060         	movff	efgtoa@l,___fltol@f1
  8981  01042E  C0D0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  8982  010432  C0D1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  8983  010436  C0D2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  8984  01043A  EC0C  F0A0         	call	___fltol	;wreg free
  8985  01043E  C060  F0C1         	movff	?___fltol,efgtoa@d
  8986  010442  C061  F0C2         	movff	?___fltol+1,efgtoa@d+1
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  8990  010446  C0CB  F09B         	movff	efgtoa@h,___flsub@b
  8991  01044A  C0CC  F09C         	movff	efgtoa@h+1,___flsub@b+1
  8992  01044E  C0CD  F09D         	movff	efgtoa@h+2,___flsub@b+2
  8993  010452  C0CE  F09E         	movff	efgtoa@h+3,___flsub@b+3
  8994  010456  C0DD  F076         	movff	efgtoa@u,___flmul@a
  8995  01045A  C0DE  F077         	movff	efgtoa@u+1,___flmul@a+1
  8996  01045E  C0DF  F078         	movff	efgtoa@u+2,___flmul@a+2
  8997  010462  C0E0  F079         	movff	efgtoa@u+3,___flmul@a+3
  8998  010466  C0CF  F072         	movff	efgtoa@l,___flmul@b
  8999  01046A  C0D0  F073         	movff	efgtoa@l+1,___flmul@b+1
  9000  01046E  C0D1  F074         	movff	efgtoa@l+2,___flmul@b+2
  9001  010472  C0D2  F075         	movff	efgtoa@l+3,___flmul@b+3
  9002  010476  ECF1  F08F         	call	___flmul	;wreg free
  9003  01047A  C072  F09F         	movff	?___flmul,___flsub@a
  9004  01047E  C073  F0A0         	movff	?___flmul+1,___flsub@a+1
  9005  010482  C074  F0A1         	movff	?___flmul+2,___flsub@a+2
  9006  010486  C075  F0A2         	movff	?___flmul+3,___flsub@a+3
  9007  01048A  EC08  F0A6         	call	___flsub	;wreg free
  9008  01048E  C09B  F0CB         	movff	?___flsub,efgtoa@h
  9009  010492  C09C  F0CC         	movff	?___flsub+1,efgtoa@h+1
  9010  010496  C09D  F0CD         	movff	?___flsub+2,efgtoa@h+2
  9011  01049A  C09E  F0CE         	movff	?___flsub+3,efgtoa@h+3
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  9015  01049E  C0DD  F072         	movff	efgtoa@u,___fldiv@b
  9016  0104A2  C0DE  F073         	movff	efgtoa@u+1,___fldiv@b+1
  9017  0104A6  C0DF  F074         	movff	efgtoa@u+2,___fldiv@b+2
  9018  0104AA  C0E0  F075         	movff	efgtoa@u+3,___fldiv@b+3
  9019  0104AE  0E00               	movlw	0
  9020  0104B0  6F76               	movwf	___fldiv@a& (0+255),b
  9021  0104B2  0E00               	movlw	0
  9022  0104B4  6F77               	movwf	(___fldiv@a+1)& (0+255),b
  9023  0104B6  0E20               	movlw	32
  9024  0104B8  6F78               	movwf	(___fldiv@a+2)& (0+255),b
  9025  0104BA  0E41               	movlw	65
  9026  0104BC  6F79               	movwf	(___fldiv@a+3)& (0+255),b
  9027  0104BE  EC8B  F094         	call	___fldiv	;wreg free
  9028  0104C2  C072  F0DD         	movff	?___fldiv,efgtoa@u
  9029  0104C6  C073  F0DE         	movff	?___fldiv+1,efgtoa@u+1
  9030  0104CA  C074  F0DF         	movff	?___fldiv+2,efgtoa@u+2
  9031  0104CE  C075  F0E0         	movff	?___fldiv+3,efgtoa@u+3
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  9035  0104D2  4BD3               	infsnz	efgtoa@i& (0+255),f,b
  9036  0104D4  2BD4               	incf	(efgtoa@i+1)& (0+255),f,b
  9037  0104D6                     l9762:
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  9041  0104D6  51BB               	movf	efgtoa@m& (0+255),w,b
  9042  0104D8  5DD3               	subwf	efgtoa@i& (0+255),w,b
  9043  0104DA  51D4               	movf	(efgtoa@i+1)& (0+255),w,b
  9044  0104DC  0A80               	xorlw	128
  9045  0104DE  6FAA               	movwf	??_efgtoa& (0+255),b
  9046  0104E0  51BC               	movf	(efgtoa@m+1)& (0+255),w,b
  9047  0104E2  0A80               	xorlw	128
  9048  0104E4  59AA               	subwfb	??_efgtoa& (0+255),w,b
  9049  0104E6  A0D8               	btfss	status,0,c
  9050  0104E8  D77C               	goto	l9754
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  9054  0104EA  C0DD  F072         	movff	efgtoa@u,___flmul@b
  9055  0104EE  C0DE  F073         	movff	efgtoa@u+1,___flmul@b+1
  9056  0104F2  C0DF  F074         	movff	efgtoa@u+2,___flmul@b+2
  9057  0104F6  C0E0  F075         	movff	efgtoa@u+3,___flmul@b+3
  9058  0104FA  0E00               	movlw	0
  9059  0104FC  6F76               	movwf	___flmul@a& (0+255),b
  9060  0104FE  0E00               	movlw	0
  9061  010500  6F77               	movwf	(___flmul@a+1)& (0+255),b
  9062  010502  0EA0               	movlw	160
  9063  010504  6F78               	movwf	(___flmul@a+2)& (0+255),b
  9064  010506  0E40               	movlw	64
  9065  010508  6F79               	movwf	(___flmul@a+3)& (0+255),b
  9066  01050A  ECF1  F08F         	call	___flmul	;wreg free
  9067  01050E  C072  F0CF         	movff	?___flmul,efgtoa@l
  9068  010512  C073  F0D0         	movff	?___flmul+1,efgtoa@l+1
  9069  010516  C074  F0D1         	movff	?___flmul+2,efgtoa@l+2
  9070  01051A  C075  F0D2         	movff	?___flmul+3,efgtoa@l+3
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  9074  01051E  C0CB  F08B         	movff	efgtoa@h,___flge@ff1
  9075  010522  C0CC  F08C         	movff	efgtoa@h+1,___flge@ff1+1
  9076  010526  C0CD  F08D         	movff	efgtoa@h+2,___flge@ff1+2
  9077  01052A  C0CE  F08E         	movff	efgtoa@h+3,___flge@ff1+3
  9078  01052E  C0CF  F08F         	movff	efgtoa@l,___flge@ff2
  9079  010532  C0D0  F090         	movff	efgtoa@l+1,___flge@ff2+1
  9080  010536  C0D1  F091         	movff	efgtoa@l+2,___flge@ff2+2
  9081  01053A  C0D2  F092         	movff	efgtoa@l+3,___flge@ff2+3
  9082  01053E  ECB1  F09D         	call	___flge	;wreg free
  9083  010542  A0D8               	btfss	status,0,c
  9084  010544  D015               	goto	u9360
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  9088                           
  9089                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  9093  010546  C0CB  F060         	movff	efgtoa@h,___fleq@ff1
  9094  01054A  C0CC  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  9095  01054E  C0CD  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  9096  010552  C0CE  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  9097  010556  C0CF  F064         	movff	efgtoa@l,___fleq@ff2
  9098  01055A  C0D0  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  9099  01055E  C0D1  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  9100  010562  C0D2  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  9101  010566  ECB7  F0A1         	call	___fleq	;wreg free
  9102  01056A  B0D8               	btfsc	status,0,c
  9103                           
  9104                           ; BSR set to: 0
  9105  01056C  B1C1               	btfsc	efgtoa@d& (0+255),0,b
  9106  01056E  D008               	goto	l9776
  9107  010570                     u9360:
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  9111  010570  0E00               	movlw	0
  9112  010572  6FCF               	movwf	efgtoa@l& (0+255),b
  9113  010574  0E00               	movlw	0
  9114  010576  6FD0               	movwf	(efgtoa@l+1)& (0+255),b
  9115  010578  0E00               	movlw	0
  9116  01057A  6FD1               	movwf	(efgtoa@l+2)& (0+255),b
  9117  01057C  0E00               	movlw	0
  9118  01057E  6FD2               	movwf	(efgtoa@l+3)& (0+255),b
  9119  010580                     l9776:
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  9123  010580  C0D5  F08B         	movff	efgtoa@g,___fladd@b
  9124  010584  C0D6  F08C         	movff	efgtoa@g+1,___fladd@b+1
  9125  010588  C0D7  F08D         	movff	efgtoa@g+2,___fladd@b+2
  9126  01058C  C0D8  F08E         	movff	efgtoa@g+3,___fladd@b+3
  9127  010590  C0CF  F08F         	movff	efgtoa@l,___fladd@a
  9128  010594  C0D0  F090         	movff	efgtoa@l+1,___fladd@a+1
  9129  010598  C0D1  F091         	movff	efgtoa@l+2,___fladd@a+2
  9130  01059C  C0D2  F092         	movff	efgtoa@l+3,___fladd@a+3
  9131  0105A0  EC99  F091         	call	___fladd	;wreg free
  9132  0105A4  C08B  F0CB         	movff	?___fladd,efgtoa@h
  9133  0105A8  C08C  F0CC         	movff	?___fladd+1,efgtoa@h+1
  9134  0105AC  C08D  F0CD         	movff	?___fladd+2,efgtoa@h+2
  9135  0105B0  C08E  F0CE         	movff	?___fladd+3,efgtoa@h+3
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  9139  0105B4  C0CB  F08B         	movff	efgtoa@h,___flge@ff1
  9140  0105B8  C0CC  F08C         	movff	efgtoa@h+1,___flge@ff1+1
  9141  0105BC  C0CD  F08D         	movff	efgtoa@h+2,___flge@ff1+2
  9142  0105C0  C0CE  F08E         	movff	efgtoa@h+3,___flge@ff1+3
  9143  0105C4  0E00               	movlw	0
  9144  0105C6  6F76               	movwf	___flmul@a& (0+255),b
  9145  0105C8  0E00               	movlw	0
  9146  0105CA  6F77               	movwf	(___flmul@a+1)& (0+255),b
  9147  0105CC  0E20               	movlw	32
  9148  0105CE  6F78               	movwf	(___flmul@a+2)& (0+255),b
  9149  0105D0  0E41               	movlw	65
  9150  0105D2  6F79               	movwf	(___flmul@a+3)& (0+255),b
  9151  0105D4  C0BD  F072         	movff	efgtoa@ou,___flmul@b
  9152  0105D8  C0BE  F073         	movff	efgtoa@ou+1,___flmul@b+1
  9153  0105DC  C0BF  F074         	movff	efgtoa@ou+2,___flmul@b+2
  9154  0105E0  C0C0  F075         	movff	efgtoa@ou+3,___flmul@b+3
  9155  0105E4  ECF1  F08F         	call	___flmul	;wreg free
  9156  0105E8  C072  F08F         	movff	?___flmul,___flge@ff2
  9157  0105EC  C073  F090         	movff	?___flmul+1,___flge@ff2+1
  9158  0105F0  C074  F091         	movff	?___flmul+2,___flge@ff2+2
  9159  0105F4  C075  F092         	movff	?___flmul+3,___flge@ff2+3
  9160  0105F8  ECB1  F09D         	call	___flge	;wreg free
  9161  0105FC  A0D8               	btfss	status,0,c
  9162  0105FE  D022               	goto	l9788
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  9166  010600  4BD9               	infsnz	efgtoa@e& (0+255),f,b
  9167  010602  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  9171  010604  C0BD  F072         	movff	efgtoa@ou,___flmul@b
  9172  010608  C0BE  F073         	movff	efgtoa@ou+1,___flmul@b+1
  9173  01060C  C0BF  F074         	movff	efgtoa@ou+2,___flmul@b+2
  9174  010610  C0C0  F075         	movff	efgtoa@ou+3,___flmul@b+3
  9175  010614  0E00               	movlw	0
  9176  010616  6F76               	movwf	___flmul@a& (0+255),b
  9177  010618  0E00               	movlw	0
  9178  01061A  6F77               	movwf	(___flmul@a+1)& (0+255),b
  9179  01061C  0E20               	movlw	32
  9180  01061E  6F78               	movwf	(___flmul@a+2)& (0+255),b
  9181  010620  0E41               	movlw	65
  9182  010622  6F79               	movwf	(___flmul@a+3)& (0+255),b
  9183  010624  ECF1  F08F         	call	___flmul	;wreg free
  9184  010628  C072  F0BD         	movff	?___flmul,efgtoa@ou
  9185  01062C  C073  F0BE         	movff	?___flmul+1,efgtoa@ou+1
  9186  010630  C074  F0BF         	movff	?___flmul+2,efgtoa@ou+2
  9187  010634  C075  F0C0         	movff	?___flmul+3,efgtoa@ou+3
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  9191  010638  0E66               	movlw	102
  9192  01063A  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  9193  01063C  A4D8               	btfss	status,2,c
  9194  01063E  D002               	goto	l9788
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  9198  010640  4BBB               	infsnz	efgtoa@m& (0+255),f,b
  9199  010642  2BBC               	incf	(efgtoa@m+1)& (0+255),f,b
  9200  010644                     l9788:
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  9204  010644  C0BD  F0DD         	movff	efgtoa@ou,efgtoa@u
  9205  010648  C0BE  F0DE         	movff	efgtoa@ou+1,efgtoa@u+1
  9206  01064C  C0BF  F0DF         	movff	efgtoa@ou+2,efgtoa@u+2
  9207  010650  C0C0  F0E0         	movff	efgtoa@ou+3,efgtoa@u+3
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  9211  010654  0E65               	movlw	101
  9212  010656  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  9213  010658  B4D8               	btfsc	status,2,c
  9214  01065A  D005               	goto	l9794
  9215                           
  9216                           ; BSR set to: 0
  9217  01065C  C0D9  F0B9         	movff	efgtoa@e,efgtoa@ne
  9218  010660  C0DA  F0BA         	movff	efgtoa@e+1,efgtoa@ne+1
  9219  010664  D004               	goto	l2624
  9220  010666                     l9794:
  9221                           
  9222                           ; BSR set to: 0
  9223  010666  0E00               	movlw	0
  9224  010668  6FBA               	movwf	(efgtoa@ne+1)& (0+255),b
  9225  01066A  0E00               	movlw	0
  9226  01066C  6FB9               	movwf	efgtoa@ne& (0+255),b
  9227  01066E                     l2624:
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  9231  01066E  0E00               	movlw	0
  9232  010670  6FB8               	movwf	(efgtoa@pp+1)& (0+255),b
  9233  010672  0E00               	movlw	0
  9234  010674  6FB7               	movwf	efgtoa@pp& (0+255),b
  9235                           
  9236                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  9237  010676  0E00               	movlw	0
  9238  010678  6FB6               	movwf	(efgtoa@t+1)& (0+255),b
  9239  01067A  0E00               	movlw	0
  9240  01067C  6FB5               	movwf	efgtoa@t& (0+255),b
  9241                           
  9242                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  9243  01067E  0E00               	movlw	0
  9244  010680  6FD4               	movwf	(efgtoa@i+1)& (0+255),b
  9245  010682  0E00               	movlw	0
  9246  010684  6FD3               	movwf	efgtoa@i& (0+255),b
  9247                           
  9248                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  9249  010686  D0C4               	goto	l9844
  9250  010688                     l9796:
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  9254  010688  C0CB  F072         	movff	efgtoa@h,___fldiv@b
  9255  01068C  C0CC  F073         	movff	efgtoa@h+1,___fldiv@b+1
  9256  010690  C0CD  F074         	movff	efgtoa@h+2,___fldiv@b+2
  9257  010694  C0CE  F075         	movff	efgtoa@h+3,___fldiv@b+3
  9258  010698  C0DD  F076         	movff	efgtoa@u,___fldiv@a
  9259  01069C  C0DE  F077         	movff	efgtoa@u+1,___fldiv@a+1
  9260  0106A0  C0DF  F078         	movff	efgtoa@u+2,___fldiv@a+2
  9261  0106A4  C0E0  F079         	movff	efgtoa@u+3,___fldiv@a+3
  9262  0106A8  EC8B  F094         	call	___fldiv	;wreg free
  9263  0106AC  C072  F08B         	movff	?___fldiv,floorf@x
  9264  0106B0  C073  F08C         	movff	?___fldiv+1,floorf@x+1
  9265  0106B4  C074  F08D         	movff	?___fldiv+2,floorf@x+2
  9266  0106B8  C075  F08E         	movff	?___fldiv+3,floorf@x+3
  9267  0106BC  EC84  F097         	call	_floorf	;wreg free
  9268  0106C0  C08B  F0CF         	movff	?_floorf,efgtoa@l
  9269  0106C4  C08C  F0D0         	movff	?_floorf+1,efgtoa@l+1
  9270  0106C8  C08D  F0D1         	movff	?_floorf+2,efgtoa@l+2
  9271  0106CC  C08E  F0D2         	movff	?_floorf+3,efgtoa@l+3
  9272                           
  9273                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  9274  0106D0  C0CF  F060         	movff	efgtoa@l,___fltol@f1
  9275  0106D4  C0D0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  9276  0106D8  C0D1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  9277  0106DC  C0D2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  9278  0106E0  EC0C  F0A0         	call	___fltol	;wreg free
  9279  0106E4  C060  F0C1         	movff	?___fltol,efgtoa@d
  9280  0106E8  C061  F0C2         	movff	?___fltol+1,efgtoa@d+1
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9284  0106EC  B82E               	btfsc	_flags^0,4,c
  9285  0106EE  D00C               	goto	l9808
  9286                           
  9287                           ; BSR set to: 0
  9288  0106F0  51C1               	movf	efgtoa@d& (0+255),w,b
  9289  0106F2  11C2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9290  0106F4  A4D8               	btfss	status,2,c
  9291  0106F6  D008               	goto	l9808
  9292                           
  9293                           ; BSR set to: 0
  9294  0106F8  0E67               	movlw	103
  9295  0106FA  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  9296  0106FC  B4D8               	btfsc	status,2,c
  9297                           
  9298                           ; BSR set to: 0
  9299  0106FE  AFBA               	btfss	(efgtoa@ne+1)& (0+255),7,b
  9300  010700  D003               	goto	l9808
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  9304  010702  4BB5               	infsnz	efgtoa@t& (0+255),f,b
  9305  010704  2BB6               	incf	(efgtoa@t+1)& (0+255),f,b
  9306                           
  9307                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  9308  010706  D039               	goto	l9836
  9309  010708                     l9808:
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  9313  010708  51B7               	movf	efgtoa@pp& (0+255),w,b
  9314  01070A  11B8               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9315  01070C  B4D8               	btfsc	status,2,c
  9316                           
  9317                           ; BSR set to: 0
  9318  01070E  AFBA               	btfss	(efgtoa@ne+1)& (0+255),7,b
  9319  010710  D022               	goto	l9828
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  9323  010712  0E40               	movlw	low _dbuf
  9324  010714  25DB               	addwf	efgtoa@n& (0+255),w,b
  9325  010716  6ED9               	movwf	fsr2l,c
  9326  010718  0E02               	movlw	high _dbuf
  9327  01071A  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9328  01071C  6EDA               	movwf	fsr2h,c
  9329  01071E  0E2E               	movlw	46
  9330  010720  6EDF               	movwf	indf2,c
  9331                           
  9332                           ; BSR set to: 0
  9333  010722  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  9334  010724  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  9338  010726  07C7               	decf	efgtoa@w& (0+255),f,b
  9339  010728  A0D8               	btfss	status,0,c
  9340  01072A  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  9344  01072C  0E00               	movlw	0
  9345  01072E  6FB8               	movwf	(efgtoa@pp+1)& (0+255),b
  9346  010730  0E01               	movlw	1
  9347  010732  6FB7               	movwf	efgtoa@pp& (0+255),b
  9348  010734  D010               	goto	l9828
  9349  010736                     l9820:
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  9353  010736  0E40               	movlw	low _dbuf
  9354  010738  25DB               	addwf	efgtoa@n& (0+255),w,b
  9355  01073A  6ED9               	movwf	fsr2l,c
  9356  01073C  0E02               	movlw	high _dbuf
  9357  01073E  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9358  010740  6EDA               	movwf	fsr2h,c
  9359  010742  0E30               	movlw	48
  9360  010744  6EDF               	movwf	indf2,c
  9361                           
  9362                           ; BSR set to: 0
  9363  010746  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  9364  010748  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  9368  01074A  07C7               	decf	efgtoa@w& (0+255),f,b
  9369  01074C  A0D8               	btfss	status,0,c
  9370  01074E  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  9374  010750  07B5               	decf	efgtoa@t& (0+255),f,b
  9375  010752  A0D8               	btfss	status,0,c
  9376  010754  07B6               	decf	(efgtoa@t+1)& (0+255),f,b
  9377  010756                     l9828:
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  9381  010756  51B5               	movf	efgtoa@t& (0+255),w,b
  9382  010758  11B6               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9383  01075A  A4D8               	btfss	status,2,c
  9384  01075C  D7EC               	goto	l9820
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  9388  01075E  0E40               	movlw	low _dbuf
  9389  010760  25DB               	addwf	efgtoa@n& (0+255),w,b
  9390  010762  6ED9               	movwf	fsr2l,c
  9391  010764  0E02               	movlw	high _dbuf
  9392  010766  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9393  010768  6EDA               	movwf	fsr2h,c
  9394  01076A  51C1               	movf	efgtoa@d& (0+255),w,b
  9395  01076C  0F30               	addlw	48
  9396  01076E  6EDF               	movwf	indf2,c
  9397                           
  9398                           ; BSR set to: 0
  9399  010770  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  9400  010772  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  9404  010774  07C7               	decf	efgtoa@w& (0+255),f,b
  9405  010776  A0D8               	btfss	status,0,c
  9406  010778  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9407  01077A                     l9836:
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  9411  01077A  C0CB  F09B         	movff	efgtoa@h,___flsub@b
  9412  01077E  C0CC  F09C         	movff	efgtoa@h+1,___flsub@b+1
  9413  010782  C0CD  F09D         	movff	efgtoa@h+2,___flsub@b+2
  9414  010786  C0CE  F09E         	movff	efgtoa@h+3,___flsub@b+3
  9415  01078A  C0DD  F076         	movff	efgtoa@u,___flmul@a
  9416  01078E  C0DE  F077         	movff	efgtoa@u+1,___flmul@a+1
  9417  010792  C0DF  F078         	movff	efgtoa@u+2,___flmul@a+2
  9418  010796  C0E0  F079         	movff	efgtoa@u+3,___flmul@a+3
  9419  01079A  C0CF  F072         	movff	efgtoa@l,___flmul@b
  9420  01079E  C0D0  F073         	movff	efgtoa@l+1,___flmul@b+1
  9421  0107A2  C0D1  F074         	movff	efgtoa@l+2,___flmul@b+2
  9422  0107A6  C0D2  F075         	movff	efgtoa@l+3,___flmul@b+3
  9423  0107AA  ECF1  F08F         	call	___flmul	;wreg free
  9424  0107AE  C072  F09F         	movff	?___flmul,___flsub@a
  9425  0107B2  C073  F0A0         	movff	?___flmul+1,___flsub@a+1
  9426  0107B6  C074  F0A1         	movff	?___flmul+2,___flsub@a+2
  9427  0107BA  C075  F0A2         	movff	?___flmul+3,___flsub@a+3
  9428  0107BE  EC08  F0A6         	call	___flsub	;wreg free
  9429  0107C2  C09B  F0CB         	movff	?___flsub,efgtoa@h
  9430  0107C6  C09C  F0CC         	movff	?___flsub+1,efgtoa@h+1
  9431  0107CA  C09D  F0CD         	movff	?___flsub+2,efgtoa@h+2
  9432  0107CE  C09E  F0CE         	movff	?___flsub+3,efgtoa@h+3
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  9436  0107D2  C0DD  F072         	movff	efgtoa@u,___fldiv@b
  9437  0107D6  C0DE  F073         	movff	efgtoa@u+1,___fldiv@b+1
  9438  0107DA  C0DF  F074         	movff	efgtoa@u+2,___fldiv@b+2
  9439  0107DE  C0E0  F075         	movff	efgtoa@u+3,___fldiv@b+3
  9440  0107E2  0E00               	movlw	0
  9441  0107E4  6F76               	movwf	___fldiv@a& (0+255),b
  9442  0107E6  0E00               	movlw	0
  9443  0107E8  6F77               	movwf	(___fldiv@a+1)& (0+255),b
  9444  0107EA  0E20               	movlw	32
  9445  0107EC  6F78               	movwf	(___fldiv@a+2)& (0+255),b
  9446  0107EE  0E41               	movlw	65
  9447  0107F0  6F79               	movwf	(___fldiv@a+3)& (0+255),b
  9448  0107F2  EC8B  F094         	call	___fldiv	;wreg free
  9449  0107F6  C072  F0DD         	movff	?___fldiv,efgtoa@u
  9450  0107FA  C073  F0DE         	movff	?___fldiv+1,efgtoa@u+1
  9451  0107FE  C074  F0DF         	movff	?___fldiv+2,efgtoa@u+2
  9452  010802  C075  F0E0         	movff	?___fldiv+3,efgtoa@u+3
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  9456  010806  07B9               	decf	efgtoa@ne& (0+255),f,b
  9457  010808  A0D8               	btfss	status,0,c
  9458  01080A  07BA               	decf	(efgtoa@ne+1)& (0+255),f,b
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  9462  01080C  4BD3               	infsnz	efgtoa@i& (0+255),f,b
  9463  01080E  2BD4               	incf	(efgtoa@i+1)& (0+255),f,b
  9464  010810                     l9844:
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  9468  010810  51BB               	movf	efgtoa@m& (0+255),w,b
  9469  010812  5DD3               	subwf	efgtoa@i& (0+255),w,b
  9470  010814  51D4               	movf	(efgtoa@i+1)& (0+255),w,b
  9471  010816  0A80               	xorlw	128
  9472  010818  6FAA               	movwf	??_efgtoa& (0+255),b
  9473  01081A  51BC               	movf	(efgtoa@m+1)& (0+255),w,b
  9474  01081C  0A80               	xorlw	128
  9475  01081E  59AA               	subwfb	??_efgtoa& (0+255),w,b
  9476  010820  B0D8               	btfsc	status,0,c
  9477  010822  D008               	goto	u9480
  9478                           
  9479                           ; BSR set to: 0
  9480  010824  BFDC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9481  010826  D730               	goto	l9796
  9482  010828  51DC               	movf	(efgtoa@n+1)& (0+255),w,b
  9483  01082A  E104               	bnz	u9480
  9484  01082C  0E4B               	movlw	75
  9485  01082E  5DDB               	subwf	efgtoa@n& (0+255),w,b
  9486  010830  A0D8               	btfss	status,0,c
  9487  010832  D72A               	goto	l9796
  9488  010834                     u9480:
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  9492  010834  51B7               	movf	efgtoa@pp& (0+255),w,b
  9493  010836  11B8               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9494  010838  B4D8               	btfsc	status,2,c
  9495                           
  9496                           ; BSR set to: 0
  9497  01083A  A82E               	btfss	_flags^0,4,c
  9498  01083C  D00A               	goto	l9856
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  9502  01083E  0E40               	movlw	low _dbuf
  9503  010840  25DB               	addwf	efgtoa@n& (0+255),w,b
  9504  010842  6ED9               	movwf	fsr2l,c
  9505  010844  0E02               	movlw	high _dbuf
  9506  010846  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9507  010848  6EDA               	movwf	fsr2h,c
  9508  01084A  0E2E               	movlw	46
  9509  01084C  6EDF               	movwf	indf2,c
  9510                           
  9511                           ; BSR set to: 0
  9512  01084E  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  9513  010850  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  9514  010852                     l9856:
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  9518  010852  0E40               	movlw	low _dbuf
  9519  010854  25DB               	addwf	efgtoa@n& (0+255),w,b
  9520  010856  6ED9               	movwf	fsr2l,c
  9521  010858  0E02               	movlw	high _dbuf
  9522  01085A  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9523  01085C  6EDA               	movwf	fsr2h,c
  9524  01085E  0E00               	movlw	0
  9525  010860  6EDF               	movwf	indf2,c
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  9529  010862  0E65               	movlw	101
  9530  010864  19C9               	xorwf	efgtoa@nmode& (0+255),w,b
  9531  010866  A4D8               	btfss	status,2,c
  9532  010868  D44D               	goto	l9658
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  9536  01086A  0E00               	movlw	0
  9537  01086C  6FD4               	movwf	(efgtoa@i+1)& (0+255),b
  9538  01086E  0E4F               	movlw	79
  9539  010870  6FD3               	movwf	efgtoa@i& (0+255),b
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  9543  010872  0E40               	movlw	low _dbuf
  9544  010874  25D3               	addwf	efgtoa@i& (0+255),w,b
  9545  010876  6ED9               	movwf	fsr2l,c
  9546  010878  0E02               	movlw	high _dbuf
  9547  01087A  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9548  01087C  6EDA               	movwf	fsr2h,c
  9549  01087E  0E00               	movlw	0
  9550  010880  6EDF               	movwf	indf2,c
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  9554  010882  0E00               	movlw	0
  9555  010884  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  9556  010886  0E00               	movlw	0
  9557  010888  6FC3               	movwf	efgtoa@sign& (0+255),b
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  9561  01088A  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  9562  01088C  D008               	goto	l9872
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  9566  01088E  0E00               	movlw	0
  9567  010890  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  9568  010892  0E01               	movlw	1
  9569  010894  6FC3               	movwf	efgtoa@sign& (0+255),b
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  9573  010896  6DD9               	negf	efgtoa@e& (0+255),b
  9574  010898  1FDA               	comf	(efgtoa@e+1)& (0+255),f,b
  9575  01089A  B0D8               	btfsc	status,0,c
  9576  01089C  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  9577  01089E                     l9872:
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  9581  01089E  0E00               	movlw	0
  9582  0108A0  6FC6               	movwf	(efgtoa@p+1)& (0+255),b
  9583  0108A2  0E02               	movlw	2
  9584  0108A4  6FC5               	movwf	efgtoa@p& (0+255),b
  9585                           
  9586                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  9587  0108A6  D02A               	goto	l9884
  9588  0108A8                     l9874:
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  9592  0108A8  07D3               	decf	efgtoa@i& (0+255),f,b
  9593  0108AA  A0D8               	btfss	status,0,c
  9594  0108AC  07D4               	decf	(efgtoa@i+1)& (0+255),f,b
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  9598  0108AE  0E40               	movlw	low _dbuf
  9599  0108B0  25D3               	addwf	efgtoa@i& (0+255),w,b
  9600  0108B2  6ED9               	movwf	fsr2l,c
  9601  0108B4  0E02               	movlw	high _dbuf
  9602  0108B6  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9603  0108B8  6EDA               	movwf	fsr2h,c
  9604  0108BA  C0D9  F060         	movff	efgtoa@e,___awmod@dividend
  9605  0108BE  C0DA  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  9606  0108C2  0E00               	movlw	0
  9607  0108C4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  9608  0108C6  0E0A               	movlw	10
  9609  0108C8  6F62               	movwf	___awmod@divisor& (0+255),b
  9610  0108CA  EC78  F0A2         	call	___awmod	;wreg free
  9611  0108CE  5160               	movf	?___awmod& (0+255),w,b
  9612  0108D0  0F30               	addlw	48
  9613  0108D2  6EDF               	movwf	indf2,c
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  9617  0108D4  C0D9  F060         	movff	efgtoa@e,___awdiv@dividend
  9618  0108D8  C0DA  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  9619  0108DC  0E00               	movlw	0
  9620  0108DE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9621  0108E0  0E0A               	movlw	10
  9622  0108E2  6F62               	movwf	___awdiv@divisor& (0+255),b
  9623  0108E4  ECFC  F0A1         	call	___awdiv	;wreg free
  9624  0108E8  C060  F0D9         	movff	?___awdiv,efgtoa@e
  9625  0108EC  C061  F0DA         	movff	?___awdiv+1,efgtoa@e+1
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  9629  0108F0  07C5               	decf	efgtoa@p& (0+255),f,b
  9630  0108F2  A0D8               	btfss	status,0,c
  9631  0108F4  07C6               	decf	(efgtoa@p+1)& (0+255),f,b
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  9635  0108F6  07C7               	decf	efgtoa@w& (0+255),f,b
  9636  0108F8  A0D8               	btfss	status,0,c
  9637  0108FA  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9638  0108FC                     l9884:
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  9642  0108FC  51D9               	movf	efgtoa@e& (0+255),w,b
  9643  0108FE  11DA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9644  010900  A4D8               	btfss	status,2,c
  9645  010902  D7D2               	goto	l9874
  9646                           
  9647                           ; BSR set to: 0
  9648  010904  BFC6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9649  010906  D005               	goto	u9540
  9650  010908  51C6               	movf	(efgtoa@p+1)& (0+255),w,b
  9651  01090A  E1CE               	bnz	l9874
  9652  01090C  05C5               	decf	efgtoa@p& (0+255),w,b
  9653  01090E  B0D8               	btfsc	status,0,c
  9654  010910  D7CB               	goto	l9874
  9655  010912                     u9540:
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  9659  010912  07D3               	decf	efgtoa@i& (0+255),f,b
  9660  010914  A0D8               	btfss	status,0,c
  9661  010916  07D4               	decf	(efgtoa@i+1)& (0+255),f,b
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  9665  010918  51C3               	movf	efgtoa@sign& (0+255),w,b
  9666  01091A  11C4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9667  01091C  A4D8               	btfss	status,2,c
  9668  01091E  D004               	goto	l9894
  9669                           
  9670                           ; BSR set to: 0
  9671  010920  0E00               	movlw	0
  9672  010922  6FB2               	movwf	(_efgtoa$4197+1)& (0+255),b
  9673  010924  0E2B               	movlw	43
  9674  010926  D003               	goto	L6
  9675  010928                     l9894:
  9676                           
  9677                           ; BSR set to: 0
  9678  010928  0E00               	movlw	0
  9679  01092A  6FB2               	movwf	(_efgtoa$4197+1)& (0+255),b
  9680  01092C  0E2D               	movlw	45
  9681  01092E                     L6:
  9682  01092E  6FB1               	movwf	_efgtoa$4197& (0+255),b
  9683                           
  9684                           ; BSR set to: 0
  9685  010930  0E40               	movlw	low _dbuf
  9686  010932  25D3               	addwf	efgtoa@i& (0+255),w,b
  9687  010934  6ED9               	movwf	fsr2l,c
  9688  010936  0E02               	movlw	high _dbuf
  9689  010938  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9690  01093A  6EDA               	movwf	fsr2h,c
  9691  01093C  0060  F2C7  FFDF   	movff	_efgtoa$4197,indf2
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  9695  010942  07C7               	decf	efgtoa@w& (0+255),f,b
  9696  010944  A0D8               	btfss	status,0,c
  9697  010946  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  9701  010948  07D3               	decf	efgtoa@i& (0+255),f,b
  9702  01094A  A0D8               	btfss	status,0,c
  9703  01094C  07D4               	decf	(efgtoa@i+1)& (0+255),f,b
  9704                           
  9705                           ; BSR set to: 0
  9706                           
  9707                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9708  01094E  0EBF               	movlw	191
  9709  010950  6FAA               	movwf	??_efgtoa& (0+255),b
  9710  010952  0EFF               	movlw	255
  9711  010954  6FAB               	movwf	(??_efgtoa+1)& (0+255),b
  9712  010956  51A9               	movf	efgtoa@c& (0+255),w,b
  9713  010958  6FAC               	movwf	(??_efgtoa+2)& (0+255),b
  9714  01095A  6BAD               	clrf	(??_efgtoa+3)& (0+255),b
  9715  01095C  51AA               	movf	??_efgtoa& (0+255),w,b
  9716  01095E  27AC               	addwf	(??_efgtoa+2)& (0+255),f,b
  9717  010960  51AB               	movf	(??_efgtoa+1)& (0+255),w,b
  9718  010962  23AD               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9719  010964  51AD               	movf	(??_efgtoa+3)& (0+255),w,b
  9720  010966  E104               	bnz	u9560
  9721  010968  0E1A               	movlw	26
  9722  01096A  5DAC               	subwf	(??_efgtoa+2)& (0+255),w,b
  9723  01096C  A0D8               	btfss	status,0,c
  9724  01096E  D004               	goto	l9908
  9725  010970                     u9560:
  9726                           
  9727                           ; BSR set to: 0
  9728  010970  0E00               	movlw	0
  9729  010972  6FB4               	movwf	(_efgtoa$4198+1)& (0+255),b
  9730  010974  0E65               	movlw	101
  9731  010976  D003               	goto	L7
  9732  010978                     l9908:
  9733                           
  9734                           ; BSR set to: 0
  9735  010978  0E00               	movlw	0
  9736  01097A  6FB4               	movwf	(_efgtoa$4198+1)& (0+255),b
  9737  01097C  0E45               	movlw	69
  9738  01097E                     L7:
  9739  01097E  6FB3               	movwf	_efgtoa$4198& (0+255),b
  9740                           
  9741                           ; BSR set to: 0
  9742  010980  0E40               	movlw	low _dbuf
  9743  010982  25D3               	addwf	efgtoa@i& (0+255),w,b
  9744  010984  6ED9               	movwf	fsr2l,c
  9745  010986  0E02               	movlw	high _dbuf
  9746  010988  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9747  01098A  6EDA               	movwf	fsr2h,c
  9748  01098C  0060  F2CF  FFDF   	movff	_efgtoa$4198,indf2
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  9752  010992  07C7               	decf	efgtoa@w& (0+255),f,b
  9753  010994  A0D8               	btfss	status,0,c
  9754  010996  07C8               	decf	(efgtoa@w+1)& (0+255),f,b
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  9758  010998  0E40               	movlw	low _dbuf
  9759  01099A  25DB               	addwf	efgtoa@n& (0+255),w,b
  9760  01099C  6F60               	movwf	strcpy@dest& (0+255),b
  9761  01099E  0E02               	movlw	high _dbuf
  9762  0109A0  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9763  0109A2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  9764  0109A4  0E40               	movlw	low _dbuf
  9765  0109A6  25D3               	addwf	efgtoa@i& (0+255),w,b
  9766  0109A8  6F62               	movwf	strcpy@src& (0+255),b
  9767  0109AA  0E02               	movlw	high _dbuf
  9768  0109AC  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9769  0109AE  6F63               	movwf	(strcpy@src+1)& (0+255),b
  9770  0109B0  EC4E  F0A3         	call	_strcpy	;wreg free
  9771  0109B4  EF82  F080         	goto	l9658
  9772  0109B8                     __end_of_efgtoa:
  9773                           	callstack 0
  9774                           
  9775 ;; *************** function _tolower *****************
  9776 ;; Defined at:
  9777 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  c               2    4[BANK0 ] int 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;		None
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  2    4[BANK0 ] int 
  9784 ;; Registers used:
  9785 ;;		wreg, status,2, status,0
  9786 ;; Tracked objects:
  9787 ;;		On entry : 3F/0
  9788 ;;		On exit  : 3F/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9793 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9794 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9795 ;;Total ram usage:        6 bytes
  9796 ;; Hardware stack levels used: 1
  9797 ;; Hardware stack levels required when called: 8
  9798 ;; This function calls:
  9799 ;;		_isupper
  9800 ;; This function is called by:
  9801 ;;		_efgtoa
  9802 ;;		_vfpfcnvrt
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text16
  9807  014F92                     __ptext16:
  9808                           	callstack 0
  9809  014F92                     _tolower:
  9810                           	callstack 19
  9811                           
  9812                           ; BSR set to: 0
  9813                           
  9814                           ; BSR set to: 0
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;incstack = 0
  9818  014F92  0EBF               	movlw	191
  9819  014F94  6F66               	movwf	??_tolower& (0+255),b
  9820  014F96  0EFF               	movlw	255
  9821  014F98  6F67               	movwf	(??_tolower+1)& (0+255),b
  9822  014F9A  C064  F068         	movff	tolower@c,??_tolower+2
  9823  014F9E  C065  F069         	movff	tolower@c+1,??_tolower+3
  9824  014FA2  5166               	movf	??_tolower& (0+255),w,b
  9825  014FA4  2768               	addwf	(??_tolower+2)& (0+255),f,b
  9826  014FA6  5167               	movf	(??_tolower+1)& (0+255),w,b
  9827  014FA8  2369               	addwfc	(??_tolower+3)& (0+255),f,b
  9828  014FAA  5169               	movf	(??_tolower+3)& (0+255),w,b
  9829  014FAC  E10A               	bnz	l2910
  9830  014FAE  0E1A               	movlw	26
  9831  014FB0  5D68               	subwf	(??_tolower+2)& (0+255),w,b
  9832  014FB2  B0D8               	btfsc	status,0,c
  9833  014FB4  D006               	goto	l2910
  9834                           
  9835                           ; BSR set to: 0
  9836  014FB6  0E20               	movlw	32
  9837  014FB8  1164               	iorwf	tolower@c& (0+255),w,b
  9838  014FBA  6F64               	movwf	?_tolower& (0+255),b
  9839  014FBC  5165               	movf	(tolower@c+1)& (0+255),w,b
  9840  014FBE  6F65               	movwf	(?_tolower+1)& (0+255),b
  9841  014FC0  0012               	return	
  9842  014FC2                     l2910:
  9843                           
  9844                           ; BSR set to: 0
  9845  014FC2  C064  F064         	movff	tolower@c,?_tolower
  9846  014FC6  C065  F065         	movff	tolower@c+1,?_tolower+1
  9847                           
  9848                           ; BSR set to: 0
  9849  014FCA  0012               	return		;funcret
  9850  014FCC                     __end_of_tolower:
  9851                           	callstack 0
  9852                           
  9853 ;; *************** function _isupper *****************
  9854 ;; Defined at:
  9855 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;  c               2   31[COMRAM] int 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;		None
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  2   31[COMRAM] int 
  9862 ;; Registers used:
  9863 ;;		wreg, status,2, status,0
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 3F/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9871 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9872 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9873 ;;Total ram usage:        6 bytes
  9874 ;; Hardware stack levels used: 1
  9875 ;; Hardware stack levels required when called: 7
  9876 ;; This function calls:
  9877 ;;		Nothing
  9878 ;; This function is called by:
  9879 ;;		_efgtoa
  9880 ;;		_vfpfcnvrt
  9881 ;;		_tolower
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text17
  9886  015076                     __ptext17:
  9887                           	callstack 0
  9888  015076                     _isupper:
  9889                           	callstack 19
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;incstack = 0
  9893  015076  0EBF               	movlw	191
  9894  015078  0100               	movlb	0	; () banked
  9895  01507A  6F60               	movwf	??_isupper& (0+255),b
  9896  01507C  0EFF               	movlw	255
  9897  01507E  6F61               	movwf	(??_isupper+1)& (0+255),b
  9898  015080  C020  F062         	movff	isupper@c,??_isupper+2
  9899  015084  C021  F063         	movff	isupper@c+1,??_isupper+3
  9900  015088  5160               	movf	??_isupper& (0+255),w,b
  9901  01508A  2762               	addwf	(??_isupper+2)& (0+255),f,b
  9902  01508C  5161               	movf	(??_isupper+1)& (0+255),w,b
  9903  01508E  2363               	addwfc	(??_isupper+3)& (0+255),f,b
  9904  015090  5163               	movf	(??_isupper+3)& (0+255),w,b
  9905  015092  E106               	bnz	u7810
  9906  015094  0E1A               	movlw	26
  9907  015096  5D62               	subwf	(??_isupper+2)& (0+255),w,b
  9908  015098  B0D8               	btfsc	status,0,c
  9909  01509A  D002               	goto	u7810
  9910  01509C  0E01               	movlw	1
  9911  01509E  D001               	goto	u7820
  9912  0150A0                     u7810:
  9913  0150A0  0E00               	movlw	0
  9914  0150A2                     u7820:
  9915  0150A2  6E20               	movwf	?_isupper^0,c
  9916  0150A4  6A21               	clrf	(?_isupper+1)^0,c
  9917                           
  9918                           ; BSR set to: 0
  9919  0150A6  0012               	return		;funcret
  9920  0150A8                     __end_of_isupper:
  9921                           	callstack 0
  9922                           
  9923 ;; *************** function _strcpy *****************
  9924 ;; Defined at:
  9925 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  9928 ;;		 -> dbuf(80), 
  9929 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  9930 ;;		 -> STR_35(4), STR_34(4), STR_31(4), STR_30(4), 
  9931 ;;		 -> dbuf(80), 
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;  d               2    6[BANK0 ] PTR unsigned char 
  9934 ;;		 -> dbuf(80), 
  9935 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  9936 ;;		 -> STR_35(4), STR_34(4), STR_31(4), STR_30(4), 
  9937 ;;		 -> dbuf(80), 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  2    0[BANK0 ] PTR unsigned char 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9942 ;; Tracked objects:
  9943 ;;		On entry : 3F/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9947 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9948 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9950 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9951 ;;Total ram usage:       10 bytes
  9952 ;; Hardware stack levels used: 1
  9953 ;; Hardware stack levels required when called: 7
  9954 ;; This function calls:
  9955 ;;		Nothing
  9956 ;; This function is called by:
  9957 ;;		_efgtoa
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text18
  9962  01469C                     __ptext18:
  9963                           	callstack 0
  9964  01469C                     _strcpy:
  9965                           	callstack 19
  9966                           
  9967                           ; BSR set to: 0
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;incstack = 0
  9971  01469C  C062  F064         	movff	strcpy@src,strcpy@s
  9972  0146A0  C063  F065         	movff	strcpy@src+1,strcpy@s+1
  9973  0146A4  C060  F066         	movff	strcpy@dest,strcpy@d
  9974  0146A8  C061  F067         	movff	strcpy@dest+1,strcpy@d+1
  9975  0146AC                     l9482:
  9976  0146AC  0100               	movlb	0	; () banked
  9977  0146AE  5164               	movf	strcpy@s& (0+255),w,b
  9978  0146B0  6E20               	movwf	??_strcpy^0,c
  9979  0146B2  5165               	movf	(strcpy@s+1)& (0+255),w,b
  9980  0146B4  6E21               	movwf	(??_strcpy+1)^0,c
  9981  0146B6  4B64               	infsnz	strcpy@s& (0+255),f,b
  9982  0146B8  2B65               	incf	(strcpy@s+1)& (0+255),f,b
  9983  0146BA  0060  F083  FFF6   	movff	??_strcpy,tblptrl
  9984  0146C0  0060  F087  FFF7   	movff	??_strcpy+1,tblptrh
  9985  0146C6  0E00               	movlw	low (__mediumconst shr (0+16))
  9986  0146C8  6EF8               	movwf	tblptru,c
  9987  0146CA  0060  F19B  FFD9   	movff	strcpy@d,fsr2l
  9988  0146D0  0060  F19F  FFDA   	movff	strcpy@d+1,fsr2h
  9989  0146D6  4B66               	infsnz	strcpy@d& (0+255),f,b
  9990  0146D8  2B67               	incf	(strcpy@d+1)& (0+255),f,b
  9991  0146DA  0E1F               	movlw	(high __ramtop+-1)
  9992  0146DC  64F7               	cpfsgt	tblptrh,c
  9993  0146DE  D003               	bra	u8757
  9994  0146E0  0008               	tblrd		*
  9995  0146E2  50F5               	movf	tablat,w,c
  9996  0146E4  D007               	bra	u8750
  9997  0146E6                     u8757:
  9998  0146E6  006F FFDB FFE1     	movff	tblptrl,fsr1l
  9999  0146EC  006F FFDF FFE2     	movff	tblptrh,fsr1h
 10000  0146F2  50E7               	movf	indf1,w,c
 10001  0146F4                     u8750:
 10002  0146F4  6EDF               	movwf	indf2,c
 10003  0146F6  50DF               	movf	indf2,w,c
 10004  0146F8  B4D8               	btfsc	status,2,c
 10005  0146FA  0012               	return	
 10006  0146FC  D7D7               	goto	l9482
 10007  0146FE                     __end_of_strcpy:
 10008                           	callstack 0
 10009                           
 10010 ;; *************** function _pad *****************
 10011 ;; Defined at:
 10012 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
 10015 ;;		 -> sprintf@f(11), NULL(0), 
 10016 ;;  buf             2   20[BANK0 ] PTR unsigned char 
 10017 ;;		 -> dbuf(80), 
 10018 ;;  p               2   22[BANK0 ] int 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;  w               2   27[BANK0 ] int 
 10021 ;;  i               2   25[BANK0 ] int 
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  2   18[BANK0 ] int 
 10024 ;; Registers used:
 10025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 3F/0
 10028 ;;		On exit  : 3F/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10031 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10032 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10033 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10034 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10035 ;;Total ram usage:       11 bytes
 10036 ;; Hardware stack levels used: 1
 10037 ;; Hardware stack levels required when called: 11
 10038 ;; This function calls:
 10039 ;;		_fputc
 10040 ;;		_fputs
 10041 ;;		_strlen
 10042 ;; This function is called by:
 10043 ;;		_efgtoa
 10044 ;;		_utoa
 10045 ;; This function uses a non-reentrant model
 10046 ;;
 10047                           
 10048                           	psect	text19
 10049  0142D8                     __ptext19:
 10050                           	callstack 0
 10051  0142D8                     _pad:
 10052                           	callstack 15
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 10056                           
 10057                           ;incstack = 0
 10058  0142D8  A02E               	btfss	_flags^0,0,c
 10059  0142DA  D00A               	goto	l9440
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 10063  0142DC  C074  F069         	movff	pad@buf,fputs@s
 10064  0142E0  C075  F06A         	movff	pad@buf+1,fputs@s+1
 10065  0142E4  C072  F06B         	movff	pad@fp,fputs@fp
 10066  0142E8  C073  F06C         	movff	pad@fp+1,fputs@fp+1
 10067  0142EC  ECE7  F0A2         	call	_fputs	;wreg free
 10068  0142F0                     l9440:
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 10072  0142F0  BF77               	btfsc	(pad@p+1)& (0+255),7,b
 10073  0142F2  D005               	goto	l9444
 10074                           
 10075                           ; BSR set to: 0
 10076  0142F4  C076  F07B         	movff	pad@p,pad@w
 10077  0142F8  C077  F07C         	movff	pad@p+1,pad@w+1
 10078  0142FC  D004               	goto	l2559
 10079  0142FE                     l9444:
 10080                           
 10081                           ; BSR set to: 0
 10082  0142FE  0E00               	movlw	0
 10083  014300  6F7C               	movwf	(pad@w+1)& (0+255),b
 10084  014302  0E00               	movlw	0
 10085  014304  6F7B               	movwf	pad@w& (0+255),b
 10086  014306                     l2559:
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10090  014306  0E00               	movlw	0
 10091  014308  6F7A               	movwf	(pad@i+1)& (0+255),b
 10092  01430A  0E00               	movlw	0
 10093  01430C  6F79               	movwf	pad@i& (0+255),b
 10094                           
 10095                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10096  01430E  D00C               	goto	l9450
 10097  014310                     l9446:
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 10101  014310  0E00               	movlw	0
 10102  014312  6F61               	movwf	(fputc@c+1)& (0+255),b
 10103  014314  0E20               	movlw	32
 10104  014316  6F60               	movwf	fputc@c& (0+255),b
 10105  014318  C072  F062         	movff	pad@fp,fputc@fp
 10106  01431C  C073  F063         	movff	pad@fp+1,fputc@fp+1
 10107  014320  EC69  F0A0         	call	_fputc	;wreg free
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10111  014324  4B79               	infsnz	pad@i& (0+255),f,b
 10112  014326  2B7A               	incf	(pad@i+1)& (0+255),f,b
 10113  014328                     l9450:
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10117  014328  517B               	movf	pad@w& (0+255),w,b
 10118  01432A  5D79               	subwf	pad@i& (0+255),w,b
 10119  01432C  517A               	movf	(pad@i+1)& (0+255),w,b
 10120  01432E  0A80               	xorlw	128
 10121  014330  6F78               	movwf	??_pad& (0+255),b
 10122  014332  517C               	movf	(pad@w+1)& (0+255),w,b
 10123  014334  0A80               	xorlw	128
 10124  014336  5978               	subwfb	??_pad& (0+255),w,b
 10125  014338  A0D8               	btfss	status,0,c
 10126  01433A  D7EA               	goto	l9446
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 10130  01433C  B02E               	btfsc	_flags^0,0,c
 10131  01433E  D00A               	goto	l9454
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 10135  014340  C074  F069         	movff	pad@buf,fputs@s
 10136  014344  C075  F06A         	movff	pad@buf+1,fputs@s+1
 10137  014348  C072  F06B         	movff	pad@fp,fputs@fp
 10138  01434C  C073  F06C         	movff	pad@fp+1,fputs@fp+1
 10139  014350  ECE7  F0A2         	call	_fputs	;wreg free
 10140  014354                     l9454:
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
 10144  014354  C074  F020         	movff	pad@buf,strlen@s
 10145  014358  C075  F021         	movff	pad@buf+1,strlen@s+1
 10146  01435C  EC02  F0A5         	call	_strlen	;wreg free
 10147  014360  517B               	movf	pad@w& (0+255),w,b
 10148  014362  2420               	addwf	?_strlen^0,w,c
 10149  014364  6F72               	movwf	?_pad& (0+255),b
 10150  014366  517C               	movf	(pad@w+1)& (0+255),w,b
 10151  014368  2021               	addwfc	(?_strlen+1)^0,w,c
 10152  01436A  6F73               	movwf	(?_pad+1)& (0+255),b
 10153                           
 10154                           ; BSR set to: 0
 10155  01436C  0012               	return		;funcret
 10156  01436E                     __end_of_pad:
 10157                           	callstack 0
 10158                           
 10159 ;; *************** function _floorf *****************
 10160 ;; Defined at:
 10161 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;  x               4   43[BANK0 ] float 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  u               4   59[BANK0 ] struct .
 10166 ;;  m               4   53[BANK0 ] unsigned long 
 10167 ;;  e               2   57[BANK0 ] int 
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  4   43[BANK0 ] float 
 10170 ;; Registers used:
 10171 ;;		wreg, status,2, status,0
 10172 ;; Tracked objects:
 10173 ;;		On entry : 3F/0
 10174 ;;		On exit  : 3F/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10178 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10179 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10180 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10181 ;;Total ram usage:       20 bytes
 10182 ;; Hardware stack levels used: 1
 10183 ;; Hardware stack levels required when called: 7
 10184 ;; This function calls:
 10185 ;;		Nothing
 10186 ;; This function is called by:
 10187 ;;		_efgtoa
 10188 ;; This function uses a non-reentrant model
 10189 ;;
 10190                           
 10191                           	psect	text20
 10192  012F08                     __ptext20:
 10193                           	callstack 0
 10194  012F08                     _floorf:
 10195                           	callstack 19
 10196                           
 10197                           ; BSR set to: 0
 10198                           
 10199                           ; BSR set to: 0
 10200                           ;incstack = 0
 10201  012F08  C118  F09B         	movff	floorf@F526,floorf@u
 10202  012F0C  C119  F09C         	movff	floorf@F526+1,floorf@u+1
 10203  012F10  C11A  F09D         	movff	floorf@F526+2,floorf@u+2
 10204  012F14  C11B  F09E         	movff	floorf@F526+3,floorf@u+3
 10205  012F18  C08B  F09B         	movff	floorf@x,floorf@u
 10206  012F1C  C08C  F09C         	movff	floorf@x+1,floorf@u+1
 10207  012F20  C08D  F09D         	movff	floorf@x+2,floorf@u+2
 10208  012F24  C08E  F09E         	movff	floorf@x+3,floorf@u+3
 10209                           
 10210                           ; BSR set to: 0
 10211  012F28  0E81               	movlw	129
 10212  012F2A  6F8F               	movwf	??_floorf& (0+255),b
 10213  012F2C  0EFF               	movlw	255
 10214  012F2E  6F90               	movwf	(??_floorf+1)& (0+255),b
 10215  012F30  C09B  F091         	movff	floorf@u,??_floorf+2
 10216  012F34  C09C  F092         	movff	floorf@u+1,??_floorf+3
 10217  012F38  C09D  F093         	movff	floorf@u+2,??_floorf+4
 10218  012F3C  C09E  F094         	movff	floorf@u+3,??_floorf+5
 10219  012F40  0E18               	movlw	24
 10220  012F42  D005               	goto	u8780
 10221  012F44                     u8785:
 10222  012F44  90D8               	bcf	status,0,c
 10223  012F46  3394               	rrcf	(??_floorf+5)& (0+255),f,b
 10224  012F48  3393               	rrcf	(??_floorf+4)& (0+255),f,b
 10225  012F4A  3392               	rrcf	(??_floorf+3)& (0+255),f,b
 10226  012F4C  3391               	rrcf	(??_floorf+2)& (0+255),f,b
 10227  012F4E                     u8780:
 10228  012F4E  2EE8               	decfsz	wreg,f,c
 10229  012F50  D7F9               	goto	u8785
 10230  012F52  5191               	movf	(??_floorf+2)& (0+255),w,b
 10231  012F54  258F               	addwf	??_floorf& (0+255),w,b
 10232  012F56  6F99               	movwf	floorf@e& (0+255),b
 10233  012F58  0E00               	movlw	0
 10234  012F5A  2190               	addwfc	(??_floorf+1)& (0+255),w,b
 10235  012F5C  6F9A               	movwf	(floorf@e+1)& (0+255),b
 10236  012F5E  BF9A               	btfsc	(floorf@e+1)& (0+255),7,b
 10237  012F60  D00F               	goto	l9500
 10238  012F62  519A               	movf	(floorf@e+1)& (0+255),w,b
 10239  012F64  E104               	bnz	u8790
 10240  012F66  0E17               	movlw	23
 10241  012F68  5D99               	subwf	floorf@e& (0+255),w,b
 10242  012F6A  A0D8               	btfss	status,0,c
 10243  012F6C  D009               	goto	l9500
 10244  012F6E                     u8790:
 10245                           
 10246                           ; BSR set to: 0
 10247  012F6E  C08B  F08B         	movff	floorf@x,?_floorf
 10248  012F72  C08C  F08C         	movff	floorf@x+1,?_floorf+1
 10249  012F76  C08D  F08D         	movff	floorf@x+2,?_floorf+2
 10250  012F7A  C08E  F08E         	movff	floorf@x+3,?_floorf+3
 10251  012F7E  0012               	return	
 10252  012F80                     l9500:
 10253                           
 10254                           ; BSR set to: 0
 10255  012F80  BF9A               	btfsc	(floorf@e+1)& (0+255),7,b
 10256  012F82  D05C               	goto	l9510
 10257                           
 10258                           ; BSR set to: 0
 10259  012F84  C099  F08F         	movff	floorf@e,??_floorf
 10260  012F88  0EFF               	movlw	255
 10261  012F8A  6F90               	movwf	(??_floorf+1)& (0+255),b
 10262  012F8C  0EFF               	movlw	255
 10263  012F8E  6F91               	movwf	(??_floorf+2)& (0+255),b
 10264  012F90  0E7F               	movlw	127
 10265  012F92  6F92               	movwf	(??_floorf+3)& (0+255),b
 10266  012F94  0E00               	movlw	0
 10267  012F96  6F93               	movwf	(??_floorf+4)& (0+255),b
 10268  012F98                     u8815:
 10269  012F98  678F               	tstfsz	??_floorf& (0+255),b
 10270  012F9A  D001               	goto	u8816
 10271  012F9C  D007               	goto	u8817
 10272  012F9E                     u8816:
 10273  012F9E  3593               	rlcf	(??_floorf+4)& (0+255),w,b
 10274  012FA0  3393               	rrcf	(??_floorf+4)& (0+255),f,b
 10275  012FA2  3392               	rrcf	(??_floorf+3)& (0+255),f,b
 10276  012FA4  3391               	rrcf	(??_floorf+2)& (0+255),f,b
 10277  012FA6  3390               	rrcf	(??_floorf+1)& (0+255),f,b
 10278  012FA8  2F8F               	decfsz	??_floorf& (0+255),f,b
 10279  012FAA  D7F6               	goto	u8815
 10280  012FAC                     u8817:
 10281  012FAC  C090  F095         	movff	??_floorf+1,floorf@m
 10282  012FB0  C091  F096         	movff	??_floorf+2,floorf@m+1
 10283  012FB4  C092  F097         	movff	??_floorf+3,floorf@m+2
 10284  012FB8  C093  F098         	movff	??_floorf+4,floorf@m+3
 10285  012FBC  0100               	movlb	0	; () banked
 10286  012FBE  5195               	movf	floorf@m& (0+255),w,b
 10287  012FC0  159B               	andwf	floorf@u& (0+255),w,b
 10288  012FC2  6F8F               	movwf	??_floorf& (0+255),b
 10289  012FC4  5196               	movf	(floorf@m+1)& (0+255),w,b
 10290  012FC6  159C               	andwf	(floorf@u+1)& (0+255),w,b
 10291  012FC8  6F90               	movwf	(??_floorf+1)& (0+255),b
 10292  012FCA  5197               	movf	(floorf@m+2)& (0+255),w,b
 10293  012FCC  159D               	andwf	(floorf@u+2)& (0+255),w,b
 10294  012FCE  6F91               	movwf	(??_floorf+2)& (0+255),b
 10295  012FD0  5198               	movf	(floorf@m+3)& (0+255),w,b
 10296  012FD2  159E               	andwf	(floorf@u+3)& (0+255),w,b
 10297  012FD4  6F92               	movwf	(??_floorf+3)& (0+255),b
 10298  012FD6  518F               	movf	??_floorf& (0+255),w,b
 10299  012FD8  1190               	iorwf	(??_floorf+1)& (0+255),w,b
 10300  012FDA  1191               	iorwf	(??_floorf+2)& (0+255),w,b
 10301  012FDC  1192               	iorwf	(??_floorf+3)& (0+255),w,b
 10302  012FDE  B4D8               	btfsc	status,2,c
 10303  012FE0  D7C6               	goto	u8790
 10304                           
 10305                           ; BSR set to: 0
 10306  012FE2  C09B  F08F         	movff	floorf@u,??_floorf
 10307  012FE6  C09C  F090         	movff	floorf@u+1,??_floorf+1
 10308  012FEA  C09D  F091         	movff	floorf@u+2,??_floorf+2
 10309  012FEE  C09E  F092         	movff	floorf@u+3,??_floorf+3
 10310  012FF2  0E20               	movlw	32
 10311  012FF4  D005               	goto	u8830
 10312  012FF6                     u8835:
 10313  012FF6  90D8               	bcf	status,0,c
 10314  012FF8  3392               	rrcf	(??_floorf+3)& (0+255),f,b
 10315  012FFA  3391               	rrcf	(??_floorf+2)& (0+255),f,b
 10316  012FFC  3390               	rrcf	(??_floorf+1)& (0+255),f,b
 10317  012FFE  338F               	rrcf	??_floorf& (0+255),f,b
 10318  013000                     u8830:
 10319  013000  2EE8               	decfsz	wreg,f,c
 10320  013002  D7F9               	goto	u8835
 10321  013004  518F               	movf	??_floorf& (0+255),w,b
 10322  013006  B4D8               	btfsc	status,2,c
 10323  013008  D008               	goto	l2789
 10324                           
 10325                           ; BSR set to: 0
 10326  01300A  5195               	movf	floorf@m& (0+255),w,b
 10327  01300C  279B               	addwf	floorf@u& (0+255),f,b
 10328  01300E  5196               	movf	(floorf@m+1)& (0+255),w,b
 10329  013010  239C               	addwfc	(floorf@u+1)& (0+255),f,b
 10330  013012  5197               	movf	(floorf@m+2)& (0+255),w,b
 10331  013014  239D               	addwfc	(floorf@u+2)& (0+255),f,b
 10332  013016  5198               	movf	(floorf@m+3)& (0+255),w,b
 10333  013018  239E               	addwfc	(floorf@u+3)& (0+255),f,b
 10334  01301A                     l2789:
 10335                           
 10336                           ; BSR set to: 0
 10337  01301A  1D95               	comf	floorf@m& (0+255),w,b
 10338  01301C  6F8F               	movwf	??_floorf& (0+255),b
 10339  01301E  1D96               	comf	(floorf@m+1)& (0+255),w,b
 10340  013020  6F90               	movwf	(??_floorf+1)& (0+255),b
 10341  013022  1D97               	comf	(floorf@m+2)& (0+255),w,b
 10342  013024  6F91               	movwf	(??_floorf+2)& (0+255),b
 10343  013026  1D98               	comf	(floorf@m+3)& (0+255),w,b
 10344  013028  6F92               	movwf	(??_floorf+3)& (0+255),b
 10345  01302A  518F               	movf	??_floorf& (0+255),w,b
 10346  01302C  179B               	andwf	floorf@u& (0+255),f,b
 10347  01302E  5190               	movf	(??_floorf+1)& (0+255),w,b
 10348  013030  179C               	andwf	(floorf@u+1)& (0+255),f,b
 10349  013032  5191               	movf	(??_floorf+2)& (0+255),w,b
 10350  013034  179D               	andwf	(floorf@u+2)& (0+255),f,b
 10351  013036  5192               	movf	(??_floorf+3)& (0+255),w,b
 10352  013038  179E               	andwf	(floorf@u+3)& (0+255),f,b
 10353  01303A  D032               	goto	l9518
 10354  01303C                     l9510:
 10355                           
 10356                           ; BSR set to: 0
 10357  01303C  C09B  F08F         	movff	floorf@u,??_floorf
 10358  013040  C09C  F090         	movff	floorf@u+1,??_floorf+1
 10359  013044  C09D  F091         	movff	floorf@u+2,??_floorf+2
 10360  013048  C09E  F092         	movff	floorf@u+3,??_floorf+3
 10361  01304C  0E20               	movlw	32
 10362  01304E  D005               	goto	u8850
 10363  013050                     u8855:
 10364  013050  90D8               	bcf	status,0,c
 10365  013052  3392               	rrcf	(??_floorf+3)& (0+255),f,b
 10366  013054  3391               	rrcf	(??_floorf+2)& (0+255),f,b
 10367  013056  3390               	rrcf	(??_floorf+1)& (0+255),f,b
 10368  013058  338F               	rrcf	??_floorf& (0+255),f,b
 10369  01305A                     u8850:
 10370  01305A  2EE8               	decfsz	wreg,f,c
 10371  01305C  D7F9               	goto	u8855
 10372  01305E  678F               	tstfsz	??_floorf& (0+255),b
 10373  013060  D008               	goto	l9514
 10374                           
 10375                           ; BSR set to: 0
 10376  013062  0E00               	movlw	0
 10377  013064  6F9B               	movwf	floorf@u& (0+255),b
 10378  013066  0E00               	movlw	0
 10379  013068  6F9C               	movwf	(floorf@u+1)& (0+255),b
 10380  01306A  0E00               	movlw	0
 10381  01306C  6F9D               	movwf	(floorf@u+2)& (0+255),b
 10382  01306E  0E00               	movlw	0
 10383  013070  D016               	goto	L8
 10384  013072                     l9514:
 10385                           
 10386                           ; BSR set to: 0
 10387  013072  90D8               	bcf	status,0,c
 10388  013074  359B               	rlcf	floorf@u& (0+255),w,b
 10389  013076  6F8F               	movwf	??_floorf& (0+255),b
 10390  013078  359C               	rlcf	(floorf@u+1)& (0+255),w,b
 10391  01307A  6F90               	movwf	(??_floorf+1)& (0+255),b
 10392  01307C  359D               	rlcf	(floorf@u+2)& (0+255),w,b
 10393  01307E  6F91               	movwf	(??_floorf+2)& (0+255),b
 10394  013080  359E               	rlcf	(floorf@u+3)& (0+255),w,b
 10395  013082  6F92               	movwf	(??_floorf+3)& (0+255),b
 10396  013084  518F               	movf	??_floorf& (0+255),w,b
 10397  013086  1190               	iorwf	(??_floorf+1)& (0+255),w,b
 10398  013088  1191               	iorwf	(??_floorf+2)& (0+255),w,b
 10399  01308A  1192               	iorwf	(??_floorf+3)& (0+255),w,b
 10400  01308C  B4D8               	btfsc	status,2,c
 10401  01308E  D008               	goto	l9518
 10402                           
 10403                           ; BSR set to: 0
 10404  013090  0E00               	movlw	0
 10405  013092  6F9B               	movwf	floorf@u& (0+255),b
 10406  013094  0E00               	movlw	0
 10407  013096  6F9C               	movwf	(floorf@u+1)& (0+255),b
 10408  013098  0E80               	movlw	128
 10409  01309A  6F9D               	movwf	(floorf@u+2)& (0+255),b
 10410  01309C  0EBF               	movlw	191
 10411  01309E                     L8:
 10412  01309E  6F9E               	movwf	(floorf@u+3)& (0+255),b
 10413  0130A0                     l9518:
 10414                           
 10415                           ; BSR set to: 0
 10416  0130A0  C09B  F08B         	movff	floorf@u,?_floorf
 10417  0130A4  C09C  F08C         	movff	floorf@u+1,?_floorf+1
 10418  0130A8  C09D  F08D         	movff	floorf@u+2,?_floorf+2
 10419  0130AC  C09E  F08E         	movff	floorf@u+3,?_floorf+3
 10420                           
 10421                           ; BSR set to: 0
 10422  0130B0  0012               	return		;funcret
 10423  0130B2                     __end_of_floorf:
 10424                           	callstack 0
 10425                           
 10426 ;; *************** function ___fpclassifyf *****************
 10427 ;; Defined at:
 10428 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  x               4    0[BANK0 ] float 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  u               4   10[BANK0 ] struct .
 10433 ;;  e               2    8[BANK0 ] int 
 10434 ;; Return value:  Size  Location     Type
 10435 ;;                  2    0[BANK0 ] int 
 10436 ;; Registers used:
 10437 ;;		wreg, status,2, status,0
 10438 ;; Tracked objects:
 10439 ;;		On entry : 3F/0
 10440 ;;		On exit  : 3F/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10443 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10444 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10446 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10447 ;;Total ram usage:       14 bytes
 10448 ;; Hardware stack levels used: 1
 10449 ;; Hardware stack levels required when called: 7
 10450 ;; This function calls:
 10451 ;;		Nothing
 10452 ;; This function is called by:
 10453 ;;		_efgtoa
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           	psect	text21
 10458  013DCE                     __ptext21:
 10459                           	callstack 0
 10460  013DCE                     ___fpclassifyf:
 10461                           	callstack 19
 10462                           
 10463                           ; BSR set to: 0
 10464                           
 10465                           ; BSR set to: 0
 10466                           ;incstack = 0
 10467  013DCE  C11C  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
 10468  013DD2  C11D  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 10469  013DD6  C11E  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 10470  013DDA  C11F  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 10471  013DDE  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
 10472  013DE2  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10473  013DE6  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10474  013DEA  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10475                           
 10476                           ; BSR set to: 0
 10477  013DEE  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
 10478  013DF2  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10479  013DF6  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10480  013DFA  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10481  013DFE  0E18               	movlw	24
 10482  013E00  D005               	goto	u8680
 10483  013E02                     u8685:
 10484  013E02  90D8               	bcf	status,0,c
 10485  013E04  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
 10486  013E06  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
 10487  013E08  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
 10488  013E0A  3364               	rrcf	??___fpclassifyf& (0+255),f,b
 10489  013E0C                     u8680:
 10490  013E0C  2EE8               	decfsz	wreg,f,c
 10491  013E0E  D7F9               	goto	u8685
 10492  013E10  5164               	movf	??___fpclassifyf& (0+255),w,b
 10493  013E12  6F68               	movwf	___fpclassifyf@e& (0+255),b
 10494  013E14  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
 10495  013E16  5168               	movf	___fpclassifyf@e& (0+255),w,b
 10496  013E18  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 10497  013E1A  A4D8               	btfss	status,2,c
 10498  013E1C  D019               	goto	l9470
 10499                           
 10500                           ; BSR set to: 0
 10501  013E1E  90D8               	bcf	status,0,c
 10502  013E20  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
 10503  013E22  6F64               	movwf	??___fpclassifyf& (0+255),b
 10504  013E24  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
 10505  013E26  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
 10506  013E28  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
 10507  013E2A  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
 10508  013E2C  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
 10509  013E2E  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
 10510  013E30  5164               	movf	??___fpclassifyf& (0+255),w,b
 10511  013E32  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 10512  013E34  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 10513  013E36  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 10514  013E38  A4D8               	btfss	status,2,c
 10515  013E3A  D005               	goto	l9466
 10516                           
 10517                           ; BSR set to: 0
 10518  013E3C  0E00               	movlw	0
 10519  013E3E  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
 10520  013E40  0E02               	movlw	2
 10521  013E42  6F60               	movwf	?___fpclassifyf& (0+255),b
 10522  013E44  0012               	return	
 10523  013E46                     l9466:
 10524                           
 10525                           ; BSR set to: 0
 10526  013E46  0E00               	movlw	0
 10527  013E48  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
 10528  013E4A  0E03               	movlw	3
 10529  013E4C  6F60               	movwf	?___fpclassifyf& (0+255),b
 10530  013E4E  0012               	return	
 10531  013E50                     l9470:
 10532                           
 10533                           ; BSR set to: 0
 10534  013E50  2968               	incf	___fpclassifyf@e& (0+255),w,b
 10535  013E52  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 10536  013E54  A4D8               	btfss	status,2,c
 10537  013E56  D01C               	goto	l9476
 10538                           
 10539                           ; BSR set to: 0
 10540  013E58  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
 10541  013E5C  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10542  013E60  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10543  013E64  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10544  013E68  0E09               	movlw	9
 10545  013E6A                     u8725:
 10546  013E6A  90D8               	bcf	status,0,c
 10547  013E6C  3764               	rlcf	??___fpclassifyf& (0+255),f,b
 10548  013E6E  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
 10549  013E70  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
 10550  013E72  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
 10551  013E74  2EE8               	decfsz	wreg,f,c
 10552  013E76  D7F9               	goto	u8725
 10553  013E78  5164               	movf	??___fpclassifyf& (0+255),w,b
 10554  013E7A  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 10555  013E7C  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 10556  013E7E  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 10557  013E80  A4D8               	btfss	status,2,c
 10558  013E82  D002               	goto	u8730
 10559  013E84  0E01               	movlw	1
 10560  013E86  D001               	goto	u8740
 10561  013E88                     u8730:
 10562  013E88  0E00               	movlw	0
 10563  013E8A                     u8740:
 10564  013E8A  6F60               	movwf	?___fpclassifyf& (0+255),b
 10565  013E8C  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
 10566  013E8E  0012               	return	
 10567  013E90                     l9476:
 10568                           
 10569                           ; BSR set to: 0
 10570  013E90  0E00               	movlw	0
 10571  013E92  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
 10572  013E94  0E04               	movlw	4
 10573  013E96  6F60               	movwf	?___fpclassifyf& (0+255),b
 10574                           
 10575                           ; BSR set to: 0
 10576  013E98  0012               	return		;funcret
 10577  013E9A                     __end_of___fpclassifyf:
 10578                           	callstack 0
 10579                           
 10580 ;; *************** function ___fltol *****************
 10581 ;; Defined at:
 10582 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  f1              4    0[BANK0 ] int 
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  exp1            1   32[COMRAM] unsigned char 
 10587 ;;  sign1           1   31[COMRAM] unsigned char 
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  4    0[BANK0 ] long 
 10590 ;; Registers used:
 10591 ;;		wreg, status,2, status,0
 10592 ;; Tracked objects:
 10593 ;;		On entry : 3F/0
 10594 ;;		On exit  : 3F/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;Total ram usage:       10 bytes
 10602 ;; Hardware stack levels used: 1
 10603 ;; Hardware stack levels required when called: 7
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		_efgtoa
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text22
 10612  014018                     __ptext22:
 10613                           	callstack 0
 10614  014018                     ___fltol:
 10615                           	callstack 19
 10616                           
 10617                           ; BSR set to: 0
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;incstack = 0
 10621  014018  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10622  01401A  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10623  01401C  6E21               	movwf	___fltol@exp1^0,c
 10624  01401E  5021               	movf	___fltol@exp1^0,w,c
 10625  014020  A4D8               	btfss	status,2,c
 10626  014022  D009               	goto	l9360
 10627  014024                     u8500:
 10628                           
 10629                           ; BSR set to: 0
 10630  014024  0E00               	movlw	0
 10631  014026  6F60               	movwf	?___fltol& (0+255),b
 10632  014028  0E00               	movlw	0
 10633  01402A  6F61               	movwf	(?___fltol+1)& (0+255),b
 10634  01402C  0E00               	movlw	0
 10635  01402E  6F62               	movwf	(?___fltol+2)& (0+255),b
 10636  014030  0E00               	movlw	0
 10637  014032  6F63               	movwf	(?___fltol+3)& (0+255),b
 10638  014034  0012               	return	
 10639  014036                     l9360:
 10640                           
 10641                           ; BSR set to: 0
 10642  014036  C060  F064         	movff	___fltol@f1,??___fltol
 10643  01403A  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 10644  01403E  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 10645  014042  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 10646  014046  0E20               	movlw	32
 10647  014048  D005               	goto	u8510
 10648  01404A                     u8515:
 10649  01404A  90D8               	bcf	status,0,c
 10650  01404C  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 10651  01404E  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 10652  014050  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 10653  014052  3364               	rrcf	??___fltol& (0+255),f,b
 10654  014054                     u8510:
 10655  014054  2EE8               	decfsz	wreg,f,c
 10656  014056  D7F9               	goto	u8515
 10657  014058  5164               	movf	??___fltol& (0+255),w,b
 10658  01405A  6E20               	movwf	___fltol@sign1^0,c
 10659                           
 10660                           ; BSR set to: 0
 10661  01405C  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 10662                           
 10663                           ; BSR set to: 0
 10664  01405E  0EFF               	movlw	255
 10665  014060  1760               	andwf	___fltol@f1& (0+255),f,b
 10666  014062  0EFF               	movlw	255
 10667  014064  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 10668  014066  0EFF               	movlw	255
 10669  014068  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 10670  01406A  0E00               	movlw	0
 10671  01406C  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 10672                           
 10673                           ; BSR set to: 0
 10674  01406E  0E96               	movlw	150
 10675  014070  5E21               	subwf	___fltol@exp1^0,f,c
 10676                           
 10677                           ; BSR set to: 0
 10678  014072  AE21               	btfss	___fltol@exp1^0,7,c
 10679  014074  D00D               	goto	l9380
 10680                           
 10681                           ; BSR set to: 0
 10682  014076  5021               	movf	___fltol@exp1^0,w,c
 10683  014078  0A80               	xorlw	128
 10684  01407A  0F97               	addlw	151
 10685  01407C  A0D8               	btfss	status,0,c
 10686  01407E  D7D2               	goto	u8500
 10687  014080                     l9376:
 10688                           
 10689                           ; BSR set to: 0
 10690  014080  90D8               	bcf	status,0,c
 10691  014082  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10692  014084  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10693  014086  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10694  014088  3360               	rrcf	___fltol@f1& (0+255),f,b
 10695                           
 10696                           ; BSR set to: 0
 10697  01408A  3E21               	incfsz	___fltol@exp1^0,f,c
 10698  01408C  D7F9               	goto	l9376
 10699  01408E  D00D               	goto	u8550
 10700  014090                     l9380:
 10701                           
 10702                           ; BSR set to: 0
 10703  014090  0E1F               	movlw	31
 10704  014092  6421               	cpfsgt	___fltol@exp1^0,c
 10705  014094  D007               	goto	l9388
 10706  014096  D7C6               	goto	u8500
 10707  014098                     l9386:
 10708                           
 10709                           ; BSR set to: 0
 10710  014098  90D8               	bcf	status,0,c
 10711  01409A  3760               	rlcf	___fltol@f1& (0+255),f,b
 10712  01409C  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10713  01409E  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10714  0140A0  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10715  0140A2  0621               	decf	___fltol@exp1^0,f,c
 10716  0140A4                     l9388:
 10717                           
 10718                           ; BSR set to: 0
 10719  0140A4  5021               	movf	___fltol@exp1^0,w,c
 10720  0140A6  A4D8               	btfss	status,2,c
 10721  0140A8  D7F7               	goto	l9386
 10722  0140AA                     u8550:
 10723                           
 10724                           ; BSR set to: 0
 10725  0140AA  5020               	movf	___fltol@sign1^0,w,c
 10726  0140AC  B4D8               	btfsc	status,2,c
 10727  0140AE  D008               	goto	l9394
 10728                           
 10729                           ; BSR set to: 0
 10730  0140B0  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 10731  0140B2  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 10732  0140B4  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 10733  0140B6  6D60               	negf	___fltol@f1& (0+255),b
 10734  0140B8  0E00               	movlw	0
 10735  0140BA  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10736  0140BC  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10737  0140BE  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10738  0140C0                     l9394:
 10739                           
 10740                           ; BSR set to: 0
 10741  0140C0  C060  F060         	movff	___fltol@f1,?___fltol
 10742  0140C4  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 10743  0140C8  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 10744  0140CC  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 10745                           
 10746                           ; BSR set to: 0
 10747  0140D0  0012               	return		;funcret
 10748  0140D2                     __end_of___fltol:
 10749                           	callstack 0
 10750                           
 10751 ;; *************** function ___flsub *****************
 10752 ;; Defined at:
 10753 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;  b               4   59[BANK0 ] long 
 10756 ;;  a               4   63[BANK0 ] long 
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;		None
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  4   59[BANK0 ] long 
 10761 ;; Registers used:
 10762 ;;		wreg, status,2, status,0, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 3F/0
 10765 ;;		On exit  : 3F/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10768 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10771 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10772 ;;Total ram usage:        8 bytes
 10773 ;; Hardware stack levels used: 1
 10774 ;; Hardware stack levels required when called: 8
 10775 ;; This function calls:
 10776 ;;		___fladd
 10777 ;; This function is called by:
 10778 ;;		_ps_math
 10779 ;;		_efgtoa
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text23
 10784  014C10                     __ptext23:
 10785                           	callstack 0
 10786  014C10                     ___flsub:
 10787                           	callstack 18
 10788                           
 10789                           ; BSR set to: 0
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;incstack = 0
 10793  014C10  0E00               	movlw	0
 10794  014C12  1B9F               	xorwf	___flsub@a& (0+255),f,b
 10795  014C14  0E00               	movlw	0
 10796  014C16  1BA0               	xorwf	(___flsub@a+1)& (0+255),f,b
 10797  014C18  0E00               	movlw	0
 10798  014C1A  1BA1               	xorwf	(___flsub@a+2)& (0+255),f,b
 10799  014C1C  0E80               	movlw	128
 10800  014C1E  1BA2               	xorwf	(___flsub@a+3)& (0+255),f,b
 10801                           
 10802                           ; BSR set to: 0
 10803  014C20  C09B  F08B         	movff	___flsub@b,___fladd@b
 10804  014C24  C09C  F08C         	movff	___flsub@b+1,___fladd@b+1
 10805  014C28  C09D  F08D         	movff	___flsub@b+2,___fladd@b+2
 10806  014C2C  C09E  F08E         	movff	___flsub@b+3,___fladd@b+3
 10807  014C30  C09F  F08F         	movff	___flsub@a,___fladd@a
 10808  014C34  C0A0  F090         	movff	___flsub@a+1,___fladd@a+1
 10809  014C38  C0A1  F091         	movff	___flsub@a+2,___fladd@a+2
 10810  014C3C  C0A2  F092         	movff	___flsub@a+3,___fladd@a+3
 10811  014C40  EC99  F091         	call	___fladd	;wreg free
 10812  014C44  C08B  F09B         	movff	?___fladd,?___flsub
 10813  014C48  C08C  F09C         	movff	?___fladd+1,?___flsub+1
 10814  014C4C  C08D  F09D         	movff	?___fladd+2,?___flsub+2
 10815  014C50  C08E  F09E         	movff	?___fladd+3,?___flsub+3
 10816                           
 10817                           ; BSR set to: 0
 10818  014C54  0012               	return		;funcret
 10819  014C56                     __end_of___flsub:
 10820                           	callstack 0
 10821                           
 10822 ;; *************** function ___fladd *****************
 10823 ;; Defined at:
 10824 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
 10825 ;; Parameters:    Size  Location     Type
 10826 ;;  b               4   43[BANK0 ] long 
 10827 ;;  a               4   47[BANK0 ] long 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;  grs             1   58[BANK0 ] unsigned char 
 10830 ;;  bexp            1   57[BANK0 ] unsigned char 
 10831 ;;  aexp            1   56[BANK0 ] unsigned char 
 10832 ;;  signs           1   55[BANK0 ] unsigned char 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  4   43[BANK0 ] unsigned char 
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0
 10837 ;; Tracked objects:
 10838 ;;		On entry : 3F/0
 10839 ;;		On exit  : 3F/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10842 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10843 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10844 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10845 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10846 ;;Total ram usage:       16 bytes
 10847 ;; Hardware stack levels used: 1
 10848 ;; Hardware stack levels required when called: 7
 10849 ;; This function calls:
 10850 ;;		Nothing
 10851 ;; This function is called by:
 10852 ;;		_ps_math
 10853 ;;		___flsub
 10854 ;;		_efgtoa
 10855 ;;		_sqrtf
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text24
 10860  012332                     __ptext24:
 10861                           	callstack 0
 10862  012332                     ___fladd:
 10863                           	callstack 18
 10864                           
 10865                           ; BSR set to: 0
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;incstack = 0
 10869  012332  518E               	movf	(___fladd@b+3)& (0+255),w,b
 10870  012334  0B80               	andlw	128
 10871  012336  6F97               	movwf	___fladd@signs& (0+255),b
 10872  012338  518E               	movf	(___fladd@b+3)& (0+255),w,b
 10873  01233A  258E               	addwf	(___fladd@b+3)& (0+255),w,b
 10874  01233C  6F99               	movwf	___fladd@bexp& (0+255),b
 10875                           
 10876                           ; BSR set to: 0
 10877  01233E  BF8D               	btfsc	(___fladd@b+2)& (0+255),7,b
 10878                           
 10879                           ; BSR set to: 0
 10880  012340  8199               	bsf	___fladd@bexp& (0+255),0,b
 10881                           
 10882                           ; BSR set to: 0
 10883  012342  5199               	movf	___fladd@bexp& (0+255),w,b
 10884  012344  B4D8               	btfsc	status,2,c
 10885  012346  D00D               	goto	l8718
 10886                           
 10887                           ; BSR set to: 0
 10888  012348  2999               	incf	___fladd@bexp& (0+255),w,b
 10889  01234A  A4D8               	btfss	status,2,c
 10890  01234C  D008               	goto	l8714
 10891                           
 10892                           ; BSR set to: 0
 10893  01234E  0E00               	movlw	0
 10894  012350  6F8B               	movwf	___fladd@b& (0+255),b
 10895  012352  0E00               	movlw	0
 10896  012354  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 10897  012356  0E00               	movlw	0
 10898  012358  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 10899  01235A  0E00               	movlw	0
 10900  01235C  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 10901  01235E                     l8714:
 10902                           
 10903                           ; BSR set to: 0
 10904  01235E  8F8D               	bsf	(___fladd@b+2)& (0+255),7,b
 10905  012360  D006               	goto	L9
 10906  012362                     l8718:
 10907                           
 10908                           ; BSR set to: 0
 10909  012362  0E00               	movlw	0
 10910  012364  6F8B               	movwf	___fladd@b& (0+255),b
 10911  012366  0E00               	movlw	0
 10912  012368  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 10913  01236A  0E00               	movlw	0
 10914  01236C  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 10915  01236E                     L9:
 10916  01236E  0E00               	movlw	0
 10917  012370  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 10918                           
 10919                           ; BSR set to: 0
 10920  012372  5192               	movf	(___fladd@a+3)& (0+255),w,b
 10921  012374  0B80               	andlw	128
 10922  012376  6F98               	movwf	___fladd@aexp& (0+255),b
 10923                           
 10924                           ; BSR set to: 0
 10925  012378  5197               	movf	___fladd@signs& (0+255),w,b
 10926  01237A  1998               	xorwf	___fladd@aexp& (0+255),w,b
 10927  01237C  A4D8               	btfss	status,2,c
 10928                           
 10929                           ; BSR set to: 0
 10930  01237E  8D97               	bsf	___fladd@signs& (0+255),6,b
 10931                           
 10932                           ; BSR set to: 0
 10933  012380  5192               	movf	(___fladd@a+3)& (0+255),w,b
 10934  012382  2592               	addwf	(___fladd@a+3)& (0+255),w,b
 10935  012384  6F98               	movwf	___fladd@aexp& (0+255),b
 10936                           
 10937                           ; BSR set to: 0
 10938  012386  BF91               	btfsc	(___fladd@a+2)& (0+255),7,b
 10939                           
 10940                           ; BSR set to: 0
 10941  012388  8198               	bsf	___fladd@aexp& (0+255),0,b
 10942                           
 10943                           ; BSR set to: 0
 10944  01238A  5198               	movf	___fladd@aexp& (0+255),w,b
 10945  01238C  B4D8               	btfsc	status,2,c
 10946  01238E  D00D               	goto	l8742
 10947                           
 10948                           ; BSR set to: 0
 10949  012390  2998               	incf	___fladd@aexp& (0+255),w,b
 10950  012392  A4D8               	btfss	status,2,c
 10951  012394  D008               	goto	l8738
 10952                           
 10953                           ; BSR set to: 0
 10954  012396  0E00               	movlw	0
 10955  012398  6F8F               	movwf	___fladd@a& (0+255),b
 10956  01239A  0E00               	movlw	0
 10957  01239C  6F90               	movwf	(___fladd@a+1)& (0+255),b
 10958  01239E  0E00               	movlw	0
 10959  0123A0  6F91               	movwf	(___fladd@a+2)& (0+255),b
 10960  0123A2  0E00               	movlw	0
 10961  0123A4  6F92               	movwf	(___fladd@a+3)& (0+255),b
 10962  0123A6                     l8738:
 10963                           
 10964                           ; BSR set to: 0
 10965  0123A6  8F91               	bsf	(___fladd@a+2)& (0+255),7,b
 10966  0123A8  D006               	goto	L10
 10967  0123AA                     l8742:
 10968                           
 10969                           ; BSR set to: 0
 10970  0123AA  0E00               	movlw	0
 10971  0123AC  6F8F               	movwf	___fladd@a& (0+255),b
 10972  0123AE  0E00               	movlw	0
 10973  0123B0  6F90               	movwf	(___fladd@a+1)& (0+255),b
 10974  0123B2  0E00               	movlw	0
 10975  0123B4  6F91               	movwf	(___fladd@a+2)& (0+255),b
 10976  0123B6                     L10:
 10977  0123B6  0E00               	movlw	0
 10978  0123B8  6F92               	movwf	(___fladd@a+3)& (0+255),b
 10979                           
 10980                           ; BSR set to: 0
 10981  0123BA  5199               	movf	___fladd@bexp& (0+255),w,b
 10982  0123BC  5D98               	subwf	___fladd@aexp& (0+255),w,b
 10983  0123BE  B0D8               	btfsc	status,0,c
 10984  0123C0  D022               	goto	l8780
 10985                           
 10986                           ; BSR set to: 0
 10987  0123C2  AD97               	btfss	___fladd@signs& (0+255),6,b
 10988  0123C4  D002               	goto	l8750
 10989                           
 10990                           ; BSR set to: 0
 10991  0123C6  0E80               	movlw	128
 10992  0123C8  1B97               	xorwf	___fladd@signs& (0+255),f,b
 10993  0123CA                     l8750:
 10994                           
 10995                           ; BSR set to: 0
 10996  0123CA  C099  F09A         	movff	___fladd@bexp,___fladd@grs
 10997                           
 10998                           ; BSR set to: 0
 10999  0123CE  C098  F099         	movff	___fladd@aexp,___fladd@bexp
 11000                           
 11001                           ; BSR set to: 0
 11002  0123D2  C09A  F098         	movff	___fladd@grs,___fladd@aexp
 11003                           
 11004                           ; BSR set to: 0
 11005  0123D6  C08B  F09A         	movff	___fladd@b,___fladd@grs
 11006                           
 11007                           ; BSR set to: 0
 11008  0123DA  C08F  F08B         	movff	___fladd@a,___fladd@b
 11009                           
 11010                           ; BSR set to: 0
 11011  0123DE  C09A  F08F         	movff	___fladd@grs,___fladd@a
 11012                           
 11013                           ; BSR set to: 0
 11014  0123E2  C08C  F09A         	movff	___fladd@b+1,___fladd@grs
 11015                           
 11016                           ; BSR set to: 0
 11017  0123E6  C090  F08C         	movff	___fladd@a+1,___fladd@b+1
 11018                           
 11019                           ; BSR set to: 0
 11020  0123EA  C09A  F090         	movff	___fladd@grs,___fladd@a+1
 11021                           
 11022                           ; BSR set to: 0
 11023  0123EE  C08D  F09A         	movff	___fladd@b+2,___fladd@grs
 11024                           
 11025                           ; BSR set to: 0
 11026  0123F2  C091  F08D         	movff	___fladd@a+2,___fladd@b+2
 11027                           
 11028                           ; BSR set to: 0
 11029  0123F6  C09A  F091         	movff	___fladd@grs,___fladd@a+2
 11030                           
 11031                           ; BSR set to: 0
 11032  0123FA  C08E  F09A         	movff	___fladd@b+3,___fladd@grs
 11033                           
 11034                           ; BSR set to: 0
 11035  0123FE  C092  F08E         	movff	___fladd@a+3,___fladd@b+3
 11036                           
 11037                           ; BSR set to: 0
 11038  012402  C09A  F092         	movff	___fladd@grs,___fladd@a+3
 11039  012406                     l8780:
 11040                           
 11041                           ; BSR set to: 0
 11042  012406  0E00               	movlw	0
 11043  012408  6F9A               	movwf	___fladd@grs& (0+255),b
 11044                           
 11045                           ; BSR set to: 0
 11046  01240A  5199               	movf	___fladd@bexp& (0+255),w,b
 11047  01240C  C098  F093         	movff	___fladd@aexp,??___fladd
 11048  012410  6B94               	clrf	(??___fladd+1)& (0+255),b
 11049  012412  5F93               	subwf	??___fladd& (0+255),f,b
 11050  012414  0E00               	movlw	0
 11051  012416  5B94               	subwfb	(??___fladd+1)& (0+255),f,b
 11052  012418  BF94               	btfsc	(??___fladd+1)& (0+255),7,b
 11053  01241A  D02C               	goto	l2353
 11054  01241C  5194               	movf	(??___fladd+1)& (0+255),w,b
 11055  01241E  E104               	bnz	u7490
 11056  012420  0E1A               	movlw	26
 11057  012422  5D93               	subwf	??___fladd& (0+255),w,b
 11058  012424  A0D8               	btfss	status,0,c
 11059  012426  D026               	goto	l2353
 11060  012428                     u7490:
 11061                           
 11062                           ; BSR set to: 0
 11063  012428  518B               	movf	___fladd@b& (0+255),w,b
 11064  01242A  118C               	iorwf	(___fladd@b+1)& (0+255),w,b
 11065  01242C  118D               	iorwf	(___fladd@b+2)& (0+255),w,b
 11066  01242E  118E               	iorwf	(___fladd@b+3)& (0+255),w,b
 11067  012430  B4D8               	btfsc	status,2,c
 11068  012432  D002               	goto	u7500
 11069  012434  0E01               	movlw	1
 11070  012436  D001               	goto	u7510
 11071  012438                     u7500:
 11072  012438  0E00               	movlw	0
 11073  01243A                     u7510:
 11074  01243A  6F9A               	movwf	___fladd@grs& (0+255),b
 11075                           
 11076                           ; BSR set to: 0
 11077  01243C  0E00               	movlw	0
 11078  01243E  6F8B               	movwf	___fladd@b& (0+255),b
 11079  012440  0E00               	movlw	0
 11080  012442  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 11081  012444  0E00               	movlw	0
 11082  012446  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 11083  012448  0E00               	movlw	0
 11084  01244A  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 11085                           
 11086                           ; BSR set to: 0
 11087  01244C  C098  F099         	movff	___fladd@aexp,___fladd@bexp
 11088  012450  D015               	goto	u7540
 11089  012452                     l2354:
 11090                           
 11091                           ; BSR set to: 0
 11092  012452  A19A               	btfss	___fladd@grs& (0+255),0,b
 11093  012454  D005               	goto	l8792
 11094                           
 11095                           ; BSR set to: 0
 11096  012456  90D8               	bcf	status,0,c
 11097  012458  319A               	rrcf	___fladd@grs& (0+255),w,b
 11098  01245A  0901               	iorlw	1
 11099  01245C  6F9A               	movwf	___fladd@grs& (0+255),b
 11100  01245E  D002               	goto	l8794
 11101  012460                     l8792:
 11102                           
 11103                           ; BSR set to: 0
 11104  012460  90D8               	bcf	status,0,c
 11105  012462  339A               	rrcf	___fladd@grs& (0+255),f,b
 11106  012464                     l8794:
 11107                           
 11108                           ; BSR set to: 0
 11109  012464  B18B               	btfsc	___fladd@b& (0+255),0,b
 11110                           
 11111                           ; BSR set to: 0
 11112  012466  8F9A               	bsf	___fladd@grs& (0+255),7,b
 11113                           
 11114                           ; BSR set to: 0
 11115  012468  358E               	rlcf	(___fladd@b+3)& (0+255),w,b
 11116  01246A  338E               	rrcf	(___fladd@b+3)& (0+255),f,b
 11117  01246C  338D               	rrcf	(___fladd@b+2)& (0+255),f,b
 11118  01246E  338C               	rrcf	(___fladd@b+1)& (0+255),f,b
 11119  012470  338B               	rrcf	___fladd@b& (0+255),f,b
 11120                           
 11121                           ; BSR set to: 0
 11122  012472  2B99               	incf	___fladd@bexp& (0+255),f,b
 11123  012474                     l2353:
 11124                           
 11125                           ; BSR set to: 0
 11126  012474  5198               	movf	___fladd@aexp& (0+255),w,b
 11127  012476  5D99               	subwf	___fladd@bexp& (0+255),w,b
 11128  012478  A0D8               	btfss	status,0,c
 11129  01247A  D7EB               	goto	l2354
 11130  01247C                     u7540:
 11131                           
 11132                           ; BSR set to: 0
 11133  01247C  BD97               	btfsc	___fladd@signs& (0+255),6,b
 11134  01247E  D028               	goto	l8826
 11135                           
 11136                           ; BSR set to: 0
 11137  012480  5199               	movf	___fladd@bexp& (0+255),w,b
 11138  012482  A4D8               	btfss	status,2,c
 11139  012484  D009               	goto	l8808
 11140                           
 11141                           ; BSR set to: 0
 11142  012486  0E00               	movlw	0
 11143  012488  6F8B               	movwf	?___fladd& (0+255),b
 11144  01248A  0E00               	movlw	0
 11145  01248C  6F8C               	movwf	(?___fladd+1)& (0+255),b
 11146  01248E  0E00               	movlw	0
 11147  012490  6F8D               	movwf	(?___fladd+2)& (0+255),b
 11148  012492  0E00               	movlw	0
 11149  012494  6F8E               	movwf	(?___fladd+3)& (0+255),b
 11150  012496  0012               	return	
 11151  012498                     l8808:
 11152                           
 11153                           ; BSR set to: 0
 11154  012498  518F               	movf	___fladd@a& (0+255),w,b
 11155  01249A  278B               	addwf	___fladd@b& (0+255),f,b
 11156  01249C  5190               	movf	(___fladd@a+1)& (0+255),w,b
 11157  01249E  238C               	addwfc	(___fladd@b+1)& (0+255),f,b
 11158  0124A0  5191               	movf	(___fladd@a+2)& (0+255),w,b
 11159  0124A2  238D               	addwfc	(___fladd@b+2)& (0+255),f,b
 11160  0124A4  5192               	movf	(___fladd@a+3)& (0+255),w,b
 11161  0124A6  238E               	addwfc	(___fladd@b+3)& (0+255),f,b
 11162                           
 11163                           ; BSR set to: 0
 11164  0124A8  A18E               	btfss	(___fladd@b+3)& (0+255),0,b
 11165  0124AA  D071               	goto	u7670
 11166                           
 11167                           ; BSR set to: 0
 11168  0124AC  A19A               	btfss	___fladd@grs& (0+255),0,b
 11169  0124AE  D005               	goto	l8816
 11170                           
 11171                           ; BSR set to: 0
 11172  0124B0  90D8               	bcf	status,0,c
 11173  0124B2  319A               	rrcf	___fladd@grs& (0+255),w,b
 11174  0124B4  0901               	iorlw	1
 11175  0124B6  6F9A               	movwf	___fladd@grs& (0+255),b
 11176  0124B8  D002               	goto	l8818
 11177  0124BA                     l8816:
 11178                           
 11179                           ; BSR set to: 0
 11180  0124BA  90D8               	bcf	status,0,c
 11181  0124BC  339A               	rrcf	___fladd@grs& (0+255),f,b
 11182  0124BE                     l8818:
 11183                           
 11184                           ; BSR set to: 0
 11185  0124BE  B18B               	btfsc	___fladd@b& (0+255),0,b
 11186                           
 11187                           ; BSR set to: 0
 11188  0124C0  8F9A               	bsf	___fladd@grs& (0+255),7,b
 11189                           
 11190                           ; BSR set to: 0
 11191  0124C2  358E               	rlcf	(___fladd@b+3)& (0+255),w,b
 11192  0124C4  338E               	rrcf	(___fladd@b+3)& (0+255),f,b
 11193  0124C6  338D               	rrcf	(___fladd@b+2)& (0+255),f,b
 11194  0124C8  338C               	rrcf	(___fladd@b+1)& (0+255),f,b
 11195  0124CA  338B               	rrcf	___fladd@b& (0+255),f,b
 11196                           
 11197                           ; BSR set to: 0
 11198  0124CC  2B99               	incf	___fladd@bexp& (0+255),f,b
 11199  0124CE  D05F               	goto	u7670
 11200  0124D0                     l8826:
 11201                           
 11202                           ; BSR set to: 0
 11203  0124D0  518F               	movf	___fladd@a& (0+255),w,b
 11204  0124D2  5D8B               	subwf	___fladd@b& (0+255),w,b
 11205  0124D4  5190               	movf	(___fladd@a+1)& (0+255),w,b
 11206  0124D6  598C               	subwfb	(___fladd@b+1)& (0+255),w,b
 11207  0124D8  5191               	movf	(___fladd@a+2)& (0+255),w,b
 11208  0124DA  598D               	subwfb	(___fladd@b+2)& (0+255),w,b
 11209  0124DC  518E               	movf	(___fladd@b+3)& (0+255),w,b
 11210  0124DE  0A80               	xorlw	128
 11211  0124E0  6F93               	movwf	??___fladd& (0+255),b
 11212  0124E2  5192               	movf	(___fladd@a+3)& (0+255),w,b
 11213  0124E4  0A80               	xorlw	128
 11214  0124E6  5993               	subwfb	??___fladd& (0+255),w,b
 11215  0124E8  B0D8               	btfsc	status,0,c
 11216  0124EA  D025               	goto	l8836
 11217                           
 11218                           ; BSR set to: 0
 11219  0124EC  518B               	movf	___fladd@b& (0+255),w,b
 11220  0124EE  5D8F               	subwf	___fladd@a& (0+255),w,b
 11221  0124F0  6F93               	movwf	??___fladd& (0+255),b
 11222  0124F2  518C               	movf	(___fladd@b+1)& (0+255),w,b
 11223  0124F4  5990               	subwfb	(___fladd@a+1)& (0+255),w,b
 11224  0124F6  6F94               	movwf	(??___fladd+1)& (0+255),b
 11225  0124F8  518D               	movf	(___fladd@b+2)& (0+255),w,b
 11226  0124FA  5991               	subwfb	(___fladd@a+2)& (0+255),w,b
 11227  0124FC  6F95               	movwf	(??___fladd+2)& (0+255),b
 11228  0124FE  518E               	movf	(___fladd@b+3)& (0+255),w,b
 11229  012500  5992               	subwfb	(___fladd@a+3)& (0+255),w,b
 11230  012502  6F96               	movwf	(??___fladd+3)& (0+255),b
 11231  012504  0EFF               	movlw	255
 11232  012506  2593               	addwf	??___fladd& (0+255),w,b
 11233  012508  6F8B               	movwf	___fladd@b& (0+255),b
 11234  01250A  0EFF               	movlw	255
 11235  01250C  2194               	addwfc	(??___fladd+1)& (0+255),w,b
 11236  01250E  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 11237  012510  0EFF               	movlw	255
 11238  012512  2195               	addwfc	(??___fladd+2)& (0+255),w,b
 11239  012514  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 11240  012516  0EFF               	movlw	255
 11241  012518  2196               	addwfc	(??___fladd+3)& (0+255),w,b
 11242  01251A  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 11243  01251C  0E80               	movlw	128
 11244  01251E  1B97               	xorwf	___fladd@signs& (0+255),f,b
 11245                           
 11246                           ; BSR set to: 0
 11247  012520  6D9A               	negf	___fladd@grs& (0+255),b
 11248                           
 11249                           ; BSR set to: 0
 11250  012522  519A               	movf	___fladd@grs& (0+255),w,b
 11251  012524  A4D8               	btfss	status,2,c
 11252  012526  D00F               	goto	l2369
 11253                           
 11254                           ; BSR set to: 0
 11255  012528  0E01               	movlw	1
 11256  01252A  278B               	addwf	___fladd@b& (0+255),f,b
 11257  01252C  0E00               	movlw	0
 11258  01252E  238C               	addwfc	(___fladd@b+1)& (0+255),f,b
 11259  012530  238D               	addwfc	(___fladd@b+2)& (0+255),f,b
 11260  012532  238E               	addwfc	(___fladd@b+3)& (0+255),f,b
 11261  012534  D008               	goto	l2369
 11262  012536                     l8836:
 11263                           
 11264                           ; BSR set to: 0
 11265  012536  518F               	movf	___fladd@a& (0+255),w,b
 11266  012538  5F8B               	subwf	___fladd@b& (0+255),f,b
 11267  01253A  5190               	movf	(___fladd@a+1)& (0+255),w,b
 11268  01253C  5B8C               	subwfb	(___fladd@b+1)& (0+255),f,b
 11269  01253E  5191               	movf	(___fladd@a+2)& (0+255),w,b
 11270  012540  5B8D               	subwfb	(___fladd@b+2)& (0+255),f,b
 11271  012542  5192               	movf	(___fladd@a+3)& (0+255),w,b
 11272  012544  5B8E               	subwfb	(___fladd@b+3)& (0+255),f,b
 11273  012546                     l2369:
 11274                           
 11275                           ; BSR set to: 0
 11276  012546  518B               	movf	___fladd@b& (0+255),w,b
 11277  012548  118C               	iorwf	(___fladd@b+1)& (0+255),w,b
 11278  01254A  118D               	iorwf	(___fladd@b+2)& (0+255),w,b
 11279  01254C  118E               	iorwf	(___fladd@b+3)& (0+255),w,b
 11280  01254E  A4D8               	btfss	status,2,c
 11281  012550  D01C               	goto	l8860
 11282                           
 11283                           ; BSR set to: 0
 11284  012552  519A               	movf	___fladd@grs& (0+255),w,b
 11285  012554  A4D8               	btfss	status,2,c
 11286  012556  D019               	goto	l8860
 11287                           
 11288                           ; BSR set to: 0
 11289  012558  0E00               	movlw	0
 11290  01255A  6F8B               	movwf	?___fladd& (0+255),b
 11291  01255C  0E00               	movlw	0
 11292  01255E  6F8C               	movwf	(?___fladd+1)& (0+255),b
 11293  012560  0E00               	movlw	0
 11294  012562  6F8D               	movwf	(?___fladd+2)& (0+255),b
 11295  012564  0E00               	movlw	0
 11296  012566  6F8E               	movwf	(?___fladd+3)& (0+255),b
 11297  012568  0012               	return	
 11298  01256A                     l8844:
 11299                           
 11300                           ; BSR set to: 0
 11301  01256A  90D8               	bcf	status,0,c
 11302  01256C  378B               	rlcf	___fladd@b& (0+255),f,b
 11303  01256E  378C               	rlcf	(___fladd@b+1)& (0+255),f,b
 11304  012570  378D               	rlcf	(___fladd@b+2)& (0+255),f,b
 11305  012572  378E               	rlcf	(___fladd@b+3)& (0+255),f,b
 11306                           
 11307                           ; BSR set to: 0
 11308  012574  BF9A               	btfsc	___fladd@grs& (0+255),7,b
 11309                           
 11310                           ; BSR set to: 0
 11311  012576  818B               	bsf	___fladd@b& (0+255),0,b
 11312                           
 11313                           ; BSR set to: 0
 11314  012578  A19A               	btfss	___fladd@grs& (0+255),0,b
 11315  01257A  D002               	goto	l8854
 11316                           
 11317                           ; BSR set to: 0
 11318  01257C  80D8               	bsf	status,0,c
 11319  01257E  D001               	goto	L11
 11320  012580                     l8854:
 11321                           
 11322                           ; BSR set to: 0
 11323  012580  90D8               	bcf	status,0,c
 11324  012582                     L11:
 11325  012582  379A               	rlcf	___fladd@grs& (0+255),f,b
 11326                           
 11327                           ; BSR set to: 0
 11328  012584  5199               	movf	___fladd@bexp& (0+255),w,b
 11329  012586  A4D8               	btfss	status,2,c
 11330                           
 11331                           ; BSR set to: 0
 11332  012588  0799               	decf	___fladd@bexp& (0+255),f,b
 11333  01258A                     l8860:
 11334                           
 11335                           ; BSR set to: 0
 11336  01258A  AF8D               	btfss	(___fladd@b+2)& (0+255),7,b
 11337  01258C  D7EE               	goto	l8844
 11338  01258E                     u7670:
 11339                           
 11340                           ; BSR set to: 0
 11341  01258E  0E00               	movlw	0
 11342  012590  6F98               	movwf	___fladd@aexp& (0+255),b
 11343                           
 11344                           ; BSR set to: 0
 11345  012592  AF9A               	btfss	___fladd@grs& (0+255),7,b
 11346  012594  D00B               	goto	l2378
 11347                           
 11348                           ; BSR set to: 0
 11349  012596  C09A  F093         	movff	___fladd@grs,??___fladd
 11350  01259A  0E7F               	movlw	127
 11351  01259C  1793               	andwf	??___fladd& (0+255),f,b
 11352  01259E  B4D8               	btfsc	status,2,c
 11353  0125A0  D003               	goto	l2379
 11354  0125A2                     u7690:
 11355                           
 11356                           ; BSR set to: 0
 11357  0125A2  0E01               	movlw	1
 11358  0125A4  6F98               	movwf	___fladd@aexp& (0+255),b
 11359  0125A6  D002               	goto	l2378
 11360  0125A8                     l2379:
 11361                           
 11362                           ; BSR set to: 0
 11363  0125A8  B18B               	btfsc	___fladd@b& (0+255),0,b
 11364  0125AA  D7FB               	goto	u7690
 11365  0125AC                     l2378:
 11366                           
 11367                           ; BSR set to: 0
 11368  0125AC  5198               	movf	___fladd@aexp& (0+255),w,b
 11369  0125AE  B4D8               	btfsc	status,2,c
 11370  0125B0  D020               	goto	l8880
 11371                           
 11372                           ; BSR set to: 0
 11373  0125B2  0E01               	movlw	1
 11374  0125B4  278B               	addwf	___fladd@b& (0+255),f,b
 11375  0125B6  0E00               	movlw	0
 11376  0125B8  238C               	addwfc	(___fladd@b+1)& (0+255),f,b
 11377  0125BA  238D               	addwfc	(___fladd@b+2)& (0+255),f,b
 11378  0125BC  238E               	addwfc	(___fladd@b+3)& (0+255),f,b
 11379                           
 11380                           ; BSR set to: 0
 11381  0125BE  A18E               	btfss	(___fladd@b+3)& (0+255),0,b
 11382  0125C0  D018               	goto	l8880
 11383                           
 11384                           ; BSR set to: 0
 11385  0125C2  C08B  F093         	movff	___fladd@b,??___fladd
 11386  0125C6  C08C  F094         	movff	___fladd@b+1,??___fladd+1
 11387  0125CA  C08D  F095         	movff	___fladd@b+2,??___fladd+2
 11388  0125CE  C08E  F096         	movff	___fladd@b+3,??___fladd+3
 11389  0125D2  3596               	rlcf	(??___fladd+3)& (0+255),w,b
 11390  0125D4  3396               	rrcf	(??___fladd+3)& (0+255),f,b
 11391  0125D6  3395               	rrcf	(??___fladd+2)& (0+255),f,b
 11392  0125D8  3394               	rrcf	(??___fladd+1)& (0+255),f,b
 11393  0125DA  3393               	rrcf	??___fladd& (0+255),f,b
 11394  0125DC  C093  F08B         	movff	??___fladd,___fladd@b
 11395  0125E0  C094  F08C         	movff	??___fladd+1,___fladd@b+1
 11396  0125E4  C095  F08D         	movff	??___fladd+2,___fladd@b+2
 11397  0125E8  C096  F08E         	movff	??___fladd+3,___fladd@b+3
 11398  0125EC  2999               	incf	___fladd@bexp& (0+255),w,b
 11399  0125EE  A4D8               	btfss	status,2,c
 11400                           
 11401                           ; BSR set to: 0
 11402  0125F0  2B99               	incf	___fladd@bexp& (0+255),f,b
 11403  0125F2                     l8880:
 11404                           
 11405                           ; BSR set to: 0
 11406  0125F2  2999               	incf	___fladd@bexp& (0+255),w,b
 11407  0125F4  B4D8               	btfsc	status,2,c
 11408  0125F6  D003               	goto	u7750
 11409                           
 11410                           ; BSR set to: 0
 11411  0125F8  5199               	movf	___fladd@bexp& (0+255),w,b
 11412  0125FA  A4D8               	btfss	status,2,c
 11413  0125FC  D00D               	goto	l8888
 11414  0125FE                     u7750:
 11415                           
 11416                           ; BSR set to: 0
 11417  0125FE  0E00               	movlw	0
 11418  012600  6F8B               	movwf	___fladd@b& (0+255),b
 11419  012602  0E00               	movlw	0
 11420  012604  6F8C               	movwf	(___fladd@b+1)& (0+255),b
 11421  012606  0E00               	movlw	0
 11422  012608  6F8D               	movwf	(___fladd@b+2)& (0+255),b
 11423  01260A  0E00               	movlw	0
 11424  01260C  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 11425  01260E  5199               	movf	___fladd@bexp& (0+255),w,b
 11426  012610  A4D8               	btfss	status,2,c
 11427  012612  D002               	goto	l8888
 11428                           
 11429                           ; BSR set to: 0
 11430  012614  0E00               	movlw	0
 11431  012616  6F97               	movwf	___fladd@signs& (0+255),b
 11432  012618                     l8888:
 11433                           
 11434                           ; BSR set to: 0
 11435  012618  A199               	btfss	___fladd@bexp& (0+255),0,b
 11436  01261A  D002               	goto	l8892
 11437                           
 11438                           ; BSR set to: 0
 11439  01261C  8F8D               	bsf	(___fladd@b+2)& (0+255),7,b
 11440  01261E  D001               	goto	l8894
 11441  012620                     l8892:
 11442                           
 11443                           ; BSR set to: 0
 11444  012620  9F8D               	bcf	(___fladd@b+2)& (0+255),7,b
 11445  012622                     l8894:
 11446                           
 11447                           ; BSR set to: 0
 11448  012622  90D8               	bcf	status,0,c
 11449  012624  3199               	rrcf	___fladd@bexp& (0+255),w,b
 11450  012626  6F8E               	movwf	(___fladd@b+3)& (0+255),b
 11451                           
 11452                           ; BSR set to: 0
 11453  012628  BF97               	btfsc	___fladd@signs& (0+255),7,b
 11454                           
 11455                           ; BSR set to: 0
 11456  01262A  8F8E               	bsf	(___fladd@b+3)& (0+255),7,b
 11457                           
 11458                           ; BSR set to: 0
 11459  01262C  C08B  F08B         	movff	___fladd@b,?___fladd
 11460  012630  C08C  F08C         	movff	___fladd@b+1,?___fladd+1
 11461  012634  C08D  F08D         	movff	___fladd@b+2,?___fladd+2
 11462  012638  C08E  F08E         	movff	___fladd@b+3,?___fladd+3
 11463                           
 11464                           ; BSR set to: 0
 11465  01263C  0012               	return		;funcret
 11466  01263E                     __end_of___fladd:
 11467                           	callstack 0
 11468                           
 11469 ;; *************** function ___flneg *****************
 11470 ;; Defined at:
 11471 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
 11472 ;; Parameters:    Size  Location     Type
 11473 ;;  f1              4    0[BANK0 ] unsigned char 
 11474 ;; Auto vars:     Size  Location     Type
 11475 ;;		None
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  4    0[BANK0 ] unsigned char 
 11478 ;; Registers used:
 11479 ;;		wreg, status,2, status,0
 11480 ;; Tracked objects:
 11481 ;;		On entry : 3F/0
 11482 ;;		On exit  : 3F/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11485 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11488 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11489 ;;Total ram usage:        4 bytes
 11490 ;; Hardware stack levels used: 1
 11491 ;; Hardware stack levels required when called: 7
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_efgtoa
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           	psect	text25
 11500  01516C                     __ptext25:
 11501                           	callstack 0
 11502  01516C                     ___flneg:
 11503                           	callstack 19
 11504                           
 11505                           ; BSR set to: 0
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;incstack = 0
 11509  01516C  5160               	movf	___flneg@f1& (0+255),w,b
 11510  01516E  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11511  015170  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11512  015172  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11513  015174  B4D8               	btfsc	status,2,c
 11514  015176  D008               	goto	l9350
 11515                           
 11516                           ; BSR set to: 0
 11517  015178  0E00               	movlw	0
 11518  01517A  1B60               	xorwf	___flneg@f1& (0+255),f,b
 11519  01517C  0E00               	movlw	0
 11520  01517E  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11521  015180  0E00               	movlw	0
 11522  015182  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11523  015184  0E80               	movlw	128
 11524  015186  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11525  015188                     l9350:
 11526                           
 11527                           ; BSR set to: 0
 11528  015188  C060  F060         	movff	___flneg@f1,?___flneg
 11529  01518C  C061  F061         	movff	___flneg@f1+1,?___flneg+1
 11530  015190  C062  F062         	movff	___flneg@f1+2,?___flneg+2
 11531  015194  C063  F063         	movff	___flneg@f1+3,?___flneg+3
 11532                           
 11533                           ; BSR set to: 0
 11534  015198  0012               	return		;funcret
 11535  01519A                     __end_of___flneg:
 11536                           	callstack 0
 11537                           
 11538 ;; *************** function ___flmul *****************
 11539 ;; Defined at:
 11540 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
 11541 ;; Parameters:    Size  Location     Type
 11542 ;;  b               4   18[BANK0 ] unsigned char 
 11543 ;;  a               4   22[BANK0 ] unsigned char 
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;  prod            4   37[BANK0 ] struct .
 11546 ;;  grs             4   33[BANK0 ] unsigned long 
 11547 ;;  temp            2   41[BANK0 ] struct .
 11548 ;;  bexp            1   32[BANK0 ] unsigned char 
 11549 ;;  aexp            1   31[BANK0 ] unsigned char 
 11550 ;;  sign            1   30[BANK0 ] unsigned char 
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  4   18[BANK0 ] unsigned char 
 11553 ;; Registers used:
 11554 ;;		wreg, status,2, status,0, prodl, prodh
 11555 ;; Tracked objects:
 11556 ;;		On entry : 3F/0
 11557 ;;		On exit  : 3F/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11560 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11561 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11562 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11563 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11564 ;;Total ram usage:       25 bytes
 11565 ;; Hardware stack levels used: 1
 11566 ;; Hardware stack levels required when called: 7
 11567 ;; This function calls:
 11568 ;;		Nothing
 11569 ;; This function is called by:
 11570 ;;		_ps_math
 11571 ;;		_main
 11572 ;;		_efgtoa
 11573 ;;		_sqrtf
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	text26
 11578  011FE2                     __ptext26:
 11579                           	callstack 0
 11580  011FE2                     ___flmul:
 11581                           	callstack 19
 11582                           
 11583                           ; BSR set to: 0
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;incstack = 0
 11587  011FE2  5175               	movf	(___flmul@b+3)& (0+255),w,b
 11588  011FE4  0B80               	andlw	128
 11589  011FE6  6F7E               	movwf	___flmul@sign& (0+255),b
 11590  011FE8  5175               	movf	(___flmul@b+3)& (0+255),w,b
 11591  011FEA  2575               	addwf	(___flmul@b+3)& (0+255),w,b
 11592  011FEC  6F80               	movwf	___flmul@bexp& (0+255),b
 11593                           
 11594                           ; BSR set to: 0
 11595  011FEE  BF74               	btfsc	(___flmul@b+2)& (0+255),7,b
 11596                           
 11597                           ; BSR set to: 0
 11598  011FF0  8180               	bsf	___flmul@bexp& (0+255),0,b
 11599                           
 11600                           ; BSR set to: 0
 11601  011FF2  5180               	movf	___flmul@bexp& (0+255),w,b
 11602  011FF4  B4D8               	btfsc	status,2,c
 11603  011FF6  D00D               	goto	l9106
 11604                           
 11605                           ; BSR set to: 0
 11606  011FF8  2980               	incf	___flmul@bexp& (0+255),w,b
 11607  011FFA  A4D8               	btfss	status,2,c
 11608  011FFC  D008               	goto	l9104
 11609                           
 11610                           ; BSR set to: 0
 11611  011FFE  0E00               	movlw	0
 11612  012000  6F72               	movwf	___flmul@b& (0+255),b
 11613  012002  0E00               	movlw	0
 11614  012004  6F73               	movwf	(___flmul@b+1)& (0+255),b
 11615  012006  0E00               	movlw	0
 11616  012008  6F74               	movwf	(___flmul@b+2)& (0+255),b
 11617  01200A  0E00               	movlw	0
 11618  01200C  6F75               	movwf	(___flmul@b+3)& (0+255),b
 11619  01200E                     l9104:
 11620                           
 11621                           ; BSR set to: 0
 11622  01200E  8F74               	bsf	(___flmul@b+2)& (0+255),7,b
 11623  012010  D008               	goto	l9108
 11624  012012                     l9106:
 11625                           
 11626                           ; BSR set to: 0
 11627  012012  0E00               	movlw	0
 11628  012014  6F72               	movwf	___flmul@b& (0+255),b
 11629  012016  0E00               	movlw	0
 11630  012018  6F73               	movwf	(___flmul@b+1)& (0+255),b
 11631  01201A  0E00               	movlw	0
 11632  01201C  6F74               	movwf	(___flmul@b+2)& (0+255),b
 11633  01201E  0E00               	movlw	0
 11634  012020  6F75               	movwf	(___flmul@b+3)& (0+255),b
 11635  012022                     l9108:
 11636                           
 11637                           ; BSR set to: 0
 11638  012022  5179               	movf	(___flmul@a+3)& (0+255),w,b
 11639  012024  0B80               	andlw	128
 11640  012026  1B7E               	xorwf	___flmul@sign& (0+255),f,b
 11641                           
 11642                           ; BSR set to: 0
 11643  012028  5179               	movf	(___flmul@a+3)& (0+255),w,b
 11644  01202A  2579               	addwf	(___flmul@a+3)& (0+255),w,b
 11645  01202C  6F7F               	movwf	___flmul@aexp& (0+255),b
 11646                           
 11647                           ; BSR set to: 0
 11648  01202E  BF78               	btfsc	(___flmul@a+2)& (0+255),7,b
 11649                           
 11650                           ; BSR set to: 0
 11651  012030  817F               	bsf	___flmul@aexp& (0+255),0,b
 11652                           
 11653                           ; BSR set to: 0
 11654  012032  517F               	movf	___flmul@aexp& (0+255),w,b
 11655  012034  B4D8               	btfsc	status,2,c
 11656  012036  D00D               	goto	l9124
 11657                           
 11658                           ; BSR set to: 0
 11659  012038  297F               	incf	___flmul@aexp& (0+255),w,b
 11660  01203A  A4D8               	btfss	status,2,c
 11661  01203C  D008               	goto	l9122
 11662                           
 11663                           ; BSR set to: 0
 11664  01203E  0E00               	movlw	0
 11665  012040  6F76               	movwf	___flmul@a& (0+255),b
 11666  012042  0E00               	movlw	0
 11667  012044  6F77               	movwf	(___flmul@a+1)& (0+255),b
 11668  012046  0E00               	movlw	0
 11669  012048  6F78               	movwf	(___flmul@a+2)& (0+255),b
 11670  01204A  0E00               	movlw	0
 11671  01204C  6F79               	movwf	(___flmul@a+3)& (0+255),b
 11672  01204E                     l9122:
 11673                           
 11674                           ; BSR set to: 0
 11675  01204E  8F78               	bsf	(___flmul@a+2)& (0+255),7,b
 11676  012050  D008               	goto	l2438
 11677  012052                     l9124:
 11678                           
 11679                           ; BSR set to: 0
 11680  012052  0E00               	movlw	0
 11681  012054  6F76               	movwf	___flmul@a& (0+255),b
 11682  012056  0E00               	movlw	0
 11683  012058  6F77               	movwf	(___flmul@a+1)& (0+255),b
 11684  01205A  0E00               	movlw	0
 11685  01205C  6F78               	movwf	(___flmul@a+2)& (0+255),b
 11686  01205E  0E00               	movlw	0
 11687  012060  6F79               	movwf	(___flmul@a+3)& (0+255),b
 11688  012062                     l2438:
 11689                           
 11690                           ; BSR set to: 0
 11691  012062  517F               	movf	___flmul@aexp& (0+255),w,b
 11692  012064  B4D8               	btfsc	status,2,c
 11693  012066  D003               	goto	u8180
 11694                           
 11695                           ; BSR set to: 0
 11696  012068  5180               	movf	___flmul@bexp& (0+255),w,b
 11697  01206A  A4D8               	btfss	status,2,c
 11698  01206C  D009               	goto	l9132
 11699  01206E                     u8180:
 11700                           
 11701                           ; BSR set to: 0
 11702  01206E  0E00               	movlw	0
 11703  012070  6F72               	movwf	?___flmul& (0+255),b
 11704  012072  0E00               	movlw	0
 11705  012074  6F73               	movwf	(?___flmul+1)& (0+255),b
 11706  012076  0E00               	movlw	0
 11707  012078  6F74               	movwf	(?___flmul+2)& (0+255),b
 11708  01207A  0E00               	movlw	0
 11709  01207C  6F75               	movwf	(?___flmul+3)& (0+255),b
 11710  01207E  0012               	return	
 11711  012080                     l9132:
 11712                           
 11713                           ; BSR set to: 0
 11714  012080  5178               	movf	(___flmul@a+2)& (0+255),w,b
 11715  012082  0372               	mulwf	___flmul@b& (0+255),b
 11716  012084  006F FFCC  F089    	movff	prodl,___flmul@temp
 11717  01208A  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11718                           
 11719                           ; BSR set to: 0
 11720  012090  5189               	movf	___flmul@temp& (0+255),w,b
 11721  012092  6F81               	movwf	___flmul@grs& (0+255),b
 11722  012094  6B82               	clrf	(___flmul@grs+1)& (0+255),b
 11723  012096  6B83               	clrf	(___flmul@grs+2)& (0+255),b
 11724  012098  6B84               	clrf	(___flmul@grs+3)& (0+255),b
 11725                           
 11726                           ; BSR set to: 0
 11727  01209A  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11728  01209C  6F85               	movwf	___flmul@prod& (0+255),b
 11729  01209E  6B86               	clrf	(___flmul@prod+1)& (0+255),b
 11730  0120A0  6B87               	clrf	(___flmul@prod+2)& (0+255),b
 11731  0120A2  6B88               	clrf	(___flmul@prod+3)& (0+255),b
 11732  0120A4  5177               	movf	(___flmul@a+1)& (0+255),w,b
 11733  0120A6  0373               	mulwf	(___flmul@b+1)& (0+255),b
 11734  0120A8  006F FFCC  F089    	movff	prodl,___flmul@temp
 11735  0120AE  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11736                           
 11737                           ; BSR set to: 0
 11738  0120B4  5189               	movf	___flmul@temp& (0+255),w,b
 11739  0120B6  2781               	addwf	___flmul@grs& (0+255),f,b
 11740  0120B8  0E00               	movlw	0
 11741  0120BA  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11742  0120BC  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11743  0120BE  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11744                           
 11745                           ; BSR set to: 0
 11746  0120C0  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11747  0120C2  2785               	addwf	___flmul@prod& (0+255),f,b
 11748  0120C4  0E00               	movlw	0
 11749  0120C6  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11750  0120C8  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11751  0120CA  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11752  0120CC  5176               	movf	___flmul@a& (0+255),w,b
 11753  0120CE  0374               	mulwf	(___flmul@b+2)& (0+255),b
 11754  0120D0  006F FFCC  F089    	movff	prodl,___flmul@temp
 11755  0120D6  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11756                           
 11757                           ; BSR set to: 0
 11758  0120DC  5189               	movf	___flmul@temp& (0+255),w,b
 11759  0120DE  2781               	addwf	___flmul@grs& (0+255),f,b
 11760  0120E0  0E00               	movlw	0
 11761  0120E2  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11762  0120E4  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11763  0120E6  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11764                           
 11765                           ; BSR set to: 0
 11766  0120E8  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11767  0120EA  2785               	addwf	___flmul@prod& (0+255),f,b
 11768  0120EC  0E00               	movlw	0
 11769  0120EE  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11770  0120F0  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11771  0120F2  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11772                           
 11773                           ; BSR set to: 0
 11774  0120F4  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 11775  0120F8  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 11776  0120FC  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 11777  012100  6B81               	clrf	___flmul@grs& (0+255),b
 11778                           
 11779                           ; BSR set to: 0
 11780  012102  5176               	movf	___flmul@a& (0+255),w,b
 11781  012104  0373               	mulwf	(___flmul@b+1)& (0+255),b
 11782  012106  006F FFCC  F089    	movff	prodl,___flmul@temp
 11783  01210C  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11784                           
 11785                           ; BSR set to: 0
 11786  012112  5189               	movf	___flmul@temp& (0+255),w,b
 11787  012114  2781               	addwf	___flmul@grs& (0+255),f,b
 11788  012116  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11789  012118  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11790  01211A  0E00               	movlw	0
 11791  01211C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11792  01211E  0E00               	movlw	0
 11793  012120  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11794                           
 11795                           ; BSR set to: 0
 11796  012122  5177               	movf	(___flmul@a+1)& (0+255),w,b
 11797  012124  0372               	mulwf	___flmul@b& (0+255),b
 11798  012126  006F FFCC  F089    	movff	prodl,___flmul@temp
 11799  01212C  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11800                           
 11801                           ; BSR set to: 0
 11802  012132  5189               	movf	___flmul@temp& (0+255),w,b
 11803  012134  2781               	addwf	___flmul@grs& (0+255),f,b
 11804  012136  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11805  012138  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11806  01213A  0E00               	movlw	0
 11807  01213C  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11808  01213E  0E00               	movlw	0
 11809  012140  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11810                           
 11811                           ; BSR set to: 0
 11812  012142  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 11813  012146  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 11814  01214A  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 11815  01214E  6B81               	clrf	___flmul@grs& (0+255),b
 11816  012150  5176               	movf	___flmul@a& (0+255),w,b
 11817  012152  0372               	mulwf	___flmul@b& (0+255),b
 11818  012154  006F FFCC  F089    	movff	prodl,___flmul@temp
 11819  01215A  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11820                           
 11821                           ; BSR set to: 0
 11822  012160  5189               	movf	___flmul@temp& (0+255),w,b
 11823  012162  2781               	addwf	___flmul@grs& (0+255),f,b
 11824  012164  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11825  012166  2382               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11826  012168  0E00               	movlw	0
 11827  01216A  2383               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11828  01216C  0E00               	movlw	0
 11829  01216E  2384               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11830                           
 11831                           ; BSR set to: 0
 11832  012170  5178               	movf	(___flmul@a+2)& (0+255),w,b
 11833  012172  0373               	mulwf	(___flmul@b+1)& (0+255),b
 11834  012174  006F FFCC  F089    	movff	prodl,___flmul@temp
 11835  01217A  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11836  012180  5189               	movf	___flmul@temp& (0+255),w,b
 11837  012182  2785               	addwf	___flmul@prod& (0+255),f,b
 11838  012184  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11839  012186  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11840  012188  0E00               	movlw	0
 11841  01218A  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11842  01218C  0E00               	movlw	0
 11843  01218E  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11844                           
 11845                           ; BSR set to: 0
 11846  012190  5177               	movf	(___flmul@a+1)& (0+255),w,b
 11847  012192  0374               	mulwf	(___flmul@b+2)& (0+255),b
 11848  012194  006F FFCC  F089    	movff	prodl,___flmul@temp
 11849  01219A  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11850                           
 11851                           ; BSR set to: 0
 11852  0121A0  5189               	movf	___flmul@temp& (0+255),w,b
 11853  0121A2  2785               	addwf	___flmul@prod& (0+255),f,b
 11854  0121A4  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11855  0121A6  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11856  0121A8  0E00               	movlw	0
 11857  0121AA  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11858  0121AC  0E00               	movlw	0
 11859  0121AE  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11860  0121B0  5178               	movf	(___flmul@a+2)& (0+255),w,b
 11861  0121B2  0374               	mulwf	(___flmul@b+2)& (0+255),b
 11862  0121B4  006F FFCC  F089    	movff	prodl,___flmul@temp
 11863  0121BA  006F FFD0  F08A    	movff	prodh,___flmul@temp+1
 11864                           
 11865                           ; BSR set to: 0
 11866  0121C0  5189               	movf	___flmul@temp& (0+255),w,b
 11867  0121C2  6F7A               	movwf	??___flmul& (0+255),b
 11868  0121C4  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 11869  0121C6  6F7B               	movwf	(??___flmul+1)& (0+255),b
 11870  0121C8  6B7C               	clrf	(??___flmul+2)& (0+255),b
 11871  0121CA  6B7D               	clrf	(??___flmul+3)& (0+255),b
 11872  0121CC  C07C  F07D         	movff	??___flmul+2,??___flmul+3
 11873  0121D0  C07B  F07C         	movff	??___flmul+1,??___flmul+2
 11874  0121D4  C07A  F07B         	movff	??___flmul,??___flmul+1
 11875  0121D8  6B7A               	clrf	??___flmul& (0+255),b
 11876  0121DA  517A               	movf	??___flmul& (0+255),w,b
 11877  0121DC  2785               	addwf	___flmul@prod& (0+255),f,b
 11878  0121DE  517B               	movf	(??___flmul+1)& (0+255),w,b
 11879  0121E0  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11880  0121E2  517C               	movf	(??___flmul+2)& (0+255),w,b
 11881  0121E4  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11882  0121E6  517D               	movf	(??___flmul+3)& (0+255),w,b
 11883  0121E8  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11884                           
 11885                           ; BSR set to: 0
 11886  0121EA  5184               	movf	(___flmul@grs+3)& (0+255),w,b
 11887  0121EC  2785               	addwf	___flmul@prod& (0+255),f,b
 11888  0121EE  0E00               	movlw	0
 11889  0121F0  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11890  0121F2  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11891  0121F4  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11892                           
 11893                           ; BSR set to: 0
 11894  0121F6  C083  F084         	movff	___flmul@grs+2,___flmul@grs+3
 11895  0121FA  C082  F083         	movff	___flmul@grs+1,___flmul@grs+2
 11896  0121FE  C081  F082         	movff	___flmul@grs,___flmul@grs+1
 11897  012202  6B81               	clrf	___flmul@grs& (0+255),b
 11898                           
 11899                           ; BSR set to: 0
 11900  012204  517F               	movf	___flmul@aexp& (0+255),w,b
 11901  012206  C080  F07A         	movff	___flmul@bexp,??___flmul
 11902  01220A  6B7B               	clrf	(??___flmul+1)& (0+255),b
 11903  01220C  277A               	addwf	??___flmul& (0+255),f,b
 11904  01220E  0E00               	movlw	0
 11905  012210  237B               	addwfc	(??___flmul+1)& (0+255),f,b
 11906  012212  0E82               	movlw	130
 11907  012214  257A               	addwf	??___flmul& (0+255),w,b
 11908  012216  6F89               	movwf	___flmul@temp& (0+255),b
 11909  012218  0EFF               	movlw	255
 11910  01221A  217B               	addwfc	(??___flmul+1)& (0+255),w,b
 11911  01221C  6F8A               	movwf	(___flmul@temp+1)& (0+255),b
 11912  01221E  D00F               	goto	l9180
 11913  012220                     l9174:
 11914                           
 11915                           ; BSR set to: 0
 11916  012220  90D8               	bcf	status,0,c
 11917  012222  3785               	rlcf	___flmul@prod& (0+255),f,b
 11918  012224  3786               	rlcf	(___flmul@prod+1)& (0+255),f,b
 11919  012226  3787               	rlcf	(___flmul@prod+2)& (0+255),f,b
 11920  012228  3788               	rlcf	(___flmul@prod+3)& (0+255),f,b
 11921                           
 11922                           ; BSR set to: 0
 11923  01222A  BF84               	btfsc	(___flmul@grs+3)& (0+255),7,b
 11924                           
 11925                           ; BSR set to: 0
 11926  01222C  8185               	bsf	___flmul@prod& (0+255),0,b
 11927                           
 11928                           ; BSR set to: 0
 11929  01222E  90D8               	bcf	status,0,c
 11930  012230  3781               	rlcf	___flmul@grs& (0+255),f,b
 11931  012232  3782               	rlcf	(___flmul@grs+1)& (0+255),f,b
 11932  012234  3783               	rlcf	(___flmul@grs+2)& (0+255),f,b
 11933  012236  3784               	rlcf	(___flmul@grs+3)& (0+255),f,b
 11934  012238  0789               	decf	___flmul@temp& (0+255),f,b
 11935  01223A  A0D8               	btfss	status,0,c
 11936  01223C  078A               	decf	(___flmul@temp+1)& (0+255),f,b
 11937  01223E                     l9180:
 11938                           
 11939                           ; BSR set to: 0
 11940  01223E  AF87               	btfss	(___flmul@prod+2)& (0+255),7,b
 11941  012240  D7EF               	goto	l9174
 11942                           
 11943                           ; BSR set to: 0
 11944  012242  0E00               	movlw	0
 11945  012244  6F7F               	movwf	___flmul@aexp& (0+255),b
 11946                           
 11947                           ; BSR set to: 0
 11948  012246  AF84               	btfss	(___flmul@grs+3)& (0+255),7,b
 11949  012248  D017               	goto	l2447
 11950                           
 11951                           ; BSR set to: 0
 11952  01224A  0EFF               	movlw	255
 11953  01224C  1581               	andwf	___flmul@grs& (0+255),w,b
 11954  01224E  6F7A               	movwf	??___flmul& (0+255),b
 11955  012250  0EFF               	movlw	255
 11956  012252  1582               	andwf	(___flmul@grs+1)& (0+255),w,b
 11957  012254  6F7B               	movwf	(??___flmul+1)& (0+255),b
 11958  012256  0EFF               	movlw	255
 11959  012258  1583               	andwf	(___flmul@grs+2)& (0+255),w,b
 11960  01225A  6F7C               	movwf	(??___flmul+2)& (0+255),b
 11961  01225C  0E7F               	movlw	127
 11962  01225E  1584               	andwf	(___flmul@grs+3)& (0+255),w,b
 11963  012260  6F7D               	movwf	(??___flmul+3)& (0+255),b
 11964  012262  517A               	movf	??___flmul& (0+255),w,b
 11965  012264  117B               	iorwf	(??___flmul+1)& (0+255),w,b
 11966  012266  117C               	iorwf	(??___flmul+2)& (0+255),w,b
 11967  012268  117D               	iorwf	(??___flmul+3)& (0+255),w,b
 11968  01226A  B4D8               	btfsc	status,2,c
 11969  01226C  D003               	goto	l2448
 11970  01226E                     u8220:
 11971                           
 11972                           ; BSR set to: 0
 11973  01226E  0E01               	movlw	1
 11974  012270  6F7F               	movwf	___flmul@aexp& (0+255),b
 11975  012272  D002               	goto	l2447
 11976  012274                     l2448:
 11977                           
 11978                           ; BSR set to: 0
 11979  012274  B185               	btfsc	___flmul@prod& (0+255),0,b
 11980  012276  D7FB               	goto	u8220
 11981  012278                     l2447:
 11982                           
 11983                           ; BSR set to: 0
 11984  012278  517F               	movf	___flmul@aexp& (0+255),w,b
 11985  01227A  B4D8               	btfsc	status,2,c
 11986  01227C  D01F               	goto	l9200
 11987                           
 11988                           ; BSR set to: 0
 11989  01227E  0E01               	movlw	1
 11990  012280  2785               	addwf	___flmul@prod& (0+255),f,b
 11991  012282  0E00               	movlw	0
 11992  012284  2386               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11993  012286  2387               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11994  012288  2388               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11995                           
 11996                           ; BSR set to: 0
 11997  01228A  A188               	btfss	(___flmul@prod+3)& (0+255),0,b
 11998  01228C  D017               	goto	l9200
 11999                           
 12000                           ; BSR set to: 0
 12001  01228E  C085  F07A         	movff	___flmul@prod,??___flmul
 12002  012292  C086  F07B         	movff	___flmul@prod+1,??___flmul+1
 12003  012296  C087  F07C         	movff	___flmul@prod+2,??___flmul+2
 12004  01229A  C088  F07D         	movff	___flmul@prod+3,??___flmul+3
 12005  01229E  357D               	rlcf	(??___flmul+3)& (0+255),w,b
 12006  0122A0  337D               	rrcf	(??___flmul+3)& (0+255),f,b
 12007  0122A2  337C               	rrcf	(??___flmul+2)& (0+255),f,b
 12008  0122A4  337B               	rrcf	(??___flmul+1)& (0+255),f,b
 12009  0122A6  337A               	rrcf	??___flmul& (0+255),f,b
 12010  0122A8  C07A  F085         	movff	??___flmul,___flmul@prod
 12011  0122AC  C07B  F086         	movff	??___flmul+1,___flmul@prod+1
 12012  0122B0  C07C  F087         	movff	??___flmul+2,___flmul@prod+2
 12013  0122B4  C07D  F088         	movff	??___flmul+3,___flmul@prod+3
 12014                           
 12015                           ; BSR set to: 0
 12016  0122B8  4B89               	infsnz	___flmul@temp& (0+255),f,b
 12017  0122BA  2B8A               	incf	(___flmul@temp+1)& (0+255),f,b
 12018  0122BC                     l9200:
 12019                           
 12020                           ; BSR set to: 0
 12021  0122BC  BF8A               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12022  0122BE  D00D               	goto	l9204
 12023  0122C0  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 12024  0122C2  E103               	bnz	u8260
 12025  0122C4  2989               	incf	___flmul@temp& (0+255),w,b
 12026  0122C6  A0D8               	btfss	status,0,c
 12027  0122C8  D008               	goto	l9204
 12028  0122CA                     u8260:
 12029                           
 12030                           ; BSR set to: 0
 12031  0122CA  0E00               	movlw	0
 12032  0122CC  6F85               	movwf	___flmul@prod& (0+255),b
 12033  0122CE  0E00               	movlw	0
 12034  0122D0  6F86               	movwf	(___flmul@prod+1)& (0+255),b
 12035  0122D2  0E80               	movlw	128
 12036  0122D4  6F87               	movwf	(___flmul@prod+2)& (0+255),b
 12037  0122D6  0E7F               	movlw	127
 12038  0122D8  D020               	goto	L12
 12039  0122DA                     l9204:
 12040                           
 12041                           ; BSR set to: 0
 12042  0122DA  BF8A               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12043  0122DC  D005               	goto	u8270
 12044  0122DE  518A               	movf	(___flmul@temp+1)& (0+255),w,b
 12045  0122E0  E10E               	bnz	l2455
 12046  0122E2  0589               	decf	___flmul@temp& (0+255),w,b
 12047  0122E4  B0D8               	btfsc	status,0,c
 12048  0122E6  D00B               	goto	l2455
 12049  0122E8                     u8270:
 12050                           
 12051                           ; BSR set to: 0
 12052  0122E8  0E00               	movlw	0
 12053  0122EA  6F85               	movwf	___flmul@prod& (0+255),b
 12054  0122EC  0E00               	movlw	0
 12055  0122EE  6F86               	movwf	(___flmul@prod+1)& (0+255),b
 12056  0122F0  0E00               	movlw	0
 12057  0122F2  6F87               	movwf	(___flmul@prod+2)& (0+255),b
 12058  0122F4  0E00               	movlw	0
 12059  0122F6  6F88               	movwf	(___flmul@prod+3)& (0+255),b
 12060  0122F8  0E00               	movlw	0
 12061  0122FA  6F7E               	movwf	___flmul@sign& (0+255),b
 12062  0122FC  D00F               	goto	l9216
 12063  0122FE                     l2455:
 12064                           
 12065                           ; BSR set to: 0
 12066  0122FE  C089  F080         	movff	___flmul@temp,___flmul@bexp
 12067                           
 12068                           ; BSR set to: 0
 12069  012302  0EFF               	movlw	255
 12070  012304  1785               	andwf	___flmul@prod& (0+255),f,b
 12071  012306  0EFF               	movlw	255
 12072  012308  1786               	andwf	(___flmul@prod+1)& (0+255),f,b
 12073  01230A  0E7F               	movlw	127
 12074  01230C  1787               	andwf	(___flmul@prod+2)& (0+255),f,b
 12075  01230E  0E00               	movlw	0
 12076  012310  1788               	andwf	(___flmul@prod+3)& (0+255),f,b
 12077                           
 12078                           ; BSR set to: 0
 12079  012312  B180               	btfsc	___flmul@bexp& (0+255),0,b
 12080                           
 12081                           ; BSR set to: 0
 12082  012314  8F87               	bsf	(___flmul@prod+2)& (0+255),7,b
 12083                           
 12084                           ; BSR set to: 0
 12085  012316  90D8               	bcf	status,0,c
 12086  012318  3180               	rrcf	___flmul@bexp& (0+255),w,b
 12087  01231A                     L12:
 12088  01231A  6F88               	movwf	(___flmul@prod+3)& (0+255),b
 12089  01231C                     l9216:
 12090                           
 12091                           ; BSR set to: 0
 12092  01231C  517E               	movf	___flmul@sign& (0+255),w,b
 12093  01231E  1388               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12094                           
 12095                           ; BSR set to: 0
 12096  012320  C085  F072         	movff	___flmul@prod,?___flmul
 12097  012324  C086  F073         	movff	___flmul@prod+1,?___flmul+1
 12098  012328  C087  F074         	movff	___flmul@prod+2,?___flmul+2
 12099  01232C  C088  F075         	movff	___flmul@prod+3,?___flmul+3
 12100                           
 12101                           ; BSR set to: 0
 12102  012330  0012               	return		;funcret
 12103  012332                     __end_of___flmul:
 12104                           	callstack 0
 12105                           
 12106 ;; *************** function ___flge *****************
 12107 ;; Defined at:
 12108 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;  ff1             4   43[BANK0 ] unsigned char 
 12111 ;;  ff2             4   47[BANK0 ] unsigned char 
 12112 ;; Auto vars:     Size  Location     Type
 12113 ;;		None
 12114 ;; Return value:  Size  Location     Type
 12115 ;;		None               void
 12116 ;; Registers used:
 12117 ;;		wreg, status,2, status,0
 12118 ;; Tracked objects:
 12119 ;;		On entry : 3F/0
 12120 ;;		On exit  : 3F/0
 12121 ;;		Unchanged: 0/0
 12122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12123 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12125 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12126 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12127 ;;Total ram usage:       12 bytes
 12128 ;; Hardware stack levels used: 1
 12129 ;; Hardware stack levels required when called: 7
 12130 ;; This function calls:
 12131 ;;		Nothing
 12132 ;; This function is called by:
 12133 ;;		_efgtoa
 12134 ;;		_sqrtf
 12135 ;; This function uses a non-reentrant model
 12136 ;;
 12137                           
 12138                           	psect	text27
 12139  013B62                     __ptext27:
 12140                           	callstack 0
 12141  013B62                     ___flge:
 12142                           	callstack 19
 12143                           
 12144                           ; BSR set to: 0
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;incstack = 0
 12148  013B62  0E00               	movlw	0
 12149  013B64  158B               	andwf	___flge@ff1& (0+255),w,b
 12150  013B66  6F93               	movwf	??___flge& (0+255),b
 12151  013B68  0E00               	movlw	0
 12152  013B6A  158C               	andwf	(___flge@ff1+1)& (0+255),w,b
 12153  013B6C  6F94               	movwf	(??___flge+1)& (0+255),b
 12154  013B6E  0E80               	movlw	128
 12155  013B70  158D               	andwf	(___flge@ff1+2)& (0+255),w,b
 12156  013B72  6F95               	movwf	(??___flge+2)& (0+255),b
 12157  013B74  0E7F               	movlw	127
 12158  013B76  158E               	andwf	(___flge@ff1+3)& (0+255),w,b
 12159  013B78  6F96               	movwf	(??___flge+3)& (0+255),b
 12160  013B7A  5193               	movf	??___flge& (0+255),w,b
 12161  013B7C  1194               	iorwf	(??___flge+1)& (0+255),w,b
 12162  013B7E  1195               	iorwf	(??___flge+2)& (0+255),w,b
 12163  013B80  1196               	iorwf	(??___flge+3)& (0+255),w,b
 12164  013B82  A4D8               	btfss	status,2,c
 12165  013B84  D008               	goto	l9328
 12166                           
 12167                           ; BSR set to: 0
 12168  013B86  0E00               	movlw	0
 12169  013B88  6F8B               	movwf	___flge@ff1& (0+255),b
 12170  013B8A  0E00               	movlw	0
 12171  013B8C  6F8C               	movwf	(___flge@ff1+1)& (0+255),b
 12172  013B8E  0E00               	movlw	0
 12173  013B90  6F8D               	movwf	(___flge@ff1+2)& (0+255),b
 12174  013B92  0E00               	movlw	0
 12175  013B94  6F8E               	movwf	(___flge@ff1+3)& (0+255),b
 12176  013B96                     l9328:
 12177                           
 12178                           ; BSR set to: 0
 12179  013B96  0E00               	movlw	0
 12180  013B98  158F               	andwf	___flge@ff2& (0+255),w,b
 12181  013B9A  6F93               	movwf	??___flge& (0+255),b
 12182  013B9C  0E00               	movlw	0
 12183  013B9E  1590               	andwf	(___flge@ff2+1)& (0+255),w,b
 12184  013BA0  6F94               	movwf	(??___flge+1)& (0+255),b
 12185  013BA2  0E80               	movlw	128
 12186  013BA4  1591               	andwf	(___flge@ff2+2)& (0+255),w,b
 12187  013BA6  6F95               	movwf	(??___flge+2)& (0+255),b
 12188  013BA8  0E7F               	movlw	127
 12189  013BAA  1592               	andwf	(___flge@ff2+3)& (0+255),w,b
 12190  013BAC  6F96               	movwf	(??___flge+3)& (0+255),b
 12191  013BAE  5193               	movf	??___flge& (0+255),w,b
 12192  013BB0  1194               	iorwf	(??___flge+1)& (0+255),w,b
 12193  013BB2  1195               	iorwf	(??___flge+2)& (0+255),w,b
 12194  013BB4  1196               	iorwf	(??___flge+3)& (0+255),w,b
 12195  013BB6  A4D8               	btfss	status,2,c
 12196  013BB8  D008               	goto	l9332
 12197                           
 12198                           ; BSR set to: 0
 12199  013BBA  0E00               	movlw	0
 12200  013BBC  6F8F               	movwf	___flge@ff2& (0+255),b
 12201  013BBE  0E00               	movlw	0
 12202  013BC0  6F90               	movwf	(___flge@ff2+1)& (0+255),b
 12203  013BC2  0E00               	movlw	0
 12204  013BC4  6F91               	movwf	(___flge@ff2+2)& (0+255),b
 12205  013BC6  0E00               	movlw	0
 12206  013BC8  6F92               	movwf	(___flge@ff2+3)& (0+255),b
 12207  013BCA                     l9332:
 12208                           
 12209                           ; BSR set to: 0
 12210  013BCA  AF8E               	btfss	(___flge@ff1+3)& (0+255),7,b
 12211  013BCC  D009               	goto	l9336
 12212                           
 12213                           ; BSR set to: 0
 12214  013BCE  6D8B               	negf	___flge@ff1& (0+255),b
 12215  013BD0  1F8C               	comf	(___flge@ff1+1)& (0+255),f,b
 12216  013BD2  B0D8               	btfsc	status,0,c
 12217  013BD4  2B8C               	incf	(___flge@ff1+1)& (0+255),f,b
 12218  013BD6  1F8D               	comf	(___flge@ff1+2)& (0+255),f,b
 12219  013BD8  B0D8               	btfsc	status,0,c
 12220  013BDA  2B8D               	incf	(___flge@ff1+2)& (0+255),f,b
 12221  013BDC  0E80               	movlw	128
 12222  013BDE  578E               	subfwb	(___flge@ff1+3)& (0+255),f,b
 12223  013BE0                     l9336:
 12224                           
 12225                           ; BSR set to: 0
 12226  013BE0  AF92               	btfss	(___flge@ff2+3)& (0+255),7,b
 12227  013BE2  D009               	goto	l2089
 12228                           
 12229                           ; BSR set to: 0
 12230  013BE4  6D8F               	negf	___flge@ff2& (0+255),b
 12231  013BE6  1F90               	comf	(___flge@ff2+1)& (0+255),f,b
 12232  013BE8  B0D8               	btfsc	status,0,c
 12233  013BEA  2B90               	incf	(___flge@ff2+1)& (0+255),f,b
 12234  013BEC  1F91               	comf	(___flge@ff2+2)& (0+255),f,b
 12235  013BEE  B0D8               	btfsc	status,0,c
 12236  013BF0  2B91               	incf	(___flge@ff2+2)& (0+255),f,b
 12237  013BF2  0E80               	movlw	128
 12238  013BF4  5792               	subfwb	(___flge@ff2+3)& (0+255),f,b
 12239  013BF6                     l2089:
 12240                           
 12241                           ; BSR set to: 0
 12242  013BF6  0E00               	movlw	0
 12243  013BF8  1B8B               	xorwf	___flge@ff1& (0+255),f,b
 12244  013BFA  0E00               	movlw	0
 12245  013BFC  1B8C               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12246  013BFE  0E00               	movlw	0
 12247  013C00  1B8D               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12248  013C02  0E80               	movlw	128
 12249  013C04  1B8E               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12250  013C06  0E00               	movlw	0
 12251  013C08  1B8F               	xorwf	___flge@ff2& (0+255),f,b
 12252  013C0A  0E00               	movlw	0
 12253  013C0C  1B90               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12254  013C0E  0E00               	movlw	0
 12255  013C10  1B91               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12256  013C12  0E80               	movlw	128
 12257  013C14  1B92               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12258  013C16  518F               	movf	___flge@ff2& (0+255),w,b
 12259  013C18  5D8B               	subwf	___flge@ff1& (0+255),w,b
 12260  013C1A  5190               	movf	(___flge@ff2+1)& (0+255),w,b
 12261  013C1C  598C               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12262  013C1E  5191               	movf	(___flge@ff2+2)& (0+255),w,b
 12263  013C20  598D               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12264  013C22  5192               	movf	(___flge@ff2+3)& (0+255),w,b
 12265  013C24  598E               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12266  013C26  B0D8               	btfsc	status,0,c
 12267  013C28  D002               	goto	l9342
 12268                           
 12269                           ; BSR set to: 0
 12270  013C2A  90D8               	bcf	status,0,c
 12271  013C2C  0012               	return	
 12272  013C2E                     l9342:
 12273                           
 12274                           ; BSR set to: 0
 12275  013C2E  80D8               	bsf	status,0,c
 12276                           
 12277                           ; BSR set to: 0
 12278  013C30  0012               	return		;funcret
 12279  013C32                     __end_of___flge:
 12280                           	callstack 0
 12281                           
 12282 ;; *************** function ___fleq *****************
 12283 ;; Defined at:
 12284 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
 12285 ;; Parameters:    Size  Location     Type
 12286 ;;  ff1             4    0[BANK0 ] unsigned char 
 12287 ;;  ff2             4    4[BANK0 ] unsigned char 
 12288 ;; Auto vars:     Size  Location     Type
 12289 ;;		None
 12290 ;; Return value:  Size  Location     Type
 12291 ;;		None               void
 12292 ;; Registers used:
 12293 ;;		wreg, status,2, status,0
 12294 ;; Tracked objects:
 12295 ;;		On entry : 3F/0
 12296 ;;		On exit  : 3F/0
 12297 ;;		Unchanged: 0/0
 12298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12299 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12301 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12302 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12303 ;;Total ram usage:       12 bytes
 12304 ;; Hardware stack levels used: 1
 12305 ;; Hardware stack levels required when called: 7
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_efgtoa
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           	psect	text28
 12314  01436E                     __ptext28:
 12315                           	callstack 0
 12316  01436E                     ___fleq:
 12317                           	callstack 19
 12318                           
 12319                           ; BSR set to: 0
 12320                           
 12321                           ; BSR set to: 0
 12322                           ;incstack = 0
 12323  01436E  0E00               	movlw	0
 12324  014370  1560               	andwf	___fleq@ff1& (0+255),w,b
 12325  014372  6F68               	movwf	??___fleq& (0+255),b
 12326  014374  0E00               	movlw	0
 12327  014376  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
 12328  014378  6F69               	movwf	(??___fleq+1)& (0+255),b
 12329  01437A  0E80               	movlw	128
 12330  01437C  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
 12331  01437E  6F6A               	movwf	(??___fleq+2)& (0+255),b
 12332  014380  0E7F               	movlw	127
 12333  014382  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
 12334  014384  6F6B               	movwf	(??___fleq+3)& (0+255),b
 12335  014386  5168               	movf	??___fleq& (0+255),w,b
 12336  014388  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 12337  01438A  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 12338  01438C  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 12339  01438E  A4D8               	btfss	status,2,c
 12340  014390  D008               	goto	l9312
 12341                           
 12342                           ; BSR set to: 0
 12343  014392  0E00               	movlw	0
 12344  014394  6F60               	movwf	___fleq@ff1& (0+255),b
 12345  014396  0E00               	movlw	0
 12346  014398  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
 12347  01439A  0E00               	movlw	0
 12348  01439C  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
 12349  01439E  0E00               	movlw	0
 12350  0143A0  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
 12351  0143A2                     l9312:
 12352                           
 12353                           ; BSR set to: 0
 12354  0143A2  0E00               	movlw	0
 12355  0143A4  1564               	andwf	___fleq@ff2& (0+255),w,b
 12356  0143A6  6F68               	movwf	??___fleq& (0+255),b
 12357  0143A8  0E00               	movlw	0
 12358  0143AA  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
 12359  0143AC  6F69               	movwf	(??___fleq+1)& (0+255),b
 12360  0143AE  0E80               	movlw	128
 12361  0143B0  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
 12362  0143B2  6F6A               	movwf	(??___fleq+2)& (0+255),b
 12363  0143B4  0E7F               	movlw	127
 12364  0143B6  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
 12365  0143B8  6F6B               	movwf	(??___fleq+3)& (0+255),b
 12366  0143BA  5168               	movf	??___fleq& (0+255),w,b
 12367  0143BC  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 12368  0143BE  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 12369  0143C0  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 12370  0143C2  A4D8               	btfss	status,2,c
 12371  0143C4  D008               	goto	l9316
 12372                           
 12373                           ; BSR set to: 0
 12374  0143C6  0E00               	movlw	0
 12375  0143C8  6F64               	movwf	___fleq@ff2& (0+255),b
 12376  0143CA  0E00               	movlw	0
 12377  0143CC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
 12378  0143CE  0E00               	movlw	0
 12379  0143D0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
 12380  0143D2  0E00               	movlw	0
 12381  0143D4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
 12382  0143D6                     l9316:
 12383                           
 12384                           ; BSR set to: 0
 12385  0143D6  5164               	movf	___fleq@ff2& (0+255),w,b
 12386  0143D8  1960               	xorwf	___fleq@ff1& (0+255),w,b
 12387  0143DA  E10A               	bnz	u8430
 12388  0143DC  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
 12389  0143DE  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 12390  0143E0  E107               	bnz	u8430
 12391  0143E2  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
 12392  0143E4  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 12393  0143E6  E104               	bnz	u8430
 12394  0143E8  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
 12395  0143EA  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 12396  0143EC  B4D8               	btfsc	status,2,c
 12397  0143EE  D002               	goto	l9320
 12398  0143F0                     u8430:
 12399                           
 12400                           ; BSR set to: 0
 12401  0143F0  90D8               	bcf	status,0,c
 12402  0143F2  0012               	return	
 12403  0143F4                     l9320:
 12404                           
 12405                           ; BSR set to: 0
 12406  0143F4  80D8               	bsf	status,0,c
 12407                           
 12408                           ; BSR set to: 0
 12409  0143F6  0012               	return		;funcret
 12410  0143F8                     __end_of___fleq:
 12411                           	callstack 0
 12412                           
 12413 ;; *************** function ___fldiv *****************
 12414 ;; Defined at:
 12415 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;  b               4   18[BANK0 ] unsigned char 
 12418 ;;  a               4   22[BANK0 ] unsigned char 
 12419 ;; Auto vars:     Size  Location     Type
 12420 ;;  grs             4   37[BANK0 ] unsigned long 
 12421 ;;  rem             4   30[BANK0 ] unsigned long 
 12422 ;;  new_exp         2   35[BANK0 ] short 
 12423 ;;  aexp            1   42[BANK0 ] unsigned char 
 12424 ;;  bexp            1   41[BANK0 ] unsigned char 
 12425 ;;  sign            1   34[BANK0 ] unsigned char 
 12426 ;; Return value:  Size  Location     Type
 12427 ;;                  4   18[BANK0 ] unsigned char 
 12428 ;; Registers used:
 12429 ;;		wreg, status,2, status,0
 12430 ;; Tracked objects:
 12431 ;;		On entry : 3F/0
 12432 ;;		On exit  : 3F/0
 12433 ;;		Unchanged: 0/0
 12434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12435 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12436 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12437 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12438 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12439 ;;Total ram usage:       25 bytes
 12440 ;; Hardware stack levels used: 1
 12441 ;; Hardware stack levels required when called: 7
 12442 ;; This function calls:
 12443 ;;		Nothing
 12444 ;; This function is called by:
 12445 ;;		_ps_math
 12446 ;;		_efgtoa
 12447 ;; This function uses a non-reentrant model
 12448 ;;
 12449                           
 12450                           	psect	text29
 12451  012916                     __ptext29:
 12452                           	callstack 0
 12453  012916                     ___fldiv:
 12454                           	callstack 19
 12455                           
 12456                           ; BSR set to: 0
 12457                           
 12458                           ; BSR set to: 0
 12459                           ;incstack = 0
 12460  012916  5175               	movf	(___fldiv@b+3)& (0+255),w,b
 12461  012918  0B80               	andlw	128
 12462  01291A  6F82               	movwf	___fldiv@sign& (0+255),b
 12463  01291C  5175               	movf	(___fldiv@b+3)& (0+255),w,b
 12464  01291E  2575               	addwf	(___fldiv@b+3)& (0+255),w,b
 12465  012920  6F89               	movwf	___fldiv@bexp& (0+255),b
 12466                           
 12467                           ; BSR set to: 0
 12468  012922  BF74               	btfsc	(___fldiv@b+2)& (0+255),7,b
 12469                           
 12470                           ; BSR set to: 0
 12471  012924  8189               	bsf	___fldiv@bexp& (0+255),0,b
 12472                           
 12473                           ; BSR set to: 0
 12474  012926  5189               	movf	___fldiv@bexp& (0+255),w,b
 12475  012928  B4D8               	btfsc	status,2,c
 12476  01292A  D00D               	goto	l8970
 12477                           
 12478                           ; BSR set to: 0
 12479  01292C  2989               	incf	___fldiv@bexp& (0+255),w,b
 12480  01292E  A4D8               	btfss	status,2,c
 12481  012930  D008               	goto	l8966
 12482                           
 12483                           ; BSR set to: 0
 12484  012932  0E00               	movlw	0
 12485  012934  6F72               	movwf	___fldiv@b& (0+255),b
 12486  012936  0E00               	movlw	0
 12487  012938  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12488  01293A  0E00               	movlw	0
 12489  01293C  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12490  01293E  0E00               	movlw	0
 12491  012940  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12492  012942                     l8966:
 12493                           
 12494                           ; BSR set to: 0
 12495  012942  8F74               	bsf	(___fldiv@b+2)& (0+255),7,b
 12496  012944  D006               	goto	L13
 12497  012946                     l8970:
 12498                           
 12499                           ; BSR set to: 0
 12500  012946  0E00               	movlw	0
 12501  012948  6F72               	movwf	___fldiv@b& (0+255),b
 12502  01294A  0E00               	movlw	0
 12503  01294C  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12504  01294E  0E00               	movlw	0
 12505  012950  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12506  012952                     L13:
 12507  012952  0E00               	movlw	0
 12508  012954  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12509                           
 12510                           ; BSR set to: 0
 12511  012956  5179               	movf	(___fldiv@a+3)& (0+255),w,b
 12512  012958  0B80               	andlw	128
 12513  01295A  1B82               	xorwf	___fldiv@sign& (0+255),f,b
 12514                           
 12515                           ; BSR set to: 0
 12516  01295C  5179               	movf	(___fldiv@a+3)& (0+255),w,b
 12517  01295E  2579               	addwf	(___fldiv@a+3)& (0+255),w,b
 12518  012960  6F8A               	movwf	___fldiv@aexp& (0+255),b
 12519                           
 12520                           ; BSR set to: 0
 12521  012962  BF78               	btfsc	(___fldiv@a+2)& (0+255),7,b
 12522                           
 12523                           ; BSR set to: 0
 12524  012964  818A               	bsf	___fldiv@aexp& (0+255),0,b
 12525                           
 12526                           ; BSR set to: 0
 12527  012966  518A               	movf	___fldiv@aexp& (0+255),w,b
 12528  012968  B4D8               	btfsc	status,2,c
 12529  01296A  D00D               	goto	l8990
 12530                           
 12531                           ; BSR set to: 0
 12532  01296C  298A               	incf	___fldiv@aexp& (0+255),w,b
 12533  01296E  A4D8               	btfss	status,2,c
 12534  012970  D008               	goto	l8986
 12535                           
 12536                           ; BSR set to: 0
 12537  012972  0E00               	movlw	0
 12538  012974  6F76               	movwf	___fldiv@a& (0+255),b
 12539  012976  0E00               	movlw	0
 12540  012978  6F77               	movwf	(___fldiv@a+1)& (0+255),b
 12541  01297A  0E00               	movlw	0
 12542  01297C  6F78               	movwf	(___fldiv@a+2)& (0+255),b
 12543  01297E  0E00               	movlw	0
 12544  012980  6F79               	movwf	(___fldiv@a+3)& (0+255),b
 12545  012982                     l8986:
 12546                           
 12547                           ; BSR set to: 0
 12548  012982  8F78               	bsf	(___fldiv@a+2)& (0+255),7,b
 12549  012984  D006               	goto	L14
 12550  012986                     l8990:
 12551                           
 12552                           ; BSR set to: 0
 12553  012986  0E00               	movlw	0
 12554  012988  6F76               	movwf	___fldiv@a& (0+255),b
 12555  01298A  0E00               	movlw	0
 12556  01298C  6F77               	movwf	(___fldiv@a+1)& (0+255),b
 12557  01298E  0E00               	movlw	0
 12558  012990  6F78               	movwf	(___fldiv@a+2)& (0+255),b
 12559  012992                     L14:
 12560  012992  0E00               	movlw	0
 12561  012994  6F79               	movwf	(___fldiv@a+3)& (0+255),b
 12562                           
 12563                           ; BSR set to: 0
 12564  012996  5176               	movf	___fldiv@a& (0+255),w,b
 12565  012998  1177               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12566  01299A  1178               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12567  01299C  1179               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12568  01299E  A4D8               	btfss	status,2,c
 12569  0129A0  D017               	goto	l9004
 12570                           
 12571                           ; BSR set to: 0
 12572  0129A2  0E00               	movlw	0
 12573  0129A4  6F72               	movwf	___fldiv@b& (0+255),b
 12574  0129A6  0E00               	movlw	0
 12575  0129A8  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12576  0129AA  0E00               	movlw	0
 12577  0129AC  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12578  0129AE  0E00               	movlw	0
 12579  0129B0  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12580                           
 12581                           ; BSR set to: 0
 12582  0129B2  0E80               	movlw	128
 12583  0129B4  1374               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12584  0129B6  0E7F               	movlw	127
 12585  0129B8  1375               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12586  0129BA                     l8998:
 12587                           
 12588                           ; BSR set to: 0
 12589  0129BA  5182               	movf	___fldiv@sign& (0+255),w,b
 12590  0129BC  1375               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12591                           
 12592                           ; BSR set to: 0
 12593  0129BE  C072  F072         	movff	___fldiv@b,?___fldiv
 12594  0129C2  C073  F073         	movff	___fldiv@b+1,?___fldiv+1
 12595  0129C6  C074  F074         	movff	___fldiv@b+2,?___fldiv+2
 12596  0129CA  C075  F075         	movff	___fldiv@b+3,?___fldiv+3
 12597  0129CE  0012               	return	
 12598  0129D0                     l9004:
 12599                           
 12600                           ; BSR set to: 0
 12601  0129D0  5189               	movf	___fldiv@bexp& (0+255),w,b
 12602  0129D2  A4D8               	btfss	status,2,c
 12603  0129D4  D009               	goto	l9012
 12604                           
 12605                           ; BSR set to: 0
 12606                           
 12607                           ; BSR set to: 0
 12608  0129D6  0E00               	movlw	0
 12609  0129D8  6F72               	movwf	?___fldiv& (0+255),b
 12610  0129DA  0E00               	movlw	0
 12611  0129DC  6F73               	movwf	(?___fldiv+1)& (0+255),b
 12612  0129DE  0E00               	movlw	0
 12613  0129E0  6F74               	movwf	(?___fldiv+2)& (0+255),b
 12614  0129E2  0E00               	movlw	0
 12615  0129E4  6F75               	movwf	(?___fldiv+3)& (0+255),b
 12616  0129E6  0012               	return	
 12617  0129E8                     l9012:
 12618                           
 12619                           ; BSR set to: 0
 12620  0129E8  518A               	movf	___fldiv@aexp& (0+255),w,b
 12621  0129EA  C089  F07A         	movff	___fldiv@bexp,??___fldiv
 12622  0129EE  6B7B               	clrf	(??___fldiv+1)& (0+255),b
 12623  0129F0  5F7A               	subwf	??___fldiv& (0+255),f,b
 12624  0129F2  0E00               	movlw	0
 12625  0129F4  5B7B               	subwfb	(??___fldiv+1)& (0+255),f,b
 12626  0129F6  0E7F               	movlw	127
 12627  0129F8  257A               	addwf	??___fldiv& (0+255),w,b
 12628  0129FA  6F83               	movwf	___fldiv@new_exp& (0+255),b
 12629  0129FC  0E00               	movlw	0
 12630  0129FE  217B               	addwfc	(??___fldiv+1)& (0+255),w,b
 12631  012A00  6F84               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12632                           
 12633                           ; BSR set to: 0
 12634  012A02  C072  F07E         	movff	___fldiv@b,___fldiv@rem
 12635  012A06  C073  F07F         	movff	___fldiv@b+1,___fldiv@rem+1
 12636  012A0A  C074  F080         	movff	___fldiv@b+2,___fldiv@rem+2
 12637  012A0E  C075  F081         	movff	___fldiv@b+3,___fldiv@rem+3
 12638                           
 12639                           ; BSR set to: 0
 12640  012A12  0E00               	movlw	0
 12641  012A14  6F72               	movwf	___fldiv@b& (0+255),b
 12642  012A16  0E00               	movlw	0
 12643  012A18  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12644  012A1A  0E00               	movlw	0
 12645  012A1C  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12646  012A1E  0E00               	movlw	0
 12647  012A20  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12648                           
 12649                           ; BSR set to: 0
 12650  012A22  0E00               	movlw	0
 12651  012A24  6F85               	movwf	___fldiv@grs& (0+255),b
 12652  012A26  0E00               	movlw	0
 12653  012A28  6F86               	movwf	(___fldiv@grs+1)& (0+255),b
 12654  012A2A  0E00               	movlw	0
 12655  012A2C  6F87               	movwf	(___fldiv@grs+2)& (0+255),b
 12656  012A2E  0E00               	movlw	0
 12657  012A30  6F88               	movwf	(___fldiv@grs+3)& (0+255),b
 12658                           
 12659                           ; BSR set to: 0
 12660  012A32  0E00               	movlw	0
 12661  012A34  6F8A               	movwf	___fldiv@aexp& (0+255),b
 12662  012A36  D028               	goto	l2408
 12663  012A38                     l9022:
 12664                           
 12665                           ; BSR set to: 0
 12666  012A38  518A               	movf	___fldiv@aexp& (0+255),w,b
 12667  012A3A  B4D8               	btfsc	status,2,c
 12668  012A3C  D011               	goto	l9030
 12669                           
 12670                           ; BSR set to: 0
 12671  012A3E  90D8               	bcf	status,0,c
 12672  012A40  377E               	rlcf	___fldiv@rem& (0+255),f,b
 12673  012A42  377F               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12674  012A44  3780               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12675  012A46  3781               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12676  012A48  90D8               	bcf	status,0,c
 12677  012A4A  3772               	rlcf	___fldiv@b& (0+255),f,b
 12678  012A4C  3773               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12679  012A4E  3774               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12680  012A50  3775               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12681                           
 12682                           ; BSR set to: 0
 12683  012A52  BF88               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12684                           
 12685                           ; BSR set to: 0
 12686  012A54  8172               	bsf	___fldiv@b& (0+255),0,b
 12687                           
 12688                           ; BSR set to: 0
 12689  012A56  90D8               	bcf	status,0,c
 12690  012A58  3785               	rlcf	___fldiv@grs& (0+255),f,b
 12691  012A5A  3786               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12692  012A5C  3787               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12693  012A5E  3788               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12694  012A60                     l9030:
 12695                           
 12696                           ; BSR set to: 0
 12697  012A60  5176               	movf	___fldiv@a& (0+255),w,b
 12698  012A62  5D7E               	subwf	___fldiv@rem& (0+255),w,b
 12699  012A64  5177               	movf	(___fldiv@a+1)& (0+255),w,b
 12700  012A66  597F               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12701  012A68  5178               	movf	(___fldiv@a+2)& (0+255),w,b
 12702  012A6A  5980               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12703  012A6C  5179               	movf	(___fldiv@a+3)& (0+255),w,b
 12704  012A6E  5981               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12705  012A70  A0D8               	btfss	status,0,c
 12706  012A72  D009               	goto	l9036
 12707                           
 12708                           ; BSR set to: 0
 12709  012A74  8D88               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12710                           
 12711                           ; BSR set to: 0
 12712  012A76  5176               	movf	___fldiv@a& (0+255),w,b
 12713  012A78  5F7E               	subwf	___fldiv@rem& (0+255),f,b
 12714  012A7A  5177               	movf	(___fldiv@a+1)& (0+255),w,b
 12715  012A7C  5B7F               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12716  012A7E  5178               	movf	(___fldiv@a+2)& (0+255),w,b
 12717  012A80  5B80               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12718  012A82  5179               	movf	(___fldiv@a+3)& (0+255),w,b
 12719  012A84  5B81               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12720  012A86                     l9036:
 12721                           
 12722                           ; BSR set to: 0
 12723  012A86  2B8A               	incf	___fldiv@aexp& (0+255),f,b
 12724  012A88                     l2408:
 12725                           
 12726                           ; BSR set to: 0
 12727  012A88  0E19               	movlw	25
 12728  012A8A  658A               	cpfsgt	___fldiv@aexp& (0+255),b
 12729  012A8C  D7D5               	goto	l9022
 12730                           
 12731                           ; BSR set to: 0
 12732  012A8E  517E               	movf	___fldiv@rem& (0+255),w,b
 12733  012A90  117F               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12734  012A92  1180               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12735  012A94  1181               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12736  012A96  B4D8               	btfsc	status,2,c
 12737  012A98  D011               	goto	l9048
 12738                           
 12739                           ; BSR set to: 0
 12740  012A9A  8185               	bsf	___fldiv@grs& (0+255),0,b
 12741  012A9C  D00F               	goto	l9048
 12742  012A9E                     l9042:
 12743                           
 12744                           ; BSR set to: 0
 12745  012A9E  90D8               	bcf	status,0,c
 12746  012AA0  3772               	rlcf	___fldiv@b& (0+255),f,b
 12747  012AA2  3773               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12748  012AA4  3774               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12749  012AA6  3775               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12750                           
 12751                           ; BSR set to: 0
 12752  012AA8  BF88               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12753                           
 12754                           ; BSR set to: 0
 12755  012AAA  8172               	bsf	___fldiv@b& (0+255),0,b
 12756                           
 12757                           ; BSR set to: 0
 12758  012AAC  90D8               	bcf	status,0,c
 12759  012AAE  3785               	rlcf	___fldiv@grs& (0+255),f,b
 12760  012AB0  3786               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12761  012AB2  3787               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12762  012AB4  3788               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12763  012AB6  0783               	decf	___fldiv@new_exp& (0+255),f,b
 12764  012AB8  A0D8               	btfss	status,0,c
 12765  012ABA  0784               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12766  012ABC                     l9048:
 12767                           
 12768                           ; BSR set to: 0
 12769  012ABC  AF74               	btfss	(___fldiv@b+2)& (0+255),7,b
 12770  012ABE  D7EF               	goto	l9042
 12771                           
 12772                           ; BSR set to: 0
 12773  012AC0  0E00               	movlw	0
 12774  012AC2  6F8A               	movwf	___fldiv@aexp& (0+255),b
 12775                           
 12776                           ; BSR set to: 0
 12777  012AC4  AF88               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12778  012AC6  D017               	goto	l2419
 12779                           
 12780                           ; BSR set to: 0
 12781  012AC8  0EFF               	movlw	255
 12782  012ACA  1585               	andwf	___fldiv@grs& (0+255),w,b
 12783  012ACC  6F7A               	movwf	??___fldiv& (0+255),b
 12784  012ACE  0EFF               	movlw	255
 12785  012AD0  1586               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12786  012AD2  6F7B               	movwf	(??___fldiv+1)& (0+255),b
 12787  012AD4  0EFF               	movlw	255
 12788  012AD6  1587               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12789  012AD8  6F7C               	movwf	(??___fldiv+2)& (0+255),b
 12790  012ADA  0E7F               	movlw	127
 12791  012ADC  1588               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12792  012ADE  6F7D               	movwf	(??___fldiv+3)& (0+255),b
 12793  012AE0  517A               	movf	??___fldiv& (0+255),w,b
 12794  012AE2  117B               	iorwf	(??___fldiv+1)& (0+255),w,b
 12795  012AE4  117C               	iorwf	(??___fldiv+2)& (0+255),w,b
 12796  012AE6  117D               	iorwf	(??___fldiv+3)& (0+255),w,b
 12797  012AE8  B4D8               	btfsc	status,2,c
 12798  012AEA  D003               	goto	l2420
 12799  012AEC                     u8040:
 12800                           
 12801                           ; BSR set to: 0
 12802  012AEC  0E01               	movlw	1
 12803  012AEE  6F8A               	movwf	___fldiv@aexp& (0+255),b
 12804  012AF0  D002               	goto	l2419
 12805  012AF2                     l2420:
 12806                           
 12807                           ; BSR set to: 0
 12808  012AF2  B172               	btfsc	___fldiv@b& (0+255),0,b
 12809  012AF4  D7FB               	goto	u8040
 12810  012AF6                     l2419:
 12811                           
 12812                           ; BSR set to: 0
 12813  012AF6  518A               	movf	___fldiv@aexp& (0+255),w,b
 12814  012AF8  B4D8               	btfsc	status,2,c
 12815  012AFA  D01F               	goto	l9068
 12816                           
 12817                           ; BSR set to: 0
 12818  012AFC  0E01               	movlw	1
 12819  012AFE  2772               	addwf	___fldiv@b& (0+255),f,b
 12820  012B00  0E00               	movlw	0
 12821  012B02  2373               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12822  012B04  2374               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12823  012B06  2375               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12824                           
 12825                           ; BSR set to: 0
 12826  012B08  A175               	btfss	(___fldiv@b+3)& (0+255),0,b
 12827  012B0A  D017               	goto	l9068
 12828                           
 12829                           ; BSR set to: 0
 12830  012B0C  C072  F07A         	movff	___fldiv@b,??___fldiv
 12831  012B10  C073  F07B         	movff	___fldiv@b+1,??___fldiv+1
 12832  012B14  C074  F07C         	movff	___fldiv@b+2,??___fldiv+2
 12833  012B18  C075  F07D         	movff	___fldiv@b+3,??___fldiv+3
 12834  012B1C  357D               	rlcf	(??___fldiv+3)& (0+255),w,b
 12835  012B1E  337D               	rrcf	(??___fldiv+3)& (0+255),f,b
 12836  012B20  337C               	rrcf	(??___fldiv+2)& (0+255),f,b
 12837  012B22  337B               	rrcf	(??___fldiv+1)& (0+255),f,b
 12838  012B24  337A               	rrcf	??___fldiv& (0+255),f,b
 12839  012B26  C07A  F072         	movff	??___fldiv,___fldiv@b
 12840  012B2A  C07B  F073         	movff	??___fldiv+1,___fldiv@b+1
 12841  012B2E  C07C  F074         	movff	??___fldiv+2,___fldiv@b+2
 12842  012B32  C07D  F075         	movff	??___fldiv+3,___fldiv@b+3
 12843                           
 12844                           ; BSR set to: 0
 12845  012B36  4B83               	infsnz	___fldiv@new_exp& (0+255),f,b
 12846  012B38  2B84               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12847  012B3A                     l9068:
 12848                           
 12849                           ; BSR set to: 0
 12850  012B3A  BF84               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12851  012B3C  D010               	goto	l9072
 12852  012B3E  5184               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12853  012B40  E103               	bnz	u8080
 12854  012B42  2983               	incf	___fldiv@new_exp& (0+255),w,b
 12855  012B44  A0D8               	btfss	status,0,c
 12856  012B46  D00B               	goto	l9072
 12857  012B48                     u8080:
 12858                           
 12859                           ; BSR set to: 0
 12860  012B48  0E00               	movlw	0
 12861  012B4A  6F84               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12862  012B4C  6983               	setf	___fldiv@new_exp& (0+255),b
 12863  012B4E  0E00               	movlw	0
 12864  012B50  6F72               	movwf	___fldiv@b& (0+255),b
 12865  012B52  0E00               	movlw	0
 12866  012B54  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12867  012B56  0E00               	movlw	0
 12868  012B58  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12869  012B5A  0E00               	movlw	0
 12870  012B5C  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12871  012B5E                     l9072:
 12872                           
 12873                           ; BSR set to: 0
 12874  012B5E  BF84               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12875  012B60  D005               	goto	u8090
 12876  012B62  5184               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12877  012B64  E111               	bnz	l9076
 12878  012B66  0583               	decf	___fldiv@new_exp& (0+255),w,b
 12879  012B68  B0D8               	btfsc	status,0,c
 12880  012B6A  D00E               	goto	l9076
 12881  012B6C                     u8090:
 12882                           
 12883                           ; BSR set to: 0
 12884  012B6C  0E00               	movlw	0
 12885  012B6E  6F84               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12886  012B70  0E00               	movlw	0
 12887  012B72  6F83               	movwf	___fldiv@new_exp& (0+255),b
 12888  012B74  0E00               	movlw	0
 12889  012B76  6F72               	movwf	___fldiv@b& (0+255),b
 12890  012B78  0E00               	movlw	0
 12891  012B7A  6F73               	movwf	(___fldiv@b+1)& (0+255),b
 12892  012B7C  0E00               	movlw	0
 12893  012B7E  6F74               	movwf	(___fldiv@b+2)& (0+255),b
 12894  012B80  0E00               	movlw	0
 12895  012B82  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12896  012B84  0E00               	movlw	0
 12897  012B86  6F82               	movwf	___fldiv@sign& (0+255),b
 12898  012B88                     l9076:
 12899                           
 12900                           ; BSR set to: 0
 12901  012B88  C083  F089         	movff	___fldiv@new_exp,___fldiv@bexp
 12902                           
 12903                           ; BSR set to: 0
 12904  012B8C  A189               	btfss	___fldiv@bexp& (0+255),0,b
 12905  012B8E  D002               	goto	l9082
 12906                           
 12907                           ; BSR set to: 0
 12908  012B90  8F74               	bsf	(___fldiv@b+2)& (0+255),7,b
 12909  012B92  D001               	goto	l9084
 12910  012B94                     l9082:
 12911                           
 12912                           ; BSR set to: 0
 12913  012B94  9F74               	bcf	(___fldiv@b+2)& (0+255),7,b
 12914  012B96                     l9084:
 12915                           
 12916                           ; BSR set to: 0
 12917  012B96  90D8               	bcf	status,0,c
 12918  012B98  3189               	rrcf	___fldiv@bexp& (0+255),w,b
 12919  012B9A  6F75               	movwf	(___fldiv@b+3)& (0+255),b
 12920  012B9C  D70E               	goto	l8998
 12921  012B9E                     __end_of___fldiv:
 12922                           	callstack 0
 12923                           
 12924 ;; *************** function ___awmod *****************
 12925 ;; Defined at:
 12926 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;  dividend        2    0[BANK0 ] int 
 12929 ;;  divisor         2    2[BANK0 ] int 
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;  sign            1   32[COMRAM] unsigned char 
 12932 ;;  counter         1   31[COMRAM] unsigned char 
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  2    0[BANK0 ] int 
 12935 ;; Registers used:
 12936 ;;		wreg, status,2, status,0
 12937 ;; Tracked objects:
 12938 ;;		On entry : 3F/0
 12939 ;;		On exit  : 3F/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12945 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12946 ;;Total ram usage:        6 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; Hardware stack levels required when called: 7
 12949 ;; This function calls:
 12950 ;;		Nothing
 12951 ;; This function is called by:
 12952 ;;		_efgtoa
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           	psect	text30
 12957  0144F0                     __ptext30:
 12958                           	callstack 0
 12959  0144F0                     ___awmod:
 12960                           	callstack 19
 12961                           
 12962                           ; BSR set to: 0
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;incstack = 0
 12966  0144F0  0E00               	movlw	0
 12967  0144F2  6E21               	movwf	___awmod@sign^0,c
 12968                           
 12969                           ; BSR set to: 0
 12970  0144F4  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12971  0144F6  D006               	goto	l9280
 12972                           
 12973                           ; BSR set to: 0
 12974  0144F8  6D60               	negf	___awmod@dividend& (0+255),b
 12975  0144FA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 12976  0144FC  B0D8               	btfsc	status,0,c
 12977  0144FE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12978                           
 12979                           ; BSR set to: 0
 12980  014500  0E01               	movlw	1
 12981  014502  6E21               	movwf	___awmod@sign^0,c
 12982  014504                     l9280:
 12983                           
 12984                           ; BSR set to: 0
 12985  014504  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12986  014506  D004               	goto	l9284
 12987                           
 12988                           ; BSR set to: 0
 12989  014508  6D62               	negf	___awmod@divisor& (0+255),b
 12990  01450A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 12991  01450C  B0D8               	btfsc	status,0,c
 12992  01450E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 12993  014510                     l9284:
 12994                           
 12995                           ; BSR set to: 0
 12996  014510  5162               	movf	___awmod@divisor& (0+255),w,b
 12997  014512  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12998  014514  B4D8               	btfsc	status,2,c
 12999  014516  D018               	goto	l9300
 13000                           
 13001                           ; BSR set to: 0
 13002  014518  0E01               	movlw	1
 13003  01451A  6E20               	movwf	___awmod@counter^0,c
 13004  01451C  D004               	goto	l9290
 13005  01451E                     l9288:
 13006                           
 13007                           ; BSR set to: 0
 13008  01451E  90D8               	bcf	status,0,c
 13009  014520  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13010  014522  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13011  014524  2A20               	incf	___awmod@counter^0,f,c
 13012  014526                     l9290:
 13013                           
 13014                           ; BSR set to: 0
 13015  014526  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13016  014528  D7FA               	goto	l9288
 13017  01452A                     u8380:
 13018                           
 13019                           ; BSR set to: 0
 13020  01452A  5162               	movf	___awmod@divisor& (0+255),w,b
 13021  01452C  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13022  01452E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13023  014530  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13024  014532  A0D8               	btfss	status,0,c
 13025  014534  D004               	goto	l9296
 13026                           
 13027                           ; BSR set to: 0
 13028  014536  5162               	movf	___awmod@divisor& (0+255),w,b
 13029  014538  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13030  01453A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13031  01453C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13032  01453E                     l9296:
 13033                           
 13034                           ; BSR set to: 0
 13035  01453E  90D8               	bcf	status,0,c
 13036  014540  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13037  014542  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13038                           
 13039                           ; BSR set to: 0
 13040  014544  2E20               	decfsz	___awmod@counter^0,f,c
 13041  014546  D7F1               	goto	u8380
 13042  014548                     l9300:
 13043                           
 13044                           ; BSR set to: 0
 13045  014548  5021               	movf	___awmod@sign^0,w,c
 13046  01454A  B4D8               	btfsc	status,2,c
 13047  01454C  D004               	goto	l9304
 13048                           
 13049                           ; BSR set to: 0
 13050  01454E  6D60               	negf	___awmod@dividend& (0+255),b
 13051  014550  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13052  014552  B0D8               	btfsc	status,0,c
 13053  014554  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13054  014556                     l9304:
 13055                           
 13056                           ; BSR set to: 0
 13057  014556  C060  F060         	movff	___awmod@dividend,?___awmod
 13058  01455A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13059                           
 13060                           ; BSR set to: 0
 13061  01455E  0012               	return		;funcret
 13062  014560                     __end_of___awmod:
 13063                           	callstack 0
 13064                           
 13065 ;; *************** function ___awdiv *****************
 13066 ;; Defined at:
 13067 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;  dividend        2    0[BANK0 ] int 
 13070 ;;  divisor         2    2[BANK0 ] int 
 13071 ;; Auto vars:     Size  Location     Type
 13072 ;;  quotient        2    6[BANK0 ] int 
 13073 ;;  sign            1    5[BANK0 ] unsigned char 
 13074 ;;  counter         1    4[BANK0 ] unsigned char 
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  2    0[BANK0 ] int 
 13077 ;; Registers used:
 13078 ;;		wreg, status,2, status,0
 13079 ;; Tracked objects:
 13080 ;;		On entry : 3F/0
 13081 ;;		On exit  : 3F/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13084 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13085 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13087 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13088 ;;Total ram usage:        8 bytes
 13089 ;; Hardware stack levels used: 1
 13090 ;; Hardware stack levels required when called: 7
 13091 ;; This function calls:
 13092 ;;		Nothing
 13093 ;; This function is called by:
 13094 ;;		_efgtoa
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           	psect	text31
 13099  0143F8                     __ptext31:
 13100                           	callstack 0
 13101  0143F8                     ___awdiv:
 13102                           	callstack 19
 13103                           
 13104                           ; BSR set to: 0
 13105                           
 13106                           ; BSR set to: 0
 13107                           ;incstack = 0
 13108  0143F8  0E00               	movlw	0
 13109  0143FA  6F65               	movwf	___awdiv@sign& (0+255),b
 13110                           
 13111                           ; BSR set to: 0
 13112  0143FC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13113  0143FE  D006               	goto	l9236
 13114                           
 13115                           ; BSR set to: 0
 13116  014400  6D62               	negf	___awdiv@divisor& (0+255),b
 13117  014402  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13118  014404  B0D8               	btfsc	status,0,c
 13119  014406  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13120                           
 13121                           ; BSR set to: 0
 13122  014408  0E01               	movlw	1
 13123  01440A  6F65               	movwf	___awdiv@sign& (0+255),b
 13124  01440C                     l9236:
 13125                           
 13126                           ; BSR set to: 0
 13127  01440C  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13128  01440E  D006               	goto	l9242
 13129                           
 13130                           ; BSR set to: 0
 13131  014410  6D60               	negf	___awdiv@dividend& (0+255),b
 13132  014412  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13133  014414  B0D8               	btfsc	status,0,c
 13134  014416  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13135                           
 13136                           ; BSR set to: 0
 13137  014418  0E01               	movlw	1
 13138  01441A  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13139  01441C                     l9242:
 13140                           
 13141                           ; BSR set to: 0
 13142  01441C  0E00               	movlw	0
 13143  01441E  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13144  014420  0E00               	movlw	0
 13145  014422  6F66               	movwf	___awdiv@quotient& (0+255),b
 13146                           
 13147                           ; BSR set to: 0
 13148  014424  5162               	movf	___awdiv@divisor& (0+255),w,b
 13149  014426  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13150  014428  B4D8               	btfsc	status,2,c
 13151  01442A  D01C               	goto	l9264
 13152                           
 13153                           ; BSR set to: 0
 13154  01442C  0E01               	movlw	1
 13155  01442E  6F64               	movwf	___awdiv@counter& (0+255),b
 13156  014430  D004               	goto	l9250
 13157  014432                     l9248:
 13158                           
 13159                           ; BSR set to: 0
 13160  014432  90D8               	bcf	status,0,c
 13161  014434  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13162  014436  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13163  014438  2B64               	incf	___awdiv@counter& (0+255),f,b
 13164  01443A                     l9250:
 13165                           
 13166                           ; BSR set to: 0
 13167  01443A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13168  01443C  D7FA               	goto	l9248
 13169  01443E                     u8320:
 13170                           
 13171                           ; BSR set to: 0
 13172  01443E  90D8               	bcf	status,0,c
 13173  014440  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13174  014442  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13175                           
 13176                           ; BSR set to: 0
 13177  014444  5162               	movf	___awdiv@divisor& (0+255),w,b
 13178  014446  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13179  014448  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13180  01444A  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13181  01444C  A0D8               	btfss	status,0,c
 13182  01444E  D005               	goto	l9260
 13183                           
 13184                           ; BSR set to: 0
 13185  014450  5162               	movf	___awdiv@divisor& (0+255),w,b
 13186  014452  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13187  014454  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13188  014456  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13189                           
 13190                           ; BSR set to: 0
 13191  014458  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13192  01445A                     l9260:
 13193                           
 13194                           ; BSR set to: 0
 13195  01445A  90D8               	bcf	status,0,c
 13196  01445C  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13197  01445E  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13198                           
 13199                           ; BSR set to: 0
 13200  014460  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13201  014462  D7ED               	goto	u8320
 13202  014464                     l9264:
 13203                           
 13204                           ; BSR set to: 0
 13205  014464  5165               	movf	___awdiv@sign& (0+255),w,b
 13206  014466  B4D8               	btfsc	status,2,c
 13207  014468  D004               	goto	l9268
 13208                           
 13209                           ; BSR set to: 0
 13210  01446A  6D66               	negf	___awdiv@quotient& (0+255),b
 13211  01446C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13212  01446E  B0D8               	btfsc	status,0,c
 13213  014470  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13214  014472                     l9268:
 13215                           
 13216                           ; BSR set to: 0
 13217  014472  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13218  014476  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13219                           
 13220                           ; BSR set to: 0
 13221  01447A  0012               	return		;funcret
 13222  01447C                     __end_of___awdiv:
 13223                           	callstack 0
 13224                           
 13225 ;; *************** function _atoi *****************
 13226 ;; Defined at:
 13227 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;  s               2    5[BANK0 ] PTR const unsigned char 
 13230 ;;		 -> STR_19(23), STR_18(29), STR_17(24), STR_16(24), 
 13231 ;;		 -> STR_15(153), STR_14(3), STR_13(6), STR_12(17), 
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;  n               2   13[BANK0 ] int 
 13234 ;;  neg             2   11[BANK0 ] int 
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  2    5[BANK0 ] int 
 13237 ;; Registers used:
 13238 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13239 ;; Tracked objects:
 13240 ;;		On entry : 3F/0
 13241 ;;		On exit  : 3F/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13245 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13246 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13247 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13248 ;;Total ram usage:       10 bytes
 13249 ;; Hardware stack levels used: 1
 13250 ;; Hardware stack levels required when called: 8
 13251 ;; This function calls:
 13252 ;;		___wmul
 13253 ;;		_isdigit
 13254 ;;		_isspace
 13255 ;; This function is called by:
 13256 ;;		_vfpfcnvrt
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260                           	psect	text32
 13261  013748                     __ptext32:
 13262                           	callstack 0
 13263  013748                     _atoi:
 13264                           	callstack 19
 13265                           
 13266                           ; BSR set to: 0
 13267                           
 13268                           ; BSR set to: 0
 13269                           ;incstack = 0
 13270  013748  0E00               	movlw	0
 13271  01374A  6F6E               	movwf	(atoi@n+1)& (0+255),b
 13272  01374C  0E00               	movlw	0
 13273  01374E  6F6D               	movwf	atoi@n& (0+255),b
 13274  013750  0E00               	movlw	0
 13275  013752  6F6C               	movwf	(atoi@neg+1)& (0+255),b
 13276  013754  0E00               	movlw	0
 13277  013756  6F6B               	movwf	atoi@neg& (0+255),b
 13278  013758  D002               	goto	l10004
 13279  01375A                     l10000:
 13280                           
 13281                           ; BSR set to: 0
 13282  01375A  4B65               	infsnz	atoi@s& (0+255),f,b
 13283  01375C  2B66               	incf	(atoi@s+1)& (0+255),f,b
 13284  01375E                     l10004:
 13285                           
 13286                           ; BSR set to: 0
 13287  01375E  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13288  013764  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13289  01376A                     	if	0	;tblptru may be non-zero
 13290  01376A                     	endif
 13291  01376A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13292  01376A  0E00               	movlw	low (__mediumconst shr (0+16))
 13293  01376C  6EF8               	movwf	tblptru,c
 13294  01376E                     	endif
 13295  01376E  0008               	tblrd		*
 13296  013770  50F5               	movf	tablat,w,c
 13297  013772  0A20               	xorlw	32
 13298  013774  B4D8               	btfsc	status,2,c
 13299  013776  D7F1               	goto	l10000
 13300                           
 13301                           ; BSR set to: 0
 13302  013778  0EF7               	movlw	247
 13303  01377A  6F67               	movwf	??_atoi& (0+255),b
 13304  01377C  0EFF               	movlw	255
 13305  01377E  6F68               	movwf	(??_atoi+1)& (0+255),b
 13306  013780  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13307  013786  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13308  01378C                     	if	0	;tblptru may be non-zero
 13309  01378C                     	endif
 13310  01378C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13311  01378C  0E00               	movlw	low (__mediumconst shr (0+16))
 13312  01378E  6EF8               	movwf	tblptru,c
 13313  013790                     	endif
 13314  013790  0008               	tblrd		*
 13315  013792  50F5               	movf	tablat,w,c
 13316  013794  6F69               	movwf	(??_atoi+2)& (0+255),b
 13317  013796  6B6A               	clrf	(??_atoi+3)& (0+255),b
 13318  013798  5167               	movf	??_atoi& (0+255),w,b
 13319  01379A  2769               	addwf	(??_atoi+2)& (0+255),f,b
 13320  01379C  5168               	movf	(??_atoi+1)& (0+255),w,b
 13321  01379E  236A               	addwfc	(??_atoi+3)& (0+255),f,b
 13322  0137A0  516A               	movf	(??_atoi+3)& (0+255),w,b
 13323  0137A2  E10C               	bnz	l10012
 13324  0137A4  0E05               	movlw	5
 13325  0137A6  5D69               	subwf	(??_atoi+2)& (0+255),w,b
 13326  0137A8  B0D8               	btfsc	status,0,c
 13327  0137AA  D008               	goto	l10012
 13328  0137AC  D7D6               	goto	l10000
 13329  0137AE                     l10008:
 13330                           
 13331                           ; BSR set to: 0
 13332  0137AE  0E00               	movlw	0
 13333  0137B0  6F6C               	movwf	(atoi@neg+1)& (0+255),b
 13334  0137B2  0E01               	movlw	1
 13335  0137B4  6F6B               	movwf	atoi@neg& (0+255),b
 13336  0137B6                     l10010:
 13337                           
 13338                           ; BSR set to: 0
 13339  0137B6  4B65               	infsnz	atoi@s& (0+255),f,b
 13340  0137B8  2B66               	incf	(atoi@s+1)& (0+255),f,b
 13341  0137BA  D036               	goto	l10020
 13342  0137BC                     l10012:
 13343                           
 13344                           ; BSR set to: 0
 13345  0137BC  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13346  0137C2  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13347  0137C8                     	if	0	;tblptru may be non-zero
 13348  0137C8                     	endif
 13349  0137C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13350  0137C8  0E00               	movlw	low (__mediumconst shr (0+16))
 13351  0137CA  6EF8               	movwf	tblptru,c
 13352  0137CC                     	endif
 13353  0137CC  0008               	tblrd		*
 13354  0137CE  50F5               	movf	tablat,w,c
 13355  0137D0  6F67               	movwf	??_atoi& (0+255),b
 13356  0137D2  6B68               	clrf	(??_atoi+1)& (0+255),b
 13357                           
 13358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13359                           ; Switch size 1, requested type "simple"
 13360                           ; Number of cases is 1, Range of values is 0 to 0
 13361                           ; switch strategies available:
 13362                           ; Name         Instructions Cycles
 13363                           ; simple_byte            4     3 (average)
 13364                           ;	Chosen strategy is simple_byte
 13365  0137D4  5168               	movf	(??_atoi+1)& (0+255),w,b
 13366  0137D6  0A00               	xorlw	0	; case 0
 13367  0137D8  A4D8               	btfss	status,2,c
 13368  0137DA  D026               	goto	l10020
 13369                           
 13370                           ; BSR set to: 0
 13371                           ; Switch size 1, requested type "simple"
 13372                           ; Number of cases is 2, Range of values is 43 to 45
 13373                           ; switch strategies available:
 13374                           ; Name         Instructions Cycles
 13375                           ; simple_byte            7     4 (average)
 13376                           ;	Chosen strategy is simple_byte
 13377  0137DC  5167               	movf	??_atoi& (0+255),w,b
 13378  0137DE  0A2B               	xorlw	43	; case 43
 13379  0137E0  B4D8               	btfsc	status,2,c
 13380  0137E2  D7E9               	goto	l10010
 13381  0137E4  0A06               	xorlw	6	; case 45
 13382  0137E6  B4D8               	btfsc	status,2,c
 13383  0137E8  D7E2               	goto	l10008
 13384  0137EA  D01E               	goto	l10020
 13385  0137EC                     l10014:
 13386                           
 13387                           ; BSR set to: 0
 13388  0137EC  C06D  F060         	movff	atoi@n,___wmul@multiplier
 13389  0137F0  C06E  F061         	movff	atoi@n+1,___wmul@multiplier+1
 13390  0137F4  0E00               	movlw	0
 13391  0137F6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13392  0137F8  0E0A               	movlw	10
 13393  0137FA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 13394  0137FC  ECE4  F0A8         	call	___wmul	;wreg free
 13395  013800  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13396  013806  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13397  01380C                     	if	0	;tblptru may be non-zero
 13398  01380C                     	endif
 13399  01380C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13400  01380C  0E00               	movlw	low (__mediumconst shr (0+16))
 13401  01380E  6EF8               	movwf	tblptru,c
 13402  013810                     	endif
 13403  013810  0008               	tblrd		*
 13404  013812  50F5               	movf	tablat,w,c
 13405  013814  5F60               	subwf	?___wmul& (0+255),f,b
 13406  013816  0E00               	movlw	0
 13407  013818  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
 13408  01381A  0E30               	movlw	48
 13409  01381C  2560               	addwf	?___wmul& (0+255),w,b
 13410  01381E  6F6D               	movwf	atoi@n& (0+255),b
 13411  013820  0E00               	movlw	0
 13412  013822  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 13413  013824  6F6E               	movwf	(atoi@n+1)& (0+255),b
 13414  013826  D7C7               	goto	l10010
 13415  013828                     l10020:
 13416                           
 13417                           ; BSR set to: 0
 13418  013828  0ED0               	movlw	208
 13419  01382A  6F67               	movwf	??_atoi& (0+255),b
 13420  01382C  0EFF               	movlw	255
 13421  01382E  6F68               	movwf	(??_atoi+1)& (0+255),b
 13422  013830  0060  F197  FFF6   	movff	atoi@s,tblptrl
 13423  013836  0060  F19B  FFF7   	movff	atoi@s+1,tblptrh
 13424  01383C                     	if	0	;tblptru may be non-zero
 13425  01383C                     	endif
 13426  01383C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13427  01383C  0E00               	movlw	low (__mediumconst shr (0+16))
 13428  01383E  6EF8               	movwf	tblptru,c
 13429  013840                     	endif
 13430  013840  0008               	tblrd		*
 13431  013842  50F5               	movf	tablat,w,c
 13432  013844  6F69               	movwf	(??_atoi+2)& (0+255),b
 13433  013846  6B6A               	clrf	(??_atoi+3)& (0+255),b
 13434  013848  5167               	movf	??_atoi& (0+255),w,b
 13435  01384A  2769               	addwf	(??_atoi+2)& (0+255),f,b
 13436  01384C  5168               	movf	(??_atoi+1)& (0+255),w,b
 13437  01384E  236A               	addwfc	(??_atoi+3)& (0+255),f,b
 13438  013850  516A               	movf	(??_atoi+3)& (0+255),w,b
 13439  013852  E104               	bnz	u9760
 13440  013854  0E0A               	movlw	10
 13441  013856  5D69               	subwf	(??_atoi+2)& (0+255),w,b
 13442  013858  A0D8               	btfss	status,0,c
 13443  01385A  D7C8               	goto	l10014
 13444  01385C                     u9760:
 13445                           
 13446                           ; BSR set to: 0
 13447  01385C  516B               	movf	atoi@neg& (0+255),w,b
 13448  01385E  116C               	iorwf	(atoi@neg+1)& (0+255),w,b
 13449  013860  A4D8               	btfss	status,2,c
 13450  013862  D00D               	goto	l2777
 13451                           
 13452                           ; BSR set to: 0
 13453  013864  C06D  F067         	movff	atoi@n,??_atoi
 13454  013868  C06E  F068         	movff	atoi@n+1,??_atoi+1
 13455  01386C  1F67               	comf	??_atoi& (0+255),f,b
 13456  01386E  1F68               	comf	(??_atoi+1)& (0+255),f,b
 13457  013870  4B67               	infsnz	??_atoi& (0+255),f,b
 13458  013872  2B68               	incf	(??_atoi+1)& (0+255),f,b
 13459  013874  C067  F065         	movff	??_atoi,?_atoi
 13460  013878  C068  F066         	movff	??_atoi+1,?_atoi+1
 13461  01387C  0012               	return	
 13462  01387E                     l2777:
 13463                           
 13464                           ; BSR set to: 0
 13465  01387E  C06D  F065         	movff	atoi@n,?_atoi
 13466  013882  C06E  F066         	movff	atoi@n+1,?_atoi+1
 13467                           
 13468                           ; BSR set to: 0
 13469  013886  0012               	return		;funcret
 13470  013888                     __end_of_atoi:
 13471                           	callstack 0
 13472                           
 13473 ;; *************** function _isspace *****************
 13474 ;; Defined at:
 13475 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
 13476 ;; Parameters:    Size  Location     Type
 13477 ;;  c               2   31[COMRAM] int 
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;		None
 13480 ;; Return value:  Size  Location     Type
 13481 ;;                  2   31[COMRAM] int 
 13482 ;; Registers used:
 13483 ;;		wreg, status,2, status,0
 13484 ;; Tracked objects:
 13485 ;;		On entry : 0/0
 13486 ;;		On exit  : 3F/0
 13487 ;;		Unchanged: 0/0
 13488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13491 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13492 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13493 ;;Total ram usage:        7 bytes
 13494 ;; Hardware stack levels used: 1
 13495 ;; Hardware stack levels required when called: 7
 13496 ;; This function calls:
 13497 ;;		Nothing
 13498 ;; This function is called by:
 13499 ;;		_atoi
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text33
 13504  014D1E                     __ptext33:
 13505                           	callstack 0
 13506  014D1E                     _isspace:
 13507                           	callstack 19
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;incstack = 0
 13511  014D1E  0E01               	movlw	1
 13512  014D20  0100               	movlb	0	; () banked
 13513  014D22  6F64               	movwf	_isspace$4301& (0+255),b
 13514                           
 13515                           ; BSR set to: 0
 13516  014D24  0E20               	movlw	32
 13517  014D26  1820               	xorwf	isspace@c^0,w,c
 13518  014D28  1021               	iorwf	(isspace@c+1)^0,w,c
 13519  014D2A  B4D8               	btfsc	status,2,c
 13520  014D2C  D014               	goto	l9534
 13521                           
 13522                           ; BSR set to: 0
 13523  014D2E  0EF7               	movlw	247
 13524  014D30  6F60               	movwf	??_isspace& (0+255),b
 13525  014D32  0EFF               	movlw	255
 13526  014D34  6F61               	movwf	(??_isspace+1)& (0+255),b
 13527  014D36  C020  F062         	movff	isspace@c,??_isspace+2
 13528  014D3A  C021  F063         	movff	isspace@c+1,??_isspace+3
 13529  014D3E  5160               	movf	??_isspace& (0+255),w,b
 13530  014D40  2762               	addwf	(??_isspace+2)& (0+255),f,b
 13531  014D42  5161               	movf	(??_isspace+1)& (0+255),w,b
 13532  014D44  2363               	addwfc	(??_isspace+3)& (0+255),f,b
 13533  014D46  5163               	movf	(??_isspace+3)& (0+255),w,b
 13534  014D48  E104               	bnz	u8910
 13535  014D4A  0E05               	movlw	5
 13536  014D4C  5D62               	subwf	(??_isspace+2)& (0+255),w,b
 13537  014D4E  A0D8               	btfss	status,0,c
 13538  014D50  D002               	goto	l9534
 13539  014D52                     u8910:
 13540                           
 13541                           ; BSR set to: 0
 13542  014D52  0E00               	movlw	0
 13543  014D54  6F64               	movwf	_isspace$4301& (0+255),b
 13544  014D56                     l9534:
 13545                           
 13546                           ; BSR set to: 0
 13547  014D56  C064  F020         	movff	_isspace$4301,?_isspace
 13548  014D5A  6A21               	clrf	(?_isspace+1)^0,c
 13549                           
 13550                           ; BSR set to: 0
 13551  014D5C  0012               	return		;funcret
 13552  014D5E                     __end_of_isspace:
 13553                           	callstack 0
 13554                           
 13555 ;; *************** function _isdigit *****************
 13556 ;; Defined at:
 13557 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;  c               2   31[COMRAM] int 
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;		None
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  2   31[COMRAM] int 
 13564 ;; Registers used:
 13565 ;;		wreg, status,2, status,0
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 3F/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13573 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13574 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13575 ;;Total ram usage:        6 bytes
 13576 ;; Hardware stack levels used: 1
 13577 ;; Hardware stack levels required when called: 7
 13578 ;; This function calls:
 13579 ;;		Nothing
 13580 ;; This function is called by:
 13581 ;;		_vfpfcnvrt
 13582 ;;		_atoi
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           	psect	text34
 13587  0150A8                     __ptext34:
 13588                           	callstack 0
 13589  0150A8                     _isdigit:
 13590                           	callstack 20
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;incstack = 0
 13594  0150A8  0ED0               	movlw	208
 13595  0150AA  0100               	movlb	0	; () banked
 13596  0150AC  6F60               	movwf	??_isdigit& (0+255),b
 13597  0150AE  0EFF               	movlw	255
 13598  0150B0  6F61               	movwf	(??_isdigit+1)& (0+255),b
 13599  0150B2  C020  F062         	movff	isdigit@c,??_isdigit+2
 13600  0150B6  C021  F063         	movff	isdigit@c+1,??_isdigit+3
 13601  0150BA  5160               	movf	??_isdigit& (0+255),w,b
 13602  0150BC  2762               	addwf	(??_isdigit+2)& (0+255),f,b
 13603  0150BE  5161               	movf	(??_isdigit+1)& (0+255),w,b
 13604  0150C0  2363               	addwfc	(??_isdigit+3)& (0+255),f,b
 13605  0150C2  5163               	movf	(??_isdigit+3)& (0+255),w,b
 13606  0150C4  E106               	bnz	u8880
 13607  0150C6  0E0A               	movlw	10
 13608  0150C8  5D62               	subwf	(??_isdigit+2)& (0+255),w,b
 13609  0150CA  B0D8               	btfsc	status,0,c
 13610  0150CC  D002               	goto	u8880
 13611  0150CE  0E01               	movlw	1
 13612  0150D0  D001               	goto	u8890
 13613  0150D2                     u8880:
 13614  0150D2  0E00               	movlw	0
 13615  0150D4                     u8890:
 13616  0150D4  6E20               	movwf	?_isdigit^0,c
 13617  0150D6  6A21               	clrf	(?_isdigit+1)^0,c
 13618                           
 13619                           ; BSR set to: 0
 13620  0150D8  0012               	return		;funcret
 13621  0150DA                     __end_of_isdigit:
 13622                           	callstack 0
 13623                           
 13624 ;; *************** function ___wmul *****************
 13625 ;; Defined at:
 13626 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13629 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13630 ;; Auto vars:     Size  Location     Type
 13631 ;;  product         2   31[COMRAM] unsigned int 
 13632 ;; Return value:  Size  Location     Type
 13633 ;;                  2    0[BANK0 ] unsigned int 
 13634 ;; Registers used:
 13635 ;;		wreg, status,2, status,0, prodl, prodh
 13636 ;; Tracked objects:
 13637 ;;		On entry : 3F/0
 13638 ;;		On exit  : 3F/0
 13639 ;;		Unchanged: 0/0
 13640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13641 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13644 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13645 ;;Total ram usage:        6 bytes
 13646 ;; Hardware stack levels used: 1
 13647 ;; Hardware stack levels required when called: 7
 13648 ;; This function calls:
 13649 ;;		Nothing
 13650 ;; This function is called by:
 13651 ;;		_ps_math
 13652 ;;		_atoi
 13653 ;; This function uses a non-reentrant model
 13654 ;;
 13655                           
 13656                           	psect	text35
 13657  0151C8                     __ptext35:
 13658                           	callstack 0
 13659  0151C8                     ___wmul:
 13660                           	callstack 19
 13661                           
 13662                           ; BSR set to: 0
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;incstack = 0
 13666  0151C8  5160               	movf	___wmul@multiplier& (0+255),w,b
 13667  0151CA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 13668  0151CC  006F FFCC  F020    	movff	prodl,___wmul@product
 13669  0151D2  006F FFD0  F021    	movff	prodh,___wmul@product+1
 13670  0151D8  5160               	movf	___wmul@multiplier& (0+255),w,b
 13671  0151DA  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13672  0151DC  50F3               	movf	243,w,c
 13673  0151DE  2621               	addwf	(___wmul@product+1)^0,f,c
 13674  0151E0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13675  0151E2  0362               	mulwf	___wmul@multiplicand& (0+255),b
 13676  0151E4  50F3               	movf	243,w,c
 13677  0151E6  2621               	addwf	(___wmul@product+1)^0,f,c
 13678                           
 13679                           ; BSR set to: 0
 13680  0151E8  C020  F060         	movff	___wmul@product,?___wmul
 13681  0151EC  C021  F061         	movff	___wmul@product+1,?___wmul+1
 13682                           
 13683                           ; BSR set to: 0
 13684  0151F0  0012               	return		;funcret
 13685  0151F2                     __end_of___wmul:
 13686                           	callstack 0
 13687                           
 13688 ;; *************** function _init_display *****************
 13689 ;; Defined at:
 13690 ;;		line 31 in file "eadog.c"
 13691 ;; Parameters:    Size  Location     Type
 13692 ;;		None
 13693 ;; Auto vars:     Size  Location     Type
 13694 ;;		None
 13695 ;; Return value:  Size  Location     Type
 13696 ;;                  1    wreg      void 
 13697 ;; Registers used:
 13698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13699 ;; Tracked objects:
 13700 ;;		On entry : 0/0
 13701 ;;		On exit  : 3F/3D
 13702 ;;		Unchanged: 0/0
 13703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13708 ;;Total ram usage:        0 bytes
 13709 ;; Hardware stack levels used: 1
 13710 ;; Hardware stack levels required when called: 9
 13711 ;; This function calls:
 13712 ;;		_ringBufS_init
 13713 ;;		_send_lcd_cmd
 13714 ;;		_send_lcd_cmd_long
 13715 ;;		_send_lcd_data
 13716 ;;		_wdtdelay
 13717 ;; This function is called by:
 13718 ;;		_main
 13719 ;; This function uses a non-reentrant model
 13720 ;;
 13721                           
 13722                           	psect	text36
 13723  013E9A                     __ptext36:
 13724                           	callstack 0
 13725  013E9A                     _init_display:
 13726                           	callstack 21
 13727                           
 13728                           ;eadog.c: 33:  spi_link.tx1a = &ring_buf1;
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;incstack = 0
 13732  013E9A  0E80               	movlw	low _ring_buf1
 13733  013E9C  0101               	movlb	1	; () banked
 13734  013E9E  6F06               	movwf	(_spi_link+6)& (0+255),b	;volatile
 13735  013EA0  0E03               	movlw	high _ring_buf1
 13736  013EA2  6F07               	movwf	(_spi_link+7)& (0+255),b	;volatile
 13737                           
 13738                           ; BSR set to: 1
 13739                           ;eadog.c: 34:  ringBufS_init(spi_link.tx1a);
 13740  013EA4  C106  F06A         	movff	_spi_link+6,ringBufS_init@_this	;volatile
 13741  013EA8  C107  F06B         	movff	_spi_link+7,ringBufS_init@_this+1	;volatile
 13742  013EAC  ECD1  F0A9         	call	_ringBufS_init	;wreg free
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;eadog.c: 40:  SPI1CON0bits.EN = 0;
 13746  013EB0  013D               	movlb	61	; () banked
 13747  013EB2  9F14               	bcf	20,7,b	;volatile
 13748                           
 13749                           ; BSR set to: 61
 13750                           ;eadog.c: 42:  SPI1CON1 = 0x20;
 13751  013EB4  0E20               	movlw	32
 13752  013EB6  6F15               	movwf	21,b	;volatile
 13753                           
 13754                           ; BSR set to: 61
 13755                           ;eadog.c: 44:  SPI1CON2 = 0x03;
 13756  013EB8  0E03               	movlw	3
 13757  013EBA  6F16               	movwf	22,b	;volatile
 13758                           
 13759                           ; BSR set to: 61
 13760                           ;eadog.c: 46:  SPI1BAUD = 0x04;
 13761  013EBC  0E04               	movlw	4
 13762  013EBE  6F19               	movwf	25,b	;volatile
 13763                           
 13764                           ; BSR set to: 61
 13765                           ;eadog.c: 48:  SPI1CLK = 0x02;
 13766  013EC0  0E02               	movlw	2
 13767  013EC2  6F1C               	movwf	28,b	;volatile
 13768                           
 13769                           ; BSR set to: 61
 13770                           ;eadog.c: 50:  SPI1CON0 = 0x83;
 13771  013EC4  0E83               	movlw	131
 13772  013EC6  6F14               	movwf	20,b	;volatile
 13773                           
 13774                           ; BSR set to: 61
 13775                           ;eadog.c: 51:  SPI1CON0bits.EN = 1;
 13776  013EC8  8F14               	bsf	20,7,b	;volatile
 13777                           
 13778                           ; BSR set to: 61
 13779                           ;eadog.c: 53:  wdtdelay(350000);
 13780  013ECA  0E30               	movlw	48
 13781  013ECC  0100               	movlb	0	; () banked
 13782  013ECE  6F60               	movwf	wdtdelay@delay& (0+255),b
 13783  013ED0  0E57               	movlw	87
 13784  013ED2  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13785  013ED4  0E05               	movlw	5
 13786  013ED6  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13787  013ED8  0E00               	movlw	0
 13788  013EDA  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13789  013EDC  EC9B  F0A5         	call	_wdtdelay	;wreg free
 13790                           
 13791                           ; BSR set to: 0
 13792                           ;eadog.c: 54:  send_lcd_cmd_long(0x46);
 13793  013EE0  0E46               	movlw	70
 13794  013EE2  ECEF  F0A6         	call	_send_lcd_cmd_long
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;eadog.c: 55:  send_lcd_cmd(0x41);
 13798  013EE6  0E41               	movlw	65
 13799  013EE8  EC0E  F0A7         	call	_send_lcd_cmd
 13800                           
 13801                           ; BSR set to: 0
 13802                           ;eadog.c: 56:  wdtdelay(80);
 13803  013EEC  0E50               	movlw	80
 13804  013EEE  6F60               	movwf	wdtdelay@delay& (0+255),b
 13805  013EF0  0E00               	movlw	0
 13806  013EF2  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13807  013EF4  0E00               	movlw	0
 13808  013EF6  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13809  013EF8  0E00               	movlw	0
 13810  013EFA  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13811  013EFC  EC9B  F0A5         	call	_wdtdelay	;wreg free
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;eadog.c: 57:  send_lcd_cmd(0x53);
 13815  013F00  0E53               	movlw	83
 13816  013F02  EC0E  F0A7         	call	_send_lcd_cmd
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;eadog.c: 58:  send_lcd_data(2);
 13820  013F06  0E02               	movlw	2
 13821  013F08  EC7C  F0A9         	call	_send_lcd_data
 13822                           
 13823                           ; BSR set to: 0
 13824                           ;eadog.c: 59:  wdtdelay(80);
 13825  013F0C  0E50               	movlw	80
 13826  013F0E  6F60               	movwf	wdtdelay@delay& (0+255),b
 13827  013F10  0E00               	movlw	0
 13828  013F12  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13829  013F14  0E00               	movlw	0
 13830  013F16  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13831  013F18  0E00               	movlw	0
 13832  013F1A  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13833  013F1C  EC9B  F0A5         	call	_wdtdelay	;wreg free
 13834                           
 13835                           ; BSR set to: 0
 13836                           ;eadog.c: 60:  send_lcd_cmd_long(0x51);
 13837  013F20  0E51               	movlw	81
 13838  013F22  ECEF  F0A6         	call	_send_lcd_cmd_long
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;eadog.c: 61:  SPI1CON0bits.EN = 0;
 13842  013F26  013D               	movlb	61	; () banked
 13843  013F28  9F14               	bcf	20,7,b	;volatile
 13844                           
 13845                           ; BSR set to: 61
 13846                           ;eadog.c: 62:  SPI1CON2 = 0x02;
 13847  013F2A  0E02               	movlw	2
 13848  013F2C  6F16               	movwf	22,b	;volatile
 13849                           
 13850                           ; BSR set to: 61
 13851                           ;eadog.c: 63:  SPI1CON0bits.EN = 1;
 13852  013F2E  8F14               	bsf	20,7,b	;volatile
 13853                           
 13854                           ; BSR set to: 61
 13855                           ;eadog.c: 65:  SPI1INTFbits.SPI1TXUIF = 0;
 13856  013F30  931A               	bcf	26,1,b	;volatile
 13857                           
 13858                           ; BSR set to: 61
 13859                           ;eadog.c: 66:  DMA1CON1bits.DMODE = 0;
 13860  013F32  0E3F               	movlw	-193
 13861  013F34  013B               	movlb	59	; () banked
 13862  013F36  17FD               	andwf	253,f,b	;volatile
 13863                           
 13864                           ; BSR set to: 59
 13865                           ;eadog.c: 67:  DMA1CON1bits.DSTP = 0;
 13866  013F38  9BFD               	bcf	253,5,b	;volatile
 13867                           
 13868                           ; BSR set to: 59
 13869                           ;eadog.c: 68:  DMA1CON1bits.SMODE = 1;
 13870  013F3A  51FD               	movf	253,w,b	;volatile
 13871  013F3C  0BF9               	andlw	-7
 13872  013F3E  0902               	iorlw	2
 13873  013F40  6FFD               	movwf	253,b	;volatile
 13874                           
 13875                           ; BSR set to: 59
 13876                           ;eadog.c: 69:  DMA1CON1bits.SMR = 0;
 13877  013F42  0EE7               	movlw	-25
 13878  013F44  17FD               	andwf	253,f,b	;volatile
 13879                           
 13880                           ; BSR set to: 59
 13881                           ;eadog.c: 70:  DMA1CON1bits.SSTP = 1;
 13882  013F46  81FD               	bsf	253,0,b	;volatile
 13883                           
 13884                           ; BSR set to: 59
 13885                           ;eadog.c: 71:  DMA1SSA = (uint24_t) & ring_buf1;
 13886  013F48  0E80               	movlw	low _ring_buf1
 13887  013F4A  6FF9               	movwf	249,b	;volatile
 13888  013F4C  0E03               	movlw	high _ring_buf1
 13889  013F4E  6FFA               	movwf	250,b	;volatile
 13890  013F50  0E00               	movlw	low (_ring_buf1 shr (0+16))
 13891  013F52  6FFB               	movwf	251,b	;volatile
 13892                           
 13893                           ; BSR set to: 59
 13894                           ;eadog.c: 72:  DMA1CON0bits.DGO = 0;
 13895  013F54  9BFC               	bcf	252,5,b	;volatile
 13896                           
 13897                           ; BSR set to: 59
 13898                           ;eadog.c: 73:  SPI1INTFbits.SPI1TXUIF = 1;
 13899  013F56  013D               	movlb	61	; () banked
 13900  013F58  831A               	bsf	26,1,b	;volatile
 13901                           
 13902                           ; BSR set to: 61
 13903  013F5A  0012               	return		;funcret
 13904  013F5C                     __end_of_init_display:
 13905                           	callstack 0
 13906                           
 13907 ;; *************** function _send_lcd_data *****************
 13908 ;; Defined at:
 13909 ;;		line 101 in file "eadog.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;  data            1    wreg     const unsigned char 
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;  data            1   32[COMRAM] const unsigned char 
 13914 ;; Return value:  Size  Location     Type
 13915 ;;                  1    wreg      void 
 13916 ;; Registers used:
 13917 ;;		wreg, status,2, status,0, cstack
 13918 ;; Tracked objects:
 13919 ;;		On entry : 3F/0
 13920 ;;		On exit  : 3F/0
 13921 ;;		Unchanged: 0/0
 13922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;Total ram usage:        1 bytes
 13928 ;; Hardware stack levels used: 1
 13929 ;; Hardware stack levels required when called: 8
 13930 ;; This function calls:
 13931 ;;		_SPI1_ExchangeByte
 13932 ;;		_wdtdelay
 13933 ;; This function is called by:
 13934 ;;		_init_display
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text37
 13939  0152F8                     __ptext37:
 13940                           	callstack 0
 13941  0152F8                     _send_lcd_data:
 13942                           	callstack 21
 13943                           
 13944                           ; BSR set to: 61
 13945                           ;incstack = 0
 13946                           ;send_lcd_data@data stored from wreg
 13947  0152F8  6E21               	movwf	send_lcd_data@data^0,c
 13948                           
 13949                           ;eadog.c: 101: static void send_lcd_data(const uint8_t data);eadog.c: 102: {;eadog.c: 10
      +                          3:  do { LATCbits.LATC2 = 0; } while(0);
 13950  0152FA  94BC               	bcf	188,2,c	;volatile
 13951                           
 13952                           ;eadog.c: 104:  SPI1_ExchangeByte(data);
 13953  0152FC  5021               	movf	send_lcd_data@data^0,w,c
 13954  0152FE  EC48  F0AA         	call	_SPI1_ExchangeByte
 13955                           
 13956                           ; BSR set to: 61
 13957                           ;eadog.c: 105:  wdtdelay(8);
 13958  015302  0E08               	movlw	8
 13959  015304  0100               	movlb	0	; () banked
 13960  015306  6F60               	movwf	wdtdelay@delay& (0+255),b
 13961  015308  0E00               	movlw	0
 13962  01530A  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 13963  01530C  0E00               	movlw	0
 13964  01530E  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 13965  015310  0E00               	movlw	0
 13966  015312  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 13967  015314  EC9B  F0A5         	call	_wdtdelay	;wreg free
 13968                           
 13969                           ; BSR set to: 0
 13970  015318  0012               	return		;funcret
 13971  01531A                     __end_of_send_lcd_data:
 13972                           	callstack 0
 13973                           
 13974 ;; *************** function _send_lcd_cmd_long *****************
 13975 ;; Defined at:
 13976 ;;		line 117 in file "eadog.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;  cmd             1    wreg     const unsigned char 
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;  cmd             1   32[COMRAM] const unsigned char 
 13981 ;; Return value:  Size  Location     Type
 13982 ;;                  1    wreg      void 
 13983 ;; Registers used:
 13984 ;;		wreg, status,2, status,0, cstack
 13985 ;; Tracked objects:
 13986 ;;		On entry : 3F/0
 13987 ;;		On exit  : 3F/0
 13988 ;;		Unchanged: 0/0
 13989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13994 ;;Total ram usage:        1 bytes
 13995 ;; Hardware stack levels used: 1
 13996 ;; Hardware stack levels required when called: 8
 13997 ;; This function calls:
 13998 ;;		_SPI1_ExchangeByte
 13999 ;;		_wdtdelay
 14000 ;; This function is called by:
 14001 ;;		_init_display
 14002 ;; This function uses a non-reentrant model
 14003 ;;
 14004                           
 14005                           	psect	text38
 14006  014DDE                     __ptext38:
 14007                           	callstack 0
 14008  014DDE                     _send_lcd_cmd_long:
 14009                           	callstack 21
 14010                           
 14011                           ; BSR set to: 0
 14012                           ;incstack = 0
 14013                           ;send_lcd_cmd_long@cmd stored from wreg
 14014  014DDE  6E21               	movwf	send_lcd_cmd_long@cmd^0,c
 14015                           
 14016                           ;eadog.c: 117: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 118: {;eadog.c:
      +                           119:  do { LATCbits.LATC2 = 0; } while(0);
 14017  014DE0  94BC               	bcf	188,2,c	;volatile
 14018                           
 14019                           ;eadog.c: 120:  SPI1_ExchangeByte(0xFE);
 14020  014DE2  0EFE               	movlw	254
 14021  014DE4  EC48  F0AA         	call	_SPI1_ExchangeByte
 14022                           
 14023                           ; BSR set to: 61
 14024                           ;eadog.c: 121:  wdtdelay(8);
 14025  014DE8  0E08               	movlw	8
 14026  014DEA  0100               	movlb	0	; () banked
 14027  014DEC  6F60               	movwf	wdtdelay@delay& (0+255),b
 14028  014DEE  0E00               	movlw	0
 14029  014DF0  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 14030  014DF2  0E00               	movlw	0
 14031  014DF4  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 14032  014DF6  0E00               	movlw	0
 14033  014DF8  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 14034  014DFA  EC9B  F0A5         	call	_wdtdelay	;wreg free
 14035                           
 14036                           ; BSR set to: 0
 14037                           ;eadog.c: 122:  SPI1_ExchangeByte(cmd);
 14038  014DFE  5021               	movf	send_lcd_cmd_long@cmd^0,w,c
 14039  014E00  EC48  F0AA         	call	_SPI1_ExchangeByte
 14040                           
 14041                           ;eadog.c: 123:  wdtdelay(800);
 14042  014E04  0E20               	movlw	32
 14043  014E06  0100               	movlb	0	; () banked
 14044  014E08  6F60               	movwf	wdtdelay@delay& (0+255),b
 14045  014E0A  0E03               	movlw	3
 14046  014E0C  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 14047  014E0E  0E00               	movlw	0
 14048  014E10  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 14049  014E12  0E00               	movlw	0
 14050  014E14  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 14051  014E16  EC9B  F0A5         	call	_wdtdelay	;wreg free
 14052                           
 14053                           ; BSR set to: 0
 14054  014E1A  0012               	return		;funcret
 14055  014E1C                     __end_of_send_lcd_cmd_long:
 14056                           	callstack 0
 14057                           
 14058 ;; *************** function _send_lcd_cmd *****************
 14059 ;; Defined at:
 14060 ;;		line 108 in file "eadog.c"
 14061 ;; Parameters:    Size  Location     Type
 14062 ;;  cmd             1    wreg     const unsigned char 
 14063 ;; Auto vars:     Size  Location     Type
 14064 ;;  cmd             1   32[COMRAM] const unsigned char 
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  1    wreg      void 
 14067 ;; Registers used:
 14068 ;;		wreg, status,2, status,0, cstack
 14069 ;; Tracked objects:
 14070 ;;		On entry : 3F/0
 14071 ;;		On exit  : 3F/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14078 ;;Total ram usage:        1 bytes
 14079 ;; Hardware stack levels used: 1
 14080 ;; Hardware stack levels required when called: 8
 14081 ;; This function calls:
 14082 ;;		_SPI1_ExchangeByte
 14083 ;;		_wdtdelay
 14084 ;; This function is called by:
 14085 ;;		_init_display
 14086 ;; This function uses a non-reentrant model
 14087 ;;
 14088                           
 14089                           	psect	text39
 14090  014E1C                     __ptext39:
 14091                           	callstack 0
 14092  014E1C                     _send_lcd_cmd:
 14093                           	callstack 21
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;incstack = 0
 14097                           ;send_lcd_cmd@cmd stored from wreg
 14098  014E1C  6E21               	movwf	send_lcd_cmd@cmd^0,c
 14099                           
 14100                           ;eadog.c: 108: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 109: {;eadog.c: 110:
      +                            do { LATCbits.LATC2 = 0; } while(0);
 14101  014E1E  94BC               	bcf	188,2,c	;volatile
 14102                           
 14103                           ;eadog.c: 111:  SPI1_ExchangeByte(0xFE);
 14104  014E20  0EFE               	movlw	254
 14105  014E22  EC48  F0AA         	call	_SPI1_ExchangeByte
 14106                           
 14107                           ; BSR set to: 61
 14108                           ;eadog.c: 112:  wdtdelay(8);
 14109  014E26  0E08               	movlw	8
 14110  014E28  0100               	movlb	0	; () banked
 14111  014E2A  6F60               	movwf	wdtdelay@delay& (0+255),b
 14112  014E2C  0E00               	movlw	0
 14113  014E2E  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 14114  014E30  0E00               	movlw	0
 14115  014E32  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 14116  014E34  0E00               	movlw	0
 14117  014E36  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 14118  014E38  EC9B  F0A5         	call	_wdtdelay	;wreg free
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;eadog.c: 113:  SPI1_ExchangeByte(cmd);
 14122  014E3C  5021               	movf	send_lcd_cmd@cmd^0,w,c
 14123  014E3E  EC48  F0AA         	call	_SPI1_ExchangeByte
 14124                           
 14125                           ;eadog.c: 114:  wdtdelay(8);
 14126  014E42  0E08               	movlw	8
 14127  014E44  0100               	movlb	0	; () banked
 14128  014E46  6F60               	movwf	wdtdelay@delay& (0+255),b
 14129  014E48  0E00               	movlw	0
 14130  014E4A  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 14131  014E4C  0E00               	movlw	0
 14132  014E4E  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 14133  014E50  0E00               	movlw	0
 14134  014E52  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 14135  014E54  EC9B  F0A5         	call	_wdtdelay	;wreg free
 14136                           
 14137                           ; BSR set to: 0
 14138  014E58  0012               	return		;funcret
 14139  014E5A                     __end_of_send_lcd_cmd:
 14140                           	callstack 0
 14141                           
 14142 ;; *************** function _wdtdelay *****************
 14143 ;; Defined at:
 14144 ;;		line 17 in file "eadog.c"
 14145 ;; Parameters:    Size  Location     Type
 14146 ;;  delay           4    0[BANK0 ] const unsigned long 
 14147 ;; Auto vars:     Size  Location     Type
 14148 ;;		None
 14149 ;; Return value:  Size  Location     Type
 14150 ;;                  1    wreg      void 
 14151 ;; Registers used:
 14152 ;;		wreg, status,2, status,0
 14153 ;; Tracked objects:
 14154 ;;		On entry : 3F/0
 14155 ;;		On exit  : 3F/0
 14156 ;;		Unchanged: 0/0
 14157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14158 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14161 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14162 ;;Total ram usage:        4 bytes
 14163 ;; Hardware stack levels used: 1
 14164 ;; Hardware stack levels required when called: 7
 14165 ;; This function calls:
 14166 ;;		Nothing
 14167 ;; This function is called by:
 14168 ;;		_init_display
 14169 ;;		_send_lcd_data
 14170 ;;		_send_lcd_cmd
 14171 ;;		_send_lcd_cmd_long
 14172 ;; This function uses a non-reentrant model
 14173 ;;
 14174                           
 14175                           	psect	text40
 14176  014B36                     __ptext40:
 14177                           	callstack 0
 14178  014B36                     _wdtdelay:
 14179                           	callstack 22
 14180                           
 14181                           ; BSR set to: 0
 14182                           ;eadog.c: 17: void wdtdelay(const uint32_t delay);eadog.c: 18: {;eadog.c: 19:  static ui
      +                          nt32_t dcount;;eadog.c: 21:  for (dcount = 0; dcount <= delay; dcount++) {
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;incstack = 0
 14186  014B36  0E00               	movlw	0
 14187  014B38  0101               	movlb	1	; () banked
 14188  014B3A  6F20               	movwf	wdtdelay@dcount& (0+255),b
 14189  014B3C  0E00               	movlw	0
 14190  014B3E  6F21               	movwf	(wdtdelay@dcount+1)& (0+255),b
 14191  014B40  0E00               	movlw	0
 14192  014B42  6F22               	movwf	(wdtdelay@dcount+2)& (0+255),b
 14193  014B44  0E00               	movlw	0
 14194  014B46  6F23               	movwf	(wdtdelay@dcount+3)& (0+255),b
 14195  014B48                     l1680:
 14196                           
 14197                           ;eadog.c: 22:   __nop();
 14198  014B48  F000               	nop	
 14199  014B4A  0004               	clrwdt		;# 
 14200                           
 14201                           ;eadog.c: 24:  };
 14202  014B4C  0E01               	movlw	1
 14203  014B4E  0101               	movlb	1	; () banked
 14204  014B50  2720               	addwf	wdtdelay@dcount& (0+255),f,b
 14205  014B52  0E00               	movlw	0
 14206  014B54  2321               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 14207  014B56  2322               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 14208  014B58  2323               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 14209  014B5A  5120               	movf	wdtdelay@dcount& (0+255),w,b
 14210  014B5C  0100               	movlb	0	; () banked
 14211  014B5E  5D60               	subwf	wdtdelay@delay& (0+255),w,b
 14212  014B60  0101               	movlb	1	; () banked
 14213  014B62  5121               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 14214  014B64  0100               	movlb	0	; () banked
 14215  014B66  5961               	subwfb	(wdtdelay@delay+1)& (0+255),w,b
 14216  014B68  0101               	movlb	1	; () banked
 14217  014B6A  5122               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 14218  014B6C  0100               	movlb	0	; () banked
 14219  014B6E  5962               	subwfb	(wdtdelay@delay+2)& (0+255),w,b
 14220  014B70  0101               	movlb	1	; () banked
 14221  014B72  5123               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 14222  014B74  0100               	movlb	0	; () banked
 14223  014B76  5963               	subwfb	(wdtdelay@delay+3)& (0+255),w,b
 14224  014B78  A0D8               	btfss	status,0,c
 14225  014B7A  0012               	return	
 14226  014B7C  D7E5               	goto	l1680
 14227  014B7E                     __end_of_wdtdelay:
 14228                           	callstack 0
 14229                           
 14230 ;; *************** function _SPI1_ExchangeByte *****************
 14231 ;; Defined at:
 14232 ;;		line 100 in file "mcc_generated_files/spi1.c"
 14233 ;; Parameters:    Size  Location     Type
 14234 ;;  data            1    wreg     unsigned char 
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;  data            1   31[COMRAM] unsigned char 
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  1    wreg      unsigned char 
 14239 ;; Registers used:
 14240 ;;		wreg, status,2
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 3F/3D
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14249 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14250 ;;Total ram usage:        1 bytes
 14251 ;; Hardware stack levels used: 1
 14252 ;; Hardware stack levels required when called: 7
 14253 ;; This function calls:
 14254 ;;		Nothing
 14255 ;; This function is called by:
 14256 ;;		_send_lcd_data
 14257 ;;		_send_lcd_cmd
 14258 ;;		_send_lcd_cmd_long
 14259 ;; This function uses a non-reentrant model
 14260 ;;
 14261                           
 14262                           	psect	text41
 14263  015490                     __ptext41:
 14264                           	callstack 0
 14265  015490                     _SPI1_ExchangeByte:
 14266                           	callstack 21
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;incstack = 0
 14270                           ;SPI1_ExchangeByte@data stored from wreg
 14271  015490  6E20               	movwf	SPI1_ExchangeByte@data^0,c
 14272                           
 14273                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 14274  015492  0E01               	movlw	1
 14275  015494  013D               	movlb	61	; () banked
 14276  015496  6F12               	movwf	18,b	;volatile
 14277                           
 14278                           ; BSR set to: 61
 14279                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 14280  015498  0060  F083  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 14281  01549E                     l636:
 14282  01549E  0139               	movlb	57	; () banked
 14283  0154A0  A9A2               	btfss	162,4,b	;volatile
 14284  0154A2  D7FD               	goto	l636
 14285                           
 14286                           ; BSR set to: 57
 14287                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 14288  0154A4  013D               	movlb	61	; () banked
 14289  0154A6  5110               	movf	16,w,b	;volatile
 14290                           
 14291                           ; BSR set to: 61
 14292  0154A8  0012               	return		;funcret
 14293  0154AA                     __end_of_SPI1_ExchangeByte:
 14294                           	callstack 0
 14295                           
 14296 ;; *************** function _ringBufS_init *****************
 14297 ;; Defined at:
 14298 ;;		line 22 in file "ringbufs.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;  _this           2   10[BANK0 ] PTR volatile struct ring
 14301 ;;		 -> ring_buf1(67), 
 14302 ;; Auto vars:     Size  Location     Type
 14303 ;;		None
 14304 ;; Return value:  Size  Location     Type
 14305 ;;                  1    wreg      void 
 14306 ;; Registers used:
 14307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14308 ;; Tracked objects:
 14309 ;;		On entry : 3F/1
 14310 ;;		On exit  : 3F/0
 14311 ;;		Unchanged: 0/0
 14312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14313 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14316 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14317 ;;Total ram usage:        2 bytes
 14318 ;; Hardware stack levels used: 1
 14319 ;; Hardware stack levels required when called: 8
 14320 ;; This function calls:
 14321 ;;		_memset
 14322 ;; This function is called by:
 14323 ;;		_init_display
 14324 ;; This function uses a non-reentrant model
 14325 ;;
 14326                           
 14327                           	psect	text42
 14328  0153A2                     __ptext42:
 14329                           	callstack 0
 14330  0153A2                     _ringBufS_init:
 14331                           	callstack 21
 14332                           
 14333                           ; BSR set to: 1
 14334                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*) _this, 0, sizeof(*_this));
 14335                           
 14336                           ; BSR set to: 61
 14337                           ;incstack = 0
 14338  0153A2  C06A  F060         	movff	ringBufS_init@_this,memset@dest
 14339  0153A6  C06B  F061         	movff	ringBufS_init@_this+1,memset@dest+1
 14340  0153AA  0E00               	movlw	0
 14341  0153AC  0100               	movlb	0	; () banked
 14342  0153AE  6F63               	movwf	(memset@c+1)& (0+255),b
 14343  0153B0  0E00               	movlw	0
 14344  0153B2  6F62               	movwf	memset@c& (0+255),b
 14345  0153B4  0E00               	movlw	0
 14346  0153B6  6F65               	movwf	(memset@n+1)& (0+255),b
 14347  0153B8  0E43               	movlw	67
 14348  0153BA  6F64               	movwf	memset@n& (0+255),b
 14349  0153BC  EC5D  F09A         	call	_memset	;wreg free
 14350                           
 14351                           ; BSR set to: 0
 14352  0153C0  0012               	return		;funcret
 14353  0153C2                     __end_of_ringBufS_init:
 14354                           	callstack 0
 14355                           
 14356 ;; *************** function _eaDogM_WriteStringAtPos *****************
 14357 ;; Defined at:
 14358 ;;		line 191 in file "eadog.c"
 14359 ;; Parameters:    Size  Location     Type
 14360 ;;  r               1    wreg     const unsigned char 
 14361 ;;  c               1   19[BANK0 ] const unsigned char 
 14362 ;;  strPtr          2   20[BANK0 ] PTR unsigned char 
 14363 ;;		 -> buff1(255), 
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;  r               1   24[BANK0 ] const unsigned char 
 14366 ;;  row             1   25[BANK0 ] unsigned char 
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  1    wreg      void 
 14369 ;; Registers used:
 14370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14371 ;; Tracked objects:
 14372 ;;		On entry : 3F/0
 14373 ;;		On exit  : 3F/3B
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14376 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14377 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14379 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14380 ;;Total ram usage:        7 bytes
 14381 ;; Hardware stack levels used: 1
 14382 ;; Hardware stack levels required when called: 11
 14383 ;; This function calls:
 14384 ;;		_eaDogM_WriteString
 14385 ;;		_send_lcd_cmd_dma
 14386 ;;		_send_lcd_data_dma
 14387 ;;		_wait_lcd_done
 14388 ;; This function is called by:
 14389 ;;		_main
 14390 ;; This function uses a non-reentrant model
 14391 ;;
 14392                           
 14393                           	psect	text43
 14394  014638                     __ptext43:
 14395                           	callstack 0
 14396  014638                     _eaDogM_WriteStringAtPos:
 14397                           	callstack 19
 14398                           
 14399                           ; BSR set to: 0
 14400                           ;incstack = 0
 14401                           ;eaDogM_WriteStringAtPos@r stored from wreg
 14402  014638  6F78               	movwf	eaDogM_WriteStringAtPos@r& (0+255),b
 14403                           
 14404                           ;eadog.c: 191: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 192: {;eadog.c: 193:  uint8_t row;;eadog.c: 195:  switch (r) {
 14405  01463A  D009               	goto	l10810
 14406  01463C                     l10798:
 14407                           
 14408                           ; BSR set to: 0
 14409                           ;eadog.c: 197:   row = 0x40;
 14410  01463C  0E40               	movlw	64
 14411  01463E  D005               	goto	L17
 14412  014640                     l10800:
 14413                           
 14414                           ; BSR set to: 0
 14415                           ;eadog.c: 200:   row = 0x14;
 14416  014640  0E14               	movlw	20
 14417  014642  D003               	goto	L17
 14418  014644                     l10802:
 14419                           
 14420                           ; BSR set to: 0
 14421                           ;eadog.c: 203:   row = 0x54;
 14422  014644  0E54               	movlw	84
 14423  014646  D001               	goto	L17
 14424  014648                     l10804:
 14425                           
 14426                           ; BSR set to: 0
 14427                           ;eadog.c: 206:   row = 0x00;
 14428  014648  0E00               	movlw	0
 14429  01464A                     L17:
 14430  01464A  6F79               	movwf	eaDogM_WriteStringAtPos@row& (0+255),b
 14431                           
 14432                           ;eadog.c: 207:   break;
 14433  01464C  D016               	goto	l10812
 14434  01464E                     l10810:
 14435  01464E  0100               	movlb	0	; () banked
 14436  014650  5178               	movf	eaDogM_WriteStringAtPos@r& (0+255),w,b
 14437  014652  6F76               	movwf	??_eaDogM_WriteStringAtPos& (0+255),b
 14438  014654  6B77               	clrf	(??_eaDogM_WriteStringAtPos+1)& (0+255),b
 14439                           
 14440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14441                           ; Switch size 1, requested type "simple"
 14442                           ; Number of cases is 1, Range of values is 0 to 0
 14443                           ; switch strategies available:
 14444                           ; Name         Instructions Cycles
 14445                           ; simple_byte            4     3 (average)
 14446                           ;	Chosen strategy is simple_byte
 14447  014656  5177               	movf	(??_eaDogM_WriteStringAtPos+1)& (0+255),w,b
 14448  014658  0A00               	xorlw	0	; case 0
 14449  01465A  A4D8               	btfss	status,2,c
 14450  01465C  D7F5               	goto	l10804
 14451                           
 14452                           ; BSR set to: 0
 14453                           ; Switch size 1, requested type "simple"
 14454                           ; Number of cases is 4, Range of values is 0 to 3
 14455                           ; switch strategies available:
 14456                           ; Name         Instructions Cycles
 14457                           ; simple_byte           13     7 (average)
 14458                           ;	Chosen strategy is simple_byte
 14459  01465E  5176               	movf	??_eaDogM_WriteStringAtPos& (0+255),w,b
 14460  014660  0A00               	xorlw	0	; case 0
 14461  014662  B4D8               	btfsc	status,2,c
 14462  014664  D7F1               	goto	l10804
 14463  014666  0A01               	xorlw	1	; case 1
 14464  014668  B4D8               	btfsc	status,2,c
 14465  01466A  D7E8               	goto	l10798
 14466  01466C  0A03               	xorlw	3	; case 2
 14467  01466E  B4D8               	btfsc	status,2,c
 14468  014670  D7E7               	goto	l10800
 14469  014672  0A01               	xorlw	1	; case 3
 14470  014674  B4D8               	btfsc	status,2,c
 14471  014676  D7E6               	goto	l10802
 14472  014678  D7E7               	goto	l10804
 14473  01467A                     l10812:
 14474                           
 14475                           ; BSR set to: 0
 14476                           ;eadog.c: 212:  send_lcd_cmd_dma(0x45);
 14477  01467A  0E45               	movlw	69
 14478  01467C  ECE1  F0A9         	call	_send_lcd_cmd_dma
 14479                           
 14480                           ;eadog.c: 213:  send_lcd_data_dma(row + c);
 14481  014680  0100               	movlb	0	; () banked
 14482  014682  5179               	movf	eaDogM_WriteStringAtPos@row& (0+255),w,b
 14483  014684  2573               	addwf	eaDogM_WriteStringAtPos@c& (0+255),w,b
 14484  014686  ECAF  F0A6         	call	_send_lcd_data_dma
 14485                           
 14486                           ; BSR set to: 59
 14487                           ;eadog.c: 214:  wait_lcd_done();
 14488  01468A  ECCE  F0AA         	call	_wait_lcd_done	;wreg free
 14489                           
 14490                           ; BSR set to: 61
 14491                           ;eadog.c: 215:  eaDogM_WriteString(strPtr);
 14492  01468E  C074  F070         	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
 14493  014692  C075  F071         	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
 14494  014696  ECB0  F0A2         	call	_eaDogM_WriteString	;wreg free
 14495                           
 14496                           ; BSR set to: 59
 14497  01469A  0012               	return		;funcret
 14498  01469C                     __end_of_eaDogM_WriteStringAtPos:
 14499                           	callstack 0
 14500                           
 14501 ;; *************** function _eaDogM_WriteString *****************
 14502 ;; Defined at:
 14503 ;;		line 129 in file "eadog.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  strPtr          2   16[BANK0 ] PTR unsigned char 
 14506 ;;		 -> buff1(255), 
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;  len             1   18[BANK0 ] unsigned char 
 14509 ;; Return value:  Size  Location     Type
 14510 ;;                  1    wreg      void 
 14511 ;; Registers used:
 14512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14513 ;; Tracked objects:
 14514 ;;		On entry : 3F/3D
 14515 ;;		On exit  : 3F/3B
 14516 ;;		Unchanged: 0/0
 14517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14518 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14519 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14521 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14522 ;;Total ram usage:        3 bytes
 14523 ;; Hardware stack levels used: 1
 14524 ;; Hardware stack levels required when called: 9
 14525 ;; This function calls:
 14526 ;;		_ringBufS_flush
 14527 ;;		_ringBufS_put_dma_cpy
 14528 ;;		_start_lcd
 14529 ;;		_strlen
 14530 ;;		_wait_lcd_set
 14531 ;; This function is called by:
 14532 ;;		_eaDogM_WriteStringAtPos
 14533 ;; This function uses a non-reentrant model
 14534 ;;
 14535                           
 14536                           	psect	text44
 14537  014560                     __ptext44:
 14538                           	callstack 0
 14539  014560                     _eaDogM_WriteString:
 14540                           	callstack 20
 14541                           
 14542                           ; BSR set to: 61
 14543                           ;eadog.c: 129: void eaDogM_WriteString(char *strPtr);eadog.c: 130: {;eadog.c: 131:  uint
      +                          8_t len = (uint8_t) strlen(strPtr);
 14544                           
 14545                           ; BSR set to: 59
 14546                           ;incstack = 0
 14547  014560  C070  F020         	movff	eaDogM_WriteString@strPtr,strlen@s
 14548  014564  C071  F021         	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
 14549  014568  EC02  F0A5         	call	_strlen	;wreg free
 14550  01456C  5020               	movf	?_strlen^0,w,c
 14551  01456E  6F72               	movwf	eaDogM_WriteString@len& (0+255),b
 14552                           
 14553                           ; BSR set to: 0
 14554                           ;eadog.c: 136:  wait_lcd_set();
 14555  014570  EC52  F0AB         	call	_wait_lcd_set	;wreg free
 14556                           
 14557                           ; BSR set to: 1
 14558                           ;eadog.c: 138:  ringBufS_flush(spi_link.tx1a, 0);
 14559  014574  C106  F06A         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 14560  014578  C107  F06B         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 14561  01457C  0E00               	movlw	0
 14562  01457E  0100               	movlb	0	; () banked
 14563  014580  6F6C               	movwf	ringBufS_flush@clearBuffer& (0+255),b
 14564  014582  EC60  F0A4         	call	_ringBufS_flush	;wreg free
 14565                           
 14566                           ; BSR set to: 0
 14567  014586  94BC               	bcf	188,2,c	;volatile
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;eadog.c: 140:  if (len > 64) {
 14571  014588  0E40               	movlw	64
 14572  01458A  6572               	cpfsgt	eaDogM_WriteString@len& (0+255),b
 14573  01458C  D00A               	goto	l10586
 14574                           
 14575                           ; BSR set to: 0
 14576                           ;eadog.c: 141:   strPtr[64] = 0;
 14577  01458E  EE20 F040          	lfsr	2,64
 14578  014592  5170               	movf	eaDogM_WriteString@strPtr& (0+255),w,b
 14579  014594  26D9               	addwf	fsr2l,f,c
 14580  014596  5171               	movf	(eaDogM_WriteString@strPtr+1)& (0+255),w,b
 14581  014598  22DA               	addwfc	fsr2h,f,c
 14582  01459A  0E00               	movlw	0
 14583  01459C  6EDF               	movwf	indf2,c
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;eadog.c: 142:   len = 64;
 14587  01459E  0E40               	movlw	64
 14588  0145A0  6F72               	movwf	eaDogM_WriteString@len& (0+255),b
 14589  0145A2                     l10586:
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;eadog.c: 144:  DMA1CON0bits.EN = 0;
 14593  0145A2  013B               	movlb	59	; () banked
 14594  0145A4  9FFC               	bcf	252,7,b	;volatile
 14595                           
 14596                           ; BSR set to: 59
 14597                           ;eadog.c: 145:  DMA1SSZ = len;
 14598  0145A6  0060  F1CB  FBF7   	movff	eaDogM_WriteString@len,15351	;volatile
 14599  0145AC  6BF8               	clrf	248,b	;volatile
 14600                           
 14601                           ; BSR set to: 59
 14602                           ;eadog.c: 146:  DMA1CON0bits.EN = 1;
 14603  0145AE  8FFC               	bsf	252,7,b	;volatile
 14604                           
 14605                           ; BSR set to: 59
 14606                           ;eadog.c: 147:  ringBufS_put_dma_cpy(spi_link.tx1a, strPtr, len);
 14607  0145B0  C106  F06B         	movff	_spi_link+6,ringBufS_put_dma_cpy@_this	;volatile
 14608  0145B4  C107  F06C         	movff	_spi_link+7,ringBufS_put_dma_cpy@_this+1	;volatile
 14609  0145B8  C070  F06D         	movff	eaDogM_WriteString@strPtr,ringBufS_put_dma_cpy@ptr
 14610  0145BC  C071  F06E         	movff	eaDogM_WriteString@strPtr+1,ringBufS_put_dma_cpy@ptr+1
 14611  0145C0  C072  F06F         	movff	eaDogM_WriteString@len,ringBufS_put_dma_cpy@len
 14612  0145C4  EC0C  F0A4         	call	_ringBufS_put_dma_cpy	;wreg free
 14613                           
 14614                           ; BSR set to: 0
 14615                           ;eadog.c: 148:  start_lcd();
 14616  0145C8  EC55  F0AB         	call	_start_lcd	;wreg free
 14617                           
 14618                           ; BSR set to: 59
 14619  0145CC  0012               	return		;funcret
 14620  0145CE                     __end_of_eaDogM_WriteString:
 14621                           	callstack 0
 14622                           
 14623 ;; *************** function _ringBufS_put_dma_cpy *****************
 14624 ;; Defined at:
 14625 ;;		line 76 in file "ringbufs.c"
 14626 ;; Parameters:    Size  Location     Type
 14627 ;;  _this           2   11[BANK0 ] PTR struct ringBufS_t
 14628 ;;		 -> ring_buf1(67), 
 14629 ;;  ptr             2   13[BANK0 ] PTR const unsigned char 
 14630 ;;		 -> buff1(255), 
 14631 ;;  len             1   15[BANK0 ] const unsigned char 
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;		None
 14634 ;; Return value:  Size  Location     Type
 14635 ;;                  1    wreg      void 
 14636 ;; Registers used:
 14637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14638 ;; Tracked objects:
 14639 ;;		On entry : 3F/3B
 14640 ;;		On exit  : 3F/0
 14641 ;;		Unchanged: 0/0
 14642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14643 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14646 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14647 ;;Total ram usage:        6 bytes
 14648 ;; Hardware stack levels used: 1
 14649 ;; Hardware stack levels required when called: 8
 14650 ;; This function calls:
 14651 ;;		_memcpy
 14652 ;; This function is called by:
 14653 ;;		_eaDogM_WriteString
 14654 ;; This function uses a non-reentrant model
 14655 ;;
 14656                           
 14657                           	psect	text45
 14658  014818                     __ptext45:
 14659                           	callstack 0
 14660  014818                     _ringBufS_put_dma_cpy:
 14661                           	callstack 20
 14662                           
 14663                           ; BSR set to: 59
 14664                           ;ringbufs.c: 76: void ringBufS_put_dma_cpy(ringBufS_t *_this, const char *ptr, const uin
      +                          t8_t len);ringbufs.c: 77: {;ringbufs.c: 78:  if (_this->count < 64) {
 14665                           
 14666                           ; BSR set to: 59
 14667                           ;incstack = 0
 14668  014818  0100               	movlb	0	; () banked
 14669  01481A  EE20 F042          	lfsr	2,66
 14670  01481E  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 14671  014820  26D9               	addwf	fsr2l,f,c
 14672  014822  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 14673  014824  22DA               	addwfc	fsr2h,f,c
 14674  014826  0E40               	movlw	64
 14675  014828  60DF               	cpfslt	indf2,c
 14676  01482A  0012               	return	
 14677                           
 14678                           ; BSR set to: 0
 14679                           ;ringbufs.c: 79:   memcpy(_this->buf, ptr, len);
 14680  01482C  C06B  F060         	movff	ringBufS_put_dma_cpy@_this,memcpy@d1
 14681  014830  C06C  F061         	movff	ringBufS_put_dma_cpy@_this+1,memcpy@d1+1
 14682  014834  C06D  F062         	movff	ringBufS_put_dma_cpy@ptr,memcpy@s1
 14683  014838  C06E  F063         	movff	ringBufS_put_dma_cpy@ptr+1,memcpy@s1+1
 14684  01483C  C06F  F064         	movff	ringBufS_put_dma_cpy@len,memcpy@n
 14685  014840  6B65               	clrf	(memcpy@n+1)& (0+255),b
 14686  014842  ECDB  F0A4         	call	_memcpy	;wreg free
 14687                           
 14688                           ; BSR set to: 0
 14689                           ;ringbufs.c: 80:   _this->head = len;
 14690  014846  EE20 F040          	lfsr	2,64
 14691  01484A  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 14692  01484C  26D9               	addwf	fsr2l,f,c
 14693  01484E  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 14694  014850  22DA               	addwfc	fsr2h,f,c
 14695  014852  0060  F1BF  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 14696                           
 14697                           ; BSR set to: 0
 14698                           ;ringbufs.c: 81:   _this->count = len;
 14699  014858  EE20 F042          	lfsr	2,66
 14700  01485C  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 14701  01485E  26D9               	addwf	fsr2l,f,c
 14702  014860  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 14703  014862  22DA               	addwfc	fsr2h,f,c
 14704  014864  0060  F1BF  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 14705                           
 14706                           ; BSR set to: 0
 14707  01486A  0012               	return		;funcret
 14708  01486C                     __end_of_ringBufS_put_dma_cpy:
 14709                           	callstack 0
 14710                           
 14711 ;; *************** function _memcpy *****************
 14712 ;; Defined at:
 14713 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  d1              2    0[BANK0 ] PTR void 
 14716 ;;		 -> ring_buf1(67), 
 14717 ;;  s1              2    2[BANK0 ] PTR const void 
 14718 ;;		 -> buff1(255), 
 14719 ;;  n               2    4[BANK0 ] unsigned int 
 14720 ;; Auto vars:     Size  Location     Type
 14721 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 14722 ;;		 -> buff1(255), 
 14723 ;;  d               2    7[BANK0 ] PTR unsigned char 
 14724 ;;		 -> ring_buf1(67), 
 14725 ;;  tmp             1    6[BANK0 ] unsigned char 
 14726 ;; Return value:  Size  Location     Type
 14727 ;;                  2    0[BANK0 ] PTR void 
 14728 ;; Registers used:
 14729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14730 ;; Tracked objects:
 14731 ;;		On entry : 3F/0
 14732 ;;		On exit  : 3F/0
 14733 ;;		Unchanged: 0/0
 14734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14735 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14736 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14738 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14739 ;;Total ram usage:       11 bytes
 14740 ;; Hardware stack levels used: 1
 14741 ;; Hardware stack levels required when called: 7
 14742 ;; This function calls:
 14743 ;;		Nothing
 14744 ;; This function is called by:
 14745 ;;		_ringBufS_put_dma_cpy
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749                           	psect	text46
 14750  0149B6                     __ptext46:
 14751                           	callstack 0
 14752  0149B6                     _memcpy:
 14753                           	callstack 20
 14754                           
 14755                           ; BSR set to: 0
 14756                           
 14757                           ; BSR set to: 0
 14758                           ;incstack = 0
 14759  0149B6  C062  F069         	movff	memcpy@s1,memcpy@s
 14760  0149BA  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 14761  0149BE  C060  F067         	movff	memcpy@d1,memcpy@d
 14762  0149C2  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 14763  0149C6  D015               	goto	l9612
 14764  0149C8                     l9604:
 14765                           
 14766                           ; BSR set to: 0
 14767  0149C8  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
 14768  0149CE  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
 14769  0149D4  50DF               	movf	indf2,w,c
 14770  0149D6  6F66               	movwf	memcpy@tmp& (0+255),b
 14771                           
 14772                           ; BSR set to: 0
 14773  0149D8  4B69               	infsnz	memcpy@s& (0+255),f,b
 14774  0149DA  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 14775                           
 14776                           ; BSR set to: 0
 14777  0149DC  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
 14778  0149E2  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
 14779  0149E8  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
 14780                           
 14781                           ; BSR set to: 0
 14782  0149EE  4B67               	infsnz	memcpy@d& (0+255),f,b
 14783  0149F0  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 14784  0149F2                     l9612:
 14785                           
 14786                           ; BSR set to: 0
 14787  0149F2  0764               	decf	memcpy@n& (0+255),f,b
 14788  0149F4  A0D8               	btfss	status,0,c
 14789  0149F6  0765               	decf	(memcpy@n+1)& (0+255),f,b
 14790  0149F8  2964               	incf	memcpy@n& (0+255),w,b
 14791  0149FA  E1E6               	bnz	l9604
 14792  0149FC  2965               	incf	(memcpy@n+1)& (0+255),w,b
 14793  0149FE  B4D8               	btfsc	status,2,c
 14794  014A00  0012               	return	
 14795  014A02  D7E2               	goto	l9604
 14796  014A04                     __end_of_memcpy:
 14797                           	callstack 0
 14798                           
 14799 ;; *************** function _eaDogM_WriteCommand *****************
 14800 ;; Defined at:
 14801 ;;		line 239 in file "eadog.c"
 14802 ;; Parameters:    Size  Location     Type
 14803 ;;  cmd             1    wreg     const unsigned char 
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;  cmd             1   15[BANK0 ] const unsigned char 
 14806 ;; Return value:  Size  Location     Type
 14807 ;;                  1    wreg      void 
 14808 ;; Registers used:
 14809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14810 ;; Tracked objects:
 14811 ;;		On entry : 3F/3D
 14812 ;;		On exit  : 3F/3D
 14813 ;;		Unchanged: 0/0
 14814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14818 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14819 ;;Total ram usage:        1 bytes
 14820 ;; Hardware stack levels used: 1
 14821 ;; Hardware stack levels required when called: 11
 14822 ;; This function calls:
 14823 ;;		_send_lcd_cmd_dma
 14824 ;; This function is called by:
 14825 ;;		_main
 14826 ;; This function uses a non-reentrant model
 14827 ;;
 14828                           
 14829                           	psect	text47
 14830  01558E                     __ptext47:
 14831                           	callstack 0
 14832  01558E                     _eaDogM_WriteCommand:
 14833                           	callstack 19
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;incstack = 0
 14837                           ;eaDogM_WriteCommand@cmd stored from wreg
 14838  01558E  0100               	movlb	0	; () banked
 14839  015590  6F6F               	movwf	eaDogM_WriteCommand@cmd& (0+255),b
 14840                           
 14841                           ;eadog.c: 239: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 240: {;eadog.c: 241:
      +                            send_lcd_cmd_dma(cmd);
 14842  015592  0100               	movlb	0	; () banked
 14843  015594  516F               	movf	eaDogM_WriteCommand@cmd& (0+255),w,b
 14844  015596  ECE1  F0A9         	call	_send_lcd_cmd_dma
 14845                           
 14846                           ; BSR set to: 61
 14847  01559A  0012               	return		;funcret
 14848  01559C                     __end_of_eaDogM_WriteCommand:
 14849                           	callstack 0
 14850                           
 14851 ;; *************** function _send_lcd_cmd_dma *****************
 14852 ;; Defined at:
 14853 ;;		line 160 in file "eadog.c"
 14854 ;; Parameters:    Size  Location     Type
 14855 ;;  strPtr          1    wreg     const unsigned char 
 14856 ;; Auto vars:     Size  Location     Type
 14857 ;;  strPtr          1   14[BANK0 ] const unsigned char 
 14858 ;; Return value:  Size  Location     Type
 14859 ;;                  1    wreg      void 
 14860 ;; Registers used:
 14861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14862 ;; Tracked objects:
 14863 ;;		On entry : 3F/0
 14864 ;;		On exit  : 3F/3D
 14865 ;;		Unchanged: 0/0
 14866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14870 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14871 ;;Total ram usage:        1 bytes
 14872 ;; Hardware stack levels used: 1
 14873 ;; Hardware stack levels required when called: 10
 14874 ;; This function calls:
 14875 ;;		_send_lcd_data_dma
 14876 ;;		_wait_lcd_done
 14877 ;; This function is called by:
 14878 ;;		_eaDogM_WriteStringAtPos
 14879 ;;		_eaDogM_WriteCommand
 14880 ;; This function uses a non-reentrant model
 14881 ;;
 14882                           
 14883                           	psect	text48
 14884  0153C2                     __ptext48:
 14885                           	callstack 0
 14886  0153C2                     _send_lcd_cmd_dma:
 14887                           	callstack 19
 14888                           
 14889                           ; BSR set to: 61
 14890                           ;incstack = 0
 14891                           ;send_lcd_cmd_dma@strPtr stored from wreg
 14892  0153C2  6F6E               	movwf	send_lcd_cmd_dma@strPtr& (0+255),b
 14893                           
 14894                           ;eadog.c: 160: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 161: {;eadog.c: 162:
      +                            wait_lcd_done();
 14895  0153C4  ECCE  F0AA         	call	_wait_lcd_done	;wreg free
 14896                           
 14897                           ; BSR set to: 61
 14898                           ;eadog.c: 163:  send_lcd_data_dma(0xFE);
 14899  0153C8  0EFE               	movlw	254
 14900  0153CA  ECAF  F0A6         	call	_send_lcd_data_dma
 14901                           
 14902                           ; BSR set to: 59
 14903                           ;eadog.c: 164:  wait_lcd_done();
 14904  0153CE  ECCE  F0AA         	call	_wait_lcd_done	;wreg free
 14905                           
 14906                           ;eadog.c: 165:  send_lcd_data_dma(strPtr);
 14907  0153D2  0100               	movlb	0	; () banked
 14908  0153D4  516E               	movf	send_lcd_cmd_dma@strPtr& (0+255),w,b
 14909  0153D6  ECAF  F0A6         	call	_send_lcd_data_dma
 14910                           
 14911                           ; BSR set to: 59
 14912                           ;eadog.c: 166:  wait_lcd_done();
 14913  0153DA  ECCE  F0AA         	call	_wait_lcd_done	;wreg free
 14914                           
 14915                           ; BSR set to: 61
 14916  0153DE  0012               	return		;funcret
 14917  0153E0                     __end_of_send_lcd_cmd_dma:
 14918                           	callstack 0
 14919                           
 14920 ;; *************** function _wait_lcd_done *****************
 14921 ;; Defined at:
 14922 ;;		line 298 in file "eadog.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;		None
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;		None
 14927 ;; Return value:  Size  Location     Type
 14928 ;;                  1    wreg      void 
 14929 ;; Registers used:
 14930 ;;		None
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/3B
 14933 ;;		On exit  : 3F/3D
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14940 ;;Total ram usage:        0 bytes
 14941 ;; Hardware stack levels used: 1
 14942 ;; Hardware stack levels required when called: 7
 14943 ;; This function calls:
 14944 ;;		Nothing
 14945 ;; This function is called by:
 14946 ;;		_send_lcd_cmd_dma
 14947 ;;		_eaDogM_WriteStringAtPos
 14948 ;; This function uses a non-reentrant model
 14949 ;;
 14950                           
 14951                           	psect	text49
 14952  01559C                     __ptext49:
 14953                           	callstack 0
 14954  01559C                     _wait_lcd_done:
 14955                           	callstack 22
 14956                           
 14957                           ;eadog.c: 300:  while (spi_link.LCD_DATA);
 14958                           
 14959                           ; BSR set to: 61
 14960                           ;incstack = 0
 14961  01559C  0101               	movlb	1	; () banked
 14962  01559E  B700               	btfsc	_spi_link& (0+255),3,b	;volatile
 14963  0155A0  D7FD               	goto	__ptext49
 14964  0155A2                     u9800:
 14965  0155A2  013D               	movlb	61	; () banked
 14966  0155A4  BB17               	btfsc	23,5,b	;volatile
 14967  0155A6  0012               	return	
 14968  0155A8  D7FC               	goto	u9800
 14969  0155AA                     __end_of_wait_lcd_done:
 14970                           	callstack 0
 14971                           
 14972 ;; *************** function _send_lcd_data_dma *****************
 14973 ;; Defined at:
 14974 ;;		line 172 in file "eadog.c"
 14975 ;; Parameters:    Size  Location     Type
 14976 ;;  strPtr          1    wreg     const unsigned char 
 14977 ;; Auto vars:     Size  Location     Type
 14978 ;;  strPtr          1   13[BANK0 ] const unsigned char 
 14979 ;; Return value:  Size  Location     Type
 14980 ;;                  1    wreg      void 
 14981 ;; Registers used:
 14982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14983 ;; Tracked objects:
 14984 ;;		On entry : 2/0
 14985 ;;		On exit  : 3F/3B
 14986 ;;		Unchanged: 0/0
 14987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14991 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14992 ;;Total ram usage:        1 bytes
 14993 ;; Hardware stack levels used: 1
 14994 ;; Hardware stack levels required when called: 9
 14995 ;; This function calls:
 14996 ;;		_ringBufS_flush
 14997 ;;		_ringBufS_put_dma
 14998 ;;		_start_lcd
 14999 ;;		_wait_lcd_set
 15000 ;; This function is called by:
 15001 ;;		_send_lcd_cmd_dma
 15002 ;;		_eaDogM_WriteStringAtPos
 15003 ;; This function uses a non-reentrant model
 15004 ;;
 15005                           
 15006                           	psect	text50
 15007  014D5E                     __ptext50:
 15008                           	callstack 0
 15009  014D5E                     _send_lcd_data_dma:
 15010                           	callstack 20
 15011                           
 15012                           ; BSR set to: 61
 15013                           ;incstack = 0
 15014                           ;send_lcd_data_dma@strPtr stored from wreg
 15015  014D5E  0100               	movlb	0	; () banked
 15016  014D60  6F6D               	movwf	send_lcd_data_dma@strPtr& (0+255),b
 15017                           
 15018                           ;eadog.c: 172: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 173: {;eadog.c: 177
      +                          :  wait_lcd_set();
 15019  014D62  EC52  F0AB         	call	_wait_lcd_set	;wreg free
 15020                           
 15021                           ; BSR set to: 1
 15022                           ;eadog.c: 179:  ringBufS_flush(spi_link.tx1a, 0);
 15023  014D66  C106  F06A         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 15024  014D6A  C107  F06B         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 15025  014D6E  0E00               	movlw	0
 15026  014D70  0100               	movlb	0	; () banked
 15027  014D72  6F6C               	movwf	ringBufS_flush@clearBuffer& (0+255),b
 15028  014D74  EC60  F0A4         	call	_ringBufS_flush	;wreg free
 15029                           
 15030                           ; BSR set to: 0
 15031  014D78  94BC               	bcf	188,2,c	;volatile
 15032                           
 15033                           ; BSR set to: 0
 15034                           ;eadog.c: 181:  DMA1CON0bits.EN = 0;
 15035  014D7A  013B               	movlb	59	; () banked
 15036  014D7C  9FFC               	bcf	252,7,b	;volatile
 15037                           
 15038                           ; BSR set to: 59
 15039                           ;eadog.c: 182:  DMA1SSZ = 1;
 15040  014D7E  0E00               	movlw	0
 15041  014D80  6FF8               	movwf	248,b	;volatile
 15042  014D82  0E01               	movlw	1
 15043  014D84  6FF7               	movwf	247,b	;volatile
 15044                           
 15045                           ; BSR set to: 59
 15046                           ;eadog.c: 183:  DMA1CON0bits.EN = 1;
 15047  014D86  8FFC               	bsf	252,7,b	;volatile
 15048                           
 15049                           ; BSR set to: 59
 15050                           ;eadog.c: 184:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 15051  014D88  C106  F060         	movff	_spi_link+6,ringBufS_put_dma@_this	;volatile
 15052  014D8C  C107  F061         	movff	_spi_link+7,ringBufS_put_dma@_this+1	;volatile
 15053  014D90  C06D  F062         	movff	send_lcd_data_dma@strPtr,ringBufS_put_dma@c
 15054  014D94  EC36  F0A4         	call	_ringBufS_put_dma	;wreg free
 15055                           
 15056                           ; BSR set to: 0
 15057                           ;eadog.c: 185:  start_lcd();
 15058  014D98  EC55  F0AB         	call	_start_lcd	;wreg free
 15059                           
 15060                           ; BSR set to: 59
 15061  014D9C  0012               	return		;funcret
 15062  014D9E                     __end_of_send_lcd_data_dma:
 15063                           	callstack 0
 15064                           
 15065 ;; *************** function _wait_lcd_set *****************
 15066 ;; Defined at:
 15067 ;;		line 288 in file "eadog.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;		None
 15070 ;; Auto vars:     Size  Location     Type
 15071 ;;		None
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  1    wreg      void 
 15074 ;; Registers used:
 15075 ;;		None
 15076 ;; Tracked objects:
 15077 ;;		On entry : 0/0
 15078 ;;		On exit  : 3F/1
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15085 ;;Total ram usage:        0 bytes
 15086 ;; Hardware stack levels used: 1
 15087 ;; Hardware stack levels required when called: 7
 15088 ;; This function calls:
 15089 ;;		Nothing
 15090 ;; This function is called by:
 15091 ;;		_eaDogM_WriteString
 15092 ;;		_send_lcd_data_dma
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           	psect	text51
 15097  0156A4                     __ptext51:
 15098                           	callstack 0
 15099  0156A4                     _wait_lcd_set:
 15100                           	callstack 21
 15101                           
 15102                           ;eadog.c: 290:  spi_link.LCD_DATA = 1;
 15103                           
 15104                           ; BSR set to: 59
 15105                           ;incstack = 0
 15106  0156A4  0101               	movlb	1	; () banked
 15107  0156A6  8700               	bsf	_spi_link& (0+255),3,b	;volatile
 15108                           
 15109                           ; BSR set to: 1
 15110  0156A8  0012               	return		;funcret
 15111  0156AA                     __end_of_wait_lcd_set:
 15112                           	callstack 0
 15113                           
 15114 ;; *************** function _start_lcd *****************
 15115 ;; Defined at:
 15116 ;;		line 283 in file "eadog.c"
 15117 ;; Parameters:    Size  Location     Type
 15118 ;;		None
 15119 ;; Auto vars:     Size  Location     Type
 15120 ;;		None
 15121 ;; Return value:  Size  Location     Type
 15122 ;;                  1    wreg      void 
 15123 ;; Registers used:
 15124 ;;		None
 15125 ;; Tracked objects:
 15126 ;;		On entry : 3F/0
 15127 ;;		On exit  : 3F/3B
 15128 ;;		Unchanged: 0/0
 15129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15134 ;;Total ram usage:        0 bytes
 15135 ;; Hardware stack levels used: 1
 15136 ;; Hardware stack levels required when called: 7
 15137 ;; This function calls:
 15138 ;;		Nothing
 15139 ;; This function is called by:
 15140 ;;		_eaDogM_WriteString
 15141 ;;		_send_lcd_data_dma
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           	psect	text52
 15146  0156AA                     __ptext52:
 15147                           	callstack 0
 15148  0156AA                     _start_lcd:
 15149                           	callstack 21
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;eadog.c: 285:  DMA1CON0bits.DMA1SIRQEN = 1;
 15153                           
 15154                           ; BSR set to: 1
 15155                           ;incstack = 0
 15156  0156AA  013B               	movlb	59	; () banked
 15157  0156AC  8DFC               	bsf	252,6,b	;volatile
 15158                           
 15159                           ; BSR set to: 59
 15160  0156AE  0012               	return		;funcret
 15161  0156B0                     __end_of_start_lcd:
 15162                           	callstack 0
 15163                           
 15164 ;; *************** function _ringBufS_put_dma *****************
 15165 ;; Defined at:
 15166 ;;		line 67 in file "ringbufs.c"
 15167 ;; Parameters:    Size  Location     Type
 15168 ;;  _this           2    0[BANK0 ] PTR struct ringBufS_t
 15169 ;;		 -> ring_buf1(67), 
 15170 ;;  c               1    2[BANK0 ] const unsigned char 
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;		None
 15173 ;; Return value:  Size  Location     Type
 15174 ;;                  1    wreg      void 
 15175 ;; Registers used:
 15176 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15177 ;; Tracked objects:
 15178 ;;		On entry : 3F/3B
 15179 ;;		On exit  : 3F/0
 15180 ;;		Unchanged: 0/0
 15181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15182 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15185 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15186 ;;Total ram usage:        4 bytes
 15187 ;; Hardware stack levels used: 1
 15188 ;; Hardware stack levels required when called: 7
 15189 ;; This function calls:
 15190 ;;		Nothing
 15191 ;; This function is called by:
 15192 ;;		_send_lcd_data_dma
 15193 ;; This function uses a non-reentrant model
 15194 ;;
 15195                           
 15196                           	psect	text53
 15197  01486C                     __ptext53:
 15198                           	callstack 0
 15199  01486C                     _ringBufS_put_dma:
 15200                           	callstack 21
 15201                           
 15202                           ; BSR set to: 59
 15203                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 15204                           
 15205                           ; BSR set to: 59
 15206                           ;incstack = 0
 15207  01486C  0100               	movlb	0	; () banked
 15208  01486E  EE20 F042          	lfsr	2,66
 15209  014872  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 15210  014874  26D9               	addwf	fsr2l,f,c
 15211  014876  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15212  014878  22DA               	addwfc	fsr2h,f,c
 15213  01487A  0E40               	movlw	64
 15214  01487C  60DF               	cpfslt	indf2,c
 15215  01487E  0012               	return	
 15216                           
 15217                           ; BSR set to: 0
 15218                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 15219  014880  EE20 F040          	lfsr	2,64
 15220  014884  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 15221  014886  26D9               	addwf	fsr2l,f,c
 15222  014888  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15223  01488A  22DA               	addwfc	fsr2h,f,c
 15224  01488C  50DF               	movf	indf2,w,c
 15225  01488E  6E20               	movwf	??_ringBufS_put_dma^0,c
 15226  014890  5020               	movf	??_ringBufS_put_dma^0,w,c
 15227  014892  2560               	addwf	ringBufS_put_dma@_this& (0+255),w,b
 15228  014894  6ED9               	movwf	fsr2l,c
 15229  014896  0E00               	movlw	0
 15230  014898  2161               	addwfc	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15231  01489A  6EDA               	movwf	fsr2h,c
 15232  01489C  0060  F18B  FFDF   	movff	ringBufS_put_dma@c,indf2
 15233                           
 15234                           ;ringbufs.c: 71:   ++_this->head;
 15235  0148A2  EE20 F040          	lfsr	2,64
 15236  0148A6  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 15237  0148A8  26D9               	addwf	fsr2l,f,c
 15238  0148AA  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15239  0148AC  22DA               	addwfc	fsr2h,f,c
 15240  0148AE  2ADF               	incf	indf2,f,c
 15241                           
 15242                           ;ringbufs.c: 72:   ++_this->count;
 15243  0148B0  EE20 F042          	lfsr	2,66
 15244  0148B4  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 15245  0148B6  26D9               	addwf	fsr2l,f,c
 15246  0148B8  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 15247  0148BA  22DA               	addwfc	fsr2h,f,c
 15248  0148BC  2ADF               	incf	indf2,f,c
 15249                           
 15250                           ; BSR set to: 0
 15251  0148BE  0012               	return		;funcret
 15252  0148C0                     __end_of_ringBufS_put_dma:
 15253                           	callstack 0
 15254                           
 15255 ;; *************** function _ringBufS_flush *****************
 15256 ;; Defined at:
 15257 ;;		line 85 in file "ringbufs.c"
 15258 ;; Parameters:    Size  Location     Type
 15259 ;;  _this           2   10[BANK0 ] PTR struct ringBufS_t
 15260 ;;		 -> ring_buf1(67), 
 15261 ;;  clearBuffer     1   12[BANK0 ] const char 
 15262 ;; Auto vars:     Size  Location     Type
 15263 ;;		None
 15264 ;; Return value:  Size  Location     Type
 15265 ;;                  1    wreg      void 
 15266 ;; Registers used:
 15267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15268 ;; Tracked objects:
 15269 ;;		On entry : 3F/0
 15270 ;;		On exit  : 3F/0
 15271 ;;		Unchanged: 0/0
 15272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15273 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15276 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15277 ;;Total ram usage:        3 bytes
 15278 ;; Hardware stack levels used: 1
 15279 ;; Hardware stack levels required when called: 8
 15280 ;; This function calls:
 15281 ;;		_memset
 15282 ;; This function is called by:
 15283 ;;		_eaDogM_WriteString
 15284 ;;		_send_lcd_data_dma
 15285 ;; This function uses a non-reentrant model
 15286 ;;
 15287                           
 15288                           	psect	text54
 15289  0148C0                     __ptext54:
 15290                           	callstack 0
 15291  0148C0                     _ringBufS_flush:
 15292                           	callstack 20
 15293                           
 15294                           ; BSR set to: 0
 15295                           ;ringbufs.c: 85: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 86: {;ringbufs.c: 87:  _this->count = 0;
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;incstack = 0
 15299  0148C0  EE20 F042          	lfsr	2,66
 15300  0148C4  516A               	movf	ringBufS_flush@_this& (0+255),w,b
 15301  0148C6  26D9               	addwf	fsr2l,f,c
 15302  0148C8  516B               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 15303  0148CA  22DA               	addwfc	fsr2h,f,c
 15304  0148CC  0E00               	movlw	0
 15305  0148CE  6EDF               	movwf	indf2,c
 15306                           
 15307                           ;ringbufs.c: 88:  _this->head = 0;
 15308  0148D0  EE20 F040          	lfsr	2,64
 15309  0148D4  516A               	movf	ringBufS_flush@_this& (0+255),w,b
 15310  0148D6  26D9               	addwf	fsr2l,f,c
 15311  0148D8  516B               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 15312  0148DA  22DA               	addwfc	fsr2h,f,c
 15313  0148DC  0E00               	movlw	0
 15314  0148DE  6EDF               	movwf	indf2,c
 15315                           
 15316                           ;ringbufs.c: 89:  _this->tail = 0;
 15317  0148E0  EE20 F041          	lfsr	2,65
 15318  0148E4  516A               	movf	ringBufS_flush@_this& (0+255),w,b
 15319  0148E6  26D9               	addwf	fsr2l,f,c
 15320  0148E8  516B               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 15321  0148EA  22DA               	addwfc	fsr2h,f,c
 15322  0148EC  0E00               	movlw	0
 15323  0148EE  6EDF               	movwf	indf2,c
 15324                           
 15325                           ; BSR set to: 0
 15326                           ;ringbufs.c: 90:  if (clearBuffer) {
 15327  0148F0  516C               	movf	ringBufS_flush@clearBuffer& (0+255),w,b
 15328  0148F2  B4D8               	btfsc	status,2,c
 15329  0148F4  0012               	return	
 15330                           
 15331                           ; BSR set to: 0
 15332                           ;ringbufs.c: 91:   memset(_this->buf, 0, sizeof(_this->buf));
 15333  0148F6  C06A  F060         	movff	ringBufS_flush@_this,memset@dest
 15334  0148FA  C06B  F061         	movff	ringBufS_flush@_this+1,memset@dest+1
 15335  0148FE  0E00               	movlw	0
 15336  014900  6F63               	movwf	(memset@c+1)& (0+255),b
 15337  014902  0E00               	movlw	0
 15338  014904  6F62               	movwf	memset@c& (0+255),b
 15339  014906  0E00               	movlw	0
 15340  014908  6F65               	movwf	(memset@n+1)& (0+255),b
 15341  01490A  0E40               	movlw	64
 15342  01490C  6F64               	movwf	memset@n& (0+255),b
 15343  01490E  EC5D  F09A         	call	_memset	;wreg free
 15344                           
 15345                           ; BSR set to: 0
 15346  014912  0012               	return		;funcret
 15347  014914                     __end_of_ringBufS_flush:
 15348                           	callstack 0
 15349                           
 15350 ;; *************** function _display_led *****************
 15351 ;; Defined at:
 15352 ;;		line 3 in file "disp_led.c"
 15353 ;; Parameters:    Size  Location     Type
 15354 ;;  led             1    wreg     enum E17388
 15355 ;; Auto vars:     Size  Location     Type
 15356 ;;  led             1    0[BANK0 ] enum E17388
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  1    wreg      void 
 15359 ;; Registers used:
 15360 ;;		wreg, status,2, status,0
 15361 ;; Tracked objects:
 15362 ;;		On entry : 3E/1
 15363 ;;		On exit  : 3F/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15369 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15370 ;;Total ram usage:        3 bytes
 15371 ;; Hardware stack levels used: 1
 15372 ;; Hardware stack levels required when called: 7
 15373 ;; This function calls:
 15374 ;;		Nothing
 15375 ;; This function is called by:
 15376 ;;		_main
 15377 ;; This function uses a non-reentrant model
 15378 ;;
 15379                           
 15380                           	psect	text55
 15381  013F5C                     __ptext55:
 15382                           	callstack 0
 15383  013F5C                     _display_led:
 15384                           	callstack 23
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;incstack = 0
 15388                           ;display_led@led stored from wreg
 15389  013F5C  0100               	movlb	0	; () banked
 15390  013F5E  6F60               	movwf	display_led@led& (0+255),b
 15391                           
 15392                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
 15393  013F60  D02D               	goto	l10828
 15394  013F62                     l1424:
 15395                           
 15396                           ; BSR set to: 0
 15397  013F62  98BD               	bcf	189,4,c	;volatile
 15398                           
 15399                           ; BSR set to: 0
 15400                           
 15401                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
 15402  013F64  9ABD               	bcf	189,5,c	;volatile
 15403  013F66  0012               	return	
 15404  013F68                     l1430:
 15405                           
 15406                           ; BSR set to: 0
 15407  013F68  98BD               	bcf	189,4,c	;volatile
 15408                           
 15409                           ; BSR set to: 0
 15410                           
 15411                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
 15412  013F6A  8ABD               	bsf	189,5,c	;volatile
 15413  013F6C  0012               	return	
 15414  013F6E                     l1435:
 15415                           
 15416                           ; BSR set to: 0
 15417  013F6E  88BD               	bsf	189,4,c	;volatile
 15418                           
 15419                           ; BSR set to: 0
 15420                           
 15421                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
 15422  013F70  9ABD               	bcf	189,5,c	;volatile
 15423  013F72  0012               	return	
 15424  013F74                     l1440:
 15425                           
 15426                           ; BSR set to: 0
 15427  013F74  9CBD               	bcf	189,6,c	;volatile
 15428                           
 15429                           ; BSR set to: 0
 15430                           
 15431                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
 15432  013F76  9EBD               	bcf	189,7,c	;volatile
 15433  013F78  0012               	return	
 15434  013F7A                     l1445:
 15435                           
 15436                           ; BSR set to: 0
 15437  013F7A  9CBD               	bcf	189,6,c	;volatile
 15438                           
 15439                           ; BSR set to: 0
 15440                           
 15441                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
 15442  013F7C  8EBD               	bsf	189,7,c	;volatile
 15443  013F7E  0012               	return	
 15444  013F80                     l1450:
 15445                           
 15446                           ; BSR set to: 0
 15447  013F80  8CBD               	bsf	189,6,c	;volatile
 15448                           
 15449                           ; BSR set to: 0
 15450                           
 15451                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
 15452  013F82  9EBD               	bcf	189,7,c	;volatile
 15453  013F84  0012               	return	
 15454  013F86                     l1455:
 15455                           
 15456                           ; BSR set to: 0
 15457  013F86  98BF               	bcf	191,4,c	;volatile
 15458                           
 15459                           ; BSR set to: 0
 15460                           
 15461                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
 15462  013F88  9ABF               	bcf	191,5,c	;volatile
 15463  013F8A  0012               	return	
 15464  013F8C                     l1460:
 15465                           
 15466                           ; BSR set to: 0
 15467  013F8C  98BF               	bcf	191,4,c	;volatile
 15468                           
 15469                           ; BSR set to: 0
 15470                           
 15471                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
 15472  013F8E  8ABF               	bsf	191,5,c	;volatile
 15473  013F90  0012               	return	
 15474  013F92                     l1465:
 15475                           
 15476                           ; BSR set to: 0
 15477  013F92  88BF               	bsf	191,4,c	;volatile
 15478                           
 15479                           ; BSR set to: 0
 15480                           
 15481                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
 15482  013F94  9ABF               	bcf	191,5,c	;volatile
 15483  013F96  0012               	return	
 15484  013F98                     l1470:
 15485                           
 15486                           ; BSR set to: 0
 15487  013F98  9CBF               	bcf	191,6,c	;volatile
 15488                           
 15489                           ; BSR set to: 0
 15490                           
 15491                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
 15492  013F9A  9EBF               	bcf	191,7,c	;volatile
 15493  013F9C  0012               	return	
 15494  013F9E                     l1475:
 15495                           
 15496                           ; BSR set to: 0
 15497  013F9E  9CBF               	bcf	191,6,c	;volatile
 15498                           
 15499                           ; BSR set to: 0
 15500                           
 15501                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
 15502  013FA0  8EBF               	bsf	191,7,c	;volatile
 15503  013FA2  0012               	return	
 15504  013FA4                     l1480:
 15505                           
 15506                           ; BSR set to: 0
 15507  013FA4  8CBF               	bsf	191,6,c	;volatile
 15508                           
 15509                           ; BSR set to: 0
 15510                           
 15511                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
 15512  013FA6  9EBF               	bcf	191,7,c	;volatile
 15513  013FA8  0012               	return	
 15514  013FAA                     l1485:
 15515                           
 15516                           ; BSR set to: 0
 15517  013FAA  98BD               	bcf	189,4,c	;volatile
 15518                           
 15519                           ; BSR set to: 0
 15520                           
 15521                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
 15522  013FAC  9ABD               	bcf	189,5,c	;volatile
 15523                           
 15524                           ; BSR set to: 0
 15525                           
 15526                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
 15527  013FAE  9CBD               	bcf	189,6,c	;volatile
 15528                           
 15529                           ; BSR set to: 0
 15530                           
 15531                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
 15532  013FB0  9EBD               	bcf	189,7,c	;volatile
 15533                           
 15534                           ; BSR set to: 0
 15535                           
 15536                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
 15537  013FB2  98BF               	bcf	191,4,c	;volatile
 15538                           
 15539                           ; BSR set to: 0
 15540                           
 15541                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
 15542  013FB4  9ABF               	bcf	191,5,c	;volatile
 15543                           
 15544                           ; BSR set to: 0
 15545                           
 15546                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
 15547  013FB6  9CBF               	bcf	191,6,c	;volatile
 15548                           
 15549                           ; BSR set to: 0
 15550                           
 15551                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
 15552  013FB8  9EBF               	bcf	191,7,c	;volatile
 15553  013FBA  0012               	return	
 15554  013FBC                     l10828:
 15555  013FBC  0100               	movlb	0	; () banked
 15556  013FBE  5160               	movf	display_led@led& (0+255),w,b
 15557  013FC0  6E20               	movwf	??_display_led^0,c
 15558  013FC2  6A21               	clrf	(??_display_led+1)^0,c
 15559                           
 15560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15561                           ; Switch size 1, requested type "simple"
 15562                           ; Number of cases is 1, Range of values is 0 to 0
 15563                           ; switch strategies available:
 15564                           ; Name         Instructions Cycles
 15565                           ; simple_byte            4     3 (average)
 15566                           ;	Chosen strategy is simple_byte
 15567  013FC4  5021               	movf	(??_display_led+1)^0,w,c
 15568  013FC6  0A00               	xorlw	0	; case 0
 15569  013FC8  A4D8               	btfss	status,2,c
 15570  013FCA  D7EF               	goto	l1485
 15571                           
 15572                           ; BSR set to: 0
 15573                           ; Switch size 1, requested type "simple"
 15574                           ; Number of cases is 12, Range of values is 0 to 11
 15575                           ; switch strategies available:
 15576                           ; Name         Instructions Cycles
 15577                           ; simple_byte           37    19 (average)
 15578                           ;	Chosen strategy is simple_byte
 15579  013FCC  5020               	movf	??_display_led^0,w,c
 15580  013FCE  0A00               	xorlw	0	; case 0
 15581  013FD0  B4D8               	btfsc	status,2,c
 15582  013FD2  D7C7               	goto	l1424
 15583  013FD4  0A01               	xorlw	1	; case 1
 15584  013FD6  B4D8               	btfsc	status,2,c
 15585  013FD8  D7CA               	goto	l1435
 15586  013FDA  0A03               	xorlw	3	; case 2
 15587  013FDC  B4D8               	btfsc	status,2,c
 15588  013FDE  D7C4               	goto	l1430
 15589  013FE0  0A01               	xorlw	1	; case 3
 15590  013FE2  B4D8               	btfsc	status,2,c
 15591  013FE4  D7C7               	goto	l1440
 15592  013FE6  0A07               	xorlw	7	; case 4
 15593  013FE8  B4D8               	btfsc	status,2,c
 15594  013FEA  D7CA               	goto	l1450
 15595  013FEC  0A01               	xorlw	1	; case 5
 15596  013FEE  B4D8               	btfsc	status,2,c
 15597  013FF0  D7C4               	goto	l1445
 15598  013FF2  0A03               	xorlw	3	; case 6
 15599  013FF4  B4D8               	btfsc	status,2,c
 15600  013FF6  D7C7               	goto	l1455
 15601  013FF8  0A01               	xorlw	1	; case 7
 15602  013FFA  B4D8               	btfsc	status,2,c
 15603  013FFC  D7CA               	goto	l1465
 15604  013FFE  0A0F               	xorlw	15	; case 8
 15605  014000  B4D8               	btfsc	status,2,c
 15606  014002  D7C4               	goto	l1460
 15607  014004  0A01               	xorlw	1	; case 9
 15608  014006  B4D8               	btfsc	status,2,c
 15609  014008  D7C7               	goto	l1470
 15610  01400A  0A03               	xorlw	3	; case 10
 15611  01400C  B4D8               	btfsc	status,2,c
 15612  01400E  D7CA               	goto	l1480
 15613  014010  0A01               	xorlw	1	; case 11
 15614  014012  B4D8               	btfsc	status,2,c
 15615  014014  D7C4               	goto	l1475
 15616  014016  D7C9               	goto	l1485
 15617  014018                     __end_of_display_led:
 15618                           	callstack 0
 15619                           
 15620 ;; *************** function _cli_read *****************
 15621 ;; Defined at:
 15622 ;;		line 86 in file "scdm.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;  a_ctx           2   35[BANK0 ] PTR struct _t_cli_ctx
 15625 ;;		 -> cli_ctx(131), 
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;  i               1   42[BANK0 ] unsigned char 
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  1    wreg      void 
 15630 ;; Registers used:
 15631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15632 ;; Tracked objects:
 15633 ;;		On entry : 3F/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15638 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15639 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15640 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15641 ;;Total ram usage:        8 bytes
 15642 ;; Hardware stack levels used: 1
 15643 ;; Hardware stack levels required when called: 14
 15644 ;; This function calls:
 15645 ;;		__cli_interpret_cmd
 15646 ;;		_linux_getc
 15647 ;;		_linux_putc
 15648 ;;		_memset
 15649 ;; This function is called by:
 15650 ;;		_main
 15651 ;; This function uses a non-reentrant model
 15652 ;;
 15653                           
 15654                           	psect	text56
 15655  01321E                     __ptext56:
 15656                           	callstack 0
 15657  01321E                     _cli_read:
 15658                           	callstack 16
 15659                           
 15660                           ; BSR set to: 0
 15661                           ;scdm.c: 86: void cli_read(t_cli_ctx *a_ctx);scdm.c: 87: {;scdm.c: 88:  uint8_t i = 0x00
      +                          ;
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;incstack = 0
 15665  01321E  0E00               	movlw	0
 15666  013220  6F8A               	movwf	cli_read@i& (0+255),b
 15667                           
 15668                           ; BSR set to: 0
 15669                           ;scdm.c: 91:  if (!linux_getc(&i)) {
 15670  013222  0E8A               	movlw	low cli_read@i
 15671  013224  6E21               	movwf	linux_getc@a_data^0,c
 15672  013226  EC34  F0A9         	call	_linux_getc	;wreg free
 15673  01322A  0900               	iorlw	0
 15674  01322C  B4D8               	btfsc	status,2,c
 15675  01322E  0012               	return	
 15676  013230  D088               	goto	l10870
 15677  013232                     l10848:
 15678                           
 15679                           ; BSR set to: 0
 15680                           ;scdm.c: 103:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cp
      +                          os))] = '\0';
 15681  013232  EE20 F082          	lfsr	2,130
 15682  013236  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15683  013238  26D9               	addwf	fsr2l,f,c
 15684  01323A  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15685  01323C  22DA               	addwfc	fsr2h,f,c
 15686  01323E  0E7E               	movlw	126
 15687  013240  64DF               	cpfsgt	indf2,c
 15688  013242  D00C               	goto	l10852
 15689                           
 15690                           ; BSR set to: 0
 15691  013244  EE20 F082          	lfsr	2,130
 15692  013248  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15693  01324A  26D9               	addwf	fsr2l,f,c
 15694  01324C  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15695  01324E  22DA               	addwfc	fsr2h,f,c
 15696  013250  50DF               	movf	indf2,w,c
 15697  013252  6F85               	movwf	??_cli_read& (0+255),b
 15698  013254  5185               	movf	??_cli_read& (0+255),w,b
 15699  013256  6F88               	movwf	_cli_read$3097& (0+255),b
 15700  013258  6B89               	clrf	(_cli_read$3097+1)& (0+255),b
 15701  01325A  D00E               	goto	l1589
 15702  01325C                     l10852:
 15703                           
 15704                           ; BSR set to: 0
 15705  01325C  EE20 F082          	lfsr	2,130
 15706  013260  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15707  013262  26D9               	addwf	fsr2l,f,c
 15708  013264  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15709  013266  22DA               	addwfc	fsr2h,f,c
 15710  013268  50DF               	movf	indf2,w,c
 15711  01326A  6F85               	movwf	??_cli_read& (0+255),b
 15712  01326C  0E01               	movlw	1
 15713  01326E  2585               	addwf	??_cli_read& (0+255),w,b
 15714  013270  6F88               	movwf	_cli_read$3097& (0+255),b
 15715  013272  6B89               	clrf	(_cli_read$3097+1)& (0+255),b
 15716  013274  0E00               	movlw	0
 15717  013276  2389               	addwfc	(_cli_read$3097+1)& (0+255),f,b
 15718  013278                     l1589:
 15719                           
 15720                           ; BSR set to: 0
 15721  013278  5188               	movf	_cli_read$3097& (0+255),w,b
 15722  01327A  2583               	addwf	cli_read@a_ctx& (0+255),w,b
 15723  01327C  6F85               	movwf	??_cli_read& (0+255),b
 15724  01327E  5189               	movf	(_cli_read$3097+1)& (0+255),w,b
 15725  013280  2184               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 15726  013282  6F86               	movwf	(??_cli_read+1)& (0+255),b
 15727  013284  0E02               	movlw	2
 15728  013286  2585               	addwf	??_cli_read& (0+255),w,b
 15729  013288  6ED9               	movwf	fsr2l,c
 15730  01328A  0E00               	movlw	0
 15731  01328C  2186               	addwfc	(??_cli_read+1)& (0+255),w,b
 15732  01328E  6EDA               	movwf	fsr2h,c
 15733  013290  0E00               	movlw	0
 15734  013292  6EDF               	movwf	indf2,c
 15735                           
 15736                           ; BSR set to: 0
 15737                           ;scdm.c: 104:   linux_putc((unsigned char *) "\r\n", 2);
 15738  013294  0E68               	movlw	low (STR_5+15)
 15739  013296  6F75               	movwf	linux_putc@data& (0+255),b
 15740  013298  0EFF               	movlw	high (STR_5+15)
 15741  01329A  6F76               	movwf	(linux_putc@data+1)& (0+255),b
 15742  01329C  0E02               	movlw	2
 15743  01329E  6F77               	movwf	linux_putc@a_len& (0+255),b
 15744  0132A0  ECD5  F0AA         	call	_linux_putc	;wreg free
 15745                           
 15746                           ; BSR set to: 0
 15747                           ;scdm.c: 105:   res = _cli_interpret_cmd(a_ctx);
 15748  0132A4  C083  F077         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 15749  0132A8  C084  F078         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 15750  0132AC  ECCF  F095         	call	__cli_interpret_cmd	;wreg free
 15751  0132B0  6E34               	movwf	_res^0,c
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;scdm.c: 106:   a_ctx->cpos = 0;
 15755  0132B2  EE20 F082          	lfsr	2,130
 15756  0132B6  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15757  0132B8  26D9               	addwf	fsr2l,f,c
 15758  0132BA  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15759  0132BC  22DA               	addwfc	fsr2h,f,c
 15760  0132BE  0E00               	movlw	0
 15761  0132C0  6EDF               	movwf	indf2,c
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;scdm.c: 107:   memset(a_ctx->cmd, 0x00, 128);
 15765  0132C2  0E02               	movlw	2
 15766  0132C4  2583               	addwf	cli_read@a_ctx& (0+255),w,b
 15767  0132C6  6F60               	movwf	memset@dest& (0+255),b
 15768  0132C8  0E00               	movlw	0
 15769  0132CA  2184               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 15770  0132CC  6F61               	movwf	(memset@dest+1)& (0+255),b
 15771  0132CE  0E00               	movlw	0
 15772  0132D0  6F63               	movwf	(memset@c+1)& (0+255),b
 15773  0132D2  0E00               	movlw	0
 15774  0132D4  6F62               	movwf	memset@c& (0+255),b
 15775  0132D6  0E00               	movlw	0
 15776  0132D8  6F65               	movwf	(memset@n+1)& (0+255),b
 15777  0132DA  0E80               	movlw	128
 15778  0132DC  6F64               	movwf	memset@n& (0+255),b
 15779  0132DE  EC5D  F09A         	call	_memset	;wreg free
 15780                           
 15781                           ;scdm.c: 108:   break;
 15782  0132E2  0012               	return	
 15783  0132E4                     l10862:
 15784                           
 15785                           ; BSR set to: 0
 15786                           ;scdm.c: 111:   if (a_ctx->cpos < (128 - 1)) {
 15787  0132E4  EE20 F082          	lfsr	2,130
 15788  0132E8  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15789  0132EA  26D9               	addwf	fsr2l,f,c
 15790  0132EC  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15791  0132EE  22DA               	addwfc	fsr2h,f,c
 15792  0132F0  0E7F               	movlw	127
 15793  0132F2  60DF               	cpfslt	indf2,c
 15794  0132F4  0012               	return	
 15795                           
 15796                           ; BSR set to: 0
 15797                           ;scdm.c: 112:    a_ctx->cmd[a_ctx->cpos++] = i;
 15798  0132F6  EE20 F082          	lfsr	2,130
 15799  0132FA  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15800  0132FC  26D9               	addwf	fsr2l,f,c
 15801  0132FE  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15802  013300  22DA               	addwfc	fsr2h,f,c
 15803  013302  50DF               	movf	indf2,w,c
 15804  013304  6F85               	movwf	??_cli_read& (0+255),b
 15805  013306  5185               	movf	??_cli_read& (0+255),w,b
 15806  013308  2583               	addwf	cli_read@a_ctx& (0+255),w,b
 15807  01330A  6F86               	movwf	(??_cli_read+1)& (0+255),b
 15808  01330C  0E00               	movlw	0
 15809  01330E  2184               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 15810  013310  6F87               	movwf	(??_cli_read+2)& (0+255),b
 15811  013312  0E02               	movlw	2
 15812  013314  2586               	addwf	(??_cli_read+1)& (0+255),w,b
 15813  013316  6ED9               	movwf	fsr2l,c
 15814  013318  0E00               	movlw	0
 15815  01331A  2187               	addwfc	(??_cli_read+2)& (0+255),w,b
 15816  01331C  6EDA               	movwf	fsr2h,c
 15817  01331E  0060  F22B  FFDF   	movff	cli_read@i,indf2
 15818  013324  EE20 F082          	lfsr	2,130
 15819  013328  5183               	movf	cli_read@a_ctx& (0+255),w,b
 15820  01332A  26D9               	addwf	fsr2l,f,c
 15821  01332C  5184               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 15822  01332E  22DA               	addwfc	fsr2h,f,c
 15823  013330  2ADF               	incf	indf2,f,c
 15824                           
 15825                           ; BSR set to: 0
 15826                           ;scdm.c: 113:    linux_putc(&i, 1);
 15827  013332  0E8A               	movlw	low cli_read@i
 15828  013334  6F75               	movwf	linux_putc@data& (0+255),b
 15829  013336  6B76               	clrf	(linux_putc@data+1)& (0+255),b
 15830  013338  0E01               	movlw	1
 15831  01333A  6F77               	movwf	linux_putc@a_len& (0+255),b
 15832  01333C  ECD5  F0AA         	call	_linux_putc	;wreg free
 15833  013340  0012               	return	
 15834  013342                     l10870:
 15835  013342  0100               	movlb	0	; () banked
 15836  013344  518A               	movf	cli_read@i& (0+255),w,b
 15837  013346  6F85               	movwf	??_cli_read& (0+255),b
 15838  013348  6B86               	clrf	(??_cli_read+1)& (0+255),b
 15839                           
 15840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15841                           ; Switch size 1, requested type "simple"
 15842                           ; Number of cases is 1, Range of values is 0 to 0
 15843                           ; switch strategies available:
 15844                           ; Name         Instructions Cycles
 15845                           ; simple_byte            4     3 (average)
 15846                           ;	Chosen strategy is simple_byte
 15847  01334A  5186               	movf	(??_cli_read+1)& (0+255),w,b
 15848  01334C  0A00               	xorlw	0	; case 0
 15849  01334E  A4D8               	btfss	status,2,c
 15850  013350  D7C9               	goto	l10862
 15851                           
 15852                           ; BSR set to: 0
 15853                           ; Switch size 1, requested type "simple"
 15854                           ; Number of cases is 4, Range of values is 13 to 127
 15855                           ; switch strategies available:
 15856                           ; Name         Instructions Cycles
 15857                           ; simple_byte           13     7 (average)
 15858                           ;	Chosen strategy is simple_byte
 15859  013352  5185               	movf	??_cli_read& (0+255),w,b
 15860  013354  0A0D               	xorlw	13	; case 13
 15861  013356  B4D8               	btfsc	status,2,c
 15862  013358  D76C               	goto	l10848
 15863  01335A  0A16               	xorlw	22	; case 27
 15864  01335C  B4D8               	btfsc	status,2,c
 15865  01335E  0012               	return	
 15866  013360  0A65               	xorlw	101	; case 126
 15867  013362  B4D8               	btfsc	status,2,c
 15868  013364  0012               	return	
 15869  013366  0A01               	xorlw	1	; case 127
 15870  013368  B4D8               	btfsc	status,2,c
 15871  01336A  0012               	return		;funcret
 15872  01336C  D7BB               	goto	l10862
 15873  01336E                     __end_of_cli_read:
 15874                           	callstack 0
 15875                           
 15876 ;; *************** function _memset *****************
 15877 ;; Defined at:
 15878 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 15879 ;; Parameters:    Size  Location     Type
 15880 ;;  dest            2    0[BANK0 ] PTR void 
 15881 ;;		 -> ring_buf1(67), cli_ctx(131), 
 15882 ;;  c               2    2[BANK0 ] int 
 15883 ;;  n               2    4[BANK0 ] unsigned int 
 15884 ;; Auto vars:     Size  Location     Type
 15885 ;;  s               2    8[BANK0 ] PTR unsigned char 
 15886 ;;		 -> ring_buf1(67), cli_ctx(131), 
 15887 ;;  k               2    6[BANK0 ] unsigned int 
 15888 ;; Return value:  Size  Location     Type
 15889 ;;                  2    0[BANK0 ] PTR void 
 15890 ;; Registers used:
 15891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15892 ;; Tracked objects:
 15893 ;;		On entry : 3F/0
 15894 ;;		On exit  : 3F/0
 15895 ;;		Unchanged: 0/0
 15896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15897 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15898 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15899 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15900 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15901 ;;Total ram usage:       12 bytes
 15902 ;; Hardware stack levels used: 1
 15903 ;; Hardware stack levels required when called: 7
 15904 ;; This function calls:
 15905 ;;		Nothing
 15906 ;; This function is called by:
 15907 ;;		_cli_init
 15908 ;;		_cli_read
 15909 ;;		_ringBufS_init
 15910 ;;		_ringBufS_flush
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           	psect	text57
 15915  0134BA                     __ptext57:
 15916                           	callstack 0
 15917  0134BA                     _memset:
 15918                           	callstack 21
 15919                           
 15920                           ; BSR set to: 0
 15921                           
 15922                           ;incstack = 0
 15923  0134BA  C060  F068         	movff	memset@dest,memset@s
 15924  0134BE  C061  F069         	movff	memset@dest+1,memset@s+1
 15925  0134C2  5164               	movf	memset@n& (0+255),w,b
 15926  0134C4  1165               	iorwf	(memset@n+1)& (0+255),w,b
 15927  0134C6  B4D8               	btfsc	status,2,c
 15928  0134C8  0012               	return	
 15929                           
 15930                           ; BSR set to: 0
 15931  0134CA  0060  F1A3  FFD9   	movff	memset@s,fsr2l
 15932  0134D0  0060  F1A7  FFDA   	movff	memset@s+1,fsr2h
 15933  0134D6  0060  F18B  FFDF   	movff	memset@c,indf2
 15934                           
 15935                           ; BSR set to: 0
 15936  0134DC  5164               	movf	memset@n& (0+255),w,b
 15937  0134DE  2568               	addwf	memset@s& (0+255),w,b
 15938  0134E0  6E20               	movwf	??_memset^0,c
 15939  0134E2  5165               	movf	(memset@n+1)& (0+255),w,b
 15940  0134E4  2169               	addwfc	(memset@s+1)& (0+255),w,b
 15941  0134E6  6E21               	movwf	(??_memset+1)^0,c
 15942  0134E8  0EFF               	movlw	255
 15943  0134EA  2420               	addwf	??_memset^0,w,c
 15944  0134EC  6ED9               	movwf	fsr2l,c
 15945  0134EE  0EFF               	movlw	255
 15946  0134F0  2021               	addwfc	(??_memset+1)^0,w,c
 15947  0134F2  6EDA               	movwf	fsr2h,c
 15948  0134F4  0060  F18B  FFDF   	movff	memset@c,indf2
 15949  0134FA  5165               	movf	(memset@n+1)& (0+255),w,b
 15950  0134FC  E104               	bnz	l8926
 15951  0134FE  0E03               	movlw	3
 15952  013500  5D64               	subwf	memset@n& (0+255),w,b
 15953  013502  A0D8               	btfss	status,0,c
 15954  013504  0012               	return	
 15955  013506                     l8926:
 15956                           
 15957                           ; BSR set to: 0
 15958  013506  EE20 F001          	lfsr	2,1
 15959  01350A  5168               	movf	memset@s& (0+255),w,b
 15960  01350C  26D9               	addwf	fsr2l,f,c
 15961  01350E  5169               	movf	(memset@s+1)& (0+255),w,b
 15962  013510  22DA               	addwfc	fsr2h,f,c
 15963  013512  0060  F18B  FFDF   	movff	memset@c,indf2
 15964  013518  EE20 F002          	lfsr	2,2
 15965  01351C  5168               	movf	memset@s& (0+255),w,b
 15966  01351E  26D9               	addwf	fsr2l,f,c
 15967  013520  5169               	movf	(memset@s+1)& (0+255),w,b
 15968  013522  22DA               	addwfc	fsr2h,f,c
 15969  013524  0060  F18B  FFDF   	movff	memset@c,indf2
 15970  01352A  5164               	movf	memset@n& (0+255),w,b
 15971  01352C  2568               	addwf	memset@s& (0+255),w,b
 15972  01352E  6E20               	movwf	??_memset^0,c
 15973  013530  5165               	movf	(memset@n+1)& (0+255),w,b
 15974  013532  2169               	addwfc	(memset@s+1)& (0+255),w,b
 15975  013534  6E21               	movwf	(??_memset+1)^0,c
 15976  013536  0EFE               	movlw	254
 15977  013538  2420               	addwf	??_memset^0,w,c
 15978  01353A  6ED9               	movwf	fsr2l,c
 15979  01353C  0EFF               	movlw	255
 15980  01353E  2021               	addwfc	(??_memset+1)^0,w,c
 15981  013540  6EDA               	movwf	fsr2h,c
 15982  013542  0060  F18B  FFDF   	movff	memset@c,indf2
 15983  013548  5164               	movf	memset@n& (0+255),w,b
 15984  01354A  2568               	addwf	memset@s& (0+255),w,b
 15985  01354C  6E20               	movwf	??_memset^0,c
 15986  01354E  5165               	movf	(memset@n+1)& (0+255),w,b
 15987  013550  2169               	addwfc	(memset@s+1)& (0+255),w,b
 15988  013552  6E21               	movwf	(??_memset+1)^0,c
 15989  013554  0EFD               	movlw	253
 15990  013556  2420               	addwf	??_memset^0,w,c
 15991  013558  6ED9               	movwf	fsr2l,c
 15992  01355A  0EFF               	movlw	255
 15993  01355C  2021               	addwfc	(??_memset+1)^0,w,c
 15994  01355E  6EDA               	movwf	fsr2h,c
 15995  013560  0060  F18B  FFDF   	movff	memset@c,indf2
 15996                           
 15997                           ; BSR set to: 0
 15998  013566  5165               	movf	(memset@n+1)& (0+255),w,b
 15999  013568  E104               	bnz	l8932
 16000  01356A  0E07               	movlw	7
 16001  01356C  5D64               	subwf	memset@n& (0+255),w,b
 16002  01356E  A0D8               	btfss	status,0,c
 16003  013570  0012               	return	
 16004  013572                     l8932:
 16005                           
 16006                           ; BSR set to: 0
 16007  013572  EE20 F003          	lfsr	2,3
 16008  013576  5168               	movf	memset@s& (0+255),w,b
 16009  013578  26D9               	addwf	fsr2l,f,c
 16010  01357A  5169               	movf	(memset@s+1)& (0+255),w,b
 16011  01357C  22DA               	addwfc	fsr2h,f,c
 16012  01357E  0060  F18B  FFDF   	movff	memset@c,indf2
 16013  013584  5164               	movf	memset@n& (0+255),w,b
 16014  013586  2568               	addwf	memset@s& (0+255),w,b
 16015  013588  6E20               	movwf	??_memset^0,c
 16016  01358A  5165               	movf	(memset@n+1)& (0+255),w,b
 16017  01358C  2169               	addwfc	(memset@s+1)& (0+255),w,b
 16018  01358E  6E21               	movwf	(??_memset+1)^0,c
 16019  013590  0EFC               	movlw	252
 16020  013592  2420               	addwf	??_memset^0,w,c
 16021  013594  6ED9               	movwf	fsr2l,c
 16022  013596  0EFF               	movlw	255
 16023  013598  2021               	addwfc	(??_memset+1)^0,w,c
 16024  01359A  6EDA               	movwf	fsr2h,c
 16025  01359C  0060  F18B  FFDF   	movff	memset@c,indf2
 16026                           
 16027                           ; BSR set to: 0
 16028  0135A2  5165               	movf	(memset@n+1)& (0+255),w,b
 16029  0135A4  E104               	bnz	l8938
 16030  0135A6  0E09               	movlw	9
 16031  0135A8  5D64               	subwf	memset@n& (0+255),w,b
 16032  0135AA  A0D8               	btfss	status,0,c
 16033  0135AC  0012               	return	
 16034  0135AE                     l8938:
 16035                           
 16036                           ; BSR set to: 0
 16037  0135AE  C068  F020         	movff	memset@s,??_memset
 16038  0135B2  C069  F021         	movff	memset@s+1,??_memset+1
 16039  0135B6  1E20               	comf	??_memset^0,f,c
 16040  0135B8  1E21               	comf	(??_memset+1)^0,f,c
 16041  0135BA  4A20               	infsnz	??_memset^0,f,c
 16042  0135BC  2A21               	incf	(??_memset+1)^0,f,c
 16043  0135BE  0E03               	movlw	3
 16044  0135C0  1420               	andwf	??_memset^0,w,c
 16045  0135C2  6F66               	movwf	memset@k& (0+255),b
 16046  0135C4  6B67               	clrf	(memset@k+1)& (0+255),b
 16047  0135C6  5166               	movf	memset@k& (0+255),w,b
 16048  0135C8  2768               	addwf	memset@s& (0+255),f,b
 16049  0135CA  5167               	movf	(memset@k+1)& (0+255),w,b
 16050  0135CC  2369               	addwfc	(memset@s+1)& (0+255),f,b
 16051  0135CE  5166               	movf	memset@k& (0+255),w,b
 16052  0135D0  5F64               	subwf	memset@n& (0+255),f,b
 16053  0135D2  5167               	movf	(memset@k+1)& (0+255),w,b
 16054  0135D4  5B65               	subwfb	(memset@n+1)& (0+255),f,b
 16055  0135D6  0EFC               	movlw	252
 16056  0135D8  1764               	andwf	memset@n& (0+255),f,b
 16057  0135DA  0EFF               	movlw	255
 16058  0135DC  1765               	andwf	(memset@n+1)& (0+255),f,b
 16059  0135DE  D00E               	goto	l8946
 16060  0135E0                     l8940:
 16061                           
 16062                           ; BSR set to: 0
 16063  0135E0  0060  F1A3  FFD9   	movff	memset@s,fsr2l
 16064  0135E6  0060  F1A7  FFDA   	movff	memset@s+1,fsr2h
 16065  0135EC  0060  F18B  FFDF   	movff	memset@c,indf2
 16066                           
 16067                           ; BSR set to: 0
 16068  0135F2  0764               	decf	memset@n& (0+255),f,b
 16069  0135F4  A0D8               	btfss	status,0,c
 16070  0135F6  0765               	decf	(memset@n+1)& (0+255),f,b
 16071                           
 16072                           ; BSR set to: 0
 16073  0135F8  4B68               	infsnz	memset@s& (0+255),f,b
 16074  0135FA  2B69               	incf	(memset@s+1)& (0+255),f,b
 16075  0135FC                     l8946:
 16076                           
 16077                           ; BSR set to: 0
 16078  0135FC  5164               	movf	memset@n& (0+255),w,b
 16079  0135FE  1165               	iorwf	(memset@n+1)& (0+255),w,b
 16080  013600  B4D8               	btfsc	status,2,c
 16081  013602  0012               	return	
 16082  013604  D7ED               	goto	l8940
 16083  013606                     __end_of_memset:
 16084                           	callstack 0
 16085                           
 16086 ;; *************** function _linux_putc *****************
 16087 ;; Defined at:
 16088 ;;		line 51 in file "scdm.c"
 16089 ;; Parameters:    Size  Location     Type
 16090 ;;  data            2   21[BANK0 ] PTR unsigned char 
 16091 ;;		 -> STR_29(3), cli_read@i(1), 
 16092 ;;  a_len           1   23[BANK0 ] unsigned char 
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;		None
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  1    wreg      unsigned char 
 16097 ;; Registers used:
 16098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16099 ;; Tracked objects:
 16100 ;;		On entry : 3F/0
 16101 ;;		On exit  : 3F/0
 16102 ;;		Unchanged: 0/0
 16103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16104 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16107 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16108 ;;Total ram usage:        3 bytes
 16109 ;; Hardware stack levels used: 1
 16110 ;; Hardware stack levels required when called: 12
 16111 ;; This function calls:
 16112 ;;		_puts
 16113 ;; This function is called by:
 16114 ;;		_cli_read
 16115 ;; This function uses a non-reentrant model
 16116 ;;
 16117                           
 16118                           	psect	text58
 16119  0155AA                     __ptext58:
 16120                           	callstack 0
 16121  0155AA                     _linux_putc:
 16122                           	callstack 17
 16123                           
 16124                           ; BSR set to: 0
 16125                           ;scdm.c: 51: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 52: {;scdm.c: 53: 
      +                           puts((const char *) data);
 16126                           
 16127                           ; BSR set to: 0
 16128                           ;incstack = 0
 16129  0155AA  C075  F072         	movff	linux_putc@data,puts@s
 16130  0155AE  C076  F073         	movff	linux_putc@data+1,puts@s+1
 16131  0155B2  ECE6  F0A7         	call	_puts	;wreg free
 16132                           
 16133                           ; BSR set to: 0
 16134  0155B6  0012               	return		;funcret
 16135  0155B8                     __end_of_linux_putc:
 16136                           	callstack 0
 16137                           
 16138 ;; *************** function _linux_getc *****************
 16139 ;; Defined at:
 16140 ;;		line 41 in file "scdm.c"
 16141 ;; Parameters:    Size  Location     Type
 16142 ;;  a_data          1   32[COMRAM] PTR unsigned char 
 16143 ;;		 -> cli_read@i(1), main@i(1), 
 16144 ;; Auto vars:     Size  Location     Type
 16145 ;;		None
 16146 ;; Return value:  Size  Location     Type
 16147 ;;                  1    wreg      unsigned char 
 16148 ;; Registers used:
 16149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16150 ;; Tracked objects:
 16151 ;;		On entry : 0/3D
 16152 ;;		On exit  : 0/0
 16153 ;;		Unchanged: 0/0
 16154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16155 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16157 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16158 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16159 ;;Total ram usage:        2 bytes
 16160 ;; Hardware stack levels used: 1
 16161 ;; Hardware stack levels required when called: 8
 16162 ;; This function calls:
 16163 ;;		_UART1_Read
 16164 ;;		_UART1_is_rx_ready
 16165 ;; This function is called by:
 16166 ;;		_main
 16167 ;;		_cli_read
 16168 ;; This function uses a non-reentrant model
 16169 ;;
 16170                           
 16171                           	psect	text59
 16172  015268                     __ptext59:
 16173                           	callstack 0
 16174  015268                     _linux_getc:
 16175                           	callstack 22
 16176                           
 16177                           ;scdm.c: 41: uint8_t linux_getc(uint8_t *a_data);scdm.c: 42: {;scdm.c: 43:  if (UART1_is
      +                          _rx_ready()) {
 16178                           
 16179                           ; BSR set to: 0
 16180                           ;incstack = 0
 16181  015268  ECDC  F0AA         	call	_UART1_is_rx_ready	;wreg free
 16182  01526C  0900               	iorlw	0
 16183  01526E  B4D8               	btfsc	status,2,c
 16184  015270  D00C               	goto	l10498
 16185                           
 16186                           ;scdm.c: 44:   a_data[0] = UART1_Read();
 16187  015272  EC2D  F0A7         	call	_UART1_Read	;wreg free
 16188  015276  0100               	movlb	0	; () banked
 16189  015278  6F60               	movwf	??_linux_getc& (0+255),b
 16190  01527A  5021               	movf	linux_getc@a_data^0,w,c
 16191  01527C  6ED9               	movwf	fsr2l,c
 16192  01527E  6ADA               	clrf	fsr2h,c
 16193  015280  0060  F183  FFDF   	movff	??_linux_getc,indf2
 16194                           
 16195                           ; BSR set to: 0
 16196                           ;scdm.c: 45:   return 1;
 16197  015286  0E01               	movlw	1
 16198  015288  0012               	return	
 16199  01528A                     l10498:
 16200                           
 16201                           ;scdm.c: 47:   return 0;
 16202  01528A  0E00               	movlw	0
 16203  01528C  0012               	return		;funcret
 16204  01528E                     __end_of_linux_getc:
 16205                           	callstack 0
 16206                           
 16207 ;; *************** function _UART1_is_rx_ready *****************
 16208 ;; Defined at:
 16209 ;;		line 169 in file "mcc_generated_files/uart1.c"
 16210 ;; Parameters:    Size  Location     Type
 16211 ;;		None
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;		None
 16214 ;; Return value:  Size  Location     Type
 16215 ;;                  1    wreg      _Bool 
 16216 ;; Registers used:
 16217 ;;		wreg, status,2
 16218 ;; Tracked objects:
 16219 ;;		On entry : 0/3D
 16220 ;;		On exit  : 0/0
 16221 ;;		Unchanged: 0/0
 16222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16227 ;;Total ram usage:        0 bytes
 16228 ;; Hardware stack levels used: 1
 16229 ;; Hardware stack levels required when called: 7
 16230 ;; This function calls:
 16231 ;;		Nothing
 16232 ;; This function is called by:
 16233 ;;		_linux_getc
 16234 ;; This function uses a non-reentrant model
 16235 ;;
 16236                           
 16237                           	psect	text60
 16238  0155B8                     __ptext60:
 16239                           	callstack 0
 16240  0155B8                     _UART1_is_rx_ready:
 16241                           	callstack 22
 16242                           
 16243                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 16244                           
 16245                           ;incstack = 0
 16246  0155B8  503B               	movf	_uart1RxCount^0,w,c	;volatile
 16247  0155BA  B4D8               	btfsc	status,2,c
 16248  0155BC  D002               	goto	u6140
 16249  0155BE  0E01               	movlw	1
 16250  0155C0  0012               	return	
 16251  0155C2                     u6140:
 16252  0155C2  0E00               	movlw	0
 16253  0155C4  0012               	return		;funcret
 16254  0155C6                     __end_of_UART1_is_rx_ready:
 16255                           	callstack 0
 16256                           
 16257 ;; *************** function _UART1_Read *****************
 16258 ;; Defined at:
 16259 ;;		line 188 in file "mcc_generated_files/uart1.c"
 16260 ;; Parameters:    Size  Location     Type
 16261 ;;		None
 16262 ;; Auto vars:     Size  Location     Type
 16263 ;;  readValue       1   31[COMRAM] unsigned char 
 16264 ;; Return value:  Size  Location     Type
 16265 ;;                  1    wreg      unsigned char 
 16266 ;; Registers used:
 16267 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16268 ;; Tracked objects:
 16269 ;;		On entry : 0/3D
 16270 ;;		On exit  : 3F/39
 16271 ;;		Unchanged: 0/0
 16272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16277 ;;Total ram usage:        1 bytes
 16278 ;; Hardware stack levels used: 1
 16279 ;; Hardware stack levels required when called: 7
 16280 ;; This function calls:
 16281 ;;		Nothing
 16282 ;; This function is called by:
 16283 ;;		_linux_getc
 16284 ;; This function uses a non-reentrant model
 16285 ;;
 16286                           
 16287                           	psect	text61
 16288  014E5A                     __ptext61:
 16289                           	callstack 0
 16290  014E5A                     _UART1_Read:
 16291                           	callstack 22
 16292                           
 16293                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 16294                           
 16295                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 16296                           
 16297                           ;incstack = 0
 16298  014E5A  503B               	movf	_uart1RxCount^0,w,c	;volatile
 16299  014E5C  B4D8               	btfsc	status,2,c
 16300  014E5E  D7FD               	goto	__ptext61
 16301                           
 16302                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 16303  014E60  0E00               	movlw	low _uart1RxStatusBuffer
 16304  014E62  243C               	addwf	_uart1RxTail^0,w,c	;volatile
 16305  014E64  6ED9               	movwf	fsr2l,c
 16306  014E66  6ADA               	clrf	fsr2h,c
 16307  014E68  0E02               	movlw	high _uart1RxStatusBuffer
 16308  014E6A  22DA               	addwfc	fsr2h,f,c
 16309  014E6C  50DF               	movf	indf2,w,c
 16310  014E6E  6E3A               	movwf	_uart1RxLastError^0,c	;volatile
 16311                           
 16312                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 16313  014E70  0E00               	movlw	low _uart1RxBuffer
 16314  014E72  243C               	addwf	_uart1RxTail^0,w,c	;volatile
 16315  014E74  6ED9               	movwf	fsr2l,c
 16316  014E76  6ADA               	clrf	fsr2h,c
 16317  014E78  0E03               	movlw	high _uart1RxBuffer
 16318  014E7A  22DA               	addwfc	fsr2h,f,c
 16319  014E7C  50DF               	movf	indf2,w,c
 16320  014E7E  6E20               	movwf	UART1_Read@readValue^0,c
 16321  014E80  2A3C               	incf	_uart1RxTail^0,f,c	;volatile
 16322                           
 16323                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 16324  014E82  0E3F               	movlw	63
 16325  014E84  643C               	cpfsgt	_uart1RxTail^0,c
 16326  014E86  D002               	goto	l7216
 16327                           
 16328                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 16329  014E88  0E00               	movlw	0
 16330  014E8A  6E3C               	movwf	_uart1RxTail^0,c	;volatile
 16331  014E8C                     l7216:
 16332                           
 16333                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 16334  014E8C  0139               	movlb	57	; () banked
 16335  014E8E  9793               	bcf	147,3,b	;volatile
 16336                           
 16337                           ; BSR set to: 57
 16338                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 16339  014E90  063B               	decf	_uart1RxCount^0,f,c	;volatile
 16340                           
 16341                           ; BSR set to: 57
 16342                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 16343  014E92  8793               	bsf	147,3,b	;volatile
 16344                           
 16345                           ; BSR set to: 57
 16346                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 16347  014E94  5020               	movf	UART1_Read@readValue^0,w,c
 16348                           
 16349                           ; BSR set to: 57
 16350  014E96  0012               	return		;funcret
 16351  014E98                     __end_of_UART1_Read:
 16352                           	callstack 0
 16353                           
 16354 ;; *************** function __cli_interpret_cmd *****************
 16355 ;; Defined at:
 16356 ;;		line 57 in file "scdm.c"
 16357 ;; Parameters:    Size  Location     Type
 16358 ;;  a_ctx           2   23[BANK0 ] PTR struct _t_cli_ctx
 16359 ;;		 -> cli_ctx(131), 
 16360 ;; Auto vars:     Size  Location     Type
 16361 ;;  i               1   34[BANK0 ] unsigned char 
 16362 ;;  ret             1   33[BANK0 ] unsigned char 
 16363 ;; Return value:  Size  Location     Type
 16364 ;;                  1    wreg      unsigned char 
 16365 ;; Registers used:
 16366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16367 ;; Tracked objects:
 16368 ;;		On entry : 3F/0
 16369 ;;		On exit  : 3F/0
 16370 ;;		Unchanged: 0/0
 16371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16373 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16374 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16375 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16376 ;;Total ram usage:       12 bytes
 16377 ;; Hardware stack levels used: 1
 16378 ;; Hardware stack levels required when called: 13
 16379 ;; This function calls:
 16380 ;;		Absolute function
 16381 ;;		_fh_p0
 16382 ;;		_fh_p1
 16383 ;;		_fh_pd
 16384 ;;		_fh_pl
 16385 ;;		_fh_po
 16386 ;;		_fh_pp
 16387 ;;		_fh_pr
 16388 ;;		_fh_ps
 16389 ;;		_fh_pu
 16390 ;;		_strlen
 16391 ;;		_strncmp
 16392 ;; This function is called by:
 16393 ;;		_cli_read
 16394 ;; This function uses a non-reentrant model
 16395 ;;
 16396                           
 16397                           	psect	text62
 16398  012B9E                     __ptext62:
 16399                           	callstack 0
 16400  012B9E                     __cli_interpret_cmd:
 16401                           	callstack 16
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;scdm.c: 57: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 58: {;scdm.c: 5
      +                          9:  uint8_t i = 0;
 16405                           
 16406                           ; BSR set to: 57
 16407                           ;incstack = 0
 16408  012B9E  0E00               	movlw	0
 16409  012BA0  6F82               	movwf	__cli_interpret_cmd@i& (0+255),b
 16410                           
 16411                           ;scdm.c: 60:  uint8_t ret = E_CMD_OK;
 16412  012BA2  0E00               	movlw	0
 16413  012BA4  6F81               	movwf	__cli_interpret_cmd@ret& (0+255),b
 16414                           
 16415                           ; BSR set to: 0
 16416                           ;scdm.c: 62:  if (!strlen(a_ctx->cmd)) {
 16417  012BA6  0E02               	movlw	2
 16418  012BA8  2577               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 16419  012BAA  6E20               	movwf	strlen@s^0,c
 16420  012BAC  0E00               	movlw	0
 16421  012BAE  2178               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 16422  012BB0  6E21               	movwf	(strlen@s+1)^0,c
 16423  012BB2  EC02  F0A5         	call	_strlen	;wreg free
 16424  012BB6  5020               	movf	?_strlen^0,w,c
 16425  012BB8  1021               	iorwf	(?_strlen+1)^0,w,c
 16426  012BBA  A4D8               	btfss	status,2,c
 16427  012BBC  D002               	goto	l10534
 16428                           
 16429                           ; BSR set to: 0
 16430                           ;scdm.c: 63:   return E_CMD_EMPTY;
 16431  012BBE  0E03               	movlw	3
 16432  012BC0  0012               	return	
 16433  012BC2                     l10534:
 16434                           
 16435                           ; BSR set to: 0
 16436                           ;scdm.c: 66:  if (strlen(a_ctx->cmd) < 2) {
 16437  012BC2  0E02               	movlw	2
 16438  012BC4  2577               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 16439  012BC6  6E20               	movwf	strlen@s^0,c
 16440  012BC8  0E00               	movlw	0
 16441  012BCA  2178               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 16442  012BCC  6E21               	movwf	(strlen@s+1)^0,c
 16443  012BCE  EC02  F0A5         	call	_strlen	;wreg free
 16444  012BD2  5021               	movf	(?_strlen+1)^0,w,c
 16445  012BD4  E103               	bnz	u10181
 16446  012BD6  0E02               	movlw	2
 16447  012BD8  5C20               	subwf	?_strlen^0,w,c
 16448  012BDA  B0D8               	btfsc	status,0,c
 16449  012BDC                     u10181:
 16450  012BDC  D07D               	goto	l10546
 16451                           
 16452                           ; BSR set to: 0
 16453                           ;scdm.c: 67:   return E_CMD_TOO_SHORT;
 16454  012BDE  0E02               	movlw	2
 16455  012BE0  0012               	return	
 16456  012BE2                     l10540:
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;scdm.c: 71:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 16460  012BE2  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16461  012BE4  0D05               	mullw	5
 16462  012BE6  006F FFCC  F079    	movff	prodl,??__cli_interpret_cmd
 16463  012BEC  006F FFD0  F07A    	movff	prodh,??__cli_interpret_cmd+1
 16464  012BF2  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16465  012BF8  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16466  012BFE  006F FF78  F07B    	movff	postinc2,??__cli_interpret_cmd+2
 16467  012C04  006F FF74  F07C    	movff	postdec2,??__cli_interpret_cmd+3
 16468  012C0A  5179               	movf	??__cli_interpret_cmd& (0+255),w,b
 16469  012C0C  257B               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 16470  012C0E  6ED9               	movwf	fsr2l,c
 16471  012C10  517A               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 16472  012C12  217C               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 16473  012C14  6EDA               	movwf	fsr2h,c
 16474  012C16  006F FF78  F062    	movff	postinc2,strncmp@_l
 16475  012C1C  006F FF74  F063    	movff	postdec2,strncmp@_l+1
 16476  012C22  0E02               	movlw	2
 16477  012C24  2577               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 16478  012C26  6F64               	movwf	strncmp@_r& (0+255),b
 16479  012C28  0E00               	movlw	0
 16480  012C2A  2178               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 16481  012C2C  6F65               	movwf	(strncmp@_r+1)& (0+255),b
 16482  012C2E  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16483  012C30  0D05               	mullw	5
 16484  012C32  006F FFCC  F07D    	movff	prodl,??__cli_interpret_cmd+4
 16485  012C38  006F FFD0  F07E    	movff	prodh,??__cli_interpret_cmd+5
 16486  012C3E  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16487  012C44  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16488  012C4A  006F FF78  F07F    	movff	postinc2,??__cli_interpret_cmd+6
 16489  012C50  006F FF74  F080    	movff	postdec2,??__cli_interpret_cmd+7
 16490  012C56  517D               	movf	(??__cli_interpret_cmd+4)& (0+255),w,b
 16491  012C58  257F               	addwf	(??__cli_interpret_cmd+6)& (0+255),w,b
 16492  012C5A  6ED9               	movwf	fsr2l,c
 16493  012C5C  517E               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 16494  012C5E  2180               	addwfc	(??__cli_interpret_cmd+7)& (0+255),w,b
 16495  012C60  6EDA               	movwf	fsr2h,c
 16496  012C62  006F FF78  F020    	movff	postinc2,strlen@s
 16497  012C68  006F FF74  F021    	movff	postdec2,strlen@s+1
 16498  012C6E  EC02  F0A5         	call	_strlen	;wreg free
 16499  012C72  C020  F066         	movff	?_strlen,strncmp@n
 16500  012C76  C021  F067         	movff	?_strlen+1,strncmp@n+1
 16501  012C7A  EC59  F098         	call	_strncmp	;wreg free
 16502  012C7E  5162               	movf	?_strncmp& (0+255),w,b
 16503  012C80  1163               	iorwf	(?_strncmp+1)& (0+255),w,b
 16504  012C82  A4D8               	btfss	status,2,c
 16505  012C84  D028               	goto	l10544
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;scdm.c: 73:    a_ctx->cmds[i].fh((void *) a_ctx);
 16509  012C86  C077  F075         	movff	__cli_interpret_cmd@a_ctx,fh_p1@a_data
 16510  012C8A  C078  F076         	movff	__cli_interpret_cmd@a_ctx+1,fh_p1@a_data+1
 16511  012C8E  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16512  012C90  0D05               	mullw	5
 16513  012C92  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16514  012C98  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16515  012C9E  006F FF78  F079    	movff	postinc2,??__cli_interpret_cmd
 16516  012CA4  006F FF74  F07A    	movff	postdec2,??__cli_interpret_cmd+1
 16517  012CAA  50F3               	movf	243,w,c
 16518  012CAC  2779               	addwf	??__cli_interpret_cmd& (0+255),f,b
 16519  012CAE  50F4               	movf	244,w,c
 16520  012CB0  237A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 16521  012CB2  0E02               	movlw	2
 16522  012CB4  2579               	addwf	??__cli_interpret_cmd& (0+255),w,b
 16523  012CB6  6ED9               	movwf	fsr2l,c
 16524  012CB8  0E00               	movlw	0
 16525  012CBA  217A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 16526  012CBC  6EDA               	movwf	fsr2h,c
 16527  012CBE  D801               	call	u10208
 16528  012CC0  D028               	goto	u10210
 16529  012CC2                     u10208:
 16530  012CC2  0005               	push	
 16531  012CC4  6EFA               	movwf	pclath,c
 16532  012CC6  50DE               	movf	postinc2,w,c
 16533  012CC8  6EFD               	movwf	tosl,c
 16534  012CCA  50DE               	movf	postinc2,w,c
 16535  012CCC  6EFE               	movwf	tosh,c
 16536  012CCE  50DE               	movf	postinc2,w,c
 16537  012CD0  6EFF               	movwf	tosu,c
 16538  012CD2  50FA               	movf	pclath,w,c
 16539  012CD4  0012               	return		;indir
 16540  012CD6                     l10544:
 16541                           
 16542                           ; BSR set to: 0
 16543                           ;scdm.c: 76:   i++;
 16544  012CD6  2B82               	incf	__cli_interpret_cmd@i& (0+255),f,b
 16545  012CD8                     l10546:
 16546                           
 16547                           ; BSR set to: 0
 16548                           ;scdm.c: 70:  while (a_ctx->cmds[i].fh) {
 16549  012CD8  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16550  012CDA  0D05               	mullw	5
 16551  012CDC  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16552  012CE2  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16553  012CE8  006F FF78  F079    	movff	postinc2,??__cli_interpret_cmd
 16554  012CEE  006F FF74  F07A    	movff	postdec2,??__cli_interpret_cmd+1
 16555  012CF4  50F3               	movf	243,w,c
 16556  012CF6  2779               	addwf	??__cli_interpret_cmd& (0+255),f,b
 16557  012CF8  50F4               	movf	244,w,c
 16558  012CFA  237A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 16559  012CFC  0E02               	movlw	2
 16560  012CFE  2579               	addwf	??__cli_interpret_cmd& (0+255),w,b
 16561  012D00  6ED9               	movwf	fsr2l,c
 16562  012D02  0E00               	movlw	0
 16563  012D04  217A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 16564  012D06  6EDA               	movwf	fsr2h,c
 16565  012D08  50DE               	movf	postinc2,w,c
 16566  012D0A  10DE               	iorwf	postinc2,w,c
 16567  012D0C  10DE               	iorwf	postinc2,w,c
 16568  012D0E  A4D8               	btfss	status,2,c
 16569  012D10  D768               	goto	l10540
 16570  012D12                     u10210:
 16571                           
 16572                           ;scdm.c: 79:  if (!a_ctx->cmds[i].fh) {
 16573  012D12  0100               	movlb	0	; () banked
 16574  012D14  5182               	movf	__cli_interpret_cmd@i& (0+255),w,b
 16575  012D16  0D05               	mullw	5
 16576  012D18  0060  F1DF  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 16577  012D1E  0060  F1E3  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 16578  012D24  006F FF78  F079    	movff	postinc2,??__cli_interpret_cmd
 16579  012D2A  006F FF74  F07A    	movff	postdec2,??__cli_interpret_cmd+1
 16580  012D30  50F3               	movf	243,w,c
 16581  012D32  2779               	addwf	??__cli_interpret_cmd& (0+255),f,b
 16582  012D34  50F4               	movf	244,w,c
 16583  012D36  237A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 16584  012D38  0E02               	movlw	2
 16585  012D3A  2579               	addwf	??__cli_interpret_cmd& (0+255),w,b
 16586  012D3C  6ED9               	movwf	fsr2l,c
 16587  012D3E  0E00               	movlw	0
 16588  012D40  217A               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 16589  012D42  6EDA               	movwf	fsr2h,c
 16590  012D44  50DE               	movf	postinc2,w,c
 16591  012D46  10DE               	iorwf	postinc2,w,c
 16592  012D48  10DE               	iorwf	postinc2,w,c
 16593  012D4A  A4D8               	btfss	status,2,c
 16594  012D4C  D002               	goto	l1575
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;scdm.c: 80:   ret = E_CMD_NOT_FOUND;
 16598  012D4E  0E01               	movlw	1
 16599  012D50  6F81               	movwf	__cli_interpret_cmd@ret& (0+255),b
 16600  012D52                     l1575:
 16601                           
 16602                           ; BSR set to: 0
 16603                           ;scdm.c: 83:  return ret;
 16604  012D52  5181               	movf	__cli_interpret_cmd@ret& (0+255),w,b
 16605                           
 16606                           ; BSR set to: 0
 16607  012D54  0012               	return		;funcret
 16608  012D56                     __end_of__cli_interpret_cmd:
 16609                           	callstack 0
 16610                           
 16611 ;; *************** function _strncmp *****************
 16612 ;; Defined at:
 16613 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 16614 ;; Parameters:    Size  Location     Type
 16615 ;;  _l              2    2[BANK0 ] PTR const unsigned char 
 16616 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_28(3), STR_27(3), 
 16617 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 16618 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(23), 
 16619 ;;		 -> STR_18(29), STR_17(24), STR_16(24), STR_15(153), 
 16620 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
 16621 ;;  _r              2    4[BANK0 ] PTR const unsigned char 
 16622 ;;		 -> cli_ctx.cmd(128), STR_45(4), STR_40(3), cli_ctx(131), 
 16623 ;;  n               2    6[BANK0 ] unsigned int 
 16624 ;; Auto vars:     Size  Location     Type
 16625 ;;  r               2   12[BANK0 ] PTR const unsigned char 
 16626 ;;		 -> cli_ctx.cmd(128), STR_45(4), STR_40(3), cli_ctx(131), 
 16627 ;;  l               2   10[BANK0 ] PTR const unsigned char 
 16628 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_28(3), STR_27(3), 
 16629 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 16630 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(23), 
 16631 ;;		 -> STR_18(29), STR_17(24), STR_16(24), STR_15(153), 
 16632 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  2    2[BANK0 ] int 
 16635 ;; Registers used:
 16636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 16637 ;; Tracked objects:
 16638 ;;		On entry : 3F/0
 16639 ;;		On exit  : 3F/0
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16642 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16643 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16645 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16646 ;;Total ram usage:       12 bytes
 16647 ;; Hardware stack levels used: 1
 16648 ;; Hardware stack levels required when called: 7
 16649 ;; This function calls:
 16650 ;;		Nothing
 16651 ;; This function is called by:
 16652 ;;		__cli_interpret_cmd
 16653 ;;		_vfpfcnvrt
 16654 ;; This function uses a non-reentrant model
 16655 ;;
 16656                           
 16657                           	psect	text63
 16658  0130B2                     __ptext63:
 16659                           	callstack 0
 16660  0130B2                     _strncmp:
 16661                           	callstack 20
 16662                           
 16663                           ; BSR set to: 0
 16664                           
 16665                           ; BSR set to: 0
 16666                           ;incstack = 0
 16667  0130B2  C062  F06A         	movff	strncmp@_l,strncmp@l
 16668  0130B6  C063  F06B         	movff	strncmp@_l+1,strncmp@l+1
 16669  0130BA  C064  F06C         	movff	strncmp@_r,strncmp@r
 16670  0130BE  C065  F06D         	movff	strncmp@_r+1,strncmp@r+1
 16671  0130C2  0766               	decf	strncmp@n& (0+255),f,b
 16672  0130C4  A0D8               	btfss	status,0,c
 16673  0130C6  0767               	decf	(strncmp@n+1)& (0+255),f,b
 16674  0130C8  2966               	incf	strncmp@n& (0+255),w,b
 16675  0130CA  E110               	bnz	l9576
 16676  0130CC  2967               	incf	(strncmp@n+1)& (0+255),w,b
 16677  0130CE  A4D8               	btfss	status,2,c
 16678  0130D0  D00D               	goto	l9576
 16679                           
 16680                           ; BSR set to: 0
 16681  0130D2  0E00               	movlw	0
 16682  0130D4  6F63               	movwf	(?_strncmp+1)& (0+255),b
 16683  0130D6  0E00               	movlw	0
 16684  0130D8  6F62               	movwf	?_strncmp& (0+255),b
 16685  0130DA  0012               	return	
 16686  0130DC                     l9574:
 16687  0130DC  0100               	movlb	0	; () banked
 16688  0130DE  4B6A               	infsnz	strncmp@l& (0+255),f,b
 16689  0130E0  2B6B               	incf	(strncmp@l+1)& (0+255),f,b
 16690  0130E2  4B6C               	infsnz	strncmp@r& (0+255),f,b
 16691  0130E4  2B6D               	incf	(strncmp@r+1)& (0+255),f,b
 16692  0130E6  0766               	decf	strncmp@n& (0+255),f,b
 16693  0130E8  A0D8               	btfss	status,0,c
 16694  0130EA  0767               	decf	(strncmp@n+1)& (0+255),f,b
 16695  0130EC                     l9576:
 16696                           
 16697                           ; BSR set to: 0
 16698  0130EC  0060  F1AB  FFF6   	movff	strncmp@l,tblptrl
 16699  0130F2  0060  F1AF  FFF7   	movff	strncmp@l+1,tblptrh
 16700  0130F8  0E00               	movlw	low (__mediumconst shr (0+16))
 16701  0130FA  6EF8               	movwf	tblptru,c
 16702  0130FC  0E1F               	movlw	(high __ramtop+-1)
 16703  0130FE  64F7               	cpfsgt	tblptrh,c
 16704  013100  D003               	bra	u8977
 16705  013102  0008               	tblrd		*
 16706  013104  50F5               	movf	tablat,w,c
 16707  013106  D007               	bra	u8970
 16708  013108                     u8977:
 16709  013108  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16710  01310E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16711  013114  50E7               	movf	indf1,w,c
 16712  013116                     u8970:
 16713  013116  0900               	iorlw	0
 16714  013118  B4D8               	btfsc	status,2,c
 16715  01311A  D04C               	goto	u9030
 16716  01311C  0060  F1B3  FFF6   	movff	strncmp@r,tblptrl
 16717  013122  0060  F1B7  FFF7   	movff	strncmp@r+1,tblptrh
 16718  013128  0E00               	movlw	low (__mediumconst shr (0+16))
 16719  01312A  6EF8               	movwf	tblptru,c
 16720  01312C  0E1F               	movlw	(high __ramtop+-1)
 16721  01312E  64F7               	cpfsgt	tblptrh,c
 16722  013130  D003               	bra	u8997
 16723  013132  0008               	tblrd		*
 16724  013134  50F5               	movf	tablat,w,c
 16725  013136  D007               	bra	u8990
 16726  013138                     u8997:
 16727  013138  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16728  01313E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16729  013144  50E7               	movf	indf1,w,c
 16730  013146                     u8990:
 16731  013146  0900               	iorlw	0
 16732  013148  B4D8               	btfsc	status,2,c
 16733  01314A  D034               	goto	u9030
 16734  01314C  0100               	movlb	0	; () banked
 16735  01314E  5166               	movf	strncmp@n& (0+255),w,b
 16736  013150  1167               	iorwf	(strncmp@n+1)& (0+255),w,b
 16737  013152  B4D8               	btfsc	status,2,c
 16738  013154  D02F               	goto	u9030
 16739                           
 16740                           ; BSR set to: 0
 16741  013156  0060  F1B3  FFF6   	movff	strncmp@r,tblptrl
 16742  01315C  0060  F1B7  FFF7   	movff	strncmp@r+1,tblptrh
 16743  013162  0E00               	movlw	low (__mediumconst shr (0+16))
 16744  013164  6EF8               	movwf	tblptru,c
 16745  013166  0E1F               	movlw	(high __ramtop+-1)
 16746  013168  64F7               	cpfsgt	tblptrh,c
 16747  01316A  D003               	bra	u9027
 16748  01316C  0008               	tblrd		*
 16749  01316E  50F5               	movf	tablat,w,c
 16750  013170  D007               	bra	u9020
 16751  013172                     u9027:
 16752  013172  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16753  013178  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16754  01317E  50E7               	movf	indf1,w,c
 16755  013180                     u9020:
 16756  013180  0100               	movlb	0	; () banked
 16757  013182  6F68               	movwf	??_strncmp& (0+255),b
 16758  013184  0060  F1AB  FFF6   	movff	strncmp@l,tblptrl
 16759  01318A  0060  F1AF  FFF7   	movff	strncmp@l+1,tblptrh
 16760  013190  0E00               	movlw	low (__mediumconst shr (0+16))
 16761  013192  6EF8               	movwf	tblptru,c
 16762  013194  0E1F               	movlw	(high __ramtop+-1)
 16763  013196  64F7               	cpfsgt	tblptrh,c
 16764  013198  D003               	bra	u9037
 16765  01319A  0008               	tblrd		*
 16766  01319C  50F5               	movf	tablat,w,c
 16767  01319E  D007               	bra	u9035
 16768  0131A0                     u9037:
 16769  0131A0  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16770  0131A6  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16771  0131AC  50E7               	movf	indf1,w,c
 16772  0131AE                     u9035:
 16773  0131AE  1968               	xorwf	??_strncmp& (0+255),w,b
 16774  0131B0  B4D8               	btfsc	status,2,c
 16775  0131B2  D794               	goto	l9574
 16776  0131B4                     u9030:
 16777  0131B4  0060  F1AB  FFF6   	movff	strncmp@l,tblptrl
 16778  0131BA  0060  F1AF  FFF7   	movff	strncmp@l+1,tblptrh
 16779  0131C0  0E00               	movlw	low (__mediumconst shr (0+16))
 16780  0131C2  6EF8               	movwf	tblptru,c
 16781  0131C4  0E1F               	movlw	(high __ramtop+-1)
 16782  0131C6  64F7               	cpfsgt	tblptrh,c
 16783  0131C8  D003               	bra	u9047
 16784  0131CA  0008               	tblrd		*
 16785  0131CC  50F5               	movf	tablat,w,c
 16786  0131CE  D007               	bra	u9040
 16787  0131D0                     u9047:
 16788  0131D0  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16789  0131D6  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16790  0131DC  50E7               	movf	indf1,w,c
 16791  0131DE                     u9040:
 16792  0131DE  0100               	movlb	0	; () banked
 16793  0131E0  6F68               	movwf	??_strncmp& (0+255),b
 16794  0131E2  0060  F1B3  FFF6   	movff	strncmp@r,tblptrl
 16795  0131E8  0060  F1B7  FFF7   	movff	strncmp@r+1,tblptrh
 16796  0131EE  0E00               	movlw	low (__mediumconst shr (0+16))
 16797  0131F0  6EF8               	movwf	tblptru,c
 16798  0131F2  0E1F               	movlw	(high __ramtop+-1)
 16799  0131F4  64F7               	cpfsgt	tblptrh,c
 16800  0131F6  D003               	bra	u9057
 16801  0131F8  0008               	tblrd		*
 16802  0131FA  50F5               	movf	tablat,w,c
 16803  0131FC  D007               	bra	u9050
 16804  0131FE                     u9057:
 16805  0131FE  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16806  013204  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16807  01320A  50E7               	movf	indf1,w,c
 16808  01320C                     u9050:
 16809  01320C  0100               	movlb	0	; () banked
 16810  01320E  6F69               	movwf	(??_strncmp+1)& (0+255),b
 16811  013210  5169               	movf	(??_strncmp+1)& (0+255),w,b
 16812  013212  5D68               	subwf	??_strncmp& (0+255),w,b
 16813  013214  6F62               	movwf	?_strncmp& (0+255),b
 16814  013216  6B63               	clrf	(?_strncmp+1)& (0+255),b
 16815  013218  A0D8               	btfss	status,0,c
 16816  01321A  0763               	decf	(?_strncmp+1)& (0+255),f,b
 16817                           
 16818                           ; BSR set to: 0
 16819  01321C  0012               	return		;funcret
 16820  01321E                     __end_of_strncmp:
 16821                           	callstack 0
 16822                           
 16823 ;; *************** function _strlen *****************
 16824 ;; Defined at:
 16825 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;  s               2   31[COMRAM] PTR const unsigned char 
 16828 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 16829 ;;		 -> ?_sprintf(2), NULL(0), STR_28(3), STR_27(3), 
 16830 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 16831 ;;		 -> STR_22(3), STR_21(3), STR_20(3), cli_ctx(131), 
 16832 ;;		 -> build_version(14), buff1(255), STR_2(9), STR_1(12), 
 16833 ;; Auto vars:     Size  Location     Type
 16834 ;;  a               2    0[BANK0 ] PTR const unsigned char 
 16835 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 16836 ;;		 -> ?_sprintf(2), NULL(0), STR_28(3), STR_27(3), 
 16837 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 16838 ;;		 -> STR_22(3), STR_21(3), STR_20(3), cli_ctx(131), 
 16839 ;;		 -> build_version(14), buff1(255), STR_2(9), STR_1(12), 
 16840 ;; Return value:  Size  Location     Type
 16841 ;;                  2   31[COMRAM] unsigned int 
 16842 ;; Registers used:
 16843 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 16844 ;; Tracked objects:
 16845 ;;		On entry : 2/0
 16846 ;;		On exit  : 3F/0
 16847 ;;		Unchanged: 0/0
 16848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16850 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16852 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16853 ;;Total ram usage:        4 bytes
 16854 ;; Hardware stack levels used: 1
 16855 ;; Hardware stack levels required when called: 7
 16856 ;; This function calls:
 16857 ;;		Nothing
 16858 ;; This function is called by:
 16859 ;;		__cli_interpret_cmd
 16860 ;;		_eaDogM_WriteString
 16861 ;;		_pad
 16862 ;;		_stoa
 16863 ;; This function uses a non-reentrant model
 16864 ;;
 16865                           
 16866                           	psect	text64
 16867  014A04                     __ptext64:
 16868                           	callstack 0
 16869  014A04                     _strlen:
 16870                           	callstack 18
 16871                           
 16872                           ; BSR set to: 0
 16873                           ;incstack = 0
 16874  014A04  C020  F060         	movff	strlen@s,strlen@a
 16875  014A08  C021  F061         	movff	strlen@s+1,strlen@a+1
 16876  014A0C  D002               	goto	l8696
 16877  014A0E                     l8694:
 16878  014A0E  4A20               	infsnz	strlen@s^0,f,c
 16879  014A10  2A21               	incf	(strlen@s+1)^0,f,c
 16880  014A12                     l8696:
 16881  014A12  0060  F083  FFF6   	movff	strlen@s,tblptrl
 16882  014A18  0060  F087  FFF7   	movff	strlen@s+1,tblptrh
 16883  014A1E  0E00               	movlw	low (__mediumconst shr (0+16))
 16884  014A20  6EF8               	movwf	tblptru,c
 16885  014A22  0E1F               	movlw	(high __ramtop+-1)
 16886  014A24  64F7               	cpfsgt	tblptrh,c
 16887  014A26  D003               	bra	u7387
 16888  014A28  0008               	tblrd		*
 16889  014A2A  50F5               	movf	tablat,w,c
 16890  014A2C  D007               	bra	u7380
 16891  014A2E                     u7387:
 16892  014A2E  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16893  014A34  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16894  014A3A  50E7               	movf	indf1,w,c
 16895  014A3C                     u7380:
 16896  014A3C  0900               	iorlw	0
 16897  014A3E  A4D8               	btfss	status,2,c
 16898  014A40  D7E6               	goto	l8694
 16899  014A42  0100               	movlb	0	; () banked
 16900  014A44  5160               	movf	strlen@a& (0+255),w,b
 16901  014A46  5C20               	subwf	strlen@s^0,w,c
 16902  014A48  6E20               	movwf	?_strlen^0,c
 16903  014A4A  5161               	movf	(strlen@a+1)& (0+255),w,b
 16904  014A4C  5821               	subwfb	(strlen@s+1)^0,w,c
 16905  014A4E  6E21               	movwf	(?_strlen+1)^0,c
 16906                           
 16907                           ; BSR set to: 0
 16908  014A50  0012               	return		;funcret
 16909  014A52                     __end_of_strlen:
 16910                           	callstack 0
 16911                           
 16912 ;; *************** function _fh_p1 *****************
 16913 ;; Defined at:
 16914 ;;		line 209 in file "main.c"
 16915 ;; Parameters:    Size  Location     Type
 16916 ;;  a_data          2   21[BANK0 ] PTR void 
 16917 ;;		 -> cli_ctx(131), 
 16918 ;; Auto vars:     Size  Location     Type
 16919 ;;		None
 16920 ;; Return value:  Size  Location     Type
 16921 ;;                  1    wreg      void 
 16922 ;; Registers used:
 16923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16924 ;; Tracked objects:
 16925 ;;		On entry : 3F/0
 16926 ;;		On exit  : 0/0
 16927 ;;		Unchanged: 0/0
 16928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16932 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16933 ;;Total ram usage:        2 bytes
 16934 ;; Hardware stack levels used: 1
 16935 ;; Hardware stack levels required when called: 12
 16936 ;; This function calls:
 16937 ;;		_DATAEE_WriteByte
 16938 ;;		_puts
 16939 ;; This function is called by:
 16940 ;;		__cli_interpret_cmd
 16941 ;; This function uses a non-reentrant model
 16942 ;;
 16943                           
 16944                           	psect	text65
 16945  01531A                     __ptext65:
 16946                           	callstack 0
 16947  01531A                     _fh_p1:
 16948                           	callstack 16
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;main.c: 209: void fh_p1(void *a_data);main.c: 210: {;main.c: 211:  puts("\r\n ACCEL Sup
      +                          pression Supply \r\n");
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;incstack = 0
 16955  01531A  0E8B               	movlw	low STR_11
 16956  01531C  6F72               	movwf	puts@s& (0+255),b
 16957  01531E  0EFE               	movlw	high STR_11
 16958  015320  6F73               	movwf	(puts@s+1)& (0+255),b
 16959  015322  ECE6  F0A7         	call	_puts	;wreg free
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;main.c: 212:  ps_type_index = 1;
 16963  015326  0E01               	movlw	1
 16964  015328  6E36               	movwf	_ps_type_index^0,c	;volatile
 16965                           
 16966                           ; BSR set to: 0
 16967                           ;main.c: 213:  DATAEE_WriteByte(0x10, ps_type_index);
 16968  01532A  0E00               	movlw	0
 16969  01532C  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 16970  01532E  0E10               	movlw	16
 16971  015330  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 16972  015332  C036  F062         	movff	_ps_type_index,DATAEE_WriteByte@bData	;volatile
 16973  015336  ECCF  F0A6         	call	_DATAEE_WriteByte	;wreg free
 16974  01533A  0012               	return		;funcret
 16975  01533C                     __end_of_fh_p1:
 16976                           	callstack 0
 16977                           
 16978 ;; *************** function _fh_p0 *****************
 16979 ;; Defined at:
 16980 ;;		line 202 in file "main.c"
 16981 ;; Parameters:    Size  Location     Type
 16982 ;;  a_data          2   21[BANK0 ] PTR void 
 16983 ;;		 -> cli_ctx(131), 
 16984 ;; Auto vars:     Size  Location     Type
 16985 ;;		None
 16986 ;; Return value:  Size  Location     Type
 16987 ;;                  1    wreg      void 
 16988 ;; Registers used:
 16989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16990 ;; Tracked objects:
 16991 ;;		On entry : 3F/0
 16992 ;;		On exit  : 0/0
 16993 ;;		Unchanged: 0/0
 16994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16995 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16999 ;;Total ram usage:        2 bytes
 17000 ;; Hardware stack levels used: 1
 17001 ;; Hardware stack levels required when called: 12
 17002 ;; This function calls:
 17003 ;;		_DATAEE_WriteByte
 17004 ;;		_puts
 17005 ;; This function is called by:
 17006 ;;		__cli_interpret_cmd
 17007 ;; This function uses a non-reentrant model
 17008 ;;
 17009                           
 17010                           	psect	text66
 17011  01533C                     __ptext66:
 17012                           	callstack 0
 17013  01533C                     _fh_p0:
 17014                           	callstack 16
 17015                           
 17016                           ; BSR set to: 0
 17017                           ;main.c: 202: void fh_p0(void *a_data);main.c: 203: {;main.c: 204:  puts("\r\n EXT Suppr
      +                          ession Supply \r\n");
 17018                           
 17019                           ;incstack = 0
 17020  01533C  0EAA               	movlw	low STR_10
 17021  01533E  6F72               	movwf	puts@s& (0+255),b
 17022  015340  0EFE               	movlw	high STR_10
 17023  015342  6F73               	movwf	(puts@s+1)& (0+255),b
 17024  015344  ECE6  F0A7         	call	_puts	;wreg free
 17025                           
 17026                           ; BSR set to: 0
 17027                           ;main.c: 205:  ps_type_index = 0;
 17028  015348  0E00               	movlw	0
 17029  01534A  6E36               	movwf	_ps_type_index^0,c	;volatile
 17030                           
 17031                           ; BSR set to: 0
 17032                           ;main.c: 206:  DATAEE_WriteByte(0x10, ps_type_index);
 17033  01534C  0E00               	movlw	0
 17034  01534E  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 17035  015350  0E10               	movlw	16
 17036  015352  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 17037  015354  C036  F062         	movff	_ps_type_index,DATAEE_WriteByte@bData	;volatile
 17038  015358  ECCF  F0A6         	call	_DATAEE_WriteByte	;wreg free
 17039  01535C  0012               	return		;funcret
 17040  01535E                     __end_of_fh_p0:
 17041                           	callstack 0
 17042                           
 17043 ;; *************** function _fh_pl *****************
 17044 ;; Defined at:
 17045 ;;		line 195 in file "main.c"
 17046 ;; Parameters:    Size  Location     Type
 17047 ;;  a_data          2   21[BANK0 ] PTR void 
 17048 ;;		 -> cli_ctx(131), 
 17049 ;; Auto vars:     Size  Location     Type
 17050 ;;		None
 17051 ;; Return value:  Size  Location     Type
 17052 ;;                  1    wreg      void 
 17053 ;; Registers used:
 17054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17055 ;; Tracked objects:
 17056 ;;		On entry : 3F/0
 17057 ;;		On exit  : 3F/1
 17058 ;;		Unchanged: 0/0
 17059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17063 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17064 ;;Total ram usage:        2 bytes
 17065 ;; Hardware stack levels used: 1
 17066 ;; Hardware stack levels required when called: 12
 17067 ;; This function calls:
 17068 ;;		_puts
 17069 ;; This function is called by:
 17070 ;;		__cli_interpret_cmd
 17071 ;; This function uses a non-reentrant model
 17072 ;;
 17073                           
 17074                           	psect	text67
 17075  0154DC                     __ptext67:
 17076                           	callstack 0
 17077  0154DC                     _fh_pl:
 17078                           	callstack 16
 17079                           
 17080                           ; BSR set to: 0
 17081                           ;main.c: 195: void fh_pl(void *a_data);main.c: 196: {;main.c: 197:  puts("\r\n Voltage L
      +                          OW \r\n");
 17082                           
 17083                           ;incstack = 0
 17084  0154DC  0E7D               	movlw	low STR_9
 17085  0154DE  6F72               	movwf	puts@s& (0+255),b
 17086  0154E0  0EFF               	movlw	high STR_9
 17087  0154E2  6F73               	movwf	(puts@s+1)& (0+255),b
 17088  0154E4  ECE6  F0A7         	call	_puts	;wreg free
 17089                           
 17090                           ; BSR set to: 0
 17091                           ;main.c: 198:  roll_max = 2;
 17092  0154E8  0E02               	movlw	2
 17093  0154EA  0101               	movlb	1	; () banked
 17094  0154EC  6FB0               	movwf	_roll_max& (0+255),b
 17095                           
 17096                           ; BSR set to: 1
 17097                           ;main.c: 199:  static_ps = 3;
 17098  0154EE  0E03               	movlw	3
 17099  0154F0  6FAF               	movwf	_static_ps& (0+255),b
 17100                           
 17101                           ; BSR set to: 1
 17102  0154F2  0012               	return		;funcret
 17103  0154F4                     __end_of_fh_pl:
 17104                           	callstack 0
 17105                           
 17106 ;; *************** function _fh_pd *****************
 17107 ;; Defined at:
 17108 ;;		line 188 in file "main.c"
 17109 ;; Parameters:    Size  Location     Type
 17110 ;;  a_data          2   21[BANK0 ] PTR void 
 17111 ;;		 -> cli_ctx(131), 
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;		None
 17114 ;; Return value:  Size  Location     Type
 17115 ;;                  1    wreg      void 
 17116 ;; Registers used:
 17117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17118 ;; Tracked objects:
 17119 ;;		On entry : 3F/0
 17120 ;;		On exit  : 3F/1
 17121 ;;		Unchanged: 0/0
 17122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17127 ;;Total ram usage:        2 bytes
 17128 ;; Hardware stack levels used: 1
 17129 ;; Hardware stack levels required when called: 12
 17130 ;; This function calls:
 17131 ;;		_puts
 17132 ;; This function is called by:
 17133 ;;		__cli_interpret_cmd
 17134 ;; This function uses a non-reentrant model
 17135 ;;
 17136                           
 17137                           	psect	text68
 17138  0154F4                     __ptext68:
 17139                           	callstack 0
 17140  0154F4                     _fh_pd:
 17141                           	callstack 16
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;main.c: 188: void fh_pd(void *a_data);main.c: 189: {;main.c: 190:  puts("\r\n Voltage D
      +                          OWN \r\n");
 17145                           
 17146                           ; BSR set to: 1
 17147                           ;incstack = 0
 17148  0154F4  0E46               	movlw	low STR_8
 17149  0154F6  6F72               	movwf	puts@s& (0+255),b
 17150  0154F8  0EFF               	movlw	high STR_8
 17151  0154FA  6F73               	movwf	(puts@s+1)& (0+255),b
 17152  0154FC  ECE6  F0A7         	call	_puts	;wreg free
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;main.c: 191:  roll_max = 19 - 12;
 17156  015500  0E07               	movlw	7
 17157  015502  0101               	movlb	1	; () banked
 17158  015504  6FB0               	movwf	_roll_max& (0+255),b
 17159                           
 17160                           ; BSR set to: 1
 17161                           ;main.c: 192:  static_ps = 20 - 12;
 17162  015506  0E08               	movlw	8
 17163  015508  6FAF               	movwf	_static_ps& (0+255),b
 17164                           
 17165                           ; BSR set to: 1
 17166  01550A  0012               	return		;funcret
 17167  01550C                     __end_of_fh_pd:
 17168                           	callstack 0
 17169                           
 17170 ;; *************** function _fh_pp *****************
 17171 ;; Defined at:
 17172 ;;		line 175 in file "main.c"
 17173 ;; Parameters:    Size  Location     Type
 17174 ;;  a_data          2   21[BANK0 ] PTR void 
 17175 ;;		 -> cli_ctx(131), 
 17176 ;; Auto vars:     Size  Location     Type
 17177 ;;		None
 17178 ;; Return value:  Size  Location     Type
 17179 ;;                  1    wreg      void 
 17180 ;; Registers used:
 17181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17182 ;; Tracked objects:
 17183 ;;		On entry : 3F/0
 17184 ;;		On exit  : 3F/0
 17185 ;;		Unchanged: 0/0
 17186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17191 ;;Total ram usage:        2 bytes
 17192 ;; Hardware stack levels used: 1
 17193 ;; Hardware stack levels required when called: 12
 17194 ;; This function calls:
 17195 ;;		_puts
 17196 ;; This function is called by:
 17197 ;;		__cli_interpret_cmd
 17198 ;; This function uses a non-reentrant model
 17199 ;;
 17200                           
 17201                           	psect	text69
 17202  01556A                     __ptext69:
 17203                           	callstack 0
 17204  01556A                     _fh_pp:
 17205                           	callstack 16
 17206                           
 17207                           ; BSR set to: 0
 17208                           ;main.c: 175: void fh_pp(void *a_data);main.c: 176: {;main.c: 177:  puts("\r\n Voltage O
      +                          N : Set\r\n");
 17209                           
 17210                           ; BSR set to: 1
 17211                           ;incstack = 0
 17212  01556A  0E30               	movlw	low STR_6
 17213  01556C  6F72               	movwf	puts@s& (0+255),b
 17214  01556E  0EFF               	movlw	high STR_6
 17215  015570  6F73               	movwf	(puts@s+1)& (0+255),b
 17216  015572  ECE6  F0A7         	call	_puts	;wreg free
 17217                           
 17218                           ; BSR set to: 0
 17219                           ;main.c: 178:  mode = static_mode;
 17220  015576  0E02               	movlw	2
 17221  015578  6E37               	movwf	_mode^0,c
 17222                           
 17223                           ; BSR set to: 0
 17224  01557A  0012               	return		;funcret
 17225  01557C                     __end_of_fh_pp:
 17226                           	callstack 0
 17227                           
 17228 ;; *************** function _fh_po *****************
 17229 ;; Defined at:
 17230 ;;		line 169 in file "main.c"
 17231 ;; Parameters:    Size  Location     Type
 17232 ;;  a_data          2   21[BANK0 ] PTR void 
 17233 ;;		 -> cli_ctx(131), 
 17234 ;; Auto vars:     Size  Location     Type
 17235 ;;		None
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  1    wreg      void 
 17238 ;; Registers used:
 17239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17240 ;; Tracked objects:
 17241 ;;		On entry : 3F/0
 17242 ;;		On exit  : 3F/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17245 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17248 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17249 ;;Total ram usage:        2 bytes
 17250 ;; Hardware stack levels used: 1
 17251 ;; Hardware stack levels required when called: 12
 17252 ;; This function calls:
 17253 ;;		_puts
 17254 ;; This function is called by:
 17255 ;;		__cli_interpret_cmd
 17256 ;; This function uses a non-reentrant model
 17257 ;;
 17258                           
 17259                           	psect	text70
 17260  01557C                     __ptext70:
 17261                           	callstack 0
 17262  01557C                     _fh_po:
 17263                           	callstack 16
 17264                           
 17265                           ; BSR set to: 0
 17266                           ;main.c: 169: void fh_po(void *a_data);main.c: 170: {;main.c: 171:  puts("\r\n Voltage O
      +                          FF \r\n");
 17267                           
 17268                           ; BSR set to: 0
 17269                           ;incstack = 0
 17270  01557C  0E59               	movlw	low STR_5
 17271  01557E  6F72               	movwf	puts@s& (0+255),b
 17272  015580  0EFF               	movlw	high STR_5
 17273  015582  6F73               	movwf	(puts@s+1)& (0+255),b
 17274  015584  ECE6  F0A7         	call	_puts	;wreg free
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;main.c: 172:  mode = off_mode;
 17278  015588  0E00               	movlw	0
 17279  01558A  6E37               	movwf	_mode^0,c
 17280                           
 17281                           ; BSR set to: 0
 17282  01558C  0012               	return		;funcret
 17283  01558E                     __end_of_fh_po:
 17284                           	callstack 0
 17285                           
 17286 ;; *************** function _fh_ps *****************
 17287 ;; Defined at:
 17288 ;;		line 161 in file "main.c"
 17289 ;; Parameters:    Size  Location     Type
 17290 ;;  a_data          2   21[BANK0 ] PTR void 
 17291 ;;		 -> cli_ctx(131), 
 17292 ;; Auto vars:     Size  Location     Type
 17293 ;;		None
 17294 ;; Return value:  Size  Location     Type
 17295 ;;                  1    wreg      void 
 17296 ;; Registers used:
 17297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17298 ;; Tracked objects:
 17299 ;;		On entry : 3F/0
 17300 ;;		On exit  : 3F/1
 17301 ;;		Unchanged: 0/0
 17302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17306 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17307 ;;Total ram usage:        2 bytes
 17308 ;; Hardware stack levels used: 1
 17309 ;; Hardware stack levels required when called: 12
 17310 ;; This function calls:
 17311 ;;		_puts
 17312 ;; This function is called by:
 17313 ;;		__cli_interpret_cmd
 17314 ;; This function uses a non-reentrant model
 17315 ;;
 17316                           
 17317                           	psect	text71
 17318  015458                     __ptext71:
 17319                           	callstack 0
 17320  015458                     _fh_ps:
 17321                           	callstack 16
 17322                           
 17323                           ; BSR set to: 0
 17324                           ;main.c: 161: void fh_ps(void *a_data);main.c: 162: {;main.c: 163:  puts("\r\n Steady VD
      +                          C ON : Default\r\n");
 17325                           
 17326                           ; BSR set to: 0
 17327                           ;incstack = 0
 17328  015458  0EC7               	movlw	low STR_4
 17329  01545A  6F72               	movwf	puts@s& (0+255),b
 17330  01545C  0EFE               	movlw	high STR_4
 17331  01545E  6F73               	movwf	(puts@s+1)& (0+255),b
 17332  015460  ECE6  F0A7         	call	_puts	;wreg free
 17333                           
 17334                           ; BSR set to: 0
 17335                           ;main.c: 164:  roll_max = 19;
 17336  015464  0E13               	movlw	19
 17337  015466  0101               	movlb	1	; () banked
 17338  015468  6FB0               	movwf	_roll_max& (0+255),b
 17339                           
 17340                           ; BSR set to: 1
 17341                           ;main.c: 165:  static_ps = 20;
 17342  01546A  0E14               	movlw	20
 17343  01546C  6FAF               	movwf	_static_ps& (0+255),b
 17344                           
 17345                           ; BSR set to: 1
 17346                           ;main.c: 166:  mode = static_mode;
 17347  01546E  0E02               	movlw	2
 17348  015470  6E37               	movwf	_mode^0,c
 17349                           
 17350                           ; BSR set to: 1
 17351  015472  0012               	return		;funcret
 17352  015474                     __end_of_fh_ps:
 17353                           	callstack 0
 17354                           
 17355 ;; *************** function _fh_pr *****************
 17356 ;; Defined at:
 17357 ;;		line 154 in file "main.c"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;  a_data          2   21[BANK0 ] PTR void 
 17360 ;;		 -> cli_ctx(131), 
 17361 ;; Auto vars:     Size  Location     Type
 17362 ;;		None
 17363 ;; Return value:  Size  Location     Type
 17364 ;;                  1    wreg      void 
 17365 ;; Registers used:
 17366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17367 ;; Tracked objects:
 17368 ;;		On entry : 3F/0
 17369 ;;		On exit  : 3F/0
 17370 ;;		Unchanged: 0/0
 17371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17375 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17376 ;;Total ram usage:        2 bytes
 17377 ;; Hardware stack levels used: 1
 17378 ;; Hardware stack levels required when called: 12
 17379 ;; This function calls:
 17380 ;;		_puts
 17381 ;; This function is called by:
 17382 ;;		__cli_interpret_cmd
 17383 ;; This function uses a non-reentrant model
 17384 ;;
 17385                           
 17386                           	psect	text72
 17387  0153E0                     __ptext72:
 17388                           	callstack 0
 17389  0153E0                     _fh_pr:
 17390                           	callstack 16
 17391                           
 17392                           ; BSR set to: 0
 17393                           ;main.c: 154: void fh_pr(void *a_data);main.c: 155: {;main.c: 156:  puts((const char *) 
      +                          a_data);
 17394                           
 17395                           ; BSR set to: 1
 17396                           ;incstack = 0
 17397  0153E0  C075  F072         	movff	fh_pr@a_data,puts@s
 17398  0153E4  C076  F073         	movff	fh_pr@a_data+1,puts@s+1
 17399  0153E8  ECE6  F0A7         	call	_puts	;wreg free
 17400                           
 17401                           ;main.c: 157:  puts("\r\n Ramp VDC ON \r\n");
 17402  0153EC  0E6B               	movlw	low STR_3
 17403  0153EE  6F72               	movwf	puts@s& (0+255),b
 17404  0153F0  0EFF               	movlw	high STR_3
 17405  0153F2  6F73               	movwf	(puts@s+1)& (0+255),b
 17406  0153F4  ECE6  F0A7         	call	_puts	;wreg free
 17407                           
 17408                           ; BSR set to: 0
 17409                           ;main.c: 158:  mode = roll_mode;
 17410  0153F8  0E01               	movlw	1
 17411  0153FA  6E37               	movwf	_mode^0,c
 17412                           
 17413                           ; BSR set to: 0
 17414  0153FC  0012               	return		;funcret
 17415  0153FE                     __end_of_fh_pr:
 17416                           	callstack 0
 17417                           
 17418 ;; *************** function _fh_pu *****************
 17419 ;; Defined at:
 17420 ;;		line 181 in file "main.c"
 17421 ;; Parameters:    Size  Location     Type
 17422 ;;  a_data          2   21[BANK0 ] PTR void 
 17423 ;;		 -> cli_ctx(131), 
 17424 ;; Auto vars:     Size  Location     Type
 17425 ;;		None
 17426 ;; Return value:  Size  Location     Type
 17427 ;;                  1    wreg      void 
 17428 ;; Registers used:
 17429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17430 ;; Tracked objects:
 17431 ;;		On entry : 3F/0
 17432 ;;		On exit  : 3F/1
 17433 ;;		Unchanged: 0/0
 17434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17438 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17439 ;;Total ram usage:        2 bytes
 17440 ;; Hardware stack levels used: 1
 17441 ;; Hardware stack levels required when called: 12
 17442 ;; This function calls:
 17443 ;;		_puts
 17444 ;; This function is called by:
 17445 ;;		__cli_interpret_cmd
 17446 ;; This function uses a non-reentrant model
 17447 ;;
 17448                           
 17449                           	psect	text73
 17450  01550C                     __ptext73:
 17451                           	callstack 0
 17452  01550C                     _fh_pu:
 17453                           	callstack 16
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;main.c: 181: void fh_pu(void *a_data);main.c: 182: {;main.c: 183:  puts("\r\n Voltage U
      +                          P \r\n");
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;incstack = 0
 17460  01550C  0E8F               	movlw	low STR_7
 17461  01550E  6F72               	movwf	puts@s& (0+255),b
 17462  015510  0EFF               	movlw	high STR_7
 17463  015512  6F73               	movwf	(puts@s+1)& (0+255),b
 17464  015514  ECE6  F0A7         	call	_puts	;wreg free
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;main.c: 184:  roll_max = 19 + 12;
 17468  015518  0E1F               	movlw	31
 17469  01551A  0101               	movlb	1	; () banked
 17470  01551C  6FB0               	movwf	_roll_max& (0+255),b
 17471                           
 17472                           ; BSR set to: 1
 17473                           ;main.c: 185:  static_ps = 20 + 11;
 17474  01551E  0E1F               	movlw	31
 17475  015520  6FAF               	movwf	_static_ps& (0+255),b
 17476                           
 17477                           ; BSR set to: 1
 17478  015522  0012               	return		;funcret
 17479  015524                     __end_of_fh_pu:
 17480                           	callstack 0
 17481                           
 17482 ;; *************** function _puts *****************
 17483 ;; Defined at:
 17484 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 17485 ;; Parameters:    Size  Location     Type
 17486 ;;  s               2   18[BANK0 ] PTR const unsigned char 
 17487 ;;		 -> STR_29(3), cli_read@i(1), cmdm(28), cli_ctx(131), 
 17488 ;;		 -> buff1(255), STR_11(31), STR_10(29), STR_9(18), 
 17489 ;;		 -> STR_8(19), STR_7(17), STR_6(22), STR_5(18), 
 17490 ;;		 -> STR_4(29), STR_3(18), 
 17491 ;; Auto vars:     Size  Location     Type
 17492 ;;  r               2    0        int 
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  2   18[BANK0 ] int 
 17495 ;; Registers used:
 17496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17497 ;; Tracked objects:
 17498 ;;		On entry : 3F/0
 17499 ;;		On exit  : 3F/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17505 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17506 ;;Total ram usage:        3 bytes
 17507 ;; Hardware stack levels used: 1
 17508 ;; Hardware stack levels required when called: 11
 17509 ;; This function calls:
 17510 ;;		_fputc
 17511 ;;		_fputs
 17512 ;; This function is called by:
 17513 ;;		_fh_pr
 17514 ;;		_fh_ps
 17515 ;;		_fh_po
 17516 ;;		_fh_pp
 17517 ;;		_fh_pu
 17518 ;;		_fh_pd
 17519 ;;		_fh_pl
 17520 ;;		_fh_p0
 17521 ;;		_fh_p1
 17522 ;;		_main
 17523 ;;		_cli_init
 17524 ;;		_linux_putc
 17525 ;; This function uses a non-reentrant model
 17526 ;;
 17527                           
 17528                           	psect	text74
 17529  014FCC                     __ptext74:
 17530                           	callstack 0
 17531  014FCC                     _puts:
 17532                           	callstack 17
 17533                           
 17534                           ; BSR set to: 0
 17535                           
 17536                           ; BSR set to: 1
 17537                           ;incstack = 0
 17538  014FCC  0E01               	movlw	1
 17539  014FCE  6F74               	movwf	_puts$4380& (0+255),b
 17540                           
 17541                           ; BSR set to: 0
 17542  014FD0  C072  F069         	movff	puts@s,fputs@s
 17543  014FD4  C073  F06A         	movff	puts@s+1,fputs@s+1
 17544  014FD8  0E00               	movlw	0
 17545  014FDA  6F6B               	movwf	fputs@fp& (0+255),b
 17546  014FDC  0E00               	movlw	0
 17547  014FDE  6F6C               	movwf	(fputs@fp+1)& (0+255),b
 17548  014FE0  ECE7  F0A2         	call	_fputs	;wreg free
 17549  014FE4  BF6A               	btfsc	(?_fputs+1)& (0+255),7,b
 17550  014FE6  0012               	return	
 17551                           
 17552                           ; BSR set to: 0
 17553  014FE8  0E00               	movlw	0
 17554  014FEA  6F61               	movwf	(fputc@c+1)& (0+255),b
 17555  014FEC  0E0A               	movlw	10
 17556  014FEE  6F60               	movwf	fputc@c& (0+255),b
 17557  014FF0  0E00               	movlw	0
 17558  014FF2  6F62               	movwf	fputc@fp& (0+255),b
 17559  014FF4  0E00               	movlw	0
 17560  014FF6  6F63               	movwf	(fputc@fp+1)& (0+255),b
 17561  014FF8  EC69  F0A0         	call	_fputc	;wreg free
 17562  014FFC  BF61               	btfsc	(?_fputc+1)& (0+255),7,b
 17563  014FFE  0012               	return	
 17564                           
 17565                           ; BSR set to: 0
 17566  015000  0E00               	movlw	0
 17567  015002  6F74               	movwf	_puts$4380& (0+255),b
 17568                           
 17569                           ; BSR set to: 0
 17570                           
 17571                           ; BSR set to: 0
 17572  015004  0012               	return		;funcret
 17573  015006                     __end_of_puts:
 17574                           	callstack 0
 17575                           
 17576 ;; *************** function _fputs *****************
 17577 ;; Defined at:
 17578 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 17579 ;; Parameters:    Size  Location     Type
 17580 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 17581 ;;		 -> dbuf(80), STR_29(3), cli_read@i(1), cmdm(28), 
 17582 ;;		 -> cli_ctx(131), buff1(255), STR_11(31), STR_10(29), 
 17583 ;;		 -> STR_9(18), STR_8(19), STR_7(17), STR_6(22), 
 17584 ;;		 -> STR_5(18), STR_4(29), STR_3(18), 
 17585 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
 17586 ;;		 -> sprintf@f(11), NULL(0), 
 17587 ;; Auto vars:     Size  Location     Type
 17588 ;;  i               2   16[BANK0 ] int 
 17589 ;;  c               1   15[BANK0 ] unsigned char 
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  2    9[BANK0 ] int 
 17592 ;; Registers used:
 17593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17594 ;; Tracked objects:
 17595 ;;		On entry : 3F/0
 17596 ;;		On exit  : 3F/0
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17600 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17601 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17602 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17603 ;;Total ram usage:        9 bytes
 17604 ;; Hardware stack levels used: 1
 17605 ;; Hardware stack levels required when called: 10
 17606 ;; This function calls:
 17607 ;;		_fputc
 17608 ;; This function is called by:
 17609 ;;		_pad
 17610 ;;		_puts
 17611 ;; This function uses a non-reentrant model
 17612 ;;
 17613                           
 17614                           	psect	text75
 17615  0145CE                     __ptext75:
 17616                           	callstack 0
 17617  0145CE                     _fputs:
 17618                           	callstack 15
 17619                           
 17620                           ; BSR set to: 0
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;incstack = 0
 17624  0145CE  0E00               	movlw	0
 17625  0145D0  6F71               	movwf	(fputs@i+1)& (0+255),b
 17626  0145D2  0E00               	movlw	0
 17627  0145D4  6F70               	movwf	fputs@i& (0+255),b
 17628  0145D6  D00B               	goto	l8910
 17629  0145D8                     l8906:
 17630                           
 17631                           ; BSR set to: 0
 17632  0145D8  C06F  F060         	movff	fputs@c,fputc@c
 17633  0145DC  6B61               	clrf	(fputc@c+1)& (0+255),b
 17634  0145DE  C06B  F062         	movff	fputs@fp,fputc@fp
 17635  0145E2  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
 17636  0145E6  EC69  F0A0         	call	_fputc	;wreg free
 17637                           
 17638                           ; BSR set to: 0
 17639  0145EA  4B70               	infsnz	fputs@i& (0+255),f,b
 17640  0145EC  2B71               	incf	(fputs@i+1)& (0+255),f,b
 17641  0145EE                     l8910:
 17642                           
 17643                           ; BSR set to: 0
 17644  0145EE  5170               	movf	fputs@i& (0+255),w,b
 17645  0145F0  2569               	addwf	fputs@s& (0+255),w,b
 17646  0145F2  6F6D               	movwf	??_fputs& (0+255),b
 17647  0145F4  5171               	movf	(fputs@i+1)& (0+255),w,b
 17648  0145F6  216A               	addwfc	(fputs@s+1)& (0+255),w,b
 17649  0145F8  6F6E               	movwf	(??_fputs+1)& (0+255),b
 17650  0145FA  0060  F1B7  FFF6   	movff	??_fputs,tblptrl
 17651  014600  0060  F1BB  FFF7   	movff	??_fputs+1,tblptrh
 17652  014606  0E00               	movlw	low (__mediumconst shr (0+16))
 17653  014608  6EF8               	movwf	tblptru,c
 17654  01460A  0E1F               	movlw	(high __ramtop+-1)
 17655  01460C  64F7               	cpfsgt	tblptrh,c
 17656  01460E  D003               	bra	u7797
 17657  014610  0008               	tblrd		*
 17658  014612  50F5               	movf	tablat,w,c
 17659  014614  D007               	bra	u7790
 17660  014616                     u7797:
 17661  014616  006F FFDB FFE1     	movff	tblptrl,fsr1l
 17662  01461C  006F FFDF FFE2     	movff	tblptrh,fsr1h
 17663  014622  50E7               	movf	indf1,w,c
 17664  014624                     u7790:
 17665  014624  0100               	movlb	0	; () banked
 17666  014626  6F6F               	movwf	fputs@c& (0+255),b
 17667  014628  516F               	movf	fputs@c& (0+255),w,b
 17668  01462A  A4D8               	btfss	status,2,c
 17669  01462C  D7D5               	goto	l8906
 17670                           
 17671                           ; BSR set to: 0
 17672  01462E  C070  F069         	movff	fputs@i,?_fputs
 17673  014632  C071  F06A         	movff	fputs@i+1,?_fputs+1
 17674                           
 17675                           ; BSR set to: 0
 17676  014636  0012               	return		;funcret
 17677  014638                     __end_of_fputs:
 17678                           	callstack 0
 17679                           
 17680 ;; *************** function _fputc *****************
 17681 ;; Defined at:
 17682 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 17683 ;; Parameters:    Size  Location     Type
 17684 ;;  c               2    0[BANK0 ] int 
 17685 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
 17686 ;;		 -> sprintf@f(11), NULL(0), 
 17687 ;; Auto vars:     Size  Location     Type
 17688 ;;		None
 17689 ;; Return value:  Size  Location     Type
 17690 ;;                  2    0[BANK0 ] int 
 17691 ;; Registers used:
 17692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17693 ;; Tracked objects:
 17694 ;;		On entry : 3F/0
 17695 ;;		On exit  : 3F/0
 17696 ;;		Unchanged: 0/0
 17697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17700 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17701 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17702 ;;Total ram usage:        9 bytes
 17703 ;; Hardware stack levels used: 1
 17704 ;; Hardware stack levels required when called: 9
 17705 ;; This function calls:
 17706 ;;		_putch
 17707 ;; This function is called by:
 17708 ;;		_pad
 17709 ;;		_stoa
 17710 ;;		_vfpfcnvrt
 17711 ;;		_fputs
 17712 ;;		_puts
 17713 ;; This function uses a non-reentrant model
 17714 ;;
 17715                           
 17716                           	psect	text76
 17717  0140D2                     __ptext76:
 17718                           	callstack 0
 17719  0140D2                     _fputc:
 17720                           	callstack 15
 17721                           
 17722                           ; BSR set to: 0
 17723                           
 17724                           ; BSR set to: 0
 17725                           ;incstack = 0
 17726  0140D2  5162               	movf	fputc@fp& (0+255),w,b
 17727  0140D4  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 17728  0140D6  B4D8               	btfsc	status,2,c
 17729  0140D8  D004               	goto	u7350
 17730                           
 17731                           ; BSR set to: 0
 17732  0140DA  5162               	movf	fputc@fp& (0+255),w,b
 17733  0140DC  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 17734  0140DE  A4D8               	btfss	status,2,c
 17735  0140E0  D004               	goto	l8682
 17736  0140E2                     u7350:
 17737                           
 17738                           ; BSR set to: 0
 17739  0140E2  5160               	movf	fputc@c& (0+255),w,b
 17740  0140E4  EC44  F0AB         	call	_putch
 17741  0140E8  D04A               	goto	l8688
 17742  0140EA                     l8682:
 17743                           
 17744                           ; BSR set to: 0
 17745  0140EA  EE20 F009          	lfsr	2,9
 17746  0140EE  5162               	movf	fputc@fp& (0+255),w,b
 17747  0140F0  26D9               	addwf	fsr2l,f,c
 17748  0140F2  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17749  0140F4  22DA               	addwfc	fsr2h,f,c
 17750  0140F6  50DE               	movf	postinc2,w,c
 17751  0140F8  10DE               	iorwf	postinc2,w,c
 17752  0140FA  B4D8               	btfsc	status,2,c
 17753  0140FC  D016               	goto	u7370
 17754                           
 17755                           ; BSR set to: 0
 17756  0140FE  EE20 F009          	lfsr	2,9
 17757  014102  5162               	movf	fputc@fp& (0+255),w,b
 17758  014104  26D9               	addwf	fsr2l,f,c
 17759  014106  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17760  014108  22DA               	addwfc	fsr2h,f,c
 17761  01410A  EE10 F003          	lfsr	1,3
 17762  01410E  5162               	movf	fputc@fp& (0+255),w,b
 17763  014110  26E1               	addwf	fsr1l,f,c
 17764  014112  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17765  014114  22E2               	addwfc	fsr1h,f,c
 17766  014116  50DE               	movf	postinc2,w,c
 17767  014118  5CE6               	subwf	postinc1,w,c
 17768  01411A  50E6               	movf	postinc1,w,c
 17769  01411C  0A80               	xorlw	128
 17770  01411E  6F68               	movwf	(??_fputc+4)& (0+255),b
 17771  014120  50DE               	movf	postinc2,w,c
 17772  014122  0A80               	xorlw	128
 17773  014124  5968               	subwfb	(??_fputc+4)& (0+255),w,b
 17774  014126  B0D8               	btfsc	status,0,c
 17775  014128  D02A               	goto	l8688
 17776  01412A                     u7370:
 17777                           
 17778                           ; BSR set to: 0
 17779  01412A  EE20 F003          	lfsr	2,3
 17780  01412E  5162               	movf	fputc@fp& (0+255),w,b
 17781  014130  26D9               	addwf	fsr2l,f,c
 17782  014132  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17783  014134  22DA               	addwfc	fsr2h,f,c
 17784  014136  006F FF78  F064    	movff	postinc2,??_fputc
 17785  01413C  006F FF74  F065    	movff	postdec2,??_fputc+1
 17786  014142  0060  F18B  FFD9   	movff	fputc@fp,fsr2l
 17787  014148  0060  F18F  FFDA   	movff	fputc@fp+1,fsr2h
 17788  01414E  006F FF78  F066    	movff	postinc2,??_fputc+2
 17789  014154  006F FF74  F067    	movff	postdec2,??_fputc+3
 17790  01415A  5164               	movf	??_fputc& (0+255),w,b
 17791  01415C  2566               	addwf	(??_fputc+2)& (0+255),w,b
 17792  01415E  6ED9               	movwf	fsr2l,c
 17793  014160  5165               	movf	(??_fputc+1)& (0+255),w,b
 17794  014162  2167               	addwfc	(??_fputc+3)& (0+255),w,b
 17795  014164  6EDA               	movwf	fsr2h,c
 17796  014166  0060  F183  FFDF   	movff	fputc@c,indf2
 17797  01416C  EE20 F003          	lfsr	2,3
 17798  014170  5162               	movf	fputc@fp& (0+255),w,b
 17799  014172  26D9               	addwf	fsr2l,f,c
 17800  014174  5163               	movf	(fputc@fp+1)& (0+255),w,b
 17801  014176  22DA               	addwfc	fsr2h,f,c
 17802  014178  2ADE               	incf	postinc2,f,c
 17803  01417A  0E00               	movlw	0
 17804  01417C  22DD               	addwfc	postdec2,f,c
 17805  01417E                     l8688:
 17806  01417E  C060  F060         	movff	fputc@c,?_fputc
 17807  014182  0100               	movlb	0	; () banked
 17808  014184  6B61               	clrf	(?_fputc+1)& (0+255),b
 17809                           
 17810                           ; BSR set to: 0
 17811  014186  0012               	return		;funcret
 17812  014188                     __end_of_fputc:
 17813                           	callstack 0
 17814                           
 17815 ;; *************** function _putch *****************
 17816 ;; Defined at:
 17817 ;;		line 238 in file "mcc_generated_files/uart1.c"
 17818 ;; Parameters:    Size  Location     Type
 17819 ;;  txData          1    wreg     unsigned char 
 17820 ;; Auto vars:     Size  Location     Type
 17821 ;;  txData          1   32[COMRAM] unsigned char 
 17822 ;; Return value:  Size  Location     Type
 17823 ;;                  1    wreg      void 
 17824 ;; Registers used:
 17825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17826 ;; Tracked objects:
 17827 ;;		On entry : 3F/0
 17828 ;;		On exit  : 3F/39
 17829 ;;		Unchanged: 0/0
 17830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17835 ;;Total ram usage:        1 bytes
 17836 ;; Hardware stack levels used: 1
 17837 ;; Hardware stack levels required when called: 8
 17838 ;; This function calls:
 17839 ;;		_UART1_Write
 17840 ;; This function is called by:
 17841 ;;		_fputc
 17842 ;; This function uses a non-reentrant model
 17843 ;;
 17844                           
 17845                           	psect	text77
 17846  015688                     __ptext77:
 17847                           	callstack 0
 17848  015688                     _putch:
 17849                           	callstack 15
 17850                           
 17851                           ; BSR set to: 0
 17852                           ;incstack = 0
 17853                           ;putch@txData stored from wreg
 17854  015688  6E21               	movwf	putch@txData^0,c
 17855                           
 17856                           ;mcc_generated_files/uart1.c: 238: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          239: {;mcc_generated_files/uart1.c: 240:     UART1_Write(txData);
 17857  01568A  5021               	movf	putch@txData^0,w,c
 17858  01568C  ECAB  F0A7         	call	_UART1_Write
 17859                           
 17860                           ; BSR set to: 57
 17861  015690  0012               	return		;funcret
 17862  015692                     __end_of_putch:
 17863                           	callstack 0
 17864                           
 17865 ;; *************** function _UART1_Write *****************
 17866 ;; Defined at:
 17867 ;;		line 210 in file "mcc_generated_files/uart1.c"
 17868 ;; Parameters:    Size  Location     Type
 17869 ;;  txData          1    wreg     unsigned char 
 17870 ;; Auto vars:     Size  Location     Type
 17871 ;;  txData          1   31[COMRAM] unsigned char 
 17872 ;; Return value:  Size  Location     Type
 17873 ;;                  1    wreg      void 
 17874 ;; Registers used:
 17875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17876 ;; Tracked objects:
 17877 ;;		On entry : 0/0
 17878 ;;		On exit  : 3F/39
 17879 ;;		Unchanged: 0/0
 17880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17885 ;;Total ram usage:        1 bytes
 17886 ;; Hardware stack levels used: 1
 17887 ;; Hardware stack levels required when called: 7
 17888 ;; This function calls:
 17889 ;;		Nothing
 17890 ;; This function is called by:
 17891 ;;		_putch
 17892 ;; This function uses a non-reentrant model
 17893 ;;
 17894                           
 17895                           	psect	text78
 17896  014F56                     __ptext78:
 17897                           	callstack 0
 17898  014F56                     _UART1_Write:
 17899                           	callstack 15
 17900                           
 17901                           ; BSR set to: 57
 17902                           ;incstack = 0
 17903                           ;UART1_Write@txData stored from wreg
 17904  014F56  6E20               	movwf	UART1_Write@txData^0,c
 17905  014F58                     
 17906                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 17907                           
 17908                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 17909  014F58  503E               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 17910  014F5A  B4D8               	btfsc	status,2,c
 17911  014F5C  D7FD               	goto	l8656
 17912                           
 17913                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 17914  014F5E  0139               	movlb	57	; () banked
 17915  014F60  B993               	btfsc	147,4,b	;volatile
 17916  014F62  D004               	goto	l991
 17917                           
 17918                           ; BSR set to: 57
 17919                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 218:         U1TXB
      +                           = txData;
 17920  014F64  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
 17921                           
 17922                           ;mcc_generated_files/uart1.c: 219:     }
 17923  014F6A  D011               	goto	l8672
 17924  014F6C                     l991:
 17925                           
 17926                           ; BSR set to: 57
 17927                           ;mcc_generated_files/uart1.c: 221:     {;mcc_generated_files/uart1.c: 222:         PIE3b
      +                          its.U1TXIE = 0;
 17928  014F6C  9993               	bcf	147,4,b	;volatile
 17929                           
 17930                           ; BSR set to: 57
 17931                           ;mcc_generated_files/uart1.c: 223:         uart1TxBuffer[uart1TxHead++] = txData;
 17932  014F6E  0E40               	movlw	low _uart1TxBuffer
 17933  014F70  2440               	addwf	_uart1TxHead^0,w,c	;volatile
 17934  014F72  6ED9               	movwf	fsr2l,c
 17935  014F74  6ADA               	clrf	fsr2h,c
 17936  014F76  0E03               	movlw	high _uart1TxBuffer
 17937  014F78  22DA               	addwfc	fsr2h,f,c
 17938  014F7A  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
 17939                           
 17940                           ; BSR set to: 57
 17941  014F80  2A40               	incf	_uart1TxHead^0,f,c	;volatile
 17942                           
 17943                           ; BSR set to: 57
 17944                           ;mcc_generated_files/uart1.c: 224:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 17945  014F82  0E3F               	movlw	63
 17946  014F84  6440               	cpfsgt	_uart1TxHead^0,c
 17947  014F86  D002               	goto	l8670
 17948                           
 17949                           ; BSR set to: 57
 17950                           ;mcc_generated_files/uart1.c: 225:         {;mcc_generated_files/uart1.c: 226:          
      +                             uart1TxHead = 0;
 17951  014F88  0E00               	movlw	0
 17952  014F8A  6E40               	movwf	_uart1TxHead^0,c	;volatile
 17953  014F8C                     l8670:
 17954                           
 17955                           ; BSR set to: 57
 17956                           ;mcc_generated_files/uart1.c: 228:         uart1TxBufferRemaining--;
 17957  014F8C  063E               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 17958  014F8E                     l8672:
 17959                           
 17960                           ; BSR set to: 57
 17961                           ;mcc_generated_files/uart1.c: 230:     PIE3bits.U1TXIE = 1;
 17962  014F8E  8993               	bsf	147,4,b	;volatile
 17963                           
 17964                           ; BSR set to: 57
 17965  014F90  0012               	return		;funcret
 17966  014F92                     __end_of_UART1_Write:
 17967                           	callstack 0
 17968                           
 17969 ;; *************** function _DATAEE_WriteByte *****************
 17970 ;; Defined at:
 17971 ;;		line 165 in file "mcc_generated_files/memory.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;  bAdd            2    0[BANK0 ] unsigned short 
 17974 ;;  bData           1    2[BANK0 ] unsigned char 
 17975 ;; Auto vars:     Size  Location     Type
 17976 ;;  GIEBitValue     1   31[COMRAM] unsigned char 
 17977 ;; Return value:  Size  Location     Type
 17978 ;;                  1    wreg      void 
 17979 ;; Registers used:
 17980 ;;		wreg, status,2, status,0
 17981 ;; Tracked objects:
 17982 ;;		On entry : 3F/0
 17983 ;;		On exit  : 0/0
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17986 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17989 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17990 ;;Total ram usage:        4 bytes
 17991 ;; Hardware stack levels used: 1
 17992 ;; Hardware stack levels required when called: 7
 17993 ;; This function calls:
 17994 ;;		Nothing
 17995 ;; This function is called by:
 17996 ;;		_fh_p0
 17997 ;;		_fh_p1
 17998 ;;		_main
 17999 ;; This function uses a non-reentrant model
 18000 ;;
 18001                           
 18002                           	psect	text79
 18003  014D9E                     __ptext79:
 18004                           	callstack 0
 18005  014D9E                     _DATAEE_WriteByte:
 18006                           	callstack 20
 18007                           
 18008                           ; BSR set to: 0
 18009                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 18010                           
 18011                           ; BSR set to: 57
 18012                           ;incstack = 0
 18013  014D9E  0E00               	movlw	0
 18014  014DA0  BED2               	btfsc	210,7,c	;volatile
 18015  014DA2  0E01               	movlw	1
 18016  014DA4  6E20               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 18017                           
 18018                           ; BSR set to: 0
 18019                           ;mcc_generated_files/memory.c: 169:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 18020  014DA6  5161               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 18021  014DA8  0B03               	andlw	3
 18022  014DAA  0139               	movlb	57	; () banked
 18023  014DAC  6FE1               	movwf	225,b	;volatile
 18024                           
 18025                           ; BSR set to: 57
 18026                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 18027  014DAE  0060  F183  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 18028                           
 18029                           ; BSR set to: 57
 18030                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
 18031  014DB4  0060  F18B  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 18032                           
 18033                           ; BSR set to: 57
 18034                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
 18035  014DBA  0E3F               	movlw	-193
 18036  014DBC  17E5               	andwf	229,f,b	;volsfr
 18037                           
 18038                           ; BSR set to: 57
 18039                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
 18040  014DBE  85E5               	bsf	229,2,b	;volsfr
 18041                           
 18042                           ; BSR set to: 57
 18043                           ;mcc_generated_files/memory.c: 174:     INTCON0bits.GIE = 0;
 18044  014DC0  9ED2               	bcf	210,7,c	;volatile
 18045                           
 18046                           ; BSR set to: 57
 18047                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
 18048  014DC2  0E55               	movlw	85
 18049  014DC4  6FE6               	movwf	230,b	;volsfr
 18050                           
 18051                           ; BSR set to: 57
 18052                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
 18053  014DC6  0EAA               	movlw	170
 18054  014DC8  6FE6               	movwf	230,b	;volsfr
 18055                           
 18056                           ; BSR set to: 57
 18057                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
 18058  014DCA  83E5               	bsf	229,1,b	;volsfr
 18059  014DCC                     l1130:
 18060                           
 18061                           ; BSR set to: 57
 18062                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
 18063  014DCC  B3E5               	btfsc	229,1,b	;volsfr
 18064  014DCE  D7FE               	goto	l1130
 18065                           
 18066                           ; BSR set to: 57
 18067                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
 18068  014DD0  95E5               	bcf	229,2,b	;volsfr
 18069                           
 18070                           ;mcc_generated_files/memory.c: 184:     INTCON0bits.GIE = GIEBitValue;
 18071  014DD2  B020               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 18072  014DD4  D002               	bra	u8935
 18073  014DD6  9ED2               	bcf	210,7,c	;volatile
 18074  014DD8  D001               	bra	u8936
 18075  014DDA                     u8935:
 18076  014DDA  8ED2               	bsf	210,7,c	;volatile
 18077  014DDC                     u8936:
 18078  014DDC  0012               	return		;funcret
 18079  014DDE                     __end_of_DATAEE_WriteByte:
 18080                           	callstack 0
 18081                           
 18082 ;; *************** function _WaitMs *****************
 18083 ;; Defined at:
 18084 ;;		line 31 in file "timers.c"
 18085 ;; Parameters:    Size  Location     Type
 18086 ;;  numMilliseco    2    3[BANK0 ] const unsigned short 
 18087 ;; Auto vars:     Size  Location     Type
 18088 ;;		None
 18089 ;; Return value:  Size  Location     Type
 18090 ;;                  1    wreg      void 
 18091 ;; Registers used:
 18092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18093 ;; Tracked objects:
 18094 ;;		On entry : 3F/0
 18095 ;;		On exit  : 3F/0
 18096 ;;		Unchanged: 0/0
 18097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18101 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18102 ;;Total ram usage:        2 bytes
 18103 ;; Hardware stack levels used: 1
 18104 ;; Hardware stack levels required when called: 8
 18105 ;; This function calls:
 18106 ;;		_StartTimer
 18107 ;;		_TimerDone
 18108 ;; This function is called by:
 18109 ;;		_main
 18110 ;; This function uses a non-reentrant model
 18111 ;;
 18112                           
 18113                           	psect	text80
 18114  0151F2                     __ptext80:
 18115                           	callstack 0
 18116  0151F2                     _WaitMs:
 18117                           	callstack 22
 18118                           
 18119                           ; BSR set to: 0
 18120                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 18121                           
 18122                           ;incstack = 0
 18123  0151F2  C063  F020         	movff	WaitMs@numMilliseconds,StartTimer@count
 18124  0151F6  C064  F021         	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
 18125  0151FA  0E00               	movlw	0
 18126  0151FC  EC86  F0A8         	call	_StartTimer
 18127                           
 18128                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
 18129  015200  D005               	goto	l10794
 18130  015202                     l1395:
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;timers.c: 35:   __nop();
 18134  015202  F000               	nop	
 18135                           
 18136                           ;timers.c: 36:   __nop();
 18137  015204  F000               	nop	
 18138                           
 18139                           ;timers.c: 37:   __nop();
 18140  015206  F000               	nop	
 18141                           
 18142                           ;timers.c: 38:   __nop();
 18143  015208  F000               	nop	
 18144  01520A  0004               	clrwdt		;# 
 18145  01520C                     l10794:
 18146                           
 18147                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
 18148  01520C  0E00               	movlw	0
 18149  01520E  EC0D  F0A9         	call	_TimerDone
 18150  015212  0900               	iorlw	0
 18151  015214  A4D8               	btfss	status,2,c
 18152  015216  0012               	return	
 18153  015218  D7F4               	goto	l1395
 18154  01521A                     __end_of_WaitMs:
 18155                           	callstack 0
 18156                           
 18157 ;; *************** function _TimerDone *****************
 18158 ;; Defined at:
 18159 ;;		line 19 in file "timers.c"
 18160 ;; Parameters:    Size  Location     Type
 18161 ;;  timer           1    wreg     const unsigned char 
 18162 ;; Auto vars:     Size  Location     Type
 18163 ;;  timer           1    0[BANK0 ] const unsigned char 
 18164 ;; Return value:  Size  Location     Type
 18165 ;;                  1    wreg      _Bool 
 18166 ;; Registers used:
 18167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18168 ;; Tracked objects:
 18169 ;;		On entry : 0/0
 18170 ;;		On exit  : 3F/0
 18171 ;;		Unchanged: 0/0
 18172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18176 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18177 ;;Total ram usage:        3 bytes
 18178 ;; Hardware stack levels used: 1
 18179 ;; Hardware stack levels required when called: 7
 18180 ;; This function calls:
 18181 ;;		Nothing
 18182 ;; This function is called by:
 18183 ;;		_WaitMs
 18184 ;; This function uses a non-reentrant model
 18185 ;;
 18186                           
 18187                           	psect	text81
 18188  01521A                     __ptext81:
 18189                           	callstack 0
 18190  01521A                     _TimerDone:
 18191                           	callstack 22
 18192                           
 18193                           ; BSR set to: 0
 18194                           ;incstack = 0
 18195                           ;TimerDone@timer stored from wreg
 18196  01521A  0100               	movlb	0	; () banked
 18197  01521C  6F60               	movwf	TimerDone@timer& (0+255),b
 18198  01521E  0004               	clrwdt		;# 
 18199                           
 18200                           ;timers.c: 22:  if (tickCount[timer] == 0) {
 18201  015220  0100               	movlb	0	; () banked
 18202  015222  5160               	movf	TimerDone@timer& (0+255),w,b
 18203  015224  0D02               	mullw	2
 18204  015226  0E0C               	movlw	low _tickCount
 18205  015228  24F3               	addwf	243,w,c
 18206  01522A  6ED9               	movwf	fsr2l,c
 18207  01522C  0E01               	movlw	high _tickCount
 18208  01522E  20F4               	addwfc	prodh,w,c
 18209  015230  6EDA               	movwf	fsr2h,c
 18210  015232  50DE               	movf	postinc2,w,c
 18211  015234  10DE               	iorwf	postinc2,w,c
 18212  015236  A4D8               	btfss	status,2,c
 18213  015238  D002               	goto	l10512
 18214                           
 18215                           ; BSR set to: 0
 18216                           ;timers.c: 23:   return 1;
 18217  01523A  0E01               	movlw	1
 18218  01523C  0012               	return	
 18219  01523E                     l10512:
 18220                           
 18221                           ; BSR set to: 0
 18222                           ;timers.c: 25:  return 0;
 18223  01523E  0E00               	movlw	0
 18224                           
 18225                           ; BSR set to: 0
 18226  015240  0012               	return		;funcret
 18227  015242                     __end_of_TimerDone:
 18228                           	callstack 0
 18229                           
 18230 ;; *************** function _StartTimer *****************
 18231 ;; Defined at:
 18232 ;;		line 11 in file "timers.c"
 18233 ;; Parameters:    Size  Location     Type
 18234 ;;  timer           1    wreg     const unsigned char 
 18235 ;;  count           2   31[COMRAM] const unsigned short 
 18236 ;; Auto vars:     Size  Location     Type
 18237 ;;  timer           1    2[BANK0 ] const unsigned char 
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  1    wreg      void 
 18240 ;; Registers used:
 18241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18242 ;; Tracked objects:
 18243 ;;		On entry : 3F/0
 18244 ;;		On exit  : 3F/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18249 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18250 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18251 ;;Total ram usage:        5 bytes
 18252 ;; Hardware stack levels used: 1
 18253 ;; Hardware stack levels required when called: 7
 18254 ;; This function calls:
 18255 ;;		Nothing
 18256 ;; This function is called by:
 18257 ;;		_WaitMs
 18258 ;; This function uses a non-reentrant model
 18259 ;;
 18260                           
 18261                           	psect	text82
 18262  01510C                     __ptext82:
 18263                           	callstack 0
 18264  01510C                     _StartTimer:
 18265                           	callstack 22
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;incstack = 0
 18269                           ;StartTimer@timer stored from wreg
 18270  01510C  6F62               	movwf	StartTimer@timer& (0+255),b
 18271                           
 18272                           ;timers.c: 11: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 12: 
      +                          {;timers.c: 13:  tickCount[timer] = count << 1;
 18273  01510E  C020  F060         	movff	StartTimer@count,??_StartTimer
 18274  015112  C021  F061         	movff	StartTimer@count+1,??_StartTimer+1
 18275  015116  90D8               	bcf	status,0,c
 18276  015118  0100               	movlb	0	; () banked
 18277  01511A  3760               	rlcf	??_StartTimer& (0+255),f,b
 18278  01511C  3761               	rlcf	(??_StartTimer+1)& (0+255),f,b
 18279  01511E  5162               	movf	StartTimer@timer& (0+255),w,b
 18280  015120  0D02               	mullw	2
 18281  015122  0E0C               	movlw	low _tickCount
 18282  015124  24F3               	addwf	243,w,c
 18283  015126  6ED9               	movwf	fsr2l,c
 18284  015128  0E01               	movlw	high _tickCount
 18285  01512A  20F4               	addwfc	prodh,w,c
 18286  01512C  6EDA               	movwf	fsr2h,c
 18287  01512E  0060  F183  FFDE   	movff	??_StartTimer,postinc2
 18288  015134  0060  F187  FFDD   	movff	??_StartTimer+1,postdec2
 18289                           
 18290                           ; BSR set to: 0
 18291  01513A  0012               	return		;funcret
 18292  01513C                     __end_of_StartTimer:
 18293                           	callstack 0
 18294                           
 18295 ;; *************** function _SYSTEM_Initialize *****************
 18296 ;; Defined at:
 18297 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18298 ;; Parameters:    Size  Location     Type
 18299 ;;		None
 18300 ;; Auto vars:     Size  Location     Type
 18301 ;;		None
 18302 ;; Return value:  Size  Location     Type
 18303 ;;                  1    wreg      void 
 18304 ;; Registers used:
 18305 ;;		wreg, status,2, status,0, cstack
 18306 ;; Tracked objects:
 18307 ;;		On entry : 3F/0
 18308 ;;		On exit  : 3F/39
 18309 ;;		Unchanged: 0/0
 18310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18315 ;;Total ram usage:        0 bytes
 18316 ;; Hardware stack levels used: 1
 18317 ;; Hardware stack levels required when called: 9
 18318 ;; This function calls:
 18319 ;;		_ADCC_Initialize
 18320 ;;		_DAC1_Initialize
 18321 ;;		_DMA1_Initialize
 18322 ;;		_INTERRUPT_Initialize
 18323 ;;		_OSCILLATOR_Initialize
 18324 ;;		_PIN_MANAGER_Initialize
 18325 ;;		_PMD_Initialize
 18326 ;;		_PWM5_Initialize
 18327 ;;		_PWM6_Initialize
 18328 ;;		_SPI1_Initialize
 18329 ;;		_SystemArbiter_Initialize
 18330 ;;		_TMR2_Initialize
 18331 ;;		_TMR5_Initialize
 18332 ;;		_TMR6_Initialize
 18333 ;;		_UART1_Initialize
 18334 ;; This function is called by:
 18335 ;;		_main
 18336 ;; This function uses a non-reentrant model
 18337 ;;
 18338                           
 18339                           	psect	text83
 18340  014E98                     __ptext83:
 18341                           	callstack 0
 18342  014E98                     _SYSTEM_Initialize:
 18343                           	callstack 21
 18344                           
 18345                           ; BSR set to: 0
 18346                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 18347                           
 18348                           ; BSR set to: 0
 18349                           ;incstack = 0
 18350  014E98  EC76  F0A5         	call	_INTERRUPT_Initialize	;wreg free
 18351                           
 18352                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 18353  014E9C  ECAF  F0A9         	call	_PMD_Initialize	;wreg free
 18354                           
 18355                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 18356  014EA0  EC80  F09E         	call	_PIN_MANAGER_Initialize	;wreg free
 18357                           
 18358                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 18359  014EA4  EC3A  F0AA         	call	_OSCILLATOR_Initialize	;wreg free
 18360                           
 18361                           ; BSR set to: 57
 18362                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 18363  014EA8  EC3E  F0A2         	call	_ADCC_Initialize	;wreg free
 18364                           
 18365                           ; BSR set to: 0
 18366                           ;mcc_generated_files/mcc.c: 57:     DMA1_Initialize();
 18367  014EAC  ECAF  F0A3         	call	_DMA1_Initialize	;wreg free
 18368                           
 18369                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 18370  014EB0  ECFF  F0A9         	call	_TMR2_Initialize	;wreg free
 18371                           
 18372                           ;mcc_generated_files/mcc.c: 59:     PWM6_Initialize();
 18373  014EB4  EC92  F0AA         	call	_PWM6_Initialize	;wreg free
 18374                           
 18375                           ; BSR set to: 63
 18376                           ;mcc_generated_files/mcc.c: 60:     TMR6_Initialize();
 18377  014EB8  EC9E  F0A8         	call	_TMR6_Initialize	;wreg free
 18378                           
 18379                           ; BSR set to: 0
 18380                           ;mcc_generated_files/mcc.c: 61:     DAC1_Initialize();
 18381  014EBC  EC3E  F0AB         	call	_DAC1_Initialize	;wreg free
 18382                           
 18383                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 18384  014EC0  EC51  F0A5         	call	_TMR5_Initialize	;wreg free
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;mcc_generated_files/mcc.c: 63:     PWM5_Initialize();
 18388  014EC4  EC9E  F0AA         	call	_PWM5_Initialize	;wreg free
 18389                           
 18390                           ; BSR set to: 63
 18391                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 18392  014EC8  ECC6  F09C         	call	_UART1_Initialize	;wreg free
 18393                           
 18394                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 18395  014ECC  EC55  F0AA         	call	_SPI1_Initialize	;wreg free
 18396                           
 18397                           ;mcc_generated_files/mcc.c: 66:     SystemArbiter_Initialize();
 18398  014ED0  EC22  F0AB         	call	_SystemArbiter_Initialize	;wreg free
 18399                           
 18400                           ; BSR set to: 57
 18401  014ED4  0012               	return		;funcret
 18402  014ED6                     __end_of_SYSTEM_Initialize:
 18403                           	callstack 0
 18404                           
 18405 ;; *************** function _UART1_Initialize *****************
 18406 ;; Defined at:
 18407 ;;		line 87 in file "mcc_generated_files/uart1.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;		None
 18410 ;; Auto vars:     Size  Location     Type
 18411 ;;		None
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  1    wreg      void 
 18414 ;; Registers used:
 18415 ;;		wreg, status,2, status,0, cstack
 18416 ;; Tracked objects:
 18417 ;;		On entry : 3F/3F
 18418 ;;		On exit  : 3F/39
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18425 ;;Total ram usage:        0 bytes
 18426 ;; Hardware stack levels used: 1
 18427 ;; Hardware stack levels required when called: 8
 18428 ;; This function calls:
 18429 ;;		_UART1_SetErrorHandler
 18430 ;;		_UART1_SetFramingErrorHandler
 18431 ;;		_UART1_SetFramingErrorInterruptHandler
 18432 ;;		_UART1_SetOverrunErrorHandler
 18433 ;;		_UART1_SetRxInterruptHandler
 18434 ;;		_UART1_SetTxInterruptHandler
 18435 ;;		_UART1_SetUartInterruptHandler
 18436 ;; This function is called by:
 18437 ;;		_SYSTEM_Initialize
 18438 ;; This function uses a non-reentrant model
 18439 ;;
 18440                           
 18441                           	psect	text84
 18442  01398C                     __ptext84:
 18443                           	callstack 0
 18444  01398C                     _UART1_Initialize:
 18445                           	callstack 21
 18446                           
 18447                           ; BSR set to: 63
 18448                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 18449                           
 18450                           ; BSR set to: 57
 18451                           ;incstack = 0
 18452  01398C  0139               	movlb	57	; () banked
 18453  01398E  9793               	bcf	147,3,b	;volatile
 18454                           
 18455                           ; BSR set to: 57
 18456                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 18457  013990  0E36               	movlw	low _UART1_Receive_ISR
 18458  013992  0100               	movlb	0	; () banked
 18459  013994  6F60               	movwf	UART1_SetRxInterruptHandler@InterruptHandler& (0+255),b
 18460  013996  0E42               	movlw	high _UART1_Receive_ISR
 18461  013998  6F61               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)& (0+255),b
 18462  01399A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 18463  01399C  6F62               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)& (0+255),b
 18464  01399E  ECF1  F0AA         	call	_UART1_SetRxInterruptHandler	;wreg free
 18465                           
 18466                           ; BSR set to: 0
 18467                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 18468  0139A2  0139               	movlb	57	; () banked
 18469  0139A4  9993               	bcf	147,4,b	;volatile
 18470                           
 18471                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 18472  0139A6  0E9A               	movlw	low _UART1_Transmit_ISR
 18473  0139A8  0100               	movlb	0	; () banked
 18474  0139AA  6F60               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
 18475  0139AC  0E51               	movlw	high _UART1_Transmit_ISR
 18476  0139AE  6F61               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
 18477  0139B0  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 18478  0139B2  6F62               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)& (0+255),b
 18479  0139B4  ECEA  F0AA         	call	_UART1_SetTxInterruptHandler	;wreg free
 18480                           
 18481                           ; BSR set to: 0
 18482                           ;mcc_generated_files/uart1.c: 94:     PIE3bits.U1EIE = 0;
 18483  0139B8  0139               	movlb	57	; () banked
 18484  0139BA  9B93               	bcf	147,5,b	;volatile
 18485                           
 18486                           ;mcc_generated_files/uart1.c: 95:     UART1_SetFramingErrorInterruptHandler(UART1_Framin
      +                          gError_ISR);
 18487  0139BC  0E9C               	movlw	low _UART1_FramingError_ISR
 18488  0139BE  0100               	movlb	0	; () banked
 18489  0139C0  6F60               	movwf	UART1_SetFramingErrorInterruptHandler@InterruptHandler& (0+255),b
 18490  0139C2  0E56               	movlw	high _UART1_FramingError_ISR
 18491  0139C4  6F61               	movwf	(UART1_SetFramingErrorInterruptHandler@InterruptHandler+1)& (0+255),b
 18492  0139C6  0E01               	movlw	low (_UART1_FramingError_ISR shr (0+16))
 18493  0139C8  6F62               	movwf	(UART1_SetFramingErrorInterruptHandler@InterruptHandler+2)& (0+255),b
 18494  0139CA  ECFF  F0AA         	call	_UART1_SetFramingErrorInterruptHandler	;wreg free
 18495                           
 18496                           ; BSR set to: 0
 18497                           ;mcc_generated_files/uart1.c: 96:     PIE3bits.U1IE = 0;
 18498  0139CE  0139               	movlb	57	; () banked
 18499  0139D0  9D93               	bcf	147,6,b	;volatile
 18500                           
 18501                           ;mcc_generated_files/uart1.c: 97:     UART1_SetUartInterruptHandler(UART1_UartInterrupt_
      +                          ISR);
 18502  0139D2  0EBC               	movlw	low _UART1_UartInterrupt_ISR
 18503  0139D4  0100               	movlb	0	; () banked
 18504  0139D6  6F60               	movwf	UART1_SetUartInterruptHandler@InterruptHandler& (0+255),b
 18505  0139D8  0E56               	movlw	high _UART1_UartInterrupt_ISR
 18506  0139DA  6F61               	movwf	(UART1_SetUartInterruptHandler@InterruptHandler+1)& (0+255),b
 18507  0139DC  0E01               	movlw	low (_UART1_UartInterrupt_ISR shr (0+16))
 18508  0139DE  6F62               	movwf	(UART1_SetUartInterruptHandler@InterruptHandler+2)& (0+255),b
 18509  0139E0  ECE3  F0AA         	call	_UART1_SetUartInterruptHandler	;wreg free
 18510                           
 18511                           ; BSR set to: 0
 18512                           ;mcc_generated_files/uart1.c: 102:     U1P1L = 0x00;
 18513  0139E4  0E00               	movlw	0
 18514  0139E6  013D               	movlb	61	; () banked
 18515  0139E8  6FEC               	movwf	236,b	;volatile
 18516                           
 18517                           ; BSR set to: 61
 18518                           ;mcc_generated_files/uart1.c: 105:     U1P1H = 0x00;
 18519  0139EA  0E00               	movlw	0
 18520  0139EC  6FED               	movwf	237,b	;volatile
 18521                           
 18522                           ; BSR set to: 61
 18523                           ;mcc_generated_files/uart1.c: 108:     U1P2L = 0x00;
 18524  0139EE  0E00               	movlw	0
 18525  0139F0  6FEE               	movwf	238,b	;volatile
 18526                           
 18527                           ; BSR set to: 61
 18528                           ;mcc_generated_files/uart1.c: 111:     U1P2H = 0x00;
 18529  0139F2  0E00               	movlw	0
 18530  0139F4  6FEF               	movwf	239,b	;volatile
 18531                           
 18532                           ; BSR set to: 61
 18533                           ;mcc_generated_files/uart1.c: 114:     U1P3L = 0x00;
 18534  0139F6  0E00               	movlw	0
 18535  0139F8  6FF0               	movwf	240,b	;volatile
 18536                           
 18537                           ; BSR set to: 61
 18538                           ;mcc_generated_files/uart1.c: 117:     U1P3H = 0x00;
 18539  0139FA  0E00               	movlw	0
 18540  0139FC  6FF1               	movwf	241,b	;volatile
 18541                           
 18542                           ; BSR set to: 61
 18543                           ;mcc_generated_files/uart1.c: 120:     U1CON0 = 0xB0;
 18544  0139FE  0EB0               	movlw	176
 18545  013A00  6FF2               	movwf	242,b	;volatile
 18546                           
 18547                           ; BSR set to: 61
 18548                           ;mcc_generated_files/uart1.c: 123:     U1CON1 = 0x90;
 18549  013A02  0E90               	movlw	144
 18550  013A04  6FF3               	movwf	243,b	;volatile
 18551                           
 18552                           ; BSR set to: 61
 18553                           ;mcc_generated_files/uart1.c: 126:     U1CON2 = 0x00;
 18554  013A06  0E00               	movlw	0
 18555  013A08  6FF4               	movwf	244,b	;volatile
 18556                           
 18557                           ; BSR set to: 61
 18558                           ;mcc_generated_files/uart1.c: 129:     U1BRGL = 0x8A;
 18559  013A0A  0E8A               	movlw	138
 18560  013A0C  6FF5               	movwf	245,b	;volatile
 18561                           
 18562                           ; BSR set to: 61
 18563                           ;mcc_generated_files/uart1.c: 132:     U1BRGH = 0x00;
 18564  013A0E  0E00               	movlw	0
 18565  013A10  6FF6               	movwf	246,b	;volatile
 18566                           
 18567                           ; BSR set to: 61
 18568                           ;mcc_generated_files/uart1.c: 135:     U1FIFO = 0x00;
 18569  013A12  0E00               	movlw	0
 18570  013A14  6FF7               	movwf	247,b	;volatile
 18571                           
 18572                           ; BSR set to: 61
 18573                           ;mcc_generated_files/uart1.c: 138:     U1UIR = 0x00;
 18574  013A16  0E00               	movlw	0
 18575  013A18  6FF8               	movwf	248,b	;volatile
 18576                           
 18577                           ; BSR set to: 61
 18578                           ;mcc_generated_files/uart1.c: 141:     U1ERRIR = 0x00;
 18579  013A1A  0E00               	movlw	0
 18580  013A1C  6FF9               	movwf	249,b	;volatile
 18581                           
 18582                           ; BSR set to: 61
 18583                           ;mcc_generated_files/uart1.c: 144:     U1ERRIE = 0x00;
 18584  013A1E  0E00               	movlw	0
 18585  013A20  6FFA               	movwf	250,b	;volatile
 18586                           
 18587                           ; BSR set to: 61
 18588                           ;mcc_generated_files/uart1.c: 147:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 18589  013A22  0ECA               	movlw	low _UART1_DefaultFramingErrorHandler
 18590  013A24  0100               	movlb	0	; () banked
 18591  013A26  6F60               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 18592  013A28  0E56               	movlw	high _UART1_DefaultFramingErrorHandler
 18593  013A2A  6F61               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 18594  013A2C  0E01               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 18595  013A2E  6F62               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
 18596  013A30  EC06  F0AB         	call	_UART1_SetFramingErrorHandler	;wreg free
 18597                           
 18598                           ; BSR set to: 0
 18599                           ;mcc_generated_files/uart1.c: 148:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 18600  013A34  0EC8               	movlw	low _UART1_DefaultOverrunErrorHandler
 18601  013A36  6F60               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 18602  013A38  0E56               	movlw	high _UART1_DefaultOverrunErrorHandler
 18603  013A3A  6F61               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 18604  013A3C  0E01               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 18605  013A3E  6F62               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
 18606  013A40  ECF8  F0AA         	call	_UART1_SetOverrunErrorHandler	;wreg free
 18607                           
 18608                           ; BSR set to: 0
 18609                           ;mcc_generated_files/uart1.c: 149:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 18610  013A44  0EB6               	movlw	low _UART1_DefaultErrorHandler
 18611  013A46  6F60               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
 18612  013A48  0E56               	movlw	high _UART1_DefaultErrorHandler
 18613  013A4A  6F61               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 18614  013A4C  0E01               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 18615  013A4E  6F62               	movwf	(UART1_SetErrorHandler@interruptHandler+2)& (0+255),b
 18616  013A50  EC0D  F0AB         	call	_UART1_SetErrorHandler	;wreg free
 18617                           
 18618                           ;mcc_generated_files/uart1.c: 151:     uart1RxLastError.status = 0;
 18619  013A54  0E00               	movlw	0
 18620  013A56  6E3A               	movwf	_uart1RxLastError^0,c	;volatile
 18621                           
 18622                           ;mcc_generated_files/uart1.c: 154:     uart1TxHead = 0;
 18623  013A58  0E00               	movlw	0
 18624  013A5A  6E40               	movwf	_uart1TxHead^0,c	;volatile
 18625                           
 18626                           ;mcc_generated_files/uart1.c: 155:     uart1TxTail = 0;
 18627  013A5C  0E00               	movlw	0
 18628  013A5E  6E3F               	movwf	_uart1TxTail^0,c	;volatile
 18629                           
 18630                           ;mcc_generated_files/uart1.c: 156:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 18631  013A60  0E40               	movlw	64
 18632  013A62  6E3E               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 18633                           
 18634                           ;mcc_generated_files/uart1.c: 157:     uart1RxHead = 0;
 18635  013A64  0E00               	movlw	0
 18636  013A66  6E3D               	movwf	_uart1RxHead^0,c	;volatile
 18637                           
 18638                           ;mcc_generated_files/uart1.c: 158:     uart1RxTail = 0;
 18639  013A68  0E00               	movlw	0
 18640  013A6A  6E3C               	movwf	_uart1RxTail^0,c	;volatile
 18641                           
 18642                           ;mcc_generated_files/uart1.c: 159:     uart1RxCount = 0;
 18643  013A6C  0E00               	movlw	0
 18644  013A6E  6E3B               	movwf	_uart1RxCount^0,c	;volatile
 18645                           
 18646                           ; BSR set to: 0
 18647                           ;mcc_generated_files/uart1.c: 162:     PIE3bits.U1RXIE = 1;
 18648  013A70  0139               	movlb	57	; () banked
 18649  013A72  8793               	bsf	147,3,b	;volatile
 18650                           
 18651                           ; BSR set to: 57
 18652                           ;mcc_generated_files/uart1.c: 164:     PIE3bits.U1EIE = 1;
 18653  013A74  8B93               	bsf	147,5,b	;volatile
 18654                           
 18655                           ; BSR set to: 57
 18656                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1IE = 1;
 18657  013A76  8D93               	bsf	147,6,b	;volatile
 18658                           
 18659                           ; BSR set to: 57
 18660  013A78  0012               	return		;funcret
 18661  013A7A                     __end_of_UART1_Initialize:
 18662                           	callstack 0
 18663                           
 18664 ;; *************** function _UART1_SetUartInterruptHandler *****************
 18665 ;; Defined at:
 18666 ;;		line 378 in file "mcc_generated_files/uart1.c"
 18667 ;; Parameters:    Size  Location     Type
 18668 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 18669 ;;		 -> UART1_UartInterrupt_ISR(1), 
 18670 ;; Auto vars:     Size  Location     Type
 18671 ;;		None
 18672 ;; Return value:  Size  Location     Type
 18673 ;;                  1    wreg      void 
 18674 ;; Registers used:
 18675 ;;		wreg, status,2, status,0
 18676 ;; Tracked objects:
 18677 ;;		On entry : 3F/0
 18678 ;;		On exit  : 3F/0
 18679 ;;		Unchanged: 3F/0
 18680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18681 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18684 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18685 ;;Total ram usage:        3 bytes
 18686 ;; Hardware stack levels used: 1
 18687 ;; Hardware stack levels required when called: 7
 18688 ;; This function calls:
 18689 ;;		Nothing
 18690 ;; This function is called by:
 18691 ;;		_UART1_Initialize
 18692 ;; This function uses a non-reentrant model
 18693 ;;
 18694                           
 18695                           	psect	text85
 18696  0155C6                     __ptext85:
 18697                           	callstack 0
 18698  0155C6                     _UART1_SetUartInterruptHandler:
 18699                           	callstack 21
 18700                           
 18701                           ; BSR set to: 0
 18702                           ;mcc_generated_files/uart1.c: 379:     UART1_UARTInterruptHandler = InterruptHandler;
 18703                           
 18704                           ; BSR set to: 57
 18705                           ;incstack = 0
 18706  0155C6  C060  F155         	movff	UART1_SetUartInterruptHandler@InterruptHandler,_UART1_UARTInterruptHandler
 18707  0155CA  C061  F156         	movff	UART1_SetUartInterruptHandler@InterruptHandler+1,_UART1_UARTInterruptHandler+1
 18708  0155CE  C062  F157         	movff	UART1_SetUartInterruptHandler@InterruptHandler+2,_UART1_UARTInterruptHandler+2
 18709                           
 18710                           ; BSR set to: 0
 18711  0155D2  0012               	return		;funcret
 18712  0155D4                     __end_of_UART1_SetUartInterruptHandler:
 18713                           	callstack 0
 18714                           
 18715 ;; *************** function _UART1_SetTxInterruptHandler *****************
 18716 ;; Defined at:
 18717 ;;		line 370 in file "mcc_generated_files/uart1.c"
 18718 ;; Parameters:    Size  Location     Type
 18719 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 18720 ;;		 -> UART1_Transmit_ISR(1), 
 18721 ;; Auto vars:     Size  Location     Type
 18722 ;;		None
 18723 ;; Return value:  Size  Location     Type
 18724 ;;                  1    wreg      void 
 18725 ;; Registers used:
 18726 ;;		wreg, status,2, status,0
 18727 ;; Tracked objects:
 18728 ;;		On entry : 3F/0
 18729 ;;		On exit  : 3F/0
 18730 ;;		Unchanged: 3F/0
 18731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18732 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18735 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18736 ;;Total ram usage:        3 bytes
 18737 ;; Hardware stack levels used: 1
 18738 ;; Hardware stack levels required when called: 7
 18739 ;; This function calls:
 18740 ;;		Nothing
 18741 ;; This function is called by:
 18742 ;;		_UART1_Initialize
 18743 ;; This function uses a non-reentrant model
 18744 ;;
 18745                           
 18746                           	psect	text86
 18747  0155D4                     __ptext86:
 18748                           	callstack 0
 18749  0155D4                     _UART1_SetTxInterruptHandler:
 18750                           	callstack 21
 18751                           
 18752                           ; BSR set to: 0
 18753                           ;mcc_generated_files/uart1.c: 371:     UART1_TxInterruptHandler = InterruptHandler;
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;incstack = 0
 18757  0155D4  C060  F026         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 18758  0155D8  C061  F027         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 18759  0155DC  C062  F028         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 18760                           
 18761                           ; BSR set to: 0
 18762  0155E0  0012               	return		;funcret
 18763  0155E2                     __end_of_UART1_SetTxInterruptHandler:
 18764                           	callstack 0
 18765                           
 18766 ;; *************** function _UART1_SetRxInterruptHandler *****************
 18767 ;; Defined at:
 18768 ;;		line 366 in file "mcc_generated_files/uart1.c"
 18769 ;; Parameters:    Size  Location     Type
 18770 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 18771 ;;		 -> UART1_Receive_ISR(1), 
 18772 ;; Auto vars:     Size  Location     Type
 18773 ;;		None
 18774 ;; Return value:  Size  Location     Type
 18775 ;;                  1    wreg      void 
 18776 ;; Registers used:
 18777 ;;		wreg, status,2, status,0
 18778 ;; Tracked objects:
 18779 ;;		On entry : 3F/0
 18780 ;;		On exit  : 3F/0
 18781 ;;		Unchanged: 3F/0
 18782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18783 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18786 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18787 ;;Total ram usage:        3 bytes
 18788 ;; Hardware stack levels used: 1
 18789 ;; Hardware stack levels required when called: 7
 18790 ;; This function calls:
 18791 ;;		Nothing
 18792 ;; This function is called by:
 18793 ;;		_UART1_Initialize
 18794 ;; This function uses a non-reentrant model
 18795 ;;
 18796                           
 18797                           	psect	text87
 18798  0155E2                     __ptext87:
 18799                           	callstack 0
 18800  0155E2                     _UART1_SetRxInterruptHandler:
 18801                           	callstack 21
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;mcc_generated_files/uart1.c: 367:     UART1_RxInterruptHandler = InterruptHandler;
 18805                           
 18806                           ; BSR set to: 0
 18807                           ;incstack = 0
 18808  0155E2  C060  F029         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 18809  0155E6  C061  F02A         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 18810  0155EA  C062  F02B         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 18811                           
 18812                           ; BSR set to: 0
 18813  0155EE  0012               	return		;funcret
 18814  0155F0                     __end_of_UART1_SetRxInterruptHandler:
 18815                           	callstack 0
 18816                           
 18817 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 18818 ;; Defined at:
 18819 ;;		line 341 in file "mcc_generated_files/uart1.c"
 18820 ;; Parameters:    Size  Location     Type
 18821 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 18822 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 18823 ;; Auto vars:     Size  Location     Type
 18824 ;;		None
 18825 ;; Return value:  Size  Location     Type
 18826 ;;                  1    wreg      void 
 18827 ;; Registers used:
 18828 ;;		wreg, status,2, status,0
 18829 ;; Tracked objects:
 18830 ;;		On entry : 3F/0
 18831 ;;		On exit  : 3F/0
 18832 ;;		Unchanged: 3F/0
 18833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18834 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18837 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18838 ;;Total ram usage:        3 bytes
 18839 ;; Hardware stack levels used: 1
 18840 ;; Hardware stack levels required when called: 7
 18841 ;; This function calls:
 18842 ;;		Nothing
 18843 ;; This function is called by:
 18844 ;;		_UART1_Initialize
 18845 ;; This function uses a non-reentrant model
 18846 ;;
 18847                           
 18848                           	psect	text88
 18849  0155F0                     __ptext88:
 18850                           	callstack 0
 18851  0155F0                     _UART1_SetOverrunErrorHandler:
 18852                           	callstack 21
 18853                           
 18854                           ; BSR set to: 0
 18855                           ;mcc_generated_files/uart1.c: 342:     UART1_OverrunErrorHandler = interruptHandler;
 18856                           
 18857                           ; BSR set to: 0
 18858                           ;incstack = 0
 18859  0155F0  C060  F143         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 18860  0155F4  C061  F144         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 18861  0155F8  C062  F145         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 18862                           
 18863                           ; BSR set to: 0
 18864  0155FC  0012               	return		;funcret
 18865  0155FE                     __end_of_UART1_SetOverrunErrorHandler:
 18866                           	callstack 0
 18867                           
 18868 ;; *************** function _UART1_SetFramingErrorInterruptHandler *****************
 18869 ;; Defined at:
 18870 ;;		line 374 in file "mcc_generated_files/uart1.c"
 18871 ;; Parameters:    Size  Location     Type
 18872 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 18873 ;;		 -> UART1_FramingError_ISR(1), 
 18874 ;; Auto vars:     Size  Location     Type
 18875 ;;		None
 18876 ;; Return value:  Size  Location     Type
 18877 ;;                  1    wreg      void 
 18878 ;; Registers used:
 18879 ;;		wreg, status,2, status,0
 18880 ;; Tracked objects:
 18881 ;;		On entry : 3F/0
 18882 ;;		On exit  : 3F/0
 18883 ;;		Unchanged: 3F/0
 18884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18885 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18888 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18889 ;;Total ram usage:        3 bytes
 18890 ;; Hardware stack levels used: 1
 18891 ;; Hardware stack levels required when called: 7
 18892 ;; This function calls:
 18893 ;;		Nothing
 18894 ;; This function is called by:
 18895 ;;		_UART1_Initialize
 18896 ;; This function uses a non-reentrant model
 18897 ;;
 18898                           
 18899                           	psect	text89
 18900  0155FE                     __ptext89:
 18901                           	callstack 0
 18902  0155FE                     _UART1_SetFramingErrorInterruptHandler:
 18903                           	callstack 21
 18904                           
 18905                           ; BSR set to: 0
 18906                           ;mcc_generated_files/uart1.c: 375:     UART1_FramingErrorInterruptHandler = InterruptHan
      +                          dler;
 18907                           
 18908                           ; BSR set to: 0
 18909                           ;incstack = 0
 18910  0155FE  C060  F158         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler,_UART1_FramingErrorInterru
      +                          ptHandler
 18911  015602  C061  F159         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler+1,_UART1_FramingErrorInter
      +                          ruptHandler+1
 18912  015606  C062  F15A         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler+2,_UART1_FramingErrorInter
      +                          ruptHandler+2
 18913                           
 18914                           ; BSR set to: 0
 18915  01560A  0012               	return		;funcret
 18916  01560C                     __end_of_UART1_SetFramingErrorInterruptHandler:
 18917                           	callstack 0
 18918                           
 18919 ;; *************** function _UART1_SetFramingErrorHandler *****************
 18920 ;; Defined at:
 18921 ;;		line 337 in file "mcc_generated_files/uart1.c"
 18922 ;; Parameters:    Size  Location     Type
 18923 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 18924 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 18925 ;; Auto vars:     Size  Location     Type
 18926 ;;		None
 18927 ;; Return value:  Size  Location     Type
 18928 ;;                  1    wreg      void 
 18929 ;; Registers used:
 18930 ;;		wreg, status,2, status,0
 18931 ;; Tracked objects:
 18932 ;;		On entry : 3F/0
 18933 ;;		On exit  : 3F/0
 18934 ;;		Unchanged: 3F/0
 18935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18936 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18939 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18940 ;;Total ram usage:        3 bytes
 18941 ;; Hardware stack levels used: 1
 18942 ;; Hardware stack levels required when called: 7
 18943 ;; This function calls:
 18944 ;;		Nothing
 18945 ;; This function is called by:
 18946 ;;		_UART1_Initialize
 18947 ;; This function uses a non-reentrant model
 18948 ;;
 18949                           
 18950                           	psect	text90
 18951  01560C                     __ptext90:
 18952                           	callstack 0
 18953  01560C                     _UART1_SetFramingErrorHandler:
 18954                           	callstack 21
 18955                           
 18956                           ; BSR set to: 0
 18957                           ;mcc_generated_files/uart1.c: 338:     UART1_FramingErrorHandler = interruptHandler;
 18958                           
 18959                           ; BSR set to: 0
 18960                           ;incstack = 0
 18961  01560C  C060  F146         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 18962  015610  C061  F147         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 18963  015614  C062  F148         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 18964                           
 18965                           ; BSR set to: 0
 18966  015618  0012               	return		;funcret
 18967  01561A                     __end_of_UART1_SetFramingErrorHandler:
 18968                           	callstack 0
 18969                           
 18970 ;; *************** function _UART1_SetErrorHandler *****************
 18971 ;; Defined at:
 18972 ;;		line 345 in file "mcc_generated_files/uart1.c"
 18973 ;; Parameters:    Size  Location     Type
 18974 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 18975 ;;		 -> UART1_DefaultErrorHandler(1), 
 18976 ;; Auto vars:     Size  Location     Type
 18977 ;;		None
 18978 ;; Return value:  Size  Location     Type
 18979 ;;                  1    wreg      void 
 18980 ;; Registers used:
 18981 ;;		wreg, status,2, status,0
 18982 ;; Tracked objects:
 18983 ;;		On entry : 3F/0
 18984 ;;		On exit  : 3F/0
 18985 ;;		Unchanged: 3F/0
 18986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18987 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18990 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18991 ;;Total ram usage:        3 bytes
 18992 ;; Hardware stack levels used: 1
 18993 ;; Hardware stack levels required when called: 7
 18994 ;; This function calls:
 18995 ;;		Nothing
 18996 ;; This function is called by:
 18997 ;;		_UART1_Initialize
 18998 ;; This function uses a non-reentrant model
 18999 ;;
 19000                           
 19001                           	psect	text91
 19002  01561A                     __ptext91:
 19003                           	callstack 0
 19004  01561A                     _UART1_SetErrorHandler:
 19005                           	callstack 21
 19006                           
 19007                           ; BSR set to: 0
 19008                           ;mcc_generated_files/uart1.c: 346:     UART1_ErrorHandler = interruptHandler;
 19009                           
 19010                           ; BSR set to: 0
 19011                           ;incstack = 0
 19012  01561A  C060  F140         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 19013  01561E  C061  F141         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 19014  015622  C062  F142         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 19015                           
 19016                           ; BSR set to: 0
 19017  015626  0012               	return		;funcret
 19018  015628                     __end_of_UART1_SetErrorHandler:
 19019                           	callstack 0
 19020                           
 19021 ;; *************** function _TMR6_Initialize *****************
 19022 ;; Defined at:
 19023 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 19024 ;; Parameters:    Size  Location     Type
 19025 ;;		None
 19026 ;; Auto vars:     Size  Location     Type
 19027 ;;		None
 19028 ;; Return value:  Size  Location     Type
 19029 ;;                  1    wreg      void 
 19030 ;; Registers used:
 19031 ;;		wreg, status,2, status,0, cstack
 19032 ;; Tracked objects:
 19033 ;;		On entry : 3F/3F
 19034 ;;		On exit  : 3F/0
 19035 ;;		Unchanged: 0/0
 19036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19041 ;;Total ram usage:        0 bytes
 19042 ;; Hardware stack levels used: 1
 19043 ;; Hardware stack levels required when called: 8
 19044 ;; This function calls:
 19045 ;;		_TMR6_SetInterruptHandler
 19046 ;; This function is called by:
 19047 ;;		_SYSTEM_Initialize
 19048 ;; This function uses a non-reentrant model
 19049 ;;
 19050                           
 19051                           	psect	text92
 19052  01513C                     __ptext92:
 19053                           	callstack 0
 19054  01513C                     _TMR6_Initialize:
 19055                           	callstack 21
 19056                           
 19057                           ; BSR set to: 63
 19058                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 19059                           
 19060                           ; BSR set to: 0
 19061                           ;incstack = 0
 19062  01513C  0E01               	movlw	1
 19063  01513E  6E96               	movwf	150,c	;volatile
 19064                           
 19065                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 19066  015140  0E20               	movlw	32
 19067  015142  6E95               	movwf	149,c	;volatile
 19068                           
 19069                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 19070  015144  0E00               	movlw	0
 19071  015146  6E97               	movwf	151,c	;volatile
 19072                           
 19073                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 19074  015148  0E4D               	movlw	77
 19075  01514A  6E93               	movwf	147,c	;volatile
 19076                           
 19077                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 19078  01514C  0E00               	movlw	0
 19079  01514E  6E92               	movwf	146,c	;volatile
 19080                           
 19081                           ; BSR set to: 63
 19082                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 19083  015150  0139               	movlb	57	; () banked
 19084  015152  91A9               	bcf	169,0,b	;volatile
 19085                           
 19086                           ; BSR set to: 57
 19087                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 19088  015154  8199               	bsf	153,0,b	;volatile
 19089                           
 19090                           ; BSR set to: 57
 19091                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 19092  015156  0ECE               	movlw	low _TMR6_DefaultInterruptHandler
 19093  015158  0100               	movlb	0	; () banked
 19094  01515A  6F60               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 19095  01515C  0E56               	movlw	high _TMR6_DefaultInterruptHandler
 19096  01515E  6F61               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19097  015160  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 19098  015162  6F62               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 19099  015164  EC14  F0AB         	call	_TMR6_SetInterruptHandler	;wreg free
 19100                           
 19101                           ; BSR set to: 0
 19102                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 19103  015168  6894               	setf	148,c	;volatile
 19104                           
 19105                           ; BSR set to: 0
 19106  01516A  0012               	return		;funcret
 19107  01516C                     __end_of_TMR6_Initialize:
 19108                           	callstack 0
 19109                           
 19110 ;; *************** function _TMR6_SetInterruptHandler *****************
 19111 ;; Defined at:
 19112 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 19113 ;; Parameters:    Size  Location     Type
 19114 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 19115 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 19116 ;; Auto vars:     Size  Location     Type
 19117 ;;		None
 19118 ;; Return value:  Size  Location     Type
 19119 ;;                  1    wreg      void 
 19120 ;; Registers used:
 19121 ;;		wreg, status,2, status,0
 19122 ;; Tracked objects:
 19123 ;;		On entry : 3F/0
 19124 ;;		On exit  : 3F/0
 19125 ;;		Unchanged: 3F/0
 19126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19127 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19130 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19131 ;;Total ram usage:        3 bytes
 19132 ;; Hardware stack levels used: 1
 19133 ;; Hardware stack levels required when called: 7
 19134 ;; This function calls:
 19135 ;;		Nothing
 19136 ;; This function is called by:
 19137 ;;		_TMR6_Initialize
 19138 ;;		_main
 19139 ;; This function uses a non-reentrant model
 19140 ;;
 19141                           
 19142                           	psect	text93
 19143  015628                     __ptext93:
 19144                           	callstack 0
 19145  015628                     _TMR6_SetInterruptHandler:
 19146                           	callstack 23
 19147                           
 19148                           ; BSR set to: 0
 19149                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 19150                           
 19151                           ; BSR set to: 0
 19152                           ;incstack = 0
 19153  015628  C060  F14F         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 19154  01562C  C061  F150         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 19155  015630  C062  F151         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 19156                           
 19157                           ; BSR set to: 0
 19158  015634  0012               	return		;funcret
 19159  015636                     __end_of_TMR6_SetInterruptHandler:
 19160                           	callstack 0
 19161                           
 19162 ;; *************** function _TMR5_Initialize *****************
 19163 ;; Defined at:
 19164 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 19165 ;; Parameters:    Size  Location     Type
 19166 ;;		None
 19167 ;; Auto vars:     Size  Location     Type
 19168 ;;		None
 19169 ;; Return value:  Size  Location     Type
 19170 ;;                  1    wreg      void 
 19171 ;; Registers used:
 19172 ;;		wreg, status,2, status,0, cstack
 19173 ;; Tracked objects:
 19174 ;;		On entry : 3F/3E
 19175 ;;		On exit  : 3F/0
 19176 ;;		Unchanged: 0/0
 19177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19182 ;;Total ram usage:        2 bytes
 19183 ;; Hardware stack levels used: 1
 19184 ;; Hardware stack levels required when called: 8
 19185 ;; This function calls:
 19186 ;;		_TMR5_SetInterruptHandler
 19187 ;; This function is called by:
 19188 ;;		_SYSTEM_Initialize
 19189 ;; This function uses a non-reentrant model
 19190 ;;
 19191                           
 19192                           	psect	text94
 19193  014AA2                     __ptext94:
 19194                           	callstack 0
 19195  014AA2                     _TMR5_Initialize:
 19196                           	callstack 21
 19197                           
 19198                           ; BSR set to: 62
 19199                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 19200                           
 19201                           ; BSR set to: 0
 19202                           ;incstack = 0
 19203  014AA2  0E00               	movlw	0
 19204  014AA4  6E9B               	movwf	155,c	;volatile
 19205                           
 19206                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 19207  014AA6  0E00               	movlw	0
 19208  014AA8  6E9C               	movwf	156,c	;volatile
 19209                           
 19210                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 19211  014AAA  0E02               	movlw	2
 19212  014AAC  6E9D               	movwf	157,c	;volatile
 19213                           
 19214                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 19215  014AAE  0E83               	movlw	131
 19216  014AB0  6E99               	movwf	153,c	;volatile
 19217                           
 19218                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 19219  014AB2  0E00               	movlw	0
 19220  014AB4  6E98               	movwf	152,c	;volatile
 19221                           
 19222                           ; BSR set to: 62
 19223                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 19224  014AB6  0139               	movlb	57	; () banked
 19225  014AB8  9DA8               	bcf	168,6,b	;volatile
 19226                           
 19227                           ; BSR set to: 57
 19228                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 19229  014ABA  5098               	movf	152,w,c	;volatile
 19230  014ABC  006F FE64  F020    	movff	16281,??_TMR5_Initialize	;volatile
 19231  014AC2  6A21               	clrf	(??_TMR5_Initialize+1)^0,c
 19232  014AC4  C020  F021         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 19233  014AC8  6A20               	clrf	??_TMR5_Initialize^0,c
 19234  014ACA  1020               	iorwf	??_TMR5_Initialize^0,w,c
 19235  014ACC  6E30               	movwf	_timer5ReloadVal^0,c	;volatile
 19236  014ACE  5021               	movf	(??_TMR5_Initialize+1)^0,w,c
 19237  014AD0  6E31               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 19238                           
 19239                           ; BSR set to: 57
 19240                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 19241  014AD2  8D98               	bsf	152,6,b	;volatile
 19242                           
 19243                           ; BSR set to: 57
 19244                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 19245  014AD4  0ED2               	movlw	low _TMR5_DefaultInterruptHandler
 19246  014AD6  0100               	movlb	0	; () banked
 19247  014AD8  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 19248  014ADA  0E56               	movlw	high _TMR5_DefaultInterruptHandler
 19249  014ADC  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19250  014ADE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 19251  014AE0  6F62               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 19252  014AE2  EC1B  F0AB         	call	_TMR5_SetInterruptHandler	;wreg free
 19253                           
 19254                           ; BSR set to: 0
 19255                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 19256  014AE6  0E01               	movlw	1
 19257  014AE8  6E9A               	movwf	154,c	;volatile
 19258                           
 19259                           ; BSR set to: 0
 19260  014AEA  0012               	return		;funcret
 19261  014AEC                     __end_of_TMR5_Initialize:
 19262                           	callstack 0
 19263                           
 19264 ;; *************** function _TMR5_SetInterruptHandler *****************
 19265 ;; Defined at:
 19266 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 19267 ;; Parameters:    Size  Location     Type
 19268 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 19269 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 19270 ;; Auto vars:     Size  Location     Type
 19271 ;;		None
 19272 ;; Return value:  Size  Location     Type
 19273 ;;                  1    wreg      void 
 19274 ;; Registers used:
 19275 ;;		wreg, status,2, status,0
 19276 ;; Tracked objects:
 19277 ;;		On entry : 3F/0
 19278 ;;		On exit  : 3F/0
 19279 ;;		Unchanged: 3F/0
 19280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19281 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19284 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19285 ;;Total ram usage:        3 bytes
 19286 ;; Hardware stack levels used: 1
 19287 ;; Hardware stack levels required when called: 7
 19288 ;; This function calls:
 19289 ;;		Nothing
 19290 ;; This function is called by:
 19291 ;;		_TMR5_Initialize
 19292 ;;		_main
 19293 ;; This function uses a non-reentrant model
 19294 ;;
 19295                           
 19296                           	psect	text95
 19297  015636                     __ptext95:
 19298                           	callstack 0
 19299  015636                     _TMR5_SetInterruptHandler:
 19300                           	callstack 23
 19301                           
 19302                           ; BSR set to: 0
 19303                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 19304                           
 19305                           ; BSR set to: 0
 19306                           ;incstack = 0
 19307  015636  C060  F14C         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 19308  01563A  C061  F14D         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 19309  01563E  C062  F14E         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 19310                           
 19311                           ; BSR set to: 0
 19312  015642  0012               	return		;funcret
 19313  015644                     __end_of_TMR5_SetInterruptHandler:
 19314                           	callstack 0
 19315                           
 19316 ;; *************** function _TMR2_Initialize *****************
 19317 ;; Defined at:
 19318 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 19319 ;; Parameters:    Size  Location     Type
 19320 ;;		None
 19321 ;; Auto vars:     Size  Location     Type
 19322 ;;		None
 19323 ;; Return value:  Size  Location     Type
 19324 ;;                  1    wreg      void 
 19325 ;; Registers used:
 19326 ;;		wreg, status,2
 19327 ;; Tracked objects:
 19328 ;;		On entry : 3F/3B
 19329 ;;		On exit  : 3F/39
 19330 ;;		Unchanged: 0/0
 19331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19336 ;;Total ram usage:        0 bytes
 19337 ;; Hardware stack levels used: 1
 19338 ;; Hardware stack levels required when called: 7
 19339 ;; This function calls:
 19340 ;;		Nothing
 19341 ;; This function is called by:
 19342 ;;		_SYSTEM_Initialize
 19343 ;; This function uses a non-reentrant model
 19344 ;;
 19345                           
 19346                           	psect	text96
 19347  0153FE                     __ptext96:
 19348                           	callstack 0
 19349  0153FE                     _TMR2_Initialize:
 19350                           	callstack 22
 19351                           
 19352                           ; BSR set to: 59
 19353                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 19354                           
 19355                           ; BSR set to: 0
 19356                           ;incstack = 0
 19357  0153FE  0E01               	movlw	1
 19358  015400  6EAE               	movwf	174,c	;volatile
 19359                           
 19360                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 19361  015402  0E00               	movlw	0
 19362  015404  6EAD               	movwf	173,c	;volatile
 19363                           
 19364                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 19365  015406  0E00               	movlw	0
 19366  015408  6EAF               	movwf	175,c	;volatile
 19367                           
 19368                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x9F;
 19369  01540A  0E9F               	movlw	159
 19370  01540C  6EAB               	movwf	171,c	;volatile
 19371                           
 19372                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 19373  01540E  0E00               	movlw	0
 19374  015410  6EAA               	movwf	170,c	;volatile
 19375                           
 19376                           ; BSR set to: 59
 19377                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 19378  015412  0139               	movlb	57	; () banked
 19379  015414  95A4               	bcf	164,2,b	;volatile
 19380                           
 19381                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 19382  015416  0E80               	movlw	128
 19383  015418  6EAC               	movwf	172,c	;volatile
 19384                           
 19385                           ; BSR set to: 57
 19386  01541A  0012               	return		;funcret
 19387  01541C                     __end_of_TMR2_Initialize:
 19388                           	callstack 0
 19389                           
 19390 ;; *************** function _SystemArbiter_Initialize *****************
 19391 ;; Defined at:
 19392 ;;		line 108 in file "mcc_generated_files/mcc.c"
 19393 ;; Parameters:    Size  Location     Type
 19394 ;;		None
 19395 ;; Auto vars:     Size  Location     Type
 19396 ;;		None
 19397 ;; Return value:  Size  Location     Type
 19398 ;;                  1    wreg      void 
 19399 ;; Registers used:
 19400 ;;		wreg, status,2
 19401 ;; Tracked objects:
 19402 ;;		On entry : 3F/3D
 19403 ;;		On exit  : 3F/39
 19404 ;;		Unchanged: 0/0
 19405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19410 ;;Total ram usage:        0 bytes
 19411 ;; Hardware stack levels used: 1
 19412 ;; Hardware stack levels required when called: 7
 19413 ;; This function calls:
 19414 ;;		Nothing
 19415 ;; This function is called by:
 19416 ;;		_SYSTEM_Initialize
 19417 ;; This function uses a non-reentrant model
 19418 ;;
 19419                           
 19420                           	psect	text97
 19421  015644                     __ptext97:
 19422                           	callstack 0
 19423  015644                     _SystemArbiter_Initialize:
 19424                           	callstack 22
 19425                           
 19426                           ; BSR set to: 61
 19427                           ;mcc_generated_files/mcc.c: 111:     PRLOCK = 0x55;
 19428                           
 19429                           ; BSR set to: 57
 19430                           ;incstack = 0
 19431  015644  0E55               	movlw	85
 19432  015646  0139               	movlb	57	; () banked
 19433  015648  6FEF               	movwf	239,b	;volatile
 19434                           
 19435                           ;mcc_generated_files/mcc.c: 112:     PRLOCK = 0xAA;
 19436  01564A  0EAA               	movlw	170
 19437  01564C  6FEF               	movwf	239,b	;volatile
 19438                           
 19439                           ; BSR set to: 57
 19440                           ;mcc_generated_files/mcc.c: 113:     PRLOCKbits.PRLOCKED = 1;
 19441  01564E  81EF               	bsf	239,0,b	;volatile
 19442                           
 19443                           ; BSR set to: 57
 19444  015650  0012               	return		;funcret
 19445  015652                     __end_of_SystemArbiter_Initialize:
 19446                           	callstack 0
 19447                           
 19448 ;; *************** function _SPI1_Initialize *****************
 19449 ;; Defined at:
 19450 ;;		line 64 in file "mcc_generated_files/spi1.c"
 19451 ;; Parameters:    Size  Location     Type
 19452 ;;		None
 19453 ;; Auto vars:     Size  Location     Type
 19454 ;;		None
 19455 ;; Return value:  Size  Location     Type
 19456 ;;                  1    wreg      void 
 19457 ;; Registers used:
 19458 ;;		wreg, status,2
 19459 ;; Tracked objects:
 19460 ;;		On entry : 3F/39
 19461 ;;		On exit  : 3F/3D
 19462 ;;		Unchanged: 0/0
 19463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19468 ;;Total ram usage:        0 bytes
 19469 ;; Hardware stack levels used: 1
 19470 ;; Hardware stack levels required when called: 7
 19471 ;; This function calls:
 19472 ;;		Nothing
 19473 ;; This function is called by:
 19474 ;;		_SYSTEM_Initialize
 19475 ;; This function uses a non-reentrant model
 19476 ;;
 19477                           
 19478                           	psect	text98
 19479  0154AA                     __ptext98:
 19480                           	callstack 0
 19481  0154AA                     _SPI1_Initialize:
 19482                           	callstack 22
 19483                           
 19484                           ; BSR set to: 57
 19485                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 19486                           
 19487                           ; BSR set to: 57
 19488                           ;incstack = 0
 19489  0154AA  0E02               	movlw	2
 19490  0154AC  013D               	movlb	61	; () banked
 19491  0154AE  6F14               	movwf	20,b	;volatile
 19492                           
 19493                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 19494  0154B0  0E40               	movlw	64
 19495  0154B2  6F15               	movwf	21,b	;volatile
 19496                           
 19497                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 19498  0154B4  0E00               	movlw	0
 19499  0154B6  6F16               	movwf	22,b	;volatile
 19500                           
 19501                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 19502  0154B8  0E00               	movlw	0
 19503  0154BA  6F1C               	movwf	28,b	;volatile
 19504                           
 19505                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x50;
 19506  0154BC  0E50               	movlw	80
 19507  0154BE  6F19               	movwf	25,b	;volatile
 19508                           
 19509                           ; BSR set to: 61
 19510                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 19511  0154C0  96C4               	bcf	196,3,c	;volatile
 19512                           
 19513                           ; BSR set to: 61
 19514  0154C2  0012               	return		;funcret
 19515  0154C4                     __end_of_SPI1_Initialize:
 19516                           	callstack 0
 19517                           
 19518 ;; *************** function _PWM6_Initialize *****************
 19519 ;; Defined at:
 19520 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 19521 ;; Parameters:    Size  Location     Type
 19522 ;;		None
 19523 ;; Auto vars:     Size  Location     Type
 19524 ;;		None
 19525 ;; Return value:  Size  Location     Type
 19526 ;;                  1    wreg      void 
 19527 ;; Registers used:
 19528 ;;		wreg, status,2
 19529 ;; Tracked objects:
 19530 ;;		On entry : 3F/39
 19531 ;;		On exit  : 3F/3F
 19532 ;;		Unchanged: 0/0
 19533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19538 ;;Total ram usage:        0 bytes
 19539 ;; Hardware stack levels used: 1
 19540 ;; Hardware stack levels required when called: 7
 19541 ;; This function calls:
 19542 ;;		Nothing
 19543 ;; This function is called by:
 19544 ;;		_SYSTEM_Initialize
 19545 ;; This function uses a non-reentrant model
 19546 ;;
 19547                           
 19548                           	psect	text99
 19549  015524                     __ptext99:
 19550                           	callstack 0
 19551  015524                     _PWM6_Initialize:
 19552                           	callstack 22
 19553                           
 19554                           ; BSR set to: 57
 19555                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 19556                           
 19557                           ; BSR set to: 61
 19558                           ;incstack = 0
 19559  015524  0E80               	movlw	128
 19560  015526  6E6A               	movwf	106,c	;volatile
 19561                           
 19562                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x4F;
 19563  015528  0E4F               	movlw	79
 19564  01552A  6E69               	movwf	105,c	;volatile
 19565                           
 19566                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 19567  01552C  0EC0               	movlw	192
 19568  01552E  6E68               	movwf	104,c	;volatile
 19569                           
 19570                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 19571  015530  013F               	movlb	63	; () banked
 19572  015532  515F               	movf	95,w,b	;volatile
 19573  015534  0BF3               	andlw	-13
 19574  015536  0904               	iorlw	4
 19575  015538  6F5F               	movwf	95,b	;volatile
 19576                           
 19577                           ; BSR set to: 63
 19578  01553A  0012               	return		;funcret
 19579  01553C                     __end_of_PWM6_Initialize:
 19580                           	callstack 0
 19581                           
 19582 ;; *************** function _PWM5_Initialize *****************
 19583 ;; Defined at:
 19584 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 19585 ;; Parameters:    Size  Location     Type
 19586 ;;		None
 19587 ;; Auto vars:     Size  Location     Type
 19588 ;;		None
 19589 ;; Return value:  Size  Location     Type
 19590 ;;                  1    wreg      void 
 19591 ;; Registers used:
 19592 ;;		wreg, status,2
 19593 ;; Tracked objects:
 19594 ;;		On entry : 3F/0
 19595 ;;		On exit  : 3F/3F
 19596 ;;		Unchanged: 0/0
 19597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19602 ;;Total ram usage:        0 bytes
 19603 ;; Hardware stack levels used: 1
 19604 ;; Hardware stack levels required when called: 7
 19605 ;; This function calls:
 19606 ;;		Nothing
 19607 ;; This function is called by:
 19608 ;;		_SYSTEM_Initialize
 19609 ;; This function uses a non-reentrant model
 19610 ;;
 19611                           
 19612                           	psect	text100
 19613  01553C                     __ptext100:
 19614                           	callstack 0
 19615  01553C                     _PWM5_Initialize:
 19616                           	callstack 22
 19617                           
 19618                           ; BSR set to: 0
 19619                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 19620                           
 19621                           ; BSR set to: 63
 19622                           ;incstack = 0
 19623  01553C  0E80               	movlw	128
 19624  01553E  6E6E               	movwf	110,c	;volatile
 19625                           
 19626                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x4F;
 19627  015540  0E4F               	movlw	79
 19628  015542  6E6D               	movwf	109,c	;volatile
 19629                           
 19630                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 19631  015544  0EC0               	movlw	192
 19632  015546  6E6C               	movwf	108,c	;volatile
 19633                           
 19634                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 19635  015548  013F               	movlb	63	; () banked
 19636  01554A  515F               	movf	95,w,b	;volatile
 19637  01554C  0BFC               	andlw	-4
 19638  01554E  0901               	iorlw	1
 19639  015550  6F5F               	movwf	95,b	;volatile
 19640                           
 19641                           ; BSR set to: 63
 19642  015552  0012               	return		;funcret
 19643  015554                     __end_of_PWM5_Initialize:
 19644                           	callstack 0
 19645                           
 19646 ;; *************** function _PMD_Initialize *****************
 19647 ;; Defined at:
 19648 ;;		line 87 in file "mcc_generated_files/mcc.c"
 19649 ;; Parameters:    Size  Location     Type
 19650 ;;		None
 19651 ;; Auto vars:     Size  Location     Type
 19652 ;;		None
 19653 ;; Return value:  Size  Location     Type
 19654 ;;                  1    wreg      void 
 19655 ;; Registers used:
 19656 ;;		wreg, status,2
 19657 ;; Tracked objects:
 19658 ;;		On entry : 3F/39
 19659 ;;		On exit  : 3F/39
 19660 ;;		Unchanged: 0/0
 19661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19666 ;;Total ram usage:        0 bytes
 19667 ;; Hardware stack levels used: 1
 19668 ;; Hardware stack levels required when called: 7
 19669 ;; This function calls:
 19670 ;;		Nothing
 19671 ;; This function is called by:
 19672 ;;		_SYSTEM_Initialize
 19673 ;; This function uses a non-reentrant model
 19674 ;;
 19675                           
 19676                           	psect	text101
 19677  01535E                     __ptext101:
 19678                           	callstack 0
 19679  01535E                     _PMD_Initialize:
 19680                           	callstack 22
 19681                           
 19682                           ; BSR set to: 57
 19683                           ;mcc_generated_files/mcc.c: 90:     PMD0 = 0x00;
 19684                           
 19685                           ; BSR set to: 63
 19686                           ;incstack = 0
 19687  01535E  0E00               	movlw	0
 19688  015360  6FC0               	movwf	192,b	;volatile
 19689                           
 19690                           ;mcc_generated_files/mcc.c: 92:     PMD1 = 0x00;
 19691  015362  0E00               	movlw	0
 19692  015364  6FC1               	movwf	193,b	;volatile
 19693                           
 19694                           ;mcc_generated_files/mcc.c: 94:     PMD2 = 0x00;
 19695  015366  0E00               	movlw	0
 19696  015368  6FC2               	movwf	194,b	;volatile
 19697                           
 19698                           ;mcc_generated_files/mcc.c: 96:     PMD3 = 0x00;
 19699  01536A  0E00               	movlw	0
 19700  01536C  6FC3               	movwf	195,b	;volatile
 19701                           
 19702                           ;mcc_generated_files/mcc.c: 98:     PMD4 = 0x00;
 19703  01536E  0E00               	movlw	0
 19704  015370  6FC4               	movwf	196,b	;volatile
 19705                           
 19706                           ;mcc_generated_files/mcc.c: 100:     PMD5 = 0x00;
 19707  015372  0E00               	movlw	0
 19708  015374  6FC5               	movwf	197,b	;volatile
 19709                           
 19710                           ;mcc_generated_files/mcc.c: 102:     PMD6 = 0x00;
 19711  015376  0E00               	movlw	0
 19712  015378  6FC6               	movwf	198,b	;volatile
 19713                           
 19714                           ;mcc_generated_files/mcc.c: 104:     PMD7 = 0x00;
 19715  01537A  0E00               	movlw	0
 19716  01537C  6FC7               	movwf	199,b	;volatile
 19717                           
 19718                           ; BSR set to: 57
 19719  01537E  0012               	return		;funcret
 19720  015380                     __end_of_PMD_Initialize:
 19721                           	callstack 0
 19722                           
 19723 ;; *************** function _PIN_MANAGER_Initialize *****************
 19724 ;; Defined at:
 19725 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 19726 ;; Parameters:    Size  Location     Type
 19727 ;;		None
 19728 ;; Auto vars:     Size  Location     Type
 19729 ;;		None
 19730 ;; Return value:  Size  Location     Type
 19731 ;;                  1    wreg      void 
 19732 ;; Registers used:
 19733 ;;		wreg, status,2
 19734 ;; Tracked objects:
 19735 ;;		On entry : 3F/39
 19736 ;;		On exit  : 3F/3A
 19737 ;;		Unchanged: 0/0
 19738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19743 ;;Total ram usage:        0 bytes
 19744 ;; Hardware stack levels used: 1
 19745 ;; Hardware stack levels required when called: 7
 19746 ;; This function calls:
 19747 ;;		Nothing
 19748 ;; This function is called by:
 19749 ;;		_SYSTEM_Initialize
 19750 ;; This function uses a non-reentrant model
 19751 ;;
 19752                           
 19753                           	psect	text102
 19754  013D00                     __ptext102:
 19755                           	callstack 0
 19756  013D00                     _PIN_MANAGER_Initialize:
 19757                           	callstack 22
 19758                           
 19759                           ; BSR set to: 57
 19760                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 19761                           
 19762                           ; BSR set to: 57
 19763                           ;incstack = 0
 19764  013D00  0E00               	movlw	0
 19765  013D02  6EBE               	movwf	190,c	;volatile
 19766                           
 19767                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 19768  013D04  0E11               	movlw	17
 19769  013D06  6EBD               	movwf	189,c	;volatile
 19770                           
 19771                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 19772  013D08  0E20               	movlw	32
 19773  013D0A  6EBA               	movwf	186,c	;volatile
 19774                           
 19775                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 19776  013D0C  0E00               	movlw	0
 19777  013D0E  6EBF               	movwf	191,c	;volatile
 19778                           
 19779                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 19780  013D10  0E00               	movlw	0
 19781  013D12  6EBB               	movwf	187,c	;volatile
 19782                           
 19783                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x07;
 19784  013D14  0E07               	movlw	7
 19785  013D16  6EBC               	movwf	188,c	;volatile
 19786                           
 19787                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 19788  013D18  0E02               	movlw	2
 19789  013D1A  6EC6               	movwf	198,c	;volatile
 19790                           
 19791                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0B;
 19792  013D1C  0E0B               	movlw	11
 19793  013D1E  6EC7               	movwf	199,c	;volatile
 19794                           
 19795                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 19796  013D20  0EDF               	movlw	223
 19797  013D22  6EC2               	movwf	194,c	;volatile
 19798                           
 19799                           ; BSR set to: 57
 19800                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 19801  013D24  68C3               	setf	195,c	;volatile
 19802                           
 19803                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 19804  013D26  0E90               	movlw	144
 19805  013D28  6EC4               	movwf	196,c	;volatile
 19806                           
 19807                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x08;
 19808  013D2A  0E08               	movlw	8
 19809  013D2C  6EC5               	movwf	197,c	;volatile
 19810                           
 19811                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x08;
 19812  013D2E  0E08               	movlw	8
 19813  013D30  013A               	movlb	58	; () banked
 19814  013D32  6F70               	movwf	112,b	;volatile
 19815                           
 19816                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x00;
 19817  013D34  0E00               	movlw	0
 19818  013D36  6F60               	movwf	96,b	;volatile
 19819                           
 19820                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 19821  013D38  0EFE               	movlw	254
 19822  013D3A  6F50               	movwf	80,b	;volatile
 19823                           
 19824                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 19825  013D3C  0E02               	movlw	2
 19826  013D3E  6F80               	movwf	128,b	;volatile
 19827                           
 19828                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0B;
 19829  013D40  0E0B               	movlw	11
 19830  013D42  6F90               	movwf	144,b	;volatile
 19831                           
 19832                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 19833  013D44  0E8F               	movlw	143
 19834  013D46  6F40               	movwf	64,b	;volatile
 19835                           
 19836                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 19837  013D48  0E00               	movlw	0
 19838  013D4A  6F71               	movwf	113,b	;volatile
 19839                           
 19840                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 19841  013D4C  0E00               	movlw	0
 19842  013D4E  6F91               	movwf	145,b	;volatile
 19843                           
 19844                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 19845  013D50  0E00               	movlw	0
 19846  013D52  6F81               	movwf	129,b	;volatile
 19847                           
 19848                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 19849  013D54  0E01               	movlw	1
 19850  013D56  6F51               	movwf	81,b	;volatile
 19851                           
 19852                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 19853  013D58  0E50               	movlw	80
 19854  013D5A  6F41               	movwf	65,b	;volatile
 19855                           
 19856                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 19857  013D5C  0E00               	movlw	0
 19858  013D5E  6F61               	movwf	97,b	;volatile
 19859                           
 19860                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 19861  013D60  0E00               	movlw	0
 19862  013D62  6F5A               	movwf	90,b	;volatile
 19863                           
 19864                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 19865  013D64  0E00               	movlw	0
 19866  013D66  6F5B               	movwf	91,b	;volatile
 19867                           
 19868                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 19869  013D68  0E00               	movlw	0
 19870  013D6A  6F6A               	movwf	106,b	;volatile
 19871                           
 19872                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 19873  013D6C  0E00               	movlw	0
 19874  013D6E  6F6B               	movwf	107,b	;volatile
 19875                           
 19876                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 19877  013D70  0E00               	movlw	0
 19878  013D72  6F7A               	movwf	122,b	;volatile
 19879                           
 19880                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 19881  013D74  0E00               	movlw	0
 19882  013D76  6F7B               	movwf	123,b	;volatile
 19883                           
 19884                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 19885  013D78  0E00               	movlw	0
 19886  013D7A  6F82               	movwf	130,b	;volatile
 19887                           
 19888                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 19889  013D7C  0E00               	movlw	0
 19890  013D7E  6F92               	movwf	146,b	;volatile
 19891                           
 19892                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 19893  013D80  0E00               	movlw	0
 19894  013D82  6F42               	movwf	66,b	;volatile
 19895                           
 19896                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 19897  013D84  0E00               	movlw	0
 19898  013D86  6F52               	movwf	82,b	;volatile
 19899                           
 19900                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 19901  013D88  0E00               	movlw	0
 19902  013D8A  6F62               	movwf	98,b	;volatile
 19903                           
 19904                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 19905  013D8C  0E00               	movlw	0
 19906  013D8E  6F72               	movwf	114,b	;volatile
 19907                           
 19908                           ; BSR set to: 58
 19909                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 19910  013D90  6943               	setf	67,b	;volatile
 19911                           
 19912                           ; BSR set to: 58
 19913                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 19914  013D92  6953               	setf	83,b	;volatile
 19915                           
 19916                           ; BSR set to: 58
 19917                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 19918  013D94  6963               	setf	99,b	;volatile
 19919                           
 19920                           ; BSR set to: 58
 19921                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 19922  013D96  6973               	setf	115,b	;volatile
 19923                           
 19924                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 19925  013D98  0E07               	movlw	7
 19926  013D9A  6F83               	movwf	131,b	;volatile
 19927                           
 19928                           ; BSR set to: 58
 19929                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 19930  013D9C  6993               	setf	147,b	;volatile
 19931                           
 19932                           ; BSR set to: 58
 19933                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 19934  013D9E  6944               	setf	68,b	;volatile
 19935                           
 19936                           ; BSR set to: 58
 19937                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 19938  013DA0  6954               	setf	84,b	;volatile
 19939                           
 19940                           ; BSR set to: 58
 19941                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 19942  013DA2  6964               	setf	100,b	;volatile
 19943                           
 19944                           ; BSR set to: 58
 19945                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 19946  013DA4  6974               	setf	116,b	;volatile
 19947                           
 19948                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 19949  013DA6  0E0F               	movlw	15
 19950  013DA8  6F84               	movwf	132,b	;volatile
 19951                           
 19952                           ; BSR set to: 58
 19953                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 19954  013DAA  6994               	setf	148,b	;volatile
 19955                           
 19956                           ;mcc_generated_files/pin_manager.c: 144:     RD2PPS = 0x0E;
 19957  013DAC  0E0E               	movlw	14
 19958  013DAE  6F1A               	movwf	26,b	;volatile
 19959                           
 19960                           ;mcc_generated_files/pin_manager.c: 145:     SPI1SCKPPS = 0x13;
 19961  013DB0  0E13               	movlw	19
 19962  013DB2  6FDE               	movwf	222,b	;volatile
 19963                           
 19964                           ;mcc_generated_files/pin_manager.c: 146:     RC3PPS = 0x1E;
 19965  013DB4  0E1E               	movlw	30
 19966  013DB6  6F13               	movwf	19,b	;volatile
 19967                           
 19968                           ;mcc_generated_files/pin_manager.c: 147:     RC5PPS = 0x1F;
 19969  013DB8  0E1F               	movlw	31
 19970  013DBA  6F15               	movwf	21,b	;volatile
 19971                           
 19972                           ;mcc_generated_files/pin_manager.c: 148:     RC6PPS = 0x13;
 19973  013DBC  0E13               	movlw	19
 19974  013DBE  6F16               	movwf	22,b	;volatile
 19975                           
 19976                           ;mcc_generated_files/pin_manager.c: 149:     U1RXPPS = 0x17;
 19977  013DC0  0E17               	movlw	23
 19978  013DC2  6FE5               	movwf	229,b	;volatile
 19979                           
 19980                           ;mcc_generated_files/pin_manager.c: 150:     RF2PPS = 0x0D;
 19981  013DC4  0E0D               	movlw	13
 19982  013DC6  6F2A               	movwf	42,b	;volatile
 19983                           
 19984                           ;mcc_generated_files/pin_manager.c: 151:     SPI1SDIPPS = 0x14;
 19985  013DC8  0E14               	movlw	20
 19986  013DCA  6FDF               	movwf	223,b	;volatile
 19987                           
 19988                           ; BSR set to: 58
 19989  013DCC  0012               	return		;funcret
 19990  013DCE                     __end_of_PIN_MANAGER_Initialize:
 19991                           	callstack 0
 19992                           
 19993 ;; *************** function _OSCILLATOR_Initialize *****************
 19994 ;; Defined at:
 19995 ;;		line 69 in file "mcc_generated_files/mcc.c"
 19996 ;; Parameters:    Size  Location     Type
 19997 ;;		None
 19998 ;; Auto vars:     Size  Location     Type
 19999 ;;		None
 20000 ;; Return value:  Size  Location     Type
 20001 ;;                  1    wreg      void 
 20002 ;; Registers used:
 20003 ;;		wreg, status,2
 20004 ;; Tracked objects:
 20005 ;;		On entry : 3F/3A
 20006 ;;		On exit  : 3F/39
 20007 ;;		Unchanged: 0/0
 20008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20013 ;;Total ram usage:        0 bytes
 20014 ;; Hardware stack levels used: 1
 20015 ;; Hardware stack levels required when called: 7
 20016 ;; This function calls:
 20017 ;;		Nothing
 20018 ;; This function is called by:
 20019 ;;		_SYSTEM_Initialize
 20020 ;; This function uses a non-reentrant model
 20021 ;;
 20022                           
 20023                           	psect	text103
 20024  015474                     __ptext103:
 20025                           	callstack 0
 20026  015474                     _OSCILLATOR_Initialize:
 20027                           	callstack 22
 20028                           
 20029                           ; BSR set to: 58
 20030                           ;mcc_generated_files/mcc.c: 72:     OSCCON1 = 0x20;
 20031                           
 20032                           ; BSR set to: 58
 20033                           ;incstack = 0
 20034  015474  0E20               	movlw	32
 20035  015476  0139               	movlb	57	; () banked
 20036  015478  6FD9               	movwf	217,b	;volatile
 20037                           
 20038                           ;mcc_generated_files/mcc.c: 74:     OSCCON3 = 0x00;
 20039  01547A  0E00               	movlw	0
 20040  01547C  6FDB               	movwf	219,b	;volatile
 20041                           
 20042                           ;mcc_generated_files/mcc.c: 76:     OSCEN = 0x00;
 20043  01547E  0E00               	movlw	0
 20044  015480  6FDD               	movwf	221,b	;volatile
 20045                           
 20046                           ;mcc_generated_files/mcc.c: 78:     OSCFRQ = 0x05;
 20047  015482  0E05               	movlw	5
 20048  015484  6FDF               	movwf	223,b	;volatile
 20049                           
 20050                           ;mcc_generated_files/mcc.c: 80:     OSCTUNE = 0x00;
 20051  015486  0E00               	movlw	0
 20052  015488  6FDE               	movwf	222,b	;volatile
 20053  01548A                     l209:
 20054                           
 20055                           ; BSR set to: 57
 20056                           ;mcc_generated_files/mcc.c: 82:     while(PLLR == 0)
 20057  01548A  B1DC               	btfsc	220,0,b	;volatile
 20058  01548C  0012               	return	
 20059  01548E  D7FD               	goto	l209
 20060  015490                     __end_of_OSCILLATOR_Initialize:
 20061                           	callstack 0
 20062                           
 20063 ;; *************** function _INTERRUPT_Initialize *****************
 20064 ;; Defined at:
 20065 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 20066 ;; Parameters:    Size  Location     Type
 20067 ;;		None
 20068 ;; Auto vars:     Size  Location     Type
 20069 ;;  state           1   31[COMRAM] _Bool 
 20070 ;; Return value:  Size  Location     Type
 20071 ;;                  1    wreg      void 
 20072 ;; Registers used:
 20073 ;;		wreg, status,2
 20074 ;; Tracked objects:
 20075 ;;		On entry : 3F/0
 20076 ;;		On exit  : 3F/39
 20077 ;;		Unchanged: 0/0
 20078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20083 ;;Total ram usage:        1 bytes
 20084 ;; Hardware stack levels used: 1
 20085 ;; Hardware stack levels required when called: 7
 20086 ;; This function calls:
 20087 ;;		Nothing
 20088 ;; This function is called by:
 20089 ;;		_SYSTEM_Initialize
 20090 ;; This function uses a non-reentrant model
 20091 ;;
 20092                           
 20093                           	psect	text104
 20094  014AEC                     __ptext104:
 20095                           	callstack 0
 20096  014AEC                     _INTERRUPT_Initialize:
 20097                           	callstack 22
 20098                           
 20099                           ; BSR set to: 0
 20100                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 20101                           
 20102                           ; BSR set to: 57
 20103                           ;incstack = 0
 20104  014AEC  8AD2               	bsf	210,5,c	;volatile
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 20108  014AEE  0E00               	movlw	0
 20109  014AF0  BED2               	btfsc	16338,7,c	;volatile
 20110  014AF2  0E01               	movlw	1
 20111  014AF4  6E20               	movwf	INTERRUPT_Initialize@state^0,c
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 20115  014AF6  9ED2               	bcf	16338,7,c	;volatile
 20116                           
 20117                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 20118  014AF8  0E55               	movlw	85
 20119  014AFA  6ED4               	movwf	212,c	;volatile
 20120                           
 20121                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 20122  014AFC  0EAA               	movlw	170
 20123  014AFE  6ED4               	movwf	212,c	;volatile
 20124                           
 20125                           ; BSR set to: 0
 20126                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 20127  014B00  90D4               	bcf	212,0,c	;volatile
 20128                           
 20129                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 20130  014B02  0E00               	movlw	0
 20131  014B04  6ED7               	movwf	215,c	;volatile
 20132                           
 20133                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 20134  014B06  0E00               	movlw	0
 20135  014B08  6ED6               	movwf	214,c	;volatile
 20136                           
 20137                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 20138  014B0A  0E08               	movlw	8
 20139  014B0C  6ED5               	movwf	213,c	;volatile
 20140                           
 20141                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 20142  014B0E  0E55               	movlw	85
 20143  014B10  6ED4               	movwf	212,c	;volatile
 20144                           
 20145                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 20146  014B12  0EAA               	movlw	170
 20147  014B14  6ED4               	movwf	212,c	;volatile
 20148                           
 20149                           ; BSR set to: 0
 20150                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 20151  014B16  80D4               	bsf	212,0,c	;volatile
 20152                           
 20153                           ; BSR set to: 0
 20154                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 20155  014B18  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 20156  014B1A  D002               	bra	u6425
 20157  014B1C  9ED2               	bcf	16338,7,c	;volatile
 20158  014B1E  D001               	bra	u6426
 20159  014B20                     u6425:
 20160  014B20  8ED2               	bsf	16338,7,c	;volatile
 20161  014B22                     u6426:
 20162                           
 20163                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1SCNTIP = 1;
 20164  014B22  0139               	movlb	57	; () banked
 20165  014B24  8182               	bsf	130,0,b	;volatile
 20166                           
 20167                           ; BSR set to: 57
 20168                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1IP = 1;
 20169  014B26  8D83               	bsf	131,6,b	;volatile
 20170                           
 20171                           ; BSR set to: 57
 20172                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 0;
 20173  014B28  9983               	bcf	131,4,b	;volatile
 20174                           
 20175                           ; BSR set to: 57
 20176                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1EIP = 1;
 20177  014B2A  8B83               	bsf	131,5,b	;volatile
 20178                           
 20179                           ; BSR set to: 57
 20180                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR3bits.U1RXIP = 0;
 20181  014B2C  9783               	bcf	131,3,b	;volatile
 20182                           
 20183                           ; BSR set to: 57
 20184                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR9bits.TMR6IP = 1;
 20185  014B2E  8189               	bsf	137,0,b	;volatile
 20186                           
 20187                           ; BSR set to: 57
 20188                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5IP = 1;
 20189  014B30  8D88               	bsf	136,6,b	;volatile
 20190                           
 20191                           ; BSR set to: 57
 20192                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.ADIP = 1;
 20193  014B32  8581               	bsf	129,2,b	;volatile
 20194                           
 20195                           ; BSR set to: 57
 20196  014B34  0012               	return		;funcret
 20197  014B36                     __end_of_INTERRUPT_Initialize:
 20198                           	callstack 0
 20199                           
 20200 ;; *************** function _DMA1_Initialize *****************
 20201 ;; Defined at:
 20202 ;;		line 60 in file "mcc_generated_files/dma1.c"
 20203 ;; Parameters:    Size  Location     Type
 20204 ;;		None
 20205 ;; Auto vars:     Size  Location     Type
 20206 ;;		None
 20207 ;; Return value:  Size  Location     Type
 20208 ;;                  1    wreg      void 
 20209 ;; Registers used:
 20210 ;;		wreg, status,2, status,0, cstack
 20211 ;; Tracked objects:
 20212 ;;		On entry : 3F/0
 20213 ;;		On exit  : 3F/3B
 20214 ;;		Unchanged: 0/0
 20215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20220 ;;Total ram usage:        0 bytes
 20221 ;; Hardware stack levels used: 1
 20222 ;; Hardware stack levels required when called: 8
 20223 ;; This function calls:
 20224 ;;		_DMA1_SetSCNTIInterruptHandler
 20225 ;; This function is called by:
 20226 ;;		_SYSTEM_Initialize
 20227 ;; This function uses a non-reentrant model
 20228 ;;
 20229                           
 20230                           	psect	text105
 20231  01475E                     __ptext105:
 20232                           	callstack 0
 20233  01475E                     _DMA1_Initialize:
 20234                           	callstack 21
 20235                           
 20236                           ; BSR set to: 0
 20237                           ;mcc_generated_files/dma1.c: 63:     DMA1SSA = &SrcVarName0;
 20238                           
 20239                           ; BSR set to: 57
 20240                           ;incstack = 0
 20241  01475E  0E62               	movlw	low _SrcVarName0
 20242  014760  013B               	movlb	59	; () banked
 20243  014762  6FF9               	movwf	249,b	;volatile
 20244  014764  0E01               	movlw	high _SrcVarName0
 20245  014766  6FFA               	movwf	250,b	;volatile
 20246  014768  0E00               	movlw	low (_SrcVarName0 shr (0+16))
 20247  01476A  6FFB               	movwf	251,b	;volatile
 20248                           
 20249                           ;mcc_generated_files/dma1.c: 65:     DMA1DSA = &SPI1TXB;
 20250  01476C  0E3D               	movlw	61
 20251  01476E  6FF1               	movwf	241,b	;volatile
 20252  014770  0E11               	movlw	17
 20253  014772  6FF0               	movwf	240,b	;volatile
 20254                           
 20255                           ;mcc_generated_files/dma1.c: 67:     DMA1CON1 = 0x03;
 20256  014774  0E03               	movlw	3
 20257  014776  6FFD               	movwf	253,b	;volatile
 20258                           
 20259                           ;mcc_generated_files/dma1.c: 69:     DMA1SSZ = 1;
 20260  014778  0E00               	movlw	0
 20261  01477A  6FF8               	movwf	248,b	;volatile
 20262  01477C  0E01               	movlw	1
 20263  01477E  6FF7               	movwf	247,b	;volatile
 20264                           
 20265                           ;mcc_generated_files/dma1.c: 71:     DMA1DSZ = 1;
 20266  014780  0E00               	movlw	0
 20267  014782  6FEF               	movwf	239,b	;volatile
 20268  014784  0E01               	movlw	1
 20269  014786  6FEE               	movwf	238,b	;volatile
 20270                           
 20271                           ;mcc_generated_files/dma1.c: 73:     DMA1SIRQ = 0x15;
 20272  014788  0E15               	movlw	21
 20273  01478A  6FFF               	movwf	255,b	;volatile
 20274                           
 20275                           ;mcc_generated_files/dma1.c: 75:     DMA1AIRQ = 0x00;
 20276  01478C  0E00               	movlw	0
 20277  01478E  6FFE               	movwf	254,b	;volatile
 20278                           
 20279                           ; BSR set to: 59
 20280                           ;mcc_generated_files/dma1.c: 78:     PIR2bits.DMA1DCNTIF = 0;
 20281  014790  0139               	movlb	57	; () banked
 20282  014792  93A2               	bcf	162,1,b	;volatile
 20283                           
 20284                           ; BSR set to: 57
 20285                           ;mcc_generated_files/dma1.c: 80:     PIR2bits.DMA1SCNTIF = 0;
 20286  014794  91A2               	bcf	162,0,b	;volatile
 20287                           
 20288                           ; BSR set to: 57
 20289                           ;mcc_generated_files/dma1.c: 82:     PIR2bits.DMA1AIF = 0;
 20290  014796  97A2               	bcf	162,3,b	;volatile
 20291                           
 20292                           ; BSR set to: 57
 20293                           ;mcc_generated_files/dma1.c: 84:     PIR2bits.DMA1ORIF =0;
 20294  014798  95A2               	bcf	162,2,b	;volatile
 20295                           
 20296                           ; BSR set to: 57
 20297                           ;mcc_generated_files/dma1.c: 86:     PIE2bits.DMA1DCNTIE = 0;
 20298  01479A  9392               	bcf	146,1,b	;volatile
 20299                           
 20300                           ; BSR set to: 57
 20301                           ;mcc_generated_files/dma1.c: 87:     PIE2bits.DMA1SCNTIE = 1;
 20302  01479C  8192               	bsf	146,0,b	;volatile
 20303                           
 20304                           ; BSR set to: 57
 20305                           ;mcc_generated_files/dma1.c: 88:  DMA1_SetSCNTIInterruptHandler(DMA1_DefaultInterruptHan
      +                          dler);
 20306  01479E  0ED4               	movlw	low _DMA1_DefaultInterruptHandler
 20307  0147A0  0100               	movlb	0	; () banked
 20308  0147A2  6F60               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler& (0+255),b
 20309  0147A4  0E56               	movlw	high _DMA1_DefaultInterruptHandler
 20310  0147A6  6F61               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)& (0+255),b
 20311  0147A8  0E01               	movlw	low (_DMA1_DefaultInterruptHandler shr (0+16))
 20312  0147AA  6F62               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)& (0+255),b
 20313  0147AC  EC29  F0AB         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
 20314                           
 20315                           ; BSR set to: 0
 20316                           ;mcc_generated_files/dma1.c: 89:     PIE2bits.DMA1AIE = 0;
 20317  0147B0  0139               	movlb	57	; () banked
 20318  0147B2  9792               	bcf	146,3,b	;volatile
 20319                           
 20320                           ; BSR set to: 57
 20321                           ;mcc_generated_files/dma1.c: 90:     PIE2bits.DMA1ORIE = 0;
 20322  0147B4  9592               	bcf	146,2,b	;volatile
 20323                           
 20324                           ; BSR set to: 57
 20325                           ;mcc_generated_files/dma1.c: 93:     DMA1CON0 = 0xC0;
 20326  0147B6  0EC0               	movlw	192
 20327  0147B8  013B               	movlb	59	; () banked
 20328  0147BA  6FFC               	movwf	252,b	;volatile
 20329                           
 20330                           ; BSR set to: 59
 20331  0147BC  0012               	return		;funcret
 20332  0147BE                     __end_of_DMA1_Initialize:
 20333                           	callstack 0
 20334                           
 20335 ;; *************** function _DMA1_SetSCNTIInterruptHandler *****************
 20336 ;; Defined at:
 20337 ;;		line 179 in file "mcc_generated_files/dma1.c"
 20338 ;; Parameters:    Size  Location     Type
 20339 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 20340 ;;		 -> source_dma_done(1), DMA1_DefaultInterruptHandler(1), 
 20341 ;; Auto vars:     Size  Location     Type
 20342 ;;		None
 20343 ;; Return value:  Size  Location     Type
 20344 ;;                  1    wreg      void 
 20345 ;; Registers used:
 20346 ;;		wreg, status,2, status,0
 20347 ;; Tracked objects:
 20348 ;;		On entry : 3F/0
 20349 ;;		On exit  : 3F/0
 20350 ;;		Unchanged: 3F/0
 20351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20352 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20355 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20356 ;;Total ram usage:        3 bytes
 20357 ;; Hardware stack levels used: 1
 20358 ;; Hardware stack levels required when called: 7
 20359 ;; This function calls:
 20360 ;;		Nothing
 20361 ;; This function is called by:
 20362 ;;		_DMA1_Initialize
 20363 ;;		_main
 20364 ;; This function uses a non-reentrant model
 20365 ;;
 20366                           
 20367                           	psect	text106
 20368  015652                     __ptext106:
 20369                           	callstack 0
 20370  015652                     _DMA1_SetSCNTIInterruptHandler:
 20371                           	callstack 21
 20372                           
 20373                           ; BSR set to: 0
 20374                           ;mcc_generated_files/dma1.c: 179: void DMA1_SetSCNTIInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/dma1.c: 180: {;mcc_generated_files/dma1.c: 181:   DMA1
      +                          _SCNTI_InterruptHandler = InterruptHandler;
 20375                           
 20376                           ; BSR set to: 59
 20377                           ;incstack = 0
 20378  015652  C060  F149         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler,_DMA1_SCNTI_InterruptHandler
 20379  015656  C061  F14A         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+1,_DMA1_SCNTI_InterruptHandler+1
 20380  01565A  C062  F14B         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+2,_DMA1_SCNTI_InterruptHandler+2
 20381                           
 20382                           ; BSR set to: 0
 20383  01565E  0012               	return		;funcret
 20384  015660                     __end_of_DMA1_SetSCNTIInterruptHandler:
 20385                           	callstack 0
 20386                           
 20387 ;; *************** function _DAC1_Initialize *****************
 20388 ;; Defined at:
 20389 ;;		line 58 in file "mcc_generated_files/dac1.c"
 20390 ;; Parameters:    Size  Location     Type
 20391 ;;		None
 20392 ;; Auto vars:     Size  Location     Type
 20393 ;;		None
 20394 ;; Return value:  Size  Location     Type
 20395 ;;                  1    wreg      void 
 20396 ;; Registers used:
 20397 ;;		wreg, status,2
 20398 ;; Tracked objects:
 20399 ;;		On entry : 3F/0
 20400 ;;		On exit  : 3F/3E
 20401 ;;		Unchanged: 0/0
 20402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20407 ;;Total ram usage:        0 bytes
 20408 ;; Hardware stack levels used: 1
 20409 ;; Hardware stack levels required when called: 7
 20410 ;; This function calls:
 20411 ;;		Nothing
 20412 ;; This function is called by:
 20413 ;;		_SYSTEM_Initialize
 20414 ;; This function uses a non-reentrant model
 20415 ;;
 20416                           
 20417                           	psect	text107
 20418  01567C                     __ptext107:
 20419                           	callstack 0
 20420  01567C                     _DAC1_Initialize:
 20421                           	callstack 22
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 20425                           
 20426                           ; BSR set to: 0
 20427                           ;incstack = 0
 20428  01567C  0EA4               	movlw	164
 20429  01567E  013E               	movlb	62	; () banked
 20430  015680  6F9E               	movwf	158,b	;volatile
 20431                           
 20432                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 20433  015682  0E1F               	movlw	31
 20434  015684  6F9C               	movwf	156,b	;volatile
 20435                           
 20436                           ; BSR set to: 62
 20437  015686  0012               	return		;funcret
 20438  015688                     __end_of_DAC1_Initialize:
 20439                           	callstack 0
 20440                           
 20441 ;; *************** function _ADCC_Initialize *****************
 20442 ;; Defined at:
 20443 ;;		line 64 in file "mcc_generated_files/adcc.c"
 20444 ;; Parameters:    Size  Location     Type
 20445 ;;		None
 20446 ;; Auto vars:     Size  Location     Type
 20447 ;;		None
 20448 ;; Return value:  Size  Location     Type
 20449 ;;                  1    wreg      void 
 20450 ;; Registers used:
 20451 ;;		wreg, status,2, status,0, cstack
 20452 ;; Tracked objects:
 20453 ;;		On entry : 3F/39
 20454 ;;		On exit  : 3F/0
 20455 ;;		Unchanged: 0/0
 20456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20461 ;;Total ram usage:        0 bytes
 20462 ;; Hardware stack levels used: 1
 20463 ;; Hardware stack levels required when called: 8
 20464 ;; This function calls:
 20465 ;;		_ADCC_SetADIInterruptHandler
 20466 ;; This function is called by:
 20467 ;;		_SYSTEM_Initialize
 20468 ;; This function uses a non-reentrant model
 20469 ;;
 20470                           
 20471                           	psect	text108
 20472  01447C                     __ptext108:
 20473                           	callstack 0
 20474  01447C                     _ADCC_Initialize:
 20475                           	callstack 21
 20476                           
 20477                           ; BSR set to: 57
 20478                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 20479                           
 20480                           ; BSR set to: 62
 20481                           ;incstack = 0
 20482  01447C  0E00               	movlw	0
 20483  01447E  013E               	movlb	62	; () banked
 20484  014480  6FDE               	movwf	222,b	;volatile
 20485                           
 20486                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 20487  014482  0E00               	movlw	0
 20488  014484  6FDF               	movwf	223,b	;volatile
 20489                           
 20490                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 20491  014486  0E00               	movlw	0
 20492  014488  6FE0               	movwf	224,b	;volatile
 20493                           
 20494                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 20495  01448A  0E00               	movlw	0
 20496  01448C  6FE1               	movwf	225,b	;volatile
 20497                           
 20498                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 20499  01448E  0E00               	movlw	0
 20500  014490  6FE4               	movwf	228,b	;volatile
 20501                           
 20502                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 20503  014492  0E00               	movlw	0
 20504  014494  6FE5               	movwf	229,b	;volatile
 20505                           
 20506                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 20507  014496  0E00               	movlw	0
 20508  014498  6FEA               	movwf	234,b	;volatile
 20509                           
 20510                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 20511  01449A  0E00               	movlw	0
 20512  01449C  6FEC               	movwf	236,b	;volatile
 20513                           
 20514                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 20515  01449E  0E00               	movlw	0
 20516  0144A0  6FF1               	movwf	241,b	;volatile
 20517                           
 20518                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 20519  0144A2  0E10               	movlw	16
 20520  0144A4  6FF3               	movwf	243,b	;volatile
 20521                           
 20522                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 20523  0144A6  0E00               	movlw	0
 20524  0144A8  6FF4               	movwf	244,b	;volatile
 20525                           
 20526                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 20527  0144AA  0E00               	movlw	0
 20528  0144AC  6FF5               	movwf	245,b	;volatile
 20529                           
 20530                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 20531  0144AE  0E00               	movlw	0
 20532  0144B0  6FF6               	movwf	246,b	;volatile
 20533                           
 20534                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 20535  0144B2  0E00               	movlw	0
 20536  0144B4  6FF7               	movwf	247,b	;volatile
 20537                           
 20538                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 20539  0144B6  0E00               	movlw	0
 20540  0144B8  6FF9               	movwf	249,b	;volatile
 20541                           
 20542                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 20543  0144BA  0E00               	movlw	0
 20544  0144BC  6FFA               	movwf	250,b	;volatile
 20545                           
 20546                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x20;
 20547  0144BE  0E20               	movlw	32
 20548  0144C0  6FFB               	movwf	251,b	;volatile
 20549                           
 20550                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 20551  0144C2  0E00               	movlw	0
 20552  0144C4  6FFC               	movwf	252,b	;volatile
 20553                           
 20554                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 20555  0144C6  0E02               	movlw	2
 20556  0144C8  6FFD               	movwf	253,b	;volatile
 20557                           
 20558                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 20559  0144CA  0E07               	movlw	7
 20560  0144CC  6FFE               	movwf	254,b	;volatile
 20561                           
 20562                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x1F;
 20563  0144CE  0E1F               	movlw	31
 20564  0144D0  6FFF               	movwf	255,b	;volatile
 20565                           
 20566                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x84;
 20567  0144D2  0E84               	movlw	132
 20568  0144D4  6FF8               	movwf	248,b	;volatile
 20569                           
 20570                           ; BSR set to: 62
 20571                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 20572  0144D6  0139               	movlb	57	; () banked
 20573  0144D8  95A1               	bcf	161,2,b	;volatile
 20574                           
 20575                           ; BSR set to: 57
 20576                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 20577  0144DA  8591               	bsf	145,2,b	;volatile
 20578                           
 20579                           ; BSR set to: 57
 20580                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 20581  0144DC  0ECC               	movlw	low _ADCC_DefaultInterruptHandler
 20582  0144DE  0100               	movlb	0	; () banked
 20583  0144E0  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 20584  0144E2  0E56               	movlw	high _ADCC_DefaultInterruptHandler
 20585  0144E4  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 20586  0144E6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 20587  0144E8  6F62               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 20588  0144EA  EC30  F0AB         	call	_ADCC_SetADIInterruptHandler	;wreg free
 20589                           
 20590                           ; BSR set to: 0
 20591  0144EE  0012               	return		;funcret
 20592  0144F0                     __end_of_ADCC_Initialize:
 20593                           	callstack 0
 20594                           
 20595 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 20596 ;; Defined at:
 20597 ;;		line 316 in file "mcc_generated_files/adcc.c"
 20598 ;; Parameters:    Size  Location     Type
 20599 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 20600 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 20601 ;; Auto vars:     Size  Location     Type
 20602 ;;		None
 20603 ;; Return value:  Size  Location     Type
 20604 ;;                  1    wreg      void 
 20605 ;; Registers used:
 20606 ;;		wreg, status,2, status,0
 20607 ;; Tracked objects:
 20608 ;;		On entry : 3F/0
 20609 ;;		On exit  : 3F/0
 20610 ;;		Unchanged: 3F/0
 20611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20612 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20615 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20616 ;;Total ram usage:        3 bytes
 20617 ;; Hardware stack levels used: 1
 20618 ;; Hardware stack levels required when called: 7
 20619 ;; This function calls:
 20620 ;;		Nothing
 20621 ;; This function is called by:
 20622 ;;		_ADCC_Initialize
 20623 ;;		_main
 20624 ;; This function uses a non-reentrant model
 20625 ;;
 20626                           
 20627                           	psect	text109
 20628  015660                     __ptext109:
 20629                           	callstack 0
 20630  015660                     _ADCC_SetADIInterruptHandler:
 20631                           	callstack 21
 20632                           
 20633                           ; BSR set to: 0
 20634                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;incstack = 0
 20638  015660  C060  F152         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 20639  015664  C061  F153         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 20640  015668  C062  F154         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 20641                           
 20642                           ; BSR set to: 0
 20643  01566C  0012               	return		;funcret
 20644  01566E                     __end_of_ADCC_SetADIInterruptHandler:
 20645                           	callstack 0
 20646                           
 20647 ;; *************** function _PWM6_LoadDutyValue *****************
 20648 ;; Defined at:
 20649 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 20650 ;; Parameters:    Size  Location     Type
 20651 ;;  dutyValue       2   31[COMRAM] unsigned short 
 20652 ;; Auto vars:     Size  Location     Type
 20653 ;;		None
 20654 ;; Return value:  Size  Location     Type
 20655 ;;                  1    wreg      void 
 20656 ;; Registers used:
 20657 ;;		wreg, status,2, status,0
 20658 ;; Tracked objects:
 20659 ;;		On entry : 3F/0
 20660 ;;		On exit  : 3F/0
 20661 ;;		Unchanged: 0/0
 20662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20665 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20666 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20667 ;;Total ram usage:        4 bytes
 20668 ;; Hardware stack levels used: 1
 20669 ;; Hardware stack levels required when called: 7
 20670 ;; This function calls:
 20671 ;;		Nothing
 20672 ;; This function is called by:
 20673 ;;		_main
 20674 ;; This function uses a non-reentrant model
 20675 ;;
 20676                           
 20677                           	psect	text110
 20678  0150DA                     __ptext110:
 20679                           	callstack 0
 20680  0150DA                     _PWM6_LoadDutyValue:
 20681                           	callstack 23
 20682                           
 20683                           ; BSR set to: 0
 20684                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20685                           
 20686                           ; BSR set to: 0
 20687                           ;incstack = 0
 20688  0150DA  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 20689  0150DE  C021  F061         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 20690  0150E2  90D8               	bcf	status,0,c
 20691  0150E4  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 20692  0150E6  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
 20693  0150E8  90D8               	bcf	status,0,c
 20694  0150EA  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 20695  0150EC  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
 20696  0150EE  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
 20697  0150F0  6E69               	movwf	105,c	;volatile
 20698                           
 20699                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 20700  0150F2  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 20701  0150F6  0E03               	movlw	3
 20702  0150F8  1760               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
 20703  0150FA  0E06               	movlw	6
 20704  0150FC  6F61               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
 20705  0150FE                     u10365:
 20706  0150FE  90D8               	bcf	status,0,c
 20707  015100  3760               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
 20708  015102  2F61               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 20709  015104  D7FC               	goto	u10365
 20710  015106  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
 20711  015108  6E68               	movwf	104,c	;volatile
 20712                           
 20713                           ; BSR set to: 0
 20714  01510A  0012               	return		;funcret
 20715  01510C                     __end_of_PWM6_LoadDutyValue:
 20716                           	callstack 0
 20717                           
 20718 ;; *************** function _PWM5_LoadDutyValue *****************
 20719 ;; Defined at:
 20720 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 20721 ;; Parameters:    Size  Location     Type
 20722 ;;  dutyValue       2   31[COMRAM] unsigned short 
 20723 ;; Auto vars:     Size  Location     Type
 20724 ;;		None
 20725 ;; Return value:  Size  Location     Type
 20726 ;;                  1    wreg      void 
 20727 ;; Registers used:
 20728 ;;		wreg, status,2, status,0
 20729 ;; Tracked objects:
 20730 ;;		On entry : 3F/3E
 20731 ;;		On exit  : 3F/0
 20732 ;;		Unchanged: 0/0
 20733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20737 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20738 ;;Total ram usage:        4 bytes
 20739 ;; Hardware stack levels used: 1
 20740 ;; Hardware stack levels required when called: 7
 20741 ;; This function calls:
 20742 ;;		Nothing
 20743 ;; This function is called by:
 20744 ;;		_main
 20745 ;; This function uses a non-reentrant model
 20746 ;;
 20747                           
 20748                           	psect	text111
 20749  015042                     __ptext111:
 20750                           	callstack 0
 20751  015042                     _PWM5_LoadDutyValue:
 20752                           	callstack 23
 20753                           
 20754                           ; BSR set to: 62
 20755                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20756                           
 20757                           ; BSR set to: 0
 20758                           ;incstack = 0
 20759  015042  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 20760  015046  C021  F061         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 20761  01504A  0100               	movlb	0	; () banked
 20762  01504C  90D8               	bcf	status,0,c
 20763  01504E  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 20764  015050  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
 20765  015052  90D8               	bcf	status,0,c
 20766  015054  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 20767  015056  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
 20768  015058  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
 20769  01505A  6E6D               	movwf	109,c	;volatile
 20770                           
 20771                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 20772  01505C  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 20773  015060  0E03               	movlw	3
 20774  015062  1760               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
 20775  015064  0E06               	movlw	6
 20776  015066  6F61               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
 20777  015068                     u10355:
 20778  015068  90D8               	bcf	status,0,c
 20779  01506A  3760               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
 20780  01506C  2F61               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 20781  01506E  D7FC               	goto	u10355
 20782  015070  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
 20783  015072  6E6C               	movwf	108,c	;volatile
 20784                           
 20785                           ; BSR set to: 0
 20786  015074  0012               	return		;funcret
 20787  015076                     __end_of_PWM5_LoadDutyValue:
 20788                           	callstack 0
 20789                           
 20790 ;; *************** function _DATAEE_ReadByte *****************
 20791 ;; Defined at:
 20792 ;;		line 187 in file "mcc_generated_files/memory.c"
 20793 ;; Parameters:    Size  Location     Type
 20794 ;;  bAdd            2   31[COMRAM] unsigned short 
 20795 ;; Auto vars:     Size  Location     Type
 20796 ;;		None
 20797 ;; Return value:  Size  Location     Type
 20798 ;;                  1    wreg      unsigned char 
 20799 ;; Registers used:
 20800 ;;		wreg, status,2, status,0
 20801 ;; Tracked objects:
 20802 ;;		On entry : 3D/3B
 20803 ;;		On exit  : 3F/39
 20804 ;;		Unchanged: 0/0
 20805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20810 ;;Total ram usage:        2 bytes
 20811 ;; Hardware stack levels used: 1
 20812 ;; Hardware stack levels required when called: 7
 20813 ;; This function calls:
 20814 ;;		Nothing
 20815 ;; This function is called by:
 20816 ;;		_main
 20817 ;; This function uses a non-reentrant model
 20818 ;;
 20819                           
 20820                           	psect	text112
 20821  01541C                     __ptext112:
 20822                           	callstack 0
 20823  01541C                     _DATAEE_ReadByte:
 20824                           	callstack 23
 20825                           
 20826                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 20827                           
 20828                           ; BSR set to: 0
 20829                           ;incstack = 0
 20830  01541C  5021               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 20831  01541E  0B03               	andlw	3
 20832  015420  0139               	movlb	57	; () banked
 20833  015422  6FE1               	movwf	225,b	;volatile
 20834                           
 20835                           ; BSR set to: 57
 20836                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 20837  015424  0060  F083  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 20838                           
 20839                           ; BSR set to: 57
 20840                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
 20841  01542A  0E3F               	movlw	-193
 20842  01542C  17E5               	andwf	229,f,b	;volsfr
 20843                           
 20844                           ; BSR set to: 57
 20845                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
 20846  01542E  81E5               	bsf	229,0,b	;volsfr
 20847                           
 20848                           ; BSR set to: 57
 20849                           ;mcc_generated_files/memory.c: 193:     __nop();
 20850  015430  F000               	nop	
 20851                           
 20852                           ;mcc_generated_files/memory.c: 194:     __nop();
 20853  015432  F000               	nop	
 20854                           
 20855                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
 20856  015434  0139               	movlb	57	; () banked
 20857  015436  51E3               	movf	227,w,b	;volatile
 20858                           
 20859                           ; BSR set to: 57
 20860  015438  0012               	return		;funcret
 20861  01543A                     __end_of_DATAEE_ReadByte:
 20862                           	callstack 0
 20863                           
 20864 ;; *************** function _DAC1_SetOutput *****************
 20865 ;; Defined at:
 20866 ;;		line 66 in file "mcc_generated_files/dac1.c"
 20867 ;; Parameters:    Size  Location     Type
 20868 ;;  inputData       1    wreg     unsigned char 
 20869 ;; Auto vars:     Size  Location     Type
 20870 ;;  inputData       1   31[COMRAM] unsigned char 
 20871 ;; Return value:  Size  Location     Type
 20872 ;;                  1    wreg      void 
 20873 ;; Registers used:
 20874 ;;		wreg
 20875 ;; Tracked objects:
 20876 ;;		On entry : 3F/0
 20877 ;;		On exit  : 0/0
 20878 ;;		Unchanged: 0/0
 20879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20884 ;;Total ram usage:        1 bytes
 20885 ;; Hardware stack levels used: 1
 20886 ;; Hardware stack levels required when called: 7
 20887 ;; This function calls:
 20888 ;;		Nothing
 20889 ;; This function is called by:
 20890 ;;		_main
 20891 ;; This function uses a non-reentrant model
 20892 ;;
 20893                           
 20894                           	psect	text113
 20895  015692                     __ptext113:
 20896                           	callstack 0
 20897  015692                     _DAC1_SetOutput:
 20898                           	callstack 23
 20899                           
 20900                           ; BSR set to: 57
 20901                           ;incstack = 0
 20902                           ;DAC1_SetOutput@inputData stored from wreg
 20903  015692  6E20               	movwf	DAC1_SetOutput@inputData^0,c
 20904                           
 20905                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 20906  015694  0060  F083  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 20907  01569A  0012               	return		;funcret
 20908  01569C                     __end_of_DAC1_SetOutput:
 20909                           	callstack 0
 20910                           
 20911 ;; *************** function _DAC1_GetOutput *****************
 20912 ;; Defined at:
 20913 ;;		line 71 in file "mcc_generated_files/dac1.c"
 20914 ;; Parameters:    Size  Location     Type
 20915 ;;		None
 20916 ;; Auto vars:     Size  Location     Type
 20917 ;;		None
 20918 ;; Return value:  Size  Location     Type
 20919 ;;                  1    wreg      unsigned char 
 20920 ;; Registers used:
 20921 ;;		wreg, status,2
 20922 ;; Tracked objects:
 20923 ;;		On entry : 3F/1
 20924 ;;		On exit  : 3F/3E
 20925 ;;		Unchanged: 0/0
 20926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20931 ;;Total ram usage:        0 bytes
 20932 ;; Hardware stack levels used: 1
 20933 ;; Hardware stack levels required when called: 7
 20934 ;; This function calls:
 20935 ;;		Nothing
 20936 ;; This function is called by:
 20937 ;;		_main
 20938 ;; This function uses a non-reentrant model
 20939 ;;
 20940                           
 20941                           	psect	text114
 20942  0156B0                     __ptext114:
 20943                           	callstack 0
 20944  0156B0                     _DAC1_GetOutput:
 20945                           	callstack 23
 20946                           
 20947                           ; BSR set to: 1
 20948                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 20949                           
 20950                           ;incstack = 0
 20951  0156B0  013E               	movlb	62	; () banked
 20952  0156B2  519C               	movf	156,w,b	;volatile
 20953                           
 20954                           ; BSR set to: 62
 20955  0156B4  0012               	return		;funcret
 20956  0156B6                     __end_of_DAC1_GetOutput:
 20957                           	callstack 0
 20958                           
 20959 ;; *************** function _UART1_tx_vect_isr *****************
 20960 ;; Defined at:
 20961 ;;		line 243 in file "mcc_generated_files/uart1.c"
 20962 ;; Parameters:    Size  Location     Type
 20963 ;;		None
 20964 ;; Auto vars:     Size  Location     Type
 20965 ;;		None
 20966 ;; Return value:  Size  Location     Type
 20967 ;;                  1    wreg      void 
 20968 ;; Registers used:
 20969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 20970 ;; Tracked objects:
 20971 ;;		On entry : 0/0
 20972 ;;		On exit  : 0/0
 20973 ;;		Unchanged: 0/0
 20974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20977 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20978 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20979 ;;Total ram usage:        3 bytes
 20980 ;; Hardware stack levels used: 1
 20981 ;; Hardware stack levels required when called: 4
 20982 ;; This function calls:
 20983 ;;		Absolute function
 20984 ;;		_UART1_Transmit_ISR
 20985 ;; This function is called by:
 20986 ;;		Interrupt level 1
 20987 ;; This function uses a non-reentrant model
 20988 ;;
 20989                           
 20990                           	psect	text115
 20991  014B80                     __ptext115:
 20992                           	callstack 0
 20993  014B80                     _UART1_tx_vect_isr:
 20994                           	callstack 17
 20995                           
 20996                           ; BSR set to: 62
 20997                           ;incstack = 0
 20998  014B80  006F FF60  F01A    	movff	status,??_UART1_tx_vect_isr
 20999  014B86  006F FFE8  F01B    	movff	pclath,??_UART1_tx_vect_isr+1
 21000  014B8C  006F FFEC  F01C    	movff	pclatu,??_UART1_tx_vect_isr+2
 21001                           
 21002                           ;mcc_generated_files/uart1.c: 245:     if(UART1_TxInterruptHandler)
 21003  014B92  5026               	movf	_UART1_TxInterruptHandler^0,w,c
 21004  014B94  1027               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 21005  014B96  1028               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 21006  014B98  B4D8               	btfsc	status,2,c
 21007  014B9A  D00C               	goto	i1u1046_29
 21008                           
 21009                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _TxInterruptHandler();
 21010  014B9C  D801               	call	i1u1046_28
 21011  014B9E  D00A               	goto	i1u1046_29
 21012  014BA0                     i1u1046_28:
 21013  014BA0  0005               	push	
 21014  014BA2  6EFA               	movwf	pclath,c
 21015  014BA4  5026               	movf	_UART1_TxInterruptHandler^0,w,c
 21016  014BA6  6EFD               	movwf	tosl,c
 21017  014BA8  5027               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 21018  014BAA  6EFE               	movwf	tosh,c
 21019  014BAC  5028               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 21020  014BAE  6EFF               	movwf	tosu,c
 21021  014BB0  50FA               	movf	pclath,w,c
 21022  014BB2  0012               	return		;indir
 21023  014BB4                     i1u1046_29:
 21024  014BB4  0060  F073  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 21025  014BBA  0060  F06F  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 21026  014BC0  0060  F06B  FFD8   	movff	??_UART1_tx_vect_isr,status
 21027  014BC6  0011               	retfie		f
 21028  014BC8                     __end_of_UART1_tx_vect_isr:
 21029                           	callstack 0
 21030                           
 21031 ;; *************** function _UART1_Transmit_ISR *****************
 21032 ;; Defined at:
 21033 ;;		line 275 in file "mcc_generated_files/uart1.c"
 21034 ;; Parameters:    Size  Location     Type
 21035 ;;		None
 21036 ;; Auto vars:     Size  Location     Type
 21037 ;;		None
 21038 ;; Return value:  Size  Location     Type
 21039 ;;                  1    wreg      void 
 21040 ;; Registers used:
 21041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21042 ;; Tracked objects:
 21043 ;;		On entry : 0/0
 21044 ;;		On exit  : 3B/39
 21045 ;;		Unchanged: 0/0
 21046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21051 ;;Total ram usage:        0 bytes
 21052 ;; Hardware stack levels used: 1
 21053 ;; Hardware stack levels required when called: 3
 21054 ;; This function calls:
 21055 ;;		Nothing
 21056 ;; This function is called by:
 21057 ;;		_UART1_Initialize
 21058 ;;		_UART1_tx_vect_isr
 21059 ;; This function uses a non-reentrant model
 21060 ;;
 21061                           
 21062                           	psect	text116
 21063  01519A                     __ptext116:
 21064                           	callstack 0
 21065  01519A                     _UART1_Transmit_ISR:
 21066                           	callstack 17
 21067                           
 21068                           ;mcc_generated_files/uart1.c: 278:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 21069                           
 21070                           ;incstack = 0
 21071  01519A  0E40               	movlw	64
 21072  01519C  603E               	cpfslt	_uart1TxBufferRemaining^0,c
 21073  01519E  D011               	goto	i1l1027
 21074                           
 21075                           ;mcc_generated_files/uart1.c: 279:     {;mcc_generated_files/uart1.c: 280:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 21076  0151A0  0E40               	movlw	low _uart1TxBuffer
 21077  0151A2  243F               	addwf	_uart1TxTail^0,w,c	;volatile
 21078  0151A4  6ED9               	movwf	fsr2l,c
 21079  0151A6  6ADA               	clrf	fsr2h,c
 21080  0151A8  0E03               	movlw	high _uart1TxBuffer
 21081  0151AA  22DA               	addwfc	fsr2h,f,c
 21082  0151AC  50DF               	movf	indf2,w,c
 21083  0151AE  013D               	movlb	61	; () banked
 21084  0151B0  6FEA               	movwf	234,b	;volatile
 21085                           
 21086                           ; BSR set to: 61
 21087  0151B2  2A3F               	incf	_uart1TxTail^0,f,c	;volatile
 21088                           
 21089                           ; BSR set to: 61
 21090                           ;mcc_generated_files/uart1.c: 281:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 21091  0151B4  0E3F               	movlw	63
 21092  0151B6  643F               	cpfsgt	_uart1TxTail^0,c
 21093  0151B8  D002               	goto	i1l10686
 21094                           
 21095                           ; BSR set to: 61
 21096                           ;mcc_generated_files/uart1.c: 282:         {;mcc_generated_files/uart1.c: 283:          
      +                             uart1TxTail = 0;
 21097  0151BA  0E00               	movlw	0
 21098  0151BC  6E3F               	movwf	_uart1TxTail^0,c	;volatile
 21099  0151BE                     i1l10686:
 21100                           
 21101                           ; BSR set to: 61
 21102                           ;mcc_generated_files/uart1.c: 285:         uart1TxBufferRemaining++;
 21103  0151BE  2A3E               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 21104                           
 21105                           ;mcc_generated_files/uart1.c: 286:     }
 21106  0151C0  0012               	return	
 21107  0151C2                     i1l1027:
 21108                           
 21109                           ;mcc_generated_files/uart1.c: 288:     {;mcc_generated_files/uart1.c: 289:         PIE3b
      +                          its.U1TXIE = 0;
 21110  0151C2  0139               	movlb	57	; () banked
 21111  0151C4  9993               	bcf	147,4,b	;volatile
 21112  0151C6  0012               	return		;funcret
 21113  0151C8                     __end_of_UART1_Transmit_ISR:
 21114                           	callstack 0
 21115                           
 21116 ;; *************** function _UART1_rx_vect_isr *****************
 21117 ;; Defined at:
 21118 ;;		line 251 in file "mcc_generated_files/uart1.c"
 21119 ;; Parameters:    Size  Location     Type
 21120 ;;		None
 21121 ;; Auto vars:     Size  Location     Type
 21122 ;;		None
 21123 ;; Return value:  Size  Location     Type
 21124 ;;                  1    wreg      void 
 21125 ;; Registers used:
 21126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21127 ;; Tracked objects:
 21128 ;;		On entry : 0/0
 21129 ;;		On exit  : 0/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21135 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21136 ;;Total ram usage:        3 bytes
 21137 ;; Hardware stack levels used: 1
 21138 ;; Hardware stack levels required when called: 6
 21139 ;; This function calls:
 21140 ;;		Absolute function
 21141 ;;		_UART1_Receive_ISR
 21142 ;; This function is called by:
 21143 ;;		Interrupt level 1
 21144 ;; This function uses a non-reentrant model
 21145 ;;
 21146                           
 21147                           	psect	text117
 21148  014BC8                     __ptext117:
 21149                           	callstack 0
 21150  014BC8                     _UART1_rx_vect_isr:
 21151                           	callstack 15
 21152                           
 21153                           ;incstack = 0
 21154  014BC8  006F FF60  F01D    	movff	status,??_UART1_rx_vect_isr
 21155  014BCE  006F FFE8  F01E    	movff	pclath,??_UART1_rx_vect_isr+1
 21156  014BD4  006F FFEC  F01F    	movff	pclatu,??_UART1_rx_vect_isr+2
 21157                           
 21158                           ;mcc_generated_files/uart1.c: 253:     if(UART1_RxInterruptHandler)
 21159  014BDA  5029               	movf	_UART1_RxInterruptHandler^0,w,c
 21160  014BDC  102A               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 21161  014BDE  102B               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 21162  014BE0  B4D8               	btfsc	status,2,c
 21163  014BE2  D00C               	goto	i1u712_29
 21164                           
 21165                           ;mcc_generated_files/uart1.c: 254:     {;mcc_generated_files/uart1.c: 255:         UART1
      +                          _RxInterruptHandler();
 21166  014BE4  D801               	call	i1u712_28
 21167  014BE6  D00A               	goto	i1u712_29
 21168  014BE8                     i1u712_28:
 21169  014BE8  0005               	push	
 21170  014BEA  6EFA               	movwf	pclath,c
 21171  014BEC  5029               	movf	_UART1_RxInterruptHandler^0,w,c
 21172  014BEE  6EFD               	movwf	tosl,c
 21173  014BF0  502A               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 21174  014BF2  6EFE               	movwf	tosh,c
 21175  014BF4  502B               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 21176  014BF6  6EFF               	movwf	tosu,c
 21177  014BF8  50FA               	movf	pclath,w,c
 21178  014BFA  0012               	return		;indir
 21179  014BFC                     i1u712_29:
 21180  014BFC  0060  F07F  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 21181  014C02  0060  F07B  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 21182  014C08  0060  F077  FFD8   	movff	??_UART1_rx_vect_isr,status
 21183  014C0E  0011               	retfie		f
 21184  014C10                     __end_of_UART1_rx_vect_isr:
 21185                           	callstack 0
 21186                           
 21187 ;; *************** function _UART1_Receive_ISR *****************
 21188 ;; Defined at:
 21189 ;;		line 295 in file "mcc_generated_files/uart1.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;		None
 21192 ;; Auto vars:     Size  Location     Type
 21193 ;;		None
 21194 ;; Return value:  Size  Location     Type
 21195 ;;                  1    wreg      void 
 21196 ;; Registers used:
 21197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21198 ;; Tracked objects:
 21199 ;;		On entry : 0/0
 21200 ;;		On exit  : 0/0
 21201 ;;		Unchanged: 0/0
 21202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21207 ;;Total ram usage:        0 bytes
 21208 ;; Hardware stack levels used: 1
 21209 ;; Hardware stack levels required when called: 5
 21210 ;; This function calls:
 21211 ;;		Absolute function
 21212 ;;		_UART1_DefaultErrorHandler
 21213 ;;		_UART1_DefaultFramingErrorHandler
 21214 ;;		_UART1_DefaultOverrunErrorHandler
 21215 ;;		_UART1_RxDataHandler
 21216 ;; This function is called by:
 21217 ;;		_UART1_Initialize
 21218 ;;		_UART1_rx_vect_isr
 21219 ;; This function uses a non-reentrant model
 21220 ;;
 21221                           
 21222                           	psect	text118
 21223  014236                     __ptext118:
 21224                           	callstack 0
 21225  014236                     _UART1_Receive_ISR:
 21226                           	callstack 15
 21227                           
 21228                           ;mcc_generated_files/uart1.c: 298:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 21229                           
 21230                           ;incstack = 0
 21231  014236  0E00               	movlw	low _uart1RxStatusBuffer
 21232  014238  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21233  01423A  6ED9               	movwf	fsr2l,c
 21234  01423C  6ADA               	clrf	fsr2h,c
 21235  01423E  0E02               	movlw	high _uart1RxStatusBuffer
 21236  014240  22DA               	addwfc	fsr2h,f,c
 21237  014242  0E00               	movlw	0
 21238  014244  6EDF               	movwf	indf2,c
 21239                           
 21240                           ;mcc_generated_files/uart1.c: 300:     if(U1ERRIRbits.FERIF){
 21241  014246  013D               	movlb	61	; () banked
 21242  014248  A7F9               	btfss	249,3,b	;volatile
 21243  01424A  D015               	goto	i1u687_29
 21244                           
 21245                           ; BSR set to: 61
 21246                           ;mcc_generated_files/uart1.c: 301:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 21247  01424C  0E00               	movlw	low _uart1RxStatusBuffer
 21248  01424E  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21249  014250  6ED9               	movwf	fsr2l,c
 21250  014252  6ADA               	clrf	fsr2h,c
 21251  014254  0E02               	movlw	high _uart1RxStatusBuffer
 21252  014256  22DA               	addwfc	fsr2h,f,c
 21253  014258  0102               	movlb	2	; () banked
 21254  01425A  82DF               	bsf	indf2,1,c
 21255                           
 21256                           ; BSR set to: 2
 21257                           ;mcc_generated_files/uart1.c: 302:         UART1_FramingErrorHandler();
 21258  01425C  D801               	call	i1u687_28
 21259  01425E  D00B               	goto	i1u687_29
 21260  014260                     i1u687_28:
 21261  014260  0005               	push	
 21262  014262  6EFA               	movwf	pclath,c
 21263  014264  0101               	movlb	1	; () banked
 21264  014266  5146               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 21265  014268  6EFD               	movwf	tosl,c
 21266  01426A  5147               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 21267  01426C  6EFE               	movwf	tosh,c
 21268  01426E  5148               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 21269  014270  6EFF               	movwf	tosu,c
 21270  014272  50FA               	movf	pclath,w,c
 21271  014274  0012               	return		;indir
 21272  014276                     i1u687_29:
 21273                           
 21274                           ;mcc_generated_files/uart1.c: 305:     if(U1ERRIRbits.RXFOIF){
 21275  014276  013D               	movlb	61	; () banked
 21276  014278  A3F9               	btfss	249,1,b	;volatile
 21277  01427A  D015               	goto	i1u689_29
 21278                           
 21279                           ; BSR set to: 61
 21280                           ;mcc_generated_files/uart1.c: 306:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 21281  01427C  0E00               	movlw	low _uart1RxStatusBuffer
 21282  01427E  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21283  014280  6ED9               	movwf	fsr2l,c
 21284  014282  6ADA               	clrf	fsr2h,c
 21285  014284  0E02               	movlw	high _uart1RxStatusBuffer
 21286  014286  22DA               	addwfc	fsr2h,f,c
 21287  014288  0102               	movlb	2	; () banked
 21288  01428A  84DF               	bsf	indf2,2,c
 21289                           
 21290                           ; BSR set to: 2
 21291                           ;mcc_generated_files/uart1.c: 307:         UART1_OverrunErrorHandler();
 21292  01428C  D801               	call	i1u689_28
 21293  01428E  D00B               	goto	i1u689_29
 21294  014290                     i1u689_28:
 21295  014290  0005               	push	
 21296  014292  6EFA               	movwf	pclath,c
 21297  014294  0101               	movlb	1	; () banked
 21298  014296  5143               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 21299  014298  6EFD               	movwf	tosl,c
 21300  01429A  5144               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 21301  01429C  6EFE               	movwf	tosh,c
 21302  01429E  5145               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 21303  0142A0  6EFF               	movwf	tosu,c
 21304  0142A2  50FA               	movf	pclath,w,c
 21305  0142A4  0012               	return		;indir
 21306  0142A6                     i1u689_29:
 21307                           
 21308                           ;mcc_generated_files/uart1.c: 310:     if(uart1RxStatusBuffer[uart1RxHead].status){
 21309  0142A6  0E00               	movlw	low _uart1RxStatusBuffer
 21310  0142A8  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21311  0142AA  6ED9               	movwf	fsr2l,c
 21312  0142AC  6ADA               	clrf	fsr2h,c
 21313  0142AE  0E02               	movlw	high _uart1RxStatusBuffer
 21314  0142B0  22DA               	addwfc	fsr2h,f,c
 21315  0142B2  50DF               	movf	indf2,w,c
 21316  0142B4  B4D8               	btfsc	status,2,c
 21317  0142B6  D00D               	goto	i1l7990
 21318                           
 21319                           ;mcc_generated_files/uart1.c: 311:         UART1_ErrorHandler();
 21320  0142B8  D801               	call	i1u691_28
 21321  0142BA  0012               	return	
 21322  0142BC                     i1u691_28:
 21323  0142BC  0005               	push	
 21324  0142BE  6EFA               	movwf	pclath,c
 21325  0142C0  0101               	movlb	1	; () banked
 21326  0142C2  5140               	movf	_UART1_ErrorHandler& (0+255),w,b
 21327  0142C4  6EFD               	movwf	tosl,c
 21328  0142C6  5141               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 21329  0142C8  6EFE               	movwf	tosh,c
 21330  0142CA  5142               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 21331  0142CC  6EFF               	movwf	tosu,c
 21332  0142CE  50FA               	movf	pclath,w,c
 21333  0142D0  0012               	return		;indir
 21334  0142D2                     i1l7990:
 21335                           
 21336                           ;mcc_generated_files/uart1.c: 313:         UART1_RxDataHandler();
 21337  0142D2  ECC0  F0A9         	call	_UART1_RxDataHandler	;wreg free
 21338  0142D6  0012               	return		;funcret
 21339  0142D8                     __end_of_UART1_Receive_ISR:
 21340                           	callstack 0
 21341                           
 21342 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 21343 ;; Defined at:
 21344 ;;		line 331 in file "mcc_generated_files/uart1.c"
 21345 ;; Parameters:    Size  Location     Type
 21346 ;;		None
 21347 ;; Auto vars:     Size  Location     Type
 21348 ;;		None
 21349 ;; Return value:  Size  Location     Type
 21350 ;;                  1    wreg      void 
 21351 ;; Registers used:
 21352 ;;		None
 21353 ;; Tracked objects:
 21354 ;;		On entry : 3F/1
 21355 ;;		On exit  : 3F/1
 21356 ;;		Unchanged: 3F/0
 21357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21362 ;;Total ram usage:        0 bytes
 21363 ;; Hardware stack levels used: 1
 21364 ;; Hardware stack levels required when called: 3
 21365 ;; This function calls:
 21366 ;;		Nothing
 21367 ;; This function is called by:
 21368 ;;		_UART1_Initialize
 21369 ;;		_UART1_Receive_ISR
 21370 ;; This function uses a non-reentrant model
 21371 ;;
 21372                           
 21373                           	psect	text119
 21374  0156C8                     __ptext119:
 21375                           	callstack 0
 21376  0156C8                     _UART1_DefaultOverrunErrorHandler:
 21377                           	callstack 16
 21378                           
 21379                           ; BSR set to: 1
 21380                           
 21381                           ;incstack = 0
 21382  0156C8  0012               	return		;funcret
 21383  0156CA                     __end_of_UART1_DefaultOverrunErrorHandler:
 21384                           	callstack 0
 21385                           
 21386 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 21387 ;; Defined at:
 21388 ;;		line 329 in file "mcc_generated_files/uart1.c"
 21389 ;; Parameters:    Size  Location     Type
 21390 ;;		None
 21391 ;; Auto vars:     Size  Location     Type
 21392 ;;		None
 21393 ;; Return value:  Size  Location     Type
 21394 ;;                  1    wreg      void 
 21395 ;; Registers used:
 21396 ;;		None
 21397 ;; Tracked objects:
 21398 ;;		On entry : 3F/1
 21399 ;;		On exit  : 3F/1
 21400 ;;		Unchanged: 3F/0
 21401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21406 ;;Total ram usage:        0 bytes
 21407 ;; Hardware stack levels used: 1
 21408 ;; Hardware stack levels required when called: 3
 21409 ;; This function calls:
 21410 ;;		Nothing
 21411 ;; This function is called by:
 21412 ;;		_UART1_Initialize
 21413 ;;		_UART1_Receive_ISR
 21414 ;; This function uses a non-reentrant model
 21415 ;;
 21416                           
 21417                           	psect	text120
 21418  0156CA                     __ptext120:
 21419                           	callstack 0
 21420  0156CA                     _UART1_DefaultFramingErrorHandler:
 21421                           	callstack 16
 21422                           
 21423                           ; BSR set to: 1
 21424                           
 21425                           ; BSR set to: 1
 21426                           ;incstack = 0
 21427  0156CA  0012               	return		;funcret
 21428  0156CC                     __end_of_UART1_DefaultFramingErrorHandler:
 21429                           	callstack 0
 21430                           
 21431 ;; *************** function _UART1_DefaultErrorHandler *****************
 21432 ;; Defined at:
 21433 ;;		line 333 in file "mcc_generated_files/uart1.c"
 21434 ;; Parameters:    Size  Location     Type
 21435 ;;		None
 21436 ;; Auto vars:     Size  Location     Type
 21437 ;;		None
 21438 ;; Return value:  Size  Location     Type
 21439 ;;                  1    wreg      void 
 21440 ;; Registers used:
 21441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21442 ;; Tracked objects:
 21443 ;;		On entry : 3F/1
 21444 ;;		On exit  : 0/0
 21445 ;;		Unchanged: 0/0
 21446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21451 ;;Total ram usage:        0 bytes
 21452 ;; Hardware stack levels used: 1
 21453 ;; Hardware stack levels required when called: 4
 21454 ;; This function calls:
 21455 ;;		_UART1_RxDataHandler
 21456 ;; This function is called by:
 21457 ;;		_UART1_Initialize
 21458 ;;		_UART1_Receive_ISR
 21459 ;; This function uses a non-reentrant model
 21460 ;;
 21461                           
 21462                           	psect	text121
 21463  0156B6                     __ptext121:
 21464                           	callstack 0
 21465  0156B6                     _UART1_DefaultErrorHandler:
 21466                           	callstack 15
 21467                           
 21468                           ; BSR set to: 1
 21469                           ;mcc_generated_files/uart1.c: 334:     UART1_RxDataHandler();
 21470                           
 21471                           ; BSR set to: 1
 21472                           ;incstack = 0
 21473  0156B6  ECC0  F0A9         	call	_UART1_RxDataHandler	;wreg free
 21474  0156BA  0012               	return		;funcret
 21475  0156BC                     __end_of_UART1_DefaultErrorHandler:
 21476                           	callstack 0
 21477                           
 21478 ;; *************** function _UART1_RxDataHandler *****************
 21479 ;; Defined at:
 21480 ;;		line 319 in file "mcc_generated_files/uart1.c"
 21481 ;; Parameters:    Size  Location     Type
 21482 ;;		None
 21483 ;; Auto vars:     Size  Location     Type
 21484 ;;		None
 21485 ;; Return value:  Size  Location     Type
 21486 ;;                  1    wreg      void 
 21487 ;; Registers used:
 21488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21489 ;; Tracked objects:
 21490 ;;		On entry : 0/3D
 21491 ;;		On exit  : 0/0
 21492 ;;		Unchanged: 0/0
 21493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21498 ;;Total ram usage:        0 bytes
 21499 ;; Hardware stack levels used: 1
 21500 ;; Hardware stack levels required when called: 3
 21501 ;; This function calls:
 21502 ;;		Nothing
 21503 ;; This function is called by:
 21504 ;;		_UART1_Receive_ISR
 21505 ;;		_UART1_DefaultErrorHandler
 21506 ;; This function uses a non-reentrant model
 21507 ;;
 21508                           
 21509                           	psect	text122
 21510  015380                     __ptext122:
 21511                           	callstack 0
 21512  015380                     _UART1_RxDataHandler:
 21513                           	callstack 16
 21514                           
 21515                           ;mcc_generated_files/uart1.c: 321:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 21516                           
 21517                           ;incstack = 0
 21518  015380  0E00               	movlw	low _uart1RxBuffer
 21519  015382  243D               	addwf	_uart1RxHead^0,w,c	;volatile
 21520  015384  6ED9               	movwf	fsr2l,c
 21521  015386  6ADA               	clrf	fsr2h,c
 21522  015388  0E03               	movlw	high _uart1RxBuffer
 21523  01538A  22DA               	addwfc	fsr2h,f,c
 21524  01538C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 21525  015392  2A3D               	incf	_uart1RxHead^0,f,c	;volatile
 21526                           
 21527                           ;mcc_generated_files/uart1.c: 322:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 21528  015394  0E3F               	movlw	63
 21529  015396  643D               	cpfsgt	_uart1RxHead^0,c
 21530  015398  D002               	goto	i1l7234
 21531                           
 21532                           ;mcc_generated_files/uart1.c: 323:     {;mcc_generated_files/uart1.c: 324:         uart1
      +                          RxHead = 0;
 21533  01539A  0E00               	movlw	0
 21534  01539C  6E3D               	movwf	_uart1RxHead^0,c	;volatile
 21535  01539E                     i1l7234:
 21536                           
 21537                           ;mcc_generated_files/uart1.c: 326:     uart1RxCount++;
 21538  01539E  2A3B               	incf	_uart1RxCount^0,f,c	;volatile
 21539  0153A0  0012               	return		;funcret
 21540  0153A2                     __end_of_UART1_RxDataHandler:
 21541                           	callstack 0
 21542                           
 21543 ;; *************** function _ADCC_ISR *****************
 21544 ;; Defined at:
 21545 ;;		line 307 in file "mcc_generated_files/adcc.c"
 21546 ;; Parameters:    Size  Location     Type
 21547 ;;		None
 21548 ;; Auto vars:     Size  Location     Type
 21549 ;;		None
 21550 ;; Return value:  Size  Location     Type
 21551 ;;                  1    wreg      void 
 21552 ;; Registers used:
 21553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 21554 ;; Tracked objects:
 21555 ;;		On entry : 0/0
 21556 ;;		On exit  : 0/0
 21557 ;;		Unchanged: 0/0
 21558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21563 ;;Total ram usage:        2 bytes
 21564 ;; Hardware stack levels used: 1
 21565 ;; Hardware stack levels required when called: 2
 21566 ;; This function calls:
 21567 ;;		Absolute function
 21568 ;;		_ADCC_DefaultInterruptHandler
 21569 ;;		_Adc_Isr
 21570 ;; This function is called by:
 21571 ;;		Interrupt level 2
 21572 ;; This function uses a non-reentrant model
 21573 ;;
 21574                           
 21575                           	psect	text123
 21576  014C98                     __ptext123:
 21577                           	callstack 0
 21578  014C98                     _ADCC_ISR:
 21579                           	callstack 15
 21580                           
 21581                           ;incstack = 0
 21582  014C98  006F FFE8  F009    	movff	pclath,??_ADCC_ISR
 21583  014C9E  006F FFEC  F00A    	movff	pclatu,??_ADCC_ISR+1
 21584                           
 21585                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 21586  014CA4  0139               	movlb	57	; () banked
 21587  014CA6  95A1               	bcf	161,2,b	;volatile
 21588                           
 21589                           ; BSR set to: 57
 21590                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 21591  014CA8  0101               	movlb	1	; () banked
 21592  014CAA  5152               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 21593  014CAC  1153               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 21594  014CAE  1154               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 21595  014CB0  B4D8               	btfsc	status,2,c
 21596  014CB2  D00C               	goto	i2u703_49
 21597                           
 21598                           ; BSR set to: 1
 21599                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 21600  014CB4  D801               	call	i2u703_48
 21601  014CB6  D00A               	goto	i2u703_49
 21602  014CB8                     i2u703_48:
 21603  014CB8  0005               	push	
 21604  014CBA  6EFA               	movwf	pclath,c
 21605  014CBC  5152               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 21606  014CBE  6EFD               	movwf	tosl,c
 21607  014CC0  5153               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 21608  014CC2  6EFE               	movwf	tosh,c
 21609  014CC4  5154               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 21610  014CC6  6EFF               	movwf	tosu,c
 21611  014CC8  50FA               	movf	pclath,w,c
 21612  014CCA  0012               	return		;indir
 21613  014CCC                     i2u703_49:
 21614  014CCC  0060  F02B  FFFB   	movff	??_ADCC_ISR+1,pclatu
 21615  014CD2  0060  F027  FFFA   	movff	??_ADCC_ISR,pclath
 21616  014CD8  0011               	retfie		f
 21617  014CDA                     __end_of_ADCC_ISR:
 21618                           	callstack 0
 21619                           
 21620 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 21621 ;; Defined at:
 21622 ;;		line 320 in file "mcc_generated_files/adcc.c"
 21623 ;; Parameters:    Size  Location     Type
 21624 ;;		None
 21625 ;; Auto vars:     Size  Location     Type
 21626 ;;		None
 21627 ;; Return value:  Size  Location     Type
 21628 ;;                  1    wreg      void 
 21629 ;; Registers used:
 21630 ;;		None
 21631 ;; Tracked objects:
 21632 ;;		On entry : 3F/1
 21633 ;;		On exit  : 3F/1
 21634 ;;		Unchanged: 3F/0
 21635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21640 ;;Total ram usage:        0 bytes
 21641 ;; Hardware stack levels used: 1
 21642 ;; This function calls:
 21643 ;;		Nothing
 21644 ;; This function is called by:
 21645 ;;		_ADCC_Initialize
 21646 ;;		_ADCC_ISR
 21647 ;; This function uses a non-reentrant model
 21648 ;;
 21649                           
 21650                           	psect	text124
 21651  0156CC                     __ptext124:
 21652                           	callstack 0
 21653  0156CC                     _ADCC_DefaultInterruptHandler:
 21654                           	callstack 16
 21655                           
 21656                           ; BSR set to: 1
 21657                           
 21658                           ;incstack = 0
 21659  0156CC  0012               	return		;funcret
 21660  0156CE                     __end_of_ADCC_DefaultInterruptHandler:
 21661                           	callstack 0
 21662                           
 21663 ;; *************** function _Adc_Isr *****************
 21664 ;; Defined at:
 21665 ;;		line 110 in file "main.c"
 21666 ;; Parameters:    Size  Location     Type
 21667 ;;		None
 21668 ;; Auto vars:     Size  Location     Type
 21669 ;;		None
 21670 ;; Return value:  Size  Location     Type
 21671 ;;                  1    wreg      void 
 21672 ;; Registers used:
 21673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21674 ;; Tracked objects:
 21675 ;;		On entry : 3F/1
 21676 ;;		On exit  : 3F/1
 21677 ;;		Unchanged: 0/0
 21678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21681 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21683 ;;Total ram usage:        4 bytes
 21684 ;; Hardware stack levels used: 1
 21685 ;; Hardware stack levels required when called: 1
 21686 ;; This function calls:
 21687 ;;		_ADCC_GetConversionResult
 21688 ;; This function is called by:
 21689 ;;		_main
 21690 ;;		_ADCC_ISR
 21691 ;; This function uses a non-reentrant model
 21692 ;;
 21693                           
 21694                           	psect	text125
 21695  013A7A                     __ptext125:
 21696                           	callstack 0
 21697  013A7A                     _Adc_Isr:
 21698                           	callstack 15
 21699                           
 21700                           ; BSR set to: 1
 21701                           ;main.c: 112:  static adcc_channel_t c_adc_chan = PS_V_ANA;;main.c: 114:  a[a_index].ana
      +                          [c_adc_chan] = ADCC_GetConversionResult();
 21702                           
 21703                           ; BSR set to: 1
 21704                           ;incstack = 0
 21705  013A7A  ECAA  F0AA         	call	_ADCC_GetConversionResult	;wreg free
 21706  013A7E  5035               	movf	Adc_Isr@c_adc_chan^0,w,c
 21707  013A80  0D02               	mullw	2
 21708  013A82  006F FFCC  F005    	movff	prodl,??_Adc_Isr
 21709  013A88  006F FFD0  F006    	movff	prodh,??_Adc_Isr+1
 21710  013A8E  5039               	movf	_a_index^0,w,c	;volatile
 21711  013A90  0D7E               	mullw	126
 21712  013A92  0E83               	movlw	low _a
 21713  013A94  6E07               	movwf	(??_Adc_Isr+2)^0,c
 21714  013A96  0E05               	movlw	high _a
 21715  013A98  6E08               	movwf	(??_Adc_Isr+3)^0,c
 21716  013A9A  50F3               	movf	243,w,c
 21717  013A9C  2607               	addwf	(??_Adc_Isr+2)^0,f,c
 21718  013A9E  50F4               	movf	244,w,c
 21719  013AA0  2208               	addwfc	(??_Adc_Isr+3)^0,f,c
 21720  013AA2  5005               	movf	??_Adc_Isr^0,w,c
 21721  013AA4  2407               	addwf	(??_Adc_Isr+2)^0,w,c
 21722  013AA6  6ED9               	movwf	fsr2l,c
 21723  013AA8  5006               	movf	(??_Adc_Isr+1)^0,w,c
 21724  013AAA  2008               	addwfc	(??_Adc_Isr+3)^0,w,c
 21725  013AAC  6EDA               	movwf	fsr2h,c
 21726  013AAE  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 21727  013AB4  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 21728                           
 21729                           ;main.c: 115:  a[i_index].ana[c_adc_chan] = ADCC_GetConversionResult();
 21730  013ABA  ECAA  F0AA         	call	_ADCC_GetConversionResult	;wreg free
 21731  013ABE  5035               	movf	Adc_Isr@c_adc_chan^0,w,c
 21732  013AC0  0D02               	mullw	2
 21733  013AC2  006F FFCC  F005    	movff	prodl,??_Adc_Isr
 21734  013AC8  006F FFD0  F006    	movff	prodh,??_Adc_Isr+1
 21735  013ACE  5038               	movf	_i_index^0,w,c	;volatile
 21736  013AD0  0D7E               	mullw	126
 21737  013AD2  0E83               	movlw	low _a
 21738  013AD4  6E07               	movwf	(??_Adc_Isr+2)^0,c
 21739  013AD6  0E05               	movlw	high _a
 21740  013AD8  6E08               	movwf	(??_Adc_Isr+3)^0,c
 21741  013ADA  50F3               	movf	243,w,c
 21742  013ADC  2607               	addwf	(??_Adc_Isr+2)^0,f,c
 21743  013ADE  50F4               	movf	244,w,c
 21744  013AE0  2208               	addwfc	(??_Adc_Isr+3)^0,f,c
 21745  013AE2  5005               	movf	??_Adc_Isr^0,w,c
 21746  013AE4  2407               	addwf	(??_Adc_Isr+2)^0,w,c
 21747  013AE6  6ED9               	movwf	fsr2l,c
 21748  013AE8  5006               	movf	(??_Adc_Isr+1)^0,w,c
 21749  013AEA  2008               	addwfc	(??_Adc_Isr+3)^0,w,c
 21750  013AEC  6EDA               	movwf	fsr2h,c
 21751  013AEE  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 21752  013AF4  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 21753                           
 21754                           ;main.c: 120:  switch (c_adc_chan) {
 21755  013AFA  D014               	goto	i2l8034
 21756  013AFC                     i2l8014:
 21757                           
 21758                           ; BSR set to: 62
 21759                           ;main.c: 122:   c_adc_chan = PS_I_ANA;
 21760  013AFC  0E01               	movlw	1
 21761  013AFE  D005               	goto	L20
 21762  013B00                     i2l8016:
 21763                           
 21764                           ; BSR set to: 62
 21765                           ;main.c: 125:   c_adc_chan = channel_DAC1;
 21766  013B00  0E3D               	movlw	61
 21767  013B02  D003               	goto	L20
 21768  013B04                     i2l8018:
 21769                           
 21770                           ; BSR set to: 62
 21771                           ;main.c: 128:   c_adc_chan = PWM5_ANA;
 21772  013B04  0E28               	movlw	40
 21773  013B06  D001               	goto	L20
 21774  013B08                     i2l8020:
 21775                           
 21776                           ; BSR set to: 62
 21777                           ;main.c: 131:   c_adc_chan = PWM6_ANA;
 21778  013B08  0E29               	movlw	41
 21779  013B0A                     L20:
 21780  013B0A  6E35               	movwf	Adc_Isr@c_adc_chan^0,c
 21781                           
 21782                           ;main.c: 132:   break;
 21783  013B0C  D023               	goto	i2l1279
 21784  013B0E                     i2l8022:
 21785                           
 21786                           ; BSR set to: 62
 21787                           ;main.c: 135:   c_adc_chan = PS_V_ANA;
 21788  013B0E  0E00               	movlw	0
 21789  013B10  6E35               	movwf	Adc_Isr@c_adc_chan^0,c
 21790                           
 21791                           ; BSR set to: 62
 21792                           ;main.c: 136:   if (mode != roll_mode) {
 21793  013B12  0437               	decf	_mode^0,w,c
 21794  013B14  A4D8               	btfss	status,2,c
 21795                           
 21796                           ; BSR set to: 62
 21797                           ;main.c: 137:    i_index++;
 21798  013B16  2A38               	incf	_i_index^0,f,c	;volatile
 21799                           
 21800                           ; BSR set to: 62
 21801                           ;main.c: 139:   if (i_index >= 32) {
 21802  013B18  0E1F               	movlw	31
 21803  013B1A  6438               	cpfsgt	_i_index^0,c	;volatile
 21804  013B1C  D01B               	goto	i2l1279
 21805                           
 21806                           ; BSR set to: 62
 21807                           ;main.c: 140:    i_index = 0;
 21808  013B1E  0E00               	movlw	0
 21809  013B20  6E38               	movwf	_i_index^0,c	;volatile
 21810  013B22  D018               	goto	i2l1279
 21811  013B24                     i2l8034:
 21812                           
 21813                           ; BSR set to: 62
 21814  013B24  5035               	movf	Adc_Isr@c_adc_chan^0,w,c
 21815  013B26  6E05               	movwf	??_Adc_Isr^0,c
 21816  013B28  6A06               	clrf	(??_Adc_Isr+1)^0,c
 21817                           
 21818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21819                           ; Switch size 1, requested type "simple"
 21820                           ; Number of cases is 1, Range of values is 0 to 0
 21821                           ; switch strategies available:
 21822                           ; Name         Instructions Cycles
 21823                           ; simple_byte            4     3 (average)
 21824                           ;	Chosen strategy is simple_byte
 21825  013B2A  5006               	movf	(??_Adc_Isr+1)^0,w,c
 21826  013B2C  0A00               	xorlw	0	; case 0
 21827  013B2E  A4D8               	btfss	status,2,c
 21828  013B30  D7EE               	goto	i2l8022
 21829                           
 21830                           ; BSR set to: 62
 21831                           ; Switch size 1, requested type "simple"
 21832                           ; Number of cases is 5, Range of values is 0 to 61
 21833                           ; switch strategies available:
 21834                           ; Name         Instructions Cycles
 21835                           ; simple_byte           16     9 (average)
 21836                           ;	Chosen strategy is simple_byte
 21837  013B32  5005               	movf	??_Adc_Isr^0,w,c
 21838  013B34  0A00               	xorlw	0	; case 0
 21839  013B36  B4D8               	btfsc	status,2,c
 21840  013B38  D7E1               	goto	i2l8014
 21841  013B3A  0A01               	xorlw	1	; case 1
 21842  013B3C  B4D8               	btfsc	status,2,c
 21843  013B3E  D7E0               	goto	i2l8016
 21844  013B40  0A29               	xorlw	41	; case 40
 21845  013B42  B4D8               	btfsc	status,2,c
 21846  013B44  D7E1               	goto	i2l8020
 21847  013B46  0A01               	xorlw	1	; case 41
 21848  013B48  B4D8               	btfsc	status,2,c
 21849  013B4A  D7E1               	goto	i2l8022
 21850  013B4C  0A14               	xorlw	20	; case 61
 21851  013B4E  B4D8               	btfsc	status,2,c
 21852  013B50  D7D9               	goto	i2l8018
 21853  013B52  D7DD               	goto	i2l8022
 21854  013B54                     i2l1279:
 21855                           
 21856                           ; BSR set to: 62
 21857                           ;main.c: 144:  ADPCH = c_adc_chan;
 21858  013B54  0060  F0D7  FEF1   	movff	Adc_Isr@c_adc_chan,16113	;volatile
 21859                           
 21860                           ; BSR set to: 62
 21861                           ;main.c: 148:  adc_tick = 1;
 21862  013B5A  0E01               	movlw	1
 21863  013B5C  0101               	movlb	1	; () banked
 21864  013B5E  6F60               	movwf	_adc_tick& (0+255),b	;volatile
 21865                           
 21866                           ; BSR set to: 1
 21867  013B60  0012               	return		;funcret
 21868  013B62                     __end_of_Adc_Isr:
 21869                           	callstack 0
 21870                           
 21871 ;; *************** function _ADCC_GetConversionResult *****************
 21872 ;; Defined at:
 21873 ;;		line 139 in file "mcc_generated_files/adcc.c"
 21874 ;; Parameters:    Size  Location     Type
 21875 ;;		None
 21876 ;; Auto vars:     Size  Location     Type
 21877 ;;		None
 21878 ;; Return value:  Size  Location     Type
 21879 ;;                  2    0[COMRAM] unsigned short 
 21880 ;; Registers used:
 21881 ;;		wreg, status,2, status,0
 21882 ;; Tracked objects:
 21883 ;;		On entry : 0/1
 21884 ;;		On exit  : 3F/3E
 21885 ;;		Unchanged: 0/0
 21886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21890 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21891 ;;Total ram usage:        4 bytes
 21892 ;; Hardware stack levels used: 1
 21893 ;; This function calls:
 21894 ;;		Nothing
 21895 ;; This function is called by:
 21896 ;;		_Adc_Isr
 21897 ;; This function uses a non-reentrant model
 21898 ;;
 21899                           
 21900                           	psect	text126
 21901  015554                     __ptext126:
 21902                           	callstack 0
 21903  015554                     _ADCC_GetConversionResult:
 21904                           	callstack 15
 21905                           
 21906                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 21907                           
 21908                           ; BSR set to: 1
 21909                           ;incstack = 0
 21910  015554  013E               	movlb	62	; () banked
 21911  015556  51F0               	movf	240,w,b	;volatile
 21912  015558  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 21913  01555A  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 21914  01555C  51EF               	movf	239,w,b	;volatile
 21915  01555E  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 21916  015560  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 21917  015562  0E00               	movlw	0
 21918  015564  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 21919  015566  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 21920                           
 21921                           ; BSR set to: 62
 21922  015568  0012               	return		;funcret
 21923  01556A                     __end_of_ADCC_GetConversionResult:
 21924                           	callstack 0
 21925                           
 21926 ;; *************** function _TMR6_ISR *****************
 21927 ;; Defined at:
 21928 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 21929 ;; Parameters:    Size  Location     Type
 21930 ;;		None
 21931 ;; Auto vars:     Size  Location     Type
 21932 ;;		None
 21933 ;; Return value:  Size  Location     Type
 21934 ;;                  1    wreg      void 
 21935 ;; Registers used:
 21936 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21937 ;; Tracked objects:
 21938 ;;		On entry : 0/0
 21939 ;;		On exit  : 0/0
 21940 ;;		Unchanged: 0/0
 21941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21946 ;;Total ram usage:        2 bytes
 21947 ;; Hardware stack levels used: 1
 21948 ;; Hardware stack levels required when called: 2
 21949 ;; This function calls:
 21950 ;;		_TMR6_CallBack
 21951 ;; This function is called by:
 21952 ;;		Interrupt level 2
 21953 ;; This function uses a non-reentrant model
 21954 ;;
 21955                           
 21956                           	psect	text127
 21957  015008                     __ptext127:
 21958                           	callstack 0
 21959  015008                     _TMR6_ISR:
 21960                           	callstack 15
 21961                           
 21962                           ; BSR set to: 62
 21963                           ;incstack = 0
 21964  015008  006F FFE8  F00C    	movff	pclath,??_TMR6_ISR
 21965  01500E  006F FFEC  F00D    	movff	pclatu,??_TMR6_ISR+1
 21966                           
 21967                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 21968  015014  0139               	movlb	57	; () banked
 21969  015016  91A9               	bcf	169,0,b	;volatile
 21970                           
 21971                           ; BSR set to: 57
 21972                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 21973  015018  4A32               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 21974  01501A  2A33               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 21975  01501C  5033               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 21976  01501E  E104               	bnz	i2u704_40
 21977  015020  0E17               	movlw	23
 21978  015022  5C32               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 21979  015024  A0D8               	btfss	status,0,c
 21980  015026  D006               	goto	i2l481
 21981  015028                     i2u704_40:
 21982                           
 21983                           ; BSR set to: 57
 21984                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 21985  015028  EC47  F0A9         	call	_TMR6_CallBack	;wreg free
 21986                           
 21987                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 21988  01502C  0E00               	movlw	0
 21989  01502E  6E33               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 21990  015030  0E00               	movlw	0
 21991  015032  6E32               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 21992  015034                     i2l481:
 21993  015034  0060  F037  FFFB   	movff	??_TMR6_ISR+1,pclatu
 21994  01503A  0060  F033  FFFA   	movff	??_TMR6_ISR,pclath
 21995  015040  0011               	retfie		f
 21996  015042                     __end_of_TMR6_ISR:
 21997                           	callstack 0
 21998                           
 21999 ;; *************** function _TMR6_CallBack *****************
 22000 ;; Defined at:
 22001 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 22002 ;; Parameters:    Size  Location     Type
 22003 ;;		None
 22004 ;; Auto vars:     Size  Location     Type
 22005 ;;		None
 22006 ;; Return value:  Size  Location     Type
 22007 ;;                  1    wreg      void 
 22008 ;; Registers used:
 22009 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22010 ;; Tracked objects:
 22011 ;;		On entry : 3F/39
 22012 ;;		On exit  : 0/0
 22013 ;;		Unchanged: 0/0
 22014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22019 ;;Total ram usage:        0 bytes
 22020 ;; Hardware stack levels used: 1
 22021 ;; Hardware stack levels required when called: 1
 22022 ;; This function calls:
 22023 ;;		Absolute function
 22024 ;;		_Led_Blink
 22025 ;;		_TMR6_DefaultInterruptHandler
 22026 ;; This function is called by:
 22027 ;;		_TMR6_ISR
 22028 ;; This function uses a non-reentrant model
 22029 ;;
 22030                           
 22031                           	psect	text128
 22032  01528E                     __ptext128:
 22033                           	callstack 0
 22034  01528E                     _TMR6_CallBack:
 22035                           	callstack 15
 22036                           
 22037                           ; BSR set to: 57
 22038                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 22039                           
 22040                           ;incstack = 0
 22041  01528E  0101               	movlb	1	; () banked
 22042  015290  514F               	movf	_TMR6_InterruptHandler& (0+255),w,b
 22043  015292  1150               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 22044  015294  1151               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 22045  015296  B4D8               	btfsc	status,2,c
 22046  015298  0012               	return	
 22047                           
 22048                           ; BSR set to: 1
 22049                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 22050  01529A  D801               	call	i2u680_48
 22051  01529C  0012               	return	
 22052  01529E                     i2u680_48:
 22053  01529E  0005               	push	
 22054  0152A0  6EFA               	movwf	pclath,c
 22055  0152A2  514F               	movf	_TMR6_InterruptHandler& (0+255),w,b
 22056  0152A4  6EFD               	movwf	tosl,c
 22057  0152A6  5150               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 22058  0152A8  6EFE               	movwf	tosh,c
 22059  0152AA  5151               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 22060  0152AC  6EFF               	movwf	tosu,c
 22061  0152AE  50FA               	movf	pclath,w,c
 22062  0152B0  0012               	return		;indir
 22063  0152B2                     __end_of_TMR6_CallBack:
 22064                           	callstack 0
 22065                           
 22066 ;; *************** function _Led_Blink *****************
 22067 ;; Defined at:
 22068 ;;		line 94 in file "main.c"
 22069 ;; Parameters:    Size  Location     Type
 22070 ;;		None
 22071 ;; Auto vars:     Size  Location     Type
 22072 ;;		None
 22073 ;; Return value:  Size  Location     Type
 22074 ;;                  1    wreg      void 
 22075 ;; Registers used:
 22076 ;;		wreg, status,2, status,0
 22077 ;; Tracked objects:
 22078 ;;		On entry : 3F/1
 22079 ;;		On exit  : 3F/1
 22080 ;;		Unchanged: 0/0
 22081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22086 ;;Total ram usage:        1 bytes
 22087 ;; Hardware stack levels used: 1
 22088 ;; This function calls:
 22089 ;;		Nothing
 22090 ;; This function is called by:
 22091 ;;		_main
 22092 ;;		_TMR6_CallBack
 22093 ;; This function uses a non-reentrant model
 22094 ;;
 22095                           
 22096                           	psect	text129
 22097  01543A                     __ptext129:
 22098                           	callstack 0
 22099  01543A                     _Led_Blink:
 22100                           	callstack 15
 22101                           
 22102                           ; BSR set to: 1
 22103                           
 22104                           ; BSR set to: 1
 22105                           
 22106                           ;incstack = 0
 22107                           ;main.c: 96:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 22108  01543A  A0BE               	btfss	190,0,c	;volatile
 22109  01543C  D002               	goto	i2u644_40
 22110  01543E  0E01               	movlw	1
 22111  015440  D001               	goto	i2u644_46
 22112  015442                     i2u644_40:
 22113  015442  0E00               	movlw	0
 22114  015444                     i2u644_46:
 22115  015444  0AFF               	xorlw	255
 22116  015446  6E0B               	movwf	??_Led_Blink^0,c
 22117  015448  50BE               	movf	190,w,c	;volatile
 22118  01544A  180B               	xorwf	??_Led_Blink^0,w,c
 22119  01544C  0BFE               	andlw	-2
 22120  01544E  180B               	xorwf	??_Led_Blink^0,w,c
 22121  015450  6EBE               	movwf	190,c	;volatile
 22122                           
 22123                           ; BSR set to: 1
 22124                           ;main.c: 100:  disp_tick = 1;
 22125  015452  0E01               	movlw	1
 22126  015454  6F61               	movwf	_disp_tick& (0+255),b	;volatile
 22127                           
 22128                           ; BSR set to: 1
 22129  015456  0012               	return		;funcret
 22130  015458                     __end_of_Led_Blink:
 22131                           	callstack 0
 22132                           
 22133 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 22134 ;; Defined at:
 22135 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 22136 ;; Parameters:    Size  Location     Type
 22137 ;;		None
 22138 ;; Auto vars:     Size  Location     Type
 22139 ;;		None
 22140 ;; Return value:  Size  Location     Type
 22141 ;;                  1    wreg      void 
 22142 ;; Registers used:
 22143 ;;		None
 22144 ;; Tracked objects:
 22145 ;;		On entry : 3F/1
 22146 ;;		On exit  : 3F/1
 22147 ;;		Unchanged: 3F/0
 22148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22153 ;;Total ram usage:        0 bytes
 22154 ;; Hardware stack levels used: 1
 22155 ;; This function calls:
 22156 ;;		Nothing
 22157 ;; This function is called by:
 22158 ;;		_TMR6_Initialize
 22159 ;;		_TMR6_CallBack
 22160 ;; This function uses a non-reentrant model
 22161 ;;
 22162                           
 22163                           	psect	text130
 22164  0156CE                     __ptext130:
 22165                           	callstack 0
 22166  0156CE                     _TMR6_DefaultInterruptHandler:
 22167                           	callstack 15
 22168                           
 22169                           ; BSR set to: 1
 22170                           
 22171                           ; BSR set to: 1
 22172                           ;incstack = 0
 22173  0156CE  0012               	return		;funcret
 22174  0156D0                     __end_of_TMR6_DefaultInterruptHandler:
 22175                           	callstack 0
 22176                           
 22177 ;; *************** function _Default_ISR *****************
 22178 ;; Defined at:
 22179 ;;		line 82 in file "mcc_generated_files/interrupt_manager.c"
 22180 ;; Parameters:    Size  Location     Type
 22181 ;;		None
 22182 ;; Auto vars:     Size  Location     Type
 22183 ;;		None
 22184 ;; Return value:  Size  Location     Type
 22185 ;;                  1    wreg      void 
 22186 ;; Registers used:
 22187 ;;		None
 22188 ;; Tracked objects:
 22189 ;;		On entry : 0/0
 22190 ;;		On exit  : 0/0
 22191 ;;		Unchanged: 0/0
 22192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22197 ;;Total ram usage:        0 bytes
 22198 ;; Hardware stack levels used: 1
 22199 ;; This function calls:
 22200 ;;		Nothing
 22201 ;; This function is called by:
 22202 ;;		Interrupt level 2
 22203 ;; This function uses a non-reentrant model
 22204 ;;
 22205                           
 22206                           	psect	text131
 22207  0156D0                     __ptext131:
 22208                           	callstack 0
 22209  0156D0                     _Default_ISR:
 22210                           	callstack 17
 22211                           
 22212                           ; BSR set to: 1
 22213                           ;incstack = 0
 22214  0156D0  0011               	retfie		f
 22215  0156D2                     __end_of_Default_ISR:
 22216                           	callstack 0
 22217                           
 22218 ;; *************** function _TMR5_ISR *****************
 22219 ;; Defined at:
 22220 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 22221 ;; Parameters:    Size  Location     Type
 22222 ;;		None
 22223 ;; Auto vars:     Size  Location     Type
 22224 ;;		None
 22225 ;; Return value:  Size  Location     Type
 22226 ;;                  1    wreg      void 
 22227 ;; Registers used:
 22228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22229 ;; Tracked objects:
 22230 ;;		On entry : 0/0
 22231 ;;		On exit  : 0/0
 22232 ;;		Unchanged: 0/0
 22233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22238 ;;Total ram usage:        2 bytes
 22239 ;; Hardware stack levels used: 1
 22240 ;; Hardware stack levels required when called: 1
 22241 ;; This function calls:
 22242 ;;		Absolute function
 22243 ;;		_TMR5_DefaultInterruptHandler
 22244 ;;		_TMR5_WriteTimer
 22245 ;;		_Timers_Isr
 22246 ;; This function is called by:
 22247 ;;		Interrupt level 2
 22248 ;; This function uses a non-reentrant model
 22249 ;;
 22250                           
 22251                           	psect	text132
 22252  014A54                     __ptext132:
 22253                           	callstack 0
 22254  014A54                     _TMR5_ISR:
 22255                           	callstack 16
 22256                           
 22257                           ;incstack = 0
 22258  014A54  006F FFE8  F012    	movff	pclath,??_TMR5_ISR
 22259  014A5A  006F FFEC  F013    	movff	pclatu,??_TMR5_ISR+1
 22260                           
 22261                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 22262  014A60  0139               	movlb	57	; () banked
 22263  014A62  9DA8               	bcf	168,6,b	;volatile
 22264                           
 22265                           ; BSR set to: 57
 22266                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 22267  014A64  C030  F00E         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 22268  014A68  C031  F00F         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 22269  014A6C  EC59  F0A9         	call	_TMR5_WriteTimer	;wreg free
 22270                           
 22271                           ; BSR set to: 57
 22272                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 22273  014A70  0101               	movlb	1	; () banked
 22274  014A72  514C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 22275  014A74  114D               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 22276  014A76  114E               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 22277  014A78  B4D8               	btfsc	status,2,c
 22278  014A7A  D00C               	goto	i2u706_49
 22279                           
 22280                           ; BSR set to: 1
 22281                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 22282  014A7C  D801               	call	i2u706_48
 22283  014A7E  D00A               	goto	i2u706_49
 22284  014A80                     i2u706_48:
 22285  014A80  0005               	push	
 22286  014A82  6EFA               	movwf	pclath,c
 22287  014A84  514C               	movf	_TMR5_InterruptHandler& (0+255),w,b
 22288  014A86  6EFD               	movwf	tosl,c
 22289  014A88  514D               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 22290  014A8A  6EFE               	movwf	tosh,c
 22291  014A8C  514E               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 22292  014A8E  6EFF               	movwf	tosu,c
 22293  014A90  50FA               	movf	pclath,w,c
 22294  014A92  0012               	return		;indir
 22295  014A94                     i2u706_49:
 22296  014A94  0060  F04F  FFFB   	movff	??_TMR5_ISR+1,pclatu
 22297  014A9A  0060  F04B  FFFA   	movff	??_TMR5_ISR,pclath
 22298  014AA0  0011               	retfie		f
 22299  014AA2                     __end_of_TMR5_ISR:
 22300                           	callstack 0
 22301                           
 22302 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 22303 ;; Defined at:
 22304 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 22305 ;; Parameters:    Size  Location     Type
 22306 ;;		None
 22307 ;; Auto vars:     Size  Location     Type
 22308 ;;		None
 22309 ;; Return value:  Size  Location     Type
 22310 ;;                  1    wreg      void 
 22311 ;; Registers used:
 22312 ;;		None
 22313 ;; Tracked objects:
 22314 ;;		On entry : 3F/1
 22315 ;;		On exit  : 3F/1
 22316 ;;		Unchanged: 3F/0
 22317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22322 ;;Total ram usage:        0 bytes
 22323 ;; Hardware stack levels used: 1
 22324 ;; This function calls:
 22325 ;;		Nothing
 22326 ;; This function is called by:
 22327 ;;		_TMR5_Initialize
 22328 ;;		_TMR5_ISR
 22329 ;; This function uses a non-reentrant model
 22330 ;;
 22331                           
 22332                           	psect	text133
 22333  0156D2                     __ptext133:
 22334                           	callstack 0
 22335  0156D2                     _TMR5_DefaultInterruptHandler:
 22336                           	callstack 16
 22337                           
 22338                           ; BSR set to: 1
 22339                           
 22340                           ;incstack = 0
 22341  0156D2  0012               	return		;funcret
 22342  0156D4                     __end_of_TMR5_DefaultInterruptHandler:
 22343                           	callstack 0
 22344                           
 22345 ;; *************** function _Timers_Isr *****************
 22346 ;; Defined at:
 22347 ;;		line 48 in file "timers.c"
 22348 ;; Parameters:    Size  Location     Type
 22349 ;;		None
 22350 ;; Auto vars:     Size  Location     Type
 22351 ;;  i               2   15[COMRAM] int 
 22352 ;; Return value:  Size  Location     Type
 22353 ;;                  1    wreg      void 
 22354 ;; Registers used:
 22355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22356 ;; Tracked objects:
 22357 ;;		On entry : 3F/1
 22358 ;;		On exit  : 3F/1
 22359 ;;		Unchanged: 3F/0
 22360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22364 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22365 ;;Total ram usage:        4 bytes
 22366 ;; Hardware stack levels used: 1
 22367 ;; This function calls:
 22368 ;;		Nothing
 22369 ;; This function is called by:
 22370 ;;		_main
 22371 ;;		_TMR5_ISR
 22372 ;; This function uses a non-reentrant model
 22373 ;;
 22374                           
 22375                           	psect	text134
 22376  014914                     __ptext134:
 22377                           	callstack 0
 22378  014914                     _Timers_Isr:
 22379                           	callstack 16
 22380                           
 22381                           ; BSR set to: 1
 22382                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 22383                           
 22384                           ; BSR set to: 1
 22385                           ;incstack = 0
 22386  014914  0E00               	movlw	0
 22387  014916  6E11               	movwf	(Timers_Isr@i+1)^0,c
 22388  014918  0E00               	movlw	0
 22389  01491A  6E10               	movwf	Timers_Isr@i^0,c
 22390  01491C                     i2l8238:
 22391                           
 22392                           ; BSR set to: 1
 22393                           ;timers.c: 52:   if (tickCount[i] != 0) {
 22394  01491C  90D8               	bcf	status,0,c
 22395  01491E  3410               	rlcf	Timers_Isr@i^0,w,c
 22396  014920  6ED9               	movwf	fsr2l,c
 22397  014922  3411               	rlcf	(Timers_Isr@i+1)^0,w,c
 22398  014924  6EDA               	movwf	fsr2h,c
 22399  014926  0E0C               	movlw	low _tickCount
 22400  014928  26D9               	addwf	fsr2l,f,c
 22401  01492A  0E01               	movlw	high _tickCount
 22402  01492C  22DA               	addwfc	fsr2h,f,c
 22403  01492E  50DE               	movf	postinc2,w,c
 22404  014930  10DE               	iorwf	postinc2,w,c
 22405  014932  B4D8               	btfsc	status,2,c
 22406  014934  D00C               	goto	i2l8242
 22407                           
 22408                           ; BSR set to: 1
 22409                           ;timers.c: 53:    tickCount[i]--;
 22410  014936  90D8               	bcf	status,0,c
 22411  014938  3410               	rlcf	Timers_Isr@i^0,w,c
 22412  01493A  6ED9               	movwf	fsr2l,c
 22413  01493C  3411               	rlcf	(Timers_Isr@i+1)^0,w,c
 22414  01493E  6EDA               	movwf	fsr2h,c
 22415  014940  0E0C               	movlw	low _tickCount
 22416  014942  26D9               	addwf	fsr2l,f,c
 22417  014944  0E01               	movlw	high _tickCount
 22418  014946  22DA               	addwfc	fsr2h,f,c
 22419  014948  06DE               	decf	postinc2,f,c
 22420  01494A  0E00               	movlw	0
 22421  01494C  5ADD               	subwfb	postdec2,f,c
 22422  01494E                     i2l8242:
 22423                           
 22424                           ; BSR set to: 1
 22425                           ;timers.c: 55:  }
 22426  01494E  4A10               	infsnz	Timers_Isr@i^0,f,c
 22427  014950  2A11               	incf	(Timers_Isr@i+1)^0,f,c
 22428                           
 22429                           ; BSR set to: 1
 22430  014952  BE11               	btfsc	(Timers_Isr@i+1)^0,7,c
 22431  014954  D7E3               	goto	i2l8238
 22432  014956  5011               	movf	(Timers_Isr@i+1)^0,w,c
 22433  014958  E105               	bnz	i2u701_40
 22434  01495A  0E06               	movlw	6
 22435  01495C  5C10               	subwf	Timers_Isr@i^0,w,c
 22436  01495E  B0D8               	btfsc	status,0,c
 22437  014960  0012               	return	
 22438  014962  D7DC               	goto	i2l8238
 22439  014964                     i2u701_40:
 22440                           
 22441                           ; BSR set to: 1
 22442  014964  0012               	return		;funcret
 22443  014966                     __end_of_Timers_Isr:
 22444                           	callstack 0
 22445                           
 22446 ;; *************** function _TMR5_WriteTimer *****************
 22447 ;; Defined at:
 22448 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 22449 ;; Parameters:    Size  Location     Type
 22450 ;;  timerVal        2   13[COMRAM] unsigned short 
 22451 ;; Auto vars:     Size  Location     Type
 22452 ;;		None
 22453 ;; Return value:  Size  Location     Type
 22454 ;;                  1    wreg      void 
 22455 ;; Registers used:
 22456 ;;		None
 22457 ;; Tracked objects:
 22458 ;;		On entry : 3F/39
 22459 ;;		On exit  : 3F/39
 22460 ;;		Unchanged: 3E/0
 22461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22466 ;;Total ram usage:        2 bytes
 22467 ;; Hardware stack levels used: 1
 22468 ;; This function calls:
 22469 ;;		Nothing
 22470 ;; This function is called by:
 22471 ;;		_TMR5_ISR
 22472 ;; This function uses a non-reentrant model
 22473 ;;
 22474                           
 22475                           	psect	text135
 22476  0152B2                     __ptext135:
 22477                           	callstack 0
 22478  0152B2                     _TMR5_WriteTimer:
 22479                           	callstack 16
 22480                           
 22481                           ; BSR set to: 57
 22482                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 22483                           
 22484                           ; BSR set to: 1
 22485                           ;incstack = 0
 22486  0152B2  A49A               	btfss	154,2,c	;volatile
 22487  0152B4  D009               	goto	i2l576
 22488                           
 22489                           ; BSR set to: 57
 22490                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 22491  0152B6  909A               	bcf	154,0,c	;volatile
 22492                           
 22493                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 22494  0152B8  0060  F03F  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 22495                           
 22496                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 22497  0152BE  0060  F03B  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 22498                           
 22499                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 22500  0152C4  809A               	bsf	154,0,c	;volatile
 22501                           
 22502                           ;mcc_generated_files/tmr5.c: 141:     }
 22503  0152C6  0012               	return	
 22504  0152C8                     i2l576:
 22505                           
 22506                           ; BSR set to: 57
 22507                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 22508  0152C8  0060  F03F  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 22509                           
 22510                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 22511  0152CE  0060  F03B  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 22512                           
 22513                           ; BSR set to: 57
 22514  0152D4  0012               	return		;funcret
 22515  0152D6                     __end_of_TMR5_WriteTimer:
 22516                           	callstack 0
 22517                           
 22518 ;; *************** function _DMA1_DMASCNTI_ISR *****************
 22519 ;; Defined at:
 22520 ;;		line 170 in file "mcc_generated_files/dma1.c"
 22521 ;; Parameters:    Size  Location     Type
 22522 ;;		None
 22523 ;; Auto vars:     Size  Location     Type
 22524 ;;		None
 22525 ;; Return value:  Size  Location     Type
 22526 ;;                  1    wreg      void 
 22527 ;; Registers used:
 22528 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22529 ;; Tracked objects:
 22530 ;;		On entry : 0/0
 22531 ;;		On exit  : 0/0
 22532 ;;		Unchanged: 0/0
 22533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22538 ;;Total ram usage:        2 bytes
 22539 ;; Hardware stack levels used: 1
 22540 ;; Hardware stack levels required when called: 1
 22541 ;; This function calls:
 22542 ;;		Absolute function
 22543 ;;		_DMA1_DefaultInterruptHandler
 22544 ;;		_source_dma_done
 22545 ;; This function is called by:
 22546 ;;		Interrupt level 2
 22547 ;; This function uses a non-reentrant model
 22548 ;;
 22549                           
 22550                           	psect	text136
 22551  014CDC                     __ptext136:
 22552                           	callstack 0
 22553  014CDC                     _DMA1_DMASCNTI_ISR:
 22554                           	callstack 16
 22555                           
 22556                           ; BSR set to: 57
 22557                           ;incstack = 0
 22558  014CDC  006F FFE8  F014    	movff	pclath,??_DMA1_DMASCNTI_ISR
 22559  014CE2  006F FFEC  F015    	movff	pclatu,??_DMA1_DMASCNTI_ISR+1
 22560                           
 22561                           ;mcc_generated_files/dma1.c: 173:     PIR2bits.DMA1SCNTIF = 0;
 22562  014CE8  0139               	movlb	57	; () banked
 22563  014CEA  91A2               	bcf	162,0,b	;volatile
 22564                           
 22565                           ; BSR set to: 57
 22566                           ;mcc_generated_files/dma1.c: 175:     if (DMA1_SCNTI_InterruptHandler)
 22567  014CEC  0101               	movlb	1	; () banked
 22568  014CEE  5149               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 22569  014CF0  114A               	iorwf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 22570  014CF2  114B               	iorwf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 22571  014CF4  B4D8               	btfsc	status,2,c
 22572  014CF6  D00C               	goto	i2u708_49
 22573                           
 22574                           ; BSR set to: 1
 22575                           ;mcc_generated_files/dma1.c: 176:             DMA1_SCNTI_InterruptHandler();
 22576  014CF8  D801               	call	i2u708_48
 22577  014CFA  D00A               	goto	i2u708_49
 22578  014CFC                     i2u708_48:
 22579  014CFC  0005               	push	
 22580  014CFE  6EFA               	movwf	pclath,c
 22581  014D00  5149               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 22582  014D02  6EFD               	movwf	tosl,c
 22583  014D04  514A               	movf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 22584  014D06  6EFE               	movwf	tosh,c
 22585  014D08  514B               	movf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 22586  014D0A  6EFF               	movwf	tosu,c
 22587  014D0C  50FA               	movf	pclath,w,c
 22588  014D0E  0012               	return		;indir
 22589  014D10                     i2u708_49:
 22590  014D10  0060  F057  FFFB   	movff	??_DMA1_DMASCNTI_ISR+1,pclatu
 22591  014D16  0060  F053  FFFA   	movff	??_DMA1_DMASCNTI_ISR,pclath
 22592  014D1C  0011               	retfie		f
 22593  014D1E                     __end_of_DMA1_DMASCNTI_ISR:
 22594                           	callstack 0
 22595                           
 22596 ;; *************** function _DMA1_DefaultInterruptHandler *****************
 22597 ;; Defined at:
 22598 ;;		line 184 in file "mcc_generated_files/dma1.c"
 22599 ;; Parameters:    Size  Location     Type
 22600 ;;		None
 22601 ;; Auto vars:     Size  Location     Type
 22602 ;;		None
 22603 ;; Return value:  Size  Location     Type
 22604 ;;                  1    wreg      void 
 22605 ;; Registers used:
 22606 ;;		None
 22607 ;; Tracked objects:
 22608 ;;		On entry : 3F/1
 22609 ;;		On exit  : 3F/1
 22610 ;;		Unchanged: 3F/0
 22611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22616 ;;Total ram usage:        0 bytes
 22617 ;; Hardware stack levels used: 1
 22618 ;; This function calls:
 22619 ;;		Nothing
 22620 ;; This function is called by:
 22621 ;;		_DMA1_Initialize
 22622 ;;		_DMA1_DMASCNTI_ISR
 22623 ;; This function uses a non-reentrant model
 22624 ;;
 22625                           
 22626                           	psect	text137
 22627  0156D4                     __ptext137:
 22628                           	callstack 0
 22629  0156D4                     _DMA1_DefaultInterruptHandler:
 22630                           	callstack 16
 22631                           
 22632                           ; BSR set to: 1
 22633                           
 22634                           ;incstack = 0
 22635  0156D4  0012               	return		;funcret
 22636  0156D6                     __end_of_DMA1_DefaultInterruptHandler:
 22637                           	callstack 0
 22638                           
 22639 ;; *************** function _source_dma_done *****************
 22640 ;; Defined at:
 22641 ;;		line 304 in file "eadog.c"
 22642 ;; Parameters:    Size  Location     Type
 22643 ;;		None
 22644 ;; Auto vars:     Size  Location     Type
 22645 ;;		None
 22646 ;; Return value:  Size  Location     Type
 22647 ;;                  1    wreg      void 
 22648 ;; Registers used:
 22649 ;;		None
 22650 ;; Tracked objects:
 22651 ;;		On entry : 3F/1
 22652 ;;		On exit  : 3F/1
 22653 ;;		Unchanged: 0/0
 22654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22659 ;;Total ram usage:        0 bytes
 22660 ;; Hardware stack levels used: 1
 22661 ;; This function calls:
 22662 ;;		Nothing
 22663 ;; This function is called by:
 22664 ;;		_main
 22665 ;;		_DMA1_DMASCNTI_ISR
 22666 ;; This function uses a non-reentrant model
 22667 ;;
 22668                           
 22669                           	psect	text138
 22670  0156C2                     __ptext138:
 22671                           	callstack 0
 22672  0156C2                     _source_dma_done:
 22673                           	callstack 16
 22674                           
 22675                           ; BSR set to: 1
 22676                           ;eadog.c: 306:  spi_link.LCD_DATA = 0;
 22677                           
 22678                           ; BSR set to: 1
 22679                           ;incstack = 0
 22680  0156C2  9700               	bcf	_spi_link& (0+255),3,b	;volatile
 22681                           
 22682                           ; BSR set to: 1
 22683  0156C4  0012               	return		;funcret
 22684  0156C6                     __end_of_source_dma_done:
 22685                           	callstack 0
 22686                           
 22687 ;; *************** function _UART1_framing_err_vect_isr *****************
 22688 ;; Defined at:
 22689 ;;		line 259 in file "mcc_generated_files/uart1.c"
 22690 ;; Parameters:    Size  Location     Type
 22691 ;;		None
 22692 ;; Auto vars:     Size  Location     Type
 22693 ;;		None
 22694 ;; Return value:  Size  Location     Type
 22695 ;;                  1    wreg      void 
 22696 ;; Registers used:
 22697 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22698 ;; Tracked objects:
 22699 ;;		On entry : 0/0
 22700 ;;		On exit  : 0/0
 22701 ;;		Unchanged: 0/0
 22702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22707 ;;Total ram usage:        2 bytes
 22708 ;; Hardware stack levels used: 1
 22709 ;; Hardware stack levels required when called: 1
 22710 ;; This function calls:
 22711 ;;		Absolute function
 22712 ;;		_UART1_FramingError_ISR
 22713 ;; This function is called by:
 22714 ;;		Interrupt level 2
 22715 ;; This function uses a non-reentrant model
 22716 ;;
 22717                           
 22718                           	psect	text139
 22719  014ED8                     __ptext139:
 22720                           	callstack 0
 22721  014ED8                     _UART1_framing_err_vect_isr:
 22722                           	callstack 16
 22723                           
 22724                           ; BSR set to: 1
 22725                           ;incstack = 0
 22726  014ED8  006F FFE8  F016    	movff	pclath,??_UART1_framing_err_vect_isr
 22727  014EDE  006F FFEC  F017    	movff	pclatu,??_UART1_framing_err_vect_isr+1
 22728                           
 22729                           ;mcc_generated_files/uart1.c: 261:     if(UART1_FramingErrorInterruptHandler)
 22730  014EE4  0101               	movlb	1	; () banked
 22731  014EE6  5158               	movf	_UART1_FramingErrorInterruptHandler& (0+255),w,b
 22732  014EE8  1159               	iorwf	(_UART1_FramingErrorInterruptHandler+1)& (0+255),w,b
 22733  014EEA  115A               	iorwf	(_UART1_FramingErrorInterruptHandler+2)& (0+255),w,b
 22734  014EEC  B4D8               	btfsc	status,2,c
 22735  014EEE  D00C               	goto	i2u714_49
 22736                           
 22737                           ; BSR set to: 1
 22738                           ;mcc_generated_files/uart1.c: 262:     {;mcc_generated_files/uart1.c: 263:         UART1
      +                          _FramingErrorInterruptHandler();
 22739  014EF0  D801               	call	i2u714_48
 22740  014EF2  D00A               	goto	i2u714_49
 22741  014EF4                     i2u714_48:
 22742  014EF4  0005               	push	
 22743  014EF6  6EFA               	movwf	pclath,c
 22744  014EF8  5158               	movf	_UART1_FramingErrorInterruptHandler& (0+255),w,b
 22745  014EFA  6EFD               	movwf	tosl,c
 22746  014EFC  5159               	movf	(_UART1_FramingErrorInterruptHandler+1)& (0+255),w,b
 22747  014EFE  6EFE               	movwf	tosh,c
 22748  014F00  515A               	movf	(_UART1_FramingErrorInterruptHandler+2)& (0+255),w,b
 22749  014F02  6EFF               	movwf	tosu,c
 22750  014F04  50FA               	movf	pclath,w,c
 22751  014F06  0012               	return		;indir
 22752  014F08                     i2u714_49:
 22753  014F08  0060  F05F  FFFB   	movff	??_UART1_framing_err_vect_isr+1,pclatu
 22754  014F0E  0060  F05B  FFFA   	movff	??_UART1_framing_err_vect_isr,pclath
 22755  014F14  0011               	retfie		f
 22756  014F16                     __end_of_UART1_framing_err_vect_isr:
 22757                           	callstack 0
 22758                           
 22759 ;; *************** function _UART1_FramingError_ISR *****************
 22760 ;; Defined at:
 22761 ;;		line 349 in file "mcc_generated_files/uart1.c"
 22762 ;; Parameters:    Size  Location     Type
 22763 ;;		None
 22764 ;; Auto vars:     Size  Location     Type
 22765 ;;		None
 22766 ;; Return value:  Size  Location     Type
 22767 ;;                  1    wreg      void 
 22768 ;; Registers used:
 22769 ;;		wreg, status,2
 22770 ;; Tracked objects:
 22771 ;;		On entry : 3F/1
 22772 ;;		On exit  : 3F/3D
 22773 ;;		Unchanged: 0/0
 22774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22779 ;;Total ram usage:        0 bytes
 22780 ;; Hardware stack levels used: 1
 22781 ;; This function calls:
 22782 ;;		Nothing
 22783 ;; This function is called by:
 22784 ;;		_UART1_Initialize
 22785 ;;		_UART1_framing_err_vect_isr
 22786 ;; This function uses a non-reentrant model
 22787 ;;
 22788                           
 22789                           	psect	text140
 22790  01569C                     __ptext140:
 22791                           	callstack 0
 22792  01569C                     _UART1_FramingError_ISR:
 22793                           	callstack 16
 22794                           
 22795                           ; BSR set to: 1
 22796                           ;mcc_generated_files/uart1.c: 352:     U1ERRIR = 0;
 22797                           
 22798                           ;incstack = 0
 22799  01569C  0E00               	movlw	0
 22800  01569E  013D               	movlb	61	; () banked
 22801  0156A0  6FF9               	movwf	249,b	;volatile
 22802                           
 22803                           ; BSR set to: 61
 22804  0156A2  0012               	return		;funcret
 22805  0156A4                     __end_of_UART1_FramingError_ISR:
 22806                           	callstack 0
 22807                           
 22808 ;; *************** function _UART1_vect_isr *****************
 22809 ;; Defined at:
 22810 ;;		line 267 in file "mcc_generated_files/uart1.c"
 22811 ;; Parameters:    Size  Location     Type
 22812 ;;		None
 22813 ;; Auto vars:     Size  Location     Type
 22814 ;;		None
 22815 ;; Return value:  Size  Location     Type
 22816 ;;                  1    wreg      void 
 22817 ;; Registers used:
 22818 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22819 ;; Tracked objects:
 22820 ;;		On entry : 0/0
 22821 ;;		On exit  : 0/0
 22822 ;;		Unchanged: 0/0
 22823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22828 ;;Total ram usage:        2 bytes
 22829 ;; Hardware stack levels used: 1
 22830 ;; Hardware stack levels required when called: 1
 22831 ;; This function calls:
 22832 ;;		Absolute function
 22833 ;;		_UART1_UartInterrupt_ISR
 22834 ;; This function is called by:
 22835 ;;		Interrupt level 2
 22836 ;; This function uses a non-reentrant model
 22837 ;;
 22838                           
 22839                           	psect	text141
 22840  014F18                     __ptext141:
 22841                           	callstack 0
 22842  014F18                     _UART1_vect_isr:
 22843                           	callstack 16
 22844                           
 22845                           ; BSR set to: 61
 22846                           ;incstack = 0
 22847  014F18  006F FFE8  F018    	movff	pclath,??_UART1_vect_isr
 22848  014F1E  006F FFEC  F019    	movff	pclatu,??_UART1_vect_isr+1
 22849                           
 22850                           ;mcc_generated_files/uart1.c: 269:     if(UART1_UARTInterruptHandler)
 22851  014F24  0101               	movlb	1	; () banked
 22852  014F26  5155               	movf	_UART1_UARTInterruptHandler& (0+255),w,b
 22853  014F28  1156               	iorwf	(_UART1_UARTInterruptHandler+1)& (0+255),w,b
 22854  014F2A  1157               	iorwf	(_UART1_UARTInterruptHandler+2)& (0+255),w,b
 22855  014F2C  B4D8               	btfsc	status,2,c
 22856  014F2E  D00C               	goto	i2u716_49
 22857                           
 22858                           ; BSR set to: 1
 22859                           ;mcc_generated_files/uart1.c: 270:     {;mcc_generated_files/uart1.c: 271:         UART1
      +                          _UARTInterruptHandler();
 22860  014F30  D801               	call	i2u716_48
 22861  014F32  D00A               	goto	i2u716_49
 22862  014F34                     i2u716_48:
 22863  014F34  0005               	push	
 22864  014F36  6EFA               	movwf	pclath,c
 22865  014F38  5155               	movf	_UART1_UARTInterruptHandler& (0+255),w,b
 22866  014F3A  6EFD               	movwf	tosl,c
 22867  014F3C  5156               	movf	(_UART1_UARTInterruptHandler+1)& (0+255),w,b
 22868  014F3E  6EFE               	movwf	tosh,c
 22869  014F40  5157               	movf	(_UART1_UARTInterruptHandler+2)& (0+255),w,b
 22870  014F42  6EFF               	movwf	tosu,c
 22871  014F44  50FA               	movf	pclath,w,c
 22872  014F46  0012               	return		;indir
 22873  014F48                     i2u716_49:
 22874  014F48  0060  F067  FFFB   	movff	??_UART1_vect_isr+1,pclatu
 22875  014F4E  0060  F063  FFFA   	movff	??_UART1_vect_isr,pclath
 22876  014F54  0011               	retfie		f
 22877  014F56                     __end_of_UART1_vect_isr:
 22878                           	callstack 0
 22879                           
 22880 ;; *************** function _UART1_UartInterrupt_ISR *****************
 22881 ;; Defined at:
 22882 ;;		line 358 in file "mcc_generated_files/uart1.c"
 22883 ;; Parameters:    Size  Location     Type
 22884 ;;		None
 22885 ;; Auto vars:     Size  Location     Type
 22886 ;;		None
 22887 ;; Return value:  Size  Location     Type
 22888 ;;                  1    wreg      void 
 22889 ;; Registers used:
 22890 ;;		None
 22891 ;; Tracked objects:
 22892 ;;		On entry : 3F/1
 22893 ;;		On exit  : 3F/3D
 22894 ;;		Unchanged: 0/0
 22895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22900 ;;Total ram usage:        0 bytes
 22901 ;; Hardware stack levels used: 1
 22902 ;; This function calls:
 22903 ;;		Nothing
 22904 ;; This function is called by:
 22905 ;;		_UART1_Initialize
 22906 ;;		_UART1_vect_isr
 22907 ;; This function uses a non-reentrant model
 22908 ;;
 22909                           
 22910                           	psect	text142
 22911  0156BC                     __ptext142:
 22912                           	callstack 0
 22913  0156BC                     _UART1_UartInterrupt_ISR:
 22914                           	callstack 16
 22915                           
 22916                           ; BSR set to: 1
 22917                           ;mcc_generated_files/uart1.c: 361:     U1UIRbits.WUIF = 0;
 22918                           
 22919                           ;incstack = 0
 22920  0156BC  013D               	movlb	61	; () banked
 22921  0156BE  9FF8               	bcf	248,7,b	;volatile
 22922                           
 22923                           ; BSR set to: 61
 22924  0156C0  0012               	return		;funcret
 22925  0156C2                     __end_of_UART1_UartInterrupt_ISR:
 22926                           	callstack 0
 22927                           
 22928                           ;
 22929                           ; Interrupt Vector Table @ 0x8
 22930                           ;
 22931                           
 22932                           	psect	ivt0x8
 22933  000008                     __pivt0x8:
 22934                           	callstack 0
 22935  000008                     ivt0x8_base:
 22936                           	callstack 0
 22937                           
 22938                           ; Vector 0 : SWINT
 22939  000008  55B4               	dw	_Default_ISR shr (0+2)
 22940                           
 22941                           ; Vector 1 : HLVD
 22942  00000A  55B4               	dw	_Default_ISR shr (0+2)
 22943                           
 22944                           ; Vector 2 : OSF
 22945  00000C  55B4               	dw	_Default_ISR shr (0+2)
 22946                           
 22947                           ; Vector 3 : CSW
 22948  00000E  55B4               	dw	_Default_ISR shr (0+2)
 22949                           
 22950                           ; Vector 4 : NVM
 22951  000010  55B4               	dw	_Default_ISR shr (0+2)
 22952                           
 22953                           ; Vector 5 : SCAN
 22954  000012  55B4               	dw	_Default_ISR shr (0+2)
 22955                           
 22956                           ; Vector 6 : CRC
 22957  000014  55B4               	dw	_Default_ISR shr (0+2)
 22958                           
 22959                           ; Vector 7 : IOC
 22960  000016  55B4               	dw	_Default_ISR shr (0+2)
 22961                           
 22962                           ; Vector 8 : INT0
 22963  000018  55B4               	dw	_Default_ISR shr (0+2)
 22964                           
 22965                           ; Vector 9 : ZCD
 22966  00001A  55B4               	dw	_Default_ISR shr (0+2)
 22967                           
 22968                           ; Vector 10 : AD
 22969  00001C  5326               	dw	_ADCC_ISR shr (0+2)
 22970                           
 22971                           ; Vector 11 : ADT
 22972  00001E  55B4               	dw	_Default_ISR shr (0+2)
 22973                           
 22974                           ; Vector 12 : CMP1
 22975  000020  55B4               	dw	_Default_ISR shr (0+2)
 22976                           
 22977                           ; Vector 13 : SMT1
 22978  000022  55B4               	dw	_Default_ISR shr (0+2)
 22979                           
 22980                           ; Vector 14 : SMT1PRA
 22981  000024  55B4               	dw	_Default_ISR shr (0+2)
 22982                           
 22983                           ; Vector 15 : SMT1PRW
 22984  000026  55B4               	dw	_Default_ISR shr (0+2)
 22985                           
 22986                           ; Vector 16 : DMA1SCNT
 22987  000028  5337               	dw	_DMA1_DMASCNTI_ISR shr (0+2)
 22988                           
 22989                           ; Vector 17 : DMA1DCNT
 22990  00002A  55B4               	dw	_Default_ISR shr (0+2)
 22991                           
 22992                           ; Vector 18 : DMA1OR
 22993  00002C  55B4               	dw	_Default_ISR shr (0+2)
 22994                           
 22995                           ; Vector 19 : DMA1A
 22996  00002E  55B4               	dw	_Default_ISR shr (0+2)
 22997                           
 22998                           ; Vector 20 : SPI1RX
 22999  000030  55B4               	dw	_Default_ISR shr (0+2)
 23000                           
 23001                           ; Vector 21 : SPI1TX
 23002  000032  55B4               	dw	_Default_ISR shr (0+2)
 23003                           
 23004                           ; Vector 22 : SPI1
 23005  000034  55B4               	dw	_Default_ISR shr (0+2)
 23006                           
 23007                           ; Vector 23 : I2C1RX
 23008  000036  55B4               	dw	_Default_ISR shr (0+2)
 23009                           
 23010                           ; Vector 24 : I2C1TX
 23011  000038  55B4               	dw	_Default_ISR shr (0+2)
 23012                           
 23013                           ; Vector 25 : I2C1
 23014  00003A  55B4               	dw	_Default_ISR shr (0+2)
 23015                           
 23016                           ; Vector 26 : I2C1E
 23017  00003C  55B4               	dw	_Default_ISR shr (0+2)
 23018                           
 23019                           ; Vector 27 : U1RX
 23020  00003E  52F2               	dw	_UART1_rx_vect_isr shr (0+2)
 23021                           
 23022                           ; Vector 28 : U1TX
 23023  000040  52E0               	dw	_UART1_tx_vect_isr shr (0+2)
 23024                           
 23025                           ; Vector 29 : U1E
 23026  000042  53B6               	dw	_UART1_framing_err_vect_isr shr (0+2)
 23027                           
 23028                           ; Vector 30 : U1
 23029  000044  53C6               	dw	_UART1_vect_isr shr (0+2)
 23030                           
 23031                           ; Vector 31 : TMR0
 23032  000046  55B4               	dw	_Default_ISR shr (0+2)
 23033                           
 23034                           ; Vector 32 : TMR1
 23035  000048  55B4               	dw	_Default_ISR shr (0+2)
 23036                           
 23037                           ; Vector 33 : TMR1G
 23038  00004A  55B4               	dw	_Default_ISR shr (0+2)
 23039                           
 23040                           ; Vector 34 : TMR2
 23041  00004C  55B4               	dw	_Default_ISR shr (0+2)
 23042                           
 23043                           ; Vector 35 : CCP1
 23044  00004E  55B4               	dw	_Default_ISR shr (0+2)
 23045                           
 23046                           ; Vector 36 : Undefined
 23047  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 23048                           
 23049                           ; Vector 37 : NCO1
 23050  000052  55B4               	dw	_Default_ISR shr (0+2)
 23051                           
 23052                           ; Vector 38 : CWG1
 23053  000054  55B4               	dw	_Default_ISR shr (0+2)
 23054                           
 23055                           ; Vector 39 : CLC1
 23056  000056  55B4               	dw	_Default_ISR shr (0+2)
 23057                           
 23058                           ; Vector 40 : INT1
 23059  000058  55B4               	dw	_Default_ISR shr (0+2)
 23060                           
 23061                           ; Vector 41 : CMP2
 23062  00005A  55B4               	dw	_Default_ISR shr (0+2)
 23063                           
 23064                           ; Vector 42 : DMA2SCNT
 23065  00005C  55B4               	dw	_Default_ISR shr (0+2)
 23066                           
 23067                           ; Vector 43 : DMA2DCNT
 23068  00005E  55B4               	dw	_Default_ISR shr (0+2)
 23069                           
 23070                           ; Vector 44 : DMA2OR
 23071  000060  55B4               	dw	_Default_ISR shr (0+2)
 23072                           
 23073                           ; Vector 45 : DMA2A
 23074  000062  55B4               	dw	_Default_ISR shr (0+2)
 23075                           
 23076                           ; Vector 46 : I2C2RX
 23077  000064  55B4               	dw	_Default_ISR shr (0+2)
 23078                           
 23079                           ; Vector 47 : I2C2TX
 23080  000066  55B4               	dw	_Default_ISR shr (0+2)
 23081                           
 23082                           ; Vector 48 : I2C2
 23083  000068  55B4               	dw	_Default_ISR shr (0+2)
 23084                           
 23085                           ; Vector 49 : I2C2E
 23086  00006A  55B4               	dw	_Default_ISR shr (0+2)
 23087                           
 23088                           ; Vector 50 : U2RX
 23089  00006C  55B4               	dw	_Default_ISR shr (0+2)
 23090                           
 23091                           ; Vector 51 : U2TX
 23092  00006E  55B4               	dw	_Default_ISR shr (0+2)
 23093                           
 23094                           ; Vector 52 : U2E
 23095  000070  55B4               	dw	_Default_ISR shr (0+2)
 23096                           
 23097                           ; Vector 53 : U2
 23098  000072  55B4               	dw	_Default_ISR shr (0+2)
 23099                           
 23100                           ; Vector 54 : TMR3
 23101  000074  55B4               	dw	_Default_ISR shr (0+2)
 23102                           
 23103                           ; Vector 55 : TMR3G
 23104  000076  55B4               	dw	_Default_ISR shr (0+2)
 23105                           
 23106                           ; Vector 56 : TMR4
 23107  000078  55B4               	dw	_Default_ISR shr (0+2)
 23108                           
 23109                           ; Vector 57 : CCP2
 23110  00007A  55B4               	dw	_Default_ISR shr (0+2)
 23111                           
 23112                           ; Vector 58 : Undefined
 23113  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 23114                           
 23115                           ; Vector 59 : CWG2
 23116  00007E  55B4               	dw	_Default_ISR shr (0+2)
 23117                           
 23118                           ; Vector 60 : CLC2
 23119  000080  55B4               	dw	_Default_ISR shr (0+2)
 23120                           
 23121                           ; Vector 61 : INT2
 23122  000082  55B4               	dw	_Default_ISR shr (0+2)
 23123                           
 23124                           ; Vector 62 : Undefined
 23125  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 23126                           
 23127                           ; Vector 63 : Undefined
 23128  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 23129                           
 23130                           ; Vector 64 : Undefined
 23131  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 23132                           
 23133                           ; Vector 65 : Undefined
 23134  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 23135                           
 23136                           ; Vector 66 : Undefined
 23137  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 23138                           
 23139                           ; Vector 67 : Undefined
 23140  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 23141                           
 23142                           ; Vector 68 : Undefined
 23143  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 23144                           
 23145                           ; Vector 69 : Undefined
 23146  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 23147                           
 23148                           ; Vector 70 : TMR5
 23149  000094  5295               	dw	_TMR5_ISR shr (0+2)
 23150                           
 23151                           ; Vector 71 : TMR5G
 23152  000096  55B4               	dw	_Default_ISR shr (0+2)
 23153                           
 23154                           ; Vector 72 : TMR6
 23155  000098  5402               	dw	_TMR6_ISR shr (0+2)
 23156                           
 23157                           ; Vector 73 : CCP3
 23158  00009A  55B4               	dw	_Default_ISR shr (0+2)
 23159                           
 23160                           ; Vector 74 : CWG3
 23161  00009C  55B4               	dw	_Default_ISR shr (0+2)
 23162                           
 23163                           ; Vector 75 : CLC3
 23164  00009E  55B4               	dw	_Default_ISR shr (0+2)
 23165                           
 23166                           ; Vector 76 : Undefined
 23167  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 23168                           
 23169                           ; Vector 77 : Undefined
 23170  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 23171                           
 23172                           ; Vector 78 : Undefined
 23173  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 23174                           
 23175                           ; Vector 79 : Undefined
 23176  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 23177                           
 23178                           ; Vector 80 : CCP4
 23179  0000A8  55B4               	dw	_Default_ISR shr (0+2)
 23180                           
 23181                           ; Vector 81 : CLC4
 23182  0000AA  55B4               	dw	_Default_ISR shr (0+2)
 23183  0000AC                     ivt0x8_undefint:
 23184                           	callstack 0
 23185  0000AC  00FF               	reset	
 23186                           
 23187                           	psect	text143
 23188  000000                     __ptext143:
 23189                           	callstack 0
 23190                           
 23191                           	psect	rparam
 23192  0000                     
 23193                           	psect	idloc
 23194                           
 23195                           ;Config register IDLOC0 @ 0x200000
 23196                           ;	unspecified, using default values
 23197  200000                     	org	2097152
 23198  200000  0FFF               	dw	4095
 23199                           
 23200                           ;Config register IDLOC1 @ 0x200002
 23201                           ;	unspecified, using default values
 23202  200002                     	org	2097154
 23203  200002  0FFF               	dw	4095
 23204                           
 23205                           ;Config register IDLOC2 @ 0x200004
 23206                           ;	unspecified, using default values
 23207  200004                     	org	2097156
 23208  200004  0FFF               	dw	4095
 23209                           
 23210                           ;Config register IDLOC3 @ 0x200006
 23211                           ;	unspecified, using default values
 23212  200006                     	org	2097158
 23213  200006  0FFF               	dw	4095
 23214                           
 23215                           ;Config register IDLOC4 @ 0x200008
 23216                           ;	unspecified, using default values
 23217  200008                     	org	2097160
 23218  200008  0FFF               	dw	4095
 23219                           
 23220                           ;Config register IDLOC5 @ 0x20000A
 23221                           ;	unspecified, using default values
 23222  20000A                     	org	2097162
 23223  20000A  0FFF               	dw	4095
 23224                           
 23225                           ;Config register IDLOC6 @ 0x20000C
 23226                           ;	unspecified, using default values
 23227  20000C                     	org	2097164
 23228  20000C  0FFF               	dw	4095
 23229                           
 23230                           ;Config register IDLOC7 @ 0x20000E
 23231                           ;	unspecified, using default values
 23232  20000E                     	org	2097166
 23233  20000E  0FFF               	dw	4095
 23234                           
 23235                           	psect	config
 23236                           
 23237                           ;Config register CONFIG1L @ 0x300000
 23238                           ;	External Oscillator Selection
 23239                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 23240                           ;	Reset Oscillator Selection
 23241                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 23242  300000                     	org	3145728
 23243  300000  AF                 	db	175
 23244                           
 23245                           ;Config register CONFIG1H @ 0x300001
 23246                           ;	Clock out Enable bit
 23247                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 23248                           ;	PRLOCKED One-Way Set Enable bit
 23249                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 23250                           ;	Clock Switch Enable bit
 23251                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 23252                           ;	Fail-Safe Clock Monitor Enable bit
 23253                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 23254  300001                     	org	3145729
 23255  300001  FF                 	db	255
 23256                           
 23257                           ;Config register CONFIG2L @ 0x300002
 23258                           ;	MCLR Enable bit
 23259                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 23260                           ;	Power-up timer selection bits
 23261                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 23262                           ;	Multi-vector enable bit
 23263                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 23264                           ;	IVTLOCK bit One-way set enable bit
 23265                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 23266                           ;	Low Power BOR Enable bit
 23267                           ;	LPBOREN = OFF, ULPBOR disabled
 23268                           ;	Brown-out Reset Enable bits
 23269                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 23270  300002                     	org	3145730
 23271  300002  FF                 	db	255
 23272                           
 23273                           ;Config register CONFIG2H @ 0x300003
 23274                           ;	Brown-out Reset Voltage Selection bits
 23275                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 23276                           ;	ZCD Disable bit
 23277                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 23278                           ;	PPSLOCK bit One-Way Set Enable bit
 23279                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 23280                           ;	Stack Full/Underflow Reset Enable bit
 23281                           ;	STVREN = ON, Stack full/underflow will cause Reset
 23282                           ;	Debugger Enable bit
 23283                           ;	DEBUG = OFF, Background debugger disabled
 23284                           ;	Extended Instruction Set Enable bit
 23285                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 23286  300003                     	org	3145731
 23287  300003  FF                 	db	255
 23288                           
 23289                           ;Config register CONFIG3L @ 0x300004
 23290                           ;	WDT Period selection bits
 23291                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 23292                           ;	WDT operating mode
 23293                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 23294  300004                     	org	3145732
 23295  300004  9F                 	db	159
 23296                           
 23297                           ;Config register CONFIG3H @ 0x300005
 23298                           ;	WDT Window Select bits
 23299                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 23300                           ;	WDT input clock selector
 23301                           ;	WDTCCS = SC, Software Control
 23302  300005                     	org	3145733
 23303  300005  FF                 	db	255
 23304                           
 23305                           ;Config register CONFIG4L @ 0x300006
 23306                           ;	Boot Block Size selection bits
 23307                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 23308                           ;	Boot Block enable bit
 23309                           ;	BBEN = OFF, Boot block disabled
 23310                           ;	Storage Area Flash enable bit
 23311                           ;	SAFEN = OFF, SAF disabled
 23312                           ;	Application Block write protection bit
 23313                           ;	WRTAPP = OFF, Application Block not write protected
 23314  300006                     	org	3145734
 23315  300006  FF                 	db	255
 23316                           
 23317                           ;Config register CONFIG4H @ 0x300007
 23318                           ;	Boot Block Write Protection bit
 23319                           ;	WRTB = OFF, Boot Block not write-protected
 23320                           ;	Configuration Register Write Protection bit
 23321                           ;	WRTC = OFF, Configuration registers not write-protected
 23322                           ;	Data EEPROM Write Protection bit
 23323                           ;	WRTD = OFF, Data EEPROM not write-protected
 23324                           ;	SAF Write protection bit
 23325                           ;	WRTSAF = OFF, SAF not Write Protected
 23326                           ;	Low Voltage Programming Enable bit
 23327                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 23328  300007                     	org	3145735
 23329  300007  DF                 	db	223
 23330                           
 23331                           ;Config register CONFIG5L @ 0x300008
 23332                           ;	PFM and Data EEPROM Code Protection bit
 23333                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 23334  300008                     	org	3145736
 23335  300008  FF                 	db	255
 23336                           
 23337                           ;Config register CONFIG5H @ 0x300009
 23338                           ;	unspecified, using default values
 23339  300009                     	org	3145737
 23340  300009  FF                 	db	255
 23341                           tosu	equ	0x3FFF
 23342                           tosh	equ	0x3FFE
 23343                           tosl	equ	0x3FFD
 23344                           stkptr	equ	0x3FFC
 23345                           pclatu	equ	0x3FFB
 23346                           pclath	equ	0x3FFA
 23347                           pcl	equ	0x3FF9
 23348                           tblptru	equ	0x3FF8
 23349                           tblptrh	equ	0x3FF7
 23350                           tblptrl	equ	0x3FF6
 23351                           tablat	equ	0x3FF5
 23352                           prodh	equ	0x3FF4
 23353                           prodl	equ	0x3FF3
 23354                           indf0	equ	0x3FEF
 23355                           postinc0	equ	0x3FEE
 23356                           postdec0	equ	0x3FED
 23357                           preinc0	equ	0x3FEC
 23358                           plusw0	equ	0x3FEB
 23359                           fsr0h	equ	0x3FEA
 23360                           fsr0l	equ	0x3FE9
 23361                           wreg	equ	0x3FE8
 23362                           indf1	equ	0x3FE7
 23363                           postinc1	equ	0x3FE6
 23364                           postdec1	equ	0x3FE5
 23365                           preinc1	equ	0x3FE4
 23366                           plusw1	equ	0x3FE3
 23367                           fsr1h	equ	0x3FE2
 23368                           fsr1l	equ	0x3FE1
 23369                           bsr	equ	0x3FE0
 23370                           indf2	equ	0x3FDF
 23371                           postinc2	equ	0x3FDE
 23372                           postdec2	equ	0x3FDD
 23373                           preinc2	equ	0x3FDC
 23374                           plusw2	equ	0x3FDB
 23375                           fsr2h	equ	0x3FDA
 23376                           fsr2l	equ	0x3FD9
 23377                           status	equ	0x3FD8

Data Sizes:
    Strings     524
    Constant    51
    Data        1129
    BSS         4899
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      64
    BANK0           160    152     157
    BANK1           256     56     177
    BANK2           256      0     234
    BANK3           256      0     195
    BANK4           256      0     255
    BANK5           256      0     131
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    fh_ps@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_po@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pp@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pu@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pd@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pl@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_p0@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_p1@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_48(CODE[1]), 

    S2698$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK5[128]), STR_45(CODE[4]), STR_40(CODE[3]), cli_ctx(BANK5[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK5[128]), STR_45(CODE[4]), STR_40(CODE[3]), cli_ctx(BANK5[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 153
		 -> vfpfcnvrt@ct(BANK1[3]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[23]), 
		 -> STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), STR_15(CODE[153]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 153
		 -> vfpfcnvrt@ct(BANK1[3]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[23]), 
		 -> STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), STR_15(CODE[153]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 255
		 -> cli_ctx.cmd(BANK5[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), cli_ctx(BANK5[131]), 
		 -> build_version(CODE[14]), buff1(BANK4[255]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 255
		 -> cli_ctx.cmd(BANK5[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), cli_ctx(BANK5[131]), 
		 -> build_version(CODE[14]), buff1(BANK4[255]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_35(CODE[4]), STR_34(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_35(CODE[4]), STR_34(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 255
		 -> STR_29(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), cli_ctx(BANK5[131]), 
		 -> buff1(BANK4[255]), STR_11(CODE[31]), STR_10(CODE[29]), STR_9(CODE[18]), 
		 -> STR_8(CODE[19]), STR_7(CODE[17]), STR_6(CODE[22]), STR_5(CODE[18]), 
		 -> STR_4(CODE[29]), STR_3(CODE[18]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 153
		 -> STR_15(CODE[153]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 255
		 -> dbuf(BANK2[80]), STR_29(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK5[131]), buff1(BANK4[255]), STR_11(CODE[31]), STR_10(CODE[29]), 
		 -> STR_9(CODE[18]), STR_8(CODE[19]), STR_7(CODE[17]), STR_6(CODE[22]), 
		 -> STR_5(CODE[18]), STR_4(CODE[29]), STR_3(CODE[18]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 153
		 -> STR_19(CODE[23]), STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[153]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 153
		 -> STR_19(CODE[23]), STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[153]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 153
		 -> STR_19(CODE[23]), STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[153]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), build_version(CODE[14]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), build_version(CODE[14]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), build_version(CODE[14]), 
		 -> STR_2(CODE[9]), STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_19(CODE[23]), STR_18(CODE[29]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    S4065$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4065$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    memcpy@s1	PTR const void  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    ringBufS_flush@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_put_dma_cpy@ptr	PTR const unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    ringBufS_put_dma_cpy@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_put_dma@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_init@_this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 1024
		 -> port_data(BIGRAM[1024]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    S3110spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S3110spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(1) Largest target is 1
		 -> cli_read@i(BANK0[1]), main@i(BANK0[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    S2698_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    S2698_t_cmd$cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    fh_pr@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    ps_type_ptr	PTR struct PS_TYPE size(2) Largest target is 40
		 -> ps_type(BANK2[40]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    S2705_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    UART1_SetUartInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_UartInterrupt_ISR(), 

    UART1_SetFramingErrorInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_FramingError_ISR(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_UARTInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_UartInterrupt_ISR(), Absolute function(), 

    UART1_FramingErrorInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_FramingError_ISR(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    DMA1_SetSCNTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), 

    DMA1_SCNTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_DATAEE_ReadByte
    _main->_PWM5_LoadDutyValue
    _main->_PWM6_LoadDutyValue
    _main->_display_led
    _main->_linux_getc
    _cli_init->_memset
    _ps_math->___wmul
    ___xxtofl->___wmul
    _vfpfcnvrt->_isdigit
    _vfpfcnvrt->_isupper
    _stoa->_strlen
    _efgtoa->___awmod
    _efgtoa->___fltol
    _efgtoa->_isupper
    _efgtoa->_strcpy
    _tolower->_isupper
    _pad->_strlen
    ___flsub->___wmul
    ___fladd->___wmul
    ___flmul->___wmul
    _atoi->___wmul
    _atoi->_isdigit
    _atoi->_isspace
    _init_display->_send_lcd_cmd
    _init_display->_send_lcd_cmd_long
    _init_display->_send_lcd_data
    _send_lcd_data->_SPI1_ExchangeByte
    _send_lcd_cmd_long->_SPI1_ExchangeByte
    _send_lcd_cmd->_SPI1_ExchangeByte
    _ringBufS_init->_memset
    _eaDogM_WriteString->_strlen
    _ringBufS_flush->_memset
    _cli_read->_linux_getc
    _cli_read->_memset
    _linux_getc->_UART1_Read
    __cli_interpret_cmd->_strlen
    _strncmp->_strlen
    _fputc->_putch
    _putch->_UART1_Write
    _WaitMs->_StartTimer
    _WaitMs->_TimerDone
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _DMA1_DMASCNTI_ISR in COMRAM

    None.

Critical Paths under _UART1_framing_err_vect_isr in COMRAM

    None.

Critical Paths under _UART1_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _scmd_init->_cli_init
    _cli_init->_puts
    _ps_math->_sqrtf
    _sqrtf->___fladd
    ___xxtofl->___wmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace
    _init_display->_ringBufS_init
    _send_lcd_data->_wdtdelay
    _send_lcd_cmd_long->_wdtdelay
    _send_lcd_cmd->_wdtdelay
    _ringBufS_init->_memset
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_ringBufS_put_dma_cpy
    _ringBufS_put_dma_cpy->_memcpy
    _eaDogM_WriteCommand->_send_lcd_cmd_dma
    _send_lcd_cmd_dma->_send_lcd_data_dma
    _send_lcd_data_dma->_ringBufS_flush
    _ringBufS_flush->_memset
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    __cli_interpret_cmd->_fh_p0
    __cli_interpret_cmd->_fh_p1
    __cli_interpret_cmd->_fh_pd
    __cli_interpret_cmd->_fh_pl
    __cli_interpret_cmd->_fh_po
    __cli_interpret_cmd->_fh_pp
    __cli_interpret_cmd->_fh_pr
    __cli_interpret_cmd->_fh_ps
    __cli_interpret_cmd->_fh_pu
    _strncmp->_strlen
    _fh_pu->_puts
    _fh_ps->_puts
    _fh_pr->_puts
    _fh_pp->_puts
    _fh_po->_puts
    _fh_pl->_puts
    _fh_pd->_puts
    _fh_p1->_puts
    _fh_p0->_puts
    _puts->_fputs
    _fputs->_fputc
    _WaitMs->_StartTimer
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorInterruptHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetUartInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _DMA1_Initialize->_DMA1_SetSCNTIInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK0

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK0

    None.

Critical Paths under _UART1_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK1

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK1

    None.

Critical Paths under _UART1_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK2

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK2

    None.

Critical Paths under _UART1_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK3

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK3

    None.

Critical Paths under _UART1_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK4

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK4

    None.

Critical Paths under _UART1_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK5

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK5

    None.

Critical Paths under _UART1_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK6

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK6

    None.

Critical Paths under _UART1_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK7

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK7

    None.

Critical Paths under _UART1_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK8

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK8

    None.

Critical Paths under _UART1_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK9

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK9

    None.

Critical Paths under _UART1_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK10

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK10

    None.

Critical Paths under _UART1_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK11

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK11

    None.

Critical Paths under _UART1_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK12

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK12

    None.

Critical Paths under _UART1_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK13

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK13

    None.

Critical Paths under _UART1_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK14

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK14

    None.

Critical Paths under _UART1_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK15

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK15

    None.

Critical Paths under _UART1_vect_isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK16

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK16

    None.

Critical Paths under _UART1_vect_isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK17

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK17

    None.

Critical Paths under _UART1_vect_isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK18

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK18

    None.

Critical Paths under _UART1_vect_isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK19

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK19

    None.

Critical Paths under _UART1_vect_isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK20

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK20

    None.

Critical Paths under _UART1_vect_isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK21

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK21

    None.

Critical Paths under _UART1_vect_isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK22

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK22

    None.

Critical Paths under _UART1_vect_isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK23

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK23

    None.

Critical Paths under _UART1_vect_isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK24

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK24

    None.

Critical Paths under _UART1_vect_isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK25

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK25

    None.

Critical Paths under _UART1_vect_isr in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK26

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK26

    None.

Critical Paths under _UART1_vect_isr in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK27

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK27

    None.

Critical Paths under _UART1_vect_isr in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK28

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK28

    None.

Critical Paths under _UART1_vect_isr in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK29

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK29

    None.

Critical Paths under _UART1_vect_isr in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK30

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK30

    None.

Critical Paths under _UART1_vect_isr in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK31

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK31

    None.

Critical Paths under _UART1_vect_isr in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  256523
                                            148 BANK0      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
      _DMA1_SetSCNTIInterruptHandler
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                             _WaitMs
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _linux_getc
                             _printf
                            _ps_math
                               _puts
                          _scmd_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    15     16   58375
                                             22 BANK1     29    13     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0    8070
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4    8070
                                             21 BANK0      4     0      4
                             _memset
                               _puts
 ---------------------------------------------------------------------------------
 (1) _ps_math                                             13     8      5   30222
                                            104 BANK0     13     8      5
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                             ___wmul
                           ___xxtofl
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               49    45      4   11366
                                             59 BANK0     45    41      4
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 8     4      4     124
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1016
                                              4 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              38     4     34   56980
                                            146 BANK0      2     2      0
                                             22 BANK1     34     0     34
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   56773
                                            138 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    39      5   55895
                                            129 BANK0      9     4      5
                                              0 BANK1     22    22      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7967
                                             29 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             31 COMRAM     1     1      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3396
                                              9 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   34933
                                             67 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1105
                                              4 BANK0      6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             31 COMRAM     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             31 COMRAM     2     2      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    6555
                                             18 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             43 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             31 COMRAM     2     2      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4727
                                             59 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3982
                                             43 BANK0     16     8      8
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4556
                                             18 BANK0     25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1346
                                             43 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                             18 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    2094
                                              5 BANK0     10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             31 COMRAM     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             31 COMRAM     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     922
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    5505
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     1      0     835
                                             32 COMRAM     1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     835
                                             32 COMRAM     1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     1      0     835
                                             32 COMRAM     1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4     782
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    2218
                                             10 BANK0      2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              7     4      3   12108
                                             19 BANK0      7     4      3
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   3     1      2    4560
                                             16 BANK0      3     1      2
                     _ringBufS_flush
               _ringBufS_put_dma_cpy
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _ringBufS_put_dma_cpy                                 6     1      5     996
                                             31 COMRAM     1     1      0
                                             11 BANK0      5     0      5
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6     478
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0    3211
                                             15 BANK0      1     1      0
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     1      0    3180
                                             14 BANK0      1     1      0
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data_dma                                    1     1      0    3149
                                             13 BANK0      1     1      0
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_put_dma                                     4     1      3     506
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    2612
                                             10 BANK0      3     0      3
                             _memset
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      31
                                             31 COMRAM     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   65575
                                             35 BANK0      8     6      2
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2097
                                             31 COMRAM     2     2      0
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    6091
                                             21 BANK0      3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (1) _linux_getc                                           2     1      1     235
                                             32 COMRAM     1     0      1
                                              0 BANK0      1     1      0
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  12    10      2   56548
                                             23 BANK0     12    10      2
                   Absolute function *
                              _fh_p0 *
                              _fh_p1 *
                              _fh_pd *
                              _fh_pl *
                              _fh_po *
                              _fh_pp *
                              _fh_pr *
                              _fh_ps *
                              _fh_pu *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             12     6      6    1135
                                              2 BANK0     12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     670
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _fh_pu                                                2     0      2    5700
                                             21 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_ps                                                2     0      2    5700
                                             21 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pr                                                2     0      2    5731
                                             21 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pp                                                2     0      2    5700
                                             21 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_po                                                2     0      2    5700
                                             21 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pl                                                2     0      2    5700
                                             21 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pd                                                2     0      2    5700
                                             21 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_p1                                                2     0      2    7155
                                             21 BANK0      2     0      2
                   _DATAEE_WriteByte
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_p0                                                2     0      2    7090
                                             21 BANK0      2     0      2
                   _DATAEE_WriteByte
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    5700
                                             18 BANK0      3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                9     5      4    2578
                                              9 BANK0      9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1874
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3    1390
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WaitMs                                               2     0      2     394
                                              3 BANK0      2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      31
                                             31 COMRAM     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1714
                    _ADCC_Initialize
                    _DAC1_Initialize
                    _DMA1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
           _SystemArbiter_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     847
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
_UART1_SetFramingErrorInterruptHandl
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
      _UART1_SetUartInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetUartInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorInterruptHandler                3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             31 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SystemArbiter_Initialize                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0     211
      _DMA1_SetSCNTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DMA1_SetSCNTIInterruptHandler                        3     0      3     211
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _PWM5_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     197
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_tx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_rx_vect_isr                                   3     3      0       0
                                             28 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (11) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (15) _Adc_Isr                                             4     4      0       0
                                              4 COMRAM     4     4      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            2     2      0       0
                                             11 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Led_Blink                                           1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            2     2      0     319
                                             17 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (15) _Timers_Isr                                          4     4      0      90
                                             13 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     229
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNTI_ISR                                   2     2      0       0
                                             19 COMRAM     2     2      0
                   Absolute function *
       _DMA1_DefaultInterruptHandler *
                    _source_dma_done *
 ---------------------------------------------------------------------------------
 (15) _source_dma_done                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _DMA1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_framing_err_vect_isr                          2     2      0       0
                                             21 COMRAM     2     2      0
                   Absolute function *
             _UART1_FramingError_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_FramingError_ISR                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_vect_isr                                      2     2      0       0
                                             23 COMRAM     2     2      0
                   Absolute function *
            _UART1_UartInterrupt_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_UartInterrupt_ISR                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _DMA1_SetSCNTIInterruptHandler
   _PWM5_LoadDutyValue
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _DMA1_Initialize
       _DMA1_SetSCNTIInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _SPI1_Initialize
     _SystemArbiter_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetFramingErrorInterruptHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
       _UART1_SetUartInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   ___flmul
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_p0 *
         _DATAEE_WriteByte
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_p1 *
         _DATAEE_WriteByte
         _puts
       _fh_pd *
         _puts
       _fh_pl *
         _puts
       _fh_po *
         _puts
       _fh_pp *
         _puts
       _fh_pr *
         _puts
       _fh_ps *
         _puts
       _fh_pu *
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _ringBufS_flush
       _ringBufS_put_dma_cpy
         _memcpy
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
     _send_lcd_data_dma
     _wait_lcd_done
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_data
       _SPI1_ExchangeByte
       _wdtdelay
     _wdtdelay
   _linux_getc
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___flmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _ps_math
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
     ___wmul
     ___xxtofl
     _sqrtf
       ___fladd
       ___flge
       ___flmul
       _nanf
   _puts
   _scmd_init
     _cli_init
       _memset
       _puts
   _sprintf
     _vfprintf

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 _DMA1_DMASCNTI_ISR (ROOT)
   Absolute function(Fake) *
   _DMA1_DefaultInterruptHandler *
   _source_dma_done *

 _UART1_framing_err_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_FramingError_ISR *

 _UART1_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_UartInterrupt_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0    13C0     125       61.7%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllllll    181      0       0     123        0.0%
BITBIGSFRllhhhh    110      0       0      90        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      83      15       51.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C3      11       76.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EA       9       91.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     38      B1       7       69.1%
BITBIGSFRllhhhh     E8      0       0      94        0.0%
BITBIGSFRllhhhh     CB      0       0      86        0.0%
BITBIGSFRllhhhh     A1      0       0      83        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      9D       5       98.1%
BITBIGSFRllhhhh     5F      0       0      79        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      40       1       67.4%
BITBIGSFRllhhhl     49      0       0      96        0.0%
BITBIGSFRllhhhh     3F      0       0      81        0.0%
BITBIGSFRllhhhh     23      0       0      76        0.0%
BITBIGSFRllllll     1F      0       0     109        0.0%
BITBIGSFRhhhhhl     1D      0       0      69        0.0%
BITBIGSFRllllll     16      0       0     116        0.0%
BITBIGSFRllllll     15      0       0     105        0.0%
BITBIGSFRllllll     11      0       0     115        0.0%
BITBIGSFRllllll      F      0       0     106        0.0%
BITBIGSFRllhhhh      E      0       0      92        0.0%
BITBIGSFRllhhhh      C      0       0      75        0.0%
BITBIGSFRlllllh      B      0       0     104        0.0%
BITBIGSFRllhhl       B      0       0      97        0.0%
BITBIGSFRllhhhh      A      0       0      74        0.0%
BITBIGSFRllllll      8      0       0     111        0.0%
BITBIGSFRllhhhh      8      0       0      78        0.0%
BITBIGSFRhhhhhh      7      0       0      68        0.0%
BITBIGSFRllllll      7      0       0     121        0.0%
BITBIGSFRhhlh        6      0       0      71        0.0%
BITBIGSFRllllll      6      0       0     119        0.0%
BITBIGSFRllhhhh      5      0       0      93        0.0%
BITBIGSFRllhhhh      5      0       0      95        0.0%
BITBIGSFRllllhl      5      0       0     103        0.0%
BITBIGSFRlllhl       5      0       0     101        0.0%
BITBIGSFRllhll       5      0       0      99        0.0%
BITBIGSFRllllll      4      0       0     122        0.0%
BITBIGSFRllllll      4      0       0     120        0.0%
BITBIGSFRllhlh       4      0       0      98        0.0%
BITBIGSFRlllhh       4      0       0     100        0.0%
BITBIGSFRllllhh      4      0       0     102        0.0%
BITBIGSFRllllll      3      0       0     117        0.0%
BITBIGSFRllllll      3      0       0     110        0.0%
BITBIGSFRllllll      3      0       0     107        0.0%
BITBIGSFRllhhhh      2      0       0      91        0.0%
BITBIGSFRhhll        2      0       0      72        0.0%
BITBIGSFRhll         2      0       0      73        0.0%
BITBIGSFRllllll      1      0       0     112        0.0%
BITBIGSFRllllll      1      0       0     113        0.0%
BITBIGSFRllhhhh      1      0       0      85        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      77        0.0%
BITBIGSFRllhhhh      1      0       0      89        0.0%
BITBIGSFRllhhhh      1      0       0      87        0.0%
BITBIGSFRllhhhh      1      0       0      88        0.0%
BITBIGSFRhhhl        1      0       0      70        0.0%
BITBIGSFRllllll      1      0       0     118        0.0%
BITBIGSFRllhhhh      1      0       0      80        0.0%
BITBIGSFRllllll      1      0       0     114        0.0%
BITBIGSFRllhhhh      1      0       0      82        0.0%
BITBIGSFRllllll      1      0       0     108        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4BD     124        0.0%
DATA                 0      0    187D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 14 22:11:24 2022

                                    _SPI1_ExchangeByte 5490  
                                         ___fldiv@aexp 008A  
                                         ___fldiv@bexp 0089  
                                                    _a 0583  
                     __end_of_TMR5_SetInterruptHandler 5644  
                                         _stddeviation 0124  
                                         ___fldiv@sign 0082  
                                         ?_display_led 0001  
                                         ___awdiv@sign 0065  
                                   ?_SPI1_ExchangeByte 0001  
                                  ___wmul@multiplicand 0062  
                                        _build_version FDE4  
                                    ??_TMR5_WriteTimer 0010  
                                      _DAC1_Initialize 567C  
                                                  l209 548A  
                                                  l636 549E  
                                                  l991 4F6C  
                                                  _GIE 01FE97  
                                                  _pad 42D8  
                                                  _res 0034  
                                                  _sum 0130  
                        eaDogM_WriteStringAtPos@strPtr 0074  
                                         ___awmod@sign 0021  
                                  ??_SPI1_ExchangeByte 0020  
                                      _TMR2_Initialize 53FE  
                                                  prod 003FF3  
                                                  tosl 003FFD  
                                                  wreg 003FE8  
                                       _DAC1_SetOutput 5692  
                                         ___flmul@aexp 007F  
                                         ___flmul@bexp 0080  
                                      send_lcd_cmd@cmd 0021  
                         ?_ADCC_SetADIInterruptHandler 0060  
                                   _UART1_Transmit_ISR 519A  
                                         ___flmul@sign 007E  
                                         ___flmul@temp 0089  
                                         ___flmul@prod 0085  
                                     ?_source_dma_done 0001  
                               __end_of_DAC1_GetOutput 56B6  
                                         ___fltol@exp1 0021  
                                                 l1130 4DCC  
                                                 l1430 3F68  
                                                 l1440 3F74  
                                                 l1424 3F62  
                                                 l1360 173E  
                                                 l1450 3F80  
                                                 l1435 3F6E  
                                                 l1460 3F8C  
                                                 l2420 2AF2  
                                                 l1445 3F7A  
                                                 l1470 3F98  
                                                 l2262 3CDE  
                                                 l1455 3F86  
                                                 l1480 3FA4  
                                                 l2408 2A88  
                                                 l2272 4214  
                                                 l1465 3F92  
                                                 l2089 3BF6  
                                                 l2353 2474  
                                                 l2354 2452  
                                                 l1395 5202  
                                                 l1475 3F9E  
                                                 l2419 2AF6  
                                                 l1485 3FAA  
                                                 l2438 2062  
                                                 l1575 2D52  
                                                 l2455 22FE  
                                                 l2447 2278  
                                                 l1680 4B48  
                                                 l2448 2274  
                                                 l2624 066E  
                                                 l2369 2546  
                                                 l2378 25AC  
                                                 l2379 25A8  
                                                 l2660 33D6  
                                                 l1589 3278  
                                                 l2910 4FC2  
                                                 l2486 36C4  
                                                 l2559 4306  
                                                 l2479 3646  
                                                 l2681 2D7C  
                                                 l2596 030A  
                                                 ?_pad 0072  
                                                 l2679 2D74  
                                                 l2872 1A78  
                                                 l2777 387E  
                                                 l2865 196C  
                                                 l2874 1B4E  
                                                 l2789 301A  
                                                 l2869 19C0  
                                                 l7216 4E8C  
                                                 l9012 29E8  
                                                 l9004 29D0  
                                                 l9030 2A60  
                                                 l9022 2A38  
                                                 l9200 22BC  
                                                 l9104 200E  
                                                 l9042 2A9E  
                                                 l9122 204E  
                                                 l9106 2012  
                                                 l9300 4548  
                                                 l9036 2A86  
                                                 l9204 22DA  
                                                 l9132 2080  
                                                 l9124 2052  
                                                 l9108 2022  
                                                 l9304 4556  
                                                 l9072 2B5E  
                                                 l9048 2ABC  
                                                 l9320 43F4  
                                                 l9312 43A2  
                                                 l9216 231C  
                                                 l9250 443A  
                                                 l9242 441C  
                                                 l9082 2B94  
                                                 l9260 445A  
                                                 l9236 440C  
                                                 l9084 2B96  
                                                 l9076 2B88  
                                                 l9068 2B3A  
                                                 l9316 43D6  
                                                 l9332 3BCA  
                                                 l9180 223E  
                                                 l9500 2F80  
                                                 l9404 3C58  
                                                 l9342 3C2E  
                                                 l9174 2220  
                                                 l9350 5188  
                                                 l9510 303C  
                                                 l9406 3C6C  
                                                 l9248 4432  
                                                 l9264 4464  
                                                 l9280 4504  
                                                 l9336 3BE0  
                                                 l9328 3B96  
                                                 l9360 4036  
                                                 l9440 42F0  
                                                 l9416 3CC8  
                                                 l9432 41FE  
                                                 l9424 41A2  
                                                 l9290 4526  
                                                 l8714 235E  
                                                 l9514 3072  
                                                 l9450 4328  
                                                 l9426 41B6  
                                                 l9604 49C8  
                                                 l9612 49F2  
                                                 l9268 4472  
                                                 l9284 4510  
                                                 l9380 4090  
                                                 l9444 42FE  
                                                 l8670 4F8C  
                                                 l8910 45EE  
                                                 l9534 4D56  
                                                 l8750 23CA  
                                                 l8742 23AA  
                                                 l8718 2362  
                                                 l9470 3E50  
                                                 l9518 30A0  
                                                 l9454 4354  
                                                 l9446 4310  
                                                 l8672 4F8E  
                                                 l8656 4F58  
                                                 l9296 453E  
                                                 l9288 451E  
                                                 l8816 24BA  
                                                 l8808 2498  
                                                 l9376 4080  
                                                 l9712 0314  
                                                 l9624 0048  
                                                 l8682 40EA  
                                                 l8906 45D8  
                                                 l8818 24BE  
                                                 l8826 24D0  
                                                 l8738 23A6  
                                                 l9394 40C0  
                                                 l9386 4098  
                                                 l9466 3E46  
                                                 l9482 46AC  
                                                 l8940 35E0  
                                                 l8932 3572  
                                                 l8844 256A  
                                                 l8860 258A  
                                                 l8836 2536  
                                                 l8780 2406  
                                                 l9388 40A4  
                                                 l9476 3E90  
                                                 l9820 0736  
                                                 l9708 02F2  
                                                 l9636 0074  
                                                 l9644 008A  
                                                 l8694 4A0E  
                                                 l9574 30DC  
                                                 l8926 3506  
                                                 l8854 2580  
                                                 l9726 0362  
                                                 l9718 031A  
                                                 l9654 00E2  
                                                 l9662 012C  
                                                 l8688 417E  
                                                 l8696 4A12  
                                                 l9576 30EC  
                                                 l8880 25F2  
                                                 l8792 2460  
                                                 l9808 0708  
                                                 l9744 03A8  
                                                 l9728 0366  
                                                 l9672 0184  
                                                 l9680 019E  
                                                 l9656 00FA  
                                                 l8946 35FC  
                                                 l8938 35AE  
                                                 l8970 2946  
                                                 l8794 2464  
                                                 l9754 03E2  
                                                 l9762 04D6  
                                                 l9738 0384  
                                                 l9690 0218  
                                                 l9658 0104  
                                                 l8892 2620  
                                                 l9908 0978  
                                                 l9828 0756  
                                                 l9836 077A  
                                                 l9844 0810  
                                                 l9748 03B8  
                                                 l9692 0266  
                                                 l8990 2986  
                                                 l8966 2942  
                                                 l8894 2622  
                                                 l9686 01E0  
                                                 l9942 3404  
                                                 STR_1 FFB1  
                                                 l8888 2618  
                                                 l9872 089E  
                                                 l9856 0852  
                                                 l9776 0580  
                                                 l9696 02A0  
                                                 l9960 349C  
                                                 l9952 346A  
                                                 l9928 339A  
                                                 STR_2 FFBD  
                                                 STR_3 FF6B  
                                                 l8986 2982  
                                                 l9874 08A8  
                                                 l9794 0666  
                                                 l9946 3422  
                                                 l9938 33EC  
                                                 STR_4 FEC7  
                                                 STR_5 FF59  
                                                 l9884 08FC  
                                                 l9796 0688  
                                                 l9788 0644  
                                                 l9956 3484  
                                                 STR_6 FF30  
                                                 STR_7 FF8F  
                                                 l8998 29BA  
                                                 l9894 0928  
                                                 l9974 2DB4  
                                                 STR_8 FF46  
                                                 STR_9 FF7D  
                                                 l9984 2EA0  
                                                 _LATA 003FBA  
                                                 _LATB 003FBB  
                                                 _LATC 003FBC  
                                                 _LATD 003FBD  
                                                 _LATE 003FBE  
                                                 _LATF 003FBF  
                                                 _T2PR 003FAB  
                                                 _T6PR 003F93  
                                                 u6140 55C2  
                                                 _PMD0 0039C0  
                                                 _PMD1 0039C1  
                                                 _PMD2 0039C2  
                                                 _PMD3 0039C3  
                                                 _PMD4 0039C4  
                                                 _PMD5 0039C5  
                                                 _PMD6 0039C6  
                                                 _PMD7 0039C7  
                                                 u8040 2AEC  
                                                 u6425 4B20  
                                                 u6426 4B22  
                                                 u9020 3180  
                                                 u8220 226E  
                                                 u7500 2438  
                                                 u7350 40E2  
                                                 u9030 31B4  
                                                 u7510 243A  
                                                 u9110 0064  
                                                 u9040 31DE  
                                                 u8320 443E  
                                                 u8080 2B48  
                                                 u7370 412A  
                                                 u9050 320C  
                                                 u8090 2B6C  
                                                 u9035 31AE  
                                                 u9027 3172  
                                                 u7380 4A3C  
                                                 u8260 22CA  
                                                 u8180 206E  
                                                 u7540 247C  
                                                 u8500 4024  
                                                 u9220 0300  
                                                 u9037 31A0  
                                                 u8430 43F0  
                                                 u8270 22E8  
                                                 u8510 4054  
                                                 u9047 31D0  
                                                 u9057 31FE  
                                                 u7490 2428  
                                                 u7810 50A0  
                                                 u9250 0332  
                                                 u7387 4A2E  
                                                 u8515 404A  
                                                 u8380 452A  
                                                 u7820 50A2  
                                                 u8620 41BA  
                                                 u7750 25FE  
                                                 u7670 258E  
                                                 u8550 40AA  
                                                 u9190 02C8  
                                                 u9360 0570  
                                                 u7690 25A2  
                                                 u8730 3E88  
                                                 u9290 0380  
                                                 u8571 3C38  
                                                 u8740 3E8A  
                                                 u9540 0912  
                                                 u9620 3418  
                                                 u8725 3E6A  
                                                 u7790 4624  
                                                 u8910 4D52  
                                                 u8830 3000  
                                                 u8750 46F4  
                                                 u9630 344C  
                                                 u8590 3C70  
                                                 u9710 2ECC  
                                                 u8815 2F98  
                                                 u9711 2ECA  
                                                 u9800 55A2  
                                                 u8680 3E0C  
                                                 u8816 2F9E  
                                                 u9560 0970  
                                                 u9480 0834  
                                                 u9720 2EDA  
                                                 u8817 2FAC  
                                                 u8850 305A  
                                                 u9730 2EDE  
                                                 _PLLR 01CEE0  
                                                 u8835 2FF6  
                                                 u9571 3378  
                                                 u8780 2F4E  
                                                 u9660 34B0  
                                                 u9900 0C62  
                                                 u7797 4616  
                                                 u8685 3E02  
                                                 u8757 46E6  
                                                 u9637 343E  
                                                 u8790 2F6E  
                                                 u8935 4DDA  
                                                 u8855 3050  
                                                 u8936 4DDC  
                                                 u8880 50D2  
                                                 u9760 385C  
                                                 u9680 2D6A  
                                                 u8785 2F44  
                                                 u8970 3116  
                                                 u8890 50D4  
                                                 u8990 3146  
                                                 u9870 0B62  
                                                 u8977 3108  
                                                 u9970 0EE4  
                                                 u8997 3138  
                                                 _WPUA 003A41  
                                                 _WPUB 003A51  
                                                 _WPUC 003A61  
                                                 _WPUD 003A71  
                                                 _WPUE 003A81  
                                                 _WPUF 003A91  
                                     __end_of_ADCC_ISR 4CDA  
                                  ?_UART1_Transmit_ISR 0001  
                                                 _dbuf 0240  
                                                 _cmdm FDC8  
                                                 _atoi 3748  
                                                 _mean 0128  
                                                 _main 10C8  
                                                 _nanf 52D6  
                                                 _ival 0138  
                                                 _mode 0037  
                                      __end_of_Adc_Isr 3B62  
                                                 _prec 00F8  
                                                 _nout 015D  
                                                 pad@i 0079  
                                                 pad@p 0076  
                                                 _tiny FDC4  
                                                 fsr1h 003FE2  
                                                 fsr2h 003FDA  
                                                 indf1 003FE7  
                                                 indf2 003FDF  
                                                 fsr1l 003FE1  
                                                 pad@w 007B  
                                                 fsr2l 003FD9  
                                                 _stoa 336E  
                                                 _puts 4FCC  
                                                 _vval 013C  
                                                 _utoa 2D56  
                            ringBufS_put_dma_cpy@_this 006B  
                                        ___fpclassifyf 3DCE  
                                                 prodh 003FF4  
                                                 prodl 003FF3  
                                                 start 00AE  
                                      _timer5ReloadVal 0030  
                                      ___fldiv@new_exp 0083  
                                      _PWM5_Initialize 553C  
                            __end_of_SPI1_ExchangeByte 54AA  
                        ??_UART1_SetTxInterruptHandler 0020  
                                       _SPI1STATUSbits 003D17  
                                    _UART1_rx_vect_isr 4BC8  
                                         ___param_bank 000000  
                           __end_of_PWM5_LoadDutyValue 5076  
                                          ?_UART1_Read 0001  
                                   ?_UART1_rx_vect_isr 0001  
                                                ??_pad 0078  
                             __end_of_ringBufS_put_dma 48C0  
                                 ??_UART1_Transmit_ISR 001A  
                        __end_of_OSCILLATOR_Initialize 5490  
                                                l10000 375A  
                                                l10010 37B6  
                                                l10020 3828  
                                                l10012 37BC  
                                                l10004 375E  
                                                l10014 37EC  
                                                l10008 37AE  
                                                l10202 0BFC  
                                                l11010 173A  
                                                l10220 0D12  
                                                l10204 0C1C  
                                                l11004 172C  
                                                l10150 0A12  
                                                l11014 1748  
                                                l11030 1786  
                                                l10232 0DB4  
                                                l10208 0C28  
                                                l10242 0E42  
                                                l10170 0A2E  
                                                l10162 0A1E  
                                                l10154 0A16  
                                                l10146 0A02  
                                                l11018 174C  
                                                l10228 0D8A  
                                                l10148 0A04  
                                                l10172 0A78  
                                                l11044 17B0  
                                                l11028 1760  
                                                l10190 0B28  
                                                l10166 0A22  
                                                l10158 0A1A  
                                                l10430 18A4  
                                                l10512 523E  
                                                l10280 1070  
                                                l10256 0F0E  
                                                l10248 0E96  
                                                l10184 0AFC  
                                                l10424 185C  
                                                l10274 1030  
                                                l10266 0F80  
                                                l10186 0B1C  
                                                l10290 1090  
                                                l10610 3656  
                                                l10442 192A  
                                                l10540 2BE2  
                                                l10284 107A  
                                                l10620 3686  
                                                l10534 2BC2  
                                                l10630 36F6  
                                                l10622 36AC  
                                                l10446 1940  
                                                l10438 18D2  
                                                l10544 2CD6  
                                                l10800 4640  
                                                l10616 3674  
                                                l10464 1A92  
                                                l10712 2890  
                                                l10546 2CD8  
                                                l10802 4644  
                                                l10810 464E  
                                                l10618 367A  
                                                l10458 1A0C  
                                                l10706 278A  
                                                l10804 4648  
                                                l10812 467A  
                                                l10628 36EA  
                                                l10654 4712  
                                                l10646 3736  
                                                l10478 1B26  
                                                l10910 114E  
                                                l10656 473A  
                                                l10498 528A  
                                                l10586 45A2  
                                                l10852 325C  
                                                l10828 3FBC  
                                                l10932 127A  
                                                l10862 32E4  
                                                l10870 3342  
                                                l10694 2672  
                                                l10942 12C2  
                                                l10934 1288  
                                                l10848 3232  
                                                l10952 1312  
                                                l10936 1296  
                                                l10794 520C  
                                                l10970 1362  
                                                l10946 12E6  
                                                l10972 1368  
                                                l10964 1350  
                                                l10956 1338  
                                                l10948 12EC  
                                                l10798 463C  
                                                l10966 1356  
                                                l10958 133E  
                                                l10998 1716  
                                        ___fltol@sign1 0020  
                                                _ADACT 003EFE  
                                                _ADCAP 003EF5  
                                                ?_atoi 0065  
                                      __end_of___fladd 263E  
                                                ?_main 0001  
                                                _ADCLK 003EFF  
                                                ?_nanf 0060  
                                                _ADCNT 003EEB  
                                                _ADPCH 003EF1  
                                      __end_of___fldiv 2B9E  
                                                _ADREF 003EFD  
                                      __end_of___awdiv 447C  
                                      __end_of___flneg 519A  
                                                STR_10 FEAA  
                                                STR_11 FE8B  
                                                STR_12 FFA0  
                                                STR_20 FFF5  
                                                STR_13 FFC6  
                                                STR_21 FFF8  
                                                STR_14 FFC9  
                                                STR_30 FFCC  
                                                STR_22 FFEF  
                                                STR_31 FFD4  
                                                STR_15 FDF2  
                                                STR_23 FFF2  
                                                STR_40 FFE0  
                                                STR_16 FF01  
                                                STR_24 FFFB  
                                                STR_17 FF01  
                                                STR_25 FFE9  
                                                STR_34 FFD0  
                                                STR_18 FEE4  
                                                STR_26 FFEC  
                                                STR_43 FFDC  
                                                STR_35 FFD8  
                                                STR_19 FF19  
                                                STR_27 FFE3  
                                                STR_28 FFE6  
                                      __end_of___awmod 4560  
                                                STR_29 FF68  
                                                STR_45 FFDC  
                                                STR_38 FFE0  
                                                STR_48 FF6A  
                                                _ADRPT 003EEC  
                                      __end_of___flmul 2332  
                                      __end_of___flsub 4C56  
                                      __end_of___fltol 40D2  
                                                ?_stoa 0069  
                                                ?_puts 0072  
                                                u10020 186E  
                                                ?_utoa 007D  
                                                u10210 2D12  
                                                u10300 3700  
                                                u10055 18E6  
                                                u10208 2CC2  
                                                u10056 18EC  
                                                u10145 1B92  
                                                u10057 18FA  
                                                u10181 2BDC  
                                                u10530 1330  
                                                u10355 5068  
                                      __end_of___lodiv 3D00  
                                      ___awdiv@divisor 0062  
                                                u10365 50FE  
                                                u10390 2734  
                                                _U1P1H 003DED  
                                                _U1P2H 003DEF  
                             eaDogM_WriteStringAtPos@c 0073  
                                                _U1P3H 003DF1  
                                                _U1P1L 003DEC  
                                                _U1P2L 003DEE  
                                                _T2CON 003FAC  
                                                _U1P3L 003DF0  
                             eaDogM_WriteStringAtPos@r 0078  
                                                _T5CLK 003F9D  
                                      __end_of___lomod 4236  
                                                _T2HLT 003FAD  
                                                _T5CON 003F9A  
                                                _T6CON 003F94  
                                                _T6HLT 003F95  
                                                _T2TMR 003FAA  
                                                _U1UIR 003DF8  
                                                _T2RST 003FAF  
                                                _U1RXB 003DE8  
                                                _U1TXB 003DEA  
                               __end_of_DAC1_SetOutput 569C  
                                                _T6TMR 003F92  
                                                i2l481 5034  
                                                _T6RST 003F97  
                                                i2l576 52C8  
                                  ??_UART1_rx_vect_isr 001D  
                                      ___awdiv@counter 0064  
                                                _OSCEN 0039DD  
                                         vfpfcnvrt@fmt 00E3  
                                         vfpfcnvrt@llu 016C  
                                                _TMR5H 003F99  
                                                _TMR5L 003F98  
                                                _TRISA 003FC2  
                                                _TRISB 003FC3  
                                                _TRISC 003FC4  
                                                _TRISD 003FC5  
                                                _TRISE 003FC6  
                                                _TRISF 003FC7  
                                          _Default_ISR 56D0  
                                      _PWM6_Initialize 5524  
                             eaDogM_WriteString@strPtr 0070  
                            ?_TMR6_SetInterruptHandler 0060  
                                    _UART1_tx_vect_isr 4B80  
                                     __end_of_TMR5_ISR 4AA2  
                                         _DMA1CON0bits 003BFC  
                                     __end_of_TMR6_ISR 5042  
                                         _DMA1CON1bits 003BFD  
                                                _dac_v 00FA  
                                                _fh_p0 533C  
                                                _fh_p1 531A  
                                      _DATAEE_ReadByte 541C  
                                                _buff1 0400  
                                                _fh_pd 54F4  
                                                _fh_pl 54DC  
                                                _fh_po 557C  
                                                _fh_pp 556A  
                                                _fh_pr 53E0  
                                                _fh_ps 5458  
                                                _fh_pu 550C  
                                                _flags 002E  
                                         _DMA2CON0bits 003BDC  
                                         _DMA2CON1bits 003BDD  
                                                _errno 015B  
                                                _fputc 40D2  
                                                _fputs 45CE  
                         ??_UART1_framing_err_vect_isr 0016  
                                      __end_of_isdigit 50DA  
                                      ?_DAC1_GetOutput 0001  
                                   ?_UART1_tx_vect_isr 0001  
                                                atoi@n 006D  
                                                pad@fp 0072  
                                                atoi@s 0065  
                                                _width 002C  
                                                _putch 5688  
                                                main@i 00F7  
                                                _sqrtf 17B8  
                                                nanf@s 0060  
                                                nanf@u 0064  
                                      __end_of_isspace 4D5E  
                                      __end_of_isupper 50A8  
                                                pclath 003FFA  
                                                pclatu 003FFB  
                                      __end_of_ps_math 2916  
                                                tablat 003FF5  
                            ??_eaDogM_WriteStringAtPos 0076  
                                                plusw1 003FE3  
                                                plusw2 003FDB  
                                                stoa@i 0075  
                                                stoa@l 007D  
                                                stoa@p 007B  
                                                stoa@s 006B  
                                                stoa@w 0077  
                                                puts@s 0072  
                                                utoa@d 007F  
                                                utoa@i 009B  
                                                utoa@n 0093  
                                                utoa@p 008F  
                                                utoa@w 0091  
                                                status 003FD8  
                  __end_of_UART1_SetRxInterruptHandler 55F0  
                          _UART1_SetRxInterruptHandler 55E2  
                                      __end_of_sprintf 49B6  
                                       ?___fpclassifyf 0060  
                                      __end_of_tolower 4FCC  
                                      __end_of_strncmp 321E  
                                     ___lodiv@dividend 0060  
                                       _UART1_vect_isr 4F18  
             __end_of_UART1_DefaultFramingErrorHandler 56CC  
                   ??_UART1_DefaultFramingErrorHandler 001D  
                    ?_UART1_DefaultFramingErrorHandler 0001  
                     _UART1_DefaultFramingErrorHandler 56CA  
                                  ??_UART1_tx_vect_isr 001A  
                            __end_of_UART1_rx_vect_isr 4C10  
                           eaDogM_WriteStringAtPos@row 0079  
                       ??_TMR6_DefaultInterruptHandler 000B  
                                      _TMR5_Initialize 4AA2  
                                __end_of_ringBufS_init 53C2  
                                      __initialization 3888  
                                    send_lcd_data@data 0021  
                                         __end_of_cmdm FDE4  
                                         __end_of_atoi 3888  
                                         __end_of_main 17B8  
                                         __end_of_nanf 52F8  
                              __end_of_DAC1_Initialize 5688  
                                         __end_of_tiny FDC8  
                                         __end_of_stoa 34BA  
                                         __end_of_puts 5006  
                                         __end_of_utoa 2F08  
                          ??_UART1_DefaultErrorHandler 001D  
                              __end_of_TMR2_Initialize 541C  
                                __end_of_send_lcd_data 531A  
                                         ?_UART1_Write 0001  
                                               ??_atoi 0067  
                                               ??_main 00F4  
                                               ??_nanf 0020  
                             _TMR5_SetInterruptHandler 5636  
                                               ??_stoa 006D  
                                               ??_puts 0022  
                                               ??_utoa 0087  
                                        __activetblptr 000003  
                                      ?_DAC1_SetOutput 0001  
                            __end_of_UART1_tx_vect_isr 4BC8  
                                     ___lodiv@quotient 0070  
                                      _TMR6_Initialize 513C  
                                     _UART1_Initialize 398C  
                                               ?_fh_p0 0075  
                                               ?_fh_p1 0075  
                                               ?_fh_pd 0075  
                                               _ADACCH 003EE9  
                                               _ADACCL 003EE8  
                                               ?_fh_pl 0075  
                                               ?_fh_po 0075  
                                               ?_fh_pp 0075  
                                               ?_fh_pr 0075  
                                               ?_fh_ps 0075  
                                               _ADACCU 003EEA  
                                               ?_fh_pu 0075  
                                               _ADACQH 003EF4  
                                               _ADACQL 003EF3  
                                               _ADCON0 003EF8  
                                               _ADCON1 003EF9  
                                               _ADCON2 003EFA  
                                               _ADCON3 003EFB  
                                               _ADERRH 003EE3  
                                               _ADERRL 003EE2  
                              send_lcd_data_dma@strPtr 006D  
                                            ??_Adc_Isr 0005  
                                               ?_fputc 0060  
                                               _ADLTHH 003EDF  
                                               _ADLTHL 003EDE  
                                               ?_fputs 0069  
                                               _ADRESH 003EF0  
                                               _ADRESL 003EEF  
                                               _ADPREH 003EF7  
                                               _ADPREL 003EF6  
                                               _DMA1PR 0039F3  
                                               _ADSTAT 003EFC  
                                               _ADUTHH 003EE1  
                                     ___awdiv@dividend 0060  
                                               _ADUTHL 003EE0  
                                               _ANSELA 003A40  
                                               ?_putch 0001  
                                               _ANSELB 003A50  
                                               _ANSELC 003A60  
                                               _ANSELD 003A70  
                                               _ANSELE 003A80  
                                               _ANSELF 003A90  
                                       TimerDone@timer 0060  
                                               ?_sqrtf 009B  
                                               _RB1I2C 003A5A  
                                               _RB2I2C 003A5B  
                                               _RD0I2C 003A7A  
                                               _U1CON0 003DF2  
                                               _U1CON1 003DF3  
                                               _U1CON2 003DF4  
                                               _RD1I2C 003A7B  
                                               _RC3I2C 003A6A  
                                               _RC4I2C 003A6B  
                                               _U1BRGH 003DF6  
                                               _U1FIFO 003DF7  
                                               _U1BRGL 003DF5  
                                               _T5GATE 003F9C  
                                               _T5GCON 003F9B  
                                   __cli_interpret_cmd 2B9E  
                                               _RC3PPS 003A13  
                                               i1l1027 51C2  
                                               _RD2PPS 003A1A  
                                               _RC5PPS 003A15  
                                               _ODCONA 003A42  
                                               _ODCONB 003A52  
                                               _RC6PPS 003A16  
                                               _ODCONC 003A62  
                                               _ODCOND 003A72  
                                               _ODCONE 003A82  
                                               _ODCONF 003A92  
                                               _RF2PPS 003A2A  
                              __end_of_PWM5_Initialize 5554  
                                               i2l1279 3B54  
                                               i1l7234 539E  
                                               _INLVLA 003A44  
                                               _INLVLB 003A54  
                                               _INLVLC 003A64  
                                               i2l8020 3B08  
                                               _INLVLD 003A74  
                                               _INLVLE 003A84  
                                               i2l8022 3B0E  
                                               i2l8014 3AFC  
                                               _INLVLF 003A94  
                                               i2l8016 3B00  
                                               i2l8018 3B04  
                                               i2l8034 3B24  
                                               i1l7990 42D2  
                                               i2l8242 494E  
                                               i2l8238 491C  
                                               _TABLAT 003FF5  
                               __end_of_UART1_vect_isr 4F56  
                                        ?_init_display 0001  
                                               _OSCFRQ 0039DF  
                                        vfpfcnvrt@done 0176  
                                               _NVMDAT 0039E3  
                                               _PRLOCK 0039EF  
                                _UART1_SetErrorHandler 561A  
                                     __end_of___xxtofl 3748  
                           ??_ADCC_GetConversionResult 0003  
                             __end_of_send_lcd_cmd_dma 53E0  
                            ringBufS_flush@clearBuffer 006C  
                                  ?__cli_interpret_cmd 0077  
                      ??_DMA1_SetSCNTIInterruptHandler 0020  
                                     __end_of_cli_init 4C98  
                                     __end_of_cli_read 336E  
                              DAC1_SetOutput@inputData 0020  
                                               _WaitMs 51F2  
                                         _CCPTMRS1bits 003F5F  
                                         vfprintf@cfmt 00F0  
                                               ___flge 3B62  
                                               ___fleq 436E  
                                            ??___fladd 0093  
                                               ___wmul 51C8  
                                            ??___fldiv 007A  
                                            ??___awdiv 0020  
                                            ??___flneg 0020  
                                            ??___awmod 0020  
                                               _g_cmds 0290  
                                            ??___flmul 007A  
                                            ??___flsub 0022  
                                            ??___fltol 0064  
                                            ??___lodiv 0020  
                                       _ringBufS_flush 48C0  
                                            ??___lomod 0020  
                                               _efgtoa 0000  
                                 send_lcd_cmd_long@cmd 0021  
                                               _floorf 2F08  
                                               _memcpy 49B6  
                                               _memset 34BA  
                              __end_of_PWM6_Initialize 553C  
                                               clear_0 3916  
                                               clear_1 3928  
                                               clear_2 3936  
                                               clear_3 3948  
                                               clear_4 3954  
                                               clear_5 3960  
                                               clear_6 3974  
                                     ___awdiv@quotient 0066  
                                      ___awmod@divisor 0062  
                                           _Timers_Isr 4914  
                                               isa$std 000001  
                                      ___awmod@counter 0020  
                                               _printf 5242  
                                               pad@buf 0074  
                                   _eaDogM_WriteString 4560  
                              __end_of_DATAEE_ReadByte 543A  
                                               _strcpy 469C  
                                            ?_ADCC_ISR 0001  
                                               _strlen 4A04  
                                               _sumsqr 012C  
                                         __pdataBIGRAM 1543  
                                      _ADCC_Initialize 447C  
                                               fputc@c 0060  
                                       _PMD_Initialize 535E  
                                 ??__cli_interpret_cmd 0079  
                                               fputs@c 006F  
                                               fputs@i 0070  
                                               fputs@s 0069  
                                            ??_isdigit 0060  
                                      ___fpclassifyf@e 0068  
                                      ___fpclassifyf@u 006A  
                                      ___fpclassifyf@x 0060  
                             ??_UART1_FramingError_ISR 0016  
                                         __mediumconst FDBE  
                                            ??_isspace 0060  
                                               tblptrh 003FF7  
                                            ??_isupper 0060  
                                               tblptrl 003FF6  
                      ??_UART1_SetUartInterruptHandler 0020  
                                               tblptru 003FF8  
                                            ??_ps_math 00CD  
                                  ?_eaDogM_WriteString 0070  
                                     __end_of_wdtdelay 4B7E  
                                               stoa@cp 0079  
                                               stoa@fp 0069  
                                     __end_of_vfprintf 475E  
                                               utoa@fp 007D  
                                        wdtdelay@delay 0060  
                                           _StartTimer 510C  
                                               sqrtf@i 00A8  
                                               sqrtf@m 00BC  
                                               sqrtf@q 00B0  
        UART1_SetUartInterruptHandler@InterruptHandler 0060  
UART1_SetFramingErrorInterruptHandler@InterruptHandler 0060  
          UART1_SetTxInterruptHandler@InterruptHandler 0060  
          UART1_SetRxInterruptHandler@InterruptHandler 0060  
        DMA1_SetSCNTIInterruptHandler@InterruptHandler 0060  
             TMR5_SetInterruptHandler@InterruptHandler 0060  
             TMR6_SetInterruptHandler@InterruptHandler 0060  
          ADCC_SetADIInterruptHandler@InterruptHandler 0060  
                                               sqrtf@r 00C0  
                                               sqrtf@s 00A4  
                                               sqrtf@t 00B4  
                 __end_of_UART1_SetOverrunErrorHandler 55FE  
                         _UART1_SetOverrunErrorHandler 55F0  
                                               sqrtf@x 009B  
                                               sqrtf@z 00B8  
                            _UART1_DefaultErrorHandler 56B6  
                                            ??_sprintf 0022  
                                            ??_tolower 0066  
                                            ??_strncmp 0068  
                                       ??_init_display 0022  
                                           ___flge@ff1 008B  
                                           ___flge@ff2 008F  
                                      ??___fpclassifyf 0064  
                              __end_of_TMR5_Initialize 4AEC  
                                         ___xxtofl@arg 006E  
                                         ___xxtofl@exp 006D  
                                    _SYSTEM_Initialize 4E98  
                                         ___xxtofl@val 0064  
                                           ___fleq@ff1 0060  
                                           ___fleq@ff2 0064  
                                      ?_UART1_vect_isr 0001  
                                           __accesstop 0060  
                              __end_of__initialization 3986  
                                           ___flneg@f1 0060  
                                   ?_SYSTEM_Initialize 0001  
                                        ___rparam_used 000001  
                                           ___fltol@f1 0060  
                                      _TMR5_WriteTimer 52B2  
                                    __end_of_Led_Blink 5458  
                                 ??_eaDogM_WriteString 0022  
                                    ??_DMA1_Initialize 0020  
                               __end_of_ringBufS_flush 4914  
                                       __pcstackCOMRAM 0001  
                                         __pidataBANK0 56C6  
                                         __pidataBANK1 566E  
                                         __pidataBANK2 47BE  
                                  ??_SYSTEM_Initialize 0022  
                                     ?_DAC1_Initialize 0001  
                                        __end_of_fh_p0 535E  
                                        __end_of_fh_p1 533C  
                                        __end_of_fh_pd 550C  
                                        __end_of_fh_pl 54F4  
                                        __end_of_fh_po 558E  
                                        __end_of_fh_pp 557C  
                                        __end_of_fh_pr 53FE  
                                        __end_of_fh_ps 5474  
                                        __end_of_fh_pu 5524  
                                            ?_TMR5_ISR 0001  
                                            ?_TMR6_ISR 0001  
                                     _DATAEE_WriteByte 4D9E  
                                       ivt0x8_undefint 00AC  
                                        __end_of_fputc 4188  
                                        __end_of_fputs 4638  
                                    ??_SPI1_Initialize 0020  
                                        __end_of_putch 5692  
                                        __end_of_sqrtf 1BE2  
                                     ?_TMR2_Initialize 0001  
                              __end_of_TMR6_Initialize 516C  
                               __end_of_PMD_Initialize 5380  
                                SPI1_ExchangeByte@data 0020  
                                           ??_ADCC_ISR 0009  
                                __end_of_TMR6_CallBack 52B2  
                                   _spi1_configuration FDBF  
                                TMR6_ISR@CountCallBack 0032  
                          _DMA1_SCNTI_InterruptHandler 0149  
                            _UART1_FramingErrorHandler 0146  
                   __end_of_UART1_framing_err_vect_isr 4F16  
                           _UART1_framing_err_vect_isr 4ED8  
                                              ??_fh_p0 0022  
                                              ??_fh_p1 0022  
                                              ??_fh_pd 0022  
                                              ??_fh_pl 0022  
                                              ??_fh_po 0022  
                                              ??_fh_pp 0022  
                                              ??_fh_pr 0022  
                                              ??_fh_ps 0022  
                                              ??_fh_pu 0022  
                                              ??_fputc 0064  
                            __end_of_SYSTEM_Initialize 4ED6  
                                              ??_fputs 006D  
                                      linux_putc@a_len 0077  
                                              ??_putch 0021  
                                              ??_sqrtf 009F  
                                           __pbssBANK0 00F8  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           __pbssBANK4 0400  
                                           __pbssBANK5 0500  
                        ?_UART1_SetOverrunErrorHandler 0060  
                               ?_UART1_SetErrorHandler 0060  
                                     ?_PWM5_Initialize 0001  
                                   ringBufS_init@_this 006A  
                             _SystemArbiter_Initialize 5644  
                                    __end_of_TimerDone 5242  
                                              IVTBASEH 003FD6  
                                              IVTBASEL 003FD5  
                                              IVTBASEU 003FD7  
                                     linux_getc@a_data 0021  
                                              ?_WaitMs 0063  
                                       cli_init@a_cmds 0077  
                                      ?_ringBufS_flush 006A  
                                __end_of_wait_lcd_done 55AA  
                                              ?___flge 008B  
                                              ?___fleq 0060  
                                       main@lcd_update 00F6  
                                         ??_UART1_Read 0020  
                                              ?___wmul 0060  
                     __end_of_TMR6_SetInterruptHandler 5636  
                              __end_of_ADCC_Initialize 44F0  
                           __end_of_PWM6_LoadDutyValue 510C  
                                        ?_send_lcd_cmd 0001  
                                           ??_TMR5_ISR 0012  
                                           ??_TMR6_ISR 000C  
                                              ?_efgtoa 00A3  
                __end_of_DMA1_SetSCNTIInterruptHandler 5660  
                        _DMA1_SetSCNTIInterruptHandler 5652  
                                              _ADFLTRH 003EE7  
                                              ?_floorf 008B  
                                              _ADFLTRL 003EE6  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                              _DMA1DSA 003BF0  
                                              _DMA2DSA 003BD0  
                                              _DMA1DSZ 003BEE  
                                              _DMA2DSZ 003BCE  
                                              _ADPREVH 003EEE  
                                              _ADPREVL 003EED  
                                              _DMA1SSA 003BF9  
                                              _DMA2SSA 003BD9  
                                              _DMA1SSZ 003BF7  
                                     ?_PWM6_Initialize 0001  
                                              _DMA2SSZ 003BD7  
                                          ?_Timers_Isr 0001  
                                              _ADSTPTH 003EE5  
                                              _ADSTPTL 003EE4  
                                              ?_printf 0182  
                                      ?_PMD_Initialize 0001  
                                    ?_ringBufS_put_dma 0060  
                                    _UART1_Receive_ISR 4236  
                                              ?_strcpy 0060  
                                              ?_strlen 0020  
                                      StartTimer@count 0020  
                                     ?_DATAEE_ReadByte 0020  
                                              _U1ERRIE 003DFA  
                                              _U1ERRIR 003DF9  
                                      StartTimer@timer 0062  
                                              i1l10686 51BE  
                                     ??_DAC1_GetOutput 0020  
                                         ?_Default_ISR 0001  
                                   ??_ringBufS_put_dma 0020  
                                   ?_UART1_Receive_ISR 0001  
                                              _U1RXPPS 003AE5  
                                            ?___xxtofl 0064  
                                   _PWM5_LoadDutyValue 5042  
                                              _OSCCON1 0039D9  
                                              _OSCCON3 0039DB  
                                              _IVTLOCK 003FD4  
                                              _TBLPTRH 003FF7  
                                              _TBLPTRL 003FF6  
                                              _SPI1CLK 003D1C  
                                              _TBLPTRU 003FF8  
                                            ?_cli_init 0075  
                                            ?_cli_read 0083  
                                              _SPI1RXB 003D10  
                                              _NVMADRH 0039E1  
                                              _NVMADRL 0039E0  
                                              _SPI1TXB 003D11  
                                              _OSCTUNE 0039DE  
                                              _NVMCON2 0039E6  
                                              _PWM5DCH 003F6D  
                                              _PWM5DCL 003F6C  
                                              _PWM6DCH 003F69  
                                              _PWM6DCL 003F68  
                                              _PWM5CON 003F6E  
                                              _PWM6CON 003F6A  
                             ?_UART1_UartInterrupt_ISR 0001  
                                              _SLRCONA 003A43  
                                              _SLRCONB 003A53  
                                              _SLRCONC 003A63  
                                              _SLRCOND 003A73  
                                              _SLRCONE 003A83  
                                              _SLRCONF 003A93  
                                          ?_StartTimer 0020  
                           _UART1_UARTInterruptHandler 0155  
                                              _Adc_Isr 3A7A  
                                           _build_date 01AD  
                                  ??_UART1_Receive_ISR 001D  
                                           _build_time 01AB  
                                     ___lomod@dividend 0060  
                              __end_of_TMR5_WriteTimer 52D6  
                                  ?_PWM5_LoadDutyValue 0020  
                __end_of_UART1_SetUartInterruptHandler 55D4  
                        _UART1_SetUartInterruptHandler 55C6  
                                   __end_of_UART1_Read 4E98  
                                     ?_TMR5_Initialize 0001  
                                 DATAEE_WriteByte@bAdd 0060  
                                ringBufS_put_dma@_this 0060  
                            INTERRUPT_Initialize@state 0020  
                         __end_of_ringBufS_put_dma_cpy 486C  
                                              __Hparam 0000  
                                          _SrcVarName0 0162  
                                              __Lparam 0000  
                             __end_of_UART1_Initialize 3A7A  
                           ??_TMR5_SetInterruptHandler 0020  
                             __cli_interpret_cmd@a_ctx 0077  
                                       ??_send_lcd_cmd 0021  
                                              ___fladd 2332  
                                              ___fldiv 2916  
                                              ___awdiv 43F8  
                                              ___flneg 516C  
                                              ___awmod 44F0  
                                              ___flmul 1FE2  
                                              ___flsub 4C10  
                                              ___fltol 4018  
                                            ?_wdtdelay 0060  
                                              ___lodiv 3C32  
                                              ___lomod 4188  
                                              _a_index 0039  
                                     ??_DAC1_SetOutput 0020  
                            __end_of_UART1_Receive_ISR 42D8  
                                            ?_vfprintf 00EA  
                                 ??_PWM5_LoadDutyValue 0060  
                                 __end_of_init_display 3F5C  
                                              __pcinit 3888  
                                  _eaDogM_WriteCommand 558E  
                                     ?_TMR6_Initialize 0001  
                                              __ramtop 2000  
                                              _cli_ctx 0500  
                                              _i_index 0038  
                                              __ptext0 10C8  
                                              __ptext1 4966  
                                              __ptext2 54C4  
                                              __ptext3 4C56  
                                              __ptext4 263E  
                                              __ptext5 17B8  
                                              __ptext6 52D6  
                                              __ptext7 3606  
                                              __ptext8 5242  
                                              __ptext9 46FE  
                                _OSCILLATOR_Initialize 5474  
                                              _isdigit 50A8  
                                           ??___xxtofl 0068  
                                              _mode_sw 015F  
                                     ___awmod@dividend 0060  
                                          ps_math@chan 00CC  
                             ??_PIN_MANAGER_Initialize 0020  
                                              _isspace 4D1E  
                                          Timers_Isr@i 0010  
                                            _T5CONbits 003F9A  
                                              _isupper 5076  
                                              efgtoa@c 00A9  
                                              efgtoa@d 00C1  
                                              efgtoa@e 00D9  
                                              efgtoa@f 00A5  
                                              efgtoa@g 00D5  
                                              efgtoa@h 00CB  
                                              efgtoa@i 00D3  
                                              efgtoa@l 00CF  
                                              efgtoa@m 00BB  
                                              efgtoa@n 00DB  
                                              efgtoa@p 00C5  
                                              _ps_math 263E  
                                              efgtoa@t 00B5  
                                              efgtoa@u 00DD  
                                              efgtoa@w 00C7  
                                           ??_cli_init 0022  
                                           ??_cli_read 0085  
                                        ?_wait_lcd_set 0001  
                                              _ps_type 02C2  
                                              atoi@neg 006B  
                                           _linux_getc 5268  
                                              _sprintf 4966  
                                              _tolower 4F92  
                                           _linux_putc 55AA  
                                    __end_of_scmd_init 54DC  
                                              _strncmp 30B2  
                                 end_of_initialization 3986  
                                            _U1UIRbits 003DF8  
                                              floorf@e 0099  
                                              floorf@m 0095  
                                              floorf@u 009B  
                                              floorf@x 008B  
                                 ?_eaDogM_WriteCommand 0001  
                                              memcpy@d 0067  
                                              memcpy@n 0064  
                                              memcpy@s 0069  
                                              fputc@fp 0062  
                                              memset@c 0062  
                                              memset@k 0066  
                                              memset@n 0064  
                                            i1u1046_28 4BA0  
                                              memset@s 0068  
                                            i1u1046_29 4BB4  
                  __end_of_UART1_SetTxInterruptHandler 55E2  
                          _UART1_SetTxInterruptHandler 55D4  
                                              fputs@fp 006B  
                                       display_led@led 0060  
                       ??_UART1_SetOverrunErrorHandler 0020  
                                    ?_send_lcd_cmd_dma 0001  
                               _UART1_FramingError_ISR 569C  
                                    __end_of_vfpfcnvrt 10C8  
                                           efgtoa@mode 00CA  
                                   ??_send_lcd_cmd_dma 0022  
                                           efgtoa@sign 00C3  
                                            _SPI1TCNTL 003D12  
                                              postdec1 003FE5  
                                              postdec2 003FDD  
                                              postinc0 003FEE  
                                              postinc1 003FE6  
                                              postinc2 003FDE  
                                           ??_wdtdelay 0020  
                                     ?_ADCC_Initialize 0001  
                                    __end_of_start_lcd 56B0  
                                           ??_vfprintf 0022  
                                              sqrtf@ix 00C4  
                                       wdtdelay@dcount 0120  
                                    UART1_Write@txData 0020  
                                  _UART1_RxDataHandler 5380  
                                              strcpy@d 0066  
                                              strlen@a 0060  
                                              strcpy@s 0064  
                                              strlen@s 0020  
                                            _PORTAbits 003FCA  
                                            _PORTBbits 003FCB  
                             _TMR6_SetInterruptHandler 5628  
                      __end_of_UART1_UartInterrupt_ISR 56C2  
                       ?_DMA1_SetSCNTIInterruptHandler 0060  
                                _TMR5_InterruptHandler 014C  
                                          ___fladd@grs 009A  
                                WaitMs@numMilliseconds 0063  
                  __end_of_ADCC_SetADIInterruptHandler 566E  
                          _ADCC_SetADIInterruptHandler 5660  
                                        ___xxtofl@sign 006C  
                                       ??_wait_lcd_set 0020  
                                            _TRISCbits 003FC4  
                                     ??_UART1_vect_isr 0018  
                             ?_eaDogM_WriteStringAtPos 0073  
                                          ___fldiv@grs 0085  
                                          ___fldiv@rem 007E  
                             __end_of_DATAEE_WriteByte 4DDE  
                                      _DMA1_Initialize 475E  
                                 ?_UART1_RxDataHandler 0001  
                                     ?_TMR5_WriteTimer 000E  
                                ??_eaDogM_WriteCommand 0022  
                              TMR5_WriteTimer@timerVal 000E  
                                          ___flmul@grs 0081  
                       ??_DMA1_DefaultInterruptHandler 0014  
                        ??_ADCC_SetADIInterruptHandler 0020  
                   _UART1_FramingErrorInterruptHandler 0158  
                                      _SPI1_Initialize 54AA  
                       ?_UART1_SetUartInterruptHandler 0060  
                                    ??_source_dma_done 0014  
                                       __end_of_WaitMs 521A  
                         __end_of_INTERRUPT_Initialize 4B36  
                                            _Led_Blink 543A  
                                        ??_display_led 0020  
                       ??_ADCC_DefaultInterruptHandler 0001  
                                       __end_of___flge 3C32  
                                       __end_of___fleq 43F8  
                                __end_of_build_version FDF2  
                                        __pidataBIGRAM 1BE2  
                                          vfpfcnvrt@ap 00E4  
                                          vfpfcnvrt@cp 0174  
                                          vfpfcnvrt@ct 017E  
                                          vfpfcnvrt@fp 00E1  
                                       __end_of___wmul 51F2  
                                       __end_of_efgtoa 09B8  
                                       __end_of_floorf 30B2  
                                       __end_of_memcpy 4A04  
                               ?_OSCILLATOR_Initialize 0001  
                                           floorf@F526 0118  
                                       __end_of_memset 3606  
                            ?_ADCC_GetConversionResult 0001  
                                       __end_of_printf 5268  
                                       __end_of_strcpy 46FE  
                                       __end_of_strlen 4A52  
                                  start_initialization 3888  
                                      ___lodiv@divisor 0068  
                           ??_SystemArbiter_Initialize 0020  
                                      ___lodiv@counter 0078  
                                 _ringBufS_put_dma_cpy 4818  
                 __end_of_TMR5_DefaultInterruptHandler 56D4  
                         _TMR5_DefaultInterruptHandler 56D2  
                                          __end_of_pad 436E  
                              ??_UART1_SetErrorHandler 0020  
                          ?_UART1_framing_err_vect_isr 0001  
                                          ?_linux_getc 0021  
                                          ?_linux_putc 0075  
                                 __end_of_send_lcd_cmd 4E5A  
                                ??_UART1_RxDataHandler 001D  
                                          putch@txData 0021  
                                           ivt0x8_base 0008  
                                        _uart1RxBuffer 0300  
                                __end_of___fpclassifyf 3E9A  
                                     ??_ringBufS_flush 0022  
                                        _uart1TxBuffer 0340  
                                  DATAEE_ReadByte@bAdd 0020  
                                             ??_WaitMs 0022  
                                          vfprintf@fmt 00EC  
                                             ??___flge 0093  
                                             ??___fleq 0068  
                                     ??_PMD_Initialize 0020  
                                            _TimerDone 521A  
                                        _ringBufS_init 53A2  
                                             ??___wmul 0020  
                                           ?_Led_Blink 0001  
                                             ??_efgtoa 00AA  
                                          __pdataBANK0 00FB  
                                          __pdataBANK1 01A4  
                                          __pdataBANK2 0290  
                                             ??_floorf 008F  
                                             ??_memcpy 0020  
                                             ??_memset 0020  
                                         ??_Timers_Isr 000E  
                                           memset@dest 0060  
                              ringBufS_put_dma_cpy@len 006F  
                              ringBufS_put_dma_cpy@ptr 006D  
                                             ??_printf 0022  
                                        _send_lcd_data 52F8  
                                             ??_strcpy 0020  
                                             ??_strlen 0022  
                      __end_of_eaDogM_WriteStringAtPos 469C  
                                            ___fladd@a 008F  
                                            ___fladd@b 008B  
                                            ___fldiv@a 0076  
                                            ___fldiv@b 0072  
                                          __pbssBIGRAM 0583  
                                  __end_of_display_led 4018  
                          PWM5_LoadDutyValue@dutyValue 0020  
                              __end_of_DMA1_Initialize 47BE  
                                            ___flmul@a 0076  
                                            ___flmul@b 0072  
                                          __pbssCOMRAM 0022  
                                            ___flsub@a 009F  
                                            ___flsub@b 009B  
                                ?_ringBufS_put_dma_cpy 006B  
                                   _UART1_ErrorHandler 0140  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 016C  
                                   _PWM6_LoadDutyValue 50DA  
                                  ringBufS_flush@_this 006A  
                                eaDogM_WriteString@len 0072  
                                         ??_StartTimer 0060  
                              __end_of_SPI1_Initialize 54C4  
                             _UART1_RxInterruptHandler 0029  
                        ?_TMR5_DefaultInterruptHandler 0001  
                                             ?_Adc_Isr 0001  
                                  ?_PWM6_LoadDutyValue 0020  
                                         _init_display 3E9A  
                                       linux_putc@data 0075  
                         ?_UART1_SetRxInterruptHandler 0060  
                                   __end_of_Timers_Isr 4966  
                                _TMR6_InterruptHandler 014F  
                                          _efgtoa$4197 00B1  
                                          _efgtoa$4189 00AF  
                                          _efgtoa$4198 00B3  
                               _PIN_MANAGER_Initialize 3D00  
                                        cli_init@a_ctx 0075  
                                       ?_ringBufS_init 006A  
                                    ?_UART1_Initialize 0001  
                                 __end_of_wait_lcd_set 56AA  
                 __end_of_UART1_SetFramingErrorHandler 561A  
                         _UART1_SetFramingErrorHandler 560C  
                                           ?_TimerDone 0001  
                                        __pmediumconst FDBE  
                                        cli_read@a_ctx 0083  
                                             ?___fladd 008B  
                                  UART1_Read@readValue 0020  
                                             ?___fldiv 0072  
                                             ?___awdiv 0060  
                                            __ptext100 553C  
                                            __ptext101 535E  
                                            __ptext110 50DA  
                                            __ptext102 3D00  
                                             ?___flneg 0060  
                                            __ptext111 5042  
                                            __ptext103 5474  
                                            __ptext120 56CA  
                                            __ptext112 541C  
                                            __ptext104 4AEC  
                                            __ptext121 56B6  
                                            __ptext113 5692  
                                            __ptext105 475E  
                                            __ptext130 56CE  
                                            __ptext122 5380  
                                            __ptext114 56B0  
                                            __ptext106 5652  
                                            __ptext131 56D0  
                                            __ptext123 4C98  
                                            __ptext115 4B80  
                                            __ptext107 567C  
                                            __ptext140 569C  
                                            __ptext132 4A54  
                                            __ptext124 56CC  
                                            __ptext116 519A  
                                            __ptext108 447C  
                                            __ptext141 4F18  
                                            __ptext133 56D2  
                                            __ptext125 3A7A  
                                            __ptext117 4BC8  
                                            __ptext109 5660  
                                            __ptext142 56BC  
                                            __ptext134 4914  
                                            __ptext126 5554  
                                            __ptext118 4236  
                                            __ptext143 0000  
                                            __ptext135 52B2  
                                            __ptext127 5008  
                                            __ptext119 56C8  
                                            __ptext136 4CDC  
                                            __ptext128 528E  
                                            __ptext137 56D4  
                                            __ptext129 543A  
                                            __ptext138 56C2  
                                            __ptext139 4ED8  
                                             ?___awmod 0060  
                                             ?___flmul 0072  
                                             ?___flsub 009B  
                                             ?___fltol 0060  
                                             ?___lodiv 0060  
                                             ?___lomod 0060  
                                            _deviation 0134  
                                   ??_UART1_Initialize 0020  
                                   __end_of_StartTimer 513C  
                                     _uart1RxLastError 003A  
                                        ??_UART1_Write 0020  
                                        _cli_read$3097 0088  
                                 ??_PWM6_LoadDutyValue 0060  
                                             _DAC1CON0 003E9E  
                                             _DAC1CON1 003E9C  
                                       ?_send_lcd_data 0001  
                                            _disp_tick 0161  
                                             _ADCC_ISR 4C98  
                                      ___lomod@divisor 0068  
                                      ___lomod@counter 0020  
             __end_of_UART1_DefaultOverrunErrorHandler 56CA  
                   ??_UART1_DefaultOverrunErrorHandler 001D  
                    ?_UART1_DefaultOverrunErrorHandler 0001  
                     _UART1_DefaultOverrunErrorHandler 56C8  
                                             ?_isdigit 0020  
                                             _DMA1CON0 003BFC  
                                             _DMA1CON1 003BFD  
                                             _DMA1AIRQ 003BFE  
                                             _DMA1DPTR 003BEC  
                                             _DMA1SIRQ 003BFF  
                                             _DMA1SPTR 003BF4  
                                             ?_isspace 0020  
                                             ?_isupper 0020  
                                             ?_ps_math 00C8  
                                             ?_sprintf 0182  
                                             ?_tolower 0064  
                                             _T2CLKCON 003FAE  
                                    _DMA1_DMASCNTI_ISR 4CDC  
                                             ?_strncmp 0062  
                                          _U1ERRIRbits 003DF9  
                                    ringBufS_put_dma@c 0062  
                                 _INTERRUPT_Initialize 4AEC  
                                             _T6CLKCON 003F96  
                                 __cli_interpret_cmd@i 0082  
                                   ?_DMA1_DMASCNTI_ISR 0001  
                              ?_UART1_FramingError_ISR 0001  
                                       ___wmul@product 0020  
                                             _LATAbits 003FBA  
                UART1_SetErrorHandler@interruptHandler 0060  
                                             _LATCbits 003FBC  
                                             _LATDbits 003FBD  
                                             _LATEbits 003FBE  
                                            _scmd_init 54C4  
                                             _LATFbits 003FBF  
                                             _IPR1bits 003981  
                                             _IPR2bits 003982  
                                             _IPR3bits 003983  
                                             _PIE1bits 003991  
                                             _PIE2bits 003992  
                                             _PIE3bits 003993  
                                            _tickCount 010C  
                                             _IPR8bits 003988  
                                             _IPR9bits 003989  
                                             _PIE8bits 003998  
                                             _PIE9bits 003999  
                                         _SPI1CON0bits 003D14  
                                             _IVTBASEH 003FD6  
                                             _IVTBASEL 003FD5  
                                             _IVTBASEU 003FD7  
                                            cli_read@i 008A  
                        ??_UART1_SetRxInterruptHandler 0020  
                                             i1u712_28 4BE8  
                                             i1u712_29 4BFC  
                                            _ring_buf1 0380  
                                             _PIR0bits 0039A0  
                                             _PIR1bits 0039A1  
                                             _PIR2bits 0039A2  
                                             i1u691_28 42BC  
                                             _SPI1BAUD 003D19  
                                  ??_DMA1_DMASCNTI_ISR 0014  
                                             i2u701_40 4964  
                                             _PIR4bits 0039A4  
                                             i1u687_28 4260  
                                             _SPI1CON0 003D14  
                                             i1u687_29 4276  
                                             _SPI1CON1 003D15  
                                             _SPI1CON2 003D16  
                                             i2u704_40 5028  
                                             i2u703_48 4CB8  
                                             i2u703_49 4CCC  
                                            _puts$4380 0074  
                                             i1u689_28 4290  
                                             i1u689_29 42A6  
                                             i2u714_48 4EF4  
                                             i2u706_48 4A80  
                                             i2u714_49 4F08  
                                             i2u706_49 4A94  
                                             i2u644_40 5442  
                                             i2u644_46 5444  
                                             i2u716_48 4F34  
                                             i2u708_48 4CFC  
                                             i2u716_49 4F48  
                                             i2u708_49 4D10  
                                             _PIR8bits 0039A8  
                               send_lcd_cmd_dma@strPtr 006E  
                                             i2u680_48 529E  
                                             _PIR9bits 0039A9  
                           ??_TMR6_SetInterruptHandler 0020  
                                          ??_Led_Blink 000B  
                           __end_of_UART1_Transmit_ISR 51C8  
                                             _TMR5_ISR 4A54  
                                             _TMR6_ISR 5008  
                        ?_UART1_SetFramingErrorHandler 0060  
                                          _display_led 3F5C  
                                            _port_data 1543  
                                            _vfpfcnvrt 09B8  
                                         _SPI1INTFbits 003D1A  
                                    ___wmul@multiplier 0060  
                                            _static_ps 01AF  
                                            _start_lcd 56AA  
                               ??_ringBufS_put_dma_cpy 0020  
                                        _TMR6_CallBack 528E  
                     __end_of_SystemArbiter_Initialize 5652  
                                     ?_DMA1_Initialize 0001  
                                          fh_p0@a_data 0075  
                                          fh_p1@a_data 0075  
                            ?_TMR5_SetInterruptHandler 0060  
                                  __end_of_UART1_Write 4F92  
                            __end_of_DMA1_DMASCNTI_ISR 4D1E  
                                DATAEE_WriteByte@bData 0062  
                                         _isspace$4301 0064  
                                           vfpfcnvrt@c 0181  
                                           vfpfcnvrt@f 017A  
                                     ?_SPI1_Initialize 0001  
                                          _INTCON0bits 003FD2  
                                            copy_data0 389C  
                                            copy_data1 38C2  
                                            copy_data2 38E4  
                                ?_INTERRUPT_Initialize 0001  
                                    ??_DAC1_Initialize 0020  
                       __end_of_UART1_FramingError_ISR 56A4  
                                    ?_DATAEE_WriteByte 0060  
                               _uart1TxBufferRemaining 003E  
                                      _source_dma_done 56C2  
                                    ??_TMR2_Initialize 0020  
                       ??_TMR5_DefaultInterruptHandler 000E  
                                   ??_DATAEE_WriteByte 0020  
                                           ?_scmd_init 0001  
                                         _uart1RxCount 003B  
                                      ??_ringBufS_init 0022  
                                             __Hrparam 0000  
                     __end_of_ADCC_GetConversionResult 556A  
                                            memcpy@tmp 0066  
                                           vfprintf@ap 00EE  
                                             __Lrparam 0000  
                                           vfprintf@fp 00EA  
                                    Adc_Isr@c_adc_chan 0035  
                                          ??_TimerDone 0020  
                                        _wait_lcd_done 559C  
                                      ??_send_lcd_data 0021  
                              ??_OSCILLATOR_Initialize 0020  
                                         _send_lcd_cmd 4E1C  
                                           ?_vfpfcnvrt 00E1  
                                    ??_PWM5_Initialize 0020  
                                             _adc_tick 0160  
                                       ?_TMR6_CallBack 0001  
                                           ?_start_lcd 0001  
                                   ___fpclassifyf@F465 011C  
                                           sprintf@fmt 0184  
                                             ___xxtofl 3606  
                          __end_of_eaDogM_WriteCommand 559C  
                                             __pivt0x8 0008  
                                             _cli_init 4C56  
                                             _cli_read 321E  
                                             __ptext10 09B8  
                                             __ptext11 2D56  
                                             __ptext20 2F08  
                                             __ptext12 4188  
                                             __ptext21 3DCE  
                                             __ptext13 3C32  
                                             __ptext30 44F0  
                                             __ptext22 4018  
                                             __ptext14 336E  
                                             __ptext31 43F8  
                                             __ptext23 4C10  
                                             __ptext15 0000  
                                             __ptext40 4B36  
                                             __ptext32 3748  
                                             __ptext24 2332  
                                             __ptext16 4F92  
                                             __ptext41 5490  
                                             __ptext33 4D1E  
                                             __ptext25 516C  
                                             __ptext17 5076  
                                             __ptext50 4D5E  
                                             __ptext42 53A2  
                                             __ptext34 50A8  
                                             __ptext26 1FE2  
                                             __ptext18 469C  
                                             __ptext51 56A4  
                                             __ptext43 4638  
                                             __ptext35 51C8  
                                             __ptext27 3B62  
                                             __ptext19 42D8  
                                             __ptext60 55B8  
                                             __ptext52 56AA  
                                             __ptext44 4560  
                                             __ptext36 3E9A  
                                             __ptext28 436E  
                                             __ptext61 4E5A  
                                             __ptext53 486C  
                                             __ptext45 4818  
                                             __ptext37 52F8  
                                             __ptext29 2916  
                                             __ptext70 557C  
                                             __ptext62 2B9E  
                                             __ptext54 48C0  
                                             __ptext46 49B6  
                                             __ptext38 4DDE  
                                             __ptext71 5458  
                                             __ptext63 30B2  
                                             __ptext55 3F5C  
                                             __ptext47 558E  
                                             __ptext39 4E1C  
                                             __ptext80 51F2  
                                             __ptext72 53E0  
                                             __ptext64 4A04  
                                             __ptext56 321E  
                                             __ptext48 53C2  
                                             __ptext81 521A  
                                             __ptext73 550C  
                                             __ptext65 531A  
                                             __ptext57 34BA  
                                             __ptext49 559C  
                                             __ptext90 560C  
                                             __ptext82 510C  
                                             __ptext74 4FCC  
                                             __ptext66 533C  
                                             __ptext58 55AA  
                                             __ptext91 561A  
                                             __ptext83 4E98  
                                             __ptext75 45CE  
                                             __ptext67 54DC  
                                             __ptext59 5268  
                                             __ptext92 513C  
                                             __ptext84 398C  
                                             __ptext76 40D2  
                                             __ptext68 54F4  
                                             __ptext93 5628  
                                             __ptext85 55C6  
                                             __ptext77 5688  
                                             __ptext69 556A  
                                             __ptext94 4AA2  
                                             __ptext86 55D4  
                                             __ptext78 4F56  
                                             __ptext95 5636  
                                             __ptext87 55E2  
                                             __ptext79 4D9E  
                                             __ptext96 53FE  
                                             __ptext88 55F0  
                                             __ptext97 5644  
                                             __ptext89 55FE  
                                             __ptext98 54AA  
                                             __ptext99 5524  
                                         ??_linux_getc 0060  
                                         ??_linux_putc 0022  
                        __end_of_UART1_SetErrorHandler 5628  
                          DATAEE_WriteByte@GIEBitValue 0020  
                                           strcpy@dest 0060  
                                     _ringBufS_put_dma 486C  
                               __cli_interpret_cmd@ret 0081  
                                    ??_PWM6_Initialize 0020  
                              _UART1_UartInterrupt_ISR 56BC  
                                    ??_DATAEE_ReadByte 0022  
                                          _IVTLOCKbits 003FD4  
                                         ps_math@scale 00C8  
                                             efgtoa@fp 00A3  
                                             efgtoa@ne 00B9  
                                             efgtoa@pp 00B7  
                                             efgtoa@ou 00BD  
                            _UART1_OverrunErrorHandler 0143  
                            _ADCC_ADI_InterruptHandler 0152  
                                            stoa@F1164 01A4  
         UART1_SetOverrunErrorHandler@interruptHandler 0060  
                                             _variance 0022  
                                       ?_wait_lcd_done 0001  
                                             isa$xinst 000000  
                                             _spi_link 0100  
                                             _roll_max 01B0  
                           ?_UART1_DefaultErrorHandler 0001  
                                          fh_pd@a_data 0075  
                                             _wdtdelay 4B36  
                                             _vfprintf 46FE  
                                            printf@fmt 0182  
                                   __end_of_linux_getc 528E  
                                    _UART1_is_rx_ready 55B8  
                                   __end_of_linux_putc 55B8  
                                          _UART1_Write 4F56  
                           __end_of__cli_interpret_cmd 2D56  
                 __end_of_DMA1_DefaultInterruptHandler 56D6  
                         _DMA1_DefaultInterruptHandler 56D4  
                                    ??_TMR5_Initialize 0020  
                                   ?_UART1_is_rx_ready 0001  
                                        ??_Default_ISR 000E  
                                          fh_pl@a_data 0075  
                       ??_UART1_SetFramingErrorHandler 0020  
                                       _vfpfcnvrt$4236 0178  
                          __end_of_UART1_RxDataHandler 53A2  
                                        _ps_type_index 0036  
                                          _uart1RxHead 003D  
                                          _uart1TxHead 0040  
                                          _uart1RxTail 003C  
                                          _NVMCON1bits 0039E5  
                                          fh_po@a_data 0075  
                                          _uart1TxTail 003F  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                          fh_pp@a_data 0075  
                              __end_of_source_dma_done 56C6  
                                             isdigit@c 0020  
                               ??_INTERRUPT_Initialize 0020  
                                          fh_pr@a_data 0075  
                                         _wait_lcd_set 56A4  
                                  ??_UART1_is_rx_ready 0020  
                                          fh_ps@a_data 0075  
                 __end_of_TMR6_DefaultInterruptHandler 56D0  
                         _TMR6_DefaultInterruptHandler 56CE  
                                          fh_pu@a_data 0075  
                                    _send_lcd_data_dma 4D5E  
                 __end_of_ADCC_DefaultInterruptHandler 56CE  
                         _ADCC_DefaultInterruptHandler 56CC  
                                             intlevel1 0000  
                                             intlevel2 0000  
                                            sprintf@ap 0192  
                                    _send_lcd_cmd_long 4DDE  
                                   ?_send_lcd_data_dma 0001  
                                             isspace@c 0020  
                              ?_PIN_MANAGER_Initialize 0001  
                                    ??_TMR6_Initialize 0020  
                                          ??_scmd_init 0022  
                                   ?_send_lcd_cmd_long 0001  
                                            strcpy@src 0062  
                           __end_of_eaDogM_WriteString 45CE  
                                             isupper@c 0020  
                                            strncmp@_l 0062  
                                            strncmp@_r 0064  
                                             ps_math@i 00D3  
                                             ps_math@n 00D1  
                            ?_SystemArbiter_Initialize 0001  
                                  _uart1RxStatusBuffer 0200  
                                  ??_send_lcd_data_dma 0022  
                                          efgtoa@nmode 00C9  
                                           _SPI1SDIPPS 003ADF  
                                           _SPI1SCKPPS 003ADE  
                                  ??_send_lcd_cmd_long 0021  
                                             printf@ap 00F2  
                            __end_of_UART1_is_rx_ready 55C6  
                               eaDogM_WriteCommand@cmd 006F  
                                           _UART1_Read 4E5A  
         UART1_SetFramingErrorHandler@interruptHandler 0060  
                             _ADCC_GetConversionResult 5554  
                    __end_of_UART1_DefaultErrorHandler 56BC  
                                          ??_vfpfcnvrt 00E6  
                                             stoa@nuls 006E  
                                      ??_TMR6_CallBack 000C  
                                          ??_start_lcd 0020  
                                             sprintf@f 0194  
                                             tolower@c 0064  
                                             sprintf@s 0182  
                                     _send_lcd_cmd_dma 53C2  
                                           _PRLOCKbits 0039EF  
                        ?_DMA1_DefaultInterruptHandler 0001  
                                             strncmp@l 006A  
                                             strncmp@n 0066  
                                             strncmp@r 006C  
                          PWM6_LoadDutyValue@dutyValue 0020  
                            __end_of_send_lcd_data_dma 4D9E  
                             _UART1_TxInterruptHandler 0026  
                            __end_of_send_lcd_cmd_long 4E1C  
                                          _ps_type_ptr 00FB  
                                        ___fladd@signs 0097  
                                  __end_of_Default_ISR 56D2  
                       __end_of_PIN_MANAGER_Initialize 3DCE  
                                    ??_ADCC_Initialize 0020  
                                       _DAC1_GetOutput 56B0  
                                sqrtf@__xc8_float_word 00AC  
                        ?_TMR6_DefaultInterruptHandler 0001  
                            ??_UART1_UartInterrupt_ISR 0018  
        __end_of_UART1_SetFramingErrorInterruptHandler 560C  
              ??_UART1_SetFramingErrorInterruptHandler 0020  
               ?_UART1_SetFramingErrorInterruptHandler 0060  
                _UART1_SetFramingErrorInterruptHandler 55FE  
                                         ___fladd@aexp 0098  
                                         ___fladd@bexp 0099  
                        ?_ADCC_DefaultInterruptHandler 0001  
                         ?_UART1_SetTxInterruptHandler 0060  
                              _eaDogM_WriteStringAtPos 4638  
                                      ??_wait_lcd_done 0020  
                           __end_of_spi1_configuration FDC4  
