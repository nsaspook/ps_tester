

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar  8 17:47:44 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=4,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=4,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=4,class=CODE,delta=1
   100                           	psect	text81,global,reloc=4,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=4,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=4,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118  0000                     
   119                           ; Version 2.40
   120                           ; Generated 17/11/2021 GMT
   121                           ; 
   122                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution. Publication is not required when
   136                           ;        this file is used in an embedded application.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC18F57K42 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     
   155                           	psect	idataBANK0
   156  005D34                     __pidataBANK0:
   157                           	callstack 0
   158                           
   159                           ;initializer for _mode
   160  005D34  01                 	db	1
   161                           
   162                           ;initializer for _build_time
   163  005D35  A1                 	db	low STR_2
   164                           
   165                           ;initializer for _build_date
   166  005D36  81                 	db	low STR_1
   167                           
   168                           	psect	idataBANK1
   169  005C1C                     __pidataBANK1:
   170                           	callstack 0
   171                           
   172                           ;initializer for stoa@F1164
   173  005C1C  28                 	db	40
   174  005C1D  6E                 	db	110
   175  005C1E  75                 	db	117
   176  005C1F  6C                 	db	108
   177  005C20  6C                 	db	108
   178  005C21  29                 	db	41
   179  005C22  00                 	db	0
   180                           
   181                           ;initializer for _g_cmds
   182  005C23  C7                 	db	low STR_6
   183  005C24  8A                 	db	low _fh_hw
   184  005C25  5C                 	db	high _fh_hw
   185  005C26  00                 	db	low (_fh_hw shr (0+16))
   186  005C27  C1                 	db	low STR_7
   187  005C28  5C                 	db	low _fh_hi
   188  005C29  5C                 	db	high _fh_hi
   189  005C2A  00                 	db	low (_fh_hi shr (0+16))
   190  005C2B  C4                 	db	low STR_8
   191  005C2C  4A                 	db	low _fh_ho
   192  005C2D  5C                 	db	high _fh_ho
   193  005C2E  00                 	db	low (_fh_ho shr (0+16))
   194  005C2F  00                 	db	0
   195  005C30  00                 	db	0
   196  005C31  00                 	db	0
   197  005C32  00                 	db	0
   198                           
   199                           	psect	smallconst
   200  002000                     __psmallconst:
   201                           	callstack 0
   202  002000  00                 	db	0
   203  002001  02                 	db	2
   204  002002  40                 	db	64
   205  002003  00                 	db	0
   206  002004  08                 	db	8
   207  002005  00                 	db	0
   208  002006                     __end_of_spi1_configuration:
   209                           	callstack 0
   210  002006                     _cmdm:
   211                           	callstack 0
   212  002006  0D                 	db	13
   213  002007  0A                 	db	10
   214  002008  20                 	db	32
   215  002009  43                 	db	67
   216  00200A  6F                 	db	111
   217  00200B  6D                 	db	109
   218  00200C  6D                 	db	109
   219  00200D  61                 	db	97
   220  00200E  6E                 	db	110
   221  00200F  64                 	db	100
   222  002010  20                 	db	32
   223  002011  70                 	db	112
   224  002012  72                 	db	114
   225  002013  6F                 	db	111
   226  002014  63                 	db	99
   227  002015  65                 	db	101
   228  002016  73                 	db	115
   229  002017  73                 	db	115
   230  002018  6F                 	db	111
   231  002019  72                 	db	114
   232  00201A  20                 	db	32
   233  00201B  56                 	db	86
   234  00201C  30                 	db	48
   235  00201D  2E                 	db	46
   236  00201E  31                 	db	49
   237  00201F  0D                 	db	13
   238  002020  0A                 	db	10
   239  002021  00                 	db	0
   240  002022                     __end_of_cmdm:
   241                           	callstack 0
   242  0000                     _T5CON	set	16282
   243  0000                     _TMR5L	set	16280
   244  0000                     _TMR5H	set	16281
   245  0000                     _T5GCON	set	16283
   246  0000                     _IVTBASEL	set	16341
   247  0000                     _IVTBASEH	set	16342
   248  0000                     _IVTBASEU	set	16343
   249  0000                     _T6CON	set	16276
   250  0000                     _T6RST	set	16279
   251  0000                     _ADERRL	set	16098
   252  0000                     _ADERRH	set	16099
   253  0000                     _ADPREVL	set	16109
   254  0000                     _ADPREVH	set	16110
   255  0000                     _ADFLTRL	set	16102
   256  0000                     _ADFLTRH	set	16103
   257  0000                     _ADACCL	set	16104
   258  0000                     _ADACCH	set	16105
   259  0000                     _ADCNT	set	16107
   260  0000                     _ADRESL	set	16111
   261  0000                     _ADRESH	set	16112
   262  0000                     _ADCON0	set	16120
   263  0000                     _ADCON1	set	16121
   264  0000                     _ADPREH	set	16119
   265  0000                     _ADPREL	set	16118
   266  0000                     _ADCAP	set	16117
   267  0000                     _ADACQH	set	16116
   268  0000                     _ADPCH	set	16113
   269  0000                     _ADRPT	set	16108
   270  0000                     _ADACCU	set	16106
   271  0000                     _ADSTPTH	set	16101
   272  0000                     _ADSTPTL	set	16100
   273  0000                     _ADUTHH	set	16097
   274  0000                     _ADUTHL	set	16096
   275  0000                     _ADLTHH	set	16095
   276  0000                     _OSCTUNE	set	14814
   277  0000                     _OSCFRQ	set	14815
   278  0000                     _OSCEN	set	14813
   279  0000                     _TRISD	set	16325
   280  0000                     _TRISC	set	16324
   281  0000                     _TRISB	set	16323
   282  0000                     _LATC	set	16316
   283  0000                     _LATB	set	16315
   284  0000                     _PLLR	set	118496
   285  0000                     _U1ERRIRbits	set	15865
   286  0000                     _LATFbits	set	16319
   287  0000                     _LATDbits	set	16317
   288  0000                     _LATEbits	set	16318
   289  0000                     _TRISCbits	set	16324
   290  0000                     _T5CONbits	set	16282
   291  0000                     _IVTLOCKbits	set	16340
   292  0000                     _GIE	set	130711
   293  0000                     _IPR1bits	set	14721
   294  0000                     _IPR3bits	set	14723
   295  0000                     _PIE1bits	set	14737
   296  0000                     _PIR1bits	set	14753
   297  0000                     _PMD0	set	14784
   298  0000                     _OSCCON1	set	14809
   299  0000                     _RC3PPS	set	14867
   300  0000                     _ANSELA	set	14912
   301  0000                     _ANSELB	set	14928
   302  0000                     _ANSELC	set	14944
   303  0000                     _ANSELD	set	14960
   304  0000                     _LATA	set	16314
   305  0000                     _LATD	set	16317
   306  0000                     _LATE	set	16318
   307  0000                     _TRISA	set	16322
   308  0000                     _TRISE	set	16326
   309  0000                     _LATF	set	16319
   310  0000                     _PORTBbits	set	16331
   311  0000                     _INTCON0bits	set	16338
   312  0000                     _TRISF	set	16327
   313  0000                     _INLVLD	set	14964
   314  0000                     _SLRCOND	set	14963
   315  0000                     _ODCOND	set	14962
   316  0000                     _RD0I2C	set	14970
   317  0000                     _WPUD	set	14961
   318  0000                     _ANSELE	set	14976
   319  0000                     _INLVLC	set	14948
   320  0000                     _SLRCONC	set	14947
   321  0000                     _ODCONC	set	14946
   322  0000                     _RC3I2C	set	14954
   323  0000                     _WPUC	set	14945
   324  0000                     _INLVLB	set	14932
   325  0000                     _SLRCONB	set	14931
   326  0000                     _ODCONB	set	14930
   327  0000                     _RB1I2C	set	14938
   328  0000                     _WPUB	set	14929
   329  0000                     _INLVLE	set	14980
   330  0000                     _SLRCONE	set	14979
   331  0000                     _ODCONE	set	14978
   332  0000                     _WPUE	set	14977
   333  0000                     _ANSELF	set	14992
   334  0000                     _SPI1SCKPPS	set	15070
   335  0000                     _INLVLF	set	14996
   336  0000                     _SLRCONF	set	14995
   337  0000                     _ODCONF	set	14994
   338  0000                     _WPUF	set	14993
   339  0000                     _INLVLA	set	14916
   340  0000                     _SLRCONA	set	14915
   341  0000                     _ODCONA	set	14914
   342  0000                     _WPUA	set	14913
   343  0000                     _RB2I2C	set	14939
   344  0000                     _RC4I2C	set	14955
   345  0000                     _RD1I2C	set	14971
   346  0000                     _SPI1SDIPPS	set	15071
   347  0000                     _U1RXPPS	set	15077
   348  0000                     _RC5PPS	set	14869
   349  0000                     _RC6PPS	set	14870
   350  0000                     _SPI1RXB	set	15632
   351  0000                     _SPI1TXB	set	15633
   352  0000                     _SPI1TCNTL	set	15634
   353  0000                     _SPI1CON0	set	15636
   354  0000                     _U1RXB	set	15848
   355  0000                     _U1TXB	set	15850
   356  0000                     _U1P1L	set	15852
   357  0000                     _DAC1CON1	set	16028
   358  0000                     _DAC1CON0	set	16030
   359  0000                     _ADLTHL	set	16094
   360  0000                     _OSCCON3	set	14811
   361  0000                     _PMD7	set	14791
   362  0000                     _PMD6	set	14790
   363  0000                     _PMD5	set	14789
   364  0000                     _PMD4	set	14788
   365  0000                     _PMD3	set	14787
   366  0000                     _PMD2	set	14786
   367  0000                     _PMD1	set	14785
   368  0000                     _ADACQL	set	16115
   369  0000                     _T6TMR	set	16274
   370  0000                     _T6PR	set	16275
   371  0000                     _T6HLT	set	16277
   372  0000                     _T6CLKCON	set	16278
   373  0000                     _ADCLK	set	16127
   374  0000                     _ADACT	set	16126
   375  0000                     _ADREF	set	16125
   376  0000                     _ADSTAT	set	16124
   377  0000                     _ADCON3	set	16123
   378  0000                     _ADCON2	set	16122
   379  0000                     _PIR2bits	set	14754
   380  0000                     _PIR8bits	set	14760
   381  0000                     _PIR9bits	set	14761
   382  0000                     _PIE3bits	set	14739
   383  0000                     _PIE9bits	set	14745
   384  0000                     _IVTLOCK	set	16340
   385  0000                     _IPR8bits	set	14728
   386  0000                     _IPR9bits	set	14729
   387  0000                     _PIE8bits	set	14744
   388  0000                     _U1ERRIE	set	15866
   389  0000                     _U1ERRIR	set	15865
   390  0000                     _U1UIR	set	15864
   391  0000                     _U1FIFO	set	15863
   392  0000                     _U1BRGH	set	15862
   393  0000                     _U1BRGL	set	15861
   394  0000                     _U1CON2	set	15860
   395  0000                     _U1CON1	set	15859
   396  0000                     _U1CON0	set	15858
   397  0000                     _U1P3H	set	15857
   398  0000                     _U1P3L	set	15856
   399  0000                     _U1P2H	set	15855
   400  0000                     _U1P2L	set	15854
   401  0000                     _U1P1H	set	15853
   402  0000                     _T5CLK	set	16285
   403  0000                     _T5GATE	set	16284
   404  0000                     _SPI1BAUD	set	15641
   405  0000                     _SPI1CLK	set	15644
   406  0000                     _SPI1CON2	set	15638
   407  0000                     _SPI1CON1	set	15637
   408  002022                     STR_5:
   409                           
   410                           ; BSR set to: 0
   411  002022  20                 	db	32
   412  002023  50                 	db	80	;'P'
   413  002024  53                 	db	83	;'S'
   414  002025  20                 	db	32
   415  002026  54                 	db	84	;'T'
   416  002027  65                 	db	101	;'e'
   417  002028  73                 	db	115	;'s'
   418  002029  74                 	db	116	;'t'
   419  00202A  20                 	db	32
   420  00202B  25                 	db	37
   421  00202C  31                 	db	49	;'1'
   422  00202D  75                 	db	117	;'u'
   423  00202E  3A                 	db	58	;':'
   424  00202F  20                 	db	32
   425  002030  44                 	db	68	;'D'
   426  002031  41                 	db	65	;'A'
   427  002032  43                 	db	67	;'C'
   428  002033  20                 	db	32
   429  002034  4F                 	db	79	;'O'
   430  002035  55                 	db	85	;'U'
   431  002036  54                 	db	84	;'T'
   432  002037  3D                 	db	61	;'='
   433  002038  25                 	db	37
   434  002039  32                 	db	50	;'2'
   435  00203A  75                 	db	117	;'u'
   436  00203B  2C                 	db	44
   437  00203C  20                 	db	32
   438  00203D  53                 	db	83	;'S'
   439  00203E  75                 	db	117	;'u'
   440  00203F  70                 	db	112	;'p'
   441  002040  70                 	db	112	;'p'
   442  002041  6C                 	db	108	;'l'
   443  002042  79                 	db	121	;'y'
   444  002043  20                 	db	32
   445  002044  52                 	db	82	;'R'
   446  002045  65                 	db	101	;'e'
   447  002046  61                 	db	97	;'a'
   448  002047  64                 	db	100	;'d'
   449  002048  42                 	db	66	;'B'
   450  002049  61                 	db	97	;'a'
   451  00204A  63                 	db	99	;'c'
   452  00204B  6B                 	db	107	;'k'
   453  00204C  20                 	db	32
   454  00204D  25                 	db	37
   455  00204E  34                 	db	52	;'4'
   456  00204F  75                 	db	117	;'u'
   457  002050  20                 	db	32
   458  002051  56                 	db	86	;'V'
   459  002052  3D                 	db	61	;'='
   460  002053  25                 	db	37
   461  002054  2B                 	db	43
   462  002055  35                 	db	53	;'5'
   463  002056  2E                 	db	46
   464  002057  31                 	db	49	;'1'
   465  002058  66                 	db	102	;'f'
   466  002059  56                 	db	86	;'V'
   467  00205A  20                 	db	32
   468  00205B  25                 	db	37
   469  00205C  34                 	db	52	;'4'
   470  00205D  75                 	db	117	;'u'
   471  00205E  20                 	db	32
   472  00205F  49                 	db	73	;'I'
   473  002060  3D                 	db	61	;'='
   474  002061  25                 	db	37
   475  002062  2B                 	db	43
   476  002063  33                 	db	51	;'3'
   477  002064  2E                 	db	46
   478  002065  31                 	db	49	;'1'
   479  002066  66                 	db	102	;'f'
   480  002067  6D                 	db	109	;'m'
   481  002068  41                 	db	65	;'A'
   482  002069  0D                 	db	13
   483  00206A  0A                 	db	10
   484  00206B  00                 	db	0
   485  00206C                     STR_9:
   486                           
   487                           ; BSR set to: 0
   488  00206C  0D                 	db	13
   489  00206D  0A                 	db	10
   490  00206E  20                 	db	32
   491  00206F  50                 	db	80	;'P'
   492  002070  73                 	db	115	;'s'
   493  002071  20                 	db	32
   494  002072  54                 	db	84	;'T'
   495  002073  65                 	db	101	;'e'
   496  002074  73                 	db	115	;'s'
   497  002075  74                 	db	116	;'t'
   498  002076  65                 	db	101	;'e'
   499  002077  72                 	db	114	;'r'
   500  002078  20                 	db	32
   501  002079  25                 	db	37
   502  00207A  73                 	db	115	;'s'
   503  00207B  20                 	db	32
   504  00207C  25                 	db	37
   505  00207D  73                 	db	115	;'s'
   506  00207E  0D                 	db	13
   507  00207F  0A                 	db	10
   508  002080  00                 	db	0
   509  002081                     STR_1:
   510                           
   511                           ; BSR set to: 0
   512  002081  4D                 	db	77	;'M'
   513  002082  61                 	db	97	;'a'
   514  002083  72                 	db	114	;'r'
   515  002084  20                 	db	32
   516  002085  20                 	db	32
   517  002086  38                 	db	56	;'8'
   518  002087  20                 	db	32
   519  002088  32                 	db	50	;'2'
   520  002089  30                 	db	48	;'0'
   521  00208A  32                 	db	50	;'2'
   522  00208B  32                 	db	50	;'2'
   523  00208C  00                 	db	0
   524  00208D                     STR_3:
   525                           
   526                           ; BSR set to: 0
   527  00208D  20                 	db	32
   528  00208E  68                 	db	104	;'h'
   529  00208F  69                 	db	105	;'i'
   530  002090  20                 	db	32
   531  002091  20                 	db	32
   532  002092  20                 	db	32
   533  002093  20                 	db	32
   534  002094  20                 	db	32
   535  002095  20                 	db	32
   536  002096  00                 	db	0
   537  002097                     STR_4:
   538                           
   539                           ; BSR set to: 0
   540  002097  20                 	db	32
   541  002098  68                 	db	104	;'h'
   542  002099  6F                 	db	111	;'o'
   543  00209A  20                 	db	32
   544  00209B  20                 	db	32
   545  00209C  20                 	db	32
   546  00209D  20                 	db	32
   547  00209E  20                 	db	32
   548  00209F  20                 	db	32
   549  0020A0  00                 	db	0
   550  0020A1                     STR_2:
   551                           
   552                           ; BSR set to: 0
   553  0020A1  31                 	db	49	;'1'
   554  0020A2  37                 	db	55	;'7'
   555  0020A3  3A                 	db	58	;':'
   556  0020A4  34                 	db	52	;'4'
   557  0020A5  37                 	db	55	;'7'
   558  0020A6  3A                 	db	58	;':'
   559  0020A7  33                 	db	51	;'3'
   560  0020A8  39                 	db	57	;'9'
   561  0020A9  00                 	db	0
   562  0020AA                     STR_11:
   563                           
   564                           ; BSR set to: 0
   565  0020AA  49                 	db	73	;'I'
   566  0020AB  4E                 	db	78	;'N'
   567  0020AC  46                 	db	70	;'F'
   568  0020AD  00                 	db	0
   569  0020AE                     STR_15:
   570                           
   571                           ; BSR set to: 0
   572  0020AE  4E                 	db	78	;'N'
   573  0020AF  41                 	db	65	;'A'
   574  0020B0  4E                 	db	78	;'N'
   575  0020B1  00                 	db	0
   576  0020B2                     STR_12:
   577                           
   578                           ; BSR set to: 0
   579  0020B2  69                 	db	105	;'i'
   580  0020B3  6E                 	db	110	;'n'
   581  0020B4  66                 	db	102	;'f'
   582  0020B5  00                 	db	0
   583  0020B6                     STR_16:
   584                           
   585                           ; BSR set to: 0
   586  0020B6  6E                 	db	110	;'n'
   587  0020B7  61                 	db	97	;'a'
   588  0020B8  6E                 	db	110	;'n'
   589  0020B9  00                 	db	0
   590  0020BA                     STR_24:
   591                           
   592                           ; BSR set to: 0
   593  0020BA  6C                 	db	108	;'l'
   594  0020BB  6C                 	db	108	;'l'
   595  0020BC  73                 	db	115	;'s'
   596  0020BD  00                 	db	0
   597  0020BE                     STR_19:
   598                           
   599                           ; BSR set to: 0
   600  0020BE  6C                 	db	108	;'l'
   601  0020BF  66                 	db	102	;'f'
   602  0020C0  00                 	db	0
   603  0020C1                     STR_7:
   604                           
   605                           ; BSR set to: 0
   606  0020C1  68                 	db	104	;'h'
   607  0020C2  69                 	db	105	;'i'
   608  0020C3  00                 	db	0
   609  0020C4                     STR_8:
   610                           
   611                           ; BSR set to: 0
   612  0020C4  68                 	db	104	;'h'
   613  0020C5  6F                 	db	111	;'o'
   614  0020C6  00                 	db	0
   615  0020C7                     STR_6:
   616                           
   617                           ; BSR set to: 0
   618  0020C7  68                 	db	104	;'h'
   619  0020C8  77                 	db	119	;'w'
   620  0020C9  00                 	db	0
   621  0020CA  00                 	db	0	; dummy byte at the end
   622  0000                     
   623                           ; #config settings
   624                           
   625                           	psect	cinit
   626  005072                     __pcinit:
   627                           	callstack 0
   628  005072                     start_initialization:
   629                           	callstack 0
   630  005072                     __initialization:
   631                           	callstack 0
   632                           
   633                           ; Initialize objects allocated to BANK1 (23 bytes)
   634                           ; load TBLPTR registers with __pidataBANK1
   635  005072  0E1C               	movlw	low __pidataBANK1
   636  005074  6EF6               	movwf	tblptrl,c
   637  005076  0E5C               	movlw	high __pidataBANK1
   638  005078  6EF7               	movwf	tblptrh,c
   639  00507A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   640  00507C  6EF8               	movwf	tblptru,c
   641  00507E  EE00  F1E8         	lfsr	0,__pdataBANK1
   642  005082  EE10 F017          	lfsr	1,23
   643  005086                     copy_data0:
   644  005086  0009               	tblrd		*+
   645  005088  006F FFD7 FFEE     	movff	tablat,postinc0
   646  00508E  50E5               	movf	postdec1,w,c
   647  005090  50E1               	movf	fsr1l,w,c
   648  005092  E1F9               	bnz	copy_data0
   649                           
   650                           ; Initialize objects allocated to BANK0 (3 bytes)
   651                           ; load TBLPTR registers with __pidataBANK0
   652  005094  0E34               	movlw	low __pidataBANK0
   653  005096  6EF6               	movwf	tblptrl,c
   654  005098  0E5D               	movlw	high __pidataBANK0
   655  00509A  6EF7               	movwf	tblptrh,c
   656  00509C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   657  00509E  6EF8               	movwf	tblptru,c
   658  0050A0  0009               	tblrd		*+	;fetch initializer
   659  0050A2  006F FFD4  F0FD    	movff	tablat,__pdataBANK0
   660  0050A8  0009               	tblrd		*+	;fetch initializer
   661  0050AA  006F FFD4  F0FE    	movff	tablat,__pdataBANK0+1
   662  0050B0  0009               	tblrd		*+	;fetch initializer
   663  0050B2  006F FFD4  F0FF    	movff	tablat,__pdataBANK0+2
   664                           
   665                           ; Clear objects allocated to BANK3 (255 bytes)
   666  0050B8  EE00  F300         	lfsr	0,__pbssBANK3
   667  0050BC  EE10 F0FF          	lfsr	1,255
   668  0050C0                     clear_0:
   669  0050C0  6AEE               	clrf	postinc0,c
   670  0050C2  50E5               	movf	postdec1,w,c
   671  0050C4  50E1               	movf	fsr1l,w,c
   672  0050C6  E1FC               	bnz	clear_0
   673  0050C8  50E2               	movf	fsr1h,w,c
   674  0050CA  E1FA               	bnz	clear_0
   675                           
   676                           ; Clear objects allocated to BANK2 (195 bytes)
   677  0050CC  EE00  F200         	lfsr	0,__pbssBANK2
   678  0050D0  0EC3               	movlw	195
   679  0050D2                     clear_1:
   680  0050D2  6AEE               	clrf	postinc0,c
   681  0050D4  06E8               	decf	wreg,f,c
   682  0050D6  E1FD               	bnz	clear_1
   683                           
   684                           ; Clear objects allocated to BANK1 (232 bytes)
   685  0050D8  EE00  F100         	lfsr	0,__pbssBANK1
   686  0050DC  0EE8               	movlw	232
   687  0050DE                     clear_2:
   688  0050DE  6AEE               	clrf	postinc0,c
   689  0050E0  06E8               	decf	wreg,f,c
   690  0050E2  E1FD               	bnz	clear_2
   691                           
   692                           ; Clear objects allocated to BANK0 (36 bytes)
   693  0050E4  EE00  F0D9         	lfsr	0,__pbssBANK0
   694  0050E8  0E24               	movlw	36
   695  0050EA                     clear_3:
   696  0050EA  6AEE               	clrf	postinc0,c
   697  0050EC  06E8               	decf	wreg,f,c
   698  0050EE  E1FD               	bnz	clear_3
   699                           
   700                           ; Clear objects allocated to COMRAM (19 bytes)
   701  0050F0  EE00  F039         	lfsr	0,__pbssCOMRAM
   702  0050F4  0E13               	movlw	19
   703  0050F6                     clear_4:
   704  0050F6  6AEE               	clrf	postinc0,c
   705  0050F8  06E8               	decf	wreg,f,c
   706  0050FA  E1FD               	bnz	clear_4
   707                           
   708                           ;
   709                           ; Setup IVTBASE
   710                           ;
   711  0050FC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   712  0050FE  6ED5               	movwf	213,c
   713  005100  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   714  005102  6ED6               	movwf	214,c
   715  005104  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   716  005106  6ED7               	movwf	215,c
   717  005108                     end_of_initialization:
   718                           	callstack 0
   719  005108                     __end_of__initialization:
   720                           	callstack 0
   721  005108  0100               	movlb	0
   722  00510A  EFFB  F01C         	goto	_main	;jump to C main() function
   723                           
   724                           	psect	bssCOMRAM
   725  000039                     __pbssCOMRAM:
   726                           	callstack 0
   727  000039                     _ana:
   728                           	callstack 0
   729  000039                     	ds	4
   730  00003D                     _flags:
   731                           	callstack 0
   732  00003D                     	ds	2
   733  00003F                     _timer5ReloadVal:
   734                           	callstack 0
   735  00003F                     	ds	2
   736  000041                     TMR6_ISR@CountCallBack:
   737                           	callstack 0
   738  000041                     	ds	2
   739  000043                     _res:
   740                           	callstack 0
   741  000043                     	ds	1
   742  000044                     _adc_chan:
   743                           	callstack 0
   744  000044                     	ds	1
   745  000045                     _uart1RxLastError:
   746                           	callstack 0
   747  000045                     	ds	1
   748  000046                     _uart1RxCount:
   749                           	callstack 0
   750  000046                     	ds	1
   751  000047                     _uart1RxTail:
   752                           	callstack 0
   753  000047                     	ds	1
   754  000048                     _uart1RxHead:
   755                           	callstack 0
   756  000048                     	ds	1
   757  000049                     _uart1TxBufferRemaining:
   758                           	callstack 0
   759  000049                     	ds	1
   760  00004A                     _uart1TxTail:
   761                           	callstack 0
   762  00004A                     	ds	1
   763  00004B                     _uart1TxHead:
   764                           	callstack 0
   765  00004B                     	ds	1
   766                           
   767                           	psect	bssBANK0
   768  0000D9                     __pbssBANK0:
   769                           	callstack 0
   770  0000D9                     _vval:
   771                           	callstack 0
   772  0000D9                     	ds	4
   773  0000DD                     _TMR5_InterruptHandler:
   774                           	callstack 0
   775  0000DD                     	ds	3
   776  0000E0                     _UART1_ErrorHandler:
   777                           	callstack 0
   778  0000E0                     	ds	3
   779  0000E3                     _UART1_OverrunErrorHandler:
   780                           	callstack 0
   781  0000E3                     	ds	3
   782  0000E6                     _UART1_FramingErrorHandler:
   783                           	callstack 0
   784  0000E6                     	ds	3
   785  0000E9                     _TMR6_InterruptHandler:
   786                           	callstack 0
   787  0000E9                     	ds	3
   788  0000EC                     _ADCC_ADI_InterruptHandler:
   789                           	callstack 0
   790  0000EC                     	ds	3
   791  0000EF                     _UART1_TxInterruptHandler:
   792                           	callstack 0
   793  0000EF                     	ds	3
   794  0000F2                     _UART1_RxInterruptHandler:
   795                           	callstack 0
   796  0000F2                     	ds	3
   797  0000F5                     _nout:
   798                           	callstack 0
   799  0000F5                     	ds	2
   800  0000F7                     _width:
   801                           	callstack 0
   802  0000F7                     	ds	2
   803  0000F9                     _prec:
   804                           	callstack 0
   805  0000F9                     	ds	2
   806  0000FB                     _adc_tick:
   807                           	callstack 0
   808  0000FB                     	ds	1
   809  0000FC                     _disp_tick:
   810                           	callstack 0
   811  0000FC                     	ds	1
   812                           
   813                           	psect	dataBANK0
   814  0000FD                     __pdataBANK0:
   815                           	callstack 0
   816  0000FD                     _mode:
   817                           	callstack 0
   818  0000FD                     	ds	1
   819  0000FE                     _build_time:
   820                           	callstack 0
   821  0000FE                     	ds	1
   822  0000FF                     _build_date:
   823                           	callstack 0
   824  0000FF                     	ds	1
   825                           
   826                           	psect	bssBANK1
   827  000100                     __pbssBANK1:
   828                           	callstack 0
   829  000100                     _uart1RxStatusBuffer:
   830                           	callstack 0
   831  000100                     	ds	64
   832  000140                     _uart1TxBuffer:
   833                           	callstack 0
   834  000140                     	ds	64
   835  000180                     _tickCount:
   836                           	callstack 0
   837  000180                     	ds	12
   838  00018C                     floorf@F526:
   839                           	callstack 0
   840  00018C                     	ds	4
   841  000190                     ___fpclassifyf@F465:
   842                           	callstack 0
   843  000190                     	ds	4
   844  000194                     _ival:
   845                           	callstack 0
   846  000194                     	ds	4
   847  000198                     _dbuf:
   848                           	callstack 0
   849  000198                     	ds	80
   850                           
   851                           	psect	dataBANK1
   852  0001E8                     __pdataBANK1:
   853                           	callstack 0
   854  0001E8                     stoa@F1164:
   855                           	callstack 0
   856  0001E8                     	ds	7
   857  0001EF                     _g_cmds:
   858                           	callstack 0
   859  0001EF                     	ds	16
   860                           
   861                           	psect	bssBANK2
   862  000200                     __pbssBANK2:
   863                           	callstack 0
   864  000200                     _uart1RxBuffer:
   865                           	callstack 0
   866  000200                     	ds	64
   867  000240                     _cli_ctx:
   868                           	callstack 0
   869  000240                     	ds	131
   870                           
   871                           	psect	bssBANK3
   872  000300                     __pbssBANK3:
   873                           	callstack 0
   874  000300                     _buff1:
   875                           	callstack 0
   876  000300                     	ds	255
   877                           
   878                           	psect	cstackBANK2
   879  0002C3                     __pcstackBANK2:
   880                           	callstack 0
   881  0002C3                     ?_printf:
   882                           	callstack 0
   883  0002C3                     ?_sprintf:
   884                           	callstack 0
   885  0002C3                     printf@fmt:
   886                           	callstack 0
   887  0002C3                     sprintf@s:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x0
   891  0002C3                     	ds	2
   892  0002C5                     sprintf@fmt:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x2
   896  0002C5                     	ds	5
   897  0002CA                     sprintf@ap:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x7
   901  0002CA                     	ds	2
   902  0002CC                     sprintf@f:
   903                           	callstack 0
   904                           
   905                           ; 11 bytes @ 0x9
   906  0002CC                     	ds	11
   907  0002D7                     cli_init@a_ctx:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x14
   911  0002D7                     	ds	2
   912  0002D9                     cli_init@a_cmds:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x16
   916  0002D9                     	ds	2
   917                           
   918                           	psect	cstackBANK0
   919  000060                     __pcstackBANK0:
   920                           	callstack 0
   921  000060                     ??__cli_interpret_cmd:
   922  000060                     ?_utoa:
   923                           	callstack 0
   924  000060                     ___flmul@sign:
   925                           	callstack 0
   926  000060                     utoa@fp:
   927                           	callstack 0
   928  000060                     floorf@m:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0x0
   932  000060                     	ds	1
   933  000061                     ___flmul@aexp:
   934                           	callstack 0
   935                           
   936                           ; 1 bytes @ 0x1
   937  000061                     	ds	1
   938  000062                     ___flmul@bexp:
   939                           	callstack 0
   940  000062                     utoa@d:
   941                           	callstack 0
   942                           
   943                           ; 8 bytes @ 0x2
   944  000062                     	ds	1
   945  000063                     ___flmul@grs:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x3
   949  000063                     	ds	1
   950  000064                     floorf@e:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x4
   954  000064                     	ds	2
   955  000066                     floorf@u:
   956                           	callstack 0
   957                           
   958                           ; 4 bytes @ 0x6
   959  000066                     	ds	1
   960  000067                     ___flmul@prod:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x7
   964  000067                     	ds	3
   965  00006A                     ??_utoa:
   966  00006A                     _cli_read$2073:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0xA
   970  00006A                     	ds	1
   971  00006B                     ___flmul@temp:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0xB
   975  00006B                     	ds	1
   976  00006C                     cli_read@i:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0xC
   980  00006C                     	ds	1
   981  00006D                     ??___flge:
   982                           
   983                           ; 1 bytes @ 0xD
   984  00006D                     	ds	4
   985  000071                     ?_efgtoa:
   986                           	callstack 0
   987  000071                     efgtoa@fp:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x11
   991  000071                     	ds	1
   992  000072                     utoa@p:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x12
   996  000072                     	ds	1
   997  000073                     efgtoa@f:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x13
  1001  000073                     	ds	1
  1002  000074                     utoa@w:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x14
  1006  000074                     	ds	2
  1007  000076                     utoa@n:
  1008                           	callstack 0
  1009                           
  1010                           ; 8 bytes @ 0x16
  1011  000076                     	ds	1
  1012  000077                     efgtoa@c:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x17
  1016  000077                     	ds	1
  1017  000078                     ??_efgtoa:
  1018                           
  1019                           ; 1 bytes @ 0x18
  1020  000078                     	ds	5
  1021  00007D                     _efgtoa$2645:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x1D
  1025  00007D                     	ds	1
  1026  00007E                     utoa@i:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x1E
  1030  00007E                     	ds	1
  1031  00007F                     _efgtoa$2653:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x1F
  1035  00007F                     	ds	2
  1036  000081                     _efgtoa$2654:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x21
  1040  000081                     	ds	2
  1041  000083                     efgtoa@t:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x23
  1045  000083                     	ds	2
  1046  000085                     efgtoa@pp:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x25
  1050  000085                     	ds	2
  1051  000087                     efgtoa@ne:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x27
  1055  000087                     	ds	2
  1056  000089                     efgtoa@m:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x29
  1060  000089                     	ds	2
  1061  00008B                     efgtoa@ou:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x2B
  1065  00008B                     	ds	4
  1066  00008F                     efgtoa@d:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x2F
  1070  00008F                     	ds	2
  1071  000091                     efgtoa@sign:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x31
  1075  000091                     	ds	2
  1076  000093                     efgtoa@p:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x33
  1080  000093                     	ds	2
  1081  000095                     efgtoa@nmode:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x35
  1085  000095                     	ds	1
  1086  000096                     efgtoa@w:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x36
  1090  000096                     	ds	2
  1091  000098                     efgtoa@mode:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x38
  1095  000098                     	ds	1
  1096  000099                     efgtoa@h:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x39
  1100  000099                     	ds	4
  1101  00009D                     efgtoa@l:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x3D
  1105  00009D                     	ds	4
  1106  0000A1                     efgtoa@g:
  1107                           	callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x41
  1110  0000A1                     	ds	4
  1111  0000A5                     efgtoa@i:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x45
  1115  0000A5                     	ds	2
  1116  0000A7                     efgtoa@e:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x47
  1120  0000A7                     	ds	2
  1121  0000A9                     efgtoa@n:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x49
  1125  0000A9                     	ds	2
  1126  0000AB                     efgtoa@u:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x4B
  1130  0000AB                     	ds	4
  1131  0000AF                     ?_vfpfcnvrt:
  1132                           	callstack 0
  1133  0000AF                     vfpfcnvrt@fp:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x4F
  1137  0000AF                     	ds	2
  1138  0000B1                     vfpfcnvrt@fmt:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x51
  1142  0000B1                     	ds	1
  1143  0000B2                     vfpfcnvrt@ap:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x52
  1147  0000B2                     	ds	2
  1148  0000B4                     ??_vfpfcnvrt:
  1149                           
  1150                           ; 1 bytes @ 0x54
  1151  0000B4                     	ds	4
  1152  0000B8                     vfpfcnvrt@llu:
  1153                           	callstack 0
  1154                           
  1155                           ; 8 bytes @ 0x58
  1156  0000B8                     	ds	8
  1157  0000C0                     vfpfcnvrt@cp:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x60
  1161  0000C0                     	ds	2
  1162  0000C2                     vfpfcnvrt@done:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x62
  1166  0000C2                     	ds	2
  1167  0000C4                     _vfpfcnvrt$2692:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x64
  1171  0000C4                     	ds	2
  1172  0000C6                     vfpfcnvrt@c:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x66
  1176  0000C6                     	ds	1
  1177  0000C7                     vfpfcnvrt@f:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x67
  1181  0000C7                     	ds	4
  1182  0000CB                     vfpfcnvrt@ct:
  1183                           	callstack 0
  1184                           
  1185                           ; 3 bytes @ 0x6B
  1186  0000CB                     	ds	3
  1187  0000CE                     ?_vfprintf:
  1188                           	callstack 0
  1189  0000CE                     vfprintf@fp:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x6E
  1193  0000CE                     	ds	2
  1194  0000D0                     vfprintf@fmt:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x70
  1198  0000D0                     	ds	1
  1199  0000D1                     vfprintf@ap:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x71
  1203  0000D1                     	ds	2
  1204  0000D3                     printf@ap:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x73
  1208  0000D3                     	ds	2
  1209  0000D5                     ??_main:
  1210                           
  1211                           ; 1 bytes @ 0x75
  1212  0000D5                     	ds	2
  1213  0000D7                     main@mode_sw:
  1214                           	callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x77
  1217  0000D7                     	ds	1
  1218  0000D8                     main@dac_v:
  1219                           	callstack 0
  1220                           
  1221                           ; 1 bytes @ 0x78
  1222  0000D8                     	ds	1
  1223                           
  1224                           	psect	cstackCOMRAM
  1225  000001                     __pcstackCOMRAM:
  1226                           	callstack 0
  1227  000001                     ?_ADCC_GetConversionResult:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x0
  1231  000001                     	ds	2
  1232  000003                     ??_ADCC_GetConversionResult:
  1233                           
  1234                           ; 1 bytes @ 0x2
  1235  000003                     	ds	2
  1236  000005                     ??_Adc_Isr:
  1237                           
  1238                           ; 1 bytes @ 0x4
  1239  000005                     	ds	1
  1240  000006                     ??_ADCC_ISR:
  1241                           
  1242                           ; 1 bytes @ 0x5
  1243  000006                     	ds	2
  1244  000008                     ??_Led_Blink:
  1245                           
  1246                           ; 1 bytes @ 0x7
  1247  000008                     	ds	1
  1248  000009                     ??_TMR6_ISR:
  1249                           
  1250                           ; 1 bytes @ 0x8
  1251  000009                     	ds	2
  1252  00000B                     ??_UART1_tx_vect_isr:
  1253                           
  1254                           ; 1 bytes @ 0xA
  1255  00000B                     	ds	2
  1256  00000D                     ??_UART1_rx_vect_isr:
  1257                           
  1258                           ; 1 bytes @ 0xC
  1259  00000D                     	ds	2
  1260  00000F                     TMR5_WriteTimer@timerVal:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0xE
  1264  00000F                     	ds	2
  1265  000011                     Timers_Isr@i:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x10
  1269  000011                     	ds	2
  1270  000013                     ??_TMR5_ISR:
  1271                           
  1272                           ; 1 bytes @ 0x12
  1273  000013                     	ds	2
  1274  000015                     ??_display_led:
  1275  000015                     ?_strlen:
  1276                           	callstack 0
  1277  000015                     ?___fpclassifyf:
  1278                           	callstack 0
  1279  000015                     ?_isupper:
  1280                           	callstack 0
  1281  000015                     ?_isdigit:
  1282                           	callstack 0
  1283  000015                     ?_isspace:
  1284                           	callstack 0
  1285  000015                     ?___wmul:
  1286                           	callstack 0
  1287  000015                     ?___awdiv:
  1288                           	callstack 0
  1289  000015                     ?___awmod:
  1290                           	callstack 0
  1291  000015                     ?___fladd:
  1292                           	callstack 0
  1293  000015                     ?___fldiv:
  1294                           	callstack 0
  1295  000015                     ?___flneg:
  1296                           	callstack 0
  1297  000015                     ?___fltol:
  1298                           	callstack 0
  1299  000015                     ?___xxtofl:
  1300                           	callstack 0
  1301  000015                     ?___lodiv:
  1302                           	callstack 0
  1303  000015                     ?___lomod:
  1304                           	callstack 0
  1305  000015                     DAC1_SetOutput@inputData:
  1306                           	callstack 0
  1307  000015                     INTERRUPT_Initialize@state:
  1308                           	callstack 0
  1309  000015                     UART1_Read@readValue:
  1310                           	callstack 0
  1311  000015                     UART1_Write@txData:
  1312                           	callstack 0
  1313  000015                     ___wmul@multiplier:
  1314                           	callstack 0
  1315  000015                     ___awdiv@dividend:
  1316                           	callstack 0
  1317  000015                     ___awmod@dividend:
  1318                           	callstack 0
  1319  000015                     memset@dest:
  1320                           	callstack 0
  1321  000015                     isdigit@c:
  1322                           	callstack 0
  1323  000015                     isspace@c:
  1324                           	callstack 0
  1325  000015                     isupper@c:
  1326                           	callstack 0
  1327  000015                     strcpy@dest:
  1328                           	callstack 0
  1329  000015                     strlen@s:
  1330                           	callstack 0
  1331  000015                     ADCC_SetADIInterruptHandler@InterruptHandler:
  1332                           	callstack 0
  1333  000015                     TMR6_SetInterruptHandler@InterruptHandler:
  1334                           	callstack 0
  1335  000015                     UART1_SetFramingErrorHandler@interruptHandler:
  1336                           	callstack 0
  1337  000015                     UART1_SetOverrunErrorHandler@interruptHandler:
  1338                           	callstack 0
  1339  000015                     UART1_SetErrorHandler@interruptHandler:
  1340                           	callstack 0
  1341  000015                     UART1_SetRxInterruptHandler@InterruptHandler:
  1342                           	callstack 0
  1343  000015                     UART1_SetTxInterruptHandler@InterruptHandler:
  1344                           	callstack 0
  1345  000015                     TMR5_SetInterruptHandler@InterruptHandler:
  1346                           	callstack 0
  1347  000015                     ___fleq@ff1:
  1348                           	callstack 0
  1349  000015                     ___flneg@f1:
  1350                           	callstack 0
  1351  000015                     ___fltol@f1:
  1352                           	callstack 0
  1353  000015                     ___fladd@b:
  1354                           	callstack 0
  1355  000015                     ___fldiv@b:
  1356                           	callstack 0
  1357  000015                     ___xxtofl@val:
  1358                           	callstack 0
  1359  000015                     ___fpclassifyf@x:
  1360                           	callstack 0
  1361  000015                     ___lodiv@dividend:
  1362                           	callstack 0
  1363  000015                     ___lomod@dividend:
  1364                           	callstack 0
  1365                           
  1366                           ; 8 bytes @ 0x14
  1367  000015                     	ds	1
  1368  000016                     putch@txData:
  1369                           	callstack 0
  1370  000016                     linux_getc@a_data:
  1371                           	callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x15
  1374  000016                     	ds	1
  1375  000017                     ??_isupper:
  1376  000017                     ??_isdigit:
  1377  000017                     ??_isspace:
  1378  000017                     ??_linux_getc:
  1379  000017                     ?_fputc:
  1380                           	callstack 0
  1381  000017                     display_led@led:
  1382                           	callstack 0
  1383  000017                     ___wmul@multiplicand:
  1384                           	callstack 0
  1385  000017                     ___awdiv@divisor:
  1386                           	callstack 0
  1387  000017                     ___awmod@divisor:
  1388                           	callstack 0
  1389  000017                     memset@c:
  1390                           	callstack 0
  1391  000017                     fputc@c:
  1392                           	callstack 0
  1393  000017                     strcpy@src:
  1394                           	callstack 0
  1395  000017                     strlen@a:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x16
  1399  000017                     	ds	1
  1400  000018                     ??_TMR5_Initialize:
  1401  000018                     
  1402                           ; 1 bytes @ 0x17
  1403  000018                     	ds	1
  1404  000019                     ??___fpclassifyf:
  1405  000019                     ??_strcpy:
  1406  000019                     ??___fltol:
  1407  000019                     ??___xxtofl:
  1408  000019                     ?_strncmp:
  1409                           	callstack 0
  1410  000019                     ___awdiv@counter:
  1411                           	callstack 0
  1412  000019                     ___awmod@counter:
  1413                           	callstack 0
  1414  000019                     ___wmul@product:
  1415                           	callstack 0
  1416  000019                     memset@n:
  1417                           	callstack 0
  1418  000019                     fputc@fp:
  1419                           	callstack 0
  1420  000019                     strncmp@_l:
  1421                           	callstack 0
  1422  000019                     ___fleq@ff2:
  1423                           	callstack 0
  1424  000019                     ___fladd@a:
  1425                           	callstack 0
  1426  000019                     ___fldiv@a:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x18
  1430  000019                     	ds	1
  1431  00001A                     ___awdiv@sign:
  1432                           	callstack 0
  1433  00001A                     ___awmod@sign:
  1434                           	callstack 0
  1435                           
  1436                           ; 1 bytes @ 0x19
  1437  00001A                     	ds	1
  1438  00001B                     ??_memset:
  1439  00001B                     ??_fputc:
  1440  00001B                     ?_tolower:
  1441                           	callstack 0
  1442  00001B                     _isspace$2757:
  1443                           	callstack 0
  1444  00001B                     ___awdiv@quotient:
  1445                           	callstack 0
  1446  00001B                     strcpy@s:
  1447                           	callstack 0
  1448  00001B                     strncmp@_r:
  1449                           	callstack 0
  1450  00001B                     tolower@c:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x1A
  1454  00001B                     	ds	1
  1455  00001C                     ?_atoi:
  1456                           	callstack 0
  1457  00001C                     atoi@s:
  1458                           	callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x1B
  1461  00001C                     	ds	1
  1462  00001D                     ??___fladd:
  1463  00001D                     ??___fldiv:
  1464  00001D                     ??_tolower:
  1465  00001D                     ??___fleq:
  1466  00001D                     ___fltol@sign1:
  1467                           	callstack 0
  1468  00001D                     ___xxtofl@sign:
  1469                           	callstack 0
  1470  00001D                     memset@k:
  1471                           	callstack 0
  1472  00001D                     ___fpclassifyf@e:
  1473                           	callstack 0
  1474  00001D                     strcpy@d:
  1475                           	callstack 0
  1476  00001D                     strncmp@n:
  1477                           	callstack 0
  1478  00001D                     ___lodiv@divisor:
  1479                           	callstack 0
  1480  00001D                     ___lomod@divisor:
  1481                           	callstack 0
  1482                           
  1483                           ; 8 bytes @ 0x1C
  1484  00001D                     	ds	1
  1485  00001E                     ??_atoi:
  1486  00001E                     ___fltol@exp1:
  1487                           	callstack 0
  1488  00001E                     ___xxtofl@exp:
  1489                           	callstack 0
  1490                           
  1491                           ; 1 bytes @ 0x1D
  1492  00001E                     	ds	1
  1493  00001F                     ??_strncmp:
  1494  00001F                     memset@s:
  1495                           	callstack 0
  1496  00001F                     ___xxtofl@arg:
  1497                           	callstack 0
  1498  00001F                     ___fpclassifyf@u:
  1499                           	callstack 0
  1500                           
  1501                           ; 4 bytes @ 0x1E
  1502  00001F                     	ds	1
  1503  000020                     ?_fputs:
  1504                           	callstack 0
  1505  000020                     ?_stoa:
  1506                           	callstack 0
  1507  000020                     stoa@fp:
  1508                           	callstack 0
  1509  000020                     fputs@s:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x1F
  1513  000020                     	ds	1
  1514  000021                     ___fladd@signs:
  1515                           	callstack 0
  1516  000021                     strncmp@l:
  1517                           	callstack 0
  1518  000021                     ___fldiv@rem:
  1519                           	callstack 0
  1520                           
  1521                           ; 4 bytes @ 0x20
  1522  000021                     	ds	1
  1523  000022                     ___fladd@aexp:
  1524                           	callstack 0
  1525  000022                     stoa@s:
  1526                           	callstack 0
  1527  000022                     atoi@neg:
  1528                           	callstack 0
  1529  000022                     fputs@fp:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x21
  1533  000022                     	ds	1
  1534  000023                     ?___flmul:
  1535                           	callstack 0
  1536  000023                     ___fladd@bexp:
  1537                           	callstack 0
  1538  000023                     strncmp@r:
  1539                           	callstack 0
  1540  000023                     ___flmul@b:
  1541                           	callstack 0
  1542                           
  1543                           ; 4 bytes @ 0x22
  1544  000023                     	ds	1
  1545  000024                     ??_fputs:
  1546  000024                     ??_stoa:
  1547  000024                     ___fladd@grs:
  1548                           	callstack 0
  1549  000024                     atoi@n:
  1550                           	callstack 0
  1551                           
  1552                           ; 2 bytes @ 0x23
  1553  000024                     	ds	1
  1554  000025                     ___lomod@counter:
  1555                           	callstack 0
  1556  000025                     ___fldiv@sign:
  1557                           	callstack 0
  1558  000025                     stoa@nuls:
  1559                           	callstack 0
  1560  000025                     ___lodiv@quotient:
  1561                           	callstack 0
  1562                           
  1563                           ; 8 bytes @ 0x24
  1564  000025                     	ds	1
  1565  000026                     fputs@c:
  1566                           	callstack 0
  1567  000026                     ___fldiv@new_exp:
  1568                           	callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x25
  1571  000026                     	ds	1
  1572  000027                     fputs@i:
  1573                           	callstack 0
  1574  000027                     ___flmul@a:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x26
  1578  000027                     	ds	1
  1579  000028                     ___fldiv@grs:
  1580                           	callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x27
  1583  000028                     	ds	1
  1584  000029                     ?_pad:
  1585                           	callstack 0
  1586  000029                     pad@fp:
  1587                           	callstack 0
  1588  000029                     puts@s:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x28
  1592  000029                     	ds	2
  1593  00002B                     ??___flmul:
  1594  00002B                     _puts$2836:
  1595                           	callstack 0
  1596  00002B                     pad@buf:
  1597                           	callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x2A
  1600  00002B                     	ds	1
  1601  00002C                     ___fldiv@bexp:
  1602                           	callstack 0
  1603  00002C                     fh_hw@a_data:
  1604                           	callstack 0
  1605  00002C                     fh_ho@a_data:
  1606                           	callstack 0
  1607  00002C                     linux_putc@data:
  1608                           	callstack 0
  1609  00002C                     stoa@i:
  1610                           	callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x2B
  1613  00002C                     	ds	1
  1614  00002D                     ___lodiv@counter:
  1615                           	callstack 0
  1616  00002D                     ___fldiv@aexp:
  1617                           	callstack 0
  1618  00002D                     pad@p:
  1619                           	callstack 0
  1620                           
  1621                           ; 2 bytes @ 0x2C
  1622  00002D                     	ds	1
  1623  00002E                     ?_floorf:
  1624                           	callstack 0
  1625  00002E                     linux_putc@a_len:
  1626                           	callstack 0
  1627  00002E                     __cli_interpret_cmd@a_ctx:
  1628                           	callstack 0
  1629  00002E                     stoa@w:
  1630                           	callstack 0
  1631  00002E                     floorf@x:
  1632                           	callstack 0
  1633                           
  1634                           ; 4 bytes @ 0x2D
  1635  00002E                     	ds	1
  1636  00002F                     ??_pad:
  1637  00002F                     ?___flsub:
  1638                           	callstack 0
  1639  00002F                     ___flge@ff1:
  1640                           	callstack 0
  1641  00002F                     ___flsub@b:
  1642                           	callstack 0
  1643                           
  1644                           ; 4 bytes @ 0x2E
  1645  00002F                     	ds	1
  1646  000030                     __cli_interpret_cmd@ret:
  1647                           	callstack 0
  1648  000030                     pad@i:
  1649                           	callstack 0
  1650  000030                     stoa@cp:
  1651                           	callstack 0
  1652                           
  1653                           ; 2 bytes @ 0x2F
  1654  000030                     	ds	1
  1655  000031                     __cli_interpret_cmd@i:
  1656                           	callstack 0
  1657                           
  1658                           ; 1 bytes @ 0x30
  1659  000031                     	ds	1
  1660  000032                     ??_floorf:
  1661  000032                     cli_read@a_ctx:
  1662                           	callstack 0
  1663  000032                     pad@w:
  1664                           	callstack 0
  1665  000032                     stoa@p:
  1666                           	callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x31
  1669  000032                     	ds	1
  1670  000033                     ___flge@ff2:
  1671                           	callstack 0
  1672  000033                     ___flsub@a:
  1673                           	callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x32
  1676  000033                     	ds	1
  1677  000034                     ??_cli_read:
  1678  000034                     stoa@l:
  1679                           	callstack 0
  1680                           
  1681                           ; 2 bytes @ 0x33
  1682  000034                     	ds	3
  1683  000037                     
  1684                           ; 1 bytes @ 0x36
  1685  000037                     	ds	1
  1686  000038                     vfprintf@cfmt:
  1687                           	callstack 0
  1688                           
  1689                           ; 1 bytes @ 0x37
  1690  000038                     	ds	1
  1691  000039                     
  1692                           ; 1 bytes @ 0x38
  1693 ;;
  1694 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1695 ;;
  1696 ;; *************** function _main *****************
  1697 ;; Defined at:
  1698 ;;		line 114 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  dac_v           1  120[BANK0 ] unsigned char 
  1703 ;;  mode_sw         1  119[BANK0 ] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 3F/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1715 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1716 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1717 ;;Total ram usage:        4 bytes
  1718 ;; Hardware stack levels required when called: 15
  1719 ;; This function calls:
  1720 ;;		_ADCC_SetADIInterruptHandler
  1721 ;;		_DAC1_GetOutput
  1722 ;;		_DAC1_SetOutput
  1723 ;;		_SYSTEM_Initialize
  1724 ;;		_TMR5_SetInterruptHandler
  1725 ;;		_TMR6_SetInterruptHandler
  1726 ;;		___flmul
  1727 ;;		___xxtofl
  1728 ;;		_cli_read
  1729 ;;		_display_led
  1730 ;;		_printf
  1731 ;;		_scmd_init
  1732 ;; This function is called by:
  1733 ;;		Startup code after reset
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text0
  1738  0039F6                     __ptext0:
  1739                           	callstack 0
  1740  0039F6                     _main:
  1741                           	callstack 16
  1742                           
  1743                           ;main.c: 116:  uint8_t dac_v = 0, mode_sw = 0;
  1744                           
  1745                           ;incstack = 0
  1746  0039F6  0E00               	movlw	0
  1747  0039F8  0100               	movlb	0	; () banked
  1748  0039FA  6FD8               	movwf	main@dac_v& (0+255),b
  1749  0039FC  0E00               	movlw	0
  1750  0039FE  6FD7               	movwf	main@mode_sw& (0+255),b
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;main.c: 118:  SYSTEM_Initialize();
  1754  003A00  EC5A  F02D         	call	_SYSTEM_Initialize	;wreg free
  1755                           
  1756                           ; BSR set to: 61
  1757  003A04  92BD               	bcf	189,1,c	;volatile
  1758                           
  1759                           ; BSR set to: 61
  1760  003A06  94BE               	bcf	190,2,c	;volatile
  1761                           
  1762                           ; BSR set to: 61
  1763                           ;main.c: 122:  TMR6_SetInterruptHandler(Led_Blink);
  1764  003A08  0EB0               	movlw	low _Led_Blink
  1765  003A0A  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  1766  003A0C  0E5B               	movlw	high _Led_Blink
  1767  003A0E  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  1768  003A10  0E00               	movlw	low (_Led_Blink shr (0+16))
  1769  003A12  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  1770  003A14  EC6F  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
  1771                           
  1772                           ;main.c: 123:  TMR5_SetInterruptHandler(Timers_Isr);
  1773  003A18  0E32               	movlw	low _Timers_Isr
  1774  003A1A  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  1775  003A1C  0E55               	movlw	high _Timers_Isr
  1776  003A1E  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  1777  003A20  0E00               	movlw	low (_Timers_Isr shr (0+16))
  1778  003A22  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  1779  003A24  EC76  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
  1780                           
  1781                           ;main.c: 124:  ADCC_SetADIInterruptHandler(Adc_Isr);
  1782  003A28  0E2E               	movlw	low _Adc_Isr
  1783  003A2A  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  1784  003A2C  0E59               	movlw	high _Adc_Isr
  1785  003A2E  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  1786  003A30  0E00               	movlw	low (_Adc_Isr shr (0+16))
  1787  003A32  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
  1788  003A34  EC7D  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
  1789                           
  1790                           ;main.c: 125:  ADPCH = adc_chan;
  1791  003A38  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
  1792                           
  1793                           ;main.c: 130:  scmd_init();
  1794  003A3E  EC02  F02E         	call	_scmd_init	;wreg free
  1795                           
  1796                           ;main.c: 133:  (INTCON0bits.GIEH = 1);
  1797  003A42  8ED2               	bsf	210,7,c	;volatile
  1798                           
  1799                           ;main.c: 138:  DAC1_SetOutput(dac_v);
  1800  003A44  0E00               	movlw	0
  1801  003A46  EC8F  F02E         	call	_DAC1_SetOutput
  1802  003A4A                     l10508:
  1803                           
  1804                           ;main.c: 141:   if (adc_tick) {
  1805  003A4A  0100               	movlb	0	; () banked
  1806  003A4C  51FB               	movf	_adc_tick& (0+255),w,b	;volatile
  1807  003A4E  B4D8               	btfsc	status,2,c
  1808  003A50  D7FC               	goto	l10508
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;main.c: 142:    if (ana[0] < 900) {
  1812  003A52  0E84               	movlw	132
  1813  003A54  5C39               	subwf	_ana^0,w,c	;volatile
  1814  003A56  0E03               	movlw	3
  1815  003A58  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1816  003A5A  B0D8               	btfsc	status,0,c
  1817  003A5C  D007               	goto	l10514
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;main.c: 143:     display_led(oo00_off);
  1821  003A5E  0E00               	movlw	0
  1822  003A60  EC80  F026         	call	_display_led
  1823                           
  1824                           ;main.c: 144:     display_led(oo30_off);
  1825  003A64  0E09               	movlw	9
  1826  003A66  EC80  F026         	call	_display_led
  1827                           
  1828                           ;main.c: 145:    } else {
  1829  003A6A  D013               	goto	l10520
  1830  003A6C                     l10514:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;main.c: 146:     if (ana[0] > 1800) {
  1834  003A6C  0E09               	movlw	9
  1835  003A6E  5C39               	subwf	_ana^0,w,c	;volatile
  1836  003A70  0E07               	movlw	7
  1837  003A72  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1838  003A74  A0D8               	btfss	status,0,c
  1839  003A76  D007               	goto	l10518
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;main.c: 147:      display_led(oo00_g);
  1843  003A78  0E01               	movlw	1
  1844  003A7A  EC80  F026         	call	_display_led
  1845                           
  1846                           ;main.c: 148:      display_led(oo30_g);
  1847  003A7E  0E0A               	movlw	10
  1848  003A80  EC80  F026         	call	_display_led
  1849                           
  1850                           ;main.c: 149:     } else {
  1851  003A84  D006               	goto	l10520
  1852  003A86                     l10518:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;main.c: 150:      display_led(oo00_r);
  1856  003A86  0E02               	movlw	2
  1857  003A88  EC80  F026         	call	_display_led
  1858                           
  1859                           ;main.c: 151:      display_led(oo30_r);
  1860  003A8C  0E0B               	movlw	11
  1861  003A8E  EC80  F026         	call	_display_led
  1862  003A92                     l10520:
  1863                           
  1864                           ;main.c: 155:    if (ana[1] < 50) {
  1865  003A92  503C               	movf	(_ana+3)^0,w,c	;volatile
  1866  003A94  E10B               	bnz	l10524
  1867  003A96  0E32               	movlw	50
  1868  003A98  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1869  003A9A  B0D8               	btfsc	status,0,c
  1870  003A9C  D007               	goto	l10524
  1871                           
  1872                           ;main.c: 156:     display_led(oo10_off);
  1873  003A9E  0E03               	movlw	3
  1874  003AA0  EC80  F026         	call	_display_led
  1875                           
  1876                           ;main.c: 157:     display_led(oo20_off);
  1877  003AA4  0E06               	movlw	6
  1878  003AA6  EC80  F026         	call	_display_led
  1879                           
  1880                           ;main.c: 158:    } else {
  1881  003AAA  D013               	goto	l10530
  1882  003AAC                     l10524:
  1883                           
  1884                           ;main.c: 159:     if (ana[1] > 150) {
  1885  003AAC  503C               	movf	(_ana+3)^0,w,c	;volatile
  1886  003AAE  E104               	bnz	u12340
  1887  003AB0  0E97               	movlw	151
  1888  003AB2  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1889  003AB4  A0D8               	btfss	status,0,c
  1890  003AB6  D007               	goto	l10528
  1891  003AB8                     u12340:
  1892                           
  1893                           ;main.c: 160:      display_led(oo10_g);
  1894  003AB8  0E04               	movlw	4
  1895  003ABA  EC80  F026         	call	_display_led
  1896                           
  1897                           ;main.c: 161:      display_led(oo20_g);
  1898  003ABE  0E07               	movlw	7
  1899  003AC0  EC80  F026         	call	_display_led
  1900                           
  1901                           ;main.c: 162:     } else {
  1902  003AC4  D006               	goto	l10530
  1903  003AC6                     l10528:
  1904                           
  1905                           ;main.c: 163:      display_led(oo10_r);
  1906  003AC6  0E05               	movlw	5
  1907  003AC8  EC80  F026         	call	_display_led
  1908                           
  1909                           ;main.c: 164:      display_led(oo20_r);
  1910  003ACC  0E08               	movlw	8
  1911  003ACE  EC80  F026         	call	_display_led
  1912  003AD2                     l10530:
  1913                           
  1914                           ;main.c: 167:    adc_tick = 0;
  1915  003AD2  0E00               	movlw	0
  1916  003AD4  0100               	movlb	0	; () banked
  1917  003AD6  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;main.c: 169:    if (disp_tick) {
  1921  003AD8  51FC               	movf	_disp_tick& (0+255),w,b	;volatile
  1922  003ADA  B4D8               	btfsc	status,2,c
  1923  003ADC  D7B6               	goto	l10508
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;main.c: 170:     vval = (double) ana[0] * 0.405194;
  1927  003ADE  C039  F015         	movff	_ana,___xxtofl@val	;volatile
  1928  003AE2  C03A  F016         	movff	_ana+1,___xxtofl@val+1	;volatile
  1929  003AE6  6A17               	clrf	(___xxtofl@val+2)^0,c
  1930  003AE8  6A18               	clrf	(___xxtofl@val+3)^0,c
  1931  003AEA  0E00               	movlw	0
  1932  003AEC  EC52  F023         	call	___xxtofl
  1933  003AF0  C015  F023         	movff	?___xxtofl,___flmul@b
  1934  003AF4  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  1935  003AF8  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  1936  003AFC  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  1937  003B00  0E97               	movlw	151
  1938  003B02  6E27               	movwf	___flmul@a^0,c
  1939  003B04  0E75               	movlw	117
  1940  003B06  6E28               	movwf	(___flmul@a+1)^0,c
  1941  003B08  0ECF               	movlw	207
  1942  003B0A  6E29               	movwf	(___flmul@a+2)^0,c
  1943  003B0C  0E3E               	movlw	62
  1944  003B0E  6E2A               	movwf	(___flmul@a+3)^0,c
  1945  003B10  EC88  F018         	call	___flmul	;wreg free
  1946  003B14  C023  F0D9         	movff	?___flmul,_vval
  1947  003B18  C024  F0DA         	movff	?___flmul+1,_vval+1
  1948  003B1C  C025  F0DB         	movff	?___flmul+2,_vval+2
  1949  003B20  C026  F0DC         	movff	?___flmul+3,_vval+3
  1950                           
  1951                           ;main.c: 171:     ival = (double) ana[1] * 0.004;
  1952  003B24  C03B  F015         	movff	_ana+2,___xxtofl@val	;volatile
  1953  003B28  C03C  F016         	movff	_ana+3,___xxtofl@val+1	;volatile
  1954  003B2C  6A17               	clrf	(___xxtofl@val+2)^0,c
  1955  003B2E  6A18               	clrf	(___xxtofl@val+3)^0,c
  1956  003B30  0E00               	movlw	0
  1957  003B32  EC52  F023         	call	___xxtofl
  1958  003B36  C015  F023         	movff	?___xxtofl,___flmul@b
  1959  003B3A  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  1960  003B3E  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  1961  003B42  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  1962  003B46  0E6F               	movlw	111
  1963  003B48  6E27               	movwf	___flmul@a^0,c
  1964  003B4A  0E12               	movlw	18
  1965  003B4C  6E28               	movwf	(___flmul@a+1)^0,c
  1966  003B4E  0E83               	movlw	131
  1967  003B50  6E29               	movwf	(___flmul@a+2)^0,c
  1968  003B52  0E3B               	movlw	59
  1969  003B54  6E2A               	movwf	(___flmul@a+3)^0,c
  1970  003B56  EC88  F018         	call	___flmul	;wreg free
  1971  003B5A  C023  F194         	movff	?___flmul,_ival
  1972  003B5E  C024  F195         	movff	?___flmul+1,_ival+1
  1973  003B62  C025  F196         	movff	?___flmul+2,_ival+2
  1974  003B66  C026  F197         	movff	?___flmul+3,_ival+3
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;main.c: 172:     printf(" PS Test %1u: DAC OUT=%2u, Supply ReadBack %4u V=%+5.1fV %4u I
      +                          =%+3.1fmA\r\n", mode, (uint16_t) DAC1_GetOutput(), ana[0], vval, ana[1], ival);
  1978  003B6A  0E22               	movlw	low STR_5
  1979  003B6C  0102               	movlb	2	; () banked
  1980  003B6E  6FC3               	movwf	printf@fmt& (0+255),b
  1981  003B70  C0FD  F2C4         	movff	_mode,?_printf+1
  1982  003B74  6BC5               	clrf	(?_printf+2)& (0+255),b
  1983  003B76  EC94  F02E         	call	_DAC1_GetOutput	;wreg free
  1984  003B7A  0100               	movlb	0	; () banked
  1985  003B7C  6FD5               	movwf	??_main& (0+255),b
  1986  003B7E  51D5               	movf	??_main& (0+255),w,b
  1987  003B80  0102               	movlb	2	; () banked
  1988  003B82  6FC6               	movwf	(?_printf+3)& (0+255),b
  1989  003B84  6BC7               	clrf	(?_printf+4)& (0+255),b
  1990  003B86  C039  F2C8         	movff	_ana,?_printf+5	;volatile
  1991  003B8A  C03A  F2C9         	movff	_ana+1,?_printf+6	;volatile
  1992  003B8E  C0D9  F2CA         	movff	_vval,?_printf+7
  1993  003B92  C0DA  F2CB         	movff	_vval+1,?_printf+8
  1994  003B96  C0DB  F2CC         	movff	_vval+2,?_printf+9
  1995  003B9A  C0DC  F2CD         	movff	_vval+3,?_printf+10
  1996  003B9E  C03B  F2CE         	movff	_ana+2,?_printf+11	;volatile
  1997  003BA2  C03C  F2CF         	movff	_ana+3,?_printf+12	;volatile
  1998  003BA6  C194  F2D0         	movff	_ival,?_printf+13
  1999  003BAA  C195  F2D1         	movff	_ival+1,?_printf+14
  2000  003BAE  C196  F2D2         	movff	_ival+2,?_printf+15
  2001  003BB2  C197  F2D3         	movff	_ival+3,?_printf+16
  2002  003BB6  ECA5  F02D         	call	_printf	;wreg free
  2003                           
  2004                           ;main.c: 175:     switch (mode) {
  2005  003BBA  D01A               	goto	l10560
  2006  003BBC                     l10538:
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;main.c: 177:      if (dac_v > 19) {
  2010  003BBC  0E13               	movlw	19
  2011  003BBE  65D8               	cpfsgt	main@dac_v& (0+255),b
  2012  003BC0  D002               	goto	l10542
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;main.c: 178:       dac_v = 0;
  2016  003BC2  0E00               	movlw	0
  2017  003BC4  6FD8               	movwf	main@dac_v& (0+255),b
  2018  003BC6                     l10542:
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;main.c: 180:      DAC1_SetOutput(++dac_v);
  2022  003BC6  2BD8               	incf	main@dac_v& (0+255),f,b
  2023  003BC8  51D8               	movf	main@dac_v& (0+255),w,b
  2024  003BCA  EC8F  F02E         	call	_DAC1_SetOutput
  2025  003BCE  D005               	goto	l10550
  2026  003BD0                     l10546:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;main.c: 184:      dac_v = 20;
  2030  003BD0  0E14               	movlw	20
  2031  003BD2  6FD8               	movwf	main@dac_v& (0+255),b
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 185:      DAC1_SetOutput(dac_v);
  2035  003BD4  0E14               	movlw	20
  2036  003BD6  EC8F  F02E         	call	_DAC1_SetOutput
  2037  003BDA                     l10550:
  2038  003BDA  82BD               	bsf	189,1,c	;volatile
  2039  003BDC  D01B               	goto	l10562
  2040  003BDE                     l10552:
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;main.c: 190:      mode = off_mode;
  2044  003BDE  0E00               	movlw	0
  2045  003BE0  6FFD               	movwf	_mode& (0+255),b
  2046                           
  2047                           ;main.c: 191:      dac_v = 0;
  2048  003BE2  0E00               	movlw	0
  2049  003BE4  6FD8               	movwf	main@dac_v& (0+255),b
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;main.c: 192:      DAC1_SetOutput(dac_v);
  2053  003BE6  0E00               	movlw	0
  2054  003BE8  EC8F  F02E         	call	_DAC1_SetOutput
  2055  003BEC  92BD               	bcf	189,1,c	;volatile
  2056  003BEE  D012               	goto	l10562
  2057  003BF0                     l10560:
  2058                           
  2059                           ; BSR set to: 0
  2060  003BF0  51FD               	movf	_mode& (0+255),w,b
  2061  003BF2  6FD5               	movwf	??_main& (0+255),b
  2062  003BF4  6BD6               	clrf	(??_main+1)& (0+255),b
  2063                           
  2064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2065                           ; Switch size 1, requested type "simple"
  2066                           ; Number of cases is 1, Range of values is 0 to 0
  2067                           ; switch strategies available:
  2068                           ; Name         Instructions Cycles
  2069                           ; simple_byte            4     3 (average)
  2070                           ;	Chosen strategy is simple_byte
  2071  003BF6  51D6               	movf	(??_main+1)& (0+255),w,b
  2072  003BF8  0A00               	xorlw	0	; case 0
  2073  003BFA  A4D8               	btfss	status,2,c
  2074  003BFC  D7F0               	goto	l10552
  2075                           
  2076                           ; BSR set to: 0
  2077                           ; Switch size 1, requested type "simple"
  2078                           ; Number of cases is 3, Range of values is 0 to 2
  2079                           ; switch strategies available:
  2080                           ; Name         Instructions Cycles
  2081                           ; simple_byte           10     6 (average)
  2082                           ;	Chosen strategy is simple_byte
  2083  003BFE  51D5               	movf	??_main& (0+255),w,b
  2084  003C00  0A00               	xorlw	0	; case 0
  2085  003C02  B4D8               	btfsc	status,2,c
  2086  003C04  D7EC               	goto	l10552
  2087  003C06  0A01               	xorlw	1	; case 1
  2088  003C08  B4D8               	btfsc	status,2,c
  2089  003C0A  D7D8               	goto	l10538
  2090  003C0C  0A03               	xorlw	3	; case 2
  2091  003C0E  B4D8               	btfsc	status,2,c
  2092  003C10  D7DF               	goto	l10546
  2093  003C12  D7E5               	goto	l10552
  2094  003C14                     l10562:
  2095                           
  2096                           ;main.c: 201:     cli_read(&cli_ctx);
  2097  003C14  0E40               	movlw	low _cli_ctx
  2098  003C16  6E32               	movwf	cli_read@a_ctx^0,c
  2099  003C18  0E02               	movlw	high _cli_ctx
  2100  003C1A  6E33               	movwf	(cli_read@a_ctx+1)^0,c
  2101  003C1C  EC5D  F021         	call	_cli_read	;wreg free
  2102                           
  2103                           ;main.c: 202:     disp_tick = 0;
  2104  003C20  0E00               	movlw	0
  2105  003C22  0100               	movlb	0	; () banked
  2106  003C24  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;main.c: 203:     if (!PORTBbits.RB0) {
  2110  003C26  B0CB               	btfsc	203,0,c	;volatile
  2111  003C28  D005               	goto	l10572
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;main.c: 204:      if (++mode_sw > 4) {
  2115  003C2A  2BD7               	incf	main@mode_sw& (0+255),f,b
  2116  003C2C  0E04               	movlw	4
  2117  003C2E  65D7               	cpfsgt	main@mode_sw& (0+255),b
  2118  003C30  D70C               	goto	l10508
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;main.c: 205:       mode++;
  2122  003C32  2BFD               	incf	_mode& (0+255),f,b
  2123  003C34                     l10572:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;main.c: 206:       mode_sw = 0;
  2127  003C34  0E00               	movlw	0
  2128  003C36  6FD7               	movwf	main@mode_sw& (0+255),b
  2129                           
  2130                           ; BSR set to: 0
  2131                           
  2132                           ;main.c: 212:   }
  2133  003C38  D708               	goto	l10508
  2134  003C3A                     __end_of_main:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _scmd_init *****************
  2138 ;; Defined at:
  2139 ;;		line 32 in file "scdm.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 3B/3D
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 14
  2160 ;; This function calls:
  2161 ;;		_cli_init
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text1
  2168  005C04                     __ptext1:
  2169                           	callstack 0
  2170  005C04                     _scmd_init:
  2171                           	callstack 16
  2172                           
  2173                           ;scdm.c: 34:  cli_init(&cli_ctx, g_cmds);
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;incstack = 0
  2177  005C04  0E40               	movlw	low _cli_ctx
  2178  005C06  0102               	movlb	2	; () banked
  2179  005C08  6FD7               	movwf	cli_init@a_ctx& (0+255),b
  2180  005C0A  0E02               	movlw	high _cli_ctx
  2181  005C0C  6FD8               	movwf	(cli_init@a_ctx+1)& (0+255),b
  2182  005C0E  0EEF               	movlw	low _g_cmds
  2183  005C10  6FD9               	movwf	cli_init@a_cmds& (0+255),b
  2184  005C12  0E01               	movlw	high _g_cmds
  2185  005C14  6FDA               	movwf	(cli_init@a_cmds+1)& (0+255),b
  2186  005C16  EC17  F029         	call	_cli_init	;wreg free
  2187  005C1A  0012               	return		;funcret
  2188  005C1C                     __end_of_scmd_init:
  2189                           	callstack 0
  2190                           
  2191 ;; *************** function _cli_init *****************
  2192 ;; Defined at:
  2193 ;;		line 20 in file "scdm.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  a_ctx           2   20[BANK2 ] PTR struct _t_cli_ctx
  2196 ;;		 -> cli_ctx(131), 
  2197 ;;  a_cmds          2   22[BANK2 ] PTR struct _t_cmd
  2198 ;;		 -> g_cmds(16), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 3F/2
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2210 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2213 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2214 ;;Total ram usage:        4 bytes
  2215 ;; Hardware stack levels used: 1
  2216 ;; Hardware stack levels required when called: 13
  2217 ;; This function calls:
  2218 ;;		_memset
  2219 ;;		_puts
  2220 ;;		_sprintf
  2221 ;; This function is called by:
  2222 ;;		_scmd_init
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text2
  2227  00522E                     __ptext2:
  2228                           	callstack 0
  2229  00522E                     _cli_init:
  2230                           	callstack 16
  2231                           
  2232                           ; BSR set to: 2
  2233                           ;scdm.c: 20: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 21: {;scdm.c:
      +                           22:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  2234                           
  2235                           ;incstack = 0
  2236  00522E  C2D7  F015         	movff	cli_init@a_ctx,memset@dest
  2237  005232  C2D8  F016         	movff	cli_init@a_ctx+1,memset@dest+1
  2238  005236  0E00               	movlw	0
  2239  005238  6E18               	movwf	(memset@c+1)^0,c
  2240  00523A  0E00               	movlw	0
  2241  00523C  6E17               	movwf	memset@c^0,c
  2242  00523E  0E00               	movlw	0
  2243  005240  6E1A               	movwf	(memset@n+1)^0,c
  2244  005242  0E83               	movlw	131
  2245  005244  6E19               	movwf	memset@n^0,c
  2246  005246  EC08  F022         	call	_memset	;wreg free
  2247                           
  2248                           ;scdm.c: 23:  a_ctx->cmds = a_cmds;
  2249  00524A  0060  FB5F  FFD9   	movff	cli_init@a_ctx,fsr2l
  2250  005250  0060  FB63  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  2251  005256  0060  FB67  FFDE   	movff	cli_init@a_cmds,postinc2
  2252  00525C  0060  FB6B  FFDD   	movff	cli_init@a_cmds+1,postdec2
  2253  005262  0E02               	movlw	2
  2254  005264  0102               	movlb	2	; () banked
  2255  005266  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2256  005268  6FC3               	movwf	sprintf@s& (0+255),b
  2257  00526A  0E00               	movlw	0
  2258  00526C  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2259  00526E  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  2260  005270  0E6C               	movlw	low STR_9
  2261  005272  6FC5               	movwf	sprintf@fmt& (0+255),b
  2262  005274  0E81               	movlw	low STR_1
  2263  005276  6FC6               	movwf	(?_sprintf+3)& (0+255),b
  2264  005278  51C6               	movf	(?_sprintf+3)& (0+255),w,b
  2265  00527A  A4D8               	btfss	status,2,c
  2266  00527C  0E20               	movlw	high __smallconst
  2267  00527E  6FC7               	movwf	(?_sprintf+4)& (0+255),b
  2268  005280  0EA1               	movlw	low STR_2
  2269  005282  6FC8               	movwf	(?_sprintf+5)& (0+255),b
  2270  005284  51C8               	movf	(?_sprintf+5)& (0+255),w,b
  2271  005286  A4D8               	btfss	status,2,c
  2272  005288  0E20               	movlw	high __smallconst
  2273  00528A  6FC9               	movwf	(?_sprintf+6)& (0+255),b
  2274  00528C  ECC2  F02A         	call	_sprintf	;wreg free
  2275                           
  2276                           ; BSR set to: 2
  2277                           ;scdm.c: 28:  puts(a_ctx->cmd);
  2278  005290  0E02               	movlw	2
  2279  005292  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2280  005294  6E29               	movwf	puts@s^0,c
  2281  005296  0E00               	movlw	0
  2282  005298  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2283  00529A  6E2A               	movwf	(puts@s+1)^0,c
  2284  00529C  EC7A  F02C         	call	_puts	;wreg free
  2285                           
  2286                           ;scdm.c: 29:  puts(cmdm);
  2287  0052A0  0E06               	movlw	low _cmdm
  2288  0052A2  6E29               	movwf	puts@s^0,c
  2289  0052A4  5029               	movf	puts@s^0,w,c
  2290  0052A6  A4D8               	btfss	status,2,c
  2291  0052A8  0E20               	movlw	high __smallconst
  2292  0052AA  6E2A               	movwf	(puts@s+1)^0,c
  2293  0052AC  EC7A  F02C         	call	_puts	;wreg free
  2294  0052B0  0012               	return		;funcret
  2295  0052B2                     __end_of_cli_init:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function _sprintf *****************
  2299 ;; Defined at:
  2300 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  s               2    0[BANK2 ] PTR unsigned char 
  2303 ;;		 -> cli_ctx(131), 
  2304 ;;  fmt             1    2[BANK2 ] PTR const unsigned char 
  2305 ;;		 -> STR_9(21), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  f              11    9[BANK2 ] struct _IO_FILE
  2308 ;;  ap              2    7[BANK2 ] PTR void [1]
  2309 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2310 ;;  ret             2    0        int 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  2    0[BANK2 ] int 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 3F/2
  2317 ;;		On exit  : 3F/2
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2320 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2321 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2323 ;;      Totals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2324 ;;Total ram usage:       20 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; Hardware stack levels required when called: 12
  2327 ;; This function calls:
  2328 ;;		_vfprintf
  2329 ;; This function is called by:
  2330 ;;		_cli_init
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text3
  2335  005584                     __ptext3:
  2336                           	callstack 0
  2337  005584                     _sprintf:
  2338                           	callstack 16
  2339                           
  2340                           ; BSR set to: 2
  2341                           
  2342                           ;incstack = 0
  2343  005584  0EC6               	movlw	low (?_sprintf+3)
  2344  005586  6FCA               	movwf	sprintf@ap& (0+255),b
  2345  005588  0E02               	movlw	high (?_sprintf+3)
  2346  00558A  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  2347  00558C  C2C3  F2CC         	movff	sprintf@s,sprintf@f
  2348  005590  C2C4  F2CD         	movff	sprintf@s+1,sprintf@f+1
  2349                           
  2350                           ; BSR set to: 2
  2351  005594  0E00               	movlw	0
  2352  005596  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  2353  005598  0E00               	movlw	0
  2354  00559A  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  2355                           
  2356                           ; BSR set to: 2
  2357  00559C  0E00               	movlw	0
  2358  00559E  6FD6               	movwf	(sprintf@f+10)& (0+255),b
  2359  0055A0  0E00               	movlw	0
  2360  0055A2  6FD5               	movwf	(sprintf@f+9)& (0+255),b
  2361                           
  2362                           ; BSR set to: 2
  2363  0055A4  0ECC               	movlw	low sprintf@f
  2364  0055A6  0100               	movlb	0	; () banked
  2365  0055A8  6FCE               	movwf	vfprintf@fp& (0+255),b
  2366  0055AA  0E02               	movlw	high sprintf@f
  2367  0055AC  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2368  0055AE  C2C5  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  2369  0055B2  0ECA               	movlw	low sprintf@ap
  2370  0055B4  6FD1               	movwf	vfprintf@ap& (0+255),b
  2371  0055B6  0E02               	movlw	high sprintf@ap
  2372  0055B8  6FD2               	movwf	(vfprintf@ap+1)& (0+255),b
  2373  0055BA  EC70  F02A         	call	_vfprintf	;wreg free
  2374                           
  2375                           ; BSR set to: 0
  2376  0055BE  0102               	movlb	2	; () banked
  2377  0055C0  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  2378  0055C2  25C3               	addwf	sprintf@s& (0+255),w,b
  2379  0055C4  6ED9               	movwf	fsr2l,c
  2380  0055C6  51D0               	movf	(sprintf@f+4)& (0+255),w,b
  2381  0055C8  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  2382  0055CA  6EDA               	movwf	fsr2h,c
  2383  0055CC  0E00               	movlw	0
  2384  0055CE  6EDF               	movwf	indf2,c
  2385                           
  2386                           ; BSR set to: 2
  2387  0055D0  0012               	return		;funcret
  2388  0055D2                     __end_of_sprintf:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _printf *****************
  2392 ;; Defined at:
  2393 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  fmt             1    0[BANK2 ] PTR const unsigned char 
  2396 ;;		 -> STR_5(74), 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  ap              2  115[BANK0 ] PTR void [1]
  2399 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2400 ;;  ret             2    0        int 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  2    0[BANK2 ] int 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 3F/2
  2407 ;;		On exit  : 3F/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2410 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2413 ;;      Totals:         0       2       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2414 ;;Total ram usage:       19 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 12
  2417 ;; This function calls:
  2418 ;;		_vfprintf
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text4
  2425  005B4A                     __ptext4:
  2426                           	callstack 0
  2427  005B4A                     _printf:
  2428                           	callstack 18
  2429                           
  2430                           ; BSR set to: 2
  2431                           
  2432                           ; BSR set to: 2
  2433                           ;incstack = 0
  2434  005B4A  0EC4               	movlw	low (?_printf+1)
  2435  005B4C  0100               	movlb	0	; () banked
  2436  005B4E  6FD3               	movwf	printf@ap& (0+255),b
  2437  005B50  0E02               	movlw	high (?_printf+1)
  2438  005B52  6FD4               	movwf	(printf@ap+1)& (0+255),b
  2439                           
  2440                           ; BSR set to: 0
  2441  005B54  0E00               	movlw	0
  2442  005B56  6FCE               	movwf	vfprintf@fp& (0+255),b
  2443  005B58  0E00               	movlw	0
  2444  005B5A  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2445  005B5C  C2C3  F0D0         	movff	printf@fmt,vfprintf@fmt
  2446  005B60  0ED3               	movlw	low printf@ap
  2447  005B62  6FD1               	movwf	vfprintf@ap& (0+255),b
  2448  005B64  6BD2               	clrf	(vfprintf@ap+1)& (0+255),b
  2449  005B66  EC70  F02A         	call	_vfprintf	;wreg free
  2450                           
  2451                           ; BSR set to: 0
  2452  005B6A  0012               	return		;funcret
  2453  005B6C                     __end_of_printf:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _vfprintf *****************
  2457 ;; Defined at:
  2458 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  fp              2  110[BANK0 ] PTR struct _IO_FILE
  2461 ;;		 -> sprintf@f(11), NULL(0), 
  2462 ;;  fmt             1  112[BANK0 ] PTR const unsigned char 
  2463 ;;		 -> STR_9(21), STR_5(74), 
  2464 ;;  ap              2  113[BANK0 ] PTR PTR void 
  2465 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  cfmt            1   55[COMRAM] PTR unsigned char 
  2468 ;;		 -> STR_9(21), STR_5(74), 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  2  110[BANK0 ] int 
  2471 ;; Registers used:
  2472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 3F/0
  2475 ;;		On exit  : 3F/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2478 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2481 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2482 ;;Total ram usage:        6 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 11
  2485 ;; This function calls:
  2486 ;;		_vfpfcnvrt
  2487 ;; This function is called by:
  2488 ;;		_sprintf
  2489 ;;		_printf
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text5
  2494  0054E0                     __ptext5:
  2495                           	callstack 0
  2496  0054E0                     _vfprintf:
  2497                           	callstack 16
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;incstack = 0
  2504  0054E0  C0D0  F038         	movff	vfprintf@fmt,vfprintf@cfmt
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2508  0054E4  0E00               	movlw	0
  2509  0054E6  6FF6               	movwf	(_nout+1)& (0+255),b
  2510  0054E8  0E00               	movlw	0
  2511  0054EA  6FF5               	movwf	_nout& (0+255),b
  2512                           
  2513                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2514  0054EC  D011               	goto	l10090
  2515  0054EE                     l10088:
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2519  0054EE  C0CE  F0AF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2520  0054F2  C0CF  F0B0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2521  0054F6  0E38               	movlw	low vfprintf@cfmt
  2522  0054F8  6FB1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2523  0054FA  C0D1  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2524  0054FE  C0D2  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2525  005502  EC4C  F015         	call	_vfpfcnvrt	;wreg free
  2526  005506  0100               	movlb	0	; () banked
  2527  005508  51AF               	movf	?_vfpfcnvrt& (0+255),w,b
  2528  00550A  27F5               	addwf	_nout& (0+255),f,b
  2529  00550C  51B0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2530  00550E  23F6               	addwfc	(_nout+1)& (0+255),f,b
  2531  005510                     l10090:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2535  005510  0060  F0E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  2536  005516                     	if	1	;There is more than 1 active tblptr byte
  2537  005516  0E20               	movlw	high __smallconst
  2538  005518  6EF7               	movwf	tblptrh,c
  2539  00551A                     	endif
  2540  00551A                     	if	0	;tblptru may be non-zero
  2541  00551A                     	endif
  2542  00551A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2543  00551A  0E00               	movlw	low (__smallconst shr (0+16))
  2544  00551C  6EF8               	movwf	tblptru,c
  2545  00551E                     	endif
  2546  00551E  0008               	tblrd		*
  2547  005520  50F5               	movf	tablat,w,c
  2548  005522  0900               	iorlw	0
  2549  005524  A4D8               	btfss	status,2,c
  2550  005526  D7E3               	goto	l10088
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2554  005528  C0F5  F0CE         	movff	_nout,?_vfprintf
  2555  00552C  C0F6  F0CF         	movff	_nout+1,?_vfprintf+1
  2556                           
  2557                           ; BSR set to: 0
  2558  005530  0012               	return		;funcret
  2559  005532                     __end_of_vfprintf:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function _vfpfcnvrt *****************
  2563 ;; Defined at:
  2564 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  2567 ;;		 -> sprintf@f(11), NULL(0), 
  2568 ;;  fmt             1   81[BANK0 ] PTR PTR unsigned char 
  2569 ;;		 -> vfprintf@cfmt(1), 
  2570 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2571 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  llu             8   88[BANK0 ] unsigned long long 
  2574 ;;  ll              8    0        long long 
  2575 ;;  f               4  103[BANK0 ] long long 
  2576 ;;  ct              3  107[BANK0 ] unsigned char [3]
  2577 ;;  vp              3    0        PTR void 
  2578 ;;  done            2   98[BANK0 ] int 
  2579 ;;  cp              2   96[BANK0 ] PTR unsigned char 
  2580 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  2581 ;;  i               2    0        int 
  2582 ;;  c               1  102[BANK0 ] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2   79[BANK0 ] int 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 3F/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2592 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2593 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2594 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2595 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2596 ;;Total ram usage:       31 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 10
  2599 ;; This function calls:
  2600 ;;		_atoi
  2601 ;;		_efgtoa
  2602 ;;		_fputc
  2603 ;;		_isdigit
  2604 ;;		_isupper
  2605 ;;		_stoa
  2606 ;;		_strncmp
  2607 ;;		_tolower
  2608 ;;		_utoa
  2609 ;; This function is called by:
  2610 ;;		_vfprintf
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text6
  2615  002A98                     __ptext6:
  2616                           	callstack 0
  2617  002A98                     _vfpfcnvrt:
  2618                           	callstack 16
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;incstack = 0
  2625  002A98  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2626  002A9A  6ED9               	movwf	fsr2l,c
  2627  002A9C  6ADA               	clrf	fsr2h,c
  2628  002A9E  006F FF7F FFF6     	movff	indf2,tblptrl
  2629  002AA4                     	if	1	;There is more than 1 active tblptr byte
  2630  002AA4  0E20               	movlw	high __smallconst
  2631  002AA6  6EF7               	movwf	tblptrh,c
  2632  002AA8                     	endif
  2633  002AA8                     	if	0	;tblptru may be non-zero
  2634  002AA8                     	endif
  2635  002AA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2636  002AA8  0E00               	movlw	low (__smallconst shr (0+16))
  2637  002AAA  6EF8               	movwf	tblptru,c
  2638  002AAC                     	endif
  2639  002AAC  0008               	tblrd		*
  2640  002AAE  50F5               	movf	tablat,w,c
  2641  002AB0  0A25               	xorlw	37
  2642  002AB2  A4D8               	btfss	status,2,c
  2643  002AB4  D313               	goto	l10062
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2647  002AB6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2648  002AB8  6ED9               	movwf	fsr2l,c
  2649  002ABA  6ADA               	clrf	fsr2h,c
  2650  002ABC  2ADF               	incf	indf2,f,c
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2654  002ABE  0E00               	movlw	0
  2655  002AC0  6FF8               	movwf	(_width+1)& (0+255),b
  2656  002AC2  0E00               	movlw	0
  2657  002AC4  6FF7               	movwf	_width& (0+255),b
  2658  002AC6  C0F7  F03D         	movff	_width,_flags
  2659  002ACA  C0F8  F03E         	movff	_width+1,_flags+1
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2663  002ACE  69F9               	setf	_prec& (0+255),b
  2664  002AD0  69FA               	setf	(_prec+1)& (0+255),b
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  2668  002AD2  0E00               	movlw	0
  2669  002AD4  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2670  002AD6  0E00               	movlw	0
  2671  002AD8  D011               	goto	L1
  2672  002ADA                     l9916:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  2676  002ADA  803D               	bsf	_flags^0,0,c
  2677  002ADC                     l9918:
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  2681  002ADC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2682  002ADE  6ED9               	movwf	fsr2l,c
  2683  002AE0  6ADA               	clrf	fsr2h,c
  2684  002AE2  2ADF               	incf	indf2,f,c
  2685                           
  2686                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  2687  002AE4  D030               	goto	l9942
  2688  002AE6                     l9920:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  2692  002AE6  823D               	bsf	_flags^0,1,c
  2693  002AE8  D7F9               	goto	l9918
  2694  002AEA                     l9924:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  2698  002AEA  843D               	bsf	_flags^0,2,c
  2699  002AEC  D7F7               	goto	l9918
  2700  002AEE                     l9928:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  2704  002AEE  863D               	bsf	_flags^0,3,c
  2705  002AF0  D7F5               	goto	l9918
  2706  002AF2                     l9932:
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  2710  002AF2  883D               	bsf	_flags^0,4,c
  2711  002AF4  D7F3               	goto	l9918
  2712  002AF6                     l9936:
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  2716  002AF6  0E00               	movlw	0
  2717  002AF8  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2718  002AFA  0E01               	movlw	1
  2719  002AFC                     L1:
  2720  002AFC  6FC2               	movwf	vfpfcnvrt@done& (0+255),b
  2721                           
  2722                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  2723  002AFE  D023               	goto	l9942
  2724  002B00                     l9940:
  2725                           
  2726                           ; BSR set to: 0
  2727  002B00  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2728  002B02  6ED9               	movwf	fsr2l,c
  2729  002B04  6ADA               	clrf	fsr2h,c
  2730  002B06  006F FF7F FFF6     	movff	indf2,tblptrl
  2731  002B0C                     	if	1	;There is more than 1 active tblptr byte
  2732  002B0C  0E20               	movlw	high __smallconst
  2733  002B0E  6EF7               	movwf	tblptrh,c
  2734  002B10                     	endif
  2735  002B10                     	if	0	;tblptru may be non-zero
  2736  002B10                     	endif
  2737  002B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2738  002B10  0E00               	movlw	low (__smallconst shr (0+16))
  2739  002B12  6EF8               	movwf	tblptru,c
  2740  002B14                     	endif
  2741  002B14  0008               	tblrd		*
  2742  002B16  50F5               	movf	tablat,w,c
  2743  002B18  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2744  002B1A  6BB5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2745                           
  2746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2747                           ; Switch size 1, requested type "simple"
  2748                           ; Number of cases is 1, Range of values is 0 to 0
  2749                           ; switch strategies available:
  2750                           ; Name         Instructions Cycles
  2751                           ; simple_byte            4     3 (average)
  2752                           ;	Chosen strategy is simple_byte
  2753  002B1C  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2754  002B1E  0A00               	xorlw	0	; case 0
  2755  002B20  A4D8               	btfss	status,2,c
  2756  002B22  D7E9               	goto	l9936
  2757                           
  2758                           ; BSR set to: 0
  2759                           ; Switch size 1, requested type "simple"
  2760                           ; Number of cases is 5, Range of values is 32 to 48
  2761                           ; switch strategies available:
  2762                           ; Name         Instructions Cycles
  2763                           ; simple_byte           16     9 (average)
  2764                           ;	Chosen strategy is simple_byte
  2765  002B24  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2766  002B26  0A20               	xorlw	32	; case 32
  2767  002B28  B4D8               	btfsc	status,2,c
  2768  002B2A  D7E1               	goto	l9928
  2769  002B2C  0A03               	xorlw	3	; case 35
  2770  002B2E  B4D8               	btfsc	status,2,c
  2771  002B30  D7E0               	goto	l9932
  2772  002B32  0A08               	xorlw	8	; case 43
  2773  002B34  B4D8               	btfsc	status,2,c
  2774  002B36  D7D9               	goto	l9924
  2775  002B38  0A06               	xorlw	6	; case 45
  2776  002B3A  B4D8               	btfsc	status,2,c
  2777  002B3C  D7CE               	goto	l9916
  2778  002B3E  0A1D               	xorlw	29	; case 48
  2779  002B40  B4D8               	btfsc	status,2,c
  2780  002B42  D7D1               	goto	l9920
  2781  002B44  D7D8               	goto	l9936
  2782  002B46                     l9942:
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2786  002B46  51C2               	movf	vfpfcnvrt@done& (0+255),w,b
  2787  002B48  11C3               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2788  002B4A  B4D8               	btfsc	status,2,c
  2789  002B4C  D7D9               	goto	l9940
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  2793  002B4E  B03D               	btfsc	_flags^0,0,c
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  2797  002B50  923D               	bcf	_flags^0,1,c
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  2801  002B52  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2802  002B54  6ED9               	movwf	fsr2l,c
  2803  002B56  6ADA               	clrf	fsr2h,c
  2804  002B58  006F FF7F FFF6     	movff	indf2,tblptrl
  2805  002B5E                     	if	1	;There is more than 1 active tblptr byte
  2806  002B5E  0E20               	movlw	high __smallconst
  2807  002B60  6EF7               	movwf	tblptrh,c
  2808  002B62                     	endif
  2809  002B62                     	if	0	;tblptru may be non-zero
  2810  002B62                     	endif
  2811  002B62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2812  002B62  0E00               	movlw	low (__smallconst shr (0+16))
  2813  002B64  6EF8               	movwf	tblptru,c
  2814  002B66                     	endif
  2815  002B66  0008               	tblrd		*
  2816  002B68  50F5               	movf	tablat,w,c
  2817  002B6A  0A2A               	xorlw	42
  2818  002B6C  A4D8               	btfss	status,2,c
  2819  002B6E  D028               	goto	l9954
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  2823  002B70  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2824  002B72  6ED9               	movwf	fsr2l,c
  2825  002B74  6ADA               	clrf	fsr2h,c
  2826  002B76  2ADF               	incf	indf2,f,c
  2827                           
  2828                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2829  002B78  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2830  002B7E  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2831  002B84  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  2832  002B8A  0E02               	movlw	2
  2833  002B8C  26DE               	addwf	postinc2,f,c
  2834  002B8E  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  2835  002B94  0E00               	movlw	0
  2836  002B96  22DD               	addwfc	postdec2,f,c
  2837  002B98  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2838  002B9E  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2839  002BA4  006F FF78  F0F7    	movff	postinc2,_width
  2840  002BAA  006F FF74  F0F8    	movff	postdec2,_width+1
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  2844  002BB0  AFF8               	btfss	(_width+1)& (0+255),7,b
  2845  002BB2  D033               	goto	u11820
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  2849  002BB4  803D               	bsf	_flags^0,0,c
  2850                           
  2851                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  2852  002BB6  6DF7               	negf	_width& (0+255),b
  2853  002BB8  1FF8               	comf	(_width+1)& (0+255),f,b
  2854  002BBA  B0D8               	btfsc	status,0,c
  2855  002BBC  2BF8               	incf	(_width+1)& (0+255),f,b
  2856  002BBE  D02D               	goto	u11820
  2857  002BC0                     l9954:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  2861  002BC0  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2862  002BC2  6ED9               	movwf	fsr2l,c
  2863  002BC4  6ADA               	clrf	fsr2h,c
  2864  002BC6  50DF               	movf	indf2,w,c
  2865  002BC8  6E1C               	movwf	atoi@s^0,c
  2866  002BCA  ECF2  F023         	call	_atoi	;wreg free
  2867  002BCE  C01C  F0F7         	movff	?_atoi,_width
  2868  002BD2  C01D  F0F8         	movff	?_atoi+1,_width+1
  2869                           
  2870                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2871  002BD6  D004               	goto	l9960
  2872  002BD8                     l9956:
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  2876  002BD8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2877  002BDA  6ED9               	movwf	fsr2l,c
  2878  002BDC  6ADA               	clrf	fsr2h,c
  2879  002BDE  2ADF               	incf	indf2,f,c
  2880  002BE0                     l9960:
  2881  002BE0  0ED0               	movlw	208
  2882  002BE2  0100               	movlb	0	; () banked
  2883  002BE4  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2884  002BE6  0EFF               	movlw	255
  2885  002BE8  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2886  002BEA  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2887  002BEC  6ED9               	movwf	fsr2l,c
  2888  002BEE  6ADA               	clrf	fsr2h,c
  2889  002BF0  006F FF7F FFF6     	movff	indf2,tblptrl
  2890  002BF6                     	if	1	;There is more than 1 active tblptr byte
  2891  002BF6  0E20               	movlw	high __smallconst
  2892  002BF8  6EF7               	movwf	tblptrh,c
  2893  002BFA                     	endif
  2894  002BFA                     	if	0	;tblptru may be non-zero
  2895  002BFA                     	endif
  2896  002BFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2897  002BFA  0E00               	movlw	low (__smallconst shr (0+16))
  2898  002BFC  6EF8               	movwf	tblptru,c
  2899  002BFE                     	endif
  2900  002BFE  0008               	tblrd		*
  2901  002C00  50F5               	movf	tablat,w,c
  2902  002C02  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2903  002C04  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2904  002C06  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2905  002C08  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2906  002C0A  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2907  002C0C  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2908  002C0E  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2909  002C10  E104               	bnz	u11820
  2910  002C12  0E0A               	movlw	10
  2911  002C14  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2912  002C16  A0D8               	btfss	status,0,c
  2913  002C18  D7DF               	goto	l9956
  2914  002C1A                     u11820:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  2918  002C1A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2919  002C1C  6ED9               	movwf	fsr2l,c
  2920  002C1E  6ADA               	clrf	fsr2h,c
  2921  002C20  006F FF7F FFF6     	movff	indf2,tblptrl
  2922  002C26                     	if	1	;There is more than 1 active tblptr byte
  2923  002C26  0E20               	movlw	high __smallconst
  2924  002C28  6EF7               	movwf	tblptrh,c
  2925  002C2A                     	endif
  2926  002C2A                     	if	0	;tblptru may be non-zero
  2927  002C2A                     	endif
  2928  002C2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2929  002C2A  0E00               	movlw	low (__smallconst shr (0+16))
  2930  002C2C  6EF8               	movwf	tblptru,c
  2931  002C2E                     	endif
  2932  002C2E  0008               	tblrd		*
  2933  002C30  50F5               	movf	tablat,w,c
  2934  002C32  0A2E               	xorlw	46
  2935  002C34  A4D8               	btfss	status,2,c
  2936  002C36  D065               	goto	u11850
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  2940  002C38  0E00               	movlw	0
  2941  002C3A  6FFA               	movwf	(_prec+1)& (0+255),b
  2942  002C3C  0E00               	movlw	0
  2943  002C3E  6FF9               	movwf	_prec& (0+255),b
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  2947  002C40  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2948  002C42  6ED9               	movwf	fsr2l,c
  2949  002C44  6ADA               	clrf	fsr2h,c
  2950  002C46  2ADF               	incf	indf2,f,c
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  2954  002C48  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2955  002C4A  6ED9               	movwf	fsr2l,c
  2956  002C4C  6ADA               	clrf	fsr2h,c
  2957  002C4E  006F FF7F FFF6     	movff	indf2,tblptrl
  2958  002C54                     	if	1	;There is more than 1 active tblptr byte
  2959  002C54  0E20               	movlw	high __smallconst
  2960  002C56  6EF7               	movwf	tblptrh,c
  2961  002C58                     	endif
  2962  002C58                     	if	0	;tblptru may be non-zero
  2963  002C58                     	endif
  2964  002C58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2965  002C58  0E00               	movlw	low (__smallconst shr (0+16))
  2966  002C5A  6EF8               	movwf	tblptru,c
  2967  002C5C                     	endif
  2968  002C5C  0008               	tblrd		*
  2969  002C5E  50F5               	movf	tablat,w,c
  2970  002C60  0A2A               	xorlw	42
  2971  002C62  A4D8               	btfss	status,2,c
  2972  002C64  D021               	goto	l9972
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  2976  002C66  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2977  002C68  6ED9               	movwf	fsr2l,c
  2978  002C6A  6ADA               	clrf	fsr2h,c
  2979  002C6C  2ADF               	incf	indf2,f,c
  2980                           
  2981                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2982  002C6E  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2983  002C74  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2984  002C7A  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  2985  002C80  0E02               	movlw	2
  2986  002C82  26DE               	addwf	postinc2,f,c
  2987  002C84  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  2988  002C8A  0E00               	movlw	0
  2989  002C8C  22DD               	addwfc	postdec2,f,c
  2990  002C8E  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2991  002C94  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2992  002C9A  006F FF78  F0F9    	movff	postinc2,_prec
  2993  002CA0  006F FF74  F0FA    	movff	postdec2,_prec+1
  2994                           
  2995                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  2996  002CA6  D02D               	goto	u11850
  2997  002CA8                     l9972:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  3001  002CA8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3002  002CAA  6ED9               	movwf	fsr2l,c
  3003  002CAC  6ADA               	clrf	fsr2h,c
  3004  002CAE  50DF               	movf	indf2,w,c
  3005  002CB0  6E1C               	movwf	atoi@s^0,c
  3006  002CB2  ECF2  F023         	call	_atoi	;wreg free
  3007  002CB6  C01C  F0F9         	movff	?_atoi,_prec
  3008  002CBA  C01D  F0FA         	movff	?_atoi+1,_prec+1
  3009                           
  3010                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3011  002CBE  D004               	goto	l9978
  3012  002CC0                     l9974:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  3016  002CC0  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3017  002CC2  6ED9               	movwf	fsr2l,c
  3018  002CC4  6ADA               	clrf	fsr2h,c
  3019  002CC6  2ADF               	incf	indf2,f,c
  3020  002CC8                     l9978:
  3021  002CC8  0ED0               	movlw	208
  3022  002CCA  0100               	movlb	0	; () banked
  3023  002CCC  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3024  002CCE  0EFF               	movlw	255
  3025  002CD0  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3026  002CD2  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3027  002CD4  6ED9               	movwf	fsr2l,c
  3028  002CD6  6ADA               	clrf	fsr2h,c
  3029  002CD8  006F FF7F FFF6     	movff	indf2,tblptrl
  3030  002CDE                     	if	1	;There is more than 1 active tblptr byte
  3031  002CDE  0E20               	movlw	high __smallconst
  3032  002CE0  6EF7               	movwf	tblptrh,c
  3033  002CE2                     	endif
  3034  002CE2                     	if	0	;tblptru may be non-zero
  3035  002CE2                     	endif
  3036  002CE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3037  002CE2  0E00               	movlw	low (__smallconst shr (0+16))
  3038  002CE4  6EF8               	movwf	tblptru,c
  3039  002CE6                     	endif
  3040  002CE6  0008               	tblrd		*
  3041  002CE8  50F5               	movf	tablat,w,c
  3042  002CEA  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3043  002CEC  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3044  002CEE  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3045  002CF0  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3046  002CF2  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3047  002CF4  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3048  002CF6  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3049  002CF8  E104               	bnz	u11850
  3050  002CFA  0E0A               	movlw	10
  3051  002CFC  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3052  002CFE  A0D8               	btfss	status,0,c
  3053  002D00  D7DF               	goto	l9974
  3054  002D02                     u11850:
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  3058  002D02  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3059  002D04  6ED9               	movwf	fsr2l,c
  3060  002D06  6ADA               	clrf	fsr2h,c
  3061  002D08  006F FF7F FFF6     	movff	indf2,tblptrl
  3062  002D0E                     	if	1	;There is more than 1 active tblptr byte
  3063  002D0E  0E20               	movlw	high __smallconst
  3064  002D10  6EF7               	movwf	tblptrh,c
  3065  002D12                     	endif
  3066  002D12                     	if	0	;tblptru may be non-zero
  3067  002D12                     	endif
  3068  002D12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3069  002D12  0E00               	movlw	low (__smallconst shr (0+16))
  3070  002D14  6EF8               	movwf	tblptru,c
  3071  002D16                     	endif
  3072  002D16  0008               	tblrd		*
  3073  002D18  50F5               	movf	tablat,w,c
  3074  002D1A  6E1B               	movwf	tolower@c^0,c
  3075  002D1C  6A1C               	clrf	(tolower@c+1)^0,c
  3076  002D1E  EC5D  F02C         	call	_tolower	;wreg free
  3077  002D22  501B               	movf	?_tolower^0,w,c
  3078  002D24  6FCB               	movwf	vfpfcnvrt@ct& (0+255),b
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  3082  002D26  51CB               	movf	vfpfcnvrt@ct& (0+255),w,b
  3083  002D28  B4D8               	btfsc	status,2,c
  3084  002D2A  D02F               	goto	l9990
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  3088  002D2C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3089  002D2E  6ED9               	movwf	fsr2l,c
  3090  002D30  6ADA               	clrf	fsr2h,c
  3091  002D32  50DF               	movf	indf2,w,c
  3092  002D34  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3093  002D36  0E01               	movlw	1
  3094  002D38  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3095  002D3A  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3096  002D40                     	if	1	;There is more than 1 active tblptr byte
  3097  002D40  0E20               	movlw	high __smallconst
  3098  002D42  6EF7               	movwf	tblptrh,c
  3099  002D44                     	endif
  3100  002D44                     	if	0	;tblptru may be non-zero
  3101  002D44                     	endif
  3102  002D44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3103  002D44  0E00               	movlw	low (__smallconst shr (0+16))
  3104  002D46  6EF8               	movwf	tblptru,c
  3105  002D48                     	endif
  3106  002D48  0008               	tblrd		*
  3107  002D4A  50F5               	movf	tablat,w,c
  3108  002D4C  6E1B               	movwf	tolower@c^0,c
  3109  002D4E  6A1C               	clrf	(tolower@c+1)^0,c
  3110  002D50  EC5D  F02C         	call	_tolower	;wreg free
  3111  002D54  501B               	movf	?_tolower^0,w,c
  3112  002D56  6FCC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  3116  002D58  51CC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3117  002D5A  B4D8               	btfsc	status,2,c
  3118  002D5C  D016               	goto	l9990
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  3122  002D5E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3123  002D60  6ED9               	movwf	fsr2l,c
  3124  002D62  6ADA               	clrf	fsr2h,c
  3125  002D64  50DF               	movf	indf2,w,c
  3126  002D66  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3127  002D68  0E02               	movlw	2
  3128  002D6A  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3129  002D6C  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3130  002D72                     	if	1	;There is more than 1 active tblptr byte
  3131  002D72  0E20               	movlw	high __smallconst
  3132  002D74  6EF7               	movwf	tblptrh,c
  3133  002D76                     	endif
  3134  002D76                     	if	0	;tblptru may be non-zero
  3135  002D76                     	endif
  3136  002D76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3137  002D76  0E00               	movlw	low (__smallconst shr (0+16))
  3138  002D78  6EF8               	movwf	tblptru,c
  3139  002D7A                     	endif
  3140  002D7A  0008               	tblrd		*
  3141  002D7C  50F5               	movf	tablat,w,c
  3142  002D7E  6E1B               	movwf	tolower@c^0,c
  3143  002D80  6A1C               	clrf	(tolower@c+1)^0,c
  3144  002D82  EC5D  F02C         	call	_tolower	;wreg free
  3145  002D86  501B               	movf	?_tolower^0,w,c
  3146  002D88  6FCD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3147  002D8A                     l9990:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  3151  002D8A  0E66               	movlw	102
  3152  002D8C  19CB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3153  002D8E  A4D8               	btfss	status,2,c
  3154  002D90  D049               	goto	l10002
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  3158  002D92  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3159  002D94  6ED9               	movwf	fsr2l,c
  3160  002D96  6ADA               	clrf	fsr2h,c
  3161  002D98  006F FF7F FFF6     	movff	indf2,tblptrl
  3162  002D9E                     	if	1	;There is more than 1 active tblptr byte
  3163  002D9E  0E20               	movlw	high __smallconst
  3164  002DA0  6EF7               	movwf	tblptrh,c
  3165  002DA2                     	endif
  3166  002DA2                     	if	0	;tblptru may be non-zero
  3167  002DA2                     	endif
  3168  002DA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3169  002DA2  0E00               	movlw	low (__smallconst shr (0+16))
  3170  002DA4  6EF8               	movwf	tblptru,c
  3171  002DA6                     	endif
  3172  002DA6  0008               	tblrd		*
  3173  002DA8  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  3177  002DAE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3178  002DB0  6ED9               	movwf	fsr2l,c
  3179  002DB2  6ADA               	clrf	fsr2h,c
  3180  002DB4  2ADF               	incf	indf2,f,c
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  3184  002DB6  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3185  002DBC  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3186  002DC2  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3187  002DC8  0E04               	movlw	4
  3188  002DCA  26DE               	addwf	postinc2,f,c
  3189  002DCC  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3190  002DD2  0E00               	movlw	0
  3191  002DD4  22DD               	addwfc	postdec2,f,c
  3192  002DD6  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3193  002DDC  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3194  002DE2  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3195  002DE8  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3196  002DEE  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3197  002DF4  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3198  002DFA                     l9998:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  3202  002DFA  C0AF  F071         	movff	vfpfcnvrt@fp,efgtoa@fp
  3203  002DFE  C0B0  F072         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3204  002E02  C0C7  F073         	movff	vfpfcnvrt@f,efgtoa@f
  3205  002E06  C0C8  F074         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3206  002E0A  C0C9  F075         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3207  002E0E  C0CA  F076         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3208  002E12  C0C6  F077         	movff	vfpfcnvrt@c,efgtoa@c
  3209  002E16  EC66  F010         	call	_efgtoa	;wreg free
  3210  002E1A  C071  F0AF         	movff	?_efgtoa,?_vfpfcnvrt
  3211  002E1E  C072  F0B0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3212  002E22  0012               	return	
  3213  002E24                     l10002:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3217  002E24  0ECB               	movlw	low vfpfcnvrt@ct
  3218  002E26  6E19               	movwf	strncmp@_l^0,c
  3219  002E28  6A1A               	clrf	(strncmp@_l+1)^0,c
  3220  002E2A  0EBE               	movlw	low STR_19
  3221  002E2C  6E1B               	movwf	strncmp@_r^0,c
  3222  002E2E  501B               	movf	strncmp@_r^0,w,c
  3223  002E30  A4D8               	btfss	status,2,c
  3224  002E32  0E20               	movlw	high __smallconst
  3225  002E34  6E1C               	movwf	(strncmp@_r+1)^0,c
  3226  002E36  0E00               	movlw	0
  3227  002E38  6E1E               	movwf	(strncmp@n+1)^0,c
  3228  002E3A  0E02               	movlw	2
  3229  002E3C  6E1D               	movwf	strncmp@n^0,c
  3230  002E3E  ECAC  F020         	call	_strncmp	;wreg free
  3231  002E42  5019               	movf	?_strncmp^0,w,c
  3232  002E44  101A               	iorwf	(?_strncmp+1)^0,w,c
  3233  002E46  A4D8               	btfss	status,2,c
  3234  002E48  D055               	goto	l10020
  3235                           
  3236                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  3237  002E4A  0100               	movlb	0	; () banked
  3238  002E4C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3239  002E4E  6ED9               	movwf	fsr2l,c
  3240  002E50  6ADA               	clrf	fsr2h,c
  3241  002E52  50DF               	movf	indf2,w,c
  3242  002E54  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3243  002E56  0E01               	movlw	1
  3244  002E58  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3245  002E5A  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3246  002E60                     	if	1	;There is more than 1 active tblptr byte
  3247  002E60  0E20               	movlw	high __smallconst
  3248  002E62  6EF7               	movwf	tblptrh,c
  3249  002E64                     	endif
  3250  002E64                     	if	0	;tblptru may be non-zero
  3251  002E64                     	endif
  3252  002E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3253  002E64  0E00               	movlw	low (__smallconst shr (0+16))
  3254  002E66  6EF8               	movwf	tblptru,c
  3255  002E68                     	endif
  3256  002E68  0008               	tblrd		*
  3257  002E6A  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3258                           
  3259                           ; BSR set to: 0
  3260                           
  3261                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3262  002E70  0EBF               	movlw	191
  3263  002E72  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3264  002E74  0EFF               	movlw	255
  3265  002E76  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3266  002E78  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3267  002E7A  6ED9               	movwf	fsr2l,c
  3268  002E7C  6ADA               	clrf	fsr2h,c
  3269  002E7E  006F FF7F FFF6     	movff	indf2,tblptrl
  3270  002E84                     	if	1	;There is more than 1 active tblptr byte
  3271  002E84  0E20               	movlw	high __smallconst
  3272  002E86  6EF7               	movwf	tblptrh,c
  3273  002E88                     	endif
  3274  002E88                     	if	0	;tblptru may be non-zero
  3275  002E88                     	endif
  3276  002E88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3277  002E88  0E00               	movlw	low (__smallconst shr (0+16))
  3278  002E8A  6EF8               	movwf	tblptru,c
  3279  002E8C                     	endif
  3280  002E8C  0008               	tblrd		*
  3281  002E8E  50F5               	movf	tablat,w,c
  3282  002E90  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3283  002E92  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3284  002E94  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3285  002E96  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3286  002E98  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3287  002E9A  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3288  002E9C  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3289  002E9E  E102               	bnz	l10012
  3290  002EA0  0E1A               	movlw	26
  3291  002EA2  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3292  002EA4                     l10012:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3296  002EA4  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3297  002EAA  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3298  002EB0  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3299  002EB6  0E04               	movlw	4
  3300  002EB8  26DE               	addwf	postinc2,f,c
  3301  002EBA  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3302  002EC0  0E00               	movlw	0
  3303  002EC2  22DD               	addwfc	postdec2,f,c
  3304  002EC4  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3305  002ECA  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3306  002ED0  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3307  002ED6  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3308  002EDC  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3309  002EE2  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  3313  002EE8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3314  002EEA  6ED9               	movwf	fsr2l,c
  3315  002EEC  6ADA               	clrf	fsr2h,c
  3316  002EEE  0E02               	movlw	2
  3317  002EF0  26DF               	addwf	indf2,f,c
  3318  002EF2  D783               	goto	l9998
  3319  002EF4                     l10020:
  3320                           
  3321                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  3322  002EF4  0100               	movlb	0	; () banked
  3323  002EF6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3324  002EF8  6ED9               	movwf	fsr2l,c
  3325  002EFA  6ADA               	clrf	fsr2h,c
  3326  002EFC  006F FF7F FFF6     	movff	indf2,tblptrl
  3327  002F02                     	if	1	;There is more than 1 active tblptr byte
  3328  002F02  0E20               	movlw	high __smallconst
  3329  002F04  6EF7               	movwf	tblptrh,c
  3330  002F06                     	endif
  3331  002F06                     	if	0	;tblptru may be non-zero
  3332  002F06                     	endif
  3333  002F06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3334  002F06  0E00               	movlw	low (__smallconst shr (0+16))
  3335  002F08  6EF8               	movwf	tblptru,c
  3336  002F0A                     	endif
  3337  002F0A  0008               	tblrd		*
  3338  002F0C  50F5               	movf	tablat,w,c
  3339  002F0E  0A73               	xorlw	115
  3340  002F10  B4D8               	btfsc	status,2,c
  3341  002F12  D01B               	goto	u11920
  3342                           
  3343                           ; BSR set to: 0
  3344  002F14  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3345  002F16  6ED9               	movwf	fsr2l,c
  3346  002F18  6ADA               	clrf	fsr2h,c
  3347  002F1A  50DF               	movf	indf2,w,c
  3348  002F1C  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3349  002F1E  C0B4  F019         	movff	??_vfpfcnvrt,strncmp@_l
  3350  002F22  5019               	movf	strncmp@_l^0,w,c
  3351  002F24  A4D8               	btfss	status,2,c
  3352  002F26  0E20               	movlw	high __smallconst
  3353  002F28  6E1A               	movwf	(strncmp@_l+1)^0,c
  3354  002F2A  0EBA               	movlw	low STR_24
  3355  002F2C  6E1B               	movwf	strncmp@_r^0,c
  3356  002F2E  501B               	movf	strncmp@_r^0,w,c
  3357  002F30  A4D8               	btfss	status,2,c
  3358  002F32  0E20               	movlw	high __smallconst
  3359  002F34  6E1C               	movwf	(strncmp@_r+1)^0,c
  3360  002F36  0E00               	movlw	0
  3361  002F38  6E1E               	movwf	(strncmp@n+1)^0,c
  3362  002F3A  0E03               	movlw	3
  3363  002F3C  6E1D               	movwf	strncmp@n^0,c
  3364  002F3E  ECAC  F020         	call	_strncmp	;wreg free
  3365  002F42  5019               	movf	?_strncmp^0,w,c
  3366  002F44  101A               	iorwf	(?_strncmp+1)^0,w,c
  3367  002F46  A4D8               	btfss	status,2,c
  3368  002F48  D048               	goto	l10038
  3369  002F4A                     u11920:
  3370                           
  3371                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  3372  002F4A  0100               	movlb	0	; () banked
  3373  002F4C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3374  002F4E  6ED9               	movwf	fsr2l,c
  3375  002F50  6ADA               	clrf	fsr2h,c
  3376  002F52  006F FF7F FFF6     	movff	indf2,tblptrl
  3377  002F58                     	if	1	;There is more than 1 active tblptr byte
  3378  002F58  0E20               	movlw	high __smallconst
  3379  002F5A  6EF7               	movwf	tblptrh,c
  3380  002F5C                     	endif
  3381  002F5C                     	if	0	;tblptru may be non-zero
  3382  002F5C                     	endif
  3383  002F5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3384  002F5C  0E00               	movlw	low (__smallconst shr (0+16))
  3385  002F5E  6EF8               	movwf	tblptru,c
  3386  002F60                     	endif
  3387  002F60  0008               	tblrd		*
  3388  002F62  50F5               	movf	tablat,w,c
  3389  002F64  0A73               	xorlw	115
  3390  002F66  B4D8               	btfsc	status,2,c
  3391  002F68  D004               	goto	l10028
  3392                           
  3393                           ; BSR set to: 0
  3394  002F6A  0E00               	movlw	0
  3395  002F6C  6FC5               	movwf	(_vfpfcnvrt$2692+1)& (0+255),b
  3396  002F6E  0E03               	movlw	3
  3397  002F70  D003               	goto	L2
  3398  002F72                     l10028:
  3399                           
  3400                           ; BSR set to: 0
  3401  002F72  0E00               	movlw	0
  3402  002F74  6FC5               	movwf	(_vfpfcnvrt$2692+1)& (0+255),b
  3403  002F76  0E01               	movlw	1
  3404  002F78                     L2:
  3405  002F78  6FC4               	movwf	_vfpfcnvrt$2692& (0+255),b
  3406                           
  3407                           ; BSR set to: 0
  3408  002F7A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3409  002F7C  6ED9               	movwf	fsr2l,c
  3410  002F7E  6ADA               	clrf	fsr2h,c
  3411  002F80  51C4               	movf	_vfpfcnvrt$2692& (0+255),w,b
  3412  002F82  26DF               	addwf	indf2,f,c
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3416  002F84  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3417  002F8A  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3418  002F90  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3419  002F96  0E02               	movlw	2
  3420  002F98  26DE               	addwf	postinc2,f,c
  3421  002F9A  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3422  002FA0  0E00               	movlw	0
  3423  002FA2  22DD               	addwfc	postdec2,f,c
  3424  002FA4  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3425  002FAA  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3426  002FB0  006F FF78  F0C0    	movff	postinc2,vfpfcnvrt@cp
  3427  002FB6  006F FF74  F0C1    	movff	postdec2,vfpfcnvrt@cp+1
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  3431  002FBC  C0AF  F020         	movff	vfpfcnvrt@fp,stoa@fp
  3432  002FC0  C0B0  F021         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3433  002FC4  C0C0  F022         	movff	vfpfcnvrt@cp,stoa@s
  3434  002FC8  C0C1  F023         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3435  002FCC  ECAE  F022         	call	_stoa	;wreg free
  3436  002FD0  C020  F0AF         	movff	?_stoa,?_vfpfcnvrt
  3437  002FD4  C021  F0B0         	movff	?_stoa+1,?_vfpfcnvrt+1
  3438  002FD8  0012               	return	
  3439  002FDA                     l10038:
  3440                           
  3441                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  3442  002FDA  0100               	movlb	0	; () banked
  3443  002FDC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3444  002FDE  6ED9               	movwf	fsr2l,c
  3445  002FE0  6ADA               	clrf	fsr2h,c
  3446  002FE2  006F FF7F FFF6     	movff	indf2,tblptrl
  3447  002FE8                     	if	1	;There is more than 1 active tblptr byte
  3448  002FE8  0E20               	movlw	high __smallconst
  3449  002FEA  6EF7               	movwf	tblptrh,c
  3450  002FEC                     	endif
  3451  002FEC                     	if	0	;tblptru may be non-zero
  3452  002FEC                     	endif
  3453  002FEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3454  002FEC  0E00               	movlw	low (__smallconst shr (0+16))
  3455  002FEE  6EF8               	movwf	tblptru,c
  3456  002FF0                     	endif
  3457  002FF0  0008               	tblrd		*
  3458  002FF2  50F5               	movf	tablat,w,c
  3459  002FF4  0A75               	xorlw	117
  3460  002FF6  A4D8               	btfss	status,2,c
  3461  002FF8  D045               	goto	l10046
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  3465  002FFA  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3466  002FFC  6ED9               	movwf	fsr2l,c
  3467  002FFE  6ADA               	clrf	fsr2h,c
  3468  003000  2ADF               	incf	indf2,f,c
  3469                           
  3470                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  3471  003002  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3472  003008  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3473  00300E  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3474  003014  0E02               	movlw	2
  3475  003016  26DE               	addwf	postinc2,f,c
  3476  003018  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3477  00301E  0E00               	movlw	0
  3478  003020  22DD               	addwfc	postdec2,f,c
  3479  003022  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3480  003028  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3481  00302E  006F FF78  F0B6    	movff	postinc2,??_vfpfcnvrt+2
  3482  003034  006F FF74  F0B7    	movff	postdec2,??_vfpfcnvrt+3
  3483  00303A  C0B6  F0B8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3484  00303E  C0B7  F0B9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3485  003042  6BBA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3486  003044  6BBB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3487  003046  6BBC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3488  003048  6BBD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3489  00304A  6BBE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3490  00304C  6BBF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  3494  00304E  C0AF  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3495  003052  C0B0  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3496  003056  C0B8  F062         	movff	vfpfcnvrt@llu,utoa@d
  3497  00305A  C0B9  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3498  00305E  C0BA  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3499  003062  C0BB  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3500  003066  C0BC  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3501  00306A  C0BD  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3502  00306E  C0BE  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3503  003072  C0BF  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3504  003076  ECFF  F01E         	call	_utoa	;wreg free
  3505  00307A  C060  F0AF         	movff	?_utoa,?_vfpfcnvrt
  3506  00307E  C061  F0B0         	movff	?_utoa+1,?_vfpfcnvrt+1
  3507  003082  0012               	return	
  3508  003084                     l10046:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3512  003084  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3513  003086  6ED9               	movwf	fsr2l,c
  3514  003088  6ADA               	clrf	fsr2h,c
  3515  00308A  006F FF7F FFF6     	movff	indf2,tblptrl
  3516  003090                     	if	1	;There is more than 1 active tblptr byte
  3517  003090  0E20               	movlw	high __smallconst
  3518  003092  6EF7               	movwf	tblptrh,c
  3519  003094                     	endif
  3520  003094                     	if	0	;tblptru may be non-zero
  3521  003094                     	endif
  3522  003094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3523  003094  0E00               	movlw	low (__smallconst shr (0+16))
  3524  003096  6EF8               	movwf	tblptru,c
  3525  003098                     	endif
  3526  003098  0008               	tblrd		*
  3527  00309A  50F5               	movf	tablat,w,c
  3528  00309C  0A25               	xorlw	37
  3529  00309E  A4D8               	btfss	status,2,c
  3530  0030A0  D014               	goto	l10056
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3534  0030A2  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3535  0030A4  6ED9               	movwf	fsr2l,c
  3536  0030A6  6ADA               	clrf	fsr2h,c
  3537  0030A8  2ADF               	incf	indf2,f,c
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3541  0030AA  0E00               	movlw	0
  3542  0030AC  6E18               	movwf	(fputc@c+1)^0,c
  3543  0030AE  0E25               	movlw	37
  3544  0030B0  6E17               	movwf	fputc@c^0,c
  3545  0030B2  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3546  0030B6  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3547  0030BA  EC37  F027         	call	_fputc	;wreg free
  3548  0030BE                     l10052:
  3549                           
  3550                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3551  0030BE  0E00               	movlw	0
  3552  0030C0  0100               	movlb	0	; () banked
  3553  0030C2  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3554  0030C4  0E01               	movlw	1
  3555  0030C6  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3556  0030C8  0012               	return	
  3557  0030CA                     l10056:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3561  0030CA  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3562  0030CC  6ED9               	movwf	fsr2l,c
  3563  0030CE  6ADA               	clrf	fsr2h,c
  3564  0030D0  2ADF               	incf	indf2,f,c
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3568  0030D2  0E00               	movlw	0
  3569  0030D4  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3570  0030D6  0E00               	movlw	0
  3571  0030D8  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3572  0030DA  0012               	return	
  3573  0030DC                     l10062:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3577  0030DC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3578  0030DE  6ED9               	movwf	fsr2l,c
  3579  0030E0  6ADA               	clrf	fsr2h,c
  3580  0030E2  006F FF7F FFF6     	movff	indf2,tblptrl
  3581  0030E8                     	if	1	;There is more than 1 active tblptr byte
  3582  0030E8  0E20               	movlw	high __smallconst
  3583  0030EA  6EF7               	movwf	tblptrh,c
  3584  0030EC                     	endif
  3585  0030EC                     	if	0	;tblptru may be non-zero
  3586  0030EC                     	endif
  3587  0030EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3588  0030EC  0E00               	movlw	low (__smallconst shr (0+16))
  3589  0030EE  6EF8               	movwf	tblptru,c
  3590  0030F0                     	endif
  3591  0030F0  0008               	tblrd		*
  3592  0030F2  50F5               	movf	tablat,w,c
  3593  0030F4  6E17               	movwf	fputc@c^0,c
  3594  0030F6  6A18               	clrf	(fputc@c+1)^0,c
  3595  0030F8  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3596  0030FC  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3597  003100  EC37  F027         	call	_fputc	;wreg free
  3598                           
  3599                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3600  003104  0100               	movlb	0	; () banked
  3601  003106  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3602  003108  6ED9               	movwf	fsr2l,c
  3603  00310A  6ADA               	clrf	fsr2h,c
  3604  00310C  2ADF               	incf	indf2,f,c
  3605  00310E  D7D7               	goto	l10052
  3606  003110                     __end_of_vfpfcnvrt:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _utoa *****************
  3610 ;; Defined at:
  3611 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3614 ;;		 -> sprintf@f(11), NULL(0), 
  3615 ;;  d               8    2[BANK0 ] unsigned long long 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  n               8   22[BANK0 ] unsigned long long 
  3618 ;;  i               2   30[BANK0 ] int 
  3619 ;;  w               2   20[BANK0 ] int 
  3620 ;;  p               2   18[BANK0 ] int 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  2    0[BANK0 ] int 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 3F/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3630 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3631 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3632 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3633 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3634 ;;Total ram usage:       32 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; Hardware stack levels required when called: 9
  3637 ;; This function calls:
  3638 ;;		___lodiv
  3639 ;;		___lomod
  3640 ;;		_pad
  3641 ;; This function is called by:
  3642 ;;		_vfpfcnvrt
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text7
  3647  003DFE                     __ptext7:
  3648                           	callstack 0
  3649  003DFE                     _utoa:
  3650                           	callstack 16
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  3654                           
  3655                           ;incstack = 0
  3656  003DFE  AFFA               	btfss	(_prec+1)& (0+255),7,b
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  3660  003E00  923D               	bcf	_flags^0,1,c
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  3664  003E02  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3665  003E04  D005               	goto	u11670
  3666  003E06  51FA               	movf	(_prec+1)& (0+255),w,b
  3667  003E08  E108               	bnz	l1970
  3668  003E0A  05F9               	decf	_prec& (0+255),w,b
  3669  003E0C  B0D8               	btfsc	status,0,c
  3670  003E0E  D005               	goto	l1970
  3671  003E10                     u11670:
  3672                           
  3673                           ; BSR set to: 0
  3674  003E10  0E00               	movlw	0
  3675  003E12  6F73               	movwf	(utoa@p+1)& (0+255),b
  3676  003E14  0E01               	movlw	1
  3677  003E16  6F72               	movwf	utoa@p& (0+255),b
  3678  003E18  D004               	goto	l1972
  3679  003E1A                     l1970:
  3680                           
  3681                           ; BSR set to: 0
  3682  003E1A  C0F9  F072         	movff	_prec,utoa@p
  3683  003E1E  C0FA  F073         	movff	_prec+1,utoa@p+1
  3684  003E22                     l1972:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  3688  003E22  C0F7  F074         	movff	_width,utoa@w
  3689  003E26  C0F8  F075         	movff	_width+1,utoa@w+1
  3690                           
  3691                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  3692  003E2A  C062  F076         	movff	utoa@d,utoa@n
  3693  003E2E  C063  F077         	movff	utoa@d+1,utoa@n+1
  3694  003E32  C064  F078         	movff	utoa@d+2,utoa@n+2
  3695  003E36  C065  F079         	movff	utoa@d+3,utoa@n+3
  3696  003E3A  C066  F07A         	movff	utoa@d+4,utoa@n+4
  3697  003E3E  C067  F07B         	movff	utoa@d+5,utoa@n+5
  3698  003E42  C068  F07C         	movff	utoa@d+6,utoa@n+6
  3699  003E46  C069  F07D         	movff	utoa@d+7,utoa@n+7
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  3703  003E4A  0E00               	movlw	0
  3704  003E4C  6F7F               	movwf	(utoa@i+1)& (0+255),b
  3705  003E4E  0E4F               	movlw	79
  3706  003E50  6F7E               	movwf	utoa@i& (0+255),b
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  3710  003E52  0E00               	movlw	0
  3711  003E54  0101               	movlb	1	; () banked
  3712  003E56  6FE7               	movwf	(_dbuf+79)& (0+255),b
  3713                           
  3714                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3715  003E58  D076               	goto	l9858
  3716  003E5A                     l9848:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  3720  003E5A  077E               	decf	utoa@i& (0+255),f,b
  3721  003E5C  A0D8               	btfss	status,0,c
  3722  003E5E  077F               	decf	(utoa@i+1)& (0+255),f,b
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  3726  003E60  0E98               	movlw	low _dbuf
  3727  003E62  257E               	addwf	utoa@i& (0+255),w,b
  3728  003E64  6ED9               	movwf	fsr2l,c
  3729  003E66  0E01               	movlw	high _dbuf
  3730  003E68  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3731  003E6A  6EDA               	movwf	fsr2h,c
  3732  003E6C  C076  F015         	movff	utoa@n,___lomod@dividend
  3733  003E70  C077  F016         	movff	utoa@n+1,___lomod@dividend+1
  3734  003E74  C078  F017         	movff	utoa@n+2,___lomod@dividend+2
  3735  003E78  C079  F018         	movff	utoa@n+3,___lomod@dividend+3
  3736  003E7C  C07A  F019         	movff	utoa@n+4,___lomod@dividend+4
  3737  003E80  C07B  F01A         	movff	utoa@n+5,___lomod@dividend+5
  3738  003E84  C07C  F01B         	movff	utoa@n+6,___lomod@dividend+6
  3739  003E88  C07D  F01C         	movff	utoa@n+7,___lomod@dividend+7
  3740  003E8C  0E0A               	movlw	10
  3741  003E8E  6E1D               	movwf	___lomod@divisor^0,c
  3742  003E90  0E00               	movlw	0
  3743  003E92  6E1E               	movwf	(___lomod@divisor+1)^0,c
  3744  003E94  0E00               	movlw	0
  3745  003E96  6E1F               	movwf	(___lomod@divisor+2)^0,c
  3746  003E98  0E00               	movlw	0
  3747  003E9A  6E20               	movwf	(___lomod@divisor+3)^0,c
  3748  003E9C  0E00               	movlw	0
  3749  003E9E  6E21               	movwf	(___lomod@divisor+4)^0,c
  3750  003EA0  0E00               	movlw	0
  3751  003EA2  6E22               	movwf	(___lomod@divisor+5)^0,c
  3752  003EA4  0E00               	movlw	0
  3753  003EA6  6E23               	movwf	(___lomod@divisor+6)^0,c
  3754  003EA8  0E00               	movlw	0
  3755  003EAA  6E24               	movwf	(___lomod@divisor+7)^0,c
  3756  003EAC  EC91  F027         	call	___lomod	;wreg free
  3757  003EB0  C015  F06A         	movff	?___lomod,??_utoa
  3758  003EB4  C016  F06B         	movff	?___lomod+1,??_utoa+1
  3759  003EB8  C017  F06C         	movff	?___lomod+2,??_utoa+2
  3760  003EBC  C018  F06D         	movff	?___lomod+3,??_utoa+3
  3761  003EC0  C019  F06E         	movff	?___lomod+4,??_utoa+4
  3762  003EC4  C01A  F06F         	movff	?___lomod+5,??_utoa+5
  3763  003EC8  C01B  F070         	movff	?___lomod+6,??_utoa+6
  3764  003ECC  C01C  F071         	movff	?___lomod+7,??_utoa+7
  3765  003ED0  516A               	movf	??_utoa& (0+255),w,b
  3766  003ED2  0F30               	addlw	48
  3767  003ED4  6EDF               	movwf	indf2,c
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  3771  003ED6  0772               	decf	utoa@p& (0+255),f,b
  3772  003ED8  A0D8               	btfss	status,0,c
  3773  003EDA  0773               	decf	(utoa@p+1)& (0+255),f,b
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  3777  003EDC  0774               	decf	utoa@w& (0+255),f,b
  3778  003EDE  A0D8               	btfss	status,0,c
  3779  003EE0  0775               	decf	(utoa@w+1)& (0+255),f,b
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  3783  003EE2  C076  F015         	movff	utoa@n,___lodiv@dividend
  3784  003EE6  C077  F016         	movff	utoa@n+1,___lodiv@dividend+1
  3785  003EEA  C078  F017         	movff	utoa@n+2,___lodiv@dividend+2
  3786  003EEE  C079  F018         	movff	utoa@n+3,___lodiv@dividend+3
  3787  003EF2  C07A  F019         	movff	utoa@n+4,___lodiv@dividend+4
  3788  003EF6  C07B  F01A         	movff	utoa@n+5,___lodiv@dividend+5
  3789  003EFA  C07C  F01B         	movff	utoa@n+6,___lodiv@dividend+6
  3790  003EFE  C07D  F01C         	movff	utoa@n+7,___lodiv@dividend+7
  3791  003F02  0E0A               	movlw	10
  3792  003F04  6E1D               	movwf	___lodiv@divisor^0,c
  3793  003F06  0E00               	movlw	0
  3794  003F08  6E1E               	movwf	(___lodiv@divisor+1)^0,c
  3795  003F0A  0E00               	movlw	0
  3796  003F0C  6E1F               	movwf	(___lodiv@divisor+2)^0,c
  3797  003F0E  0E00               	movlw	0
  3798  003F10  6E20               	movwf	(___lodiv@divisor+3)^0,c
  3799  003F12  0E00               	movlw	0
  3800  003F14  6E21               	movwf	(___lodiv@divisor+4)^0,c
  3801  003F16  0E00               	movlw	0
  3802  003F18  6E22               	movwf	(___lodiv@divisor+5)^0,c
  3803  003F1A  0E00               	movlw	0
  3804  003F1C  6E23               	movwf	(___lodiv@divisor+6)^0,c
  3805  003F1E  0E00               	movlw	0
  3806  003F20  6E24               	movwf	(___lodiv@divisor+7)^0,c
  3807  003F22  ECF3  F024         	call	___lodiv	;wreg free
  3808  003F26  C015  F076         	movff	?___lodiv,utoa@n
  3809  003F2A  C016  F077         	movff	?___lodiv+1,utoa@n+1
  3810  003F2E  C017  F078         	movff	?___lodiv+2,utoa@n+2
  3811  003F32  C018  F079         	movff	?___lodiv+3,utoa@n+3
  3812  003F36  C019  F07A         	movff	?___lodiv+4,utoa@n+4
  3813  003F3A  C01A  F07B         	movff	?___lodiv+5,utoa@n+5
  3814  003F3E  C01B  F07C         	movff	?___lodiv+6,utoa@n+6
  3815  003F42  C01C  F07D         	movff	?___lodiv+7,utoa@n+7
  3816  003F46                     l9858:
  3817                           
  3818                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3819  003F46  0100               	movlb	0	; () banked
  3820  003F48  517E               	movf	utoa@i& (0+255),w,b
  3821  003F4A  117F               	iorwf	(utoa@i+1)& (0+255),w,b
  3822  003F4C  B4D8               	btfsc	status,2,c
  3823  003F4E  D01A               	goto	u11720
  3824                           
  3825                           ; BSR set to: 0
  3826  003F50  5176               	movf	utoa@n& (0+255),w,b
  3827  003F52  1177               	iorwf	(utoa@n+1)& (0+255),w,b
  3828  003F54  1178               	iorwf	(utoa@n+2)& (0+255),w,b
  3829  003F56  1179               	iorwf	(utoa@n+3)& (0+255),w,b
  3830  003F58  117A               	iorwf	(utoa@n+4)& (0+255),w,b
  3831  003F5A  117B               	iorwf	(utoa@n+5)& (0+255),w,b
  3832  003F5C  117C               	iorwf	(utoa@n+6)& (0+255),w,b
  3833  003F5E  117D               	iorwf	(utoa@n+7)& (0+255),w,b
  3834  003F60  A4D8               	btfss	status,2,c
  3835  003F62  D77B               	goto	l9848
  3836                           
  3837                           ; BSR set to: 0
  3838  003F64  BF73               	btfsc	(utoa@p+1)& (0+255),7,b
  3839  003F66  D005               	goto	u11700
  3840  003F68  5173               	movf	(utoa@p+1)& (0+255),w,b
  3841  003F6A  E102               	bnz	u11701
  3842  003F6C  0572               	decf	utoa@p& (0+255),w,b
  3843  003F6E  B0D8               	btfsc	status,0,c
  3844  003F70                     u11701:
  3845  003F70  D774               	goto	l9848
  3846  003F72                     u11700:
  3847                           
  3848                           ; BSR set to: 0
  3849  003F72  BF75               	btfsc	(utoa@w+1)& (0+255),7,b
  3850  003F74  D007               	goto	u11720
  3851  003F76  5175               	movf	(utoa@w+1)& (0+255),w,b
  3852  003F78  E103               	bnz	u11710
  3853  003F7A  0574               	decf	utoa@w& (0+255),w,b
  3854  003F7C  A0D8               	btfss	status,0,c
  3855  003F7E  D002               	goto	u11720
  3856  003F80                     u11710:
  3857                           
  3858                           ; BSR set to: 0
  3859  003F80  B23D               	btfsc	_flags^0,1,c
  3860  003F82  D76B               	goto	l9848
  3861  003F84                     u11720:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  3865  003F84  C060  F029         	movff	utoa@fp,pad@fp
  3866  003F88  C061  F02A         	movff	utoa@fp+1,pad@fp+1
  3867  003F8C  0E98               	movlw	low _dbuf
  3868  003F8E  257E               	addwf	utoa@i& (0+255),w,b
  3869  003F90  6E2B               	movwf	pad@buf^0,c
  3870  003F92  0E01               	movlw	high _dbuf
  3871  003F94  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3872  003F96  6E2C               	movwf	(pad@buf+1)^0,c
  3873  003F98  C074  F02D         	movff	utoa@w,pad@p
  3874  003F9C  C075  F02E         	movff	utoa@w+1,pad@p+1
  3875  003FA0  EC87  F028         	call	_pad	;wreg free
  3876  003FA4  C029  F060         	movff	?_pad,?_utoa
  3877  003FA8  C02A  F061         	movff	?_pad+1,?_utoa+1
  3878  003FAC  0012               	return		;funcret
  3879  003FAE                     __end_of_utoa:
  3880                           	callstack 0
  3881                           
  3882 ;; *************** function ___lomod *****************
  3883 ;; Defined at:
  3884 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  dividend        8   20[COMRAM] unsigned long long 
  3887 ;;  divisor         8   28[COMRAM] unsigned long long 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  counter         1   36[COMRAM] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  8   20[COMRAM] unsigned long long 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0
  3894 ;; Tracked objects:
  3895 ;;		On entry : 3F/0
  3896 ;;		On exit  : 3F/0
  3897 ;;		Unchanged: 3F/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3899 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3902 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3903 ;;Total ram usage:       17 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 4
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_utoa
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text8
  3914  004F22                     __ptext8:
  3915                           	callstack 0
  3916  004F22                     ___lomod:
  3917                           	callstack 20
  3918                           
  3919                           ; BSR set to: 0
  3920                           
  3921                           ;incstack = 0
  3922  004F22  501D               	movf	___lomod@divisor^0,w,c
  3923  004F24  101E               	iorwf	(___lomod@divisor+1)^0,w,c
  3924  004F26  101F               	iorwf	(___lomod@divisor+2)^0,w,c
  3925  004F28  1020               	iorwf	(___lomod@divisor+3)^0,w,c
  3926  004F2A  1021               	iorwf	(___lomod@divisor+4)^0,w,c
  3927  004F2C  1022               	iorwf	(___lomod@divisor+5)^0,w,c
  3928  004F2E  1023               	iorwf	(___lomod@divisor+6)^0,w,c
  3929  004F30  1024               	iorwf	(___lomod@divisor+7)^0,w,c
  3930  004F32  B4D8               	btfsc	status,2,c
  3931  004F34  D03C               	goto	l1569
  3932                           
  3933                           ; BSR set to: 0
  3934  004F36  0E01               	movlw	1
  3935  004F38  6E25               	movwf	___lomod@counter^0,c
  3936  004F3A  D00A               	goto	l9356
  3937  004F3C                     l9354:
  3938                           
  3939                           ; BSR set to: 0
  3940  004F3C  90D8               	bcf	status,0,c
  3941  004F3E  361D               	rlcf	___lomod@divisor^0,f,c
  3942  004F40  361E               	rlcf	(___lomod@divisor+1)^0,f,c
  3943  004F42  361F               	rlcf	(___lomod@divisor+2)^0,f,c
  3944  004F44  3620               	rlcf	(___lomod@divisor+3)^0,f,c
  3945  004F46  3621               	rlcf	(___lomod@divisor+4)^0,f,c
  3946  004F48  3622               	rlcf	(___lomod@divisor+5)^0,f,c
  3947  004F4A  3623               	rlcf	(___lomod@divisor+6)^0,f,c
  3948  004F4C  3624               	rlcf	(___lomod@divisor+7)^0,f,c
  3949  004F4E  2A25               	incf	___lomod@counter^0,f,c
  3950  004F50                     l9356:
  3951                           
  3952                           ; BSR set to: 0
  3953  004F50  AE24               	btfss	(___lomod@divisor+7)^0,7,c
  3954  004F52  D7F4               	goto	l9354
  3955  004F54                     u10680:
  3956                           
  3957                           ; BSR set to: 0
  3958  004F54  501D               	movf	___lomod@divisor^0,w,c
  3959  004F56  5C15               	subwf	___lomod@dividend^0,w,c
  3960  004F58  501E               	movf	(___lomod@divisor+1)^0,w,c
  3961  004F5A  5816               	subwfb	(___lomod@dividend+1)^0,w,c
  3962  004F5C  501F               	movf	(___lomod@divisor+2)^0,w,c
  3963  004F5E  5817               	subwfb	(___lomod@dividend+2)^0,w,c
  3964  004F60  5020               	movf	(___lomod@divisor+3)^0,w,c
  3965  004F62  5818               	subwfb	(___lomod@dividend+3)^0,w,c
  3966  004F64  5021               	movf	(___lomod@divisor+4)^0,w,c
  3967  004F66  5819               	subwfb	(___lomod@dividend+4)^0,w,c
  3968  004F68  5022               	movf	(___lomod@divisor+5)^0,w,c
  3969  004F6A  581A               	subwfb	(___lomod@dividend+5)^0,w,c
  3970  004F6C  5023               	movf	(___lomod@divisor+6)^0,w,c
  3971  004F6E  581B               	subwfb	(___lomod@dividend+6)^0,w,c
  3972  004F70  5024               	movf	(___lomod@divisor+7)^0,w,c
  3973  004F72  581C               	subwfb	(___lomod@dividend+7)^0,w,c
  3974  004F74  A0D8               	btfss	status,0,c
  3975  004F76  D010               	goto	l9362
  3976                           
  3977                           ; BSR set to: 0
  3978  004F78  501D               	movf	___lomod@divisor^0,w,c
  3979  004F7A  5E15               	subwf	___lomod@dividend^0,f,c
  3980  004F7C  501E               	movf	(___lomod@divisor+1)^0,w,c
  3981  004F7E  5A16               	subwfb	(___lomod@dividend+1)^0,f,c
  3982  004F80  501F               	movf	(___lomod@divisor+2)^0,w,c
  3983  004F82  5A17               	subwfb	(___lomod@dividend+2)^0,f,c
  3984  004F84  5020               	movf	(___lomod@divisor+3)^0,w,c
  3985  004F86  5A18               	subwfb	(___lomod@dividend+3)^0,f,c
  3986  004F88  5021               	movf	(___lomod@divisor+4)^0,w,c
  3987  004F8A  5A19               	subwfb	(___lomod@dividend+4)^0,f,c
  3988  004F8C  5022               	movf	(___lomod@divisor+5)^0,w,c
  3989  004F8E  5A1A               	subwfb	(___lomod@dividend+5)^0,f,c
  3990  004F90  5023               	movf	(___lomod@divisor+6)^0,w,c
  3991  004F92  5A1B               	subwfb	(___lomod@dividend+6)^0,f,c
  3992  004F94  5024               	movf	(___lomod@divisor+7)^0,w,c
  3993  004F96  5A1C               	subwfb	(___lomod@dividend+7)^0,f,c
  3994  004F98                     l9362:
  3995                           
  3996                           ; BSR set to: 0
  3997  004F98  90D8               	bcf	status,0,c
  3998  004F9A  3224               	rrcf	(___lomod@divisor+7)^0,f,c
  3999  004F9C  3223               	rrcf	(___lomod@divisor+6)^0,f,c
  4000  004F9E  3222               	rrcf	(___lomod@divisor+5)^0,f,c
  4001  004FA0  3221               	rrcf	(___lomod@divisor+4)^0,f,c
  4002  004FA2  3220               	rrcf	(___lomod@divisor+3)^0,f,c
  4003  004FA4  321F               	rrcf	(___lomod@divisor+2)^0,f,c
  4004  004FA6  321E               	rrcf	(___lomod@divisor+1)^0,f,c
  4005  004FA8  321D               	rrcf	___lomod@divisor^0,f,c
  4006                           
  4007                           ; BSR set to: 0
  4008  004FAA  2E25               	decfsz	___lomod@counter^0,f,c
  4009  004FAC  D7D3               	goto	u10680
  4010  004FAE                     l1569:
  4011                           
  4012                           ; BSR set to: 0
  4013  004FAE  C015  F015         	movff	___lomod@dividend,?___lomod
  4014  004FB2  C016  F016         	movff	___lomod@dividend+1,?___lomod+1
  4015  004FB6  C017  F017         	movff	___lomod@dividend+2,?___lomod+2
  4016  004FBA  C018  F018         	movff	___lomod@dividend+3,?___lomod+3
  4017  004FBE  C019  F019         	movff	___lomod@dividend+4,?___lomod+4
  4018  004FC2  C01A  F01A         	movff	___lomod@dividend+5,?___lomod+5
  4019  004FC6  C01B  F01B         	movff	___lomod@dividend+6,?___lomod+6
  4020  004FCA  C01C  F01C         	movff	___lomod@dividend+7,?___lomod+7
  4021                           
  4022                           ; BSR set to: 0
  4023  004FCE  0012               	return		;funcret
  4024  004FD0                     __end_of___lomod:
  4025                           	callstack 0
  4026                           
  4027 ;; *************** function ___lodiv *****************
  4028 ;; Defined at:
  4029 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  dividend        8   20[COMRAM] unsigned long long 
  4032 ;;  divisor         8   28[COMRAM] unsigned long long 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  quotient        8   36[COMRAM] unsigned long long 
  4035 ;;  counter         1   44[COMRAM] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  8   20[COMRAM] unsigned long long 
  4038 ;; Registers used:
  4039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 3F/0
  4042 ;;		On exit  : 3F/0
  4043 ;;		Unchanged: 3F/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4045 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4046 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4048 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4049 ;;Total ram usage:       25 bytes
  4050 ;; Hardware stack levels used: 1
  4051 ;; Hardware stack levels required when called: 4
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_utoa
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text9
  4060  0049E6                     __ptext9:
  4061                           	callstack 0
  4062  0049E6                     ___lodiv:
  4063                           	callstack 20
  4064                           
  4065                           ; BSR set to: 0
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;incstack = 0
  4069  0049E6  EE20  F025         	lfsr	2,___lodiv@quotient
  4070  0049EA  0E07               	movlw	7
  4071  0049EC                     u10631:
  4072  0049EC  6ADE               	clrf	postinc2,c
  4073  0049EE  06E8               	decf	wreg,f,c
  4074  0049F0  E2FD               	bc	u10631
  4075                           
  4076                           ; BSR set to: 0
  4077  0049F2  501D               	movf	___lodiv@divisor^0,w,c
  4078  0049F4  101E               	iorwf	(___lodiv@divisor+1)^0,w,c
  4079  0049F6  101F               	iorwf	(___lodiv@divisor+2)^0,w,c
  4080  0049F8  1020               	iorwf	(___lodiv@divisor+3)^0,w,c
  4081  0049FA  1021               	iorwf	(___lodiv@divisor+4)^0,w,c
  4082  0049FC  1022               	iorwf	(___lodiv@divisor+5)^0,w,c
  4083  0049FE  1023               	iorwf	(___lodiv@divisor+6)^0,w,c
  4084  004A00  1024               	iorwf	(___lodiv@divisor+7)^0,w,c
  4085  004A02  B4D8               	btfsc	status,2,c
  4086  004A04  D046               	goto	l1559
  4087                           
  4088                           ; BSR set to: 0
  4089  004A06  0E01               	movlw	1
  4090  004A08  6E2D               	movwf	___lodiv@counter^0,c
  4091  004A0A  D00A               	goto	l9336
  4092  004A0C                     l9334:
  4093                           
  4094                           ; BSR set to: 0
  4095  004A0C  90D8               	bcf	status,0,c
  4096  004A0E  361D               	rlcf	___lodiv@divisor^0,f,c
  4097  004A10  361E               	rlcf	(___lodiv@divisor+1)^0,f,c
  4098  004A12  361F               	rlcf	(___lodiv@divisor+2)^0,f,c
  4099  004A14  3620               	rlcf	(___lodiv@divisor+3)^0,f,c
  4100  004A16  3621               	rlcf	(___lodiv@divisor+4)^0,f,c
  4101  004A18  3622               	rlcf	(___lodiv@divisor+5)^0,f,c
  4102  004A1A  3623               	rlcf	(___lodiv@divisor+6)^0,f,c
  4103  004A1C  3624               	rlcf	(___lodiv@divisor+7)^0,f,c
  4104  004A1E  2A2D               	incf	___lodiv@counter^0,f,c
  4105  004A20                     l9336:
  4106                           
  4107                           ; BSR set to: 0
  4108  004A20  AE24               	btfss	(___lodiv@divisor+7)^0,7,c
  4109  004A22  D7F4               	goto	l9334
  4110  004A24                     u10650:
  4111                           
  4112                           ; BSR set to: 0
  4113  004A24  90D8               	bcf	status,0,c
  4114  004A26  3625               	rlcf	___lodiv@quotient^0,f,c
  4115  004A28  3626               	rlcf	(___lodiv@quotient+1)^0,f,c
  4116  004A2A  3627               	rlcf	(___lodiv@quotient+2)^0,f,c
  4117  004A2C  3628               	rlcf	(___lodiv@quotient+3)^0,f,c
  4118  004A2E  3629               	rlcf	(___lodiv@quotient+4)^0,f,c
  4119  004A30  362A               	rlcf	(___lodiv@quotient+5)^0,f,c
  4120  004A32  362B               	rlcf	(___lodiv@quotient+6)^0,f,c
  4121  004A34  362C               	rlcf	(___lodiv@quotient+7)^0,f,c
  4122                           
  4123                           ; BSR set to: 0
  4124  004A36  501D               	movf	___lodiv@divisor^0,w,c
  4125  004A38  5C15               	subwf	___lodiv@dividend^0,w,c
  4126  004A3A  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4127  004A3C  5816               	subwfb	(___lodiv@dividend+1)^0,w,c
  4128  004A3E  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4129  004A40  5817               	subwfb	(___lodiv@dividend+2)^0,w,c
  4130  004A42  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4131  004A44  5818               	subwfb	(___lodiv@dividend+3)^0,w,c
  4132  004A46  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4133  004A48  5819               	subwfb	(___lodiv@dividend+4)^0,w,c
  4134  004A4A  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4135  004A4C  581A               	subwfb	(___lodiv@dividend+5)^0,w,c
  4136  004A4E  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4137  004A50  581B               	subwfb	(___lodiv@dividend+6)^0,w,c
  4138  004A52  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4139  004A54  581C               	subwfb	(___lodiv@dividend+7)^0,w,c
  4140  004A56  A0D8               	btfss	status,0,c
  4141  004A58  D011               	goto	l9346
  4142                           
  4143                           ; BSR set to: 0
  4144  004A5A  501D               	movf	___lodiv@divisor^0,w,c
  4145  004A5C  5E15               	subwf	___lodiv@dividend^0,f,c
  4146  004A5E  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4147  004A60  5A16               	subwfb	(___lodiv@dividend+1)^0,f,c
  4148  004A62  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4149  004A64  5A17               	subwfb	(___lodiv@dividend+2)^0,f,c
  4150  004A66  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4151  004A68  5A18               	subwfb	(___lodiv@dividend+3)^0,f,c
  4152  004A6A  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4153  004A6C  5A19               	subwfb	(___lodiv@dividend+4)^0,f,c
  4154  004A6E  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4155  004A70  5A1A               	subwfb	(___lodiv@dividend+5)^0,f,c
  4156  004A72  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4157  004A74  5A1B               	subwfb	(___lodiv@dividend+6)^0,f,c
  4158  004A76  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4159  004A78  5A1C               	subwfb	(___lodiv@dividend+7)^0,f,c
  4160                           
  4161                           ; BSR set to: 0
  4162  004A7A  8025               	bsf	___lodiv@quotient^0,0,c
  4163  004A7C                     l9346:
  4164                           
  4165                           ; BSR set to: 0
  4166  004A7C  90D8               	bcf	status,0,c
  4167  004A7E  3224               	rrcf	(___lodiv@divisor+7)^0,f,c
  4168  004A80  3223               	rrcf	(___lodiv@divisor+6)^0,f,c
  4169  004A82  3222               	rrcf	(___lodiv@divisor+5)^0,f,c
  4170  004A84  3221               	rrcf	(___lodiv@divisor+4)^0,f,c
  4171  004A86  3220               	rrcf	(___lodiv@divisor+3)^0,f,c
  4172  004A88  321F               	rrcf	(___lodiv@divisor+2)^0,f,c
  4173  004A8A  321E               	rrcf	(___lodiv@divisor+1)^0,f,c
  4174  004A8C  321D               	rrcf	___lodiv@divisor^0,f,c
  4175                           
  4176                           ; BSR set to: 0
  4177  004A8E  2E2D               	decfsz	___lodiv@counter^0,f,c
  4178  004A90  D7C9               	goto	u10650
  4179  004A92                     l1559:
  4180                           
  4181                           ; BSR set to: 0
  4182  004A92  C025  F015         	movff	___lodiv@quotient,?___lodiv
  4183  004A96  C026  F016         	movff	___lodiv@quotient+1,?___lodiv+1
  4184  004A9A  C027  F017         	movff	___lodiv@quotient+2,?___lodiv+2
  4185  004A9E  C028  F018         	movff	___lodiv@quotient+3,?___lodiv+3
  4186  004AA2  C029  F019         	movff	___lodiv@quotient+4,?___lodiv+4
  4187  004AA6  C02A  F01A         	movff	___lodiv@quotient+5,?___lodiv+5
  4188  004AAA  C02B  F01B         	movff	___lodiv@quotient+6,?___lodiv+6
  4189  004AAE  C02C  F01C         	movff	___lodiv@quotient+7,?___lodiv+7
  4190                           
  4191                           ; BSR set to: 0
  4192  004AB2  0012               	return		;funcret
  4193  004AB4                     __end_of___lodiv:
  4194                           	callstack 0
  4195                           
  4196 ;; *************** function _stoa *****************
  4197 ;; Defined at:
  4198 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4201 ;;		 -> sprintf@f(11), NULL(0), 
  4202 ;;  s               2   33[COMRAM] PTR unsigned char 
  4203 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  nuls            7   36[COMRAM] unsigned char [7]
  4206 ;;  l               2   51[COMRAM] int 
  4207 ;;  p               2   49[COMRAM] int 
  4208 ;;  cp              2   47[COMRAM] PTR unsigned char 
  4209 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_2(9), 
  4210 ;;		 -> STR_1(12), 
  4211 ;;  w               2   45[COMRAM] int 
  4212 ;;  i               2   43[COMRAM] int 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  2   31[COMRAM] int 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 3F/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4223 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4225 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4226 ;;Total ram usage:       22 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 7
  4229 ;; This function calls:
  4230 ;;		_fputc
  4231 ;;		_strlen
  4232 ;; This function is called by:
  4233 ;;		_vfpfcnvrt
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text10
  4238  00455C                     __ptext10:
  4239                           	callstack 0
  4240  00455C                     _stoa:
  4241                           	callstack 18
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;incstack = 0
  4248  00455C  EE20  F1E8         	lfsr	2,stoa@F1164
  4249  004560  EE10  F025         	lfsr	1,stoa@nuls
  4250  004564  0E06               	movlw	6
  4251  004566                     u11561:
  4252  004566  006F FF6F FFE3     	movff	plusw2,plusw1
  4253  00456C  06E8               	decf	wreg,f,c
  4254  00456E  E2FB               	bc	u11561
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  4258  004570  C022  F030         	movff	stoa@s,stoa@cp
  4259  004574  C023  F031         	movff	stoa@s+1,stoa@cp+1
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  4263  004578  5030               	movf	stoa@cp^0,w,c
  4264  00457A  1031               	iorwf	(stoa@cp+1)^0,w,c
  4265  00457C  A4D8               	btfss	status,2,c
  4266  00457E  D003               	goto	l9802
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  4270  004580  0E25               	movlw	low stoa@nuls
  4271  004582  6E30               	movwf	stoa@cp^0,c
  4272  004584  6A31               	clrf	(stoa@cp+1)^0,c
  4273  004586                     l9802:
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  4277  004586  C030  F015         	movff	stoa@cp,strlen@s
  4278  00458A  C031  F016         	movff	stoa@cp+1,strlen@s+1
  4279  00458E  EC11  F02B         	call	_strlen	;wreg free
  4280  004592  C015  F034         	movff	?_strlen,stoa@l
  4281  004596  C016  F035         	movff	?_strlen+1,stoa@l+1
  4282                           
  4283                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  4284  00459A  C0F9  F032         	movff	_prec,stoa@p
  4285  00459E  C0FA  F033         	movff	_prec+1,stoa@p+1
  4286                           
  4287                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  4288  0045A2  BE33               	btfsc	(stoa@p+1)^0,7,c
  4289  0045A4  D00E               	goto	l1951
  4290  0045A6  5034               	movf	stoa@l^0,w,c
  4291  0045A8  5C32               	subwf	stoa@p^0,w,c
  4292  0045AA  5033               	movf	(stoa@p+1)^0,w,c
  4293  0045AC  0A80               	xorlw	128
  4294  0045AE  6E24               	movwf	??_stoa^0,c
  4295  0045B0  5035               	movf	(stoa@l+1)^0,w,c
  4296  0045B2  0A80               	xorlw	128
  4297  0045B4  5824               	subwfb	??_stoa^0,w,c
  4298  0045B6  B0D8               	btfsc	status,0,c
  4299  0045B8  D004               	goto	l1951
  4300  0045BA  C032  F034         	movff	stoa@p,stoa@l
  4301  0045BE  C033  F035         	movff	stoa@p+1,stoa@l+1
  4302  0045C2                     l1951:
  4303                           
  4304                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  4305  0045C2  C034  F032         	movff	stoa@l,stoa@p
  4306  0045C6  C035  F033         	movff	stoa@l+1,stoa@p+1
  4307                           
  4308                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  4309  0045CA  C0F7  F02E         	movff	_width,stoa@w
  4310  0045CE  C0F8  F02F         	movff	_width+1,stoa@w+1
  4311                           
  4312                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  4313  0045D2  A03D               	btfss	_flags^0,0,c
  4314  0045D4  D00D               	goto	l9816
  4315  0045D6  D016               	goto	u11610
  4316  0045D8                     l9812:
  4317                           
  4318                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  4319  0045D8  0E00               	movlw	0
  4320  0045DA  6E18               	movwf	(fputc@c+1)^0,c
  4321  0045DC  0E20               	movlw	32
  4322  0045DE  6E17               	movwf	fputc@c^0,c
  4323  0045E0  C020  F019         	movff	stoa@fp,fputc@fp
  4324  0045E4  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4325  0045E8  EC37  F027         	call	_fputc	;wreg free
  4326                           
  4327                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  4328  0045EC  4A34               	infsnz	stoa@l^0,f,c
  4329  0045EE  2A35               	incf	(stoa@l+1)^0,f,c
  4330  0045F0                     l9816:
  4331                           
  4332                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  4333  0045F0  502E               	movf	stoa@w^0,w,c
  4334  0045F2  5C34               	subwf	stoa@l^0,w,c
  4335  0045F4  5035               	movf	(stoa@l+1)^0,w,c
  4336  0045F6  0A80               	xorlw	128
  4337  0045F8  6E24               	movwf	??_stoa^0,c
  4338  0045FA  502F               	movf	(stoa@w+1)^0,w,c
  4339  0045FC  0A80               	xorlw	128
  4340  0045FE  5824               	subwfb	??_stoa^0,w,c
  4341  004600  A0D8               	btfss	status,0,c
  4342  004602  D7EA               	goto	l9812
  4343  004604                     u11610:
  4344                           
  4345                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  4346  004604  0E00               	movlw	0
  4347  004606  6E2D               	movwf	(stoa@i+1)^0,c
  4348  004608  0E00               	movlw	0
  4349  00460A  6E2C               	movwf	stoa@i^0,c
  4350                           
  4351                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4352  00460C  D023               	goto	l9826
  4353  00460E                     l9820:
  4354                           
  4355                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  4356  00460E  0060  F0C3  FFF6   	movff	stoa@cp,tblptrl
  4357  004614  0060  F0C7  FFF7   	movff	stoa@cp+1,tblptrh
  4358  00461A  0E00               	movlw	low (__smallconst shr (0+16))
  4359  00461C  6EF8               	movwf	tblptru,c
  4360  00461E  0E1F               	movlw	(high __ramtop+-1)
  4361  004620  64F7               	cpfsgt	tblptrh,c
  4362  004622  D003               	bra	u11627
  4363  004624  0008               	tblrd		*
  4364  004626  50F5               	movf	tablat,w,c
  4365  004628  D007               	bra	u11620
  4366  00462A                     u11627:
  4367  00462A  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4368  004630  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4369  004636  50E7               	movf	indf1,w,c
  4370  004638                     u11620:
  4371  004638  6E24               	movwf	??_stoa^0,c
  4372  00463A  5024               	movf	??_stoa^0,w,c
  4373  00463C  6E17               	movwf	fputc@c^0,c
  4374  00463E  6A18               	clrf	(fputc@c+1)^0,c
  4375  004640  C020  F019         	movff	stoa@fp,fputc@fp
  4376  004644  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4377  004648  EC37  F027         	call	_fputc	;wreg free
  4378                           
  4379                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  4380  00464C  4A30               	infsnz	stoa@cp^0,f,c
  4381  00464E  2A31               	incf	(stoa@cp+1)^0,f,c
  4382                           
  4383                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  4384  004650  4A2C               	infsnz	stoa@i^0,f,c
  4385  004652  2A2D               	incf	(stoa@i+1)^0,f,c
  4386  004654                     l9826:
  4387                           
  4388                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4389  004654  5032               	movf	stoa@p^0,w,c
  4390  004656  5C2C               	subwf	stoa@i^0,w,c
  4391  004658  502D               	movf	(stoa@i+1)^0,w,c
  4392  00465A  0A80               	xorlw	128
  4393  00465C  6E24               	movwf	??_stoa^0,c
  4394  00465E  5033               	movf	(stoa@p+1)^0,w,c
  4395  004660  0A80               	xorlw	128
  4396  004662  5824               	subwfb	??_stoa^0,w,c
  4397  004664  A0D8               	btfss	status,0,c
  4398  004666  D7D3               	goto	l9820
  4399                           
  4400                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  4401  004668  B03D               	btfsc	_flags^0,0,c
  4402  00466A  D00D               	goto	l9834
  4403  00466C  D016               	goto	u11650
  4404  00466E                     l9830:
  4405                           
  4406                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  4407  00466E  0E00               	movlw	0
  4408  004670  6E18               	movwf	(fputc@c+1)^0,c
  4409  004672  0E20               	movlw	32
  4410  004674  6E17               	movwf	fputc@c^0,c
  4411  004676  C020  F019         	movff	stoa@fp,fputc@fp
  4412  00467A  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4413  00467E  EC37  F027         	call	_fputc	;wreg free
  4414                           
  4415                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  4416  004682  4A34               	infsnz	stoa@l^0,f,c
  4417  004684  2A35               	incf	(stoa@l+1)^0,f,c
  4418  004686                     l9834:
  4419                           
  4420                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  4421  004686  502E               	movf	stoa@w^0,w,c
  4422  004688  5C34               	subwf	stoa@l^0,w,c
  4423  00468A  5035               	movf	(stoa@l+1)^0,w,c
  4424  00468C  0A80               	xorlw	128
  4425  00468E  6E24               	movwf	??_stoa^0,c
  4426  004690  502F               	movf	(stoa@w+1)^0,w,c
  4427  004692  0A80               	xorlw	128
  4428  004694  5824               	subwfb	??_stoa^0,w,c
  4429  004696  A0D8               	btfss	status,0,c
  4430  004698  D7EA               	goto	l9830
  4431  00469A                     u11650:
  4432                           
  4433                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  4434                           
  4435                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  4436  00469A  C034  F020         	movff	stoa@l,?_stoa
  4437  00469E  C035  F021         	movff	stoa@l+1,?_stoa+1
  4438  0046A2  0012               	return		;funcret
  4439  0046A4                     __end_of_stoa:
  4440                           	callstack 0
  4441                           
  4442 ;; *************** function _efgtoa *****************
  4443 ;; Defined at:
  4444 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  4447 ;;		 -> sprintf@f(11), NULL(0), 
  4448 ;;  f               4   19[BANK0 ] PTR struct _IO_FILE
  4449 ;;  c               1   23[BANK0 ] unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  u               4   75[BANK0 ] unsigned char 
  4452 ;;  g               4   65[BANK0 ] unsigned char 
  4453 ;;  l               4   61[BANK0 ] unsigned char 
  4454 ;;  h               4   57[BANK0 ] unsigned char 
  4455 ;;  ou              4   43[BANK0 ] unsigned char 
  4456 ;;  n               2   73[BANK0 ] int 
  4457 ;;  e               2   71[BANK0 ] int 
  4458 ;;  i               2   69[BANK0 ] int 
  4459 ;;  w               2   54[BANK0 ] int 
  4460 ;;  p               2   51[BANK0 ] int 
  4461 ;;  sign            2   49[BANK0 ] int 
  4462 ;;  d               2   47[BANK0 ] int 
  4463 ;;  m               2   41[BANK0 ] int 
  4464 ;;  ne              2   39[BANK0 ] int 
  4465 ;;  pp              2   37[BANK0 ] int 
  4466 ;;  t               2   35[BANK0 ] int 
  4467 ;;  mode            1   56[BANK0 ] unsigned char 
  4468 ;;  nmode           1   53[BANK0 ] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  2   17[BANK0 ] int 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 3F/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4478 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4479 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4480 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4481 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4482 ;;Total ram usage:       62 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; Hardware stack levels required when called: 9
  4485 ;; This function calls:
  4486 ;;		___awdiv
  4487 ;;		___awmod
  4488 ;;		___fladd
  4489 ;;		___fldiv
  4490 ;;		___fleq
  4491 ;;		___flge
  4492 ;;		___flmul
  4493 ;;		___flneg
  4494 ;;		___flsub
  4495 ;;		___fltol
  4496 ;;		___fpclassifyf
  4497 ;;		_floorf
  4498 ;;		_isupper
  4499 ;;		_pad
  4500 ;;		_strcpy
  4501 ;;		_tolower
  4502 ;; This function is called by:
  4503 ;;		_vfpfcnvrt
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text11
  4508  0020CC                     __ptext11:
  4509                           	callstack 0
  4510  0020CC                     _efgtoa:
  4511                           	callstack 16
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  4515                           
  4516                           ;incstack = 0
  4517  0020CC  0E00               	movlw	0
  4518  0020CE  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4519  0020D0  0E00               	movlw	0
  4520  0020D2  6F91               	movwf	efgtoa@sign& (0+255),b
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  4524  0020D4  C073  F0A1         	movff	efgtoa@f,efgtoa@g
  4525  0020D8  C074  F0A2         	movff	efgtoa@f+1,efgtoa@g+1
  4526  0020DC  C075  F0A3         	movff	efgtoa@f+2,efgtoa@g+2
  4527  0020E0  C076  F0A4         	movff	efgtoa@f+3,efgtoa@g+3
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  4531  0020E4  AFA4               	btfss	(efgtoa@g+3)& (0+255),7,b
  4532  0020E6  D016               	goto	l9498
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  4536  0020E8  0E00               	movlw	0
  4537  0020EA  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4538  0020EC  0E01               	movlw	1
  4539  0020EE  6F91               	movwf	efgtoa@sign& (0+255),b
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  4543  0020F0  C0A1  F015         	movff	efgtoa@g,___flneg@f1
  4544  0020F4  C0A2  F016         	movff	efgtoa@g+1,___flneg@f1+1
  4545  0020F8  C0A3  F017         	movff	efgtoa@g+2,___flneg@f1+2
  4546  0020FC  C0A4  F018         	movff	efgtoa@g+3,___flneg@f1+3
  4547  002100  EC01  F02D         	call	___flneg	;wreg free
  4548  002104  C015  F0A1         	movff	?___flneg,efgtoa@g
  4549  002108  C016  F0A2         	movff	?___flneg+1,efgtoa@g+1
  4550  00210C  C017  F0A3         	movff	?___flneg+2,efgtoa@g+2
  4551  002110  C018  F0A4         	movff	?___flneg+3,efgtoa@g+3
  4552  002114                     l9498:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  4556  002114  0E00               	movlw	0
  4557  002116  6FAA               	movwf	(efgtoa@n+1)& (0+255),b
  4558  002118  0E00               	movlw	0
  4559  00211A  6FA9               	movwf	efgtoa@n& (0+255),b
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  4563  00211C  C0F7  F096         	movff	_width,efgtoa@w
  4564  002120  C0F8  F097         	movff	_width+1,efgtoa@w+1
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  4568  002124  5191               	movf	efgtoa@sign& (0+255),w,b
  4569  002126  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4570  002128  A4D8               	btfss	status,2,c
  4571  00212A  D002               	goto	u11100
  4572                           
  4573                           ; BSR set to: 0
  4574  00212C  A43D               	btfss	_flags^0,2,c
  4575  00212E  D013               	goto	l9518
  4576  002130                     u11100:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  4580  002130  5191               	movf	efgtoa@sign& (0+255),w,b
  4581  002132  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4582  002134  A4D8               	btfss	status,2,c
  4583  002136  D004               	goto	l9510
  4584                           
  4585                           ; BSR set to: 0
  4586  002138  0E00               	movlw	0
  4587  00213A  6F7E               	movwf	(_efgtoa$2645+1)& (0+255),b
  4588  00213C  0E2B               	movlw	43
  4589  00213E  D003               	goto	L3
  4590  002140                     l9510:
  4591                           
  4592                           ; BSR set to: 0
  4593  002140  0E00               	movlw	0
  4594  002142  6F7E               	movwf	(_efgtoa$2645+1)& (0+255),b
  4595  002144  0E2D               	movlw	45
  4596  002146                     L3:
  4597  002146  6F7D               	movwf	_efgtoa$2645& (0+255),b
  4598                           
  4599                           ; BSR set to: 0
  4600  002148  C07D  F198         	movff	_efgtoa$2645,_dbuf
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  4604  00214C  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  4605  00214E  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  4609  002150  0796               	decf	efgtoa@w& (0+255),f,b
  4610  002152  A0D8               	btfss	status,0,c
  4611  002154  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  4612  002156                     l9518:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  4616  002156  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4617  00215A  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4618  00215E  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4619  002162  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4620  002166  EC5A  F025         	call	___fpclassifyf	;wreg free
  4621  00216A  0415               	decf	?___fpclassifyf^0,w,c
  4622  00216C  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4623  00216E  A4D8               	btfss	status,2,c
  4624  002170  D047               	goto	l9536
  4625  002172  0EBF               	movlw	191
  4626  002174  0100               	movlb	0	; () banked
  4627  002176  6F78               	movwf	??_efgtoa& (0+255),b
  4628  002178  0EFF               	movlw	255
  4629  00217A  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4630  00217C  5177               	movf	efgtoa@c& (0+255),w,b
  4631  00217E  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4632  002180  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4633  002182  5178               	movf	??_efgtoa& (0+255),w,b
  4634  002184  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4635  002186  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4636  002188  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4637  00218A  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4638  00218C  E113               	bnz	l9528
  4639  00218E  0E1A               	movlw	26
  4640  002190  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4641  002192  B0D8               	btfsc	status,0,c
  4642  002194  D00F               	goto	l9528
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  4646  002196  0E98               	movlw	low _dbuf
  4647  002198  25A9               	addwf	efgtoa@n& (0+255),w,b
  4648  00219A  6E15               	movwf	strcpy@dest^0,c
  4649  00219C  0E01               	movlw	high _dbuf
  4650  00219E  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4651  0021A0  6E16               	movwf	(strcpy@dest+1)^0,c
  4652  0021A2  0EAA               	movlw	low STR_11
  4653  0021A4  6E17               	movwf	strcpy@src^0,c
  4654  0021A6  5017               	movf	strcpy@src^0,w,c
  4655  0021A8  A4D8               	btfss	status,2,c
  4656  0021AA  0E20               	movlw	high __smallconst
  4657  0021AC  6E18               	movwf	(strcpy@src+1)^0,c
  4658  0021AE  EC40  F02A         	call	_strcpy	;wreg free
  4659                           
  4660                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  4661  0021B2  D00E               	goto	l9530
  4662  0021B4                     l9528:
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  4666  0021B4  0E98               	movlw	low _dbuf
  4667  0021B6  25A9               	addwf	efgtoa@n& (0+255),w,b
  4668  0021B8  6E15               	movwf	strcpy@dest^0,c
  4669  0021BA  0E01               	movlw	high _dbuf
  4670  0021BC  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4671  0021BE  6E16               	movwf	(strcpy@dest+1)^0,c
  4672  0021C0  0EB2               	movlw	low STR_12
  4673  0021C2  6E17               	movwf	strcpy@src^0,c
  4674  0021C4  5017               	movf	strcpy@src^0,w,c
  4675  0021C6  A4D8               	btfss	status,2,c
  4676  0021C8  0E20               	movlw	high __smallconst
  4677  0021CA  6E18               	movwf	(strcpy@src+1)^0,c
  4678  0021CC  EC40  F02A         	call	_strcpy	;wreg free
  4679  0021D0                     l9530:
  4680                           
  4681                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  4682  0021D0  0100               	movlb	0	; () banked
  4683  0021D2  0EFD               	movlw	253
  4684  0021D4  2796               	addwf	efgtoa@w& (0+255),f,b
  4685  0021D6  0EFF               	movlw	255
  4686  0021D8  2397               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4687  0021DA                     l9532:
  4688                           
  4689                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  4690  0021DA  C071  F029         	movff	efgtoa@fp,pad@fp
  4691  0021DE  C072  F02A         	movff	efgtoa@fp+1,pad@fp+1
  4692  0021E2  0E98               	movlw	low _dbuf
  4693  0021E4  6E2B               	movwf	pad@buf^0,c
  4694  0021E6  0E01               	movlw	high _dbuf
  4695  0021E8  6E2C               	movwf	(pad@buf+1)^0,c
  4696  0021EA  C096  F02D         	movff	efgtoa@w,pad@p
  4697  0021EE  C097  F02E         	movff	efgtoa@w+1,pad@p+1
  4698  0021F2  EC87  F028         	call	_pad	;wreg free
  4699  0021F6  C029  F071         	movff	?_pad,?_efgtoa
  4700  0021FA  C02A  F072         	movff	?_pad+1,?_efgtoa+1
  4701  0021FE  0012               	return	
  4702  002200                     l9536:
  4703                           
  4704                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  4705  002200  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4706  002204  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4707  002208  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4708  00220C  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4709  002210  EC5A  F025         	call	___fpclassifyf	;wreg free
  4710  002214  5015               	movf	?___fpclassifyf^0,w,c
  4711  002216  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4712  002218  A4D8               	btfss	status,2,c
  4713  00221A  D030               	goto	l9554
  4714  00221C  0EBF               	movlw	191
  4715  00221E  0100               	movlb	0	; () banked
  4716  002220  6F78               	movwf	??_efgtoa& (0+255),b
  4717  002222  0EFF               	movlw	255
  4718  002224  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4719  002226  5177               	movf	efgtoa@c& (0+255),w,b
  4720  002228  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4721  00222A  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4722  00222C  5178               	movf	??_efgtoa& (0+255),w,b
  4723  00222E  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4724  002230  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4725  002232  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4726  002234  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4727  002236  E113               	bnz	l9546
  4728  002238  0E1A               	movlw	26
  4729  00223A  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4730  00223C  B0D8               	btfsc	status,0,c
  4731  00223E  D00F               	goto	l9546
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  4735  002240  0E98               	movlw	low _dbuf
  4736  002242  25A9               	addwf	efgtoa@n& (0+255),w,b
  4737  002244  6E15               	movwf	strcpy@dest^0,c
  4738  002246  0E01               	movlw	high _dbuf
  4739  002248  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4740  00224A  6E16               	movwf	(strcpy@dest+1)^0,c
  4741  00224C  0EAE               	movlw	low STR_15
  4742  00224E  6E17               	movwf	strcpy@src^0,c
  4743  002250  5017               	movf	strcpy@src^0,w,c
  4744  002252  A4D8               	btfss	status,2,c
  4745  002254  0E20               	movlw	high __smallconst
  4746  002256  6E18               	movwf	(strcpy@src+1)^0,c
  4747  002258  EC40  F02A         	call	_strcpy	;wreg free
  4748                           
  4749                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  4750  00225C  D7B9               	goto	l9530
  4751  00225E                     l9546:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  4755  00225E  0E98               	movlw	low _dbuf
  4756  002260  25A9               	addwf	efgtoa@n& (0+255),w,b
  4757  002262  6E15               	movwf	strcpy@dest^0,c
  4758  002264  0E01               	movlw	high _dbuf
  4759  002266  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4760  002268  6E16               	movwf	(strcpy@dest+1)^0,c
  4761  00226A  0EB6               	movlw	low STR_16
  4762  00226C  6E17               	movwf	strcpy@src^0,c
  4763  00226E  5017               	movf	strcpy@src^0,w,c
  4764  002270  A4D8               	btfss	status,2,c
  4765  002272  0E20               	movlw	high __smallconst
  4766  002274  6E18               	movwf	(strcpy@src+1)^0,c
  4767  002276  EC40  F02A         	call	_strcpy	;wreg free
  4768  00227A  D7AA               	goto	l9530
  4769  00227C                     l9554:
  4770                           
  4771                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  4772  00227C  0E00               	movlw	0
  4773  00227E  0100               	movlb	0	; () banked
  4774  002280  6FAB               	movwf	efgtoa@u& (0+255),b
  4775  002282  0E00               	movlw	0
  4776  002284  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  4777  002286  0E80               	movlw	128
  4778  002288  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  4779  00228A  0E3F               	movlw	63
  4780  00228C  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  4781                           
  4782                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  4783  00228E  0E00               	movlw	0
  4784  002290  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  4785  002292  0E00               	movlw	0
  4786  002294  6FA7               	movwf	efgtoa@e& (0+255),b
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  4790  002296  C0A1  F015         	movff	efgtoa@g,___fleq@ff1
  4791  00229A  C0A2  F016         	movff	efgtoa@g+1,___fleq@ff1+1
  4792  00229E  C0A3  F017         	movff	efgtoa@g+2,___fleq@ff1+2
  4793  0022A2  C0A4  F018         	movff	efgtoa@g+3,___fleq@ff1+3
  4794  0022A6  0E00               	movlw	0
  4795  0022A8  6E19               	movwf	___fleq@ff2^0,c
  4796  0022AA  0E00               	movlw	0
  4797  0022AC  6E1A               	movwf	(___fleq@ff2+1)^0,c
  4798  0022AE  0E00               	movlw	0
  4799  0022B0  6E1B               	movwf	(___fleq@ff2+2)^0,c
  4800  0022B2  0E00               	movlw	0
  4801  0022B4  6E1C               	movwf	(___fleq@ff2+3)^0,c
  4802  0022B6  ECD2  F028         	call	___fleq	;wreg free
  4803  0022BA  A0D8               	btfss	status,0,c
  4804  0022BC  D01D               	goto	l9564
  4805  0022BE  D074               	goto	u11180
  4806  0022C0                     l9560:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  4810  0022C0  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4811  0022C4  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4812  0022C8  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4813  0022CC  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4814  0022D0  0E00               	movlw	0
  4815  0022D2  6E27               	movwf	___flmul@a^0,c
  4816  0022D4  0E00               	movlw	0
  4817  0022D6  6E28               	movwf	(___flmul@a+1)^0,c
  4818  0022D8  0E20               	movlw	32
  4819  0022DA  6E29               	movwf	(___flmul@a+2)^0,c
  4820  0022DC  0E41               	movlw	65
  4821  0022DE  6E2A               	movwf	(___flmul@a+3)^0,c
  4822  0022E0  EC88  F018         	call	___flmul	;wreg free
  4823  0022E4  C023  F0AB         	movff	?___flmul,efgtoa@u
  4824  0022E8  C024  F0AC         	movff	?___flmul+1,efgtoa@u+1
  4825  0022EC  C025  F0AD         	movff	?___flmul+2,efgtoa@u+2
  4826  0022F0  C026  F0AE         	movff	?___flmul+3,efgtoa@u+3
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  4830  0022F4  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  4831  0022F6  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  4832  0022F8                     l9564:
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  4836  0022F8  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4837  0022FC  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4838  002300  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4839  002304  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4840  002308  0E00               	movlw	0
  4841  00230A  6E27               	movwf	___flmul@a^0,c
  4842  00230C  0E00               	movlw	0
  4843  00230E  6E28               	movwf	(___flmul@a+1)^0,c
  4844  002310  0E20               	movlw	32
  4845  002312  6E29               	movwf	(___flmul@a+2)^0,c
  4846  002314  0E41               	movlw	65
  4847  002316  6E2A               	movwf	(___flmul@a+3)^0,c
  4848  002318  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4849  00231C  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4850  002320  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4851  002324  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4852  002328  EC88  F018         	call	___flmul	;wreg free
  4853  00232C  C023  F033         	movff	?___flmul,___flge@ff2
  4854  002330  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  4855  002334  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  4856  002338  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  4857  00233C  EC8B  F024         	call	___flge	;wreg free
  4858  002340  A0D8               	btfss	status,0,c
  4859  002342  D01E               	goto	l9570
  4860  002344  D7BD               	goto	l9560
  4861  002346                     l9566:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  4865  002346  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  4866  00234A  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  4867  00234E  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  4868  002352  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  4869  002356  0E00               	movlw	0
  4870  002358  6E19               	movwf	___fldiv@a^0,c
  4871  00235A  0E00               	movlw	0
  4872  00235C  6E1A               	movwf	(___fldiv@a+1)^0,c
  4873  00235E  0E20               	movlw	32
  4874  002360  6E1B               	movwf	(___fldiv@a+2)^0,c
  4875  002362  0E41               	movlw	65
  4876  002364  6E1C               	movwf	(___fldiv@a+3)^0,c
  4877  002366  ECB7  F01B         	call	___fldiv	;wreg free
  4878  00236A  C015  F0AB         	movff	?___fldiv,efgtoa@u
  4879  00236E  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  4880  002372  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  4881  002376  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  4885  00237A  07A7               	decf	efgtoa@e& (0+255),f,b
  4886  00237C  A0D8               	btfss	status,0,c
  4887  00237E  07A8               	decf	(efgtoa@e+1)& (0+255),f,b
  4888  002380                     l9570:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  4892  002380  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4893  002384  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4894  002388  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4895  00238C  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4896  002390  C0AB  F033         	movff	efgtoa@u,___flge@ff2
  4897  002394  C0AC  F034         	movff	efgtoa@u+1,___flge@ff2+1
  4898  002398  C0AD  F035         	movff	efgtoa@u+2,___flge@ff2+2
  4899  00239C  C0AE  F036         	movff	efgtoa@u+3,___flge@ff2+3
  4900  0023A0  EC8B  F024         	call	___flge	;wreg free
  4901  0023A4  A0D8               	btfss	status,0,c
  4902  0023A6  D7CF               	goto	l9566
  4903  0023A8                     u11180:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  4907  0023A8  C077  F01B         	movff	efgtoa@c,tolower@c
  4908  0023AC  6A1C               	clrf	(tolower@c+1)^0,c
  4909  0023AE  EC5D  F02C         	call	_tolower	;wreg free
  4910  0023B2  501B               	movf	?_tolower^0,w,c
  4911  0023B4  6F98               	movwf	efgtoa@mode& (0+255),b
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  4915  0023B6  C098  F095         	movff	efgtoa@mode,efgtoa@nmode
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  4919  0023BA  0E67               	movlw	103
  4920  0023BC  1998               	xorwf	efgtoa@mode& (0+255),w,b
  4921  0023BE  A4D8               	btfss	status,2,c
  4922  0023C0  D019               	goto	l9586
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  4926  0023C2  51F9               	movf	_prec& (0+255),w,b
  4927  0023C4  11FA               	iorwf	(_prec+1)& (0+255),w,b
  4928  0023C6  A4D8               	btfss	status,2,c
  4929  0023C8  D004               	goto	l9582
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  4933  0023CA  0E00               	movlw	0
  4934  0023CC  6FFA               	movwf	(_prec+1)& (0+255),b
  4935  0023CE  0E01               	movlw	1
  4936  0023D0  6FF9               	movwf	_prec& (0+255),b
  4937  0023D2                     l9582:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  4941  0023D2  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  4942  0023D4  D005               	goto	u11210
  4943  0023D6  51FA               	movf	(_prec+1)& (0+255),w,b
  4944  0023D8  E108               	bnz	l1887
  4945  0023DA  05F9               	decf	_prec& (0+255),w,b
  4946  0023DC  B0D8               	btfsc	status,0,c
  4947  0023DE  D005               	goto	l1887
  4948  0023E0                     u11210:
  4949                           
  4950                           ; BSR set to: 0
  4951  0023E0  0E00               	movlw	0
  4952  0023E2  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  4953  0023E4  0E06               	movlw	6
  4954  0023E6  6F93               	movwf	efgtoa@p& (0+255),b
  4955  0023E8  D008               	goto	l9592
  4956  0023EA                     l1887:
  4957                           
  4958                           ; BSR set to: 0
  4959  0023EA  C0F9  F093         	movff	_prec,efgtoa@p
  4960  0023EE  C0FA  F094         	movff	_prec+1,efgtoa@p+1
  4961  0023F2  D003               	goto	l9592
  4962  0023F4                     l9586:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  4966  0023F4  AFFA               	btfss	(_prec+1)& (0+255),7,b
  4967  0023F6  D7F9               	goto	l1887
  4968  0023F8  D7F3               	goto	u11210
  4969  0023FA                     l9592:
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  4973  0023FA  0E67               	movlw	103
  4974  0023FC  1998               	xorwf	efgtoa@mode& (0+255),w,b
  4975  0023FE  A4D8               	btfss	status,2,c
  4976  002400  D022               	goto	l9602
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  4980  002402  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  4981  002404  D006               	goto	u11240
  4982  002406  0EFC               	movlw	252
  4983  002408  5DA7               	subwf	efgtoa@e& (0+255),w,b
  4984  00240A  0EFF               	movlw	255
  4985  00240C  59A8               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4986  00240E  A0D8               	btfss	status,0,c
  4987  002410  D018               	goto	l9600
  4988  002412                     u11240:
  4989                           
  4990                           ; BSR set to: 0
  4991  002412  0EFF               	movlw	255
  4992  002414  6F78               	movwf	??_efgtoa& (0+255),b
  4993  002416  0EFF               	movlw	255
  4994  002418  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4995  00241A  C093  F07A         	movff	efgtoa@p,??_efgtoa+2
  4996  00241E  C094  F07B         	movff	efgtoa@p+1,??_efgtoa+3
  4997  002422  5178               	movf	??_efgtoa& (0+255),w,b
  4998  002424  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4999  002426  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5000  002428  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5001  00242A  51A7               	movf	efgtoa@e& (0+255),w,b
  5002  00242C  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5003  00242E  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5004  002430  0A80               	xorlw	128
  5005  002432  6F7C               	movwf	(??_efgtoa+4)& (0+255),b
  5006  002434  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5007  002436  0A80               	xorlw	128
  5008  002438  597C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5009  00243A  A0D8               	btfss	status,0,c
  5010  00243C  D002               	goto	l9600
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  5014  00243E  0E66               	movlw	102
  5015  002440  D001               	goto	L4
  5016  002442                     l9600:
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  5020  002442  0E65               	movlw	101
  5021  002444                     L4:
  5022  002444  6F95               	movwf	efgtoa@nmode& (0+255),b
  5023  002446                     l9602:
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  5027  002446  C093  F089         	movff	efgtoa@p,efgtoa@m
  5028  00244A  C094  F08A         	movff	efgtoa@p+1,efgtoa@m+1
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  5032  00244E  0E67               	movlw	103
  5033  002450  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5034  002452  A4D8               	btfss	status,2,c
  5035  002454  D005               	goto	u11280
  5036                           
  5037                           ; BSR set to: 0
  5038  002456  0E66               	movlw	102
  5039  002458  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5040  00245A  B4D8               	btfsc	status,2,c
  5041                           
  5042                           ; BSR set to: 0
  5043  00245C  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5044  00245E  D002               	goto	l9612
  5045  002460                     u11280:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  5049  002460  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5050  002462  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5051  002464                     l9612:
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  5055  002464  0E66               	movlw	102
  5056  002466  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5057  002468  A4D8               	btfss	status,2,c
  5058  00246A  D016               	goto	l9622
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  5062  00246C  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5063  00246E  D00C               	goto	l9618
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  5067  002470  0E00               	movlw	0
  5068  002472  6FAB               	movwf	efgtoa@u& (0+255),b
  5069  002474  0E00               	movlw	0
  5070  002476  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  5071  002478  0E80               	movlw	128
  5072  00247A  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  5073  00247C  0E3F               	movlw	63
  5074  00247E  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  5075                           
  5076                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  5077  002480  0E00               	movlw	0
  5078  002482  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  5079  002484  0E00               	movlw	0
  5080  002486  6FA7               	movwf	efgtoa@e& (0+255),b
  5081  002488                     l9618:
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  5085  002488  0E67               	movlw	103
  5086  00248A  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5087  00248C  B4D8               	btfsc	status,2,c
  5088  00248E  D004               	goto	l9622
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  5092  002490  51A7               	movf	efgtoa@e& (0+255),w,b
  5093  002492  2789               	addwf	efgtoa@m& (0+255),f,b
  5094  002494  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5095  002496  238A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5096  002498                     l9622:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  5100  002498  0E00               	movlw	0
  5101  00249A  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5102  00249C  0E00               	movlw	0
  5103  00249E  6FA5               	movwf	efgtoa@i& (0+255),b
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  5107  0024A0  C0A1  F099         	movff	efgtoa@g,efgtoa@h
  5108  0024A4  C0A2  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  5109  0024A8  C0A3  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  5110  0024AC  C0A4  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  5114  0024B0  C0AB  F08B         	movff	efgtoa@u,efgtoa@ou
  5115  0024B4  C0AC  F08C         	movff	efgtoa@u+1,efgtoa@ou+1
  5116  0024B8  C0AD  F08D         	movff	efgtoa@u+2,efgtoa@ou+2
  5117  0024BC  C0AE  F08E         	movff	efgtoa@u+3,efgtoa@ou+3
  5118                           
  5119                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5120  0024C0  D07A               	goto	l9636
  5121  0024C2                     l9628:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  5125  0024C2  C099  F015         	movff	efgtoa@h,___fldiv@b
  5126  0024C6  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5127  0024CA  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5128  0024CE  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5129  0024D2  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5130  0024D6  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5131  0024DA  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5132  0024DE  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5133  0024E2  ECB7  F01B         	call	___fldiv	;wreg free
  5134  0024E6  C015  F02E         	movff	?___fldiv,floorf@x
  5135  0024EA  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5136  0024EE  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5137  0024F2  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5138  0024F6  ECD7  F01F         	call	_floorf	;wreg free
  5139  0024FA  C02E  F09D         	movff	?_floorf,efgtoa@l
  5140  0024FE  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5141  002502  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5142  002506  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5143                           
  5144                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  5145  00250A  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5146  00250E  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5147  002512  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5148  002516  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5149  00251A  EC23  F026         	call	___fltol	;wreg free
  5150  00251E  C015  F08F         	movff	?___fltol,efgtoa@d
  5151  002522  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  5155  002526  C099  F02F         	movff	efgtoa@h,___flsub@b
  5156  00252A  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5157  00252E  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5158  002532  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5159  002536  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5160  00253A  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5161  00253E  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5162  002542  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5163  002546  C09D  F023         	movff	efgtoa@l,___flmul@b
  5164  00254A  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5165  00254E  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5166  002552  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5167  002556  EC88  F018         	call	___flmul	;wreg free
  5168  00255A  C023  F033         	movff	?___flmul,___flsub@a
  5169  00255E  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5170  002562  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5171  002566  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5172  00256A  EC5B  F02B         	call	___flsub	;wreg free
  5173  00256E  C02F  F099         	movff	?___flsub,efgtoa@h
  5174  002572  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5175  002576  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5176  00257A  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  5180  00257E  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5181  002582  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5182  002586  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5183  00258A  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5184  00258E  0E00               	movlw	0
  5185  002590  6E19               	movwf	___fldiv@a^0,c
  5186  002592  0E00               	movlw	0
  5187  002594  6E1A               	movwf	(___fldiv@a+1)^0,c
  5188  002596  0E20               	movlw	32
  5189  002598  6E1B               	movwf	(___fldiv@a+2)^0,c
  5190  00259A  0E41               	movlw	65
  5191  00259C  6E1C               	movwf	(___fldiv@a+3)^0,c
  5192  00259E  ECB7  F01B         	call	___fldiv	;wreg free
  5193  0025A2  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5194  0025A6  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5195  0025AA  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5196  0025AE  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  5200  0025B2  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5201  0025B4  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5202  0025B6                     l9636:
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5206  0025B6  5189               	movf	efgtoa@m& (0+255),w,b
  5207  0025B8  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5208  0025BA  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5209  0025BC  0A80               	xorlw	128
  5210  0025BE  6F78               	movwf	??_efgtoa& (0+255),b
  5211  0025C0  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5212  0025C2  0A80               	xorlw	128
  5213  0025C4  5978               	subwfb	??_efgtoa& (0+255),w,b
  5214  0025C6  A0D8               	btfss	status,0,c
  5215  0025C8  D77C               	goto	l9628
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  5219  0025CA  C0AB  F023         	movff	efgtoa@u,___flmul@b
  5220  0025CE  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  5221  0025D2  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  5222  0025D6  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  5223  0025DA  0E00               	movlw	0
  5224  0025DC  6E27               	movwf	___flmul@a^0,c
  5225  0025DE  0E00               	movlw	0
  5226  0025E0  6E28               	movwf	(___flmul@a+1)^0,c
  5227  0025E2  0EA0               	movlw	160
  5228  0025E4  6E29               	movwf	(___flmul@a+2)^0,c
  5229  0025E6  0E40               	movlw	64
  5230  0025E8  6E2A               	movwf	(___flmul@a+3)^0,c
  5231  0025EA  EC88  F018         	call	___flmul	;wreg free
  5232  0025EE  C023  F09D         	movff	?___flmul,efgtoa@l
  5233  0025F2  C024  F09E         	movff	?___flmul+1,efgtoa@l+1
  5234  0025F6  C025  F09F         	movff	?___flmul+2,efgtoa@l+2
  5235  0025FA  C026  F0A0         	movff	?___flmul+3,efgtoa@l+3
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  5239  0025FE  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5240  002602  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5241  002606  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5242  00260A  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5243  00260E  C09D  F033         	movff	efgtoa@l,___flge@ff2
  5244  002612  C09E  F034         	movff	efgtoa@l+1,___flge@ff2+1
  5245  002616  C09F  F035         	movff	efgtoa@l+2,___flge@ff2+2
  5246  00261A  C0A0  F036         	movff	efgtoa@l+3,___flge@ff2+3
  5247  00261E  EC8B  F024         	call	___flge	;wreg free
  5248  002622  A0D8               	btfss	status,0,c
  5249  002624  D015               	goto	u11350
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  5253                           
  5254                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  5258  002626  C099  F015         	movff	efgtoa@h,___fleq@ff1
  5259  00262A  C09A  F016         	movff	efgtoa@h+1,___fleq@ff1+1
  5260  00262E  C09B  F017         	movff	efgtoa@h+2,___fleq@ff1+2
  5261  002632  C09C  F018         	movff	efgtoa@h+3,___fleq@ff1+3
  5262  002636  C09D  F019         	movff	efgtoa@l,___fleq@ff2
  5263  00263A  C09E  F01A         	movff	efgtoa@l+1,___fleq@ff2+1
  5264  00263E  C09F  F01B         	movff	efgtoa@l+2,___fleq@ff2+2
  5265  002642  C0A0  F01C         	movff	efgtoa@l+3,___fleq@ff2+3
  5266  002646  ECD2  F028         	call	___fleq	;wreg free
  5267  00264A  B0D8               	btfsc	status,0,c
  5268                           
  5269                           ; BSR set to: 0
  5270  00264C  B18F               	btfsc	efgtoa@d& (0+255),0,b
  5271  00264E  D008               	goto	l9650
  5272  002650                     u11350:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  5276  002650  0E00               	movlw	0
  5277  002652  6F9D               	movwf	efgtoa@l& (0+255),b
  5278  002654  0E00               	movlw	0
  5279  002656  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  5280  002658  0E00               	movlw	0
  5281  00265A  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  5282  00265C  0E00               	movlw	0
  5283  00265E  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  5284  002660                     l9650:
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  5288  002660  C0A1  F015         	movff	efgtoa@g,___fladd@b
  5289  002664  C0A2  F016         	movff	efgtoa@g+1,___fladd@b+1
  5290  002668  C0A3  F017         	movff	efgtoa@g+2,___fladd@b+2
  5291  00266C  C0A4  F018         	movff	efgtoa@g+3,___fladd@b+3
  5292  002670  C09D  F019         	movff	efgtoa@l,___fladd@a
  5293  002674  C09E  F01A         	movff	efgtoa@l+1,___fladd@a+1
  5294  002678  C09F  F01B         	movff	efgtoa@l+2,___fladd@a+2
  5295  00267C  C0A0  F01C         	movff	efgtoa@l+3,___fladd@a+3
  5296  002680  EC31  F01A         	call	___fladd	;wreg free
  5297  002684  C015  F099         	movff	?___fladd,efgtoa@h
  5298  002688  C016  F09A         	movff	?___fladd+1,efgtoa@h+1
  5299  00268C  C017  F09B         	movff	?___fladd+2,efgtoa@h+2
  5300  002690  C018  F09C         	movff	?___fladd+3,efgtoa@h+3
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  5304  002694  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5305  002698  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5306  00269C  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5307  0026A0  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5308  0026A4  0E00               	movlw	0
  5309  0026A6  6E27               	movwf	___flmul@a^0,c
  5310  0026A8  0E00               	movlw	0
  5311  0026AA  6E28               	movwf	(___flmul@a+1)^0,c
  5312  0026AC  0E20               	movlw	32
  5313  0026AE  6E29               	movwf	(___flmul@a+2)^0,c
  5314  0026B0  0E41               	movlw	65
  5315  0026B2  6E2A               	movwf	(___flmul@a+3)^0,c
  5316  0026B4  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5317  0026B8  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5318  0026BC  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5319  0026C0  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5320  0026C4  EC88  F018         	call	___flmul	;wreg free
  5321  0026C8  C023  F033         	movff	?___flmul,___flge@ff2
  5322  0026CC  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  5323  0026D0  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  5324  0026D4  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  5325  0026D8  EC8B  F024         	call	___flge	;wreg free
  5326  0026DC  A0D8               	btfss	status,0,c
  5327  0026DE  D022               	goto	l9662
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  5331  0026E0  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  5332  0026E2  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  5336  0026E4  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5337  0026E8  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5338  0026EC  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5339  0026F0  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5340  0026F4  0E00               	movlw	0
  5341  0026F6  6E27               	movwf	___flmul@a^0,c
  5342  0026F8  0E00               	movlw	0
  5343  0026FA  6E28               	movwf	(___flmul@a+1)^0,c
  5344  0026FC  0E20               	movlw	32
  5345  0026FE  6E29               	movwf	(___flmul@a+2)^0,c
  5346  002700  0E41               	movlw	65
  5347  002702  6E2A               	movwf	(___flmul@a+3)^0,c
  5348  002704  EC88  F018         	call	___flmul	;wreg free
  5349  002708  C023  F08B         	movff	?___flmul,efgtoa@ou
  5350  00270C  C024  F08C         	movff	?___flmul+1,efgtoa@ou+1
  5351  002710  C025  F08D         	movff	?___flmul+2,efgtoa@ou+2
  5352  002714  C026  F08E         	movff	?___flmul+3,efgtoa@ou+3
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  5356  002718  0E66               	movlw	102
  5357  00271A  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5358  00271C  A4D8               	btfss	status,2,c
  5359  00271E  D002               	goto	l9662
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  5363  002720  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5364  002722  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5365  002724                     l9662:
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  5369  002724  C08B  F0AB         	movff	efgtoa@ou,efgtoa@u
  5370  002728  C08C  F0AC         	movff	efgtoa@ou+1,efgtoa@u+1
  5371  00272C  C08D  F0AD         	movff	efgtoa@ou+2,efgtoa@u+2
  5372  002730  C08E  F0AE         	movff	efgtoa@ou+3,efgtoa@u+3
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  5376  002734  0E65               	movlw	101
  5377  002736  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5378  002738  B4D8               	btfsc	status,2,c
  5379  00273A  D005               	goto	l9668
  5380                           
  5381                           ; BSR set to: 0
  5382  00273C  C0A7  F087         	movff	efgtoa@e,efgtoa@ne
  5383  002740  C0A8  F088         	movff	efgtoa@e+1,efgtoa@ne+1
  5384  002744  D004               	goto	l1915
  5385  002746                     l9668:
  5386                           
  5387                           ; BSR set to: 0
  5388  002746  0E00               	movlw	0
  5389  002748  6F88               	movwf	(efgtoa@ne+1)& (0+255),b
  5390  00274A  0E00               	movlw	0
  5391  00274C  6F87               	movwf	efgtoa@ne& (0+255),b
  5392  00274E                     l1915:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  5396  00274E  0E00               	movlw	0
  5397  002750  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5398  002752  0E00               	movlw	0
  5399  002754  6F85               	movwf	efgtoa@pp& (0+255),b
  5400                           
  5401                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  5402  002756  0E00               	movlw	0
  5403  002758  6F84               	movwf	(efgtoa@t+1)& (0+255),b
  5404  00275A  0E00               	movlw	0
  5405  00275C  6F83               	movwf	efgtoa@t& (0+255),b
  5406                           
  5407                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  5408  00275E  0E00               	movlw	0
  5409  002760  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5410  002762  0E00               	movlw	0
  5411  002764  6FA5               	movwf	efgtoa@i& (0+255),b
  5412                           
  5413                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5414  002766  D0C4               	goto	l9718
  5415  002768                     l9670:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  5419  002768  C099  F015         	movff	efgtoa@h,___fldiv@b
  5420  00276C  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5421  002770  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5422  002774  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5423  002778  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5424  00277C  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5425  002780  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5426  002784  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5427  002788  ECB7  F01B         	call	___fldiv	;wreg free
  5428  00278C  C015  F02E         	movff	?___fldiv,floorf@x
  5429  002790  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5430  002794  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5431  002798  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5432  00279C  ECD7  F01F         	call	_floorf	;wreg free
  5433  0027A0  C02E  F09D         	movff	?_floorf,efgtoa@l
  5434  0027A4  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5435  0027A8  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5436  0027AC  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5437                           
  5438                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  5439  0027B0  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5440  0027B4  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5441  0027B8  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5442  0027BC  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5443  0027C0  EC23  F026         	call	___fltol	;wreg free
  5444  0027C4  C015  F08F         	movff	?___fltol,efgtoa@d
  5445  0027C8  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5449  0027CC  B83D               	btfsc	_flags^0,4,c
  5450  0027CE  D00C               	goto	l9682
  5451                           
  5452                           ; BSR set to: 0
  5453  0027D0  518F               	movf	efgtoa@d& (0+255),w,b
  5454  0027D2  1190               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5455  0027D4  A4D8               	btfss	status,2,c
  5456  0027D6  D008               	goto	l9682
  5457                           
  5458                           ; BSR set to: 0
  5459  0027D8  0E67               	movlw	103
  5460  0027DA  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5461  0027DC  B4D8               	btfsc	status,2,c
  5462                           
  5463                           ; BSR set to: 0
  5464  0027DE  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5465  0027E0  D003               	goto	l9682
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  5469  0027E2  4B83               	infsnz	efgtoa@t& (0+255),f,b
  5470  0027E4  2B84               	incf	(efgtoa@t+1)& (0+255),f,b
  5471                           
  5472                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  5473  0027E6  D039               	goto	l9710
  5474  0027E8                     l9682:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  5478  0027E8  5185               	movf	efgtoa@pp& (0+255),w,b
  5479  0027EA  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5480  0027EC  B4D8               	btfsc	status,2,c
  5481                           
  5482                           ; BSR set to: 0
  5483  0027EE  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5484  0027F0  D022               	goto	l9702
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  5488  0027F2  0E98               	movlw	low _dbuf
  5489  0027F4  25A9               	addwf	efgtoa@n& (0+255),w,b
  5490  0027F6  6ED9               	movwf	fsr2l,c
  5491  0027F8  0E01               	movlw	high _dbuf
  5492  0027FA  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5493  0027FC  6EDA               	movwf	fsr2h,c
  5494  0027FE  0E2E               	movlw	46
  5495  002800  6EDF               	movwf	indf2,c
  5496                           
  5497                           ; BSR set to: 0
  5498  002802  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5499  002804  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  5503  002806  0796               	decf	efgtoa@w& (0+255),f,b
  5504  002808  A0D8               	btfss	status,0,c
  5505  00280A  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  5509  00280C  0E00               	movlw	0
  5510  00280E  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5511  002810  0E01               	movlw	1
  5512  002812  6F85               	movwf	efgtoa@pp& (0+255),b
  5513  002814  D010               	goto	l9702
  5514  002816                     l9694:
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  5518  002816  0E98               	movlw	low _dbuf
  5519  002818  25A9               	addwf	efgtoa@n& (0+255),w,b
  5520  00281A  6ED9               	movwf	fsr2l,c
  5521  00281C  0E01               	movlw	high _dbuf
  5522  00281E  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5523  002820  6EDA               	movwf	fsr2h,c
  5524  002822  0E30               	movlw	48
  5525  002824  6EDF               	movwf	indf2,c
  5526                           
  5527                           ; BSR set to: 0
  5528  002826  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5529  002828  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  5533  00282A  0796               	decf	efgtoa@w& (0+255),f,b
  5534  00282C  A0D8               	btfss	status,0,c
  5535  00282E  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  5539  002830  0783               	decf	efgtoa@t& (0+255),f,b
  5540  002832  A0D8               	btfss	status,0,c
  5541  002834  0784               	decf	(efgtoa@t+1)& (0+255),f,b
  5542  002836                     l9702:
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  5546  002836  5183               	movf	efgtoa@t& (0+255),w,b
  5547  002838  1184               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5548  00283A  A4D8               	btfss	status,2,c
  5549  00283C  D7EC               	goto	l9694
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  5553  00283E  0E98               	movlw	low _dbuf
  5554  002840  25A9               	addwf	efgtoa@n& (0+255),w,b
  5555  002842  6ED9               	movwf	fsr2l,c
  5556  002844  0E01               	movlw	high _dbuf
  5557  002846  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5558  002848  6EDA               	movwf	fsr2h,c
  5559  00284A  518F               	movf	efgtoa@d& (0+255),w,b
  5560  00284C  0F30               	addlw	48
  5561  00284E  6EDF               	movwf	indf2,c
  5562                           
  5563                           ; BSR set to: 0
  5564  002850  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5565  002852  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  5569  002854  0796               	decf	efgtoa@w& (0+255),f,b
  5570  002856  A0D8               	btfss	status,0,c
  5571  002858  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5572  00285A                     l9710:
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  5576  00285A  C099  F02F         	movff	efgtoa@h,___flsub@b
  5577  00285E  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5578  002862  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5579  002866  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5580  00286A  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5581  00286E  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5582  002872  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5583  002876  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5584  00287A  C09D  F023         	movff	efgtoa@l,___flmul@b
  5585  00287E  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5586  002882  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5587  002886  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5588  00288A  EC88  F018         	call	___flmul	;wreg free
  5589  00288E  C023  F033         	movff	?___flmul,___flsub@a
  5590  002892  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5591  002896  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5592  00289A  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5593  00289E  EC5B  F02B         	call	___flsub	;wreg free
  5594  0028A2  C02F  F099         	movff	?___flsub,efgtoa@h
  5595  0028A6  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5596  0028AA  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5597  0028AE  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  5601  0028B2  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5602  0028B6  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5603  0028BA  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5604  0028BE  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5605  0028C2  0E00               	movlw	0
  5606  0028C4  6E19               	movwf	___fldiv@a^0,c
  5607  0028C6  0E00               	movlw	0
  5608  0028C8  6E1A               	movwf	(___fldiv@a+1)^0,c
  5609  0028CA  0E20               	movlw	32
  5610  0028CC  6E1B               	movwf	(___fldiv@a+2)^0,c
  5611  0028CE  0E41               	movlw	65
  5612  0028D0  6E1C               	movwf	(___fldiv@a+3)^0,c
  5613  0028D2  ECB7  F01B         	call	___fldiv	;wreg free
  5614  0028D6  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5615  0028DA  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5616  0028DE  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5617  0028E2  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  5621  0028E6  0787               	decf	efgtoa@ne& (0+255),f,b
  5622  0028E8  A0D8               	btfss	status,0,c
  5623  0028EA  0788               	decf	(efgtoa@ne+1)& (0+255),f,b
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  5627  0028EC  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5628  0028EE  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5629  0028F0                     l9718:
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5633  0028F0  5189               	movf	efgtoa@m& (0+255),w,b
  5634  0028F2  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5635  0028F4  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5636  0028F6  0A80               	xorlw	128
  5637  0028F8  6F78               	movwf	??_efgtoa& (0+255),b
  5638  0028FA  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5639  0028FC  0A80               	xorlw	128
  5640  0028FE  5978               	subwfb	??_efgtoa& (0+255),w,b
  5641  002900  B0D8               	btfsc	status,0,c
  5642  002902  D008               	goto	u11470
  5643                           
  5644                           ; BSR set to: 0
  5645  002904  BFAA               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5646  002906  D730               	goto	l9670
  5647  002908  51AA               	movf	(efgtoa@n+1)& (0+255),w,b
  5648  00290A  E104               	bnz	u11470
  5649  00290C  0E4B               	movlw	75
  5650  00290E  5DA9               	subwf	efgtoa@n& (0+255),w,b
  5651  002910  A0D8               	btfss	status,0,c
  5652  002912  D72A               	goto	l9670
  5653  002914                     u11470:
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  5657  002914  5185               	movf	efgtoa@pp& (0+255),w,b
  5658  002916  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5659  002918  B4D8               	btfsc	status,2,c
  5660                           
  5661                           ; BSR set to: 0
  5662  00291A  A83D               	btfss	_flags^0,4,c
  5663  00291C  D00A               	goto	l9730
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  5667  00291E  0E98               	movlw	low _dbuf
  5668  002920  25A9               	addwf	efgtoa@n& (0+255),w,b
  5669  002922  6ED9               	movwf	fsr2l,c
  5670  002924  0E01               	movlw	high _dbuf
  5671  002926  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5672  002928  6EDA               	movwf	fsr2h,c
  5673  00292A  0E2E               	movlw	46
  5674  00292C  6EDF               	movwf	indf2,c
  5675                           
  5676                           ; BSR set to: 0
  5677  00292E  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5678  002930  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5679  002932                     l9730:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  5683  002932  0E98               	movlw	low _dbuf
  5684  002934  25A9               	addwf	efgtoa@n& (0+255),w,b
  5685  002936  6ED9               	movwf	fsr2l,c
  5686  002938  0E01               	movlw	high _dbuf
  5687  00293A  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5688  00293C  6EDA               	movwf	fsr2h,c
  5689  00293E  0E00               	movlw	0
  5690  002940  6EDF               	movwf	indf2,c
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  5694  002942  0E65               	movlw	101
  5695  002944  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5696  002946  A4D8               	btfss	status,2,c
  5697  002948  D448               	goto	l9532
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  5701  00294A  0E00               	movlw	0
  5702  00294C  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5703  00294E  0E4F               	movlw	79
  5704  002950  6FA5               	movwf	efgtoa@i& (0+255),b
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  5708  002952  0E98               	movlw	low _dbuf
  5709  002954  25A5               	addwf	efgtoa@i& (0+255),w,b
  5710  002956  6ED9               	movwf	fsr2l,c
  5711  002958  0E01               	movlw	high _dbuf
  5712  00295A  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5713  00295C  6EDA               	movwf	fsr2h,c
  5714  00295E  0E00               	movlw	0
  5715  002960  6EDF               	movwf	indf2,c
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  5719  002962  0E00               	movlw	0
  5720  002964  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5721  002966  0E00               	movlw	0
  5722  002968  6F91               	movwf	efgtoa@sign& (0+255),b
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  5726  00296A  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5727  00296C  D008               	goto	l9746
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  5731  00296E  0E00               	movlw	0
  5732  002970  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5733  002972  0E01               	movlw	1
  5734  002974  6F91               	movwf	efgtoa@sign& (0+255),b
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  5738  002976  6DA7               	negf	efgtoa@e& (0+255),b
  5739  002978  1FA8               	comf	(efgtoa@e+1)& (0+255),f,b
  5740  00297A  B0D8               	btfsc	status,0,c
  5741  00297C  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5742  00297E                     l9746:
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  5746  00297E  0E00               	movlw	0
  5747  002980  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5748  002982  0E02               	movlw	2
  5749  002984  6F93               	movwf	efgtoa@p& (0+255),b
  5750                           
  5751                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5752  002986  D02A               	goto	l9758
  5753  002988                     l9748:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  5757  002988  07A5               	decf	efgtoa@i& (0+255),f,b
  5758  00298A  A0D8               	btfss	status,0,c
  5759  00298C  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  5763  00298E  0E98               	movlw	low _dbuf
  5764  002990  25A5               	addwf	efgtoa@i& (0+255),w,b
  5765  002992  6ED9               	movwf	fsr2l,c
  5766  002994  0E01               	movlw	high _dbuf
  5767  002996  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5768  002998  6EDA               	movwf	fsr2h,c
  5769  00299A  C0A7  F015         	movff	efgtoa@e,___awmod@dividend
  5770  00299E  C0A8  F016         	movff	efgtoa@e+1,___awmod@dividend+1
  5771  0029A2  0E00               	movlw	0
  5772  0029A4  6E18               	movwf	(___awmod@divisor+1)^0,c
  5773  0029A6  0E0A               	movlw	10
  5774  0029A8  6E17               	movwf	___awmod@divisor^0,c
  5775  0029AA  ECD4  F029         	call	___awmod	;wreg free
  5776  0029AE  5015               	movf	?___awmod^0,w,c
  5777  0029B0  0F30               	addlw	48
  5778  0029B2  6EDF               	movwf	indf2,c
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  5782  0029B4  C0A7  F015         	movff	efgtoa@e,___awdiv@dividend
  5783  0029B8  C0A8  F016         	movff	efgtoa@e+1,___awdiv@dividend+1
  5784  0029BC  0E00               	movlw	0
  5785  0029BE  6E18               	movwf	(___awdiv@divisor+1)^0,c
  5786  0029C0  0E0A               	movlw	10
  5787  0029C2  6E17               	movwf	___awdiv@divisor^0,c
  5788  0029C4  EC59  F029         	call	___awdiv	;wreg free
  5789  0029C8  C015  F0A7         	movff	?___awdiv,efgtoa@e
  5790  0029CC  C016  F0A8         	movff	?___awdiv+1,efgtoa@e+1
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  5794  0029D0  0793               	decf	efgtoa@p& (0+255),f,b
  5795  0029D2  A0D8               	btfss	status,0,c
  5796  0029D4  0794               	decf	(efgtoa@p+1)& (0+255),f,b
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  5800  0029D6  0796               	decf	efgtoa@w& (0+255),f,b
  5801  0029D8  A0D8               	btfss	status,0,c
  5802  0029DA  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5803  0029DC                     l9758:
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5807  0029DC  51A7               	movf	efgtoa@e& (0+255),w,b
  5808  0029DE  11A8               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5809  0029E0  A4D8               	btfss	status,2,c
  5810  0029E2  D7D2               	goto	l9748
  5811                           
  5812                           ; BSR set to: 0
  5813  0029E4  BF94               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5814  0029E6  D005               	goto	u11530
  5815  0029E8  5194               	movf	(efgtoa@p+1)& (0+255),w,b
  5816  0029EA  E1CE               	bnz	l9748
  5817  0029EC  0593               	decf	efgtoa@p& (0+255),w,b
  5818  0029EE  B0D8               	btfsc	status,0,c
  5819  0029F0  D7CB               	goto	l9748
  5820  0029F2                     u11530:
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  5824  0029F2  07A5               	decf	efgtoa@i& (0+255),f,b
  5825  0029F4  A0D8               	btfss	status,0,c
  5826  0029F6  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  5830  0029F8  5191               	movf	efgtoa@sign& (0+255),w,b
  5831  0029FA  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5832  0029FC  A4D8               	btfss	status,2,c
  5833  0029FE  D004               	goto	l9768
  5834                           
  5835                           ; BSR set to: 0
  5836  002A00  0E00               	movlw	0
  5837  002A02  6F80               	movwf	(_efgtoa$2653+1)& (0+255),b
  5838  002A04  0E2B               	movlw	43
  5839  002A06  D003               	goto	L5
  5840  002A08                     l9768:
  5841                           
  5842                           ; BSR set to: 0
  5843  002A08  0E00               	movlw	0
  5844  002A0A  6F80               	movwf	(_efgtoa$2653+1)& (0+255),b
  5845  002A0C  0E2D               	movlw	45
  5846  002A0E                     L5:
  5847  002A0E  6F7F               	movwf	_efgtoa$2653& (0+255),b
  5848                           
  5849                           ; BSR set to: 0
  5850  002A10  0E98               	movlw	low _dbuf
  5851  002A12  25A5               	addwf	efgtoa@i& (0+255),w,b
  5852  002A14  6ED9               	movwf	fsr2l,c
  5853  002A16  0E01               	movlw	high _dbuf
  5854  002A18  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5855  002A1A  6EDA               	movwf	fsr2h,c
  5856  002A1C  0060  F1FF  FFDF   	movff	_efgtoa$2653,indf2
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  5860  002A22  0796               	decf	efgtoa@w& (0+255),f,b
  5861  002A24  A0D8               	btfss	status,0,c
  5862  002A26  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  5866  002A28  07A5               	decf	efgtoa@i& (0+255),f,b
  5867  002A2A  A0D8               	btfss	status,0,c
  5868  002A2C  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5869                           
  5870                           ; BSR set to: 0
  5871                           
  5872                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5873  002A2E  0EBF               	movlw	191
  5874  002A30  6F78               	movwf	??_efgtoa& (0+255),b
  5875  002A32  0EFF               	movlw	255
  5876  002A34  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5877  002A36  5177               	movf	efgtoa@c& (0+255),w,b
  5878  002A38  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  5879  002A3A  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  5880  002A3C  5178               	movf	??_efgtoa& (0+255),w,b
  5881  002A3E  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5882  002A40  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5883  002A42  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5884  002A44  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5885  002A46  E104               	bnz	u11550
  5886  002A48  0E1A               	movlw	26
  5887  002A4A  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5888  002A4C  A0D8               	btfss	status,0,c
  5889  002A4E  D004               	goto	l9782
  5890  002A50                     u11550:
  5891                           
  5892                           ; BSR set to: 0
  5893  002A50  0E00               	movlw	0
  5894  002A52  6F82               	movwf	(_efgtoa$2654+1)& (0+255),b
  5895  002A54  0E65               	movlw	101
  5896  002A56  D003               	goto	L6
  5897  002A58                     l9782:
  5898                           
  5899                           ; BSR set to: 0
  5900  002A58  0E00               	movlw	0
  5901  002A5A  6F82               	movwf	(_efgtoa$2654+1)& (0+255),b
  5902  002A5C  0E45               	movlw	69
  5903  002A5E                     L6:
  5904  002A5E  6F81               	movwf	_efgtoa$2654& (0+255),b
  5905                           
  5906                           ; BSR set to: 0
  5907  002A60  0E98               	movlw	low _dbuf
  5908  002A62  25A5               	addwf	efgtoa@i& (0+255),w,b
  5909  002A64  6ED9               	movwf	fsr2l,c
  5910  002A66  0E01               	movlw	high _dbuf
  5911  002A68  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5912  002A6A  6EDA               	movwf	fsr2h,c
  5913  002A6C  0060  F207  FFDF   	movff	_efgtoa$2654,indf2
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  5917  002A72  0796               	decf	efgtoa@w& (0+255),f,b
  5918  002A74  A0D8               	btfss	status,0,c
  5919  002A76  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  5923  002A78  0E98               	movlw	low _dbuf
  5924  002A7A  25A9               	addwf	efgtoa@n& (0+255),w,b
  5925  002A7C  6E15               	movwf	strcpy@dest^0,c
  5926  002A7E  0E01               	movlw	high _dbuf
  5927  002A80  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5928  002A82  6E16               	movwf	(strcpy@dest+1)^0,c
  5929  002A84  0E98               	movlw	low _dbuf
  5930  002A86  25A5               	addwf	efgtoa@i& (0+255),w,b
  5931  002A88  6E17               	movwf	strcpy@src^0,c
  5932  002A8A  0E01               	movlw	high _dbuf
  5933  002A8C  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5934  002A8E  6E18               	movwf	(strcpy@src+1)^0,c
  5935  002A90  EC40  F02A         	call	_strcpy	;wreg free
  5936  002A94  EFED  F010         	goto	l9532
  5937  002A98                     __end_of_efgtoa:
  5938                           	callstack 0
  5939                           
  5940 ;; *************** function _tolower *****************
  5941 ;; Defined at:
  5942 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  c               2   26[COMRAM] int 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;		None
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  2   26[COMRAM] int 
  5949 ;; Registers used:
  5950 ;;		wreg, status,2, status,0
  5951 ;; Tracked objects:
  5952 ;;		On entry : 3F/0
  5953 ;;		On exit  : 3F/0
  5954 ;;		Unchanged: 3F/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5958 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5960 ;;Total ram usage:        6 bytes
  5961 ;; Hardware stack levels used: 1
  5962 ;; Hardware stack levels required when called: 5
  5963 ;; This function calls:
  5964 ;;		_isupper
  5965 ;; This function is called by:
  5966 ;;		_efgtoa
  5967 ;;		_vfpfcnvrt
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text12
  5972  0058BA                     __ptext12:
  5973                           	callstack 0
  5974  0058BA                     _tolower:
  5975                           	callstack 20
  5976                           
  5977                           ; BSR set to: 0
  5978                           
  5979                           ; BSR set to: 0
  5980                           
  5981                           ;incstack = 0
  5982  0058BA  0EBF               	movlw	191
  5983  0058BC  6E1D               	movwf	??_tolower^0,c
  5984  0058BE  0EFF               	movlw	255
  5985  0058C0  6E1E               	movwf	(??_tolower+1)^0,c
  5986  0058C2  C01B  F01F         	movff	tolower@c,??_tolower+2
  5987  0058C6  C01C  F020         	movff	tolower@c+1,??_tolower+3
  5988  0058CA  501D               	movf	??_tolower^0,w,c
  5989  0058CC  261F               	addwf	(??_tolower+2)^0,f,c
  5990  0058CE  501E               	movf	(??_tolower+1)^0,w,c
  5991  0058D0  2220               	addwfc	(??_tolower+3)^0,f,c
  5992  0058D2  5020               	movf	(??_tolower+3)^0,w,c
  5993  0058D4  E10A               	bnz	l2166
  5994  0058D6  0E1A               	movlw	26
  5995  0058D8  5C1F               	subwf	(??_tolower+2)^0,w,c
  5996  0058DA  B0D8               	btfsc	status,0,c
  5997  0058DC  D006               	goto	l2166
  5998                           
  5999                           ; BSR set to: 0
  6000  0058DE  0E20               	movlw	32
  6001  0058E0  101B               	iorwf	tolower@c^0,w,c
  6002  0058E2  6E1B               	movwf	?_tolower^0,c
  6003  0058E4  501C               	movf	(tolower@c+1)^0,w,c
  6004  0058E6  6E1C               	movwf	(?_tolower+1)^0,c
  6005  0058E8  0012               	return	
  6006  0058EA                     l2166:
  6007                           
  6008                           ; BSR set to: 0
  6009  0058EA  C01B  F01B         	movff	tolower@c,?_tolower
  6010  0058EE  C01C  F01C         	movff	tolower@c+1,?_tolower+1
  6011                           
  6012                           ; BSR set to: 0
  6013  0058F2  0012               	return		;funcret
  6014  0058F4                     __end_of_tolower:
  6015                           	callstack 0
  6016                           
  6017 ;; *************** function _isupper *****************
  6018 ;; Defined at:
  6019 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  c               2   20[COMRAM] int 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  2   20[COMRAM] int 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6036 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6037 ;;Total ram usage:        6 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; Hardware stack levels required when called: 4
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_efgtoa
  6044 ;;		_vfpfcnvrt
  6045 ;;		_tolower
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text13
  6050  0059A2                     __ptext13:
  6051                           	callstack 0
  6052  0059A2                     _isupper:
  6053                           	callstack 20
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;incstack = 0
  6057  0059A2  0EBF               	movlw	191
  6058  0059A4  6E17               	movwf	??_isupper^0,c
  6059  0059A6  0EFF               	movlw	255
  6060  0059A8  6E18               	movwf	(??_isupper+1)^0,c
  6061  0059AA  C015  F019         	movff	isupper@c,??_isupper+2
  6062  0059AE  C016  F01A         	movff	isupper@c+1,??_isupper+3
  6063  0059B2  5017               	movf	??_isupper^0,w,c
  6064  0059B4  2619               	addwf	(??_isupper+2)^0,f,c
  6065  0059B6  5018               	movf	(??_isupper+1)^0,w,c
  6066  0059B8  221A               	addwfc	(??_isupper+3)^0,f,c
  6067  0059BA  501A               	movf	(??_isupper+3)^0,w,c
  6068  0059BC  E106               	bnz	u9920
  6069  0059BE  0E1A               	movlw	26
  6070  0059C0  5C19               	subwf	(??_isupper+2)^0,w,c
  6071  0059C2  B0D8               	btfsc	status,0,c
  6072  0059C4  D002               	goto	u9920
  6073  0059C6  0E01               	movlw	1
  6074  0059C8  D001               	goto	u9930
  6075  0059CA                     u9920:
  6076  0059CA  0E00               	movlw	0
  6077  0059CC                     u9930:
  6078  0059CC  6E15               	movwf	?_isupper^0,c
  6079  0059CE  6A16               	clrf	(?_isupper+1)^0,c
  6080  0059D0  0012               	return		;funcret
  6081  0059D2                     __end_of_isupper:
  6082                           	callstack 0
  6083                           
  6084 ;; *************** function _strcpy *****************
  6085 ;; Defined at:
  6086 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  dest            2   20[COMRAM] PTR unsigned char 
  6089 ;;		 -> dbuf(80), 
  6090 ;;  src             2   22[COMRAM] PTR const unsigned char 
  6091 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  6092 ;;		 -> dbuf(80), 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  d               2   28[COMRAM] PTR unsigned char 
  6095 ;;		 -> dbuf(80), 
  6096 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6097 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  6098 ;;		 -> dbuf(80), 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  2   20[COMRAM] PTR unsigned char 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6103 ;; Tracked objects:
  6104 ;;		On entry : 3F/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6109 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6110 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;Total ram usage:       10 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; Hardware stack levels required when called: 4
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_efgtoa
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text14
  6123  005480                     __ptext14:
  6124                           	callstack 0
  6125  005480                     _strcpy:
  6126                           	callstack 20
  6127                           
  6128                           ; BSR set to: 0
  6129                           
  6130                           ;incstack = 0
  6131  005480  C017  F01B         	movff	strcpy@src,strcpy@s
  6132  005484  C018  F01C         	movff	strcpy@src+1,strcpy@s+1
  6133  005488  C015  F01D         	movff	strcpy@dest,strcpy@d
  6134  00548C  C016  F01E         	movff	strcpy@dest+1,strcpy@d+1
  6135  005490                     l9412:
  6136  005490  501B               	movf	strcpy@s^0,w,c
  6137  005492  6E19               	movwf	??_strcpy^0,c
  6138  005494  501C               	movf	(strcpy@s+1)^0,w,c
  6139  005496  6E1A               	movwf	(??_strcpy+1)^0,c
  6140  005498  4A1B               	infsnz	strcpy@s^0,f,c
  6141  00549A  2A1C               	incf	(strcpy@s+1)^0,f,c
  6142  00549C  0060  F067  FFF6   	movff	??_strcpy,tblptrl
  6143  0054A2  0060  F06B  FFF7   	movff	??_strcpy+1,tblptrh
  6144  0054A8  0E00               	movlw	low (__smallconst shr (0+16))
  6145  0054AA  6EF8               	movwf	tblptru,c
  6146  0054AC  0060  F077  FFD9   	movff	strcpy@d,fsr2l
  6147  0054B2  0060  F07B  FFDA   	movff	strcpy@d+1,fsr2h
  6148  0054B8  4A1D               	infsnz	strcpy@d^0,f,c
  6149  0054BA  2A1E               	incf	(strcpy@d+1)^0,f,c
  6150  0054BC  0E1F               	movlw	(high __ramtop+-1)
  6151  0054BE  64F7               	cpfsgt	tblptrh,c
  6152  0054C0  D003               	bra	u10817
  6153  0054C2  0008               	tblrd		*
  6154  0054C4  50F5               	movf	tablat,w,c
  6155  0054C6  D007               	bra	u10810
  6156  0054C8                     u10817:
  6157  0054C8  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6158  0054CE  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6159  0054D4  50E7               	movf	indf1,w,c
  6160  0054D6                     u10810:
  6161  0054D6  6EDF               	movwf	indf2,c
  6162  0054D8  50DF               	movf	indf2,w,c
  6163  0054DA  B4D8               	btfsc	status,2,c
  6164  0054DC  0012               	return	
  6165  0054DE  D7D8               	goto	l9412
  6166  0054E0                     __end_of_strcpy:
  6167                           	callstack 0
  6168                           
  6169 ;; *************** function _pad *****************
  6170 ;; Defined at:
  6171 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  6174 ;;		 -> sprintf@f(11), NULL(0), 
  6175 ;;  buf             2   42[COMRAM] PTR unsigned char 
  6176 ;;		 -> dbuf(80), 
  6177 ;;  p               2   44[COMRAM] int 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  w               2   49[COMRAM] int 
  6180 ;;  i               2   47[COMRAM] int 
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  2   40[COMRAM] int 
  6183 ;; Registers used:
  6184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6190 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6191 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6193 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6194 ;;Total ram usage:       11 bytes
  6195 ;; Hardware stack levels used: 1
  6196 ;; Hardware stack levels required when called: 8
  6197 ;; This function calls:
  6198 ;;		_fputc
  6199 ;;		_fputs
  6200 ;;		_strlen
  6201 ;; This function is called by:
  6202 ;;		_efgtoa
  6203 ;;		_utoa
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text15
  6208  00510E                     __ptext15:
  6209                           	callstack 0
  6210  00510E                     _pad:
  6211                           	callstack 16
  6212                           
  6213                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6214                           
  6215                           ;incstack = 0
  6216  00510E  A03D               	btfss	_flags^0,0,c
  6217  005110  D00A               	goto	l9370
  6218                           
  6219                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6220  005112  C02B  F020         	movff	pad@buf,fputs@s
  6221  005116  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6222  00511A  C029  F022         	movff	pad@fp,fputs@fp
  6223  00511E  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6224  005122  EC0C  F02A         	call	_fputs	;wreg free
  6225  005126                     l9370:
  6226                           
  6227                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6228  005126  BE2E               	btfsc	(pad@p+1)^0,7,c
  6229  005128  D005               	goto	l9374
  6230  00512A  C02D  F032         	movff	pad@p,pad@w
  6231  00512E  C02E  F033         	movff	pad@p+1,pad@w+1
  6232  005132  D004               	goto	l1850
  6233  005134                     l9374:
  6234  005134  0E00               	movlw	0
  6235  005136  6E33               	movwf	(pad@w+1)^0,c
  6236  005138  0E00               	movlw	0
  6237  00513A  6E32               	movwf	pad@w^0,c
  6238  00513C                     l1850:
  6239                           
  6240                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6241  00513C  0E00               	movlw	0
  6242  00513E  6E31               	movwf	(pad@i+1)^0,c
  6243  005140  0E00               	movlw	0
  6244  005142  6E30               	movwf	pad@i^0,c
  6245                           
  6246                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6247  005144  D00C               	goto	l9380
  6248  005146                     l9376:
  6249                           
  6250                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6251  005146  0E00               	movlw	0
  6252  005148  6E18               	movwf	(fputc@c+1)^0,c
  6253  00514A  0E20               	movlw	32
  6254  00514C  6E17               	movwf	fputc@c^0,c
  6255  00514E  C029  F019         	movff	pad@fp,fputc@fp
  6256  005152  C02A  F01A         	movff	pad@fp+1,fputc@fp+1
  6257  005156  EC37  F027         	call	_fputc	;wreg free
  6258                           
  6259                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6260  00515A  4A30               	infsnz	pad@i^0,f,c
  6261  00515C  2A31               	incf	(pad@i+1)^0,f,c
  6262  00515E                     l9380:
  6263                           
  6264                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6265  00515E  5032               	movf	pad@w^0,w,c
  6266  005160  5C30               	subwf	pad@i^0,w,c
  6267  005162  5031               	movf	(pad@i+1)^0,w,c
  6268  005164  0A80               	xorlw	128
  6269  005166  6E2F               	movwf	??_pad^0,c
  6270  005168  5033               	movf	(pad@w+1)^0,w,c
  6271  00516A  0A80               	xorlw	128
  6272  00516C  582F               	subwfb	??_pad^0,w,c
  6273  00516E  A0D8               	btfss	status,0,c
  6274  005170  D7EA               	goto	l9376
  6275                           
  6276                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6277  005172  B03D               	btfsc	_flags^0,0,c
  6278  005174  D00A               	goto	l9384
  6279                           
  6280                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6281  005176  C02B  F020         	movff	pad@buf,fputs@s
  6282  00517A  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6283  00517E  C029  F022         	movff	pad@fp,fputs@fp
  6284  005182  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6285  005186  EC0C  F02A         	call	_fputs	;wreg free
  6286  00518A                     l9384:
  6287                           
  6288                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  6289  00518A  C02B  F015         	movff	pad@buf,strlen@s
  6290  00518E  C02C  F016         	movff	pad@buf+1,strlen@s+1
  6291  005192  EC11  F02B         	call	_strlen	;wreg free
  6292  005196  5032               	movf	pad@w^0,w,c
  6293  005198  2415               	addwf	?_strlen^0,w,c
  6294  00519A  6E29               	movwf	?_pad^0,c
  6295  00519C  5033               	movf	(pad@w+1)^0,w,c
  6296  00519E  2016               	addwfc	(?_strlen+1)^0,w,c
  6297  0051A0  6E2A               	movwf	(?_pad+1)^0,c
  6298  0051A2  0012               	return		;funcret
  6299  0051A4                     __end_of_pad:
  6300                           	callstack 0
  6301                           
  6302 ;; *************** function _floorf *****************
  6303 ;; Defined at:
  6304 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  x               4   45[COMRAM] float 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  u               4    6[BANK0 ] struct .
  6309 ;;  m               4    0[BANK0 ] unsigned long 
  6310 ;;  e               2    4[BANK0 ] int 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  4   45[COMRAM] float 
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 3F/0
  6317 ;;		On exit  : 3F/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6321 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6322 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6323 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6324 ;;Total ram usage:       20 bytes
  6325 ;; Hardware stack levels used: 1
  6326 ;; Hardware stack levels required when called: 4
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_efgtoa
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text16
  6335  003FAE                     __ptext16:
  6336                           	callstack 0
  6337  003FAE                     _floorf:
  6338                           	callstack 20
  6339                           
  6340                           ; BSR set to: 0
  6341                           
  6342                           ;incstack = 0
  6343  003FAE  C18C  F066         	movff	floorf@F526,floorf@u
  6344  003FB2  C18D  F067         	movff	floorf@F526+1,floorf@u+1
  6345  003FB6  C18E  F068         	movff	floorf@F526+2,floorf@u+2
  6346  003FBA  C18F  F069         	movff	floorf@F526+3,floorf@u+3
  6347  003FBE  C02E  F066         	movff	floorf@x,floorf@u
  6348  003FC2  C02F  F067         	movff	floorf@x+1,floorf@u+1
  6349  003FC6  C030  F068         	movff	floorf@x+2,floorf@u+2
  6350  003FCA  C031  F069         	movff	floorf@x+3,floorf@u+3
  6351                           
  6352                           ; BSR set to: 0
  6353  003FCE  0E81               	movlw	129
  6354  003FD0  6E32               	movwf	??_floorf^0,c
  6355  003FD2  0EFF               	movlw	255
  6356  003FD4  6E33               	movwf	(??_floorf+1)^0,c
  6357  003FD6  C066  F034         	movff	floorf@u,??_floorf+2
  6358  003FDA  C067  F035         	movff	floorf@u+1,??_floorf+3
  6359  003FDE  C068  F036         	movff	floorf@u+2,??_floorf+4
  6360  003FE2  C069  F037         	movff	floorf@u+3,??_floorf+5
  6361  003FE6  0E18               	movlw	24
  6362  003FE8  D005               	goto	u10840
  6363  003FEA                     u10845:
  6364  003FEA  90D8               	bcf	status,0,c
  6365  003FEC  3237               	rrcf	(??_floorf+5)^0,f,c
  6366  003FEE  3236               	rrcf	(??_floorf+4)^0,f,c
  6367  003FF0  3235               	rrcf	(??_floorf+3)^0,f,c
  6368  003FF2  3234               	rrcf	(??_floorf+2)^0,f,c
  6369  003FF4                     u10840:
  6370  003FF4  2EE8               	decfsz	wreg,f,c
  6371  003FF6  D7F9               	goto	u10845
  6372  003FF8  5034               	movf	(??_floorf+2)^0,w,c
  6373  003FFA  2432               	addwf	??_floorf^0,w,c
  6374  003FFC  6F64               	movwf	floorf@e& (0+255),b
  6375  003FFE  0E00               	movlw	0
  6376  004000  2033               	addwfc	(??_floorf+1)^0,w,c
  6377  004002  6F65               	movwf	(floorf@e+1)& (0+255),b
  6378  004004  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6379  004006  D00F               	goto	l9430
  6380  004008  5165               	movf	(floorf@e+1)& (0+255),w,b
  6381  00400A  E104               	bnz	u10850
  6382  00400C  0E17               	movlw	23
  6383  00400E  5D64               	subwf	floorf@e& (0+255),w,b
  6384  004010  A0D8               	btfss	status,0,c
  6385  004012  D009               	goto	l9430
  6386  004014                     u10850:
  6387                           
  6388                           ; BSR set to: 0
  6389  004014  C02E  F02E         	movff	floorf@x,?_floorf
  6390  004018  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  6391  00401C  C030  F030         	movff	floorf@x+2,?_floorf+2
  6392  004020  C031  F031         	movff	floorf@x+3,?_floorf+3
  6393  004024  0012               	return	
  6394  004026                     l9430:
  6395                           
  6396                           ; BSR set to: 0
  6397  004026  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6398  004028  D05C               	goto	l9440
  6399                           
  6400                           ; BSR set to: 0
  6401  00402A  C064  F032         	movff	floorf@e,??_floorf
  6402  00402E  0EFF               	movlw	255
  6403  004030  6E33               	movwf	(??_floorf+1)^0,c
  6404  004032  0EFF               	movlw	255
  6405  004034  6E34               	movwf	(??_floorf+2)^0,c
  6406  004036  0E7F               	movlw	127
  6407  004038  6E35               	movwf	(??_floorf+3)^0,c
  6408  00403A  0E00               	movlw	0
  6409  00403C  6E36               	movwf	(??_floorf+4)^0,c
  6410  00403E                     u10875:
  6411  00403E  6632               	tstfsz	??_floorf^0,c
  6412  004040  D001               	goto	u10876
  6413  004042  D007               	goto	u10877
  6414  004044                     u10876:
  6415  004044  3436               	rlcf	(??_floorf+4)^0,w,c
  6416  004046  3236               	rrcf	(??_floorf+4)^0,f,c
  6417  004048  3235               	rrcf	(??_floorf+3)^0,f,c
  6418  00404A  3234               	rrcf	(??_floorf+2)^0,f,c
  6419  00404C  3233               	rrcf	(??_floorf+1)^0,f,c
  6420  00404E  2E32               	decfsz	??_floorf^0,f,c
  6421  004050  D7F6               	goto	u10875
  6422  004052                     u10877:
  6423  004052  C033  F060         	movff	??_floorf+1,floorf@m
  6424  004056  C034  F061         	movff	??_floorf+2,floorf@m+1
  6425  00405A  C035  F062         	movff	??_floorf+3,floorf@m+2
  6426  00405E  C036  F063         	movff	??_floorf+4,floorf@m+3
  6427  004062  0100               	movlb	0	; () banked
  6428  004064  5160               	movf	floorf@m& (0+255),w,b
  6429  004066  1566               	andwf	floorf@u& (0+255),w,b
  6430  004068  6E32               	movwf	??_floorf^0,c
  6431  00406A  5161               	movf	(floorf@m+1)& (0+255),w,b
  6432  00406C  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6433  00406E  6E33               	movwf	(??_floorf+1)^0,c
  6434  004070  5162               	movf	(floorf@m+2)& (0+255),w,b
  6435  004072  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6436  004074  6E34               	movwf	(??_floorf+2)^0,c
  6437  004076  5163               	movf	(floorf@m+3)& (0+255),w,b
  6438  004078  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6439  00407A  6E35               	movwf	(??_floorf+3)^0,c
  6440  00407C  5032               	movf	??_floorf^0,w,c
  6441  00407E  1033               	iorwf	(??_floorf+1)^0,w,c
  6442  004080  1034               	iorwf	(??_floorf+2)^0,w,c
  6443  004082  1035               	iorwf	(??_floorf+3)^0,w,c
  6444  004084  B4D8               	btfsc	status,2,c
  6445  004086  D7C6               	goto	u10850
  6446                           
  6447                           ; BSR set to: 0
  6448  004088  C066  F032         	movff	floorf@u,??_floorf
  6449  00408C  C067  F033         	movff	floorf@u+1,??_floorf+1
  6450  004090  C068  F034         	movff	floorf@u+2,??_floorf+2
  6451  004094  C069  F035         	movff	floorf@u+3,??_floorf+3
  6452  004098  0E20               	movlw	32
  6453  00409A  D005               	goto	u10890
  6454  00409C                     u10895:
  6455  00409C  90D8               	bcf	status,0,c
  6456  00409E  3235               	rrcf	(??_floorf+3)^0,f,c
  6457  0040A0  3234               	rrcf	(??_floorf+2)^0,f,c
  6458  0040A2  3233               	rrcf	(??_floorf+1)^0,f,c
  6459  0040A4  3232               	rrcf	??_floorf^0,f,c
  6460  0040A6                     u10890:
  6461  0040A6  2EE8               	decfsz	wreg,f,c
  6462  0040A8  D7F9               	goto	u10895
  6463  0040AA  5032               	movf	??_floorf^0,w,c
  6464  0040AC  B4D8               	btfsc	status,2,c
  6465  0040AE  D008               	goto	l2080
  6466                           
  6467                           ; BSR set to: 0
  6468  0040B0  5160               	movf	floorf@m& (0+255),w,b
  6469  0040B2  2766               	addwf	floorf@u& (0+255),f,b
  6470  0040B4  5161               	movf	(floorf@m+1)& (0+255),w,b
  6471  0040B6  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6472  0040B8  5162               	movf	(floorf@m+2)& (0+255),w,b
  6473  0040BA  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6474  0040BC  5163               	movf	(floorf@m+3)& (0+255),w,b
  6475  0040BE  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6476  0040C0                     l2080:
  6477                           
  6478                           ; BSR set to: 0
  6479  0040C0  1D60               	comf	floorf@m& (0+255),w,b
  6480  0040C2  6E32               	movwf	??_floorf^0,c
  6481  0040C4  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6482  0040C6  6E33               	movwf	(??_floorf+1)^0,c
  6483  0040C8  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6484  0040CA  6E34               	movwf	(??_floorf+2)^0,c
  6485  0040CC  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6486  0040CE  6E35               	movwf	(??_floorf+3)^0,c
  6487  0040D0  5032               	movf	??_floorf^0,w,c
  6488  0040D2  1766               	andwf	floorf@u& (0+255),f,b
  6489  0040D4  5033               	movf	(??_floorf+1)^0,w,c
  6490  0040D6  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6491  0040D8  5034               	movf	(??_floorf+2)^0,w,c
  6492  0040DA  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6493  0040DC  5035               	movf	(??_floorf+3)^0,w,c
  6494  0040DE  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6495  0040E0  D032               	goto	l9448
  6496  0040E2                     l9440:
  6497                           
  6498                           ; BSR set to: 0
  6499  0040E2  C066  F032         	movff	floorf@u,??_floorf
  6500  0040E6  C067  F033         	movff	floorf@u+1,??_floorf+1
  6501  0040EA  C068  F034         	movff	floorf@u+2,??_floorf+2
  6502  0040EE  C069  F035         	movff	floorf@u+3,??_floorf+3
  6503  0040F2  0E20               	movlw	32
  6504  0040F4  D005               	goto	u10910
  6505  0040F6                     u10915:
  6506  0040F6  90D8               	bcf	status,0,c
  6507  0040F8  3235               	rrcf	(??_floorf+3)^0,f,c
  6508  0040FA  3234               	rrcf	(??_floorf+2)^0,f,c
  6509  0040FC  3233               	rrcf	(??_floorf+1)^0,f,c
  6510  0040FE  3232               	rrcf	??_floorf^0,f,c
  6511  004100                     u10910:
  6512  004100  2EE8               	decfsz	wreg,f,c
  6513  004102  D7F9               	goto	u10915
  6514  004104  6632               	tstfsz	??_floorf^0,c
  6515  004106  D008               	goto	l9444
  6516                           
  6517                           ; BSR set to: 0
  6518  004108  0E00               	movlw	0
  6519  00410A  6F66               	movwf	floorf@u& (0+255),b
  6520  00410C  0E00               	movlw	0
  6521  00410E  6F67               	movwf	(floorf@u+1)& (0+255),b
  6522  004110  0E00               	movlw	0
  6523  004112  6F68               	movwf	(floorf@u+2)& (0+255),b
  6524  004114  0E00               	movlw	0
  6525  004116  D016               	goto	L7
  6526  004118                     l9444:
  6527                           
  6528                           ; BSR set to: 0
  6529  004118  90D8               	bcf	status,0,c
  6530  00411A  3566               	rlcf	floorf@u& (0+255),w,b
  6531  00411C  6E32               	movwf	??_floorf^0,c
  6532  00411E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6533  004120  6E33               	movwf	(??_floorf+1)^0,c
  6534  004122  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6535  004124  6E34               	movwf	(??_floorf+2)^0,c
  6536  004126  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6537  004128  6E35               	movwf	(??_floorf+3)^0,c
  6538  00412A  5032               	movf	??_floorf^0,w,c
  6539  00412C  1033               	iorwf	(??_floorf+1)^0,w,c
  6540  00412E  1034               	iorwf	(??_floorf+2)^0,w,c
  6541  004130  1035               	iorwf	(??_floorf+3)^0,w,c
  6542  004132  B4D8               	btfsc	status,2,c
  6543  004134  D008               	goto	l9448
  6544                           
  6545                           ; BSR set to: 0
  6546  004136  0E00               	movlw	0
  6547  004138  6F66               	movwf	floorf@u& (0+255),b
  6548  00413A  0E00               	movlw	0
  6549  00413C  6F67               	movwf	(floorf@u+1)& (0+255),b
  6550  00413E  0E80               	movlw	128
  6551  004140  6F68               	movwf	(floorf@u+2)& (0+255),b
  6552  004142  0EBF               	movlw	191
  6553  004144                     L7:
  6554  004144  6F69               	movwf	(floorf@u+3)& (0+255),b
  6555  004146                     l9448:
  6556                           
  6557                           ; BSR set to: 0
  6558  004146  C066  F02E         	movff	floorf@u,?_floorf
  6559  00414A  C067  F02F         	movff	floorf@u+1,?_floorf+1
  6560  00414E  C068  F030         	movff	floorf@u+2,?_floorf+2
  6561  004152  C069  F031         	movff	floorf@u+3,?_floorf+3
  6562                           
  6563                           ; BSR set to: 0
  6564  004156  0012               	return		;funcret
  6565  004158                     __end_of_floorf:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function ___fpclassifyf *****************
  6569 ;; Defined at:
  6570 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  x               4   20[COMRAM] float 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  u               4   30[COMRAM] struct .
  6575 ;;  e               2   28[COMRAM] int 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  2   20[COMRAM] int 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6586 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6587 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6588 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6589 ;;Total ram usage:       14 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; Hardware stack levels required when called: 4
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_efgtoa
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text17
  6600  004AB4                     __ptext17:
  6601                           	callstack 0
  6602  004AB4                     ___fpclassifyf:
  6603                           	callstack 20
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;incstack = 0
  6607  004AB4  C190  F01F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6608  004AB8  C191  F020         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6609  004ABC  C192  F021         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6610  004AC0  C193  F022         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6611  004AC4  C015  F01F         	movff	___fpclassifyf@x,___fpclassifyf@u
  6612  004AC8  C016  F020         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6613  004ACC  C017  F021         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6614  004AD0  C018  F022         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6615  004AD4  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6616  004AD8  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6617  004ADC  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6618  004AE0  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6619  004AE4  0E18               	movlw	24
  6620  004AE6  D005               	goto	u10740
  6621  004AE8                     u10745:
  6622  004AE8  90D8               	bcf	status,0,c
  6623  004AEA  321C               	rrcf	(??___fpclassifyf+3)^0,f,c
  6624  004AEC  321B               	rrcf	(??___fpclassifyf+2)^0,f,c
  6625  004AEE  321A               	rrcf	(??___fpclassifyf+1)^0,f,c
  6626  004AF0  3219               	rrcf	??___fpclassifyf^0,f,c
  6627  004AF2                     u10740:
  6628  004AF2  2EE8               	decfsz	wreg,f,c
  6629  004AF4  D7F9               	goto	u10745
  6630  004AF6  5019               	movf	??___fpclassifyf^0,w,c
  6631  004AF8  6E1D               	movwf	___fpclassifyf@e^0,c
  6632  004AFA  6A1E               	clrf	(___fpclassifyf@e+1)^0,c
  6633  004AFC  501D               	movf	___fpclassifyf@e^0,w,c
  6634  004AFE  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6635  004B00  A4D8               	btfss	status,2,c
  6636  004B02  D019               	goto	l9400
  6637  004B04  90D8               	bcf	status,0,c
  6638  004B06  341F               	rlcf	___fpclassifyf@u^0,w,c
  6639  004B08  6E19               	movwf	??___fpclassifyf^0,c
  6640  004B0A  3420               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6641  004B0C  6E1A               	movwf	(??___fpclassifyf+1)^0,c
  6642  004B0E  3421               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6643  004B10  6E1B               	movwf	(??___fpclassifyf+2)^0,c
  6644  004B12  3422               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6645  004B14  6E1C               	movwf	(??___fpclassifyf+3)^0,c
  6646  004B16  5019               	movf	??___fpclassifyf^0,w,c
  6647  004B18  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6648  004B1A  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6649  004B1C  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6650  004B1E  A4D8               	btfss	status,2,c
  6651  004B20  D005               	goto	l9396
  6652  004B22  0E00               	movlw	0
  6653  004B24  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6654  004B26  0E02               	movlw	2
  6655  004B28  6E15               	movwf	?___fpclassifyf^0,c
  6656  004B2A  0012               	return	
  6657  004B2C                     l9396:
  6658  004B2C  0E00               	movlw	0
  6659  004B2E  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6660  004B30  0E03               	movlw	3
  6661  004B32  6E15               	movwf	?___fpclassifyf^0,c
  6662  004B34  0012               	return	
  6663  004B36                     l9400:
  6664  004B36  281D               	incf	___fpclassifyf@e^0,w,c
  6665  004B38  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6666  004B3A  A4D8               	btfss	status,2,c
  6667  004B3C  D01C               	goto	l9406
  6668  004B3E  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6669  004B42  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6670  004B46  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6671  004B4A  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6672  004B4E  0E09               	movlw	9
  6673  004B50                     u10785:
  6674  004B50  90D8               	bcf	status,0,c
  6675  004B52  3619               	rlcf	??___fpclassifyf^0,f,c
  6676  004B54  361A               	rlcf	(??___fpclassifyf+1)^0,f,c
  6677  004B56  361B               	rlcf	(??___fpclassifyf+2)^0,f,c
  6678  004B58  361C               	rlcf	(??___fpclassifyf+3)^0,f,c
  6679  004B5A  2EE8               	decfsz	wreg,f,c
  6680  004B5C  D7F9               	goto	u10785
  6681  004B5E  5019               	movf	??___fpclassifyf^0,w,c
  6682  004B60  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6683  004B62  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6684  004B64  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6685  004B66  A4D8               	btfss	status,2,c
  6686  004B68  D002               	goto	u10790
  6687  004B6A  0E01               	movlw	1
  6688  004B6C  D001               	goto	u10800
  6689  004B6E                     u10790:
  6690  004B6E  0E00               	movlw	0
  6691  004B70                     u10800:
  6692  004B70  6E15               	movwf	?___fpclassifyf^0,c
  6693  004B72  6A16               	clrf	(?___fpclassifyf+1)^0,c
  6694  004B74  0012               	return	
  6695  004B76                     l9406:
  6696  004B76  0E00               	movlw	0
  6697  004B78  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6698  004B7A  0E04               	movlw	4
  6699  004B7C  6E15               	movwf	?___fpclassifyf^0,c
  6700  004B7E  0012               	return		;funcret
  6701  004B80                     __end_of___fpclassifyf:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function ___fltol *****************
  6705 ;; Defined at:
  6706 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  f1              4   20[COMRAM] int 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  exp1            1   29[COMRAM] unsigned char 
  6711 ;;  sign1           1   28[COMRAM] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  4   20[COMRAM] long 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0
  6716 ;; Tracked objects:
  6717 ;;		On entry : 3F/0
  6718 ;;		On exit  : 3F/0
  6719 ;;		Unchanged: 3F/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6724 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6725 ;;Total ram usage:       10 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 4
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_efgtoa
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text18
  6736  004C46                     __ptext18:
  6737                           	callstack 0
  6738  004C46                     ___fltol:
  6739                           	callstack 20
  6740                           
  6741                           ; BSR set to: 0
  6742                           
  6743                           ;incstack = 0
  6744  004C46  3417               	rlcf	(___fltol@f1+2)^0,w,c
  6745  004C48  3418               	rlcf	(___fltol@f1+3)^0,w,c
  6746  004C4A  6E1E               	movwf	___fltol@exp1^0,c
  6747  004C4C  501E               	movf	___fltol@exp1^0,w,c
  6748  004C4E  A4D8               	btfss	status,2,c
  6749  004C50  D009               	goto	l9290
  6750  004C52                     u10560:
  6751                           
  6752                           ; BSR set to: 0
  6753  004C52  0E00               	movlw	0
  6754  004C54  6E15               	movwf	?___fltol^0,c
  6755  004C56  0E00               	movlw	0
  6756  004C58  6E16               	movwf	(?___fltol+1)^0,c
  6757  004C5A  0E00               	movlw	0
  6758  004C5C  6E17               	movwf	(?___fltol+2)^0,c
  6759  004C5E  0E00               	movlw	0
  6760  004C60  6E18               	movwf	(?___fltol+3)^0,c
  6761  004C62  0012               	return	
  6762  004C64                     l9290:
  6763                           
  6764                           ; BSR set to: 0
  6765  004C64  C015  F019         	movff	___fltol@f1,??___fltol
  6766  004C68  C016  F01A         	movff	___fltol@f1+1,??___fltol+1
  6767  004C6C  C017  F01B         	movff	___fltol@f1+2,??___fltol+2
  6768  004C70  C018  F01C         	movff	___fltol@f1+3,??___fltol+3
  6769  004C74  0E20               	movlw	32
  6770  004C76  D005               	goto	u10570
  6771  004C78                     u10575:
  6772  004C78  90D8               	bcf	status,0,c
  6773  004C7A  321C               	rrcf	(??___fltol+3)^0,f,c
  6774  004C7C  321B               	rrcf	(??___fltol+2)^0,f,c
  6775  004C7E  321A               	rrcf	(??___fltol+1)^0,f,c
  6776  004C80  3219               	rrcf	??___fltol^0,f,c
  6777  004C82                     u10570:
  6778  004C82  2EE8               	decfsz	wreg,f,c
  6779  004C84  D7F9               	goto	u10575
  6780  004C86  5019               	movf	??___fltol^0,w,c
  6781  004C88  6E1D               	movwf	___fltol@sign1^0,c
  6782                           
  6783                           ; BSR set to: 0
  6784  004C8A  8E17               	bsf	(___fltol@f1+2)^0,7,c
  6785                           
  6786                           ; BSR set to: 0
  6787  004C8C  0EFF               	movlw	255
  6788  004C8E  1615               	andwf	___fltol@f1^0,f,c
  6789  004C90  0EFF               	movlw	255
  6790  004C92  1616               	andwf	(___fltol@f1+1)^0,f,c
  6791  004C94  0EFF               	movlw	255
  6792  004C96  1617               	andwf	(___fltol@f1+2)^0,f,c
  6793  004C98  0E00               	movlw	0
  6794  004C9A  1618               	andwf	(___fltol@f1+3)^0,f,c
  6795                           
  6796                           ; BSR set to: 0
  6797  004C9C  0E96               	movlw	150
  6798  004C9E  5E1E               	subwf	___fltol@exp1^0,f,c
  6799                           
  6800                           ; BSR set to: 0
  6801  004CA0  AE1E               	btfss	___fltol@exp1^0,7,c
  6802  004CA2  D00D               	goto	l9310
  6803                           
  6804                           ; BSR set to: 0
  6805  004CA4  501E               	movf	___fltol@exp1^0,w,c
  6806  004CA6  0A80               	xorlw	128
  6807  004CA8  0F97               	addlw	151
  6808  004CAA  A0D8               	btfss	status,0,c
  6809  004CAC  D7D2               	goto	u10560
  6810  004CAE                     l9306:
  6811                           
  6812                           ; BSR set to: 0
  6813  004CAE  90D8               	bcf	status,0,c
  6814  004CB0  3218               	rrcf	(___fltol@f1+3)^0,f,c
  6815  004CB2  3217               	rrcf	(___fltol@f1+2)^0,f,c
  6816  004CB4  3216               	rrcf	(___fltol@f1+1)^0,f,c
  6817  004CB6  3215               	rrcf	___fltol@f1^0,f,c
  6818                           
  6819                           ; BSR set to: 0
  6820  004CB8  3E1E               	incfsz	___fltol@exp1^0,f,c
  6821  004CBA  D7F9               	goto	l9306
  6822  004CBC  D00D               	goto	u10610
  6823  004CBE                     l9310:
  6824                           
  6825                           ; BSR set to: 0
  6826  004CBE  0E1F               	movlw	31
  6827  004CC0  641E               	cpfsgt	___fltol@exp1^0,c
  6828  004CC2  D007               	goto	l9318
  6829  004CC4  D7C6               	goto	u10560
  6830  004CC6                     l9316:
  6831                           
  6832                           ; BSR set to: 0
  6833  004CC6  90D8               	bcf	status,0,c
  6834  004CC8  3615               	rlcf	___fltol@f1^0,f,c
  6835  004CCA  3616               	rlcf	(___fltol@f1+1)^0,f,c
  6836  004CCC  3617               	rlcf	(___fltol@f1+2)^0,f,c
  6837  004CCE  3618               	rlcf	(___fltol@f1+3)^0,f,c
  6838  004CD0  061E               	decf	___fltol@exp1^0,f,c
  6839  004CD2                     l9318:
  6840                           
  6841                           ; BSR set to: 0
  6842  004CD2  501E               	movf	___fltol@exp1^0,w,c
  6843  004CD4  A4D8               	btfss	status,2,c
  6844  004CD6  D7F7               	goto	l9316
  6845  004CD8                     u10610:
  6846                           
  6847                           ; BSR set to: 0
  6848  004CD8  501D               	movf	___fltol@sign1^0,w,c
  6849  004CDA  B4D8               	btfsc	status,2,c
  6850  004CDC  D008               	goto	l9324
  6851                           
  6852                           ; BSR set to: 0
  6853  004CDE  1E18               	comf	(___fltol@f1+3)^0,f,c
  6854  004CE0  1E17               	comf	(___fltol@f1+2)^0,f,c
  6855  004CE2  1E16               	comf	(___fltol@f1+1)^0,f,c
  6856  004CE4  6C15               	negf	___fltol@f1^0,c
  6857  004CE6  0E00               	movlw	0
  6858  004CE8  2216               	addwfc	(___fltol@f1+1)^0,f,c
  6859  004CEA  2217               	addwfc	(___fltol@f1+2)^0,f,c
  6860  004CEC  2218               	addwfc	(___fltol@f1+3)^0,f,c
  6861  004CEE                     l9324:
  6862                           
  6863                           ; BSR set to: 0
  6864  004CEE  C015  F015         	movff	___fltol@f1,?___fltol
  6865  004CF2  C016  F016         	movff	___fltol@f1+1,?___fltol+1
  6866  004CF6  C017  F017         	movff	___fltol@f1+2,?___fltol+2
  6867  004CFA  C018  F018         	movff	___fltol@f1+3,?___fltol+3
  6868                           
  6869                           ; BSR set to: 0
  6870  004CFE  0012               	return		;funcret
  6871  004D00                     __end_of___fltol:
  6872                           	callstack 0
  6873                           
  6874 ;; *************** function ___flsub *****************
  6875 ;; Defined at:
  6876 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  b               4   46[COMRAM] long 
  6879 ;;  a               4   50[COMRAM] long 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  4   46[COMRAM] long 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2, status,0, cstack
  6886 ;; Tracked objects:
  6887 ;;		On entry : 3F/0
  6888 ;;		On exit  : 3F/0
  6889 ;;		Unchanged: 3F/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6891 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6894 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6895 ;;Total ram usage:        8 bytes
  6896 ;; Hardware stack levels used: 1
  6897 ;; Hardware stack levels required when called: 5
  6898 ;; This function calls:
  6899 ;;		___fladd
  6900 ;; This function is called by:
  6901 ;;		_efgtoa
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text19
  6906  0056B6                     __ptext19:
  6907                           	callstack 0
  6908  0056B6                     ___flsub:
  6909                           	callstack 19
  6910                           
  6911                           ; BSR set to: 0
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;incstack = 0
  6915  0056B6  0E00               	movlw	0
  6916  0056B8  1A33               	xorwf	___flsub@a^0,f,c
  6917  0056BA  0E00               	movlw	0
  6918  0056BC  1A34               	xorwf	(___flsub@a+1)^0,f,c
  6919  0056BE  0E00               	movlw	0
  6920  0056C0  1A35               	xorwf	(___flsub@a+2)^0,f,c
  6921  0056C2  0E80               	movlw	128
  6922  0056C4  1A36               	xorwf	(___flsub@a+3)^0,f,c
  6923                           
  6924                           ; BSR set to: 0
  6925  0056C6  C02F  F015         	movff	___flsub@b,___fladd@b
  6926  0056CA  C030  F016         	movff	___flsub@b+1,___fladd@b+1
  6927  0056CE  C031  F017         	movff	___flsub@b+2,___fladd@b+2
  6928  0056D2  C032  F018         	movff	___flsub@b+3,___fladd@b+3
  6929  0056D6  C033  F019         	movff	___flsub@a,___fladd@a
  6930  0056DA  C034  F01A         	movff	___flsub@a+1,___fladd@a+1
  6931  0056DE  C035  F01B         	movff	___flsub@a+2,___fladd@a+2
  6932  0056E2  C036  F01C         	movff	___flsub@a+3,___fladd@a+3
  6933  0056E6  EC31  F01A         	call	___fladd	;wreg free
  6934  0056EA  C015  F02F         	movff	?___fladd,?___flsub
  6935  0056EE  C016  F030         	movff	?___fladd+1,?___flsub+1
  6936  0056F2  C017  F031         	movff	?___fladd+2,?___flsub+2
  6937  0056F6  C018  F032         	movff	?___fladd+3,?___flsub+3
  6938                           
  6939                           ; BSR set to: 0
  6940  0056FA  0012               	return		;funcret
  6941  0056FC                     __end_of___flsub:
  6942                           	callstack 0
  6943                           
  6944 ;; *************** function ___fladd *****************
  6945 ;; Defined at:
  6946 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;  b               4   20[COMRAM] long 
  6949 ;;  a               4   24[COMRAM] long 
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;  grs             1   35[COMRAM] unsigned char 
  6952 ;;  bexp            1   34[COMRAM] unsigned char 
  6953 ;;  aexp            1   33[COMRAM] unsigned char 
  6954 ;;  signs           1   32[COMRAM] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  4   20[COMRAM] unsigned char 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 3F/0
  6961 ;;		On exit  : 3F/0
  6962 ;;		Unchanged: 3F/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6964 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6967 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;Total ram usage:       16 bytes
  6969 ;; Hardware stack levels used: 1
  6970 ;; Hardware stack levels required when called: 4
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		___flsub
  6975 ;;		_efgtoa
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text20
  6980  003462                     __ptext20:
  6981                           	callstack 0
  6982  003462                     ___fladd:
  6983                           	callstack 19
  6984                           
  6985                           ; BSR set to: 0
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;incstack = 0
  6989  003462  5018               	movf	(___fladd@b+3)^0,w,c
  6990  003464  0B80               	andlw	128
  6991  003466  6E21               	movwf	___fladd@signs^0,c
  6992  003468  5018               	movf	(___fladd@b+3)^0,w,c
  6993  00346A  2418               	addwf	(___fladd@b+3)^0,w,c
  6994  00346C  6E23               	movwf	___fladd@bexp^0,c
  6995                           
  6996                           ; BSR set to: 0
  6997  00346E  BE17               	btfsc	(___fladd@b+2)^0,7,c
  6998                           
  6999                           ; BSR set to: 0
  7000  003470  8023               	bsf	___fladd@bexp^0,0,c
  7001                           
  7002                           ; BSR set to: 0
  7003  003472  5023               	movf	___fladd@bexp^0,w,c
  7004  003474  B4D8               	btfsc	status,2,c
  7005  003476  D00D               	goto	l8680
  7006                           
  7007                           ; BSR set to: 0
  7008  003478  2823               	incf	___fladd@bexp^0,w,c
  7009  00347A  A4D8               	btfss	status,2,c
  7010  00347C  D008               	goto	l8676
  7011                           
  7012                           ; BSR set to: 0
  7013  00347E  0E00               	movlw	0
  7014  003480  6E15               	movwf	___fladd@b^0,c
  7015  003482  0E00               	movlw	0
  7016  003484  6E16               	movwf	(___fladd@b+1)^0,c
  7017  003486  0E00               	movlw	0
  7018  003488  6E17               	movwf	(___fladd@b+2)^0,c
  7019  00348A  0E00               	movlw	0
  7020  00348C  6E18               	movwf	(___fladd@b+3)^0,c
  7021  00348E                     l8676:
  7022                           
  7023                           ; BSR set to: 0
  7024  00348E  8E17               	bsf	(___fladd@b+2)^0,7,c
  7025  003490  D006               	goto	L8
  7026  003492                     l8680:
  7027                           
  7028                           ; BSR set to: 0
  7029  003492  0E00               	movlw	0
  7030  003494  6E15               	movwf	___fladd@b^0,c
  7031  003496  0E00               	movlw	0
  7032  003498  6E16               	movwf	(___fladd@b+1)^0,c
  7033  00349A  0E00               	movlw	0
  7034  00349C  6E17               	movwf	(___fladd@b+2)^0,c
  7035  00349E                     L8:
  7036  00349E  0E00               	movlw	0
  7037  0034A0  6E18               	movwf	(___fladd@b+3)^0,c
  7038                           
  7039                           ; BSR set to: 0
  7040  0034A2  501C               	movf	(___fladd@a+3)^0,w,c
  7041  0034A4  0B80               	andlw	128
  7042  0034A6  6E22               	movwf	___fladd@aexp^0,c
  7043                           
  7044                           ; BSR set to: 0
  7045  0034A8  5021               	movf	___fladd@signs^0,w,c
  7046  0034AA  1822               	xorwf	___fladd@aexp^0,w,c
  7047  0034AC  A4D8               	btfss	status,2,c
  7048                           
  7049                           ; BSR set to: 0
  7050  0034AE  8C21               	bsf	___fladd@signs^0,6,c
  7051                           
  7052                           ; BSR set to: 0
  7053  0034B0  501C               	movf	(___fladd@a+3)^0,w,c
  7054  0034B2  241C               	addwf	(___fladd@a+3)^0,w,c
  7055  0034B4  6E22               	movwf	___fladd@aexp^0,c
  7056                           
  7057                           ; BSR set to: 0
  7058  0034B6  BE1B               	btfsc	(___fladd@a+2)^0,7,c
  7059                           
  7060                           ; BSR set to: 0
  7061  0034B8  8022               	bsf	___fladd@aexp^0,0,c
  7062                           
  7063                           ; BSR set to: 0
  7064  0034BA  5022               	movf	___fladd@aexp^0,w,c
  7065  0034BC  B4D8               	btfsc	status,2,c
  7066  0034BE  D00D               	goto	l8704
  7067                           
  7068                           ; BSR set to: 0
  7069  0034C0  2822               	incf	___fladd@aexp^0,w,c
  7070  0034C2  A4D8               	btfss	status,2,c
  7071  0034C4  D008               	goto	l8700
  7072                           
  7073                           ; BSR set to: 0
  7074  0034C6  0E00               	movlw	0
  7075  0034C8  6E19               	movwf	___fladd@a^0,c
  7076  0034CA  0E00               	movlw	0
  7077  0034CC  6E1A               	movwf	(___fladd@a+1)^0,c
  7078  0034CE  0E00               	movlw	0
  7079  0034D0  6E1B               	movwf	(___fladd@a+2)^0,c
  7080  0034D2  0E00               	movlw	0
  7081  0034D4  6E1C               	movwf	(___fladd@a+3)^0,c
  7082  0034D6                     l8700:
  7083                           
  7084                           ; BSR set to: 0
  7085  0034D6  8E1B               	bsf	(___fladd@a+2)^0,7,c
  7086  0034D8  D006               	goto	L9
  7087  0034DA                     l8704:
  7088                           
  7089                           ; BSR set to: 0
  7090  0034DA  0E00               	movlw	0
  7091  0034DC  6E19               	movwf	___fladd@a^0,c
  7092  0034DE  0E00               	movlw	0
  7093  0034E0  6E1A               	movwf	(___fladd@a+1)^0,c
  7094  0034E2  0E00               	movlw	0
  7095  0034E4  6E1B               	movwf	(___fladd@a+2)^0,c
  7096  0034E6                     L9:
  7097  0034E6  0E00               	movlw	0
  7098  0034E8  6E1C               	movwf	(___fladd@a+3)^0,c
  7099                           
  7100                           ; BSR set to: 0
  7101  0034EA  5023               	movf	___fladd@bexp^0,w,c
  7102  0034EC  5C22               	subwf	___fladd@aexp^0,w,c
  7103  0034EE  B0D8               	btfsc	status,0,c
  7104  0034F0  D022               	goto	l8742
  7105                           
  7106                           ; BSR set to: 0
  7107  0034F2  AC21               	btfss	___fladd@signs^0,6,c
  7108  0034F4  D002               	goto	l8712
  7109                           
  7110                           ; BSR set to: 0
  7111  0034F6  0E80               	movlw	128
  7112  0034F8  1A21               	xorwf	___fladd@signs^0,f,c
  7113  0034FA                     l8712:
  7114                           
  7115                           ; BSR set to: 0
  7116  0034FA  C023  F024         	movff	___fladd@bexp,___fladd@grs
  7117                           
  7118                           ; BSR set to: 0
  7119  0034FE  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7120                           
  7121                           ; BSR set to: 0
  7122  003502  C024  F022         	movff	___fladd@grs,___fladd@aexp
  7123                           
  7124                           ; BSR set to: 0
  7125  003506  C015  F024         	movff	___fladd@b,___fladd@grs
  7126                           
  7127                           ; BSR set to: 0
  7128  00350A  C019  F015         	movff	___fladd@a,___fladd@b
  7129                           
  7130                           ; BSR set to: 0
  7131  00350E  C024  F019         	movff	___fladd@grs,___fladd@a
  7132                           
  7133                           ; BSR set to: 0
  7134  003512  C016  F024         	movff	___fladd@b+1,___fladd@grs
  7135                           
  7136                           ; BSR set to: 0
  7137  003516  C01A  F016         	movff	___fladd@a+1,___fladd@b+1
  7138                           
  7139                           ; BSR set to: 0
  7140  00351A  C024  F01A         	movff	___fladd@grs,___fladd@a+1
  7141                           
  7142                           ; BSR set to: 0
  7143  00351E  C017  F024         	movff	___fladd@b+2,___fladd@grs
  7144                           
  7145                           ; BSR set to: 0
  7146  003522  C01B  F017         	movff	___fladd@a+2,___fladd@b+2
  7147                           
  7148                           ; BSR set to: 0
  7149  003526  C024  F01B         	movff	___fladd@grs,___fladd@a+2
  7150                           
  7151                           ; BSR set to: 0
  7152  00352A  C018  F024         	movff	___fladd@b+3,___fladd@grs
  7153                           
  7154                           ; BSR set to: 0
  7155  00352E  C01C  F018         	movff	___fladd@a+3,___fladd@b+3
  7156                           
  7157                           ; BSR set to: 0
  7158  003532  C024  F01C         	movff	___fladd@grs,___fladd@a+3
  7159  003536                     l8742:
  7160                           
  7161                           ; BSR set to: 0
  7162  003536  0E00               	movlw	0
  7163  003538  6E24               	movwf	___fladd@grs^0,c
  7164                           
  7165                           ; BSR set to: 0
  7166  00353A  5023               	movf	___fladd@bexp^0,w,c
  7167  00353C  C022  F01D         	movff	___fladd@aexp,??___fladd
  7168  003540  6A1E               	clrf	(??___fladd+1)^0,c
  7169  003542  5E1D               	subwf	??___fladd^0,f,c
  7170  003544  0E00               	movlw	0
  7171  003546  5A1E               	subwfb	(??___fladd+1)^0,f,c
  7172  003548  BE1E               	btfsc	(??___fladd+1)^0,7,c
  7173  00354A  D02C               	goto	l1650
  7174  00354C  501E               	movf	(??___fladd+1)^0,w,c
  7175  00354E  E104               	bnz	u9600
  7176  003550  0E1A               	movlw	26
  7177  003552  5C1D               	subwf	??___fladd^0,w,c
  7178  003554  A0D8               	btfss	status,0,c
  7179  003556  D026               	goto	l1650
  7180  003558                     u9600:
  7181                           
  7182                           ; BSR set to: 0
  7183  003558  5015               	movf	___fladd@b^0,w,c
  7184  00355A  1016               	iorwf	(___fladd@b+1)^0,w,c
  7185  00355C  1017               	iorwf	(___fladd@b+2)^0,w,c
  7186  00355E  1018               	iorwf	(___fladd@b+3)^0,w,c
  7187  003560  B4D8               	btfsc	status,2,c
  7188  003562  D002               	goto	u9610
  7189  003564  0E01               	movlw	1
  7190  003566  D001               	goto	u9620
  7191  003568                     u9610:
  7192  003568  0E00               	movlw	0
  7193  00356A                     u9620:
  7194  00356A  6E24               	movwf	___fladd@grs^0,c
  7195                           
  7196                           ; BSR set to: 0
  7197  00356C  0E00               	movlw	0
  7198  00356E  6E15               	movwf	___fladd@b^0,c
  7199  003570  0E00               	movlw	0
  7200  003572  6E16               	movwf	(___fladd@b+1)^0,c
  7201  003574  0E00               	movlw	0
  7202  003576  6E17               	movwf	(___fladd@b+2)^0,c
  7203  003578  0E00               	movlw	0
  7204  00357A  6E18               	movwf	(___fladd@b+3)^0,c
  7205                           
  7206                           ; BSR set to: 0
  7207  00357C  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7208  003580  D015               	goto	u9650
  7209  003582                     l1651:
  7210                           
  7211                           ; BSR set to: 0
  7212  003582  A024               	btfss	___fladd@grs^0,0,c
  7213  003584  D005               	goto	l8754
  7214                           
  7215                           ; BSR set to: 0
  7216  003586  90D8               	bcf	status,0,c
  7217  003588  3024               	rrcf	___fladd@grs^0,w,c
  7218  00358A  0901               	iorlw	1
  7219  00358C  6E24               	movwf	___fladd@grs^0,c
  7220  00358E  D002               	goto	l8756
  7221  003590                     l8754:
  7222                           
  7223                           ; BSR set to: 0
  7224  003590  90D8               	bcf	status,0,c
  7225  003592  3224               	rrcf	___fladd@grs^0,f,c
  7226  003594                     l8756:
  7227                           
  7228                           ; BSR set to: 0
  7229  003594  B015               	btfsc	___fladd@b^0,0,c
  7230                           
  7231                           ; BSR set to: 0
  7232  003596  8E24               	bsf	___fladd@grs^0,7,c
  7233                           
  7234                           ; BSR set to: 0
  7235  003598  3418               	rlcf	(___fladd@b+3)^0,w,c
  7236  00359A  3218               	rrcf	(___fladd@b+3)^0,f,c
  7237  00359C  3217               	rrcf	(___fladd@b+2)^0,f,c
  7238  00359E  3216               	rrcf	(___fladd@b+1)^0,f,c
  7239  0035A0  3215               	rrcf	___fladd@b^0,f,c
  7240                           
  7241                           ; BSR set to: 0
  7242  0035A2  2A23               	incf	___fladd@bexp^0,f,c
  7243  0035A4                     l1650:
  7244                           
  7245                           ; BSR set to: 0
  7246  0035A4  5022               	movf	___fladd@aexp^0,w,c
  7247  0035A6  5C23               	subwf	___fladd@bexp^0,w,c
  7248  0035A8  A0D8               	btfss	status,0,c
  7249  0035AA  D7EB               	goto	l1651
  7250  0035AC                     u9650:
  7251                           
  7252                           ; BSR set to: 0
  7253  0035AC  BC21               	btfsc	___fladd@signs^0,6,c
  7254  0035AE  D028               	goto	l8788
  7255                           
  7256                           ; BSR set to: 0
  7257  0035B0  5023               	movf	___fladd@bexp^0,w,c
  7258  0035B2  A4D8               	btfss	status,2,c
  7259  0035B4  D009               	goto	l8770
  7260                           
  7261                           ; BSR set to: 0
  7262  0035B6  0E00               	movlw	0
  7263  0035B8  6E15               	movwf	?___fladd^0,c
  7264  0035BA  0E00               	movlw	0
  7265  0035BC  6E16               	movwf	(?___fladd+1)^0,c
  7266  0035BE  0E00               	movlw	0
  7267  0035C0  6E17               	movwf	(?___fladd+2)^0,c
  7268  0035C2  0E00               	movlw	0
  7269  0035C4  6E18               	movwf	(?___fladd+3)^0,c
  7270  0035C6  0012               	return	
  7271  0035C8                     l8770:
  7272                           
  7273                           ; BSR set to: 0
  7274  0035C8  5019               	movf	___fladd@a^0,w,c
  7275  0035CA  2615               	addwf	___fladd@b^0,f,c
  7276  0035CC  501A               	movf	(___fladd@a+1)^0,w,c
  7277  0035CE  2216               	addwfc	(___fladd@b+1)^0,f,c
  7278  0035D0  501B               	movf	(___fladd@a+2)^0,w,c
  7279  0035D2  2217               	addwfc	(___fladd@b+2)^0,f,c
  7280  0035D4  501C               	movf	(___fladd@a+3)^0,w,c
  7281  0035D6  2218               	addwfc	(___fladd@b+3)^0,f,c
  7282                           
  7283                           ; BSR set to: 0
  7284  0035D8  A018               	btfss	(___fladd@b+3)^0,0,c
  7285  0035DA  D071               	goto	u9780
  7286                           
  7287                           ; BSR set to: 0
  7288  0035DC  A024               	btfss	___fladd@grs^0,0,c
  7289  0035DE  D005               	goto	l8778
  7290                           
  7291                           ; BSR set to: 0
  7292  0035E0  90D8               	bcf	status,0,c
  7293  0035E2  3024               	rrcf	___fladd@grs^0,w,c
  7294  0035E4  0901               	iorlw	1
  7295  0035E6  6E24               	movwf	___fladd@grs^0,c
  7296  0035E8  D002               	goto	l8780
  7297  0035EA                     l8778:
  7298                           
  7299                           ; BSR set to: 0
  7300  0035EA  90D8               	bcf	status,0,c
  7301  0035EC  3224               	rrcf	___fladd@grs^0,f,c
  7302  0035EE                     l8780:
  7303                           
  7304                           ; BSR set to: 0
  7305  0035EE  B015               	btfsc	___fladd@b^0,0,c
  7306                           
  7307                           ; BSR set to: 0
  7308  0035F0  8E24               	bsf	___fladd@grs^0,7,c
  7309                           
  7310                           ; BSR set to: 0
  7311  0035F2  3418               	rlcf	(___fladd@b+3)^0,w,c
  7312  0035F4  3218               	rrcf	(___fladd@b+3)^0,f,c
  7313  0035F6  3217               	rrcf	(___fladd@b+2)^0,f,c
  7314  0035F8  3216               	rrcf	(___fladd@b+1)^0,f,c
  7315  0035FA  3215               	rrcf	___fladd@b^0,f,c
  7316                           
  7317                           ; BSR set to: 0
  7318  0035FC  2A23               	incf	___fladd@bexp^0,f,c
  7319  0035FE  D05F               	goto	u9780
  7320  003600                     l8788:
  7321                           
  7322                           ; BSR set to: 0
  7323  003600  5019               	movf	___fladd@a^0,w,c
  7324  003602  5C15               	subwf	___fladd@b^0,w,c
  7325  003604  501A               	movf	(___fladd@a+1)^0,w,c
  7326  003606  5816               	subwfb	(___fladd@b+1)^0,w,c
  7327  003608  501B               	movf	(___fladd@a+2)^0,w,c
  7328  00360A  5817               	subwfb	(___fladd@b+2)^0,w,c
  7329  00360C  5018               	movf	(___fladd@b+3)^0,w,c
  7330  00360E  0A80               	xorlw	128
  7331  003610  6E1D               	movwf	??___fladd^0,c
  7332  003612  501C               	movf	(___fladd@a+3)^0,w,c
  7333  003614  0A80               	xorlw	128
  7334  003616  581D               	subwfb	??___fladd^0,w,c
  7335  003618  B0D8               	btfsc	status,0,c
  7336  00361A  D025               	goto	l8798
  7337                           
  7338                           ; BSR set to: 0
  7339  00361C  5015               	movf	___fladd@b^0,w,c
  7340  00361E  5C19               	subwf	___fladd@a^0,w,c
  7341  003620  6E1D               	movwf	??___fladd^0,c
  7342  003622  5016               	movf	(___fladd@b+1)^0,w,c
  7343  003624  581A               	subwfb	(___fladd@a+1)^0,w,c
  7344  003626  6E1E               	movwf	(??___fladd+1)^0,c
  7345  003628  5017               	movf	(___fladd@b+2)^0,w,c
  7346  00362A  581B               	subwfb	(___fladd@a+2)^0,w,c
  7347  00362C  6E1F               	movwf	(??___fladd+2)^0,c
  7348  00362E  5018               	movf	(___fladd@b+3)^0,w,c
  7349  003630  581C               	subwfb	(___fladd@a+3)^0,w,c
  7350  003632  6E20               	movwf	(??___fladd+3)^0,c
  7351  003634  0EFF               	movlw	255
  7352  003636  241D               	addwf	??___fladd^0,w,c
  7353  003638  6E15               	movwf	___fladd@b^0,c
  7354  00363A  0EFF               	movlw	255
  7355  00363C  201E               	addwfc	(??___fladd+1)^0,w,c
  7356  00363E  6E16               	movwf	(___fladd@b+1)^0,c
  7357  003640  0EFF               	movlw	255
  7358  003642  201F               	addwfc	(??___fladd+2)^0,w,c
  7359  003644  6E17               	movwf	(___fladd@b+2)^0,c
  7360  003646  0EFF               	movlw	255
  7361  003648  2020               	addwfc	(??___fladd+3)^0,w,c
  7362  00364A  6E18               	movwf	(___fladd@b+3)^0,c
  7363  00364C  0E80               	movlw	128
  7364  00364E  1A21               	xorwf	___fladd@signs^0,f,c
  7365                           
  7366                           ; BSR set to: 0
  7367  003650  6C24               	negf	___fladd@grs^0,c
  7368                           
  7369                           ; BSR set to: 0
  7370  003652  5024               	movf	___fladd@grs^0,w,c
  7371  003654  A4D8               	btfss	status,2,c
  7372  003656  D00F               	goto	l1666
  7373                           
  7374                           ; BSR set to: 0
  7375  003658  0E01               	movlw	1
  7376  00365A  2615               	addwf	___fladd@b^0,f,c
  7377  00365C  0E00               	movlw	0
  7378  00365E  2216               	addwfc	(___fladd@b+1)^0,f,c
  7379  003660  2217               	addwfc	(___fladd@b+2)^0,f,c
  7380  003662  2218               	addwfc	(___fladd@b+3)^0,f,c
  7381  003664  D008               	goto	l1666
  7382  003666                     l8798:
  7383                           
  7384                           ; BSR set to: 0
  7385  003666  5019               	movf	___fladd@a^0,w,c
  7386  003668  5E15               	subwf	___fladd@b^0,f,c
  7387  00366A  501A               	movf	(___fladd@a+1)^0,w,c
  7388  00366C  5A16               	subwfb	(___fladd@b+1)^0,f,c
  7389  00366E  501B               	movf	(___fladd@a+2)^0,w,c
  7390  003670  5A17               	subwfb	(___fladd@b+2)^0,f,c
  7391  003672  501C               	movf	(___fladd@a+3)^0,w,c
  7392  003674  5A18               	subwfb	(___fladd@b+3)^0,f,c
  7393  003676                     l1666:
  7394                           
  7395                           ; BSR set to: 0
  7396  003676  5015               	movf	___fladd@b^0,w,c
  7397  003678  1016               	iorwf	(___fladd@b+1)^0,w,c
  7398  00367A  1017               	iorwf	(___fladd@b+2)^0,w,c
  7399  00367C  1018               	iorwf	(___fladd@b+3)^0,w,c
  7400  00367E  A4D8               	btfss	status,2,c
  7401  003680  D01C               	goto	l8822
  7402                           
  7403                           ; BSR set to: 0
  7404  003682  5024               	movf	___fladd@grs^0,w,c
  7405  003684  A4D8               	btfss	status,2,c
  7406  003686  D019               	goto	l8822
  7407                           
  7408                           ; BSR set to: 0
  7409  003688  0E00               	movlw	0
  7410  00368A  6E15               	movwf	?___fladd^0,c
  7411  00368C  0E00               	movlw	0
  7412  00368E  6E16               	movwf	(?___fladd+1)^0,c
  7413  003690  0E00               	movlw	0
  7414  003692  6E17               	movwf	(?___fladd+2)^0,c
  7415  003694  0E00               	movlw	0
  7416  003696  6E18               	movwf	(?___fladd+3)^0,c
  7417  003698  0012               	return	
  7418  00369A                     l8806:
  7419                           
  7420                           ; BSR set to: 0
  7421  00369A  90D8               	bcf	status,0,c
  7422  00369C  3615               	rlcf	___fladd@b^0,f,c
  7423  00369E  3616               	rlcf	(___fladd@b+1)^0,f,c
  7424  0036A0  3617               	rlcf	(___fladd@b+2)^0,f,c
  7425  0036A2  3618               	rlcf	(___fladd@b+3)^0,f,c
  7426                           
  7427                           ; BSR set to: 0
  7428  0036A4  BE24               	btfsc	___fladd@grs^0,7,c
  7429                           
  7430                           ; BSR set to: 0
  7431  0036A6  8015               	bsf	___fladd@b^0,0,c
  7432                           
  7433                           ; BSR set to: 0
  7434  0036A8  A024               	btfss	___fladd@grs^0,0,c
  7435  0036AA  D002               	goto	l8816
  7436                           
  7437                           ; BSR set to: 0
  7438  0036AC  80D8               	bsf	status,0,c
  7439  0036AE  D001               	goto	L10
  7440  0036B0                     l8816:
  7441                           
  7442                           ; BSR set to: 0
  7443  0036B0  90D8               	bcf	status,0,c
  7444  0036B2                     L10:
  7445  0036B2  3624               	rlcf	___fladd@grs^0,f,c
  7446                           
  7447                           ; BSR set to: 0
  7448  0036B4  5023               	movf	___fladd@bexp^0,w,c
  7449  0036B6  A4D8               	btfss	status,2,c
  7450                           
  7451                           ; BSR set to: 0
  7452  0036B8  0623               	decf	___fladd@bexp^0,f,c
  7453  0036BA                     l8822:
  7454                           
  7455                           ; BSR set to: 0
  7456  0036BA  AE17               	btfss	(___fladd@b+2)^0,7,c
  7457  0036BC  D7EE               	goto	l8806
  7458  0036BE                     u9780:
  7459                           
  7460                           ; BSR set to: 0
  7461  0036BE  0E00               	movlw	0
  7462  0036C0  6E22               	movwf	___fladd@aexp^0,c
  7463                           
  7464                           ; BSR set to: 0
  7465  0036C2  AE24               	btfss	___fladd@grs^0,7,c
  7466  0036C4  D00B               	goto	l1675
  7467                           
  7468                           ; BSR set to: 0
  7469  0036C6  C024  F01D         	movff	___fladd@grs,??___fladd
  7470  0036CA  0E7F               	movlw	127
  7471  0036CC  161D               	andwf	??___fladd^0,f,c
  7472  0036CE  B4D8               	btfsc	status,2,c
  7473  0036D0  D003               	goto	l1676
  7474  0036D2                     u9800:
  7475                           
  7476                           ; BSR set to: 0
  7477  0036D2  0E01               	movlw	1
  7478  0036D4  6E22               	movwf	___fladd@aexp^0,c
  7479  0036D6  D002               	goto	l1675
  7480  0036D8                     l1676:
  7481                           
  7482                           ; BSR set to: 0
  7483  0036D8  B015               	btfsc	___fladd@b^0,0,c
  7484  0036DA  D7FB               	goto	u9800
  7485  0036DC                     l1675:
  7486                           
  7487                           ; BSR set to: 0
  7488  0036DC  5022               	movf	___fladd@aexp^0,w,c
  7489  0036DE  B4D8               	btfsc	status,2,c
  7490  0036E0  D020               	goto	l8842
  7491                           
  7492                           ; BSR set to: 0
  7493  0036E2  0E01               	movlw	1
  7494  0036E4  2615               	addwf	___fladd@b^0,f,c
  7495  0036E6  0E00               	movlw	0
  7496  0036E8  2216               	addwfc	(___fladd@b+1)^0,f,c
  7497  0036EA  2217               	addwfc	(___fladd@b+2)^0,f,c
  7498  0036EC  2218               	addwfc	(___fladd@b+3)^0,f,c
  7499                           
  7500                           ; BSR set to: 0
  7501  0036EE  A018               	btfss	(___fladd@b+3)^0,0,c
  7502  0036F0  D018               	goto	l8842
  7503                           
  7504                           ; BSR set to: 0
  7505  0036F2  C015  F01D         	movff	___fladd@b,??___fladd
  7506  0036F6  C016  F01E         	movff	___fladd@b+1,??___fladd+1
  7507  0036FA  C017  F01F         	movff	___fladd@b+2,??___fladd+2
  7508  0036FE  C018  F020         	movff	___fladd@b+3,??___fladd+3
  7509  003702  3420               	rlcf	(??___fladd+3)^0,w,c
  7510  003704  3220               	rrcf	(??___fladd+3)^0,f,c
  7511  003706  321F               	rrcf	(??___fladd+2)^0,f,c
  7512  003708  321E               	rrcf	(??___fladd+1)^0,f,c
  7513  00370A  321D               	rrcf	??___fladd^0,f,c
  7514  00370C  C01D  F015         	movff	??___fladd,___fladd@b
  7515  003710  C01E  F016         	movff	??___fladd+1,___fladd@b+1
  7516  003714  C01F  F017         	movff	??___fladd+2,___fladd@b+2
  7517  003718  C020  F018         	movff	??___fladd+3,___fladd@b+3
  7518  00371C  2823               	incf	___fladd@bexp^0,w,c
  7519  00371E  A4D8               	btfss	status,2,c
  7520                           
  7521                           ; BSR set to: 0
  7522  003720  2A23               	incf	___fladd@bexp^0,f,c
  7523  003722                     l8842:
  7524                           
  7525                           ; BSR set to: 0
  7526  003722  2823               	incf	___fladd@bexp^0,w,c
  7527  003724  B4D8               	btfsc	status,2,c
  7528  003726  D003               	goto	u9860
  7529                           
  7530                           ; BSR set to: 0
  7531  003728  5023               	movf	___fladd@bexp^0,w,c
  7532  00372A  A4D8               	btfss	status,2,c
  7533  00372C  D00D               	goto	l8850
  7534  00372E                     u9860:
  7535                           
  7536                           ; BSR set to: 0
  7537  00372E  0E00               	movlw	0
  7538  003730  6E15               	movwf	___fladd@b^0,c
  7539  003732  0E00               	movlw	0
  7540  003734  6E16               	movwf	(___fladd@b+1)^0,c
  7541  003736  0E00               	movlw	0
  7542  003738  6E17               	movwf	(___fladd@b+2)^0,c
  7543  00373A  0E00               	movlw	0
  7544  00373C  6E18               	movwf	(___fladd@b+3)^0,c
  7545  00373E  5023               	movf	___fladd@bexp^0,w,c
  7546  003740  A4D8               	btfss	status,2,c
  7547  003742  D002               	goto	l8850
  7548                           
  7549                           ; BSR set to: 0
  7550  003744  0E00               	movlw	0
  7551  003746  6E21               	movwf	___fladd@signs^0,c
  7552  003748                     l8850:
  7553                           
  7554                           ; BSR set to: 0
  7555  003748  A023               	btfss	___fladd@bexp^0,0,c
  7556  00374A  D002               	goto	l8854
  7557                           
  7558                           ; BSR set to: 0
  7559  00374C  8E17               	bsf	(___fladd@b+2)^0,7,c
  7560  00374E  D001               	goto	l8856
  7561  003750                     l8854:
  7562                           
  7563                           ; BSR set to: 0
  7564  003750  9E17               	bcf	(___fladd@b+2)^0,7,c
  7565  003752                     l8856:
  7566                           
  7567                           ; BSR set to: 0
  7568  003752  90D8               	bcf	status,0,c
  7569  003754  3023               	rrcf	___fladd@bexp^0,w,c
  7570  003756  6E18               	movwf	(___fladd@b+3)^0,c
  7571                           
  7572                           ; BSR set to: 0
  7573  003758  BE21               	btfsc	___fladd@signs^0,7,c
  7574                           
  7575                           ; BSR set to: 0
  7576  00375A  8E18               	bsf	(___fladd@b+3)^0,7,c
  7577                           
  7578                           ; BSR set to: 0
  7579  00375C  C015  F015         	movff	___fladd@b,?___fladd
  7580  003760  C016  F016         	movff	___fladd@b+1,?___fladd+1
  7581  003764  C017  F017         	movff	___fladd@b+2,?___fladd+2
  7582  003768  C018  F018         	movff	___fladd@b+3,?___fladd+3
  7583                           
  7584                           ; BSR set to: 0
  7585  00376C  0012               	return		;funcret
  7586  00376E                     __end_of___fladd:
  7587                           	callstack 0
  7588                           
  7589 ;; *************** function ___flneg *****************
  7590 ;; Defined at:
  7591 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  f1              4   20[COMRAM] unsigned char 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;		None
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  4   20[COMRAM] unsigned char 
  7598 ;; Registers used:
  7599 ;;		wreg, status,2, status,0
  7600 ;; Tracked objects:
  7601 ;;		On entry : 3F/0
  7602 ;;		On exit  : 3F/0
  7603 ;;		Unchanged: 3F/0
  7604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7608 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7609 ;;Total ram usage:        4 bytes
  7610 ;; Hardware stack levels used: 1
  7611 ;; Hardware stack levels required when called: 4
  7612 ;; This function calls:
  7613 ;;		Nothing
  7614 ;; This function is called by:
  7615 ;;		_efgtoa
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text21
  7620  005A02                     __ptext21:
  7621                           	callstack 0
  7622  005A02                     ___flneg:
  7623                           	callstack 20
  7624                           
  7625                           ; BSR set to: 0
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;incstack = 0
  7629  005A02  5015               	movf	___flneg@f1^0,w,c
  7630  005A04  1016               	iorwf	(___flneg@f1+1)^0,w,c
  7631  005A06  1017               	iorwf	(___flneg@f1+2)^0,w,c
  7632  005A08  1018               	iorwf	(___flneg@f1+3)^0,w,c
  7633  005A0A  B4D8               	btfsc	status,2,c
  7634  005A0C  D008               	goto	l9280
  7635                           
  7636                           ; BSR set to: 0
  7637  005A0E  0E00               	movlw	0
  7638  005A10  1A15               	xorwf	___flneg@f1^0,f,c
  7639  005A12  0E00               	movlw	0
  7640  005A14  1A16               	xorwf	(___flneg@f1+1)^0,f,c
  7641  005A16  0E00               	movlw	0
  7642  005A18  1A17               	xorwf	(___flneg@f1+2)^0,f,c
  7643  005A1A  0E80               	movlw	128
  7644  005A1C  1A18               	xorwf	(___flneg@f1+3)^0,f,c
  7645  005A1E                     l9280:
  7646                           
  7647                           ; BSR set to: 0
  7648  005A1E  C015  F015         	movff	___flneg@f1,?___flneg
  7649  005A22  C016  F016         	movff	___flneg@f1+1,?___flneg+1
  7650  005A26  C017  F017         	movff	___flneg@f1+2,?___flneg+2
  7651  005A2A  C018  F018         	movff	___flneg@f1+3,?___flneg+3
  7652                           
  7653                           ; BSR set to: 0
  7654  005A2E  0012               	return		;funcret
  7655  005A30                     __end_of___flneg:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function ___flmul *****************
  7659 ;; Defined at:
  7660 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  b               4   34[COMRAM] unsigned char 
  7663 ;;  a               4   38[COMRAM] unsigned char 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  prod            4    7[BANK0 ] struct .
  7666 ;;  grs             4    3[BANK0 ] unsigned long 
  7667 ;;  temp            2   11[BANK0 ] struct .
  7668 ;;  bexp            1    2[BANK0 ] unsigned char 
  7669 ;;  aexp            1    1[BANK0 ] unsigned char 
  7670 ;;  sign            1    0[BANK0 ] unsigned char 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  4   34[COMRAM] unsigned char 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2, status,0, prodl, prodh
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 3F/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7680 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7681 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7683 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7684 ;;Total ram usage:       25 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 4
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_main
  7691 ;;		_efgtoa
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text22
  7696  003110                     __ptext22:
  7697                           	callstack 0
  7698  003110                     ___flmul:
  7699                           	callstack 20
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;incstack = 0
  7703  003110  5026               	movf	(___flmul@b+3)^0,w,c
  7704  003112  0B80               	andlw	128
  7705  003114  0100               	movlb	0	; () banked
  7706  003116  6F60               	movwf	___flmul@sign& (0+255),b
  7707  003118  5026               	movf	(___flmul@b+3)^0,w,c
  7708  00311A  2426               	addwf	(___flmul@b+3)^0,w,c
  7709  00311C  6F62               	movwf	___flmul@bexp& (0+255),b
  7710                           
  7711                           ; BSR set to: 0
  7712  00311E  BE25               	btfsc	(___flmul@b+2)^0,7,c
  7713                           
  7714                           ; BSR set to: 0
  7715  003120  8162               	bsf	___flmul@bexp& (0+255),0,b
  7716                           
  7717                           ; BSR set to: 0
  7718  003122  5162               	movf	___flmul@bexp& (0+255),w,b
  7719  003124  B4D8               	btfsc	status,2,c
  7720  003126  D00D               	goto	l9036
  7721                           
  7722                           ; BSR set to: 0
  7723  003128  2962               	incf	___flmul@bexp& (0+255),w,b
  7724  00312A  A4D8               	btfss	status,2,c
  7725  00312C  D008               	goto	l9034
  7726                           
  7727                           ; BSR set to: 0
  7728  00312E  0E00               	movlw	0
  7729  003130  6E23               	movwf	___flmul@b^0,c
  7730  003132  0E00               	movlw	0
  7731  003134  6E24               	movwf	(___flmul@b+1)^0,c
  7732  003136  0E00               	movlw	0
  7733  003138  6E25               	movwf	(___flmul@b+2)^0,c
  7734  00313A  0E00               	movlw	0
  7735  00313C  6E26               	movwf	(___flmul@b+3)^0,c
  7736  00313E                     l9034:
  7737                           
  7738                           ; BSR set to: 0
  7739  00313E  8E25               	bsf	(___flmul@b+2)^0,7,c
  7740  003140  D008               	goto	l9038
  7741  003142                     l9036:
  7742                           
  7743                           ; BSR set to: 0
  7744  003142  0E00               	movlw	0
  7745  003144  6E23               	movwf	___flmul@b^0,c
  7746  003146  0E00               	movlw	0
  7747  003148  6E24               	movwf	(___flmul@b+1)^0,c
  7748  00314A  0E00               	movlw	0
  7749  00314C  6E25               	movwf	(___flmul@b+2)^0,c
  7750  00314E  0E00               	movlw	0
  7751  003150  6E26               	movwf	(___flmul@b+3)^0,c
  7752  003152                     l9038:
  7753                           
  7754                           ; BSR set to: 0
  7755  003152  502A               	movf	(___flmul@a+3)^0,w,c
  7756  003154  0B80               	andlw	128
  7757  003156  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7758                           
  7759                           ; BSR set to: 0
  7760  003158  502A               	movf	(___flmul@a+3)^0,w,c
  7761  00315A  242A               	addwf	(___flmul@a+3)^0,w,c
  7762  00315C  6F61               	movwf	___flmul@aexp& (0+255),b
  7763                           
  7764                           ; BSR set to: 0
  7765  00315E  BE29               	btfsc	(___flmul@a+2)^0,7,c
  7766                           
  7767                           ; BSR set to: 0
  7768  003160  8161               	bsf	___flmul@aexp& (0+255),0,b
  7769                           
  7770                           ; BSR set to: 0
  7771  003162  5161               	movf	___flmul@aexp& (0+255),w,b
  7772  003164  B4D8               	btfsc	status,2,c
  7773  003166  D00D               	goto	l9054
  7774                           
  7775                           ; BSR set to: 0
  7776  003168  2961               	incf	___flmul@aexp& (0+255),w,b
  7777  00316A  A4D8               	btfss	status,2,c
  7778  00316C  D008               	goto	l9052
  7779                           
  7780                           ; BSR set to: 0
  7781  00316E  0E00               	movlw	0
  7782  003170  6E27               	movwf	___flmul@a^0,c
  7783  003172  0E00               	movlw	0
  7784  003174  6E28               	movwf	(___flmul@a+1)^0,c
  7785  003176  0E00               	movlw	0
  7786  003178  6E29               	movwf	(___flmul@a+2)^0,c
  7787  00317A  0E00               	movlw	0
  7788  00317C  6E2A               	movwf	(___flmul@a+3)^0,c
  7789  00317E                     l9052:
  7790                           
  7791                           ; BSR set to: 0
  7792  00317E  8E29               	bsf	(___flmul@a+2)^0,7,c
  7793  003180  D008               	goto	l1735
  7794  003182                     l9054:
  7795                           
  7796                           ; BSR set to: 0
  7797  003182  0E00               	movlw	0
  7798  003184  6E27               	movwf	___flmul@a^0,c
  7799  003186  0E00               	movlw	0
  7800  003188  6E28               	movwf	(___flmul@a+1)^0,c
  7801  00318A  0E00               	movlw	0
  7802  00318C  6E29               	movwf	(___flmul@a+2)^0,c
  7803  00318E  0E00               	movlw	0
  7804  003190  6E2A               	movwf	(___flmul@a+3)^0,c
  7805  003192                     l1735:
  7806                           
  7807                           ; BSR set to: 0
  7808  003192  5161               	movf	___flmul@aexp& (0+255),w,b
  7809  003194  B4D8               	btfsc	status,2,c
  7810  003196  D003               	goto	u10240
  7811                           
  7812                           ; BSR set to: 0
  7813  003198  5162               	movf	___flmul@bexp& (0+255),w,b
  7814  00319A  A4D8               	btfss	status,2,c
  7815  00319C  D009               	goto	l9062
  7816  00319E                     u10240:
  7817                           
  7818                           ; BSR set to: 0
  7819  00319E  0E00               	movlw	0
  7820  0031A0  6E23               	movwf	?___flmul^0,c
  7821  0031A2  0E00               	movlw	0
  7822  0031A4  6E24               	movwf	(?___flmul+1)^0,c
  7823  0031A6  0E00               	movlw	0
  7824  0031A8  6E25               	movwf	(?___flmul+2)^0,c
  7825  0031AA  0E00               	movlw	0
  7826  0031AC  6E26               	movwf	(?___flmul+3)^0,c
  7827  0031AE  0012               	return	
  7828  0031B0                     l9062:
  7829                           
  7830                           ; BSR set to: 0
  7831  0031B0  5029               	movf	(___flmul@a+2)^0,w,c
  7832  0031B2  0223               	mulwf	___flmul@b^0,c
  7833  0031B4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7834  0031BA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7835                           
  7836                           ; BSR set to: 0
  7837  0031C0  516B               	movf	___flmul@temp& (0+255),w,b
  7838  0031C2  6F63               	movwf	___flmul@grs& (0+255),b
  7839  0031C4  6B64               	clrf	(___flmul@grs+1)& (0+255),b
  7840  0031C6  6B65               	clrf	(___flmul@grs+2)& (0+255),b
  7841  0031C8  6B66               	clrf	(___flmul@grs+3)& (0+255),b
  7842                           
  7843                           ; BSR set to: 0
  7844  0031CA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7845  0031CC  6F67               	movwf	___flmul@prod& (0+255),b
  7846  0031CE  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7847  0031D0  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7848  0031D2  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7849  0031D4  5028               	movf	(___flmul@a+1)^0,w,c
  7850  0031D6  0224               	mulwf	(___flmul@b+1)^0,c
  7851  0031D8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7852  0031DE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7853                           
  7854                           ; BSR set to: 0
  7855  0031E4  516B               	movf	___flmul@temp& (0+255),w,b
  7856  0031E6  2763               	addwf	___flmul@grs& (0+255),f,b
  7857  0031E8  0E00               	movlw	0
  7858  0031EA  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7859  0031EC  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7860  0031EE  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7861                           
  7862                           ; BSR set to: 0
  7863  0031F0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7864  0031F2  2767               	addwf	___flmul@prod& (0+255),f,b
  7865  0031F4  0E00               	movlw	0
  7866  0031F6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7867  0031F8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7868  0031FA  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7869  0031FC  5027               	movf	___flmul@a^0,w,c
  7870  0031FE  0225               	mulwf	(___flmul@b+2)^0,c
  7871  003200  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7872  003206  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7873                           
  7874                           ; BSR set to: 0
  7875  00320C  516B               	movf	___flmul@temp& (0+255),w,b
  7876  00320E  2763               	addwf	___flmul@grs& (0+255),f,b
  7877  003210  0E00               	movlw	0
  7878  003212  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7879  003214  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7880  003216  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7881                           
  7882                           ; BSR set to: 0
  7883  003218  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7884  00321A  2767               	addwf	___flmul@prod& (0+255),f,b
  7885  00321C  0E00               	movlw	0
  7886  00321E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7887  003220  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7888  003222  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7889                           
  7890                           ; BSR set to: 0
  7891  003224  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  7892  003228  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  7893  00322C  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  7894  003230  6B63               	clrf	___flmul@grs& (0+255),b
  7895                           
  7896                           ; BSR set to: 0
  7897  003232  5027               	movf	___flmul@a^0,w,c
  7898  003234  0224               	mulwf	(___flmul@b+1)^0,c
  7899  003236  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7900  00323C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7901                           
  7902                           ; BSR set to: 0
  7903  003242  516B               	movf	___flmul@temp& (0+255),w,b
  7904  003244  2763               	addwf	___flmul@grs& (0+255),f,b
  7905  003246  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7906  003248  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7907  00324A  0E00               	movlw	0
  7908  00324C  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7909  00324E  0E00               	movlw	0
  7910  003250  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7911                           
  7912                           ; BSR set to: 0
  7913  003252  5028               	movf	(___flmul@a+1)^0,w,c
  7914  003254  0223               	mulwf	___flmul@b^0,c
  7915  003256  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7916  00325C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7917                           
  7918                           ; BSR set to: 0
  7919  003262  516B               	movf	___flmul@temp& (0+255),w,b
  7920  003264  2763               	addwf	___flmul@grs& (0+255),f,b
  7921  003266  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7922  003268  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7923  00326A  0E00               	movlw	0
  7924  00326C  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7925  00326E  0E00               	movlw	0
  7926  003270  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7927                           
  7928                           ; BSR set to: 0
  7929  003272  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  7930  003276  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  7931  00327A  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  7932  00327E  6B63               	clrf	___flmul@grs& (0+255),b
  7933  003280  5027               	movf	___flmul@a^0,w,c
  7934  003282  0223               	mulwf	___flmul@b^0,c
  7935  003284  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7936  00328A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7937                           
  7938                           ; BSR set to: 0
  7939  003290  516B               	movf	___flmul@temp& (0+255),w,b
  7940  003292  2763               	addwf	___flmul@grs& (0+255),f,b
  7941  003294  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7942  003296  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7943  003298  0E00               	movlw	0
  7944  00329A  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7945  00329C  0E00               	movlw	0
  7946  00329E  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7947                           
  7948                           ; BSR set to: 0
  7949  0032A0  5029               	movf	(___flmul@a+2)^0,w,c
  7950  0032A2  0224               	mulwf	(___flmul@b+1)^0,c
  7951  0032A4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7952  0032AA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7953  0032B0  516B               	movf	___flmul@temp& (0+255),w,b
  7954  0032B2  2767               	addwf	___flmul@prod& (0+255),f,b
  7955  0032B4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7956  0032B6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7957  0032B8  0E00               	movlw	0
  7958  0032BA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7959  0032BC  0E00               	movlw	0
  7960  0032BE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7961                           
  7962                           ; BSR set to: 0
  7963  0032C0  5028               	movf	(___flmul@a+1)^0,w,c
  7964  0032C2  0225               	mulwf	(___flmul@b+2)^0,c
  7965  0032C4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7966  0032CA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7967                           
  7968                           ; BSR set to: 0
  7969  0032D0  516B               	movf	___flmul@temp& (0+255),w,b
  7970  0032D2  2767               	addwf	___flmul@prod& (0+255),f,b
  7971  0032D4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7972  0032D6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7973  0032D8  0E00               	movlw	0
  7974  0032DA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7975  0032DC  0E00               	movlw	0
  7976  0032DE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7977  0032E0  5029               	movf	(___flmul@a+2)^0,w,c
  7978  0032E2  0225               	mulwf	(___flmul@b+2)^0,c
  7979  0032E4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7980  0032EA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7981                           
  7982                           ; BSR set to: 0
  7983  0032F0  516B               	movf	___flmul@temp& (0+255),w,b
  7984  0032F2  6E2B               	movwf	??___flmul^0,c
  7985  0032F4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7986  0032F6  6E2C               	movwf	(??___flmul+1)^0,c
  7987  0032F8  6A2D               	clrf	(??___flmul+2)^0,c
  7988  0032FA  6A2E               	clrf	(??___flmul+3)^0,c
  7989  0032FC  C02D  F02E         	movff	??___flmul+2,??___flmul+3
  7990  003300  C02C  F02D         	movff	??___flmul+1,??___flmul+2
  7991  003304  C02B  F02C         	movff	??___flmul,??___flmul+1
  7992  003308  6A2B               	clrf	??___flmul^0,c
  7993  00330A  502B               	movf	??___flmul^0,w,c
  7994  00330C  2767               	addwf	___flmul@prod& (0+255),f,b
  7995  00330E  502C               	movf	(??___flmul+1)^0,w,c
  7996  003310  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7997  003312  502D               	movf	(??___flmul+2)^0,w,c
  7998  003314  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7999  003316  502E               	movf	(??___flmul+3)^0,w,c
  8000  003318  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8001                           
  8002                           ; BSR set to: 0
  8003  00331A  5166               	movf	(___flmul@grs+3)& (0+255),w,b
  8004  00331C  2767               	addwf	___flmul@prod& (0+255),f,b
  8005  00331E  0E00               	movlw	0
  8006  003320  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8007  003322  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8008  003324  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8009                           
  8010                           ; BSR set to: 0
  8011  003326  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8012  00332A  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8013  00332E  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8014  003332  6B63               	clrf	___flmul@grs& (0+255),b
  8015                           
  8016                           ; BSR set to: 0
  8017  003334  5161               	movf	___flmul@aexp& (0+255),w,b
  8018  003336  C062  F02B         	movff	___flmul@bexp,??___flmul
  8019  00333A  6A2C               	clrf	(??___flmul+1)^0,c
  8020  00333C  262B               	addwf	??___flmul^0,f,c
  8021  00333E  0E00               	movlw	0
  8022  003340  222C               	addwfc	(??___flmul+1)^0,f,c
  8023  003342  0E82               	movlw	130
  8024  003344  242B               	addwf	??___flmul^0,w,c
  8025  003346  6F6B               	movwf	___flmul@temp& (0+255),b
  8026  003348  0EFF               	movlw	255
  8027  00334A  202C               	addwfc	(??___flmul+1)^0,w,c
  8028  00334C  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  8029  00334E  D00F               	goto	l9110
  8030  003350                     l9104:
  8031                           
  8032                           ; BSR set to: 0
  8033  003350  90D8               	bcf	status,0,c
  8034  003352  3767               	rlcf	___flmul@prod& (0+255),f,b
  8035  003354  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8036  003356  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8037  003358  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8038                           
  8039                           ; BSR set to: 0
  8040  00335A  BF66               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8041                           
  8042                           ; BSR set to: 0
  8043  00335C  8167               	bsf	___flmul@prod& (0+255),0,b
  8044                           
  8045                           ; BSR set to: 0
  8046  00335E  90D8               	bcf	status,0,c
  8047  003360  3763               	rlcf	___flmul@grs& (0+255),f,b
  8048  003362  3764               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8049  003364  3765               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8050  003366  3766               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8051  003368  076B               	decf	___flmul@temp& (0+255),f,b
  8052  00336A  A0D8               	btfss	status,0,c
  8053  00336C  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  8054  00336E                     l9110:
  8055                           
  8056                           ; BSR set to: 0
  8057  00336E  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  8058  003370  D7EF               	goto	l9104
  8059                           
  8060                           ; BSR set to: 0
  8061  003372  0E00               	movlw	0
  8062  003374  6F61               	movwf	___flmul@aexp& (0+255),b
  8063                           
  8064                           ; BSR set to: 0
  8065  003376  AF66               	btfss	(___flmul@grs+3)& (0+255),7,b
  8066  003378  D017               	goto	l1744
  8067                           
  8068                           ; BSR set to: 0
  8069  00337A  0EFF               	movlw	255
  8070  00337C  1563               	andwf	___flmul@grs& (0+255),w,b
  8071  00337E  6E2B               	movwf	??___flmul^0,c
  8072  003380  0EFF               	movlw	255
  8073  003382  1564               	andwf	(___flmul@grs+1)& (0+255),w,b
  8074  003384  6E2C               	movwf	(??___flmul+1)^0,c
  8075  003386  0EFF               	movlw	255
  8076  003388  1565               	andwf	(___flmul@grs+2)& (0+255),w,b
  8077  00338A  6E2D               	movwf	(??___flmul+2)^0,c
  8078  00338C  0E7F               	movlw	127
  8079  00338E  1566               	andwf	(___flmul@grs+3)& (0+255),w,b
  8080  003390  6E2E               	movwf	(??___flmul+3)^0,c
  8081  003392  502B               	movf	??___flmul^0,w,c
  8082  003394  102C               	iorwf	(??___flmul+1)^0,w,c
  8083  003396  102D               	iorwf	(??___flmul+2)^0,w,c
  8084  003398  102E               	iorwf	(??___flmul+3)^0,w,c
  8085  00339A  B4D8               	btfsc	status,2,c
  8086  00339C  D003               	goto	l1745
  8087  00339E                     u10280:
  8088                           
  8089                           ; BSR set to: 0
  8090  00339E  0E01               	movlw	1
  8091  0033A0  6F61               	movwf	___flmul@aexp& (0+255),b
  8092  0033A2  D002               	goto	l1744
  8093  0033A4                     l1745:
  8094                           
  8095                           ; BSR set to: 0
  8096  0033A4  B167               	btfsc	___flmul@prod& (0+255),0,b
  8097  0033A6  D7FB               	goto	u10280
  8098  0033A8                     l1744:
  8099                           
  8100                           ; BSR set to: 0
  8101  0033A8  5161               	movf	___flmul@aexp& (0+255),w,b
  8102  0033AA  B4D8               	btfsc	status,2,c
  8103  0033AC  D01F               	goto	l9130
  8104                           
  8105                           ; BSR set to: 0
  8106  0033AE  0E01               	movlw	1
  8107  0033B0  2767               	addwf	___flmul@prod& (0+255),f,b
  8108  0033B2  0E00               	movlw	0
  8109  0033B4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8110  0033B6  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8111  0033B8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8112                           
  8113                           ; BSR set to: 0
  8114  0033BA  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  8115  0033BC  D017               	goto	l9130
  8116                           
  8117                           ; BSR set to: 0
  8118  0033BE  C067  F02B         	movff	___flmul@prod,??___flmul
  8119  0033C2  C068  F02C         	movff	___flmul@prod+1,??___flmul+1
  8120  0033C6  C069  F02D         	movff	___flmul@prod+2,??___flmul+2
  8121  0033CA  C06A  F02E         	movff	___flmul@prod+3,??___flmul+3
  8122  0033CE  342E               	rlcf	(??___flmul+3)^0,w,c
  8123  0033D0  322E               	rrcf	(??___flmul+3)^0,f,c
  8124  0033D2  322D               	rrcf	(??___flmul+2)^0,f,c
  8125  0033D4  322C               	rrcf	(??___flmul+1)^0,f,c
  8126  0033D6  322B               	rrcf	??___flmul^0,f,c
  8127  0033D8  C02B  F067         	movff	??___flmul,___flmul@prod
  8128  0033DC  C02C  F068         	movff	??___flmul+1,___flmul@prod+1
  8129  0033E0  C02D  F069         	movff	??___flmul+2,___flmul@prod+2
  8130  0033E4  C02E  F06A         	movff	??___flmul+3,___flmul@prod+3
  8131                           
  8132                           ; BSR set to: 0
  8133  0033E8  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  8134  0033EA  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  8135  0033EC                     l9130:
  8136                           
  8137                           ; BSR set to: 0
  8138  0033EC  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8139  0033EE  D00D               	goto	l9134
  8140  0033F0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8141  0033F2  E103               	bnz	u10320
  8142  0033F4  296B               	incf	___flmul@temp& (0+255),w,b
  8143  0033F6  A0D8               	btfss	status,0,c
  8144  0033F8  D008               	goto	l9134
  8145  0033FA                     u10320:
  8146                           
  8147                           ; BSR set to: 0
  8148  0033FA  0E00               	movlw	0
  8149  0033FC  6F67               	movwf	___flmul@prod& (0+255),b
  8150  0033FE  0E00               	movlw	0
  8151  003400  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8152  003402  0E80               	movlw	128
  8153  003404  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8154  003406  0E7F               	movlw	127
  8155  003408  D020               	goto	L11
  8156  00340A                     l9134:
  8157                           
  8158                           ; BSR set to: 0
  8159  00340A  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8160  00340C  D005               	goto	u10330
  8161  00340E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8162  003410  E10E               	bnz	l1752
  8163  003412  056B               	decf	___flmul@temp& (0+255),w,b
  8164  003414  B0D8               	btfsc	status,0,c
  8165  003416  D00B               	goto	l1752
  8166  003418                     u10330:
  8167                           
  8168                           ; BSR set to: 0
  8169  003418  0E00               	movlw	0
  8170  00341A  6F67               	movwf	___flmul@prod& (0+255),b
  8171  00341C  0E00               	movlw	0
  8172  00341E  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8173  003420  0E00               	movlw	0
  8174  003422  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8175  003424  0E00               	movlw	0
  8176  003426  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8177  003428  0E00               	movlw	0
  8178  00342A  6F60               	movwf	___flmul@sign& (0+255),b
  8179  00342C  D00F               	goto	l9146
  8180  00342E                     l1752:
  8181                           
  8182                           ; BSR set to: 0
  8183  00342E  C06B  F062         	movff	___flmul@temp,___flmul@bexp
  8184                           
  8185                           ; BSR set to: 0
  8186  003432  0EFF               	movlw	255
  8187  003434  1767               	andwf	___flmul@prod& (0+255),f,b
  8188  003436  0EFF               	movlw	255
  8189  003438  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  8190  00343A  0E7F               	movlw	127
  8191  00343C  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  8192  00343E  0E00               	movlw	0
  8193  003440  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  8194                           
  8195                           ; BSR set to: 0
  8196  003442  B162               	btfsc	___flmul@bexp& (0+255),0,b
  8197                           
  8198                           ; BSR set to: 0
  8199  003444  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  8200                           
  8201                           ; BSR set to: 0
  8202  003446  90D8               	bcf	status,0,c
  8203  003448  3162               	rrcf	___flmul@bexp& (0+255),w,b
  8204  00344A                     L11:
  8205  00344A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8206  00344C                     l9146:
  8207                           
  8208                           ; BSR set to: 0
  8209  00344C  5160               	movf	___flmul@sign& (0+255),w,b
  8210  00344E  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8211                           
  8212                           ; BSR set to: 0
  8213  003450  C067  F023         	movff	___flmul@prod,?___flmul
  8214  003454  C068  F024         	movff	___flmul@prod+1,?___flmul+1
  8215  003458  C069  F025         	movff	___flmul@prod+2,?___flmul+2
  8216  00345C  C06A  F026         	movff	___flmul@prod+3,?___flmul+3
  8217                           
  8218                           ; BSR set to: 0
  8219  003460  0012               	return		;funcret
  8220  003462                     __end_of___flmul:
  8221                           	callstack 0
  8222                           
  8223 ;; *************** function ___flge *****************
  8224 ;; Defined at:
  8225 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  ff1             4   46[COMRAM] unsigned char 
  8228 ;;  ff2             4   50[COMRAM] unsigned char 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;		None
  8231 ;; Return value:  Size  Location     Type
  8232 ;;		None               void
  8233 ;; Registers used:
  8234 ;;		wreg, status,2, status,0
  8235 ;; Tracked objects:
  8236 ;;		On entry : 3F/0
  8237 ;;		On exit  : 3F/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8240 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8242 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8244 ;;Total ram usage:       12 bytes
  8245 ;; Hardware stack levels used: 1
  8246 ;; Hardware stack levels required when called: 4
  8247 ;; This function calls:
  8248 ;;		Nothing
  8249 ;; This function is called by:
  8250 ;;		_efgtoa
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text23
  8255  004916                     __ptext23:
  8256                           	callstack 0
  8257  004916                     ___flge:
  8258                           	callstack 20
  8259                           
  8260                           ; BSR set to: 0
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;incstack = 0
  8264  004916  0E00               	movlw	0
  8265  004918  142F               	andwf	___flge@ff1^0,w,c
  8266  00491A  6F6D               	movwf	??___flge& (0+255),b
  8267  00491C  0E00               	movlw	0
  8268  00491E  1430               	andwf	(___flge@ff1+1)^0,w,c
  8269  004920  6F6E               	movwf	(??___flge+1)& (0+255),b
  8270  004922  0E80               	movlw	128
  8271  004924  1431               	andwf	(___flge@ff1+2)^0,w,c
  8272  004926  6F6F               	movwf	(??___flge+2)& (0+255),b
  8273  004928  0E7F               	movlw	127
  8274  00492A  1432               	andwf	(___flge@ff1+3)^0,w,c
  8275  00492C  6F70               	movwf	(??___flge+3)& (0+255),b
  8276  00492E  516D               	movf	??___flge& (0+255),w,b
  8277  004930  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8278  004932  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8279  004934  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8280  004936  A4D8               	btfss	status,2,c
  8281  004938  D008               	goto	l9258
  8282                           
  8283                           ; BSR set to: 0
  8284  00493A  0E00               	movlw	0
  8285  00493C  6E2F               	movwf	___flge@ff1^0,c
  8286  00493E  0E00               	movlw	0
  8287  004940  6E30               	movwf	(___flge@ff1+1)^0,c
  8288  004942  0E00               	movlw	0
  8289  004944  6E31               	movwf	(___flge@ff1+2)^0,c
  8290  004946  0E00               	movlw	0
  8291  004948  6E32               	movwf	(___flge@ff1+3)^0,c
  8292  00494A                     l9258:
  8293                           
  8294                           ; BSR set to: 0
  8295  00494A  0E00               	movlw	0
  8296  00494C  1433               	andwf	___flge@ff2^0,w,c
  8297  00494E  6F6D               	movwf	??___flge& (0+255),b
  8298  004950  0E00               	movlw	0
  8299  004952  1434               	andwf	(___flge@ff2+1)^0,w,c
  8300  004954  6F6E               	movwf	(??___flge+1)& (0+255),b
  8301  004956  0E80               	movlw	128
  8302  004958  1435               	andwf	(___flge@ff2+2)^0,w,c
  8303  00495A  6F6F               	movwf	(??___flge+2)& (0+255),b
  8304  00495C  0E7F               	movlw	127
  8305  00495E  1436               	andwf	(___flge@ff2+3)^0,w,c
  8306  004960  6F70               	movwf	(??___flge+3)& (0+255),b
  8307  004962  516D               	movf	??___flge& (0+255),w,b
  8308  004964  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8309  004966  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8310  004968  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8311  00496A  A4D8               	btfss	status,2,c
  8312  00496C  D008               	goto	l9262
  8313                           
  8314                           ; BSR set to: 0
  8315  00496E  0E00               	movlw	0
  8316  004970  6E33               	movwf	___flge@ff2^0,c
  8317  004972  0E00               	movlw	0
  8318  004974  6E34               	movwf	(___flge@ff2+1)^0,c
  8319  004976  0E00               	movlw	0
  8320  004978  6E35               	movwf	(___flge@ff2+2)^0,c
  8321  00497A  0E00               	movlw	0
  8322  00497C  6E36               	movwf	(___flge@ff2+3)^0,c
  8323  00497E                     l9262:
  8324                           
  8325                           ; BSR set to: 0
  8326  00497E  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8327  004980  D009               	goto	l9266
  8328                           
  8329                           ; BSR set to: 0
  8330  004982  6C2F               	negf	___flge@ff1^0,c
  8331  004984  1E30               	comf	(___flge@ff1+1)^0,f,c
  8332  004986  B0D8               	btfsc	status,0,c
  8333  004988  2A30               	incf	(___flge@ff1+1)^0,f,c
  8334  00498A  1E31               	comf	(___flge@ff1+2)^0,f,c
  8335  00498C  B0D8               	btfsc	status,0,c
  8336  00498E  2A31               	incf	(___flge@ff1+2)^0,f,c
  8337  004990  0E80               	movlw	128
  8338  004992  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8339  004994                     l9266:
  8340                           
  8341                           ; BSR set to: 0
  8342  004994  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8343  004996  D009               	goto	l1386
  8344                           
  8345                           ; BSR set to: 0
  8346  004998  6C33               	negf	___flge@ff2^0,c
  8347  00499A  1E34               	comf	(___flge@ff2+1)^0,f,c
  8348  00499C  B0D8               	btfsc	status,0,c
  8349  00499E  2A34               	incf	(___flge@ff2+1)^0,f,c
  8350  0049A0  1E35               	comf	(___flge@ff2+2)^0,f,c
  8351  0049A2  B0D8               	btfsc	status,0,c
  8352  0049A4  2A35               	incf	(___flge@ff2+2)^0,f,c
  8353  0049A6  0E80               	movlw	128
  8354  0049A8  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8355  0049AA                     l1386:
  8356                           
  8357                           ; BSR set to: 0
  8358  0049AA  0E00               	movlw	0
  8359  0049AC  1A2F               	xorwf	___flge@ff1^0,f,c
  8360  0049AE  0E00               	movlw	0
  8361  0049B0  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8362  0049B2  0E00               	movlw	0
  8363  0049B4  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8364  0049B6  0E80               	movlw	128
  8365  0049B8  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8366  0049BA  0E00               	movlw	0
  8367  0049BC  1A33               	xorwf	___flge@ff2^0,f,c
  8368  0049BE  0E00               	movlw	0
  8369  0049C0  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8370  0049C2  0E00               	movlw	0
  8371  0049C4  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8372  0049C6  0E80               	movlw	128
  8373  0049C8  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8374  0049CA  5033               	movf	___flge@ff2^0,w,c
  8375  0049CC  5C2F               	subwf	___flge@ff1^0,w,c
  8376  0049CE  5034               	movf	(___flge@ff2+1)^0,w,c
  8377  0049D0  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8378  0049D2  5035               	movf	(___flge@ff2+2)^0,w,c
  8379  0049D4  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8380  0049D6  5036               	movf	(___flge@ff2+3)^0,w,c
  8381  0049D8  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8382  0049DA  B0D8               	btfsc	status,0,c
  8383  0049DC  D002               	goto	l9272
  8384                           
  8385                           ; BSR set to: 0
  8386  0049DE  90D8               	bcf	status,0,c
  8387  0049E0  0012               	return	
  8388  0049E2                     l9272:
  8389                           
  8390                           ; BSR set to: 0
  8391  0049E2  80D8               	bsf	status,0,c
  8392                           
  8393                           ; BSR set to: 0
  8394  0049E4  0012               	return		;funcret
  8395  0049E6                     __end_of___flge:
  8396                           	callstack 0
  8397                           
  8398 ;; *************** function ___fleq *****************
  8399 ;; Defined at:
  8400 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  ff1             4   20[COMRAM] unsigned char 
  8403 ;;  ff2             4   24[COMRAM] unsigned char 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;		None
  8406 ;; Return value:  Size  Location     Type
  8407 ;;		None               void
  8408 ;; Registers used:
  8409 ;;		wreg, status,2, status,0
  8410 ;; Tracked objects:
  8411 ;;		On entry : 3F/0
  8412 ;;		On exit  : 3F/0
  8413 ;;		Unchanged: 3F/0
  8414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8415 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8417 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8418 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8419 ;;Total ram usage:       12 bytes
  8420 ;; Hardware stack levels used: 1
  8421 ;; Hardware stack levels required when called: 4
  8422 ;; This function calls:
  8423 ;;		Nothing
  8424 ;; This function is called by:
  8425 ;;		_efgtoa
  8426 ;; This function uses a non-reentrant model
  8427 ;;
  8428                           
  8429                           	psect	text24
  8430  0051A4                     __ptext24:
  8431                           	callstack 0
  8432  0051A4                     ___fleq:
  8433                           	callstack 20
  8434                           
  8435                           ; BSR set to: 0
  8436                           
  8437                           ; BSR set to: 0
  8438                           ;incstack = 0
  8439  0051A4  0E00               	movlw	0
  8440  0051A6  1415               	andwf	___fleq@ff1^0,w,c
  8441  0051A8  6E1D               	movwf	??___fleq^0,c
  8442  0051AA  0E00               	movlw	0
  8443  0051AC  1416               	andwf	(___fleq@ff1+1)^0,w,c
  8444  0051AE  6E1E               	movwf	(??___fleq+1)^0,c
  8445  0051B0  0E80               	movlw	128
  8446  0051B2  1417               	andwf	(___fleq@ff1+2)^0,w,c
  8447  0051B4  6E1F               	movwf	(??___fleq+2)^0,c
  8448  0051B6  0E7F               	movlw	127
  8449  0051B8  1418               	andwf	(___fleq@ff1+3)^0,w,c
  8450  0051BA  6E20               	movwf	(??___fleq+3)^0,c
  8451  0051BC  501D               	movf	??___fleq^0,w,c
  8452  0051BE  101E               	iorwf	(??___fleq+1)^0,w,c
  8453  0051C0  101F               	iorwf	(??___fleq+2)^0,w,c
  8454  0051C2  1020               	iorwf	(??___fleq+3)^0,w,c
  8455  0051C4  A4D8               	btfss	status,2,c
  8456  0051C6  D008               	goto	l9242
  8457                           
  8458                           ; BSR set to: 0
  8459  0051C8  0E00               	movlw	0
  8460  0051CA  6E15               	movwf	___fleq@ff1^0,c
  8461  0051CC  0E00               	movlw	0
  8462  0051CE  6E16               	movwf	(___fleq@ff1+1)^0,c
  8463  0051D0  0E00               	movlw	0
  8464  0051D2  6E17               	movwf	(___fleq@ff1+2)^0,c
  8465  0051D4  0E00               	movlw	0
  8466  0051D6  6E18               	movwf	(___fleq@ff1+3)^0,c
  8467  0051D8                     l9242:
  8468                           
  8469                           ; BSR set to: 0
  8470  0051D8  0E00               	movlw	0
  8471  0051DA  1419               	andwf	___fleq@ff2^0,w,c
  8472  0051DC  6E1D               	movwf	??___fleq^0,c
  8473  0051DE  0E00               	movlw	0
  8474  0051E0  141A               	andwf	(___fleq@ff2+1)^0,w,c
  8475  0051E2  6E1E               	movwf	(??___fleq+1)^0,c
  8476  0051E4  0E80               	movlw	128
  8477  0051E6  141B               	andwf	(___fleq@ff2+2)^0,w,c
  8478  0051E8  6E1F               	movwf	(??___fleq+2)^0,c
  8479  0051EA  0E7F               	movlw	127
  8480  0051EC  141C               	andwf	(___fleq@ff2+3)^0,w,c
  8481  0051EE  6E20               	movwf	(??___fleq+3)^0,c
  8482  0051F0  501D               	movf	??___fleq^0,w,c
  8483  0051F2  101E               	iorwf	(??___fleq+1)^0,w,c
  8484  0051F4  101F               	iorwf	(??___fleq+2)^0,w,c
  8485  0051F6  1020               	iorwf	(??___fleq+3)^0,w,c
  8486  0051F8  A4D8               	btfss	status,2,c
  8487  0051FA  D008               	goto	l9246
  8488                           
  8489                           ; BSR set to: 0
  8490  0051FC  0E00               	movlw	0
  8491  0051FE  6E19               	movwf	___fleq@ff2^0,c
  8492  005200  0E00               	movlw	0
  8493  005202  6E1A               	movwf	(___fleq@ff2+1)^0,c
  8494  005204  0E00               	movlw	0
  8495  005206  6E1B               	movwf	(___fleq@ff2+2)^0,c
  8496  005208  0E00               	movlw	0
  8497  00520A  6E1C               	movwf	(___fleq@ff2+3)^0,c
  8498  00520C                     l9246:
  8499                           
  8500                           ; BSR set to: 0
  8501  00520C  5019               	movf	___fleq@ff2^0,w,c
  8502  00520E  1815               	xorwf	___fleq@ff1^0,w,c
  8503  005210  E10A               	bnz	u10490
  8504  005212  501A               	movf	(___fleq@ff2+1)^0,w,c
  8505  005214  1816               	xorwf	(___fleq@ff1+1)^0,w,c
  8506  005216  E107               	bnz	u10490
  8507  005218  501B               	movf	(___fleq@ff2+2)^0,w,c
  8508  00521A  1817               	xorwf	(___fleq@ff1+2)^0,w,c
  8509  00521C  E104               	bnz	u10490
  8510  00521E  501C               	movf	(___fleq@ff2+3)^0,w,c
  8511  005220  1818               	xorwf	(___fleq@ff1+3)^0,w,c
  8512  005222  B4D8               	btfsc	status,2,c
  8513  005224  D002               	goto	l9250
  8514  005226                     u10490:
  8515                           
  8516                           ; BSR set to: 0
  8517  005226  90D8               	bcf	status,0,c
  8518  005228  0012               	return	
  8519  00522A                     l9250:
  8520                           
  8521                           ; BSR set to: 0
  8522  00522A  80D8               	bsf	status,0,c
  8523                           
  8524                           ; BSR set to: 0
  8525  00522C  0012               	return		;funcret
  8526  00522E                     __end_of___fleq:
  8527                           	callstack 0
  8528                           
  8529 ;; *************** function ___fldiv *****************
  8530 ;; Defined at:
  8531 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  b               4   20[COMRAM] unsigned char 
  8534 ;;  a               4   24[COMRAM] unsigned char 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;  grs             4   39[COMRAM] unsigned long 
  8537 ;;  rem             4   32[COMRAM] unsigned long 
  8538 ;;  new_exp         2   37[COMRAM] short 
  8539 ;;  aexp            1   44[COMRAM] unsigned char 
  8540 ;;  bexp            1   43[COMRAM] unsigned char 
  8541 ;;  sign            1   36[COMRAM] unsigned char 
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  4   20[COMRAM] unsigned char 
  8544 ;; Registers used:
  8545 ;;		wreg, status,2, status,0
  8546 ;; Tracked objects:
  8547 ;;		On entry : 3F/0
  8548 ;;		On exit  : 3F/0
  8549 ;;		Unchanged: 3F/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8551 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8552 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;Total ram usage:       25 bytes
  8556 ;; Hardware stack levels used: 1
  8557 ;; Hardware stack levels required when called: 4
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_efgtoa
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text25
  8566  00376E                     __ptext25:
  8567                           	callstack 0
  8568  00376E                     ___fldiv:
  8569                           	callstack 20
  8570                           
  8571                           ; BSR set to: 0
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;incstack = 0
  8575  00376E  5018               	movf	(___fldiv@b+3)^0,w,c
  8576  003770  0B80               	andlw	128
  8577  003772  6E25               	movwf	___fldiv@sign^0,c
  8578  003774  5018               	movf	(___fldiv@b+3)^0,w,c
  8579  003776  2418               	addwf	(___fldiv@b+3)^0,w,c
  8580  003778  6E2C               	movwf	___fldiv@bexp^0,c
  8581                           
  8582                           ; BSR set to: 0
  8583  00377A  BE17               	btfsc	(___fldiv@b+2)^0,7,c
  8584                           
  8585                           ; BSR set to: 0
  8586  00377C  802C               	bsf	___fldiv@bexp^0,0,c
  8587                           
  8588                           ; BSR set to: 0
  8589  00377E  502C               	movf	___fldiv@bexp^0,w,c
  8590  003780  B4D8               	btfsc	status,2,c
  8591  003782  D00D               	goto	l8900
  8592                           
  8593                           ; BSR set to: 0
  8594  003784  282C               	incf	___fldiv@bexp^0,w,c
  8595  003786  A4D8               	btfss	status,2,c
  8596  003788  D008               	goto	l8896
  8597                           
  8598                           ; BSR set to: 0
  8599  00378A  0E00               	movlw	0
  8600  00378C  6E15               	movwf	___fldiv@b^0,c
  8601  00378E  0E00               	movlw	0
  8602  003790  6E16               	movwf	(___fldiv@b+1)^0,c
  8603  003792  0E00               	movlw	0
  8604  003794  6E17               	movwf	(___fldiv@b+2)^0,c
  8605  003796  0E00               	movlw	0
  8606  003798  6E18               	movwf	(___fldiv@b+3)^0,c
  8607  00379A                     l8896:
  8608                           
  8609                           ; BSR set to: 0
  8610  00379A  8E17               	bsf	(___fldiv@b+2)^0,7,c
  8611  00379C  D006               	goto	L12
  8612  00379E                     l8900:
  8613                           
  8614                           ; BSR set to: 0
  8615  00379E  0E00               	movlw	0
  8616  0037A0  6E15               	movwf	___fldiv@b^0,c
  8617  0037A2  0E00               	movlw	0
  8618  0037A4  6E16               	movwf	(___fldiv@b+1)^0,c
  8619  0037A6  0E00               	movlw	0
  8620  0037A8  6E17               	movwf	(___fldiv@b+2)^0,c
  8621  0037AA                     L12:
  8622  0037AA  0E00               	movlw	0
  8623  0037AC  6E18               	movwf	(___fldiv@b+3)^0,c
  8624                           
  8625                           ; BSR set to: 0
  8626  0037AE  501C               	movf	(___fldiv@a+3)^0,w,c
  8627  0037B0  0B80               	andlw	128
  8628  0037B2  1A25               	xorwf	___fldiv@sign^0,f,c
  8629                           
  8630                           ; BSR set to: 0
  8631  0037B4  501C               	movf	(___fldiv@a+3)^0,w,c
  8632  0037B6  241C               	addwf	(___fldiv@a+3)^0,w,c
  8633  0037B8  6E2D               	movwf	___fldiv@aexp^0,c
  8634                           
  8635                           ; BSR set to: 0
  8636  0037BA  BE1B               	btfsc	(___fldiv@a+2)^0,7,c
  8637                           
  8638                           ; BSR set to: 0
  8639  0037BC  802D               	bsf	___fldiv@aexp^0,0,c
  8640                           
  8641                           ; BSR set to: 0
  8642  0037BE  502D               	movf	___fldiv@aexp^0,w,c
  8643  0037C0  B4D8               	btfsc	status,2,c
  8644  0037C2  D00D               	goto	l8920
  8645                           
  8646                           ; BSR set to: 0
  8647  0037C4  282D               	incf	___fldiv@aexp^0,w,c
  8648  0037C6  A4D8               	btfss	status,2,c
  8649  0037C8  D008               	goto	l8916
  8650                           
  8651                           ; BSR set to: 0
  8652  0037CA  0E00               	movlw	0
  8653  0037CC  6E19               	movwf	___fldiv@a^0,c
  8654  0037CE  0E00               	movlw	0
  8655  0037D0  6E1A               	movwf	(___fldiv@a+1)^0,c
  8656  0037D2  0E00               	movlw	0
  8657  0037D4  6E1B               	movwf	(___fldiv@a+2)^0,c
  8658  0037D6  0E00               	movlw	0
  8659  0037D8  6E1C               	movwf	(___fldiv@a+3)^0,c
  8660  0037DA                     l8916:
  8661                           
  8662                           ; BSR set to: 0
  8663  0037DA  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  8664  0037DC  D006               	goto	L13
  8665  0037DE                     l8920:
  8666                           
  8667                           ; BSR set to: 0
  8668  0037DE  0E00               	movlw	0
  8669  0037E0  6E19               	movwf	___fldiv@a^0,c
  8670  0037E2  0E00               	movlw	0
  8671  0037E4  6E1A               	movwf	(___fldiv@a+1)^0,c
  8672  0037E6  0E00               	movlw	0
  8673  0037E8  6E1B               	movwf	(___fldiv@a+2)^0,c
  8674  0037EA                     L13:
  8675  0037EA  0E00               	movlw	0
  8676  0037EC  6E1C               	movwf	(___fldiv@a+3)^0,c
  8677                           
  8678                           ; BSR set to: 0
  8679  0037EE  5019               	movf	___fldiv@a^0,w,c
  8680  0037F0  101A               	iorwf	(___fldiv@a+1)^0,w,c
  8681  0037F2  101B               	iorwf	(___fldiv@a+2)^0,w,c
  8682  0037F4  101C               	iorwf	(___fldiv@a+3)^0,w,c
  8683  0037F6  A4D8               	btfss	status,2,c
  8684  0037F8  D017               	goto	l8934
  8685                           
  8686                           ; BSR set to: 0
  8687  0037FA  0E00               	movlw	0
  8688  0037FC  6E15               	movwf	___fldiv@b^0,c
  8689  0037FE  0E00               	movlw	0
  8690  003800  6E16               	movwf	(___fldiv@b+1)^0,c
  8691  003802  0E00               	movlw	0
  8692  003804  6E17               	movwf	(___fldiv@b+2)^0,c
  8693  003806  0E00               	movlw	0
  8694  003808  6E18               	movwf	(___fldiv@b+3)^0,c
  8695                           
  8696                           ; BSR set to: 0
  8697  00380A  0E80               	movlw	128
  8698  00380C  1217               	iorwf	(___fldiv@b+2)^0,f,c
  8699  00380E  0E7F               	movlw	127
  8700  003810  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8701  003812                     l8928:
  8702                           
  8703                           ; BSR set to: 0
  8704  003812  5025               	movf	___fldiv@sign^0,w,c
  8705  003814  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8706                           
  8707                           ; BSR set to: 0
  8708  003816  C015  F015         	movff	___fldiv@b,?___fldiv
  8709  00381A  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  8710  00381E  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  8711  003822  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  8712  003826  0012               	return	
  8713  003828                     l8934:
  8714                           
  8715                           ; BSR set to: 0
  8716  003828  502C               	movf	___fldiv@bexp^0,w,c
  8717  00382A  A4D8               	btfss	status,2,c
  8718  00382C  D009               	goto	l8942
  8719                           
  8720                           ; BSR set to: 0
  8721                           
  8722                           ; BSR set to: 0
  8723  00382E  0E00               	movlw	0
  8724  003830  6E15               	movwf	?___fldiv^0,c
  8725  003832  0E00               	movlw	0
  8726  003834  6E16               	movwf	(?___fldiv+1)^0,c
  8727  003836  0E00               	movlw	0
  8728  003838  6E17               	movwf	(?___fldiv+2)^0,c
  8729  00383A  0E00               	movlw	0
  8730  00383C  6E18               	movwf	(?___fldiv+3)^0,c
  8731  00383E  0012               	return	
  8732  003840                     l8942:
  8733                           
  8734                           ; BSR set to: 0
  8735  003840  502D               	movf	___fldiv@aexp^0,w,c
  8736  003842  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  8737  003846  6A1E               	clrf	(??___fldiv+1)^0,c
  8738  003848  5E1D               	subwf	??___fldiv^0,f,c
  8739  00384A  0E00               	movlw	0
  8740  00384C  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  8741  00384E  0E7F               	movlw	127
  8742  003850  241D               	addwf	??___fldiv^0,w,c
  8743  003852  6E26               	movwf	___fldiv@new_exp^0,c
  8744  003854  0E00               	movlw	0
  8745  003856  201E               	addwfc	(??___fldiv+1)^0,w,c
  8746  003858  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  8747                           
  8748                           ; BSR set to: 0
  8749  00385A  C015  F021         	movff	___fldiv@b,___fldiv@rem
  8750  00385E  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  8751  003862  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  8752  003866  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  8753                           
  8754                           ; BSR set to: 0
  8755  00386A  0E00               	movlw	0
  8756  00386C  6E15               	movwf	___fldiv@b^0,c
  8757  00386E  0E00               	movlw	0
  8758  003870  6E16               	movwf	(___fldiv@b+1)^0,c
  8759  003872  0E00               	movlw	0
  8760  003874  6E17               	movwf	(___fldiv@b+2)^0,c
  8761  003876  0E00               	movlw	0
  8762  003878  6E18               	movwf	(___fldiv@b+3)^0,c
  8763                           
  8764                           ; BSR set to: 0
  8765  00387A  0E00               	movlw	0
  8766  00387C  6E28               	movwf	___fldiv@grs^0,c
  8767  00387E  0E00               	movlw	0
  8768  003880  6E29               	movwf	(___fldiv@grs+1)^0,c
  8769  003882  0E00               	movlw	0
  8770  003884  6E2A               	movwf	(___fldiv@grs+2)^0,c
  8771  003886  0E00               	movlw	0
  8772  003888  6E2B               	movwf	(___fldiv@grs+3)^0,c
  8773                           
  8774                           ; BSR set to: 0
  8775  00388A  0E00               	movlw	0
  8776  00388C  6E2D               	movwf	___fldiv@aexp^0,c
  8777  00388E  D028               	goto	l1705
  8778  003890                     l8952:
  8779                           
  8780                           ; BSR set to: 0
  8781  003890  502D               	movf	___fldiv@aexp^0,w,c
  8782  003892  B4D8               	btfsc	status,2,c
  8783  003894  D011               	goto	l8960
  8784                           
  8785                           ; BSR set to: 0
  8786  003896  90D8               	bcf	status,0,c
  8787  003898  3621               	rlcf	___fldiv@rem^0,f,c
  8788  00389A  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  8789  00389C  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  8790  00389E  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  8791  0038A0  90D8               	bcf	status,0,c
  8792  0038A2  3615               	rlcf	___fldiv@b^0,f,c
  8793  0038A4  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8794  0038A6  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8795  0038A8  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8796                           
  8797                           ; BSR set to: 0
  8798  0038AA  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8799                           
  8800                           ; BSR set to: 0
  8801  0038AC  8015               	bsf	___fldiv@b^0,0,c
  8802                           
  8803                           ; BSR set to: 0
  8804  0038AE  90D8               	bcf	status,0,c
  8805  0038B0  3628               	rlcf	___fldiv@grs^0,f,c
  8806  0038B2  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8807  0038B4  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8808  0038B6  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8809  0038B8                     l8960:
  8810                           
  8811                           ; BSR set to: 0
  8812  0038B8  5019               	movf	___fldiv@a^0,w,c
  8813  0038BA  5C21               	subwf	___fldiv@rem^0,w,c
  8814  0038BC  501A               	movf	(___fldiv@a+1)^0,w,c
  8815  0038BE  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  8816  0038C0  501B               	movf	(___fldiv@a+2)^0,w,c
  8817  0038C2  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  8818  0038C4  501C               	movf	(___fldiv@a+3)^0,w,c
  8819  0038C6  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  8820  0038C8  A0D8               	btfss	status,0,c
  8821  0038CA  D009               	goto	l8966
  8822                           
  8823                           ; BSR set to: 0
  8824  0038CC  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  8825                           
  8826                           ; BSR set to: 0
  8827  0038CE  5019               	movf	___fldiv@a^0,w,c
  8828  0038D0  5E21               	subwf	___fldiv@rem^0,f,c
  8829  0038D2  501A               	movf	(___fldiv@a+1)^0,w,c
  8830  0038D4  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  8831  0038D6  501B               	movf	(___fldiv@a+2)^0,w,c
  8832  0038D8  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  8833  0038DA  501C               	movf	(___fldiv@a+3)^0,w,c
  8834  0038DC  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  8835  0038DE                     l8966:
  8836                           
  8837                           ; BSR set to: 0
  8838  0038DE  2A2D               	incf	___fldiv@aexp^0,f,c
  8839  0038E0                     l1705:
  8840                           
  8841                           ; BSR set to: 0
  8842  0038E0  0E19               	movlw	25
  8843  0038E2  642D               	cpfsgt	___fldiv@aexp^0,c
  8844  0038E4  D7D5               	goto	l8952
  8845                           
  8846                           ; BSR set to: 0
  8847  0038E6  5021               	movf	___fldiv@rem^0,w,c
  8848  0038E8  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  8849  0038EA  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  8850  0038EC  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  8851  0038EE  B4D8               	btfsc	status,2,c
  8852  0038F0  D011               	goto	l8978
  8853                           
  8854                           ; BSR set to: 0
  8855  0038F2  8028               	bsf	___fldiv@grs^0,0,c
  8856  0038F4  D00F               	goto	l8978
  8857  0038F6                     l8972:
  8858                           
  8859                           ; BSR set to: 0
  8860  0038F6  90D8               	bcf	status,0,c
  8861  0038F8  3615               	rlcf	___fldiv@b^0,f,c
  8862  0038FA  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8863  0038FC  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8864  0038FE  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8865                           
  8866                           ; BSR set to: 0
  8867  003900  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8868                           
  8869                           ; BSR set to: 0
  8870  003902  8015               	bsf	___fldiv@b^0,0,c
  8871                           
  8872                           ; BSR set to: 0
  8873  003904  90D8               	bcf	status,0,c
  8874  003906  3628               	rlcf	___fldiv@grs^0,f,c
  8875  003908  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8876  00390A  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8877  00390C  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8878  00390E  0626               	decf	___fldiv@new_exp^0,f,c
  8879  003910  A0D8               	btfss	status,0,c
  8880  003912  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  8881  003914                     l8978:
  8882                           
  8883                           ; BSR set to: 0
  8884  003914  AE17               	btfss	(___fldiv@b+2)^0,7,c
  8885  003916  D7EF               	goto	l8972
  8886                           
  8887                           ; BSR set to: 0
  8888  003918  0E00               	movlw	0
  8889  00391A  6E2D               	movwf	___fldiv@aexp^0,c
  8890                           
  8891                           ; BSR set to: 0
  8892  00391C  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  8893  00391E  D017               	goto	l1716
  8894                           
  8895                           ; BSR set to: 0
  8896  003920  0EFF               	movlw	255
  8897  003922  1428               	andwf	___fldiv@grs^0,w,c
  8898  003924  6E1D               	movwf	??___fldiv^0,c
  8899  003926  0EFF               	movlw	255
  8900  003928  1429               	andwf	(___fldiv@grs+1)^0,w,c
  8901  00392A  6E1E               	movwf	(??___fldiv+1)^0,c
  8902  00392C  0EFF               	movlw	255
  8903  00392E  142A               	andwf	(___fldiv@grs+2)^0,w,c
  8904  003930  6E1F               	movwf	(??___fldiv+2)^0,c
  8905  003932  0E7F               	movlw	127
  8906  003934  142B               	andwf	(___fldiv@grs+3)^0,w,c
  8907  003936  6E20               	movwf	(??___fldiv+3)^0,c
  8908  003938  501D               	movf	??___fldiv^0,w,c
  8909  00393A  101E               	iorwf	(??___fldiv+1)^0,w,c
  8910  00393C  101F               	iorwf	(??___fldiv+2)^0,w,c
  8911  00393E  1020               	iorwf	(??___fldiv+3)^0,w,c
  8912  003940  B4D8               	btfsc	status,2,c
  8913  003942  D003               	goto	l1717
  8914  003944                     u10100:
  8915                           
  8916                           ; BSR set to: 0
  8917  003944  0E01               	movlw	1
  8918  003946  6E2D               	movwf	___fldiv@aexp^0,c
  8919  003948  D002               	goto	l1716
  8920  00394A                     l1717:
  8921                           
  8922                           ; BSR set to: 0
  8923  00394A  B015               	btfsc	___fldiv@b^0,0,c
  8924  00394C  D7FB               	goto	u10100
  8925  00394E                     l1716:
  8926                           
  8927                           ; BSR set to: 0
  8928  00394E  502D               	movf	___fldiv@aexp^0,w,c
  8929  003950  B4D8               	btfsc	status,2,c
  8930  003952  D01F               	goto	l8998
  8931                           
  8932                           ; BSR set to: 0
  8933  003954  0E01               	movlw	1
  8934  003956  2615               	addwf	___fldiv@b^0,f,c
  8935  003958  0E00               	movlw	0
  8936  00395A  2216               	addwfc	(___fldiv@b+1)^0,f,c
  8937  00395C  2217               	addwfc	(___fldiv@b+2)^0,f,c
  8938  00395E  2218               	addwfc	(___fldiv@b+3)^0,f,c
  8939                           
  8940                           ; BSR set to: 0
  8941  003960  A018               	btfss	(___fldiv@b+3)^0,0,c
  8942  003962  D017               	goto	l8998
  8943                           
  8944                           ; BSR set to: 0
  8945  003964  C015  F01D         	movff	___fldiv@b,??___fldiv
  8946  003968  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  8947  00396C  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  8948  003970  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  8949  003974  3420               	rlcf	(??___fldiv+3)^0,w,c
  8950  003976  3220               	rrcf	(??___fldiv+3)^0,f,c
  8951  003978  321F               	rrcf	(??___fldiv+2)^0,f,c
  8952  00397A  321E               	rrcf	(??___fldiv+1)^0,f,c
  8953  00397C  321D               	rrcf	??___fldiv^0,f,c
  8954  00397E  C01D  F015         	movff	??___fldiv,___fldiv@b
  8955  003982  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  8956  003986  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  8957  00398A  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  8958                           
  8959                           ; BSR set to: 0
  8960  00398E  4A26               	infsnz	___fldiv@new_exp^0,f,c
  8961  003990  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  8962  003992                     l8998:
  8963                           
  8964                           ; BSR set to: 0
  8965  003992  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8966  003994  D010               	goto	l9002
  8967  003996  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  8968  003998  E103               	bnz	u10140
  8969  00399A  2826               	incf	___fldiv@new_exp^0,w,c
  8970  00399C  A0D8               	btfss	status,0,c
  8971  00399E  D00B               	goto	l9002
  8972  0039A0                     u10140:
  8973                           
  8974                           ; BSR set to: 0
  8975  0039A0  0E00               	movlw	0
  8976  0039A2  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  8977  0039A4  6826               	setf	___fldiv@new_exp^0,c
  8978  0039A6  0E00               	movlw	0
  8979  0039A8  6E15               	movwf	___fldiv@b^0,c
  8980  0039AA  0E00               	movlw	0
  8981  0039AC  6E16               	movwf	(___fldiv@b+1)^0,c
  8982  0039AE  0E00               	movlw	0
  8983  0039B0  6E17               	movwf	(___fldiv@b+2)^0,c
  8984  0039B2  0E00               	movlw	0
  8985  0039B4  6E18               	movwf	(___fldiv@b+3)^0,c
  8986  0039B6                     l9002:
  8987                           
  8988                           ; BSR set to: 0
  8989  0039B6  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8990  0039B8  D005               	goto	u10150
  8991  0039BA  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  8992  0039BC  E111               	bnz	l9006
  8993  0039BE  0426               	decf	___fldiv@new_exp^0,w,c
  8994  0039C0  B0D8               	btfsc	status,0,c
  8995  0039C2  D00E               	goto	l9006
  8996  0039C4                     u10150:
  8997                           
  8998                           ; BSR set to: 0
  8999  0039C4  0E00               	movlw	0
  9000  0039C6  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9001  0039C8  0E00               	movlw	0
  9002  0039CA  6E26               	movwf	___fldiv@new_exp^0,c
  9003  0039CC  0E00               	movlw	0
  9004  0039CE  6E15               	movwf	___fldiv@b^0,c
  9005  0039D0  0E00               	movlw	0
  9006  0039D2  6E16               	movwf	(___fldiv@b+1)^0,c
  9007  0039D4  0E00               	movlw	0
  9008  0039D6  6E17               	movwf	(___fldiv@b+2)^0,c
  9009  0039D8  0E00               	movlw	0
  9010  0039DA  6E18               	movwf	(___fldiv@b+3)^0,c
  9011  0039DC  0E00               	movlw	0
  9012  0039DE  6E25               	movwf	___fldiv@sign^0,c
  9013  0039E0                     l9006:
  9014                           
  9015                           ; BSR set to: 0
  9016  0039E0  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  9017                           
  9018                           ; BSR set to: 0
  9019  0039E4  A02C               	btfss	___fldiv@bexp^0,0,c
  9020  0039E6  D002               	goto	l9012
  9021                           
  9022                           ; BSR set to: 0
  9023  0039E8  8E17               	bsf	(___fldiv@b+2)^0,7,c
  9024  0039EA  D001               	goto	l9014
  9025  0039EC                     l9012:
  9026                           
  9027                           ; BSR set to: 0
  9028  0039EC  9E17               	bcf	(___fldiv@b+2)^0,7,c
  9029  0039EE                     l9014:
  9030                           
  9031                           ; BSR set to: 0
  9032  0039EE  90D8               	bcf	status,0,c
  9033  0039F0  302C               	rrcf	___fldiv@bexp^0,w,c
  9034  0039F2  6E18               	movwf	(___fldiv@b+3)^0,c
  9035  0039F4  D70E               	goto	l8928
  9036  0039F6                     __end_of___fldiv:
  9037                           	callstack 0
  9038                           
  9039 ;; *************** function ___awmod *****************
  9040 ;; Defined at:
  9041 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;  dividend        2   20[COMRAM] int 
  9044 ;;  divisor         2   22[COMRAM] int 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  sign            1   25[COMRAM] unsigned char 
  9047 ;;  counter         1   24[COMRAM] unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  2   20[COMRAM] int 
  9050 ;; Registers used:
  9051 ;;		wreg, status,2, status,0
  9052 ;; Tracked objects:
  9053 ;;		On entry : 3F/0
  9054 ;;		On exit  : 3F/0
  9055 ;;		Unchanged: 3F/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9060 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9061 ;;Total ram usage:        6 bytes
  9062 ;; Hardware stack levels used: 1
  9063 ;; Hardware stack levels required when called: 4
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_efgtoa
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text26
  9072  0053A8                     __ptext26:
  9073                           	callstack 0
  9074  0053A8                     ___awmod:
  9075                           	callstack 20
  9076                           
  9077                           ; BSR set to: 0
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;incstack = 0
  9081  0053A8  0E00               	movlw	0
  9082  0053AA  6E1A               	movwf	___awmod@sign^0,c
  9083                           
  9084                           ; BSR set to: 0
  9085  0053AC  AE16               	btfss	(___awmod@dividend+1)^0,7,c
  9086  0053AE  D006               	goto	l9210
  9087                           
  9088                           ; BSR set to: 0
  9089  0053B0  6C15               	negf	___awmod@dividend^0,c
  9090  0053B2  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9091  0053B4  B0D8               	btfsc	status,0,c
  9092  0053B6  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9093                           
  9094                           ; BSR set to: 0
  9095  0053B8  0E01               	movlw	1
  9096  0053BA  6E1A               	movwf	___awmod@sign^0,c
  9097  0053BC                     l9210:
  9098                           
  9099                           ; BSR set to: 0
  9100  0053BC  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9101  0053BE  D004               	goto	l9214
  9102                           
  9103                           ; BSR set to: 0
  9104  0053C0  6C17               	negf	___awmod@divisor^0,c
  9105  0053C2  1E18               	comf	(___awmod@divisor+1)^0,f,c
  9106  0053C4  B0D8               	btfsc	status,0,c
  9107  0053C6  2A18               	incf	(___awmod@divisor+1)^0,f,c
  9108  0053C8                     l9214:
  9109                           
  9110                           ; BSR set to: 0
  9111  0053C8  5017               	movf	___awmod@divisor^0,w,c
  9112  0053CA  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  9113  0053CC  B4D8               	btfsc	status,2,c
  9114  0053CE  D018               	goto	l9230
  9115                           
  9116                           ; BSR set to: 0
  9117  0053D0  0E01               	movlw	1
  9118  0053D2  6E19               	movwf	___awmod@counter^0,c
  9119  0053D4  D004               	goto	l9220
  9120  0053D6                     l9218:
  9121                           
  9122                           ; BSR set to: 0
  9123  0053D6  90D8               	bcf	status,0,c
  9124  0053D8  3617               	rlcf	___awmod@divisor^0,f,c
  9125  0053DA  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  9126  0053DC  2A19               	incf	___awmod@counter^0,f,c
  9127  0053DE                     l9220:
  9128                           
  9129                           ; BSR set to: 0
  9130  0053DE  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9131  0053E0  D7FA               	goto	l9218
  9132  0053E2                     u10440:
  9133                           
  9134                           ; BSR set to: 0
  9135  0053E2  5017               	movf	___awmod@divisor^0,w,c
  9136  0053E4  5C15               	subwf	___awmod@dividend^0,w,c
  9137  0053E6  5018               	movf	(___awmod@divisor+1)^0,w,c
  9138  0053E8  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  9139  0053EA  A0D8               	btfss	status,0,c
  9140  0053EC  D004               	goto	l9226
  9141                           
  9142                           ; BSR set to: 0
  9143  0053EE  5017               	movf	___awmod@divisor^0,w,c
  9144  0053F0  5E15               	subwf	___awmod@dividend^0,f,c
  9145  0053F2  5018               	movf	(___awmod@divisor+1)^0,w,c
  9146  0053F4  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  9147  0053F6                     l9226:
  9148                           
  9149                           ; BSR set to: 0
  9150  0053F6  90D8               	bcf	status,0,c
  9151  0053F8  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  9152  0053FA  3217               	rrcf	___awmod@divisor^0,f,c
  9153                           
  9154                           ; BSR set to: 0
  9155  0053FC  2E19               	decfsz	___awmod@counter^0,f,c
  9156  0053FE  D7F1               	goto	u10440
  9157  005400                     l9230:
  9158                           
  9159                           ; BSR set to: 0
  9160  005400  501A               	movf	___awmod@sign^0,w,c
  9161  005402  B4D8               	btfsc	status,2,c
  9162  005404  D004               	goto	l9234
  9163                           
  9164                           ; BSR set to: 0
  9165  005406  6C15               	negf	___awmod@dividend^0,c
  9166  005408  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9167  00540A  B0D8               	btfsc	status,0,c
  9168  00540C  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9169  00540E                     l9234:
  9170                           
  9171                           ; BSR set to: 0
  9172  00540E  C015  F015         	movff	___awmod@dividend,?___awmod
  9173  005412  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  9174                           
  9175                           ; BSR set to: 0
  9176  005416  0012               	return		;funcret
  9177  005418                     __end_of___awmod:
  9178                           	callstack 0
  9179                           
  9180 ;; *************** function ___awdiv *****************
  9181 ;; Defined at:
  9182 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  dividend        2   20[COMRAM] int 
  9185 ;;  divisor         2   22[COMRAM] int 
  9186 ;; Auto vars:     Size  Location     Type
  9187 ;;  quotient        2   26[COMRAM] int 
  9188 ;;  sign            1   25[COMRAM] unsigned char 
  9189 ;;  counter         1   24[COMRAM] unsigned char 
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  2   20[COMRAM] int 
  9192 ;; Registers used:
  9193 ;;		wreg, status,2, status,0
  9194 ;; Tracked objects:
  9195 ;;		On entry : 3F/0
  9196 ;;		On exit  : 3F/0
  9197 ;;		Unchanged: 3F/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9203 ;;Total ram usage:        8 bytes
  9204 ;; Hardware stack levels used: 1
  9205 ;; Hardware stack levels required when called: 4
  9206 ;; This function calls:
  9207 ;;		Nothing
  9208 ;; This function is called by:
  9209 ;;		_efgtoa
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           	psect	text27
  9214  0052B2                     __ptext27:
  9215                           	callstack 0
  9216  0052B2                     ___awdiv:
  9217                           	callstack 20
  9218                           
  9219                           ; BSR set to: 0
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;incstack = 0
  9223  0052B2  0E00               	movlw	0
  9224  0052B4  6E1A               	movwf	___awdiv@sign^0,c
  9225                           
  9226                           ; BSR set to: 0
  9227  0052B6  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9228  0052B8  D006               	goto	l9166
  9229                           
  9230                           ; BSR set to: 0
  9231  0052BA  6C17               	negf	___awdiv@divisor^0,c
  9232  0052BC  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  9233  0052BE  B0D8               	btfsc	status,0,c
  9234  0052C0  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  9235                           
  9236                           ; BSR set to: 0
  9237  0052C2  0E01               	movlw	1
  9238  0052C4  6E1A               	movwf	___awdiv@sign^0,c
  9239  0052C6                     l9166:
  9240                           
  9241                           ; BSR set to: 0
  9242  0052C6  AE16               	btfss	(___awdiv@dividend+1)^0,7,c
  9243  0052C8  D006               	goto	l9172
  9244                           
  9245                           ; BSR set to: 0
  9246  0052CA  6C15               	negf	___awdiv@dividend^0,c
  9247  0052CC  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  9248  0052CE  B0D8               	btfsc	status,0,c
  9249  0052D0  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  9250                           
  9251                           ; BSR set to: 0
  9252  0052D2  0E01               	movlw	1
  9253  0052D4  1A1A               	xorwf	___awdiv@sign^0,f,c
  9254  0052D6                     l9172:
  9255                           
  9256                           ; BSR set to: 0
  9257  0052D6  0E00               	movlw	0
  9258  0052D8  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  9259  0052DA  0E00               	movlw	0
  9260  0052DC  6E1B               	movwf	___awdiv@quotient^0,c
  9261                           
  9262                           ; BSR set to: 0
  9263  0052DE  5017               	movf	___awdiv@divisor^0,w,c
  9264  0052E0  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  9265  0052E2  B4D8               	btfsc	status,2,c
  9266  0052E4  D01C               	goto	l9194
  9267                           
  9268                           ; BSR set to: 0
  9269  0052E6  0E01               	movlw	1
  9270  0052E8  6E19               	movwf	___awdiv@counter^0,c
  9271  0052EA  D004               	goto	l9180
  9272  0052EC                     l9178:
  9273                           
  9274                           ; BSR set to: 0
  9275  0052EC  90D8               	bcf	status,0,c
  9276  0052EE  3617               	rlcf	___awdiv@divisor^0,f,c
  9277  0052F0  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  9278  0052F2  2A19               	incf	___awdiv@counter^0,f,c
  9279  0052F4                     l9180:
  9280                           
  9281                           ; BSR set to: 0
  9282  0052F4  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9283  0052F6  D7FA               	goto	l9178
  9284  0052F8                     u10380:
  9285                           
  9286                           ; BSR set to: 0
  9287  0052F8  90D8               	bcf	status,0,c
  9288  0052FA  361B               	rlcf	___awdiv@quotient^0,f,c
  9289  0052FC  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  9290                           
  9291                           ; BSR set to: 0
  9292  0052FE  5017               	movf	___awdiv@divisor^0,w,c
  9293  005300  5C15               	subwf	___awdiv@dividend^0,w,c
  9294  005302  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9295  005304  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  9296  005306  A0D8               	btfss	status,0,c
  9297  005308  D005               	goto	l9190
  9298                           
  9299                           ; BSR set to: 0
  9300  00530A  5017               	movf	___awdiv@divisor^0,w,c
  9301  00530C  5E15               	subwf	___awdiv@dividend^0,f,c
  9302  00530E  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9303  005310  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  9304                           
  9305                           ; BSR set to: 0
  9306  005312  801B               	bsf	___awdiv@quotient^0,0,c
  9307  005314                     l9190:
  9308                           
  9309                           ; BSR set to: 0
  9310  005314  90D8               	bcf	status,0,c
  9311  005316  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  9312  005318  3217               	rrcf	___awdiv@divisor^0,f,c
  9313                           
  9314                           ; BSR set to: 0
  9315  00531A  2E19               	decfsz	___awdiv@counter^0,f,c
  9316  00531C  D7ED               	goto	u10380
  9317  00531E                     l9194:
  9318                           
  9319                           ; BSR set to: 0
  9320  00531E  501A               	movf	___awdiv@sign^0,w,c
  9321  005320  B4D8               	btfsc	status,2,c
  9322  005322  D004               	goto	l9198
  9323                           
  9324                           ; BSR set to: 0
  9325  005324  6C1B               	negf	___awdiv@quotient^0,c
  9326  005326  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  9327  005328  B0D8               	btfsc	status,0,c
  9328  00532A  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  9329  00532C                     l9198:
  9330                           
  9331                           ; BSR set to: 0
  9332  00532C  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  9333  005330  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  9334                           
  9335                           ; BSR set to: 0
  9336  005334  0012               	return		;funcret
  9337  005336                     __end_of___awdiv:
  9338                           	callstack 0
  9339                           
  9340 ;; *************** function _atoi *****************
  9341 ;; Defined at:
  9342 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  s               1   27[COMRAM] PTR const unsigned char 
  9345 ;;		 -> STR_9(21), STR_5(74), 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  n               2   35[COMRAM] int 
  9348 ;;  neg             2   33[COMRAM] int 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  2   27[COMRAM] int 
  9351 ;; Registers used:
  9352 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9353 ;; Tracked objects:
  9354 ;;		On entry : 3F/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9361 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9362 ;;Total ram usage:       10 bytes
  9363 ;; Hardware stack levels used: 1
  9364 ;; Hardware stack levels required when called: 5
  9365 ;; This function calls:
  9366 ;;		___wmul
  9367 ;;		_isdigit
  9368 ;;		_isspace
  9369 ;; This function is called by:
  9370 ;;		_vfpfcnvrt
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text28
  9375  0047E4                     __ptext28:
  9376                           	callstack 0
  9377  0047E4                     _atoi:
  9378                           	callstack 20
  9379                           
  9380                           ; BSR set to: 0
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;incstack = 0
  9384  0047E4  0E00               	movlw	0
  9385  0047E6  6E25               	movwf	(atoi@n+1)^0,c
  9386  0047E8  0E00               	movlw	0
  9387  0047EA  6E24               	movwf	atoi@n^0,c
  9388  0047EC  0E00               	movlw	0
  9389  0047EE  6E23               	movwf	(atoi@neg+1)^0,c
  9390  0047F0  0E00               	movlw	0
  9391  0047F2  6E22               	movwf	atoi@neg^0,c
  9392  0047F4  D001               	goto	l9878
  9393  0047F6                     l9874:
  9394                           
  9395                           ; BSR set to: 0
  9396  0047F6  2A1C               	incf	atoi@s^0,f,c
  9397  0047F8                     l9878:
  9398                           
  9399                           ; BSR set to: 0
  9400  0047F8  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9401  0047FE                     	if	1	;There is more than 1 active tblptr byte
  9402  0047FE  0E20               	movlw	high __smallconst
  9403  004800  6EF7               	movwf	tblptrh,c
  9404  004802                     	endif
  9405  004802                     	if	0	;tblptru may be non-zero
  9406  004802                     	endif
  9407  004802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9408  004802  0E00               	movlw	low (__smallconst shr (0+16))
  9409  004804  6EF8               	movwf	tblptru,c
  9410  004806                     	endif
  9411  004806  0008               	tblrd		*
  9412  004808  50F5               	movf	tablat,w,c
  9413  00480A  0A20               	xorlw	32
  9414  00480C  B4D8               	btfsc	status,2,c
  9415  00480E  D7F3               	goto	l9874
  9416                           
  9417                           ; BSR set to: 0
  9418  004810  0EF7               	movlw	247
  9419  004812  6E1E               	movwf	??_atoi^0,c
  9420  004814  0EFF               	movlw	255
  9421  004816  6E1F               	movwf	(??_atoi+1)^0,c
  9422  004818  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9423  00481E                     	if	1	;There is more than 1 active tblptr byte
  9424  00481E  0E20               	movlw	high __smallconst
  9425  004820  6EF7               	movwf	tblptrh,c
  9426  004822                     	endif
  9427  004822                     	if	0	;tblptru may be non-zero
  9428  004822                     	endif
  9429  004822                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9430  004822  0E00               	movlw	low (__smallconst shr (0+16))
  9431  004824  6EF8               	movwf	tblptru,c
  9432  004826                     	endif
  9433  004826  0008               	tblrd		*
  9434  004828  50F5               	movf	tablat,w,c
  9435  00482A  6E20               	movwf	(??_atoi+2)^0,c
  9436  00482C  6A21               	clrf	(??_atoi+3)^0,c
  9437  00482E  501E               	movf	??_atoi^0,w,c
  9438  004830  2620               	addwf	(??_atoi+2)^0,f,c
  9439  004832  501F               	movf	(??_atoi+1)^0,w,c
  9440  004834  2221               	addwfc	(??_atoi+3)^0,f,c
  9441  004836  5021               	movf	(??_atoi+3)^0,w,c
  9442  004838  E10B               	bnz	l9886
  9443  00483A  0E05               	movlw	5
  9444  00483C  5C20               	subwf	(??_atoi+2)^0,w,c
  9445  00483E  B0D8               	btfsc	status,0,c
  9446  004840  D007               	goto	l9886
  9447  004842  D7D9               	goto	l9874
  9448  004844                     l9882:
  9449                           
  9450                           ; BSR set to: 0
  9451  004844  0E00               	movlw	0
  9452  004846  6E23               	movwf	(atoi@neg+1)^0,c
  9453  004848  0E01               	movlw	1
  9454  00484A  6E22               	movwf	atoi@neg^0,c
  9455  00484C                     l9884:
  9456  00484C  2A1C               	incf	atoi@s^0,f,c
  9457  00484E  D034               	goto	l9894
  9458  004850                     l9886:
  9459                           
  9460                           ; BSR set to: 0
  9461  004850  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9462  004856                     	if	1	;There is more than 1 active tblptr byte
  9463  004856  0E20               	movlw	high __smallconst
  9464  004858  6EF7               	movwf	tblptrh,c
  9465  00485A                     	endif
  9466  00485A                     	if	0	;tblptru may be non-zero
  9467  00485A                     	endif
  9468  00485A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9469  00485A  0E00               	movlw	low (__smallconst shr (0+16))
  9470  00485C  6EF8               	movwf	tblptru,c
  9471  00485E                     	endif
  9472  00485E  0008               	tblrd		*
  9473  004860  50F5               	movf	tablat,w,c
  9474  004862  6E1E               	movwf	??_atoi^0,c
  9475  004864  6A1F               	clrf	(??_atoi+1)^0,c
  9476                           
  9477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9478                           ; Switch size 1, requested type "simple"
  9479                           ; Number of cases is 1, Range of values is 0 to 0
  9480                           ; switch strategies available:
  9481                           ; Name         Instructions Cycles
  9482                           ; simple_byte            4     3 (average)
  9483                           ;	Chosen strategy is simple_byte
  9484  004866  501F               	movf	(??_atoi+1)^0,w,c
  9485  004868  0A00               	xorlw	0	; case 0
  9486  00486A  A4D8               	btfss	status,2,c
  9487  00486C  D025               	goto	l9894
  9488                           
  9489                           ; BSR set to: 0
  9490                           ; Switch size 1, requested type "simple"
  9491                           ; Number of cases is 2, Range of values is 43 to 45
  9492                           ; switch strategies available:
  9493                           ; Name         Instructions Cycles
  9494                           ; simple_byte            7     4 (average)
  9495                           ;	Chosen strategy is simple_byte
  9496  00486E  501E               	movf	??_atoi^0,w,c
  9497  004870  0A2B               	xorlw	43	; case 43
  9498  004872  B4D8               	btfsc	status,2,c
  9499  004874  D7EB               	goto	l9884
  9500  004876  0A06               	xorlw	6	; case 45
  9501  004878  B4D8               	btfsc	status,2,c
  9502  00487A  D7E4               	goto	l9882
  9503  00487C  D01D               	goto	l9894
  9504  00487E                     l9888:
  9505  00487E  C024  F015         	movff	atoi@n,___wmul@multiplier
  9506  004882  C025  F016         	movff	atoi@n+1,___wmul@multiplier+1
  9507  004886  0E00               	movlw	0
  9508  004888  6E18               	movwf	(___wmul@multiplicand+1)^0,c
  9509  00488A  0E0A               	movlw	10
  9510  00488C  6E17               	movwf	___wmul@multiplicand^0,c
  9511  00488E  EC45  F02D         	call	___wmul	;wreg free
  9512  004892  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9513  004898                     	if	1	;There is more than 1 active tblptr byte
  9514  004898  0E20               	movlw	high __smallconst
  9515  00489A  6EF7               	movwf	tblptrh,c
  9516  00489C                     	endif
  9517  00489C                     	if	0	;tblptru may be non-zero
  9518  00489C                     	endif
  9519  00489C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9520  00489C  0E00               	movlw	low (__smallconst shr (0+16))
  9521  00489E  6EF8               	movwf	tblptru,c
  9522  0048A0                     	endif
  9523  0048A0  0008               	tblrd		*
  9524  0048A2  50F5               	movf	tablat,w,c
  9525  0048A4  5E15               	subwf	?___wmul^0,f,c
  9526  0048A6  0E00               	movlw	0
  9527  0048A8  5A16               	subwfb	(?___wmul+1)^0,f,c
  9528  0048AA  0E30               	movlw	48
  9529  0048AC  2415               	addwf	?___wmul^0,w,c
  9530  0048AE  6E24               	movwf	atoi@n^0,c
  9531  0048B0  0E00               	movlw	0
  9532  0048B2  2016               	addwfc	(?___wmul+1)^0,w,c
  9533  0048B4  6E25               	movwf	(atoi@n+1)^0,c
  9534  0048B6  D7CA               	goto	l9884
  9535  0048B8                     l9894:
  9536  0048B8  0ED0               	movlw	208
  9537  0048BA  6E1E               	movwf	??_atoi^0,c
  9538  0048BC  0EFF               	movlw	255
  9539  0048BE  6E1F               	movwf	(??_atoi+1)^0,c
  9540  0048C0  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9541  0048C6                     	if	1	;There is more than 1 active tblptr byte
  9542  0048C6  0E20               	movlw	high __smallconst
  9543  0048C8  6EF7               	movwf	tblptrh,c
  9544  0048CA                     	endif
  9545  0048CA                     	if	0	;tblptru may be non-zero
  9546  0048CA                     	endif
  9547  0048CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9548  0048CA  0E00               	movlw	low (__smallconst shr (0+16))
  9549  0048CC  6EF8               	movwf	tblptru,c
  9550  0048CE                     	endif
  9551  0048CE  0008               	tblrd		*
  9552  0048D0  50F5               	movf	tablat,w,c
  9553  0048D2  6E20               	movwf	(??_atoi+2)^0,c
  9554  0048D4  6A21               	clrf	(??_atoi+3)^0,c
  9555  0048D6  501E               	movf	??_atoi^0,w,c
  9556  0048D8  2620               	addwf	(??_atoi+2)^0,f,c
  9557  0048DA  501F               	movf	(??_atoi+1)^0,w,c
  9558  0048DC  2221               	addwfc	(??_atoi+3)^0,f,c
  9559  0048DE  5021               	movf	(??_atoi+3)^0,w,c
  9560  0048E0  E104               	bnz	u11750
  9561  0048E2  0E0A               	movlw	10
  9562  0048E4  5C20               	subwf	(??_atoi+2)^0,w,c
  9563  0048E6  A0D8               	btfss	status,0,c
  9564  0048E8  D7CA               	goto	l9888
  9565  0048EA                     u11750:
  9566  0048EA  5022               	movf	atoi@neg^0,w,c
  9567  0048EC  1023               	iorwf	(atoi@neg+1)^0,w,c
  9568  0048EE  A4D8               	btfss	status,2,c
  9569  0048F0  D00D               	goto	l2068
  9570  0048F2  C024  F01E         	movff	atoi@n,??_atoi
  9571  0048F6  C025  F01F         	movff	atoi@n+1,??_atoi+1
  9572  0048FA  1E1E               	comf	??_atoi^0,f,c
  9573  0048FC  1E1F               	comf	(??_atoi+1)^0,f,c
  9574  0048FE  4A1E               	infsnz	??_atoi^0,f,c
  9575  004900  2A1F               	incf	(??_atoi+1)^0,f,c
  9576  004902  C01E  F01C         	movff	??_atoi,?_atoi
  9577  004906  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9578  00490A  0012               	return	
  9579  00490C                     l2068:
  9580  00490C  C024  F01C         	movff	atoi@n,?_atoi
  9581  004910  C025  F01D         	movff	atoi@n+1,?_atoi+1
  9582  004914  0012               	return		;funcret
  9583  004916                     __end_of_atoi:
  9584                           	callstack 0
  9585                           
  9586 ;; *************** function _isspace *****************
  9587 ;; Defined at:
  9588 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  c               2   20[COMRAM] int 
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;		None
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  2   20[COMRAM] int 
  9595 ;; Registers used:
  9596 ;;		wreg, status,2, status,0
  9597 ;; Tracked objects:
  9598 ;;		On entry : 0/0
  9599 ;;		On exit  : 0/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9605 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9606 ;;Total ram usage:        7 bytes
  9607 ;; Hardware stack levels used: 1
  9608 ;; Hardware stack levels required when called: 4
  9609 ;; This function calls:
  9610 ;;		Nothing
  9611 ;; This function is called by:
  9612 ;;		_atoi
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text29
  9617  005782                     __ptext29:
  9618                           	callstack 0
  9619  005782                     _isspace:
  9620                           	callstack 20
  9621                           
  9622                           ;incstack = 0
  9623  005782  0E01               	movlw	1
  9624  005784  6E1B               	movwf	_isspace$2757^0,c
  9625  005786  0E20               	movlw	32
  9626  005788  1815               	xorwf	isspace@c^0,w,c
  9627  00578A  1016               	iorwf	(isspace@c+1)^0,w,c
  9628  00578C  B4D8               	btfsc	status,2,c
  9629  00578E  D014               	goto	l9464
  9630  005790  0EF7               	movlw	247
  9631  005792  6E17               	movwf	??_isspace^0,c
  9632  005794  0EFF               	movlw	255
  9633  005796  6E18               	movwf	(??_isspace+1)^0,c
  9634  005798  C015  F019         	movff	isspace@c,??_isspace+2
  9635  00579C  C016  F01A         	movff	isspace@c+1,??_isspace+3
  9636  0057A0  5017               	movf	??_isspace^0,w,c
  9637  0057A2  2619               	addwf	(??_isspace+2)^0,f,c
  9638  0057A4  5018               	movf	(??_isspace+1)^0,w,c
  9639  0057A6  221A               	addwfc	(??_isspace+3)^0,f,c
  9640  0057A8  501A               	movf	(??_isspace+3)^0,w,c
  9641  0057AA  E104               	bnz	u10970
  9642  0057AC  0E05               	movlw	5
  9643  0057AE  5C19               	subwf	(??_isspace+2)^0,w,c
  9644  0057B0  A0D8               	btfss	status,0,c
  9645  0057B2  D002               	goto	l9464
  9646  0057B4                     u10970:
  9647  0057B4  0E00               	movlw	0
  9648  0057B6  6E1B               	movwf	_isspace$2757^0,c
  9649  0057B8                     l9464:
  9650  0057B8  C01B  F015         	movff	_isspace$2757,?_isspace
  9651  0057BC  6A16               	clrf	(?_isspace+1)^0,c
  9652  0057BE  0012               	return		;funcret
  9653  0057C0                     __end_of_isspace:
  9654                           	callstack 0
  9655                           
  9656 ;; *************** function _isdigit *****************
  9657 ;; Defined at:
  9658 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;  c               2   20[COMRAM] int 
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;		None
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  2   20[COMRAM] int 
  9665 ;; Registers used:
  9666 ;;		wreg, status,2, status,0
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9676 ;;Total ram usage:        6 bytes
  9677 ;; Hardware stack levels used: 1
  9678 ;; Hardware stack levels required when called: 4
  9679 ;; This function calls:
  9680 ;;		Nothing
  9681 ;; This function is called by:
  9682 ;;		_vfpfcnvrt
  9683 ;;		_atoi
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           	psect	text30
  9688  0059D2                     __ptext30:
  9689                           	callstack 0
  9690  0059D2                     _isdigit:
  9691                           	callstack 21
  9692                           
  9693                           ;incstack = 0
  9694  0059D2  0ED0               	movlw	208
  9695  0059D4  6E17               	movwf	??_isdigit^0,c
  9696  0059D6  0EFF               	movlw	255
  9697  0059D8  6E18               	movwf	(??_isdigit+1)^0,c
  9698  0059DA  C015  F019         	movff	isdigit@c,??_isdigit+2
  9699  0059DE  C016  F01A         	movff	isdigit@c+1,??_isdigit+3
  9700  0059E2  5017               	movf	??_isdigit^0,w,c
  9701  0059E4  2619               	addwf	(??_isdigit+2)^0,f,c
  9702  0059E6  5018               	movf	(??_isdigit+1)^0,w,c
  9703  0059E8  221A               	addwfc	(??_isdigit+3)^0,f,c
  9704  0059EA  501A               	movf	(??_isdigit+3)^0,w,c
  9705  0059EC  E106               	bnz	u10940
  9706  0059EE  0E0A               	movlw	10
  9707  0059F0  5C19               	subwf	(??_isdigit+2)^0,w,c
  9708  0059F2  B0D8               	btfsc	status,0,c
  9709  0059F4  D002               	goto	u10940
  9710  0059F6  0E01               	movlw	1
  9711  0059F8  D001               	goto	u10950
  9712  0059FA                     u10940:
  9713  0059FA  0E00               	movlw	0
  9714  0059FC                     u10950:
  9715  0059FC  6E15               	movwf	?_isdigit^0,c
  9716  0059FE  6A16               	clrf	(?_isdigit+1)^0,c
  9717  005A00  0012               	return		;funcret
  9718  005A02                     __end_of_isdigit:
  9719                           	callstack 0
  9720                           
  9721 ;; *************** function ___wmul *****************
  9722 ;; Defined at:
  9723 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  multiplier      2   20[COMRAM] unsigned int 
  9726 ;;  multiplicand    2   22[COMRAM] unsigned int 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  product         2   24[COMRAM] unsigned int 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  2   20[COMRAM] unsigned int 
  9731 ;; Registers used:
  9732 ;;		wreg, status,2, status,0, prodl, prodh
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9741 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9742 ;;Total ram usage:        6 bytes
  9743 ;; Hardware stack levels used: 1
  9744 ;; Hardware stack levels required when called: 4
  9745 ;; This function calls:
  9746 ;;		Nothing
  9747 ;; This function is called by:
  9748 ;;		_atoi
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text31
  9753  005A8A                     __ptext31:
  9754                           	callstack 0
  9755  005A8A                     ___wmul:
  9756                           	callstack 20
  9757                           
  9758                           ;incstack = 0
  9759  005A8A  5015               	movf	___wmul@multiplier^0,w,c
  9760  005A8C  0217               	mulwf	___wmul@multiplicand^0,c
  9761  005A8E  006F FFCC  F019    	movff	prodl,___wmul@product
  9762  005A94  006F FFD0  F01A    	movff	prodh,___wmul@product+1
  9763  005A9A  5015               	movf	___wmul@multiplier^0,w,c
  9764  005A9C  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  9765  005A9E  50F3               	movf	243,w,c
  9766  005AA0  261A               	addwf	(___wmul@product+1)^0,f,c
  9767  005AA2  5016               	movf	(___wmul@multiplier+1)^0,w,c
  9768  005AA4  0217               	mulwf	___wmul@multiplicand^0,c
  9769  005AA6  50F3               	movf	243,w,c
  9770  005AA8  261A               	addwf	(___wmul@product+1)^0,f,c
  9771  005AAA  C019  F015         	movff	___wmul@product,?___wmul
  9772  005AAE  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  9773  005AB2  0012               	return		;funcret
  9774  005AB4                     __end_of___wmul:
  9775                           	callstack 0
  9776                           
  9777 ;; *************** function _display_led *****************
  9778 ;; Defined at:
  9779 ;;		line 3 in file "disp_led.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;  led             1    wreg     enum E17121
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  led             1   22[COMRAM] enum E17121
  9784 ;; Return value:  Size  Location     Type
  9785 ;;                  1    wreg      void 
  9786 ;; Registers used:
  9787 ;;		wreg, status,2, status,0
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 0/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9796 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9797 ;;Total ram usage:        3 bytes
  9798 ;; Hardware stack levels used: 1
  9799 ;; Hardware stack levels required when called: 4
  9800 ;; This function calls:
  9801 ;;		Nothing
  9802 ;; This function is called by:
  9803 ;;		_main
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           	psect	text32
  9808  004D00                     __ptext32:
  9809                           	callstack 0
  9810  004D00                     _display_led:
  9811                           	callstack 26
  9812                           
  9813                           ;incstack = 0
  9814                           ;display_led@led stored from wreg
  9815  004D00  6E17               	movwf	display_led@led^0,c
  9816                           
  9817                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
  9818  004D02  D02D               	goto	l10392
  9819  004D04                     l965:
  9820  004D04  98BD               	bcf	189,4,c	;volatile
  9821                           
  9822                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
  9823  004D06  9ABD               	bcf	189,5,c	;volatile
  9824  004D08  0012               	return	
  9825  004D0A                     l971:
  9826  004D0A  98BD               	bcf	189,4,c	;volatile
  9827                           
  9828                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
  9829  004D0C  8ABD               	bsf	189,5,c	;volatile
  9830  004D0E  0012               	return	
  9831  004D10                     l976:
  9832  004D10  88BD               	bsf	189,4,c	;volatile
  9833                           
  9834                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
  9835  004D12  9ABD               	bcf	189,5,c	;volatile
  9836  004D14  0012               	return	
  9837  004D16                     l981:
  9838  004D16  9CBD               	bcf	189,6,c	;volatile
  9839                           
  9840                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
  9841  004D18  9EBD               	bcf	189,7,c	;volatile
  9842  004D1A  0012               	return	
  9843  004D1C                     l986:
  9844  004D1C  9CBD               	bcf	189,6,c	;volatile
  9845                           
  9846                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
  9847  004D1E  8EBD               	bsf	189,7,c	;volatile
  9848  004D20  0012               	return	
  9849  004D22                     l991:
  9850  004D22  8CBD               	bsf	189,6,c	;volatile
  9851                           
  9852                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
  9853  004D24  9EBD               	bcf	189,7,c	;volatile
  9854  004D26  0012               	return	
  9855  004D28                     l996:
  9856  004D28  98BF               	bcf	191,4,c	;volatile
  9857                           
  9858                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
  9859  004D2A  9ABF               	bcf	191,5,c	;volatile
  9860  004D2C  0012               	return	
  9861  004D2E                     l1001:
  9862  004D2E  98BF               	bcf	191,4,c	;volatile
  9863                           
  9864                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
  9865  004D30  8ABF               	bsf	191,5,c	;volatile
  9866  004D32  0012               	return	
  9867  004D34                     l1006:
  9868  004D34  88BF               	bsf	191,4,c	;volatile
  9869                           
  9870                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
  9871  004D36  9ABF               	bcf	191,5,c	;volatile
  9872  004D38  0012               	return	
  9873  004D3A                     l1011:
  9874  004D3A  9CBF               	bcf	191,6,c	;volatile
  9875                           
  9876                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
  9877  004D3C  9EBF               	bcf	191,7,c	;volatile
  9878  004D3E  0012               	return	
  9879  004D40                     l1016:
  9880  004D40  9CBF               	bcf	191,6,c	;volatile
  9881                           
  9882                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
  9883  004D42  8EBF               	bsf	191,7,c	;volatile
  9884  004D44  0012               	return	
  9885  004D46                     l1021:
  9886  004D46  8CBF               	bsf	191,6,c	;volatile
  9887                           
  9888                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
  9889  004D48  9EBF               	bcf	191,7,c	;volatile
  9890  004D4A  0012               	return	
  9891  004D4C                     l1026:
  9892  004D4C  98BD               	bcf	189,4,c	;volatile
  9893                           
  9894                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
  9895  004D4E  9ABD               	bcf	189,5,c	;volatile
  9896                           
  9897                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
  9898  004D50  9CBD               	bcf	189,6,c	;volatile
  9899                           
  9900                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
  9901  004D52  9EBD               	bcf	189,7,c	;volatile
  9902                           
  9903                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
  9904  004D54  98BF               	bcf	191,4,c	;volatile
  9905                           
  9906                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
  9907  004D56  9ABF               	bcf	191,5,c	;volatile
  9908                           
  9909                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
  9910  004D58  9CBF               	bcf	191,6,c	;volatile
  9911                           
  9912                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
  9913  004D5A  9EBF               	bcf	191,7,c	;volatile
  9914  004D5C  0012               	return	
  9915  004D5E                     l10392:
  9916  004D5E  5017               	movf	display_led@led^0,w,c
  9917  004D60  6E15               	movwf	??_display_led^0,c
  9918  004D62  6A16               	clrf	(??_display_led+1)^0,c
  9919                           
  9920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9921                           ; Switch size 1, requested type "simple"
  9922                           ; Number of cases is 1, Range of values is 0 to 0
  9923                           ; switch strategies available:
  9924                           ; Name         Instructions Cycles
  9925                           ; simple_byte            4     3 (average)
  9926                           ;	Chosen strategy is simple_byte
  9927  004D64  5016               	movf	(??_display_led+1)^0,w,c
  9928  004D66  0A00               	xorlw	0	; case 0
  9929  004D68  A4D8               	btfss	status,2,c
  9930  004D6A  D7F0               	goto	l1026
  9931                           
  9932                           ; Switch size 1, requested type "simple"
  9933                           ; Number of cases is 12, Range of values is 0 to 11
  9934                           ; switch strategies available:
  9935                           ; Name         Instructions Cycles
  9936                           ; simple_byte           37    19 (average)
  9937                           ;	Chosen strategy is simple_byte
  9938  004D6C  5015               	movf	??_display_led^0,w,c
  9939  004D6E  0A00               	xorlw	0	; case 0
  9940  004D70  B4D8               	btfsc	status,2,c
  9941  004D72  D7C8               	goto	l965
  9942  004D74  0A01               	xorlw	1	; case 1
  9943  004D76  B4D8               	btfsc	status,2,c
  9944  004D78  D7CB               	goto	l976
  9945  004D7A  0A03               	xorlw	3	; case 2
  9946  004D7C  B4D8               	btfsc	status,2,c
  9947  004D7E  D7C5               	goto	l971
  9948  004D80  0A01               	xorlw	1	; case 3
  9949  004D82  B4D8               	btfsc	status,2,c
  9950  004D84  D7C8               	goto	l981
  9951  004D86  0A07               	xorlw	7	; case 4
  9952  004D88  B4D8               	btfsc	status,2,c
  9953  004D8A  D7CB               	goto	l991
  9954  004D8C  0A01               	xorlw	1	; case 5
  9955  004D8E  B4D8               	btfsc	status,2,c
  9956  004D90  D7C5               	goto	l986
  9957  004D92  0A03               	xorlw	3	; case 6
  9958  004D94  B4D8               	btfsc	status,2,c
  9959  004D96  D7C8               	goto	l996
  9960  004D98  0A01               	xorlw	1	; case 7
  9961  004D9A  B4D8               	btfsc	status,2,c
  9962  004D9C  D7CB               	goto	l1006
  9963  004D9E  0A0F               	xorlw	15	; case 8
  9964  004DA0  B4D8               	btfsc	status,2,c
  9965  004DA2  D7C5               	goto	l1001
  9966  004DA4  0A01               	xorlw	1	; case 9
  9967  004DA6  B4D8               	btfsc	status,2,c
  9968  004DA8  D7C8               	goto	l1011
  9969  004DAA  0A03               	xorlw	3	; case 10
  9970  004DAC  B4D8               	btfsc	status,2,c
  9971  004DAE  D7CB               	goto	l1021
  9972  004DB0  0A01               	xorlw	1	; case 11
  9973  004DB2  B4D8               	btfsc	status,2,c
  9974  004DB4  D7C5               	goto	l1016
  9975  004DB6  D7CA               	goto	l1026
  9976  004DB8                     __end_of_display_led:
  9977                           	callstack 0
  9978                           
  9979 ;; *************** function _cli_read *****************
  9980 ;; Defined at:
  9981 ;;		line 82 in file "scdm.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  a_ctx           2   49[COMRAM] PTR struct _t_cli_ctx
  9984 ;;		 -> cli_ctx(131), 
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;  i               1   12[BANK0 ] unsigned char 
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  1    wreg      void 
  9989 ;; Registers used:
  9990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9997 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9998 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9999 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10000 ;;Total ram usage:        8 bytes
 10001 ;; Hardware stack levels used: 1
 10002 ;; Hardware stack levels required when called: 11
 10003 ;; This function calls:
 10004 ;;		__cli_interpret_cmd
 10005 ;;		_linux_getc
 10006 ;;		_linux_putc
 10007 ;;		_memset
 10008 ;; This function is called by:
 10009 ;;		_main
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013                           	psect	text33
 10014  0042BA                     __ptext33:
 10015                           	callstack 0
 10016  0042BA                     _cli_read:
 10017                           	callstack 19
 10018                           
 10019                           ;scdm.c: 82: void cli_read(t_cli_ctx *a_ctx);scdm.c: 83: {;scdm.c: 84:  uint8_t i = 0x00
      +                          ;
 10020                           
 10021                           ;incstack = 0
 10022  0042BA  0E00               	movlw	0
 10023  0042BC  0100               	movlb	0	; () banked
 10024  0042BE  6F6C               	movwf	cli_read@i& (0+255),b
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;scdm.c: 87:  if (!linux_getc(&i)) {
 10028  0042C0  0E6C               	movlw	low cli_read@i
 10029  0042C2  6E16               	movwf	linux_getc@a_data^0,c
 10030  0042C4  EC6F  F02D         	call	_linux_getc	;wreg free
 10031  0042C8  0900               	iorlw	0
 10032  0042CA  B4D8               	btfsc	status,2,c
 10033  0042CC  0012               	return	
 10034  0042CE  D08A               	goto	l10432
 10035  0042D0                     l10410:
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;scdm.c: 99:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cpo
      +                          s))] = '\0';
 10039  0042D0  EE20 F082          	lfsr	2,130
 10040  0042D4  5032               	movf	cli_read@a_ctx^0,w,c
 10041  0042D6  26D9               	addwf	fsr2l,f,c
 10042  0042D8  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10043  0042DA  22DA               	addwfc	fsr2h,f,c
 10044  0042DC  0E7E               	movlw	126
 10045  0042DE  64DF               	cpfsgt	indf2,c
 10046  0042E0  D00C               	goto	l10414
 10047                           
 10048                           ; BSR set to: 0
 10049  0042E2  EE20 F082          	lfsr	2,130
 10050  0042E6  5032               	movf	cli_read@a_ctx^0,w,c
 10051  0042E8  26D9               	addwf	fsr2l,f,c
 10052  0042EA  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10053  0042EC  22DA               	addwfc	fsr2h,f,c
 10054  0042EE  50DF               	movf	indf2,w,c
 10055  0042F0  6E34               	movwf	??_cli_read^0,c
 10056  0042F2  5034               	movf	??_cli_read^0,w,c
 10057  0042F4  6F6A               	movwf	_cli_read$2073& (0+255),b
 10058  0042F6  6B6B               	clrf	(_cli_read$2073+1)& (0+255),b
 10059  0042F8  D00E               	goto	l1116
 10060  0042FA                     l10414:
 10061                           
 10062                           ; BSR set to: 0
 10063  0042FA  EE20 F082          	lfsr	2,130
 10064  0042FE  5032               	movf	cli_read@a_ctx^0,w,c
 10065  004300  26D9               	addwf	fsr2l,f,c
 10066  004302  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10067  004304  22DA               	addwfc	fsr2h,f,c
 10068  004306  50DF               	movf	indf2,w,c
 10069  004308  6E34               	movwf	??_cli_read^0,c
 10070  00430A  0E01               	movlw	1
 10071  00430C  2434               	addwf	??_cli_read^0,w,c
 10072  00430E  6F6A               	movwf	_cli_read$2073& (0+255),b
 10073  004310  6B6B               	clrf	(_cli_read$2073+1)& (0+255),b
 10074  004312  0E00               	movlw	0
 10075  004314  236B               	addwfc	(_cli_read$2073+1)& (0+255),f,b
 10076  004316                     l1116:
 10077                           
 10078                           ; BSR set to: 0
 10079  004316  516A               	movf	_cli_read$2073& (0+255),w,b
 10080  004318  2432               	addwf	cli_read@a_ctx^0,w,c
 10081  00431A  6E34               	movwf	??_cli_read^0,c
 10082  00431C  516B               	movf	(_cli_read$2073+1)& (0+255),w,b
 10083  00431E  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10084  004320  6E35               	movwf	(??_cli_read+1)^0,c
 10085  004322  0E02               	movlw	2
 10086  004324  2434               	addwf	??_cli_read^0,w,c
 10087  004326  6ED9               	movwf	fsr2l,c
 10088  004328  0E00               	movlw	0
 10089  00432A  2035               	addwfc	(??_cli_read+1)^0,w,c
 10090  00432C  6EDA               	movwf	fsr2h,c
 10091  00432E  0E00               	movlw	0
 10092  004330  6EDF               	movwf	indf2,c
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;scdm.c: 100:   linux_putc((unsigned char *) "\r\n", 2);
 10096  004332  0E69               	movlw	low (STR_5+71)
 10097  004334  6E2C               	movwf	linux_putc@data^0,c
 10098  004336  502C               	movf	linux_putc@data^0,w,c
 10099  004338  A4D8               	btfss	status,2,c
 10100  00433A  0E20               	movlw	high __smallconst
 10101  00433C  6E2D               	movwf	(linux_putc@data+1)^0,c
 10102  00433E  0E02               	movlw	2
 10103  004340  6E2E               	movwf	linux_putc@a_len^0,c
 10104  004342  EC37  F02E         	call	_linux_putc	;wreg free
 10105                           
 10106                           ;scdm.c: 101:   res = _cli_interpret_cmd(a_ctx);
 10107  004346  C032  F02E         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 10108  00434A  C033  F02F         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 10109  00434E  EC1D  F01E         	call	__cli_interpret_cmd	;wreg free
 10110  004352  6E43               	movwf	_res^0,c
 10111                           
 10112                           ;scdm.c: 102:   a_ctx->cpos = 0;
 10113  004354  EE20 F082          	lfsr	2,130
 10114  004358  5032               	movf	cli_read@a_ctx^0,w,c
 10115  00435A  26D9               	addwf	fsr2l,f,c
 10116  00435C  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10117  00435E  22DA               	addwfc	fsr2h,f,c
 10118  004360  0E00               	movlw	0
 10119  004362  6EDF               	movwf	indf2,c
 10120                           
 10121                           ;scdm.c: 103:   memset(a_ctx->cmd, 0x00, 128);
 10122  004364  0E02               	movlw	2
 10123  004366  2432               	addwf	cli_read@a_ctx^0,w,c
 10124  004368  6E15               	movwf	memset@dest^0,c
 10125  00436A  0E00               	movlw	0
 10126  00436C  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10127  00436E  6E16               	movwf	(memset@dest+1)^0,c
 10128  004370  0E00               	movlw	0
 10129  004372  6E18               	movwf	(memset@c+1)^0,c
 10130  004374  0E00               	movlw	0
 10131  004376  6E17               	movwf	memset@c^0,c
 10132  004378  0E00               	movlw	0
 10133  00437A  6E1A               	movwf	(memset@n+1)^0,c
 10134  00437C  0E80               	movlw	128
 10135  00437E  6E19               	movwf	memset@n^0,c
 10136  004380  EC08  F022         	call	_memset	;wreg free
 10137                           
 10138                           ;scdm.c: 104:   break;
 10139  004384  0012               	return	
 10140  004386                     l10424:
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;scdm.c: 107:   if (a_ctx->cpos < (128 - 1)) {
 10144  004386  EE20 F082          	lfsr	2,130
 10145  00438A  5032               	movf	cli_read@a_ctx^0,w,c
 10146  00438C  26D9               	addwf	fsr2l,f,c
 10147  00438E  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10148  004390  22DA               	addwfc	fsr2h,f,c
 10149  004392  0E7F               	movlw	127
 10150  004394  60DF               	cpfslt	indf2,c
 10151  004396  0012               	return	
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;scdm.c: 108:    a_ctx->cmd[a_ctx->cpos++] = i;
 10155  004398  EE20 F082          	lfsr	2,130
 10156  00439C  5032               	movf	cli_read@a_ctx^0,w,c
 10157  00439E  26D9               	addwf	fsr2l,f,c
 10158  0043A0  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10159  0043A2  22DA               	addwfc	fsr2h,f,c
 10160  0043A4  50DF               	movf	indf2,w,c
 10161  0043A6  6E34               	movwf	??_cli_read^0,c
 10162  0043A8  5034               	movf	??_cli_read^0,w,c
 10163  0043AA  2432               	addwf	cli_read@a_ctx^0,w,c
 10164  0043AC  6E35               	movwf	(??_cli_read+1)^0,c
 10165  0043AE  0E00               	movlw	0
 10166  0043B0  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10167  0043B2  6E36               	movwf	(??_cli_read+2)^0,c
 10168  0043B4  0E02               	movlw	2
 10169  0043B6  2435               	addwf	(??_cli_read+1)^0,w,c
 10170  0043B8  6ED9               	movwf	fsr2l,c
 10171  0043BA  0E00               	movlw	0
 10172  0043BC  2036               	addwfc	(??_cli_read+2)^0,w,c
 10173  0043BE  6EDA               	movwf	fsr2h,c
 10174  0043C0  0060  F1B3  FFDF   	movff	cli_read@i,indf2
 10175  0043C6  EE20 F082          	lfsr	2,130
 10176  0043CA  5032               	movf	cli_read@a_ctx^0,w,c
 10177  0043CC  26D9               	addwf	fsr2l,f,c
 10178  0043CE  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10179  0043D0  22DA               	addwfc	fsr2h,f,c
 10180  0043D2  2ADF               	incf	indf2,f,c
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;scdm.c: 109:    linux_putc(&i, 1);
 10184  0043D4  0E6C               	movlw	low cli_read@i
 10185  0043D6  6E2C               	movwf	linux_putc@data^0,c
 10186  0043D8  6A2D               	clrf	(linux_putc@data+1)^0,c
 10187  0043DA  0E01               	movlw	1
 10188  0043DC  6E2E               	movwf	linux_putc@a_len^0,c
 10189  0043DE  EC37  F02E         	call	_linux_putc	;wreg free
 10190  0043E2  0012               	return	
 10191  0043E4                     l10432:
 10192  0043E4  0100               	movlb	0	; () banked
 10193  0043E6  516C               	movf	cli_read@i& (0+255),w,b
 10194  0043E8  6E34               	movwf	??_cli_read^0,c
 10195  0043EA  6A35               	clrf	(??_cli_read+1)^0,c
 10196                           
 10197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10198                           ; Switch size 1, requested type "simple"
 10199                           ; Number of cases is 1, Range of values is 0 to 0
 10200                           ; switch strategies available:
 10201                           ; Name         Instructions Cycles
 10202                           ; simple_byte            4     3 (average)
 10203                           ;	Chosen strategy is simple_byte
 10204  0043EC  5035               	movf	(??_cli_read+1)^0,w,c
 10205  0043EE  0A00               	xorlw	0	; case 0
 10206  0043F0  A4D8               	btfss	status,2,c
 10207  0043F2  D7C9               	goto	l10424
 10208                           
 10209                           ; BSR set to: 0
 10210                           ; Switch size 1, requested type "simple"
 10211                           ; Number of cases is 4, Range of values is 13 to 127
 10212                           ; switch strategies available:
 10213                           ; Name         Instructions Cycles
 10214                           ; simple_byte           13     7 (average)
 10215                           ;	Chosen strategy is simple_byte
 10216  0043F4  5034               	movf	??_cli_read^0,w,c
 10217  0043F6  0A0D               	xorlw	13	; case 13
 10218  0043F8  B4D8               	btfsc	status,2,c
 10219  0043FA  D76A               	goto	l10410
 10220  0043FC  0A16               	xorlw	22	; case 27
 10221  0043FE  B4D8               	btfsc	status,2,c
 10222  004400  0012               	return	
 10223  004402  0A65               	xorlw	101	; case 126
 10224  004404  B4D8               	btfsc	status,2,c
 10225  004406  0012               	return	
 10226  004408  0A01               	xorlw	1	; case 127
 10227  00440A  B4D8               	btfsc	status,2,c
 10228  00440C  0012               	return		;funcret
 10229  00440E  D7BB               	goto	l10424
 10230  004410                     __end_of_cli_read:
 10231                           	callstack 0
 10232                           
 10233 ;; *************** function _memset *****************
 10234 ;; Defined at:
 10235 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  dest            2   20[COMRAM] PTR void 
 10238 ;;		 -> cli_ctx(131), 
 10239 ;;  c               2   22[COMRAM] int 
 10240 ;;  n               2   24[COMRAM] unsigned int 
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;  s               2   30[COMRAM] PTR unsigned char 
 10243 ;;		 -> cli_ctx(131), 
 10244 ;;  k               2   28[COMRAM] unsigned int 
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  2   20[COMRAM] PTR void 
 10247 ;; Registers used:
 10248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/2
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10254 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10255 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10257 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10258 ;;Total ram usage:       12 bytes
 10259 ;; Hardware stack levels used: 1
 10260 ;; Hardware stack levels required when called: 4
 10261 ;; This function calls:
 10262 ;;		Nothing
 10263 ;; This function is called by:
 10264 ;;		_cli_init
 10265 ;;		_cli_read
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text34
 10270  004410                     __ptext34:
 10271                           	callstack 0
 10272  004410                     _memset:
 10273                           	callstack 24
 10274                           
 10275                           ;incstack = 0
 10276  004410  C015  F01F         	movff	memset@dest,memset@s
 10277  004414  C016  F020         	movff	memset@dest+1,memset@s+1
 10278  004418  5019               	movf	memset@n^0,w,c
 10279  00441A  101A               	iorwf	(memset@n+1)^0,w,c
 10280  00441C  B4D8               	btfsc	status,2,c
 10281  00441E  0012               	return	
 10282  004420  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10283  004426  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10284  00442C  0060  F05F  FFDF   	movff	memset@c,indf2
 10285  004432  5019               	movf	memset@n^0,w,c
 10286  004434  241F               	addwf	memset@s^0,w,c
 10287  004436  6E1B               	movwf	??_memset^0,c
 10288  004438  501A               	movf	(memset@n+1)^0,w,c
 10289  00443A  2020               	addwfc	(memset@s+1)^0,w,c
 10290  00443C  6E1C               	movwf	(??_memset+1)^0,c
 10291  00443E  0EFF               	movlw	255
 10292  004440  241B               	addwf	??_memset^0,w,c
 10293  004442  6ED9               	movwf	fsr2l,c
 10294  004444  0EFF               	movlw	255
 10295  004446  201C               	addwfc	(??_memset+1)^0,w,c
 10296  004448  6EDA               	movwf	fsr2h,c
 10297  00444A  0060  F05F  FFDF   	movff	memset@c,indf2
 10298  004450  501A               	movf	(memset@n+1)^0,w,c
 10299  004452  E104               	bnz	l10150
 10300  004454  0E03               	movlw	3
 10301  004456  5C19               	subwf	memset@n^0,w,c
 10302  004458  A0D8               	btfss	status,0,c
 10303  00445A  0012               	return	
 10304  00445C                     l10150:
 10305  00445C  EE20 F001          	lfsr	2,1
 10306  004460  501F               	movf	memset@s^0,w,c
 10307  004462  26D9               	addwf	fsr2l,f,c
 10308  004464  5020               	movf	(memset@s+1)^0,w,c
 10309  004466  22DA               	addwfc	fsr2h,f,c
 10310  004468  0060  F05F  FFDF   	movff	memset@c,indf2
 10311  00446E  EE20 F002          	lfsr	2,2
 10312  004472  501F               	movf	memset@s^0,w,c
 10313  004474  26D9               	addwf	fsr2l,f,c
 10314  004476  5020               	movf	(memset@s+1)^0,w,c
 10315  004478  22DA               	addwfc	fsr2h,f,c
 10316  00447A  0060  F05F  FFDF   	movff	memset@c,indf2
 10317  004480  5019               	movf	memset@n^0,w,c
 10318  004482  241F               	addwf	memset@s^0,w,c
 10319  004484  6E1B               	movwf	??_memset^0,c
 10320  004486  501A               	movf	(memset@n+1)^0,w,c
 10321  004488  2020               	addwfc	(memset@s+1)^0,w,c
 10322  00448A  6E1C               	movwf	(??_memset+1)^0,c
 10323  00448C  0EFE               	movlw	254
 10324  00448E  241B               	addwf	??_memset^0,w,c
 10325  004490  6ED9               	movwf	fsr2l,c
 10326  004492  0EFF               	movlw	255
 10327  004494  201C               	addwfc	(??_memset+1)^0,w,c
 10328  004496  6EDA               	movwf	fsr2h,c
 10329  004498  0060  F05F  FFDF   	movff	memset@c,indf2
 10330  00449E  5019               	movf	memset@n^0,w,c
 10331  0044A0  241F               	addwf	memset@s^0,w,c
 10332  0044A2  6E1B               	movwf	??_memset^0,c
 10333  0044A4  501A               	movf	(memset@n+1)^0,w,c
 10334  0044A6  2020               	addwfc	(memset@s+1)^0,w,c
 10335  0044A8  6E1C               	movwf	(??_memset+1)^0,c
 10336  0044AA  0EFD               	movlw	253
 10337  0044AC  241B               	addwf	??_memset^0,w,c
 10338  0044AE  6ED9               	movwf	fsr2l,c
 10339  0044B0  0EFF               	movlw	255
 10340  0044B2  201C               	addwfc	(??_memset+1)^0,w,c
 10341  0044B4  6EDA               	movwf	fsr2h,c
 10342  0044B6  0060  F05F  FFDF   	movff	memset@c,indf2
 10343  0044BC  501A               	movf	(memset@n+1)^0,w,c
 10344  0044BE  E104               	bnz	l10156
 10345  0044C0  0E07               	movlw	7
 10346  0044C2  5C19               	subwf	memset@n^0,w,c
 10347  0044C4  A0D8               	btfss	status,0,c
 10348  0044C6  0012               	return	
 10349  0044C8                     l10156:
 10350  0044C8  EE20 F003          	lfsr	2,3
 10351  0044CC  501F               	movf	memset@s^0,w,c
 10352  0044CE  26D9               	addwf	fsr2l,f,c
 10353  0044D0  5020               	movf	(memset@s+1)^0,w,c
 10354  0044D2  22DA               	addwfc	fsr2h,f,c
 10355  0044D4  0060  F05F  FFDF   	movff	memset@c,indf2
 10356  0044DA  5019               	movf	memset@n^0,w,c
 10357  0044DC  241F               	addwf	memset@s^0,w,c
 10358  0044DE  6E1B               	movwf	??_memset^0,c
 10359  0044E0  501A               	movf	(memset@n+1)^0,w,c
 10360  0044E2  2020               	addwfc	(memset@s+1)^0,w,c
 10361  0044E4  6E1C               	movwf	(??_memset+1)^0,c
 10362  0044E6  0EFC               	movlw	252
 10363  0044E8  241B               	addwf	??_memset^0,w,c
 10364  0044EA  6ED9               	movwf	fsr2l,c
 10365  0044EC  0EFF               	movlw	255
 10366  0044EE  201C               	addwfc	(??_memset+1)^0,w,c
 10367  0044F0  6EDA               	movwf	fsr2h,c
 10368  0044F2  0060  F05F  FFDF   	movff	memset@c,indf2
 10369  0044F8  501A               	movf	(memset@n+1)^0,w,c
 10370  0044FA  E104               	bnz	l10162
 10371  0044FC  0E09               	movlw	9
 10372  0044FE  5C19               	subwf	memset@n^0,w,c
 10373  004500  A0D8               	btfss	status,0,c
 10374  004502  0012               	return	
 10375  004504                     l10162:
 10376  004504  C01F  F01B         	movff	memset@s,??_memset
 10377  004508  C020  F01C         	movff	memset@s+1,??_memset+1
 10378  00450C  1E1B               	comf	??_memset^0,f,c
 10379  00450E  1E1C               	comf	(??_memset+1)^0,f,c
 10380  004510  4A1B               	infsnz	??_memset^0,f,c
 10381  004512  2A1C               	incf	(??_memset+1)^0,f,c
 10382  004514  0E03               	movlw	3
 10383  004516  141B               	andwf	??_memset^0,w,c
 10384  004518  6E1D               	movwf	memset@k^0,c
 10385  00451A  6A1E               	clrf	(memset@k+1)^0,c
 10386  00451C  501D               	movf	memset@k^0,w,c
 10387  00451E  261F               	addwf	memset@s^0,f,c
 10388  004520  501E               	movf	(memset@k+1)^0,w,c
 10389  004522  2220               	addwfc	(memset@s+1)^0,f,c
 10390  004524  501D               	movf	memset@k^0,w,c
 10391  004526  5E19               	subwf	memset@n^0,f,c
 10392  004528  501E               	movf	(memset@k+1)^0,w,c
 10393  00452A  5A1A               	subwfb	(memset@n+1)^0,f,c
 10394  00452C  0EFC               	movlw	252
 10395  00452E  1619               	andwf	memset@n^0,f,c
 10396  004530  0EFF               	movlw	255
 10397  004532  161A               	andwf	(memset@n+1)^0,f,c
 10398  004534  D00E               	goto	l10170
 10399  004536                     l10164:
 10400  004536  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10401  00453C  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10402  004542  0060  F05F  FFDF   	movff	memset@c,indf2
 10403  004548  0619               	decf	memset@n^0,f,c
 10404  00454A  A0D8               	btfss	status,0,c
 10405  00454C  061A               	decf	(memset@n+1)^0,f,c
 10406  00454E  4A1F               	infsnz	memset@s^0,f,c
 10407  004550  2A20               	incf	(memset@s+1)^0,f,c
 10408  004552                     l10170:
 10409  004552  5019               	movf	memset@n^0,w,c
 10410  004554  101A               	iorwf	(memset@n+1)^0,w,c
 10411  004556  B4D8               	btfsc	status,2,c
 10412  004558  0012               	return	
 10413  00455A  D7ED               	goto	l10164
 10414  00455C                     __end_of_memset:
 10415                           	callstack 0
 10416                           
 10417 ;; *************** function _linux_putc *****************
 10418 ;; Defined at:
 10419 ;;		line 47 in file "scdm.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  data            2   43[COMRAM] PTR unsigned char 
 10422 ;;		 -> STR_10(3), cli_read@i(1), 
 10423 ;;  a_len           1   45[COMRAM] unsigned char 
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;		None
 10426 ;; Return value:  Size  Location     Type
 10427 ;;                  1    wreg      unsigned char 
 10428 ;; Registers used:
 10429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10430 ;; Tracked objects:
 10431 ;;		On entry : 0/0
 10432 ;;		On exit  : 0/0
 10433 ;;		Unchanged: 0/0
 10434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10435 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10438 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10439 ;;Total ram usage:        3 bytes
 10440 ;; Hardware stack levels used: 1
 10441 ;; Hardware stack levels required when called: 9
 10442 ;; This function calls:
 10443 ;;		_puts
 10444 ;; This function is called by:
 10445 ;;		_cli_read
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           	psect	text35
 10450  005C6E                     __ptext35:
 10451                           	callstack 0
 10452  005C6E                     _linux_putc:
 10453                           	callstack 20
 10454                           
 10455                           ;scdm.c: 47: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 48: {;scdm.c: 49: 
      +                           puts((const char *) data);
 10456                           
 10457                           ;incstack = 0
 10458  005C6E  C02C  F029         	movff	linux_putc@data,puts@s
 10459  005C72  C02D  F02A         	movff	linux_putc@data+1,puts@s+1
 10460  005C76  EC7A  F02C         	call	_puts	;wreg free
 10461  005C7A  0012               	return		;funcret
 10462  005C7C                     __end_of_linux_putc:
 10463                           	callstack 0
 10464                           
 10465 ;; *************** function _linux_getc *****************
 10466 ;; Defined at:
 10467 ;;		line 37 in file "scdm.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;  a_data          1   21[COMRAM] PTR unsigned char 
 10470 ;;		 -> cli_read@i(1), 
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;		None
 10473 ;; Return value:  Size  Location     Type
 10474 ;;                  1    wreg      unsigned char 
 10475 ;; Registers used:
 10476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10477 ;; Tracked objects:
 10478 ;;		On entry : 3F/0
 10479 ;;		On exit  : 6/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10482 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10485 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10486 ;;Total ram usage:        2 bytes
 10487 ;; Hardware stack levels used: 1
 10488 ;; Hardware stack levels required when called: 5
 10489 ;; This function calls:
 10490 ;;		_UART1_Read
 10491 ;;		_UART1_is_rx_ready
 10492 ;; This function is called by:
 10493 ;;		_cli_read
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           	psect	text36
 10498  005ADE                     __ptext36:
 10499                           	callstack 0
 10500  005ADE                     _linux_getc:
 10501                           	callstack 24
 10502                           
 10503                           ; BSR set to: 0
 10504                           ;scdm.c: 37: uint8_t linux_getc(uint8_t *a_data);scdm.c: 38: {;scdm.c: 39:  if (UART1_is
      +                          _rx_ready()) {
 10505                           
 10506                           ;incstack = 0
 10507  005ADE  EC3E  F02E         	call	_UART1_is_rx_ready	;wreg free
 10508  005AE2  0900               	iorlw	0
 10509  005AE4  B4D8               	btfsc	status,2,c
 10510  005AE6  D00B               	goto	l10334
 10511                           
 10512                           ; BSR set to: 0
 10513                           ;scdm.c: 40:   a_data[0] = UART1_Read();
 10514  005AE8  ECE0  F02B         	call	_UART1_Read	;wreg free
 10515  005AEC  6E17               	movwf	??_linux_getc^0,c
 10516  005AEE  5016               	movf	linux_getc@a_data^0,w,c
 10517  005AF0  6ED9               	movwf	fsr2l,c
 10518  005AF2  6ADA               	clrf	fsr2h,c
 10519  005AF4  0060  F05F  FFDF   	movff	??_linux_getc,indf2
 10520                           
 10521                           ; BSR set to: 57
 10522                           ;scdm.c: 41:   return 1;
 10523  005AFA  0E01               	movlw	1
 10524  005AFC  0012               	return	
 10525  005AFE                     l10334:
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;scdm.c: 43:   return 0;
 10529  005AFE  0E00               	movlw	0
 10530  005B00  0012               	return		;funcret
 10531  005B02                     __end_of_linux_getc:
 10532                           	callstack 0
 10533                           
 10534 ;; *************** function _UART1_is_rx_ready *****************
 10535 ;; Defined at:
 10536 ;;		line 161 in file "mcc_generated_files/uart1.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;		None
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;		None
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      _Bool 
 10543 ;; Registers used:
 10544 ;;		wreg, status,2
 10545 ;; Tracked objects:
 10546 ;;		On entry : 3F/0
 10547 ;;		On exit  : 3F/0
 10548 ;;		Unchanged: 3F/0
 10549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10554 ;;Total ram usage:        0 bytes
 10555 ;; Hardware stack levels used: 1
 10556 ;; Hardware stack levels required when called: 4
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_linux_getc
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564                           	psect	text37
 10565  005C7C                     __ptext37:
 10566                           	callstack 0
 10567  005C7C                     _UART1_is_rx_ready:
 10568                           	callstack 24
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;mcc_generated_files/uart1.c: 163:     return (uart1RxCount ? 1 : 0);
 10572                           
 10573                           ;incstack = 0
 10574  005C7C  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10575  005C7E  B4D8               	btfsc	status,2,c
 10576  005C80  D002               	goto	u11990
 10577  005C82  0E01               	movlw	1
 10578  005C84  0012               	return	
 10579  005C86                     u11990:
 10580  005C86  0E00               	movlw	0
 10581                           
 10582                           ; BSR set to: 0
 10583  005C88  0012               	return		;funcret
 10584  005C8A                     __end_of_UART1_is_rx_ready:
 10585                           	callstack 0
 10586                           
 10587 ;; *************** function _UART1_Read *****************
 10588 ;; Defined at:
 10589 ;;		line 180 in file "mcc_generated_files/uart1.c"
 10590 ;; Parameters:    Size  Location     Type
 10591 ;;		None
 10592 ;; Auto vars:     Size  Location     Type
 10593 ;;  readValue       1   20[COMRAM] unsigned char 
 10594 ;; Return value:  Size  Location     Type
 10595 ;;                  1    wreg      unsigned char 
 10596 ;; Registers used:
 10597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10598 ;; Tracked objects:
 10599 ;;		On entry : 3F/0
 10600 ;;		On exit  : 3F/39
 10601 ;;		Unchanged: 0/0
 10602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10607 ;;Total ram usage:        1 bytes
 10608 ;; Hardware stack levels used: 1
 10609 ;; Hardware stack levels required when called: 4
 10610 ;; This function calls:
 10611 ;;		Nothing
 10612 ;; This function is called by:
 10613 ;;		_linux_getc
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           	psect	text38
 10618  0057C0                     __ptext38:
 10619                           	callstack 0
 10620  0057C0                     _UART1_Read:
 10621                           	callstack 24
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10628                           
 10629                           ; BSR set to: 0
 10630                           ;incstack = 0
 10631  0057C0  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10632  0057C2  B4D8               	btfsc	status,2,c
 10633  0057C4  D7FD               	goto	__ptext38
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;mcc_generated_files/uart1.c: 188:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10637  0057C6  0E00               	movlw	low _uart1RxStatusBuffer
 10638  0057C8  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10639  0057CA  6ED9               	movwf	fsr2l,c
 10640  0057CC  6ADA               	clrf	fsr2h,c
 10641  0057CE  0E01               	movlw	high _uart1RxStatusBuffer
 10642  0057D0  22DA               	addwfc	fsr2h,f,c
 10643  0057D2  50DF               	movf	indf2,w,c
 10644  0057D4  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 10645                           
 10646                           ;mcc_generated_files/uart1.c: 190:     readValue = uart1RxBuffer[uart1RxTail++];
 10647  0057D6  0E00               	movlw	low _uart1RxBuffer
 10648  0057D8  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10649  0057DA  6ED9               	movwf	fsr2l,c
 10650  0057DC  6ADA               	clrf	fsr2h,c
 10651  0057DE  0E02               	movlw	high _uart1RxBuffer
 10652  0057E0  22DA               	addwfc	fsr2h,f,c
 10653  0057E2  50DF               	movf	indf2,w,c
 10654  0057E4  6E15               	movwf	UART1_Read@readValue^0,c
 10655                           
 10656                           ; BSR set to: 0
 10657  0057E6  2A47               	incf	_uart1RxTail^0,f,c	;volatile
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;mcc_generated_files/uart1.c: 191:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10661  0057E8  0E3F               	movlw	63
 10662  0057EA  6447               	cpfsgt	_uart1RxTail^0,c
 10663  0057EC  D002               	goto	l10122
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;mcc_generated_files/uart1.c: 192:     {;mcc_generated_files/uart1.c: 193:         uart1
      +                          RxTail = 0;
 10667  0057EE  0E00               	movlw	0
 10668  0057F0  6E47               	movwf	_uart1RxTail^0,c	;volatile
 10669  0057F2                     l10122:
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;mcc_generated_files/uart1.c: 195:     PIE3bits.U1RXIE = 0;
 10673  0057F2  0139               	movlb	57	; () banked
 10674  0057F4  9793               	bcf	147,3,b	;volatile
 10675                           
 10676                           ; BSR set to: 57
 10677                           ;mcc_generated_files/uart1.c: 196:     uart1RxCount--;
 10678  0057F6  0646               	decf	_uart1RxCount^0,f,c	;volatile
 10679                           
 10680                           ; BSR set to: 57
 10681                           ;mcc_generated_files/uart1.c: 197:     PIE3bits.U1RXIE = 1;
 10682  0057F8  8793               	bsf	147,3,b	;volatile
 10683                           
 10684                           ; BSR set to: 57
 10685                           ;mcc_generated_files/uart1.c: 199:     return readValue;
 10686  0057FA  5015               	movf	UART1_Read@readValue^0,w,c
 10687                           
 10688                           ; BSR set to: 57
 10689  0057FC  0012               	return		;funcret
 10690  0057FE                     __end_of_UART1_Read:
 10691                           	callstack 0
 10692                           
 10693 ;; *************** function __cli_interpret_cmd *****************
 10694 ;; Defined at:
 10695 ;;		line 53 in file "scdm.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;  a_ctx           2   45[COMRAM] PTR struct _t_cli_ctx
 10698 ;;		 -> cli_ctx(131), 
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;  i               1   48[COMRAM] unsigned char 
 10701 ;;  ret             1   47[COMRAM] unsigned char 
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      unsigned char 
 10704 ;; Registers used:
 10705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10713 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10714 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10715 ;;Total ram usage:       14 bytes
 10716 ;; Hardware stack levels used: 1
 10717 ;; Hardware stack levels required when called: 10
 10718 ;; This function calls:
 10719 ;;		Absolute function
 10720 ;;		_fh_hi
 10721 ;;		_fh_ho
 10722 ;;		_fh_hw
 10723 ;;		_strlen
 10724 ;;		_strncmp
 10725 ;; This function is called by:
 10726 ;;		_cli_read
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text39
 10731  003C3A                     __ptext39:
 10732                           	callstack 0
 10733  003C3A                     __cli_interpret_cmd:
 10734                           	callstack 19
 10735                           
 10736                           ;scdm.c: 53: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 54: {;scdm.c: 5
      +                          5:  uint8_t i = 0;
 10737                           
 10738                           ; BSR set to: 57
 10739                           ;incstack = 0
 10740  003C3A  0E00               	movlw	0
 10741  003C3C  6E31               	movwf	__cli_interpret_cmd@i^0,c
 10742                           
 10743                           ;scdm.c: 56:  uint8_t ret = E_CMD_OK;
 10744  003C3E  0E00               	movlw	0
 10745  003C40  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 10746                           
 10747                           ;scdm.c: 58:  if (!strlen(a_ctx->cmd)) {
 10748  003C42  0E02               	movlw	2
 10749  003C44  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10750  003C46  6E15               	movwf	strlen@s^0,c
 10751  003C48  0E00               	movlw	0
 10752  003C4A  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10753  003C4C  6E16               	movwf	(strlen@s+1)^0,c
 10754  003C4E  EC11  F02B         	call	_strlen	;wreg free
 10755  003C52  5015               	movf	?_strlen^0,w,c
 10756  003C54  1016               	iorwf	(?_strlen+1)^0,w,c
 10757  003C56  A4D8               	btfss	status,2,c
 10758  003C58  D002               	goto	l10350
 10759                           
 10760                           ;scdm.c: 59:   return E_CMD_EMPTY;
 10761  003C5A  0E03               	movlw	3
 10762  003C5C  0012               	return	
 10763  003C5E                     l10350:
 10764                           
 10765                           ;scdm.c: 62:  if (strlen(a_ctx->cmd) < 2) {
 10766  003C5E  0E02               	movlw	2
 10767  003C60  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10768  003C62  6E15               	movwf	strlen@s^0,c
 10769  003C64  0E00               	movlw	0
 10770  003C66  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10771  003C68  6E16               	movwf	(strlen@s+1)^0,c
 10772  003C6A  EC11  F02B         	call	_strlen	;wreg free
 10773  003C6E  5016               	movf	(?_strlen+1)^0,w,c
 10774  003C70  E103               	bnz	u12121
 10775  003C72  0E02               	movlw	2
 10776  003C74  5C15               	subwf	?_strlen^0,w,c
 10777  003C76  B0D8               	btfsc	status,0,c
 10778  003C78                     u12121:
 10779  003C78  D082               	goto	l10362
 10780                           
 10781                           ;scdm.c: 63:   return E_CMD_TOO_SHORT;
 10782  003C7A  0E02               	movlw	2
 10783  003C7C  0012               	return	
 10784  003C7E                     l10356:
 10785                           
 10786                           ; BSR set to: 0
 10787                           ;scdm.c: 67:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 10788  003C7E  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10789  003C80  0D04               	mullw	4
 10790  003C82  006F FFCC  F060    	movff	prodl,??__cli_interpret_cmd
 10791  003C88  006F FFD0  F061    	movff	prodh,??__cli_interpret_cmd+1
 10792  003C8E  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10793  003C94  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10794  003C9A  006F FF78  F062    	movff	postinc2,??__cli_interpret_cmd+2
 10795  003CA0  006F FF74  F063    	movff	postdec2,??__cli_interpret_cmd+3
 10796  003CA6  5160               	movf	??__cli_interpret_cmd& (0+255),w,b
 10797  003CA8  2562               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 10798  003CAA  6ED9               	movwf	fsr2l,c
 10799  003CAC  5161               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 10800  003CAE  2163               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 10801  003CB0  6EDA               	movwf	fsr2h,c
 10802  003CB2  50DF               	movf	indf2,w,c
 10803  003CB4  6F64               	movwf	(??__cli_interpret_cmd+4)& (0+255),b
 10804  003CB6  C064  F019         	movff	??__cli_interpret_cmd+4,strncmp@_l
 10805  003CBA  5019               	movf	strncmp@_l^0,w,c
 10806  003CBC  A4D8               	btfss	status,2,c
 10807  003CBE  0E20               	movlw	high __smallconst
 10808  003CC0  6E1A               	movwf	(strncmp@_l+1)^0,c
 10809  003CC2  0E02               	movlw	2
 10810  003CC4  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10811  003CC6  6E1B               	movwf	strncmp@_r^0,c
 10812  003CC8  0E00               	movlw	0
 10813  003CCA  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10814  003CCC  6E1C               	movwf	(strncmp@_r+1)^0,c
 10815  003CCE  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10816  003CD0  0D04               	mullw	4
 10817  003CD2  006F FFCC  F065    	movff	prodl,??__cli_interpret_cmd+5
 10818  003CD8  006F FFD0  F066    	movff	prodh,??__cli_interpret_cmd+6
 10819  003CDE  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10820  003CE4  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10821  003CEA  006F FF78  F067    	movff	postinc2,??__cli_interpret_cmd+7
 10822  003CF0  006F FF74  F068    	movff	postdec2,??__cli_interpret_cmd+8
 10823  003CF6  5165               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 10824  003CF8  2567               	addwf	(??__cli_interpret_cmd+7)& (0+255),w,b
 10825  003CFA  6ED9               	movwf	fsr2l,c
 10826  003CFC  5166               	movf	(??__cli_interpret_cmd+6)& (0+255),w,b
 10827  003CFE  2168               	addwfc	(??__cli_interpret_cmd+8)& (0+255),w,b
 10828  003D00  6EDA               	movwf	fsr2h,c
 10829  003D02  50DF               	movf	indf2,w,c
 10830  003D04  6F69               	movwf	(??__cli_interpret_cmd+9)& (0+255),b
 10831  003D06  C069  F015         	movff	??__cli_interpret_cmd+9,strlen@s
 10832  003D0A  5015               	movf	strlen@s^0,w,c
 10833  003D0C  A4D8               	btfss	status,2,c
 10834  003D0E  0E20               	movlw	high __smallconst
 10835  003D10  6E16               	movwf	(strlen@s+1)^0,c
 10836  003D12  EC11  F02B         	call	_strlen	;wreg free
 10837  003D16  C015  F01D         	movff	?_strlen,strncmp@n
 10838  003D1A  C016  F01E         	movff	?_strlen+1,strncmp@n+1
 10839  003D1E  ECAC  F020         	call	_strncmp	;wreg free
 10840  003D22  5019               	movf	?_strncmp^0,w,c
 10841  003D24  101A               	iorwf	(?_strncmp+1)^0,w,c
 10842  003D26  A4D8               	btfss	status,2,c
 10843  003D28  D029               	goto	l10360
 10844                           
 10845                           ;scdm.c: 69:    a_ctx->cmds[i].fh((void *) a_ctx);
 10846  003D2A  C02E  F02C         	movff	__cli_interpret_cmd@a_ctx,fh_ho@a_data
 10847  003D2E  C02F  F02D         	movff	__cli_interpret_cmd@a_ctx+1,fh_ho@a_data+1
 10848  003D32  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10849  003D34  0D04               	mullw	4
 10850  003D36  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10851  003D3C  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10852  003D42  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10853  003D48  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10854  003D4E  50F3               	movf	243,w,c
 10855  003D50  0100               	movlb	0	; () banked
 10856  003D52  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10857  003D54  50F4               	movf	244,w,c
 10858  003D56  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10859  003D58  0E01               	movlw	1
 10860  003D5A  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10861  003D5C  6ED9               	movwf	fsr2l,c
 10862  003D5E  0E00               	movlw	0
 10863  003D60  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10864  003D62  6EDA               	movwf	fsr2h,c
 10865  003D64  D801               	call	u12148
 10866  003D66  D029               	goto	u12150
 10867  003D68                     u12148:
 10868  003D68  0005               	push	
 10869  003D6A  6EFA               	movwf	pclath,c
 10870  003D6C  50DE               	movf	postinc2,w,c
 10871  003D6E  6EFD               	movwf	tosl,c
 10872  003D70  50DE               	movf	postinc2,w,c
 10873  003D72  6EFE               	movwf	tosh,c
 10874  003D74  50DE               	movf	postinc2,w,c
 10875  003D76  6EFF               	movwf	tosu,c
 10876  003D78  50FA               	movf	pclath,w,c
 10877  003D7A  0012               	return		;indir
 10878  003D7C                     l10360:
 10879                           
 10880                           ;scdm.c: 72:   i++;
 10881  003D7C  2A31               	incf	__cli_interpret_cmd@i^0,f,c
 10882  003D7E                     l10362:
 10883                           
 10884                           ;scdm.c: 66:  while (a_ctx->cmds[i].fh) {
 10885  003D7E  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10886  003D80  0D04               	mullw	4
 10887  003D82  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10888  003D88  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10889  003D8E  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10890  003D94  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10891  003D9A  50F3               	movf	243,w,c
 10892  003D9C  0100               	movlb	0	; () banked
 10893  003D9E  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10894  003DA0  50F4               	movf	244,w,c
 10895  003DA2  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10896  003DA4  0E01               	movlw	1
 10897  003DA6  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10898  003DA8  6ED9               	movwf	fsr2l,c
 10899  003DAA  0E00               	movlw	0
 10900  003DAC  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10901  003DAE  6EDA               	movwf	fsr2h,c
 10902  003DB0  50DE               	movf	postinc2,w,c
 10903  003DB2  10DE               	iorwf	postinc2,w,c
 10904  003DB4  10DE               	iorwf	postinc2,w,c
 10905  003DB6  A4D8               	btfss	status,2,c
 10906  003DB8  D762               	goto	l10356
 10907  003DBA                     u12150:
 10908                           
 10909                           ;scdm.c: 75:  if (!a_ctx->cmds[i].fh) {
 10910  003DBA  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10911  003DBC  0D04               	mullw	4
 10912  003DBE  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10913  003DC4  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10914  003DCA  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10915  003DD0  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10916  003DD6  50F3               	movf	243,w,c
 10917  003DD8  0100               	movlb	0	; () banked
 10918  003DDA  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10919  003DDC  50F4               	movf	244,w,c
 10920  003DDE  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10921  003DE0  0E01               	movlw	1
 10922  003DE2  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10923  003DE4  6ED9               	movwf	fsr2l,c
 10924  003DE6  0E00               	movlw	0
 10925  003DE8  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10926  003DEA  6EDA               	movwf	fsr2h,c
 10927  003DEC  50DE               	movf	postinc2,w,c
 10928  003DEE  10DE               	iorwf	postinc2,w,c
 10929  003DF0  10DE               	iorwf	postinc2,w,c
 10930  003DF2  A4D8               	btfss	status,2,c
 10931  003DF4  D002               	goto	l1102
 10932                           
 10933                           ; BSR set to: 0
 10934                           ;scdm.c: 76:   ret = E_CMD_NOT_FOUND;
 10935  003DF6  0E01               	movlw	1
 10936  003DF8  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 10937  003DFA                     l1102:
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;scdm.c: 79:  return ret;
 10941  003DFA  5030               	movf	__cli_interpret_cmd@ret^0,w,c
 10942  003DFC  0012               	return		;funcret
 10943  003DFE                     __end_of__cli_interpret_cmd:
 10944                           	callstack 0
 10945                           
 10946 ;; *************** function _strncmp *****************
 10947 ;; Defined at:
 10948 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;  _l              2   24[COMRAM] PTR const unsigned char 
 10951 ;;		 -> vfpfcnvrt@ct(3), STR_9(21), NULL(0), STR_8(3), 
 10952 ;;		 -> STR_7(3), STR_6(3), STR_5(74), 
 10953 ;;  _r              2   26[COMRAM] PTR const unsigned char 
 10954 ;;		 -> cli_ctx.cmd(128), STR_26(4), STR_21(3), cli_ctx(131), 
 10955 ;;  n               2   28[COMRAM] unsigned int 
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;  r               2   34[COMRAM] PTR const unsigned char 
 10958 ;;		 -> cli_ctx.cmd(128), STR_26(4), STR_21(3), cli_ctx(131), 
 10959 ;;  l               2   32[COMRAM] PTR const unsigned char 
 10960 ;;		 -> vfpfcnvrt@ct(3), STR_9(21), NULL(0), STR_8(3), 
 10961 ;;		 -> STR_7(3), STR_6(3), STR_5(74), 
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  2   24[COMRAM] int 
 10964 ;; Registers used:
 10965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/0
 10968 ;;		On exit  : 0/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10971 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10972 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10974 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10975 ;;Total ram usage:       12 bytes
 10976 ;; Hardware stack levels used: 1
 10977 ;; Hardware stack levels required when called: 4
 10978 ;; This function calls:
 10979 ;;		Nothing
 10980 ;; This function is called by:
 10981 ;;		__cli_interpret_cmd
 10982 ;;		_vfpfcnvrt
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           
 10986                           	psect	text40
 10987  004158                     __ptext40:
 10988                           	callstack 0
 10989  004158                     _strncmp:
 10990                           	callstack 21
 10991                           
 10992                           ;incstack = 0
 10993  004158  C019  F021         	movff	strncmp@_l,strncmp@l
 10994  00415C  C01A  F022         	movff	strncmp@_l+1,strncmp@l+1
 10995  004160  C01B  F023         	movff	strncmp@_r,strncmp@r
 10996  004164  C01C  F024         	movff	strncmp@_r+1,strncmp@r+1
 10997  004168  061D               	decf	strncmp@n^0,f,c
 10998  00416A  A0D8               	btfss	status,0,c
 10999  00416C  061E               	decf	(strncmp@n+1)^0,f,c
 11000  00416E  281D               	incf	strncmp@n^0,w,c
 11001  004170  E10F               	bnz	l9476
 11002  004172  281E               	incf	(strncmp@n+1)^0,w,c
 11003  004174  A4D8               	btfss	status,2,c
 11004  004176  D00C               	goto	l9476
 11005  004178  0E00               	movlw	0
 11006  00417A  6E1A               	movwf	(?_strncmp+1)^0,c
 11007  00417C  0E00               	movlw	0
 11008  00417E  6E19               	movwf	?_strncmp^0,c
 11009  004180  0012               	return	
 11010  004182                     l9474:
 11011  004182  4A21               	infsnz	strncmp@l^0,f,c
 11012  004184  2A22               	incf	(strncmp@l+1)^0,f,c
 11013  004186  4A23               	infsnz	strncmp@r^0,f,c
 11014  004188  2A24               	incf	(strncmp@r+1)^0,f,c
 11015  00418A  061D               	decf	strncmp@n^0,f,c
 11016  00418C  A0D8               	btfss	status,0,c
 11017  00418E  061E               	decf	(strncmp@n+1)^0,f,c
 11018  004190                     l9476:
 11019  004190  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11020  004196  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11021  00419C  0E00               	movlw	low (__smallconst shr (0+16))
 11022  00419E  6EF8               	movwf	tblptru,c
 11023  0041A0  0E1F               	movlw	(high __ramtop+-1)
 11024  0041A2  64F7               	cpfsgt	tblptrh,c
 11025  0041A4  D003               	bra	u10997
 11026  0041A6  0008               	tblrd		*
 11027  0041A8  50F5               	movf	tablat,w,c
 11028  0041AA  D007               	bra	u10990
 11029  0041AC                     u10997:
 11030  0041AC  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11031  0041B2  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11032  0041B8  50E7               	movf	indf1,w,c
 11033  0041BA                     u10990:
 11034  0041BA  0900               	iorlw	0
 11035  0041BC  B4D8               	btfsc	status,2,c
 11036  0041BE  D04A               	goto	u11050
 11037  0041C0  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11038  0041C6  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11039  0041CC  0E00               	movlw	low (__smallconst shr (0+16))
 11040  0041CE  6EF8               	movwf	tblptru,c
 11041  0041D0  0E1F               	movlw	(high __ramtop+-1)
 11042  0041D2  64F7               	cpfsgt	tblptrh,c
 11043  0041D4  D003               	bra	u11017
 11044  0041D6  0008               	tblrd		*
 11045  0041D8  50F5               	movf	tablat,w,c
 11046  0041DA  D007               	bra	u11010
 11047  0041DC                     u11017:
 11048  0041DC  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11049  0041E2  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11050  0041E8  50E7               	movf	indf1,w,c
 11051  0041EA                     u11010:
 11052  0041EA  0900               	iorlw	0
 11053  0041EC  B4D8               	btfsc	status,2,c
 11054  0041EE  D032               	goto	u11050
 11055  0041F0  501D               	movf	strncmp@n^0,w,c
 11056  0041F2  101E               	iorwf	(strncmp@n+1)^0,w,c
 11057  0041F4  B4D8               	btfsc	status,2,c
 11058  0041F6  D02E               	goto	u11050
 11059  0041F8  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11060  0041FE  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11061  004204  0E00               	movlw	low (__smallconst shr (0+16))
 11062  004206  6EF8               	movwf	tblptru,c
 11063  004208  0E1F               	movlw	(high __ramtop+-1)
 11064  00420A  64F7               	cpfsgt	tblptrh,c
 11065  00420C  D003               	bra	u11047
 11066  00420E  0008               	tblrd		*
 11067  004210  50F5               	movf	tablat,w,c
 11068  004212  D007               	bra	u11040
 11069  004214                     u11047:
 11070  004214  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11071  00421A  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11072  004220  50E7               	movf	indf1,w,c
 11073  004222                     u11040:
 11074  004222  6E1F               	movwf	??_strncmp^0,c
 11075  004224  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11076  00422A  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11077  004230  0E00               	movlw	low (__smallconst shr (0+16))
 11078  004232  6EF8               	movwf	tblptru,c
 11079  004234  0E1F               	movlw	(high __ramtop+-1)
 11080  004236  64F7               	cpfsgt	tblptrh,c
 11081  004238  D003               	bra	u11057
 11082  00423A  0008               	tblrd		*
 11083  00423C  50F5               	movf	tablat,w,c
 11084  00423E  D007               	bra	u11055
 11085  004240                     u11057:
 11086  004240  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11087  004246  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11088  00424C  50E7               	movf	indf1,w,c
 11089  00424E                     u11055:
 11090  00424E  181F               	xorwf	??_strncmp^0,w,c
 11091  004250  B4D8               	btfsc	status,2,c
 11092  004252  D797               	goto	l9474
 11093  004254                     u11050:
 11094  004254  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11095  00425A  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11096  004260  0E00               	movlw	low (__smallconst shr (0+16))
 11097  004262  6EF8               	movwf	tblptru,c
 11098  004264  0E1F               	movlw	(high __ramtop+-1)
 11099  004266  64F7               	cpfsgt	tblptrh,c
 11100  004268  D003               	bra	u11067
 11101  00426A  0008               	tblrd		*
 11102  00426C  50F5               	movf	tablat,w,c
 11103  00426E  D007               	bra	u11060
 11104  004270                     u11067:
 11105  004270  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11106  004276  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11107  00427C  50E7               	movf	indf1,w,c
 11108  00427E                     u11060:
 11109  00427E  6E1F               	movwf	??_strncmp^0,c
 11110  004280  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11111  004286  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11112  00428C  0E00               	movlw	low (__smallconst shr (0+16))
 11113  00428E  6EF8               	movwf	tblptru,c
 11114  004290  0E1F               	movlw	(high __ramtop+-1)
 11115  004292  64F7               	cpfsgt	tblptrh,c
 11116  004294  D003               	bra	u11077
 11117  004296  0008               	tblrd		*
 11118  004298  50F5               	movf	tablat,w,c
 11119  00429A  D007               	bra	u11070
 11120  00429C                     u11077:
 11121  00429C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11122  0042A2  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11123  0042A8  50E7               	movf	indf1,w,c
 11124  0042AA                     u11070:
 11125  0042AA  6E20               	movwf	(??_strncmp+1)^0,c
 11126  0042AC  5020               	movf	(??_strncmp+1)^0,w,c
 11127  0042AE  5C1F               	subwf	??_strncmp^0,w,c
 11128  0042B0  6E19               	movwf	?_strncmp^0,c
 11129  0042B2  6A1A               	clrf	(?_strncmp+1)^0,c
 11130  0042B4  A0D8               	btfss	status,0,c
 11131  0042B6  061A               	decf	(?_strncmp+1)^0,f,c
 11132  0042B8  0012               	return		;funcret
 11133  0042BA                     __end_of_strncmp:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function _strlen *****************
 11137 ;; Defined at:
 11138 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  s               2   20[COMRAM] PTR const unsigned char 
 11141 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11142 ;;		 -> ?_sprintf(2), NULL(0), STR_8(3), STR_7(3), 
 11143 ;;		 -> STR_6(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;  a               2   22[COMRAM] PTR const unsigned char 
 11146 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11147 ;;		 -> ?_sprintf(2), NULL(0), STR_8(3), STR_7(3), 
 11148 ;;		 -> STR_6(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11149 ;; Return value:  Size  Location     Type
 11150 ;;                  2   20[COMRAM] unsigned int 
 11151 ;; Registers used:
 11152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11153 ;; Tracked objects:
 11154 ;;		On entry : 0/0
 11155 ;;		On exit  : 0/0
 11156 ;;		Unchanged: 0/0
 11157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11161 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11162 ;;Total ram usage:        4 bytes
 11163 ;; Hardware stack levels used: 1
 11164 ;; Hardware stack levels required when called: 4
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		__cli_interpret_cmd
 11169 ;;		_pad
 11170 ;;		_stoa
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           	psect	text41
 11175  005622                     __ptext41:
 11176                           	callstack 0
 11177  005622                     _strlen:
 11178                           	callstack 19
 11179                           
 11180                           ;incstack = 0
 11181  005622  C015  F017         	movff	strlen@s,strlen@a
 11182  005626  C016  F018         	movff	strlen@s+1,strlen@a+1
 11183  00562A  D002               	goto	l8658
 11184  00562C                     l8656:
 11185  00562C  4A15               	infsnz	strlen@s^0,f,c
 11186  00562E  2A16               	incf	(strlen@s+1)^0,f,c
 11187  005630                     l8658:
 11188  005630  0060  F057  FFF6   	movff	strlen@s,tblptrl
 11189  005636  0060  F05B  FFF7   	movff	strlen@s+1,tblptrh
 11190  00563C  0E00               	movlw	low (__smallconst shr (0+16))
 11191  00563E  6EF8               	movwf	tblptru,c
 11192  005640  0E1F               	movlw	(high __ramtop+-1)
 11193  005642  64F7               	cpfsgt	tblptrh,c
 11194  005644  D003               	bra	u9497
 11195  005646  0008               	tblrd		*
 11196  005648  50F5               	movf	tablat,w,c
 11197  00564A  D007               	bra	u9490
 11198  00564C                     u9497:
 11199  00564C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11200  005652  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11201  005658  50E7               	movf	indf1,w,c
 11202  00565A                     u9490:
 11203  00565A  0900               	iorlw	0
 11204  00565C  A4D8               	btfss	status,2,c
 11205  00565E  D7E6               	goto	l8656
 11206  005660  5017               	movf	strlen@a^0,w,c
 11207  005662  5C15               	subwf	strlen@s^0,w,c
 11208  005664  6E15               	movwf	?_strlen^0,c
 11209  005666  5018               	movf	(strlen@a+1)^0,w,c
 11210  005668  5816               	subwfb	(strlen@s+1)^0,w,c
 11211  00566A  6E16               	movwf	(?_strlen+1)^0,c
 11212  00566C  0012               	return		;funcret
 11213  00566E                     __end_of_strlen:
 11214                           	callstack 0
 11215                           
 11216 ;; *************** function _fh_ho *****************
 11217 ;; Defined at:
 11218 ;;		line 106 in file "main.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;  a_data          2   43[COMRAM] PTR void 
 11221 ;;		 -> cli_ctx(131), 
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;		None
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  1    wreg      void 
 11226 ;; Registers used:
 11227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11228 ;; Tracked objects:
 11229 ;;		On entry : 3F/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11237 ;;Total ram usage:        2 bytes
 11238 ;; Hardware stack levels used: 1
 11239 ;; Hardware stack levels required when called: 9
 11240 ;; This function calls:
 11241 ;;		_puts
 11242 ;; This function is called by:
 11243 ;;		__cli_interpret_cmd
 11244 ;; This function uses a non-reentrant model
 11245 ;;
 11246                           
 11247                           	psect	text42
 11248  005C4A                     __ptext42:
 11249                           	callstack 0
 11250  005C4A                     _fh_ho:
 11251                           	callstack 19
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;main.c: 106: void fh_ho(void *a_data);main.c: 107: {;main.c: 108:  puts(" ho      ");
 11255                           
 11256                           ;incstack = 0
 11257  005C4A  0E97               	movlw	low STR_4
 11258  005C4C  6E29               	movwf	puts@s^0,c
 11259  005C4E  5029               	movf	puts@s^0,w,c
 11260  005C50  A4D8               	btfss	status,2,c
 11261  005C52  0E20               	movlw	high __smallconst
 11262  005C54  6E2A               	movwf	(puts@s+1)^0,c
 11263  005C56  EC7A  F02C         	call	_puts	;wreg free
 11264  005C5A  0012               	return		;funcret
 11265  005C5C                     __end_of_fh_ho:
 11266                           	callstack 0
 11267                           
 11268 ;; *************** function _fh_hi *****************
 11269 ;; Defined at:
 11270 ;;		line 101 in file "main.c"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;  a_data          2   43[COMRAM] PTR void 
 11273 ;;		 -> cli_ctx(131), 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;		None
 11276 ;; Return value:  Size  Location     Type
 11277 ;;                  1    wreg      void 
 11278 ;; Registers used:
 11279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11280 ;; Tracked objects:
 11281 ;;		On entry : 3F/0
 11282 ;;		On exit  : 0/0
 11283 ;;		Unchanged: 0/0
 11284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11289 ;;Total ram usage:        2 bytes
 11290 ;; Hardware stack levels used: 1
 11291 ;; Hardware stack levels required when called: 9
 11292 ;; This function calls:
 11293 ;;		_puts
 11294 ;; This function is called by:
 11295 ;;		__cli_interpret_cmd
 11296 ;; This function uses a non-reentrant model
 11297 ;;
 11298                           
 11299                           	psect	text43
 11300  005C5C                     __ptext43:
 11301                           	callstack 0
 11302  005C5C                     _fh_hi:
 11303                           	callstack 19
 11304                           
 11305                           ; BSR set to: 0
 11306                           ;main.c: 101: void fh_hi(void *a_data);main.c: 102: {;main.c: 103:  puts(" hi      ");
 11307                           
 11308                           ;incstack = 0
 11309  005C5C  0E8D               	movlw	low STR_3
 11310  005C5E  6E29               	movwf	puts@s^0,c
 11311  005C60  5029               	movf	puts@s^0,w,c
 11312  005C62  A4D8               	btfss	status,2,c
 11313  005C64  0E20               	movlw	high __smallconst
 11314  005C66  6E2A               	movwf	(puts@s+1)^0,c
 11315  005C68  EC7A  F02C         	call	_puts	;wreg free
 11316  005C6C  0012               	return		;funcret
 11317  005C6E                     __end_of_fh_hi:
 11318                           	callstack 0
 11319                           
 11320 ;; *************** function _fh_hw *****************
 11321 ;; Defined at:
 11322 ;;		line 96 in file "main.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;  a_data          2   43[COMRAM] PTR void 
 11325 ;;		 -> cli_ctx(131), 
 11326 ;; Auto vars:     Size  Location     Type
 11327 ;;		None
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      void 
 11330 ;; Registers used:
 11331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 3F/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11341 ;;Total ram usage:        2 bytes
 11342 ;; Hardware stack levels used: 1
 11343 ;; Hardware stack levels required when called: 9
 11344 ;; This function calls:
 11345 ;;		_puts
 11346 ;; This function is called by:
 11347 ;;		__cli_interpret_cmd
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text44
 11352  005C8A                     __ptext44:
 11353                           	callstack 0
 11354  005C8A                     _fh_hw:
 11355                           	callstack 19
 11356                           
 11357                           ; BSR set to: 0
 11358                           ;main.c: 96: void fh_hw(void *a_data);main.c: 97: {;main.c: 98:  puts((const char *) a_d
      +                          ata);
 11359                           
 11360                           ;incstack = 0
 11361  005C8A  C02C  F029         	movff	fh_hw@a_data,puts@s
 11362  005C8E  C02D  F02A         	movff	fh_hw@a_data+1,puts@s+1
 11363  005C92  EC7A  F02C         	call	_puts	;wreg free
 11364  005C96  0012               	return		;funcret
 11365  005C98                     __end_of_fh_hw:
 11366                           	callstack 0
 11367                           
 11368 ;; *************** function _puts *****************
 11369 ;; Defined at:
 11370 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;  s               2   40[COMRAM] PTR const unsigned char 
 11373 ;;		 -> cli_ctx.cmd(128), STR_10(3), cli_read@i(1), cmdm(28), 
 11374 ;;		 -> cli_ctx(131), STR_4(10), STR_3(10), 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;  r               2    0        int 
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  2   40[COMRAM] int 
 11379 ;; Registers used:
 11380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/2
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11389 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11390 ;;Total ram usage:        3 bytes
 11391 ;; Hardware stack levels used: 1
 11392 ;; Hardware stack levels required when called: 8
 11393 ;; This function calls:
 11394 ;;		_fputc
 11395 ;;		_fputs
 11396 ;; This function is called by:
 11397 ;;		_fh_hw
 11398 ;;		_fh_hi
 11399 ;;		_fh_ho
 11400 ;;		_cli_init
 11401 ;;		_linux_putc
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           	psect	text45
 11406  0058F4                     __ptext45:
 11407                           	callstack 0
 11408  0058F4                     _puts:
 11409                           	callstack 20
 11410                           
 11411                           ;incstack = 0
 11412  0058F4  0E01               	movlw	1
 11413  0058F6  6E2B               	movwf	_puts$2836^0,c
 11414  0058F8  C029  F020         	movff	puts@s,fputs@s
 11415  0058FC  C02A  F021         	movff	puts@s+1,fputs@s+1
 11416  005900  0E00               	movlw	0
 11417  005902  6E22               	movwf	fputs@fp^0,c
 11418  005904  0E00               	movlw	0
 11419  005906  6E23               	movwf	(fputs@fp+1)^0,c
 11420  005908  EC0C  F02A         	call	_fputs	;wreg free
 11421  00590C  BE21               	btfsc	(?_fputs+1)^0,7,c
 11422  00590E  0012               	return	
 11423  005910  0E00               	movlw	0
 11424  005912  6E18               	movwf	(fputc@c+1)^0,c
 11425  005914  0E0A               	movlw	10
 11426  005916  6E17               	movwf	fputc@c^0,c
 11427  005918  0E00               	movlw	0
 11428  00591A  6E19               	movwf	fputc@fp^0,c
 11429  00591C  0E00               	movlw	0
 11430  00591E  6E1A               	movwf	(fputc@fp+1)^0,c
 11431  005920  EC37  F027         	call	_fputc	;wreg free
 11432  005924  BE18               	btfsc	(?_fputc+1)^0,7,c
 11433  005926  0012               	return	
 11434  005928  0E00               	movlw	0
 11435  00592A  6E2B               	movwf	_puts$2836^0,c
 11436  00592C  0012               	return		;funcret
 11437  00592E                     __end_of_puts:
 11438                           	callstack 0
 11439                           
 11440 ;; *************** function _fputs *****************
 11441 ;; Defined at:
 11442 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 11443 ;; Parameters:    Size  Location     Type
 11444 ;;  s               2   31[COMRAM] PTR const unsigned char 
 11445 ;;		 -> cli_ctx.cmd(128), dbuf(80), STR_10(3), cli_read@i(1), 
 11446 ;;		 -> cmdm(28), cli_ctx(131), STR_4(10), STR_3(10), 
 11447 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11448 ;;		 -> sprintf@f(11), NULL(0), 
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;  i               2   38[COMRAM] int 
 11451 ;;  c               1   37[COMRAM] unsigned char 
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  2   31[COMRAM] int 
 11454 ;; Registers used:
 11455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/0
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11462 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11464 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11465 ;;Total ram usage:        9 bytes
 11466 ;; Hardware stack levels used: 1
 11467 ;; Hardware stack levels required when called: 7
 11468 ;; This function calls:
 11469 ;;		_fputc
 11470 ;; This function is called by:
 11471 ;;		_pad
 11472 ;;		_puts
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476                           	psect	text46
 11477  005418                     __ptext46:
 11478                           	callstack 0
 11479  005418                     _fputs:
 11480                           	callstack 16
 11481                           
 11482                           ;incstack = 0
 11483  005418  0E00               	movlw	0
 11484  00541A  6E28               	movwf	(fputs@i+1)^0,c
 11485  00541C  0E00               	movlw	0
 11486  00541E  6E27               	movwf	fputs@i^0,c
 11487  005420  D00B               	goto	l8872
 11488  005422                     l8868:
 11489  005422  C026  F017         	movff	fputs@c,fputc@c
 11490  005426  6A18               	clrf	(fputc@c+1)^0,c
 11491  005428  C022  F019         	movff	fputs@fp,fputc@fp
 11492  00542C  C023  F01A         	movff	fputs@fp+1,fputc@fp+1
 11493  005430  EC37  F027         	call	_fputc	;wreg free
 11494  005434  4A27               	infsnz	fputs@i^0,f,c
 11495  005436  2A28               	incf	(fputs@i+1)^0,f,c
 11496  005438                     l8872:
 11497  005438  5027               	movf	fputs@i^0,w,c
 11498  00543A  2420               	addwf	fputs@s^0,w,c
 11499  00543C  6E24               	movwf	??_fputs^0,c
 11500  00543E  5028               	movf	(fputs@i+1)^0,w,c
 11501  005440  2021               	addwfc	(fputs@s+1)^0,w,c
 11502  005442  6E25               	movwf	(??_fputs+1)^0,c
 11503  005444  0060  F093  FFF6   	movff	??_fputs,tblptrl
 11504  00544A  0060  F097  FFF7   	movff	??_fputs+1,tblptrh
 11505  005450  0E00               	movlw	low (__smallconst shr (0+16))
 11506  005452  6EF8               	movwf	tblptru,c
 11507  005454  0E1F               	movlw	(high __ramtop+-1)
 11508  005456  64F7               	cpfsgt	tblptrh,c
 11509  005458  D003               	bra	u9907
 11510  00545A  0008               	tblrd		*
 11511  00545C  50F5               	movf	tablat,w,c
 11512  00545E  D007               	bra	u9900
 11513  005460                     u9907:
 11514  005460  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11515  005466  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11516  00546C  50E7               	movf	indf1,w,c
 11517  00546E                     u9900:
 11518  00546E  6E26               	movwf	fputs@c^0,c
 11519  005470  5026               	movf	fputs@c^0,w,c
 11520  005472  A4D8               	btfss	status,2,c
 11521  005474  D7D6               	goto	l8868
 11522  005476  C027  F020         	movff	fputs@i,?_fputs
 11523  00547A  C028  F021         	movff	fputs@i+1,?_fputs+1
 11524  00547E  0012               	return		;funcret
 11525  005480                     __end_of_fputs:
 11526                           	callstack 0
 11527                           
 11528 ;; *************** function _fputc *****************
 11529 ;; Defined at:
 11530 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;  c               2   22[COMRAM] int 
 11533 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
 11534 ;;		 -> sprintf@f(11), NULL(0), 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;		None
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  2   22[COMRAM] int 
 11539 ;; Registers used:
 11540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11548 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11549 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11550 ;;Total ram usage:        9 bytes
 11551 ;; Hardware stack levels used: 1
 11552 ;; Hardware stack levels required when called: 6
 11553 ;; This function calls:
 11554 ;;		_putch
 11555 ;; This function is called by:
 11556 ;;		_pad
 11557 ;;		_stoa
 11558 ;;		_vfpfcnvrt
 11559 ;;		_fputs
 11560 ;;		_puts
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           	psect	text47
 11565  004E6E                     __ptext47:
 11566                           	callstack 0
 11567  004E6E                     _fputc:
 11568                           	callstack 16
 11569                           
 11570                           ;incstack = 0
 11571  004E6E  5019               	movf	fputc@fp^0,w,c
 11572  004E70  101A               	iorwf	(fputc@fp+1)^0,w,c
 11573  004E72  B4D8               	btfsc	status,2,c
 11574  004E74  D004               	goto	u9460
 11575  004E76  5019               	movf	fputc@fp^0,w,c
 11576  004E78  101A               	iorwf	(fputc@fp+1)^0,w,c
 11577  004E7A  A4D8               	btfss	status,2,c
 11578  004E7C  D004               	goto	l8644
 11579  004E7E                     u9460:
 11580  004E7E  5017               	movf	fputc@c^0,w,c
 11581  004E80  EC8A  F02E         	call	_putch
 11582  004E84  D04A               	goto	l8650
 11583  004E86                     l8644:
 11584  004E86  EE20 F009          	lfsr	2,9
 11585  004E8A  5019               	movf	fputc@fp^0,w,c
 11586  004E8C  26D9               	addwf	fsr2l,f,c
 11587  004E8E  501A               	movf	(fputc@fp+1)^0,w,c
 11588  004E90  22DA               	addwfc	fsr2h,f,c
 11589  004E92  50DE               	movf	postinc2,w,c
 11590  004E94  10DE               	iorwf	postinc2,w,c
 11591  004E96  B4D8               	btfsc	status,2,c
 11592  004E98  D016               	goto	u9480
 11593  004E9A  EE20 F009          	lfsr	2,9
 11594  004E9E  5019               	movf	fputc@fp^0,w,c
 11595  004EA0  26D9               	addwf	fsr2l,f,c
 11596  004EA2  501A               	movf	(fputc@fp+1)^0,w,c
 11597  004EA4  22DA               	addwfc	fsr2h,f,c
 11598  004EA6  EE10 F003          	lfsr	1,3
 11599  004EAA  5019               	movf	fputc@fp^0,w,c
 11600  004EAC  26E1               	addwf	fsr1l,f,c
 11601  004EAE  501A               	movf	(fputc@fp+1)^0,w,c
 11602  004EB0  22E2               	addwfc	fsr1h,f,c
 11603  004EB2  50DE               	movf	postinc2,w,c
 11604  004EB4  5CE6               	subwf	postinc1,w,c
 11605  004EB6  50E6               	movf	postinc1,w,c
 11606  004EB8  0A80               	xorlw	128
 11607  004EBA  6E1F               	movwf	(??_fputc+4)^0,c
 11608  004EBC  50DE               	movf	postinc2,w,c
 11609  004EBE  0A80               	xorlw	128
 11610  004EC0  581F               	subwfb	(??_fputc+4)^0,w,c
 11611  004EC2  B0D8               	btfsc	status,0,c
 11612  004EC4  D02A               	goto	l8650
 11613  004EC6                     u9480:
 11614  004EC6  EE20 F003          	lfsr	2,3
 11615  004ECA  5019               	movf	fputc@fp^0,w,c
 11616  004ECC  26D9               	addwf	fsr2l,f,c
 11617  004ECE  501A               	movf	(fputc@fp+1)^0,w,c
 11618  004ED0  22DA               	addwfc	fsr2h,f,c
 11619  004ED2  006F FF78  F01B    	movff	postinc2,??_fputc
 11620  004ED8  006F FF74  F01C    	movff	postdec2,??_fputc+1
 11621  004EDE  0060  F067  FFD9   	movff	fputc@fp,fsr2l
 11622  004EE4  0060  F06B  FFDA   	movff	fputc@fp+1,fsr2h
 11623  004EEA  006F FF78  F01D    	movff	postinc2,??_fputc+2
 11624  004EF0  006F FF74  F01E    	movff	postdec2,??_fputc+3
 11625  004EF6  501B               	movf	??_fputc^0,w,c
 11626  004EF8  241D               	addwf	(??_fputc+2)^0,w,c
 11627  004EFA  6ED9               	movwf	fsr2l,c
 11628  004EFC  501C               	movf	(??_fputc+1)^0,w,c
 11629  004EFE  201E               	addwfc	(??_fputc+3)^0,w,c
 11630  004F00  6EDA               	movwf	fsr2h,c
 11631  004F02  0060  F05F  FFDF   	movff	fputc@c,indf2
 11632  004F08  EE20 F003          	lfsr	2,3
 11633  004F0C  5019               	movf	fputc@fp^0,w,c
 11634  004F0E  26D9               	addwf	fsr2l,f,c
 11635  004F10  501A               	movf	(fputc@fp+1)^0,w,c
 11636  004F12  22DA               	addwfc	fsr2h,f,c
 11637  004F14  2ADE               	incf	postinc2,f,c
 11638  004F16  0E00               	movlw	0
 11639  004F18  22DD               	addwfc	postdec2,f,c
 11640  004F1A                     l8650:
 11641  004F1A  C017  F017         	movff	fputc@c,?_fputc
 11642  004F1E  6A18               	clrf	(?_fputc+1)^0,c
 11643  004F20  0012               	return		;funcret
 11644  004F22                     __end_of_fputc:
 11645                           	callstack 0
 11646                           
 11647 ;; *************** function _putch *****************
 11648 ;; Defined at:
 11649 ;;		line 230 in file "mcc_generated_files/uart1.c"
 11650 ;; Parameters:    Size  Location     Type
 11651 ;;  txData          1    wreg     unsigned char 
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;  txData          1   21[COMRAM] unsigned char 
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  1    wreg      void 
 11656 ;; Registers used:
 11657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 3F/39
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11667 ;;Total ram usage:        1 bytes
 11668 ;; Hardware stack levels used: 1
 11669 ;; Hardware stack levels required when called: 5
 11670 ;; This function calls:
 11671 ;;		_UART1_Write
 11672 ;; This function is called by:
 11673 ;;		_fputc
 11674 ;; This function uses a non-reentrant model
 11675 ;;
 11676                           
 11677                           	psect	text48
 11678  005D14                     __ptext48:
 11679                           	callstack 0
 11680  005D14                     _putch:
 11681                           	callstack 16
 11682                           
 11683                           ;incstack = 0
 11684                           ;putch@txData stored from wreg
 11685  005D14  6E16               	movwf	putch@txData^0,c
 11686                           
 11687                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
 11688  005D16  5016               	movf	putch@txData^0,w,c
 11689  005D18  EC3F  F02C         	call	_UART1_Write
 11690                           
 11691                           ; BSR set to: 57
 11692  005D1C  0012               	return		;funcret
 11693  005D1E                     __end_of_putch:
 11694                           	callstack 0
 11695                           
 11696 ;; *************** function _UART1_Write *****************
 11697 ;; Defined at:
 11698 ;;		line 202 in file "mcc_generated_files/uart1.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;  txData          1    wreg     unsigned char 
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;  txData          1   20[COMRAM] unsigned char 
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1    wreg      void 
 11705 ;; Registers used:
 11706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/0
 11709 ;;		On exit  : 3F/39
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11716 ;;Total ram usage:        1 bytes
 11717 ;; Hardware stack levels used: 1
 11718 ;; Hardware stack levels required when called: 4
 11719 ;; This function calls:
 11720 ;;		Nothing
 11721 ;; This function is called by:
 11722 ;;		_putch
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           	psect	text49
 11727  00587E                     __ptext49:
 11728                           	callstack 0
 11729  00587E                     _UART1_Write:
 11730                           	callstack 16
 11731                           
 11732                           ; BSR set to: 57
 11733                           ;incstack = 0
 11734                           ;UART1_Write@txData stored from wreg
 11735  00587E  6E15               	movwf	UART1_Write@txData^0,c
 11736  005880                     
 11737                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11738                           
 11739                           ;mcc_generated_files/uart1.c: 202: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 203: {;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11740  005880  5049               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 11741  005882  B4D8               	btfsc	status,2,c
 11742  005884  D7FD               	goto	l8618
 11743                           
 11744                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
 11745  005886  0139               	movlb	57	; () banked
 11746  005888  B993               	btfsc	147,4,b	;volatile
 11747  00588A  D004               	goto	l616
 11748                           
 11749                           ; BSR set to: 57
 11750                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
 11751  00588C  0060  F057  FDEA   	movff	UART1_Write@txData,15850	;volatile
 11752                           
 11753                           ;mcc_generated_files/uart1.c: 211:     }
 11754  005892  D011               	goto	l8634
 11755  005894                     l616:
 11756                           
 11757                           ; BSR set to: 57
 11758                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
 11759  005894  9993               	bcf	147,4,b	;volatile
 11760                           
 11761                           ; BSR set to: 57
 11762                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
 11763  005896  0E40               	movlw	low _uart1TxBuffer
 11764  005898  244B               	addwf	_uart1TxHead^0,w,c	;volatile
 11765  00589A  6ED9               	movwf	fsr2l,c
 11766  00589C  6ADA               	clrf	fsr2h,c
 11767  00589E  0E01               	movlw	high _uart1TxBuffer
 11768  0058A0  22DA               	addwfc	fsr2h,f,c
 11769  0058A2  0060  F057  FFDF   	movff	UART1_Write@txData,indf2
 11770                           
 11771                           ; BSR set to: 57
 11772  0058A8  2A4B               	incf	_uart1TxHead^0,f,c	;volatile
 11773                           
 11774                           ; BSR set to: 57
 11775                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 11776  0058AA  0E3F               	movlw	63
 11777  0058AC  644B               	cpfsgt	_uart1TxHead^0,c
 11778  0058AE  D002               	goto	l8632
 11779                           
 11780                           ; BSR set to: 57
 11781                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
 11782  0058B0  0E00               	movlw	0
 11783  0058B2  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 11784  0058B4                     l8632:
 11785                           
 11786                           ; BSR set to: 57
 11787                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
 11788  0058B4  0649               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 11789  0058B6                     l8634:
 11790                           
 11791                           ; BSR set to: 57
 11792                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
 11793  0058B6  8993               	bsf	147,4,b	;volatile
 11794                           
 11795                           ; BSR set to: 57
 11796  0058B8  0012               	return		;funcret
 11797  0058BA                     __end_of_UART1_Write:
 11798                           	callstack 0
 11799                           
 11800 ;; *************** function ___xxtofl *****************
 11801 ;; Defined at:
 11802 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 11803 ;; Parameters:    Size  Location     Type
 11804 ;;  sign            1    wreg     unsigned char 
 11805 ;;  val             4   20[COMRAM] long 
 11806 ;; Auto vars:     Size  Location     Type
 11807 ;;  sign            1   28[COMRAM] unsigned char 
 11808 ;;  arg             4   30[COMRAM] unsigned long 
 11809 ;;  exp             1   29[COMRAM] unsigned char 
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  4   20[COMRAM] unsigned char 
 11812 ;; Registers used:
 11813 ;;		wreg, status,2, status,0
 11814 ;; Tracked objects:
 11815 ;;		On entry : 3F/0
 11816 ;;		On exit  : 0/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11820 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11821 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11822 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11823 ;;Total ram usage:       14 bytes
 11824 ;; Hardware stack levels used: 1
 11825 ;; Hardware stack levels required when called: 4
 11826 ;; This function calls:
 11827 ;;		Nothing
 11828 ;; This function is called by:
 11829 ;;		_main
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833                           	psect	text50
 11834  0046A4                     __ptext50:
 11835                           	callstack 0
 11836  0046A4                     ___xxtofl:
 11837                           	callstack 26
 11838                           
 11839                           ; BSR set to: 57
 11840                           ;incstack = 0
 11841                           ;___xxtofl@sign stored from wreg
 11842  0046A4  6E1D               	movwf	___xxtofl@sign^0,c
 11843  0046A6  501D               	movf	___xxtofl@sign^0,w,c
 11844  0046A8  A4D8               	btfss	status,2,c
 11845  0046AA  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 11846  0046AC  D01A               	goto	l1776
 11847  0046AE  C015  F019         	movff	___xxtofl@val,??___xxtofl
 11848  0046B2  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
 11849  0046B6  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
 11850  0046BA  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
 11851  0046BE  1E19               	comf	??___xxtofl^0,f,c
 11852  0046C0  1E1A               	comf	(??___xxtofl+1)^0,f,c
 11853  0046C2  1E1B               	comf	(??___xxtofl+2)^0,f,c
 11854  0046C4  1E1C               	comf	(??___xxtofl+3)^0,f,c
 11855  0046C6  2A19               	incf	??___xxtofl^0,f,c
 11856  0046C8  0E00               	movlw	0
 11857  0046CA  221A               	addwfc	(??___xxtofl+1)^0,f,c
 11858  0046CC  221B               	addwfc	(??___xxtofl+2)^0,f,c
 11859  0046CE  221C               	addwfc	(??___xxtofl+3)^0,f,c
 11860  0046D0  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
 11861  0046D4  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
 11862  0046D8  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
 11863  0046DC  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
 11864  0046E0  D008               	goto	l10446
 11865  0046E2                     l1776:
 11866  0046E2  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
 11867  0046E6  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11868  0046EA  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11869  0046EE  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11870  0046F2                     l10446:
 11871  0046F2  5015               	movf	___xxtofl@val^0,w,c
 11872  0046F4  1016               	iorwf	(___xxtofl@val+1)^0,w,c
 11873  0046F6  1017               	iorwf	(___xxtofl@val+2)^0,w,c
 11874  0046F8  1018               	iorwf	(___xxtofl@val+3)^0,w,c
 11875  0046FA  A4D8               	btfss	status,2,c
 11876  0046FC  D009               	goto	l10452
 11877  0046FE  0E00               	movlw	0
 11878  004700  6E15               	movwf	?___xxtofl^0,c
 11879  004702  0E00               	movlw	0
 11880  004704  6E16               	movwf	(?___xxtofl+1)^0,c
 11881  004706  0E00               	movlw	0
 11882  004708  6E17               	movwf	(?___xxtofl+2)^0,c
 11883  00470A  0E00               	movlw	0
 11884  00470C  6E18               	movwf	(?___xxtofl+3)^0,c
 11885  00470E  0012               	return	
 11886  004710                     l10452:
 11887  004710  0E96               	movlw	150
 11888  004712  6E1E               	movwf	___xxtofl@exp^0,c
 11889  004714  D006               	goto	l10456
 11890  004716                     l10454:
 11891  004716  2A1E               	incf	___xxtofl@exp^0,f,c
 11892  004718  90D8               	bcf	status,0,c
 11893  00471A  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 11894  00471C  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 11895  00471E  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 11896  004720  321F               	rrcf	___xxtofl@arg^0,f,c
 11897  004722                     l10456:
 11898  004722  0E00               	movlw	0
 11899  004724  141F               	andwf	___xxtofl@arg^0,w,c
 11900  004726  6E19               	movwf	??___xxtofl^0,c
 11901  004728  0E00               	movlw	0
 11902  00472A  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 11903  00472C  6E1A               	movwf	(??___xxtofl+1)^0,c
 11904  00472E  0E00               	movlw	0
 11905  004730  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 11906  004732  6E1B               	movwf	(??___xxtofl+2)^0,c
 11907  004734  0EFE               	movlw	254
 11908  004736  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 11909  004738  6E1C               	movwf	(??___xxtofl+3)^0,c
 11910  00473A  5019               	movf	??___xxtofl^0,w,c
 11911  00473C  101A               	iorwf	(??___xxtofl+1)^0,w,c
 11912  00473E  101B               	iorwf	(??___xxtofl+2)^0,w,c
 11913  004740  101C               	iorwf	(??___xxtofl+3)^0,w,c
 11914  004742  B4D8               	btfsc	status,2,c
 11915  004744  D00D               	goto	l1783
 11916  004746  D7E7               	goto	l10454
 11917  004748                     l10458:
 11918  004748  2A1E               	incf	___xxtofl@exp^0,f,c
 11919  00474A  0E01               	movlw	1
 11920  00474C  261F               	addwf	___xxtofl@arg^0,f,c
 11921  00474E  0E00               	movlw	0
 11922  004750  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
 11923  004752  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
 11924  004754  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
 11925  004756  90D8               	bcf	status,0,c
 11926  004758  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 11927  00475A  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 11928  00475C  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 11929  00475E  321F               	rrcf	___xxtofl@arg^0,f,c
 11930  004760                     l1783:
 11931  004760  0E00               	movlw	0
 11932  004762  141F               	andwf	___xxtofl@arg^0,w,c
 11933  004764  6E19               	movwf	??___xxtofl^0,c
 11934  004766  0E00               	movlw	0
 11935  004768  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 11936  00476A  6E1A               	movwf	(??___xxtofl+1)^0,c
 11937  00476C  0E00               	movlw	0
 11938  00476E  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 11939  004770  6E1B               	movwf	(??___xxtofl+2)^0,c
 11940  004772  0EFF               	movlw	255
 11941  004774  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 11942  004776  6E1C               	movwf	(??___xxtofl+3)^0,c
 11943  004778  5019               	movf	??___xxtofl^0,w,c
 11944  00477A  101A               	iorwf	(??___xxtofl+1)^0,w,c
 11945  00477C  101B               	iorwf	(??___xxtofl+2)^0,w,c
 11946  00477E  101C               	iorwf	(??___xxtofl+3)^0,w,c
 11947  004780  B4D8               	btfsc	status,2,c
 11948  004782  D007               	goto	l10466
 11949  004784  D7E1               	goto	l10458
 11950  004786                     l10464:
 11951  004786  061E               	decf	___xxtofl@exp^0,f,c
 11952  004788  90D8               	bcf	status,0,c
 11953  00478A  361F               	rlcf	___xxtofl@arg^0,f,c
 11954  00478C  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
 11955  00478E  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
 11956  004790  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
 11957  004792                     l10466:
 11958  004792  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
 11959  004794  D003               	goto	u12260
 11960  004796  0E02               	movlw	2
 11961  004798  601E               	cpfslt	___xxtofl@exp^0,c
 11962  00479A  D7F5               	goto	l10464
 11963  00479C                     u12260:
 11964  00479C  A01E               	btfss	___xxtofl@exp^0,0,c
 11965  00479E  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
 11966  0047A0  90D8               	bcf	status,0,c
 11967  0047A2  321E               	rrcf	___xxtofl@exp^0,f,c
 11968  0047A4  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
 11969  0047A8  6A1A               	clrf	(??___xxtofl+1)^0,c
 11970  0047AA  6A1B               	clrf	(??___xxtofl+2)^0,c
 11971  0047AC  6A1C               	clrf	(??___xxtofl+3)^0,c
 11972  0047AE  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
 11973  0047B2  6A1B               	clrf	(??___xxtofl+2)^0,c
 11974  0047B4  6A1A               	clrf	(??___xxtofl+1)^0,c
 11975  0047B6  6A19               	clrf	??___xxtofl^0,c
 11976  0047B8  5019               	movf	??___xxtofl^0,w,c
 11977  0047BA  121F               	iorwf	___xxtofl@arg^0,f,c
 11978  0047BC  501A               	movf	(??___xxtofl+1)^0,w,c
 11979  0047BE  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
 11980  0047C0  501B               	movf	(??___xxtofl+2)^0,w,c
 11981  0047C2  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
 11982  0047C4  501C               	movf	(??___xxtofl+3)^0,w,c
 11983  0047C6  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
 11984  0047C8  501D               	movf	___xxtofl@sign^0,w,c
 11985  0047CA  A4D8               	btfss	status,2,c
 11986  0047CC  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 11987  0047CE  D001               	goto	l10482
 11988  0047D0  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
 11989  0047D2                     l10482:
 11990  0047D2  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
 11991  0047D6  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
 11992  0047DA  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
 11993  0047DE  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
 11994  0047E2  0012               	return		;funcret
 11995  0047E4                     __end_of___xxtofl:
 11996                           	callstack 0
 11997                           
 11998 ;; *************** function _SYSTEM_Initialize *****************
 11999 ;; Defined at:
 12000 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;		None
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;		None
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, status,2, status,0, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 3F/0
 12011 ;;		On exit  : 3F/3D
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12018 ;;Total ram usage:        0 bytes
 12019 ;; Hardware stack levels used: 1
 12020 ;; Hardware stack levels required when called: 6
 12021 ;; This function calls:
 12022 ;;		_ADCC_Initialize
 12023 ;;		_DAC1_Initialize
 12024 ;;		_INTERRUPT_Initialize
 12025 ;;		_OSCILLATOR_Initialize
 12026 ;;		_PIN_MANAGER_Initialize
 12027 ;;		_PMD_Initialize
 12028 ;;		_SPI1_Initialize
 12029 ;;		_TMR5_Initialize
 12030 ;;		_TMR6_Initialize
 12031 ;;		_UART1_Initialize
 12032 ;; This function is called by:
 12033 ;;		_main
 12034 ;; This function uses a non-reentrant model
 12035 ;;
 12036                           
 12037                           	psect	text51
 12038  005AB4                     __ptext51:
 12039                           	callstack 0
 12040  005AB4                     _SYSTEM_Initialize:
 12041                           	callstack 24
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12045                           
 12046                           ;incstack = 0
 12047  005AB4  EC7E  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12048                           
 12049                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12050  005AB8  ECB6  F02D         	call	_PMD_Initialize	;wreg free
 12051                           
 12052                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12053  005ABC  ECC0  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 12054                           
 12055                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12056  005AC0  ECE7  F02D         	call	_OSCILLATOR_Initialize	;wreg free
 12057                           
 12058                           ; BSR set to: 57
 12059                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
 12060  005AC4  EC2F  F02D         	call	_TMR6_Initialize	;wreg free
 12061                           
 12062                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 12063  005AC8  EC9B  F029         	call	_ADCC_Initialize	;wreg free
 12064                           
 12065                           ;mcc_generated_files/mcc.c: 58:     DAC1_Initialize();
 12066  005ACC  EC84  F02E         	call	_DAC1_Initialize	;wreg free
 12067                           
 12068                           ; BSR set to: 62
 12069                           ;mcc_generated_files/mcc.c: 59:     TMR5_Initialize();
 12070  005AD0  EC37  F02B         	call	_TMR5_Initialize	;wreg free
 12071                           
 12072                           ;mcc_generated_files/mcc.c: 60:     UART1_Initialize();
 12073  005AD4  ECDC  F026         	call	_UART1_Initialize	;wreg free
 12074                           
 12075                           ;mcc_generated_files/mcc.c: 61:     SPI1_Initialize();
 12076  005AD8  ECF5  F02D         	call	_SPI1_Initialize	;wreg free
 12077                           
 12078                           ; BSR set to: 61
 12079  005ADC  0012               	return		;funcret
 12080  005ADE                     __end_of_SYSTEM_Initialize:
 12081                           	callstack 0
 12082                           
 12083 ;; *************** function _UART1_Initialize *****************
 12084 ;; Defined at:
 12085 ;;		line 87 in file "mcc_generated_files/uart1.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;		None
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;		None
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  1    wreg      void 
 12092 ;; Registers used:
 12093 ;;		wreg, status,2, status,0, cstack
 12094 ;; Tracked objects:
 12095 ;;		On entry : 3B/3D
 12096 ;;		On exit  : 3F/39
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12103 ;;Total ram usage:        0 bytes
 12104 ;; Hardware stack levels used: 1
 12105 ;; Hardware stack levels required when called: 5
 12106 ;; This function calls:
 12107 ;;		_UART1_SetErrorHandler
 12108 ;;		_UART1_SetFramingErrorHandler
 12109 ;;		_UART1_SetOverrunErrorHandler
 12110 ;;		_UART1_SetRxInterruptHandler
 12111 ;;		_UART1_SetTxInterruptHandler
 12112 ;; This function is called by:
 12113 ;;		_SYSTEM_Initialize
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           	psect	text52
 12118  004DB8                     __ptext52:
 12119                           	callstack 0
 12120  004DB8                     _UART1_Initialize:
 12121                           	callstack 24
 12122                           
 12123                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 12124                           
 12125                           ; BSR set to: 61
 12126                           ;incstack = 0
 12127  004DB8  0139               	movlb	57	; () banked
 12128  004DBA  9793               	bcf	147,3,b	;volatile
 12129                           
 12130                           ; BSR set to: 57
 12131                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12132  004DBC  0ED0               	movlw	low _UART1_Receive_ISR
 12133  004DBE  6E15               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 12134  004DC0  0E4F               	movlw	high _UART1_Receive_ISR
 12135  004DC2  6E16               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 12136  004DC4  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12137  004DC6  6E17               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
 12138  004DC8  EC53  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12139                           
 12140                           ; BSR set to: 57
 12141                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 12142  004DCC  9993               	bcf	147,4,b	;volatile
 12143                           
 12144                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12145  004DCE  0E30               	movlw	low _UART1_Transmit_ISR
 12146  004DD0  6E15               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 12147  004DD2  0E5A               	movlw	high _UART1_Transmit_ISR
 12148  004DD4  6E16               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 12149  004DD6  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12150  004DD8  6E17               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
 12151  004DDA  EC4C  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12152                           
 12153                           ; BSR set to: 57
 12154                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 12155  004DDE  0E00               	movlw	0
 12156  004DE0  013D               	movlb	61	; () banked
 12157  004DE2  6FEC               	movwf	236,b	;volatile
 12158                           
 12159                           ; BSR set to: 61
 12160                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 12161  004DE4  0E00               	movlw	0
 12162  004DE6  6FED               	movwf	237,b	;volatile
 12163                           
 12164                           ; BSR set to: 61
 12165                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 12166  004DE8  0E00               	movlw	0
 12167  004DEA  6FEE               	movwf	238,b	;volatile
 12168                           
 12169                           ; BSR set to: 61
 12170                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 12171  004DEC  0E00               	movlw	0
 12172  004DEE  6FEF               	movwf	239,b	;volatile
 12173                           
 12174                           ; BSR set to: 61
 12175                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 12176  004DF0  0E00               	movlw	0
 12177  004DF2  6FF0               	movwf	240,b	;volatile
 12178                           
 12179                           ; BSR set to: 61
 12180                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 12181  004DF4  0E00               	movlw	0
 12182  004DF6  6FF1               	movwf	241,b	;volatile
 12183                           
 12184                           ; BSR set to: 61
 12185                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 12186  004DF8  0EB0               	movlw	176
 12187  004DFA  6FF2               	movwf	242,b	;volatile
 12188                           
 12189                           ; BSR set to: 61
 12190                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 12191  004DFC  0E80               	movlw	128
 12192  004DFE  6FF3               	movwf	243,b	;volatile
 12193                           
 12194                           ; BSR set to: 61
 12195                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 12196  004E00  0E00               	movlw	0
 12197  004E02  6FF4               	movwf	244,b	;volatile
 12198                           
 12199                           ; BSR set to: 61
 12200                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 12201  004E04  0E8A               	movlw	138
 12202  004E06  6FF5               	movwf	245,b	;volatile
 12203                           
 12204                           ; BSR set to: 61
 12205                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 12206  004E08  0E00               	movlw	0
 12207  004E0A  6FF6               	movwf	246,b	;volatile
 12208                           
 12209                           ; BSR set to: 61
 12210                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 12211  004E0C  0E00               	movlw	0
 12212  004E0E  6FF7               	movwf	247,b	;volatile
 12213                           
 12214                           ; BSR set to: 61
 12215                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 12216  004E10  0E00               	movlw	0
 12217  004E12  6FF8               	movwf	248,b	;volatile
 12218                           
 12219                           ; BSR set to: 61
 12220                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 12221  004E14  0E00               	movlw	0
 12222  004E16  6FF9               	movwf	249,b	;volatile
 12223                           
 12224                           ; BSR set to: 61
 12225                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 12226  004E18  0E00               	movlw	0
 12227  004E1A  6FFA               	movwf	250,b	;volatile
 12228                           
 12229                           ; BSR set to: 61
 12230                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 12231  004E1C  0E40               	movlw	low _UART1_DefaultFramingErrorHandler
 12232  004E1E  6E15               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 12233  004E20  0E5D               	movlw	high _UART1_DefaultFramingErrorHandler
 12234  004E22  6E16               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 12235  004E24  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 12236  004E26  6E17               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
 12237  004E28  EC61  F02E         	call	_UART1_SetFramingErrorHandler	;wreg free
 12238                           
 12239                           ; BSR set to: 61
 12240                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 12241  004E2C  0E3E               	movlw	low _UART1_DefaultOverrunErrorHandler
 12242  004E2E  6E15               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 12243  004E30  0E5D               	movlw	high _UART1_DefaultOverrunErrorHandler
 12244  004E32  6E16               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 12245  004E34  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 12246  004E36  6E17               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
 12247  004E38  EC5A  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 12248                           
 12249                           ; BSR set to: 61
 12250                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 12251  004E3C  0E2E               	movlw	low _UART1_DefaultErrorHandler
 12252  004E3E  6E15               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 12253  004E40  0E5D               	movlw	high _UART1_DefaultErrorHandler
 12254  004E42  6E16               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 12255  004E44  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 12256  004E46  6E17               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
 12257  004E48  EC68  F02E         	call	_UART1_SetErrorHandler	;wreg free
 12258                           
 12259                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 12260  004E4C  0E00               	movlw	0
 12261  004E4E  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 12262                           
 12263                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 12264  004E50  0E00               	movlw	0
 12265  004E52  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 12266                           
 12267                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 12268  004E54  0E00               	movlw	0
 12269  004E56  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 12270                           
 12271                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12272  004E58  0E40               	movlw	64
 12273  004E5A  6E49               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 12274                           
 12275                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 12276  004E5C  0E00               	movlw	0
 12277  004E5E  6E48               	movwf	_uart1RxHead^0,c	;volatile
 12278                           
 12279                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 12280  004E60  0E00               	movlw	0
 12281  004E62  6E47               	movwf	_uart1RxTail^0,c	;volatile
 12282                           
 12283                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 12284  004E64  0E00               	movlw	0
 12285  004E66  6E46               	movwf	_uart1RxCount^0,c	;volatile
 12286                           
 12287                           ; BSR set to: 61
 12288                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 12289  004E68  0139               	movlb	57	; () banked
 12290  004E6A  8793               	bsf	147,3,b	;volatile
 12291                           
 12292                           ; BSR set to: 57
 12293  004E6C  0012               	return		;funcret
 12294  004E6E                     __end_of_UART1_Initialize:
 12295                           	callstack 0
 12296                           
 12297 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12298 ;; Defined at:
 12299 ;;		line 333 in file "mcc_generated_files/uart1.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12302 ;;		 -> UART1_Transmit_ISR(1), 
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;		None
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0
 12309 ;; Tracked objects:
 12310 ;;		On entry : 3F/39
 12311 ;;		On exit  : 3F/39
 12312 ;;		Unchanged: 3E/0
 12313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12314 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12318 ;;Total ram usage:        3 bytes
 12319 ;; Hardware stack levels used: 1
 12320 ;; Hardware stack levels required when called: 4
 12321 ;; This function calls:
 12322 ;;		Nothing
 12323 ;; This function is called by:
 12324 ;;		_UART1_Initialize
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           	psect	text53
 12329  005C98                     __ptext53:
 12330                           	callstack 0
 12331  005C98                     _UART1_SetTxInterruptHandler:
 12332                           	callstack 24
 12333                           
 12334                           ; BSR set to: 57
 12335                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 12336                           
 12337                           ; BSR set to: 57
 12338                           ;incstack = 0
 12339  005C98  C015  F0EF         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 12340  005C9C  C016  F0F0         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 12341  005CA0  C017  F0F1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 12342                           
 12343                           ; BSR set to: 57
 12344  005CA4  0012               	return		;funcret
 12345  005CA6                     __end_of_UART1_SetTxInterruptHandler:
 12346                           	callstack 0
 12347                           
 12348 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12349 ;; Defined at:
 12350 ;;		line 329 in file "mcc_generated_files/uart1.c"
 12351 ;; Parameters:    Size  Location     Type
 12352 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12353 ;;		 -> UART1_Receive_ISR(1), 
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;		None
 12356 ;; Return value:  Size  Location     Type
 12357 ;;                  1    wreg      void 
 12358 ;; Registers used:
 12359 ;;		wreg, status,2, status,0
 12360 ;; Tracked objects:
 12361 ;;		On entry : 3F/39
 12362 ;;		On exit  : 3F/39
 12363 ;;		Unchanged: 3E/0
 12364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12365 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12368 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12369 ;;Total ram usage:        3 bytes
 12370 ;; Hardware stack levels used: 1
 12371 ;; Hardware stack levels required when called: 4
 12372 ;; This function calls:
 12373 ;;		Nothing
 12374 ;; This function is called by:
 12375 ;;		_UART1_Initialize
 12376 ;; This function uses a non-reentrant model
 12377 ;;
 12378                           
 12379                           	psect	text54
 12380  005CA6                     __ptext54:
 12381                           	callstack 0
 12382  005CA6                     _UART1_SetRxInterruptHandler:
 12383                           	callstack 24
 12384                           
 12385                           ; BSR set to: 57
 12386                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 12387                           
 12388                           ; BSR set to: 57
 12389                           ;incstack = 0
 12390  005CA6  C015  F0F2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 12391  005CAA  C016  F0F3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 12392  005CAE  C017  F0F4         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 12393                           
 12394                           ; BSR set to: 57
 12395  005CB2  0012               	return		;funcret
 12396  005CB4                     __end_of_UART1_SetRxInterruptHandler:
 12397                           	callstack 0
 12398                           
 12399 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 12400 ;; Defined at:
 12401 ;;		line 319 in file "mcc_generated_files/uart1.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12404 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;		None
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  1    wreg      void 
 12409 ;; Registers used:
 12410 ;;		wreg, status,2, status,0
 12411 ;; Tracked objects:
 12412 ;;		On entry : 3F/3D
 12413 ;;		On exit  : 3F/3D
 12414 ;;		Unchanged: 3E/0
 12415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12416 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12420 ;;Total ram usage:        3 bytes
 12421 ;; Hardware stack levels used: 1
 12422 ;; Hardware stack levels required when called: 4
 12423 ;; This function calls:
 12424 ;;		Nothing
 12425 ;; This function is called by:
 12426 ;;		_UART1_Initialize
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           	psect	text55
 12431  005CB4                     __ptext55:
 12432                           	callstack 0
 12433  005CB4                     _UART1_SetOverrunErrorHandler:
 12434                           	callstack 24
 12435                           
 12436                           ; BSR set to: 61
 12437                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 12438                           
 12439                           ; BSR set to: 57
 12440                           ;incstack = 0
 12441  005CB4  C015  F0E3         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 12442  005CB8  C016  F0E4         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 12443  005CBC  C017  F0E5         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 12444                           
 12445                           ; BSR set to: 61
 12446  005CC0  0012               	return		;funcret
 12447  005CC2                     __end_of_UART1_SetOverrunErrorHandler:
 12448                           	callstack 0
 12449                           
 12450 ;; *************** function _UART1_SetFramingErrorHandler *****************
 12451 ;; Defined at:
 12452 ;;		line 315 in file "mcc_generated_files/uart1.c"
 12453 ;; Parameters:    Size  Location     Type
 12454 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12455 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;		None
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      void 
 12460 ;; Registers used:
 12461 ;;		wreg, status,2, status,0
 12462 ;; Tracked objects:
 12463 ;;		On entry : 3F/3D
 12464 ;;		On exit  : 3F/3D
 12465 ;;		Unchanged: 3E/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12467 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12470 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12471 ;;Total ram usage:        3 bytes
 12472 ;; Hardware stack levels used: 1
 12473 ;; Hardware stack levels required when called: 4
 12474 ;; This function calls:
 12475 ;;		Nothing
 12476 ;; This function is called by:
 12477 ;;		_UART1_Initialize
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           
 12481                           	psect	text56
 12482  005CC2                     __ptext56:
 12483                           	callstack 0
 12484  005CC2                     _UART1_SetFramingErrorHandler:
 12485                           	callstack 24
 12486                           
 12487                           ; BSR set to: 61
 12488                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 12489                           
 12490                           ; BSR set to: 61
 12491                           ;incstack = 0
 12492  005CC2  C015  F0E6         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 12493  005CC6  C016  F0E7         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 12494  005CCA  C017  F0E8         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 12495                           
 12496                           ; BSR set to: 61
 12497  005CCE  0012               	return		;funcret
 12498  005CD0                     __end_of_UART1_SetFramingErrorHandler:
 12499                           	callstack 0
 12500                           
 12501 ;; *************** function _UART1_SetErrorHandler *****************
 12502 ;; Defined at:
 12503 ;;		line 323 in file "mcc_generated_files/uart1.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12506 ;;		 -> UART1_DefaultErrorHandler(1), 
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;		None
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1    wreg      void 
 12511 ;; Registers used:
 12512 ;;		wreg, status,2, status,0
 12513 ;; Tracked objects:
 12514 ;;		On entry : 3F/3D
 12515 ;;		On exit  : 3F/3D
 12516 ;;		Unchanged: 3E/0
 12517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12518 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12521 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12522 ;;Total ram usage:        3 bytes
 12523 ;; Hardware stack levels used: 1
 12524 ;; Hardware stack levels required when called: 4
 12525 ;; This function calls:
 12526 ;;		Nothing
 12527 ;; This function is called by:
 12528 ;;		_UART1_Initialize
 12529 ;; This function uses a non-reentrant model
 12530 ;;
 12531                           
 12532                           	psect	text57
 12533  005CD0                     __ptext57:
 12534                           	callstack 0
 12535  005CD0                     _UART1_SetErrorHandler:
 12536                           	callstack 24
 12537                           
 12538                           ; BSR set to: 61
 12539                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 12540                           
 12541                           ; BSR set to: 61
 12542                           ;incstack = 0
 12543  005CD0  C015  F0E0         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 12544  005CD4  C016  F0E1         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 12545  005CD8  C017  F0E2         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 12546                           
 12547                           ; BSR set to: 61
 12548  005CDC  0012               	return		;funcret
 12549  005CDE                     __end_of_UART1_SetErrorHandler:
 12550                           	callstack 0
 12551                           
 12552 ;; *************** function _TMR6_Initialize *****************
 12553 ;; Defined at:
 12554 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 12555 ;; Parameters:    Size  Location     Type
 12556 ;;		None
 12557 ;; Auto vars:     Size  Location     Type
 12558 ;;		None
 12559 ;; Return value:  Size  Location     Type
 12560 ;;                  1    wreg      void 
 12561 ;; Registers used:
 12562 ;;		wreg, status,2, status,0, cstack
 12563 ;; Tracked objects:
 12564 ;;		On entry : 3F/39
 12565 ;;		On exit  : 3B/39
 12566 ;;		Unchanged: 0/0
 12567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12572 ;;Total ram usage:        0 bytes
 12573 ;; Hardware stack levels used: 1
 12574 ;; Hardware stack levels required when called: 5
 12575 ;; This function calls:
 12576 ;;		_TMR6_SetInterruptHandler
 12577 ;; This function is called by:
 12578 ;;		_SYSTEM_Initialize
 12579 ;; This function uses a non-reentrant model
 12580 ;;
 12581                           
 12582                           	psect	text58
 12583  005A5E                     __ptext58:
 12584                           	callstack 0
 12585  005A5E                     _TMR6_Initialize:
 12586                           	callstack 24
 12587                           
 12588                           ; BSR set to: 57
 12589                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 12590                           
 12591                           ; BSR set to: 61
 12592                           ;incstack = 0
 12593  005A5E  0E01               	movlw	1
 12594  005A60  6E96               	movwf	150,c	;volatile
 12595                           
 12596                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 12597  005A62  0E20               	movlw	32
 12598  005A64  6E95               	movwf	149,c	;volatile
 12599                           
 12600                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 12601  005A66  0E00               	movlw	0
 12602  005A68  6E97               	movwf	151,c	;volatile
 12603                           
 12604                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 12605  005A6A  0E4D               	movlw	77
 12606  005A6C  6E93               	movwf	147,c	;volatile
 12607                           
 12608                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 12609  005A6E  0E00               	movlw	0
 12610  005A70  6E92               	movwf	146,c	;volatile
 12611                           
 12612                           ; BSR set to: 57
 12613                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 12614  005A72  91A9               	bcf	169,0,b	;volatile
 12615                           
 12616                           ; BSR set to: 57
 12617                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 12618  005A74  8199               	bsf	153,0,b	;volatile
 12619                           
 12620                           ; BSR set to: 57
 12621                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 12622  005A76  0E3A               	movlw	low _TMR6_DefaultInterruptHandler
 12623  005A78  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
 12624  005A7A  0E5D               	movlw	high _TMR6_DefaultInterruptHandler
 12625  005A7C  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
 12626  005A7E  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12627  005A80  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
 12628  005A82  EC6F  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12629                           
 12630                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 12631  005A86  6894               	setf	148,c	;volatile
 12632  005A88  0012               	return		;funcret
 12633  005A8A                     __end_of_TMR6_Initialize:
 12634                           	callstack 0
 12635                           
 12636 ;; *************** function _TMR6_SetInterruptHandler *****************
 12637 ;; Defined at:
 12638 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 12639 ;; Parameters:    Size  Location     Type
 12640 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12641 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;		None
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  1    wreg      void 
 12646 ;; Registers used:
 12647 ;;		wreg, status,2, status,0
 12648 ;; Tracked objects:
 12649 ;;		On entry : 3B/3D
 12650 ;;		On exit  : 3B/39
 12651 ;;		Unchanged: 3A/0
 12652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12653 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12656 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12657 ;;Total ram usage:        3 bytes
 12658 ;; Hardware stack levels used: 1
 12659 ;; Hardware stack levels required when called: 4
 12660 ;; This function calls:
 12661 ;;		Nothing
 12662 ;; This function is called by:
 12663 ;;		_TMR6_Initialize
 12664 ;;		_main
 12665 ;; This function uses a non-reentrant model
 12666 ;;
 12667                           
 12668                           	psect	text59
 12669  005CDE                     __ptext59:
 12670                           	callstack 0
 12671  005CDE                     _TMR6_SetInterruptHandler:
 12672                           	callstack 26
 12673                           
 12674                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 12675                           
 12676                           ;incstack = 0
 12677  005CDE  C015  F0E9         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 12678  005CE2  C016  F0EA         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 12679  005CE6  C017  F0EB         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 12680  005CEA  0012               	return		;funcret
 12681  005CEC                     __end_of_TMR6_SetInterruptHandler:
 12682                           	callstack 0
 12683                           
 12684 ;; *************** function _TMR5_Initialize *****************
 12685 ;; Defined at:
 12686 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 12687 ;; Parameters:    Size  Location     Type
 12688 ;;		None
 12689 ;; Auto vars:     Size  Location     Type
 12690 ;;		None
 12691 ;; Return value:  Size  Location     Type
 12692 ;;                  1    wreg      void 
 12693 ;; Registers used:
 12694 ;;		wreg, status,2, status,0, cstack
 12695 ;; Tracked objects:
 12696 ;;		On entry : 3F/3E
 12697 ;;		On exit  : 3B/39
 12698 ;;		Unchanged: 0/0
 12699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12704 ;;Total ram usage:        2 bytes
 12705 ;; Hardware stack levels used: 1
 12706 ;; Hardware stack levels required when called: 5
 12707 ;; This function calls:
 12708 ;;		_TMR5_SetInterruptHandler
 12709 ;; This function is called by:
 12710 ;;		_SYSTEM_Initialize
 12711 ;; This function uses a non-reentrant model
 12712 ;;
 12713                           
 12714                           	psect	text60
 12715  00566E                     __ptext60:
 12716                           	callstack 0
 12717  00566E                     _TMR5_Initialize:
 12718                           	callstack 24
 12719                           
 12720                           ; BSR set to: 62
 12721                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 12722                           
 12723                           ;incstack = 0
 12724  00566E  0E00               	movlw	0
 12725  005670  6E9B               	movwf	155,c	;volatile
 12726                           
 12727                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 12728  005672  0E00               	movlw	0
 12729  005674  6E9C               	movwf	156,c	;volatile
 12730                           
 12731                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 12732  005676  0E02               	movlw	2
 12733  005678  6E9D               	movwf	157,c	;volatile
 12734                           
 12735                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 12736  00567A  0E83               	movlw	131
 12737  00567C  6E99               	movwf	153,c	;volatile
 12738                           
 12739                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 12740  00567E  0E00               	movlw	0
 12741  005680  6E98               	movwf	152,c	;volatile
 12742                           
 12743                           ; BSR set to: 62
 12744                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 12745  005682  0139               	movlb	57	; () banked
 12746  005684  9DA8               	bcf	168,6,b	;volatile
 12747                           
 12748                           ; BSR set to: 57
 12749                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 12750  005686  5098               	movf	152,w,c	;volatile
 12751  005688  006F FE64  F018    	movff	16281,??_TMR5_Initialize	;volatile
 12752  00568E  6A19               	clrf	(??_TMR5_Initialize+1)^0,c
 12753  005690  C018  F019         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 12754  005694  6A18               	clrf	??_TMR5_Initialize^0,c
 12755  005696  1018               	iorwf	??_TMR5_Initialize^0,w,c
 12756  005698  6E3F               	movwf	_timer5ReloadVal^0,c	;volatile
 12757  00569A  5019               	movf	(??_TMR5_Initialize+1)^0,w,c
 12758  00569C  6E40               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 12759                           
 12760                           ; BSR set to: 57
 12761                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 12762  00569E  8D98               	bsf	152,6,b	;volatile
 12763                           
 12764                           ; BSR set to: 57
 12765                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 12766  0056A0  0E42               	movlw	low _TMR5_DefaultInterruptHandler
 12767  0056A2  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
 12768  0056A4  0E5D               	movlw	high _TMR5_DefaultInterruptHandler
 12769  0056A6  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
 12770  0056A8  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12771  0056AA  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
 12772  0056AC  EC76  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 12773                           
 12774                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 12775  0056B0  0E01               	movlw	1
 12776  0056B2  6E9A               	movwf	154,c	;volatile
 12777  0056B4  0012               	return		;funcret
 12778  0056B6                     __end_of_TMR5_Initialize:
 12779                           	callstack 0
 12780                           
 12781 ;; *************** function _TMR5_SetInterruptHandler *****************
 12782 ;; Defined at:
 12783 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 12784 ;; Parameters:    Size  Location     Type
 12785 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12786 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;		None
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  1    wreg      void 
 12791 ;; Registers used:
 12792 ;;		wreg, status,2, status,0
 12793 ;; Tracked objects:
 12794 ;;		On entry : 3B/3D
 12795 ;;		On exit  : 3B/39
 12796 ;;		Unchanged: 3A/0
 12797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12798 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12802 ;;Total ram usage:        3 bytes
 12803 ;; Hardware stack levels used: 1
 12804 ;; Hardware stack levels required when called: 4
 12805 ;; This function calls:
 12806 ;;		Nothing
 12807 ;; This function is called by:
 12808 ;;		_TMR5_Initialize
 12809 ;;		_main
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           	psect	text61
 12814  005CEC                     __ptext61:
 12815                           	callstack 0
 12816  005CEC                     _TMR5_SetInterruptHandler:
 12817                           	callstack 26
 12818                           
 12819                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 12820                           
 12821                           ;incstack = 0
 12822  005CEC  C015  F0DD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 12823  005CF0  C016  F0DE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 12824  005CF4  C017  F0DF         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 12825  005CF8  0012               	return		;funcret
 12826  005CFA                     __end_of_TMR5_SetInterruptHandler:
 12827                           	callstack 0
 12828                           
 12829 ;; *************** function _SPI1_Initialize *****************
 12830 ;; Defined at:
 12831 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12832 ;; Parameters:    Size  Location     Type
 12833 ;;		None
 12834 ;; Auto vars:     Size  Location     Type
 12835 ;;		None
 12836 ;; Return value:  Size  Location     Type
 12837 ;;                  1    wreg      void 
 12838 ;; Registers used:
 12839 ;;		wreg, status,2
 12840 ;; Tracked objects:
 12841 ;;		On entry : 3F/39
 12842 ;;		On exit  : 3F/3D
 12843 ;;		Unchanged: 0/0
 12844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12849 ;;Total ram usage:        0 bytes
 12850 ;; Hardware stack levels used: 1
 12851 ;; Hardware stack levels required when called: 4
 12852 ;; This function calls:
 12853 ;;		Nothing
 12854 ;; This function is called by:
 12855 ;;		_SYSTEM_Initialize
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           	psect	text62
 12860  005BEA                     __ptext62:
 12861                           	callstack 0
 12862  005BEA                     _SPI1_Initialize:
 12863                           	callstack 25
 12864                           
 12865                           ; BSR set to: 57
 12866                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 12867                           
 12868                           ;incstack = 0
 12869  005BEA  0E02               	movlw	2
 12870  005BEC  013D               	movlb	61	; () banked
 12871  005BEE  6F14               	movwf	20,b	;volatile
 12872                           
 12873                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 12874  005BF0  0E40               	movlw	64
 12875  005BF2  6F15               	movwf	21,b	;volatile
 12876                           
 12877                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 12878  005BF4  0E00               	movlw	0
 12879  005BF6  6F16               	movwf	22,b	;volatile
 12880                           
 12881                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 12882  005BF8  0E00               	movlw	0
 12883  005BFA  6F1C               	movwf	28,b	;volatile
 12884                           
 12885                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x08;
 12886  005BFC  0E08               	movlw	8
 12887  005BFE  6F19               	movwf	25,b	;volatile
 12888                           
 12889                           ; BSR set to: 61
 12890                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 12891  005C00  96C4               	bcf	196,3,c	;volatile
 12892                           
 12893                           ; BSR set to: 61
 12894  005C02  0012               	return		;funcret
 12895  005C04                     __end_of_SPI1_Initialize:
 12896                           	callstack 0
 12897                           
 12898 ;; *************** function _PMD_Initialize *****************
 12899 ;; Defined at:
 12900 ;;		line 82 in file "mcc_generated_files/mcc.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;		None
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;		None
 12905 ;; Return value:  Size  Location     Type
 12906 ;;                  1    wreg      void 
 12907 ;; Registers used:
 12908 ;;		wreg, status,2
 12909 ;; Tracked objects:
 12910 ;;		On entry : 3F/39
 12911 ;;		On exit  : 3F/39
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12918 ;;Total ram usage:        0 bytes
 12919 ;; Hardware stack levels used: 1
 12920 ;; Hardware stack levels required when called: 4
 12921 ;; This function calls:
 12922 ;;		Nothing
 12923 ;; This function is called by:
 12924 ;;		_SYSTEM_Initialize
 12925 ;; This function uses a non-reentrant model
 12926 ;;
 12927                           
 12928                           	psect	text63
 12929  005B6C                     __ptext63:
 12930                           	callstack 0
 12931  005B6C                     _PMD_Initialize:
 12932                           	callstack 25
 12933                           
 12934                           ; BSR set to: 57
 12935                           ;mcc_generated_files/mcc.c: 85:     PMD0 = 0x00;
 12936                           
 12937                           ; BSR set to: 61
 12938                           ;incstack = 0
 12939  005B6C  0E00               	movlw	0
 12940  005B6E  6FC0               	movwf	192,b	;volatile
 12941                           
 12942                           ;mcc_generated_files/mcc.c: 87:     PMD1 = 0x00;
 12943  005B70  0E00               	movlw	0
 12944  005B72  6FC1               	movwf	193,b	;volatile
 12945                           
 12946                           ;mcc_generated_files/mcc.c: 89:     PMD2 = 0x00;
 12947  005B74  0E00               	movlw	0
 12948  005B76  6FC2               	movwf	194,b	;volatile
 12949                           
 12950                           ;mcc_generated_files/mcc.c: 91:     PMD3 = 0x00;
 12951  005B78  0E00               	movlw	0
 12952  005B7A  6FC3               	movwf	195,b	;volatile
 12953                           
 12954                           ;mcc_generated_files/mcc.c: 93:     PMD4 = 0x00;
 12955  005B7C  0E00               	movlw	0
 12956  005B7E  6FC4               	movwf	196,b	;volatile
 12957                           
 12958                           ;mcc_generated_files/mcc.c: 95:     PMD5 = 0x00;
 12959  005B80  0E00               	movlw	0
 12960  005B82  6FC5               	movwf	197,b	;volatile
 12961                           
 12962                           ;mcc_generated_files/mcc.c: 97:     PMD6 = 0x00;
 12963  005B84  0E00               	movlw	0
 12964  005B86  6FC6               	movwf	198,b	;volatile
 12965                           
 12966                           ;mcc_generated_files/mcc.c: 99:     PMD7 = 0x00;
 12967  005B88  0E00               	movlw	0
 12968  005B8A  6FC7               	movwf	199,b	;volatile
 12969                           
 12970                           ; BSR set to: 57
 12971  005B8C  0012               	return		;funcret
 12972  005B8E                     __end_of_PMD_Initialize:
 12973                           	callstack 0
 12974                           
 12975 ;; *************** function _PIN_MANAGER_Initialize *****************
 12976 ;; Defined at:
 12977 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12978 ;; Parameters:    Size  Location     Type
 12979 ;;		None
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;		None
 12982 ;; Return value:  Size  Location     Type
 12983 ;;                  1    wreg      void 
 12984 ;; Registers used:
 12985 ;;		wreg, status,2
 12986 ;; Tracked objects:
 12987 ;;		On entry : 3F/39
 12988 ;;		On exit  : 3F/3A
 12989 ;;		Unchanged: 0/0
 12990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12995 ;;Total ram usage:        0 bytes
 12996 ;; Hardware stack levels used: 1
 12997 ;; Hardware stack levels required when called: 4
 12998 ;; This function calls:
 12999 ;;		Nothing
 13000 ;; This function is called by:
 13001 ;;		_SYSTEM_Initialize
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           	psect	text64
 13006  004B80                     __ptext64:
 13007                           	callstack 0
 13008  004B80                     _PIN_MANAGER_Initialize:
 13009                           	callstack 25
 13010                           
 13011                           ; BSR set to: 57
 13012                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13013                           
 13014                           ; BSR set to: 57
 13015                           ;incstack = 0
 13016  004B80  0E00               	movlw	0
 13017  004B82  6EBE               	movwf	190,c	;volatile
 13018                           
 13019                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 13020  004B84  0E11               	movlw	17
 13021  004B86  6EBD               	movwf	189,c	;volatile
 13022                           
 13023                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 13024  004B88  0E00               	movlw	0
 13025  004B8A  6EBA               	movwf	186,c	;volatile
 13026                           
 13027                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 13028  004B8C  0E00               	movlw	0
 13029  004B8E  6EBF               	movwf	191,c	;volatile
 13030                           
 13031                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 13032  004B90  0E00               	movlw	0
 13033  004B92  6EBB               	movwf	187,c	;volatile
 13034                           
 13035                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
 13036  004B94  0E00               	movlw	0
 13037  004B96  6EBC               	movwf	188,c	;volatile
 13038                           
 13039                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 13040  004B98  0E02               	movlw	2
 13041  004B9A  6EC6               	movwf	198,c	;volatile
 13042                           
 13043                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0F;
 13044  004B9C  0E0F               	movlw	15
 13045  004B9E  6EC7               	movwf	199,c	;volatile
 13046                           
 13047                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 13048  004BA0  0EDF               	movlw	223
 13049  004BA2  6EC2               	movwf	194,c	;volatile
 13050                           
 13051                           ; BSR set to: 57
 13052                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 13053  004BA4  68C3               	setf	195,c	;volatile
 13054                           
 13055                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 13056  004BA6  0E90               	movlw	144
 13057  004BA8  6EC4               	movwf	196,c	;volatile
 13058                           
 13059                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x0C;
 13060  004BAA  0E0C               	movlw	12
 13061  004BAC  6EC5               	movwf	197,c	;volatile
 13062                           
 13063                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x0C;
 13064  004BAE  0E0C               	movlw	12
 13065  004BB0  013A               	movlb	58	; () banked
 13066  004BB2  6F70               	movwf	112,b	;volatile
 13067                           
 13068                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x60;
 13069  004BB4  0E60               	movlw	96
 13070  004BB6  6F60               	movwf	96,b	;volatile
 13071                           
 13072                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 13073  004BB8  0EFE               	movlw	254
 13074  004BBA  6F50               	movwf	80,b	;volatile
 13075                           
 13076                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 13077  004BBC  0E02               	movlw	2
 13078  004BBE  6F80               	movwf	128,b	;volatile
 13079                           
 13080                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0F;
 13081  004BC0  0E0F               	movlw	15
 13082  004BC2  6F90               	movwf	144,b	;volatile
 13083                           
 13084                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 13085  004BC4  0E8F               	movlw	143
 13086  004BC6  6F40               	movwf	64,b	;volatile
 13087                           
 13088                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 13089  004BC8  0E00               	movlw	0
 13090  004BCA  6F71               	movwf	113,b	;volatile
 13091                           
 13092                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 13093  004BCC  0E00               	movlw	0
 13094  004BCE  6F91               	movwf	145,b	;volatile
 13095                           
 13096                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 13097  004BD0  0E00               	movlw	0
 13098  004BD2  6F81               	movwf	129,b	;volatile
 13099                           
 13100                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 13101  004BD4  0E01               	movlw	1
 13102  004BD6  6F51               	movwf	81,b	;volatile
 13103                           
 13104                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 13105  004BD8  0E50               	movlw	80
 13106  004BDA  6F41               	movwf	65,b	;volatile
 13107                           
 13108                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 13109  004BDC  0E00               	movlw	0
 13110  004BDE  6F61               	movwf	97,b	;volatile
 13111                           
 13112                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 13113  004BE0  0E00               	movlw	0
 13114  004BE2  6F5A               	movwf	90,b	;volatile
 13115                           
 13116                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 13117  004BE4  0E00               	movlw	0
 13118  004BE6  6F5B               	movwf	91,b	;volatile
 13119                           
 13120                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 13121  004BE8  0E00               	movlw	0
 13122  004BEA  6F6A               	movwf	106,b	;volatile
 13123                           
 13124                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 13125  004BEC  0E00               	movlw	0
 13126  004BEE  6F6B               	movwf	107,b	;volatile
 13127                           
 13128                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 13129  004BF0  0E00               	movlw	0
 13130  004BF2  6F7A               	movwf	122,b	;volatile
 13131                           
 13132                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 13133  004BF4  0E00               	movlw	0
 13134  004BF6  6F7B               	movwf	123,b	;volatile
 13135                           
 13136                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 13137  004BF8  0E00               	movlw	0
 13138  004BFA  6F82               	movwf	130,b	;volatile
 13139                           
 13140                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 13141  004BFC  0E00               	movlw	0
 13142  004BFE  6F92               	movwf	146,b	;volatile
 13143                           
 13144                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 13145  004C00  0E00               	movlw	0
 13146  004C02  6F42               	movwf	66,b	;volatile
 13147                           
 13148                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 13149  004C04  0E00               	movlw	0
 13150  004C06  6F52               	movwf	82,b	;volatile
 13151                           
 13152                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 13153  004C08  0E00               	movlw	0
 13154  004C0A  6F62               	movwf	98,b	;volatile
 13155                           
 13156                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 13157  004C0C  0E00               	movlw	0
 13158  004C0E  6F72               	movwf	114,b	;volatile
 13159                           
 13160                           ; BSR set to: 58
 13161                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 13162  004C10  6943               	setf	67,b	;volatile
 13163                           
 13164                           ; BSR set to: 58
 13165                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 13166  004C12  6953               	setf	83,b	;volatile
 13167                           
 13168                           ; BSR set to: 58
 13169                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 13170  004C14  6963               	setf	99,b	;volatile
 13171                           
 13172                           ; BSR set to: 58
 13173                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 13174  004C16  6973               	setf	115,b	;volatile
 13175                           
 13176                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 13177  004C18  0E07               	movlw	7
 13178  004C1A  6F83               	movwf	131,b	;volatile
 13179                           
 13180                           ; BSR set to: 58
 13181                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 13182  004C1C  6993               	setf	147,b	;volatile
 13183                           
 13184                           ; BSR set to: 58
 13185                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 13186  004C1E  6944               	setf	68,b	;volatile
 13187                           
 13188                           ; BSR set to: 58
 13189                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 13190  004C20  6954               	setf	84,b	;volatile
 13191                           
 13192                           ; BSR set to: 58
 13193                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 13194  004C22  6964               	setf	100,b	;volatile
 13195                           
 13196                           ; BSR set to: 58
 13197                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 13198  004C24  6974               	setf	116,b	;volatile
 13199                           
 13200                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 13201  004C26  0E0F               	movlw	15
 13202  004C28  6F84               	movwf	132,b	;volatile
 13203                           
 13204                           ; BSR set to: 58
 13205                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 13206  004C2A  6994               	setf	148,b	;volatile
 13207                           
 13208                           ;mcc_generated_files/pin_manager.c: 144:     SPI1SCKPPS = 0x13;
 13209  004C2C  0E13               	movlw	19
 13210  004C2E  6FDE               	movwf	222,b	;volatile
 13211                           
 13212                           ;mcc_generated_files/pin_manager.c: 145:     RC3PPS = 0x1E;
 13213  004C30  0E1E               	movlw	30
 13214  004C32  6F13               	movwf	19,b	;volatile
 13215                           
 13216                           ;mcc_generated_files/pin_manager.c: 146:     RC5PPS = 0x1F;
 13217  004C34  0E1F               	movlw	31
 13218  004C36  6F15               	movwf	21,b	;volatile
 13219                           
 13220                           ;mcc_generated_files/pin_manager.c: 147:     RC6PPS = 0x13;
 13221  004C38  0E13               	movlw	19
 13222  004C3A  6F16               	movwf	22,b	;volatile
 13223                           
 13224                           ;mcc_generated_files/pin_manager.c: 148:     U1RXPPS = 0x17;
 13225  004C3C  0E17               	movlw	23
 13226  004C3E  6FE5               	movwf	229,b	;volatile
 13227                           
 13228                           ;mcc_generated_files/pin_manager.c: 149:     SPI1SDIPPS = 0x14;
 13229  004C40  0E14               	movlw	20
 13230  004C42  6FDF               	movwf	223,b	;volatile
 13231                           
 13232                           ; BSR set to: 58
 13233  004C44  0012               	return		;funcret
 13234  004C46                     __end_of_PIN_MANAGER_Initialize:
 13235                           	callstack 0
 13236                           
 13237 ;; *************** function _OSCILLATOR_Initialize *****************
 13238 ;; Defined at:
 13239 ;;		line 64 in file "mcc_generated_files/mcc.c"
 13240 ;; Parameters:    Size  Location     Type
 13241 ;;		None
 13242 ;; Auto vars:     Size  Location     Type
 13243 ;;		None
 13244 ;; Return value:  Size  Location     Type
 13245 ;;                  1    wreg      void 
 13246 ;; Registers used:
 13247 ;;		wreg, status,2
 13248 ;; Tracked objects:
 13249 ;;		On entry : 3F/3A
 13250 ;;		On exit  : 3F/39
 13251 ;;		Unchanged: 0/0
 13252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13257 ;;Total ram usage:        0 bytes
 13258 ;; Hardware stack levels used: 1
 13259 ;; Hardware stack levels required when called: 4
 13260 ;; This function calls:
 13261 ;;		Nothing
 13262 ;; This function is called by:
 13263 ;;		_SYSTEM_Initialize
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           	psect	text65
 13268  005BCE                     __ptext65:
 13269                           	callstack 0
 13270  005BCE                     _OSCILLATOR_Initialize:
 13271                           	callstack 25
 13272                           
 13273                           ; BSR set to: 58
 13274                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x20;
 13275                           
 13276                           ; BSR set to: 58
 13277                           ;incstack = 0
 13278  005BCE  0E20               	movlw	32
 13279  005BD0  0139               	movlb	57	; () banked
 13280  005BD2  6FD9               	movwf	217,b	;volatile
 13281                           
 13282                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 13283  005BD4  0E00               	movlw	0
 13284  005BD6  6FDB               	movwf	219,b	;volatile
 13285                           
 13286                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 13287  005BD8  0E00               	movlw	0
 13288  005BDA  6FDD               	movwf	221,b	;volatile
 13289                           
 13290                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x05;
 13291  005BDC  0E05               	movlw	5
 13292  005BDE  6FDF               	movwf	223,b	;volatile
 13293                           
 13294                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 13295  005BE0  0E00               	movlw	0
 13296  005BE2  6FDE               	movwf	222,b	;volatile
 13297  005BE4                     l185:
 13298                           
 13299                           ; BSR set to: 57
 13300                           ;mcc_generated_files/mcc.c: 77:     while(PLLR == 0)
 13301  005BE4  B1DC               	btfsc	220,0,b	;volatile
 13302  005BE6  0012               	return	
 13303  005BE8  D7FD               	goto	l185
 13304  005BEA                     __end_of_OSCILLATOR_Initialize:
 13305                           	callstack 0
 13306                           
 13307 ;; *************** function _INTERRUPT_Initialize *****************
 13308 ;; Defined at:
 13309 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;		None
 13312 ;; Auto vars:     Size  Location     Type
 13313 ;;  state           1   20[COMRAM] _Bool 
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  1    wreg      void 
 13316 ;; Registers used:
 13317 ;;		wreg, status,2
 13318 ;; Tracked objects:
 13319 ;;		On entry : 3F/0
 13320 ;;		On exit  : 3F/39
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13326 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13327 ;;Total ram usage:        1 bytes
 13328 ;; Hardware stack levels used: 1
 13329 ;; Hardware stack levels required when called: 4
 13330 ;; This function calls:
 13331 ;;		Nothing
 13332 ;; This function is called by:
 13333 ;;		_SYSTEM_Initialize
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337                           	psect	text66
 13338  0056FC                     __ptext66:
 13339                           	callstack 0
 13340  0056FC                     _INTERRUPT_Initialize:
 13341                           	callstack 25
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13345                           
 13346                           ; BSR set to: 57
 13347                           ;incstack = 0
 13348  0056FC  8AD2               	bsf	210,5,c	;volatile
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13352  0056FE  0E00               	movlw	0
 13353  005700  BED2               	btfsc	16338,7,c	;volatile
 13354  005702  0E01               	movlw	1
 13355  005704  6E15               	movwf	INTERRUPT_Initialize@state^0,c
 13356                           
 13357                           ; BSR set to: 0
 13358                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13359  005706  9ED2               	bcf	16338,7,c	;volatile
 13360                           
 13361                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13362  005708  0E55               	movlw	85
 13363  00570A  6ED4               	movwf	212,c	;volatile
 13364                           
 13365                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13366  00570C  0EAA               	movlw	170
 13367  00570E  6ED4               	movwf	212,c	;volatile
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13371  005710  90D4               	bcf	212,0,c	;volatile
 13372                           
 13373                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 13374  005712  0E00               	movlw	0
 13375  005714  6ED7               	movwf	215,c	;volatile
 13376                           
 13377                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 13378  005716  0E00               	movlw	0
 13379  005718  6ED6               	movwf	214,c	;volatile
 13380                           
 13381                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 13382  00571A  0E08               	movlw	8
 13383  00571C  6ED5               	movwf	213,c	;volatile
 13384                           
 13385                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13386  00571E  0E55               	movlw	85
 13387  005720  6ED4               	movwf	212,c	;volatile
 13388                           
 13389                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13390  005722  0EAA               	movlw	170
 13391  005724  6ED4               	movwf	212,c	;volatile
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13395  005726  80D4               	bsf	212,0,c	;volatile
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13399  005728  B015               	btfsc	INTERRUPT_Initialize@state^0,0,c
 13400  00572A  D002               	bra	u12085
 13401  00572C  9ED2               	bcf	16338,7,c	;volatile
 13402  00572E  D001               	bra	u12086
 13403  005730                     u12085:
 13404  005730  8ED2               	bsf	16338,7,c	;volatile
 13405  005732                     u12086:
 13406                           
 13407                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 13408  005732  0139               	movlb	57	; () banked
 13409  005734  8983               	bsf	131,4,b	;volatile
 13410                           
 13411                           ; BSR set to: 57
 13412                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 13413  005736  8783               	bsf	131,3,b	;volatile
 13414                           
 13415                           ; BSR set to: 57
 13416                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR9bits.TMR6IP = 1;
 13417  005738  8189               	bsf	137,0,b	;volatile
 13418                           
 13419                           ; BSR set to: 57
 13420                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR8bits.TMR5IP = 1;
 13421  00573A  8D88               	bsf	136,6,b	;volatile
 13422                           
 13423                           ; BSR set to: 57
 13424                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.ADIP = 1;
 13425  00573C  8581               	bsf	129,2,b	;volatile
 13426                           
 13427                           ; BSR set to: 57
 13428  00573E  0012               	return		;funcret
 13429  005740                     __end_of_INTERRUPT_Initialize:
 13430                           	callstack 0
 13431                           
 13432 ;; *************** function _DAC1_Initialize *****************
 13433 ;; Defined at:
 13434 ;;		line 58 in file "mcc_generated_files/dac1.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;		None
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;		None
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  1    wreg      void 
 13441 ;; Registers used:
 13442 ;;		wreg, status,2
 13443 ;; Tracked objects:
 13444 ;;		On entry : 3B/39
 13445 ;;		On exit  : 3F/3E
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13452 ;;Total ram usage:        0 bytes
 13453 ;; Hardware stack levels used: 1
 13454 ;; Hardware stack levels required when called: 4
 13455 ;; This function calls:
 13456 ;;		Nothing
 13457 ;; This function is called by:
 13458 ;;		_SYSTEM_Initialize
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           	psect	text67
 13463  005D08                     __ptext67:
 13464                           	callstack 0
 13465  005D08                     _DAC1_Initialize:
 13466                           	callstack 25
 13467                           
 13468                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 13469                           
 13470                           ; BSR set to: 57
 13471                           ;incstack = 0
 13472  005D08  0EA4               	movlw	164
 13473  005D0A  013E               	movlb	62	; () banked
 13474  005D0C  6F9E               	movwf	158,b	;volatile
 13475                           
 13476                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 13477  005D0E  0E1F               	movlw	31
 13478  005D10  6F9C               	movwf	156,b	;volatile
 13479                           
 13480                           ; BSR set to: 62
 13481  005D12  0012               	return		;funcret
 13482  005D14                     __end_of_DAC1_Initialize:
 13483                           	callstack 0
 13484                           
 13485 ;; *************** function _ADCC_Initialize *****************
 13486 ;; Defined at:
 13487 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;		None
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  1    wreg      void 
 13494 ;; Registers used:
 13495 ;;		wreg, status,2, status,0, cstack
 13496 ;; Tracked objects:
 13497 ;;		On entry : 3B/39
 13498 ;;		On exit  : 3B/39
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13505 ;;Total ram usage:        0 bytes
 13506 ;; Hardware stack levels used: 1
 13507 ;; Hardware stack levels required when called: 5
 13508 ;; This function calls:
 13509 ;;		_ADCC_SetADIInterruptHandler
 13510 ;; This function is called by:
 13511 ;;		_SYSTEM_Initialize
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           	psect	text68
 13516  005336                     __ptext68:
 13517                           	callstack 0
 13518  005336                     _ADCC_Initialize:
 13519                           	callstack 24
 13520                           
 13521                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13522                           
 13523                           ; BSR set to: 62
 13524                           ;incstack = 0
 13525  005336  0E00               	movlw	0
 13526  005338  013E               	movlb	62	; () banked
 13527  00533A  6FDE               	movwf	222,b	;volatile
 13528                           
 13529                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13530  00533C  0E00               	movlw	0
 13531  00533E  6FDF               	movwf	223,b	;volatile
 13532                           
 13533                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13534  005340  0E00               	movlw	0
 13535  005342  6FE0               	movwf	224,b	;volatile
 13536                           
 13537                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13538  005344  0E00               	movlw	0
 13539  005346  6FE1               	movwf	225,b	;volatile
 13540                           
 13541                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13542  005348  0E00               	movlw	0
 13543  00534A  6FE4               	movwf	228,b	;volatile
 13544                           
 13545                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13546  00534C  0E00               	movlw	0
 13547  00534E  6FE5               	movwf	229,b	;volatile
 13548                           
 13549                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13550  005350  0E00               	movlw	0
 13551  005352  6FEA               	movwf	234,b	;volatile
 13552                           
 13553                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13554  005354  0E00               	movlw	0
 13555  005356  6FEC               	movwf	236,b	;volatile
 13556                           
 13557                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13558  005358  0E00               	movlw	0
 13559  00535A  6FF1               	movwf	241,b	;volatile
 13560                           
 13561                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 13562  00535C  0E10               	movlw	16
 13563  00535E  6FF3               	movwf	243,b	;volatile
 13564                           
 13565                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13566  005360  0E00               	movlw	0
 13567  005362  6FF4               	movwf	244,b	;volatile
 13568                           
 13569                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13570  005364  0E00               	movlw	0
 13571  005366  6FF5               	movwf	245,b	;volatile
 13572                           
 13573                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13574  005368  0E00               	movlw	0
 13575  00536A  6FF6               	movwf	246,b	;volatile
 13576                           
 13577                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13578  00536C  0E00               	movlw	0
 13579  00536E  6FF7               	movwf	247,b	;volatile
 13580                           
 13581                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13582  005370  0E00               	movlw	0
 13583  005372  6FF9               	movwf	249,b	;volatile
 13584                           
 13585                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13586  005374  0E00               	movlw	0
 13587  005376  6FFA               	movwf	250,b	;volatile
 13588                           
 13589                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 13590  005378  0E00               	movlw	0
 13591  00537A  6FFB               	movwf	251,b	;volatile
 13592                           
 13593                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13594  00537C  0E00               	movlw	0
 13595  00537E  6FFC               	movwf	252,b	;volatile
 13596                           
 13597                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13598  005380  0E02               	movlw	2
 13599  005382  6FFD               	movwf	253,b	;volatile
 13600                           
 13601                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 13602  005384  0E07               	movlw	7
 13603  005386  6FFE               	movwf	254,b	;volatile
 13604                           
 13605                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13606  005388  0E00               	movlw	0
 13607  00538A  6FFF               	movwf	255,b	;volatile
 13608                           
 13609                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 13610  00538C  0E94               	movlw	148
 13611  00538E  6FF8               	movwf	248,b	;volatile
 13612                           
 13613                           ; BSR set to: 62
 13614                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 13615  005390  0139               	movlb	57	; () banked
 13616  005392  95A1               	bcf	161,2,b	;volatile
 13617                           
 13618                           ; BSR set to: 57
 13619                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 13620  005394  8591               	bsf	145,2,b	;volatile
 13621                           
 13622                           ; BSR set to: 57
 13623                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 13624  005396  0E38               	movlw	low _ADCC_DefaultInterruptHandler
 13625  005398  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
 13626  00539A  0E5D               	movlw	high _ADCC_DefaultInterruptHandler
 13627  00539C  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
 13628  00539E  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 13629  0053A0  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
 13630  0053A2  EC7D  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 13631  0053A6  0012               	return		;funcret
 13632  0053A8                     __end_of_ADCC_Initialize:
 13633                           	callstack 0
 13634                           
 13635 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 13636 ;; Defined at:
 13637 ;;		line 316 in file "mcc_generated_files/adcc.c"
 13638 ;; Parameters:    Size  Location     Type
 13639 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 13640 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 13641 ;; Auto vars:     Size  Location     Type
 13642 ;;		None
 13643 ;; Return value:  Size  Location     Type
 13644 ;;                  1    wreg      void 
 13645 ;; Registers used:
 13646 ;;		wreg, status,2, status,0
 13647 ;; Tracked objects:
 13648 ;;		On entry : 3B/3D
 13649 ;;		On exit  : 3B/39
 13650 ;;		Unchanged: 3A/0
 13651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13652 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13655 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13656 ;;Total ram usage:        3 bytes
 13657 ;; Hardware stack levels used: 1
 13658 ;; Hardware stack levels required when called: 4
 13659 ;; This function calls:
 13660 ;;		Nothing
 13661 ;; This function is called by:
 13662 ;;		_ADCC_Initialize
 13663 ;;		_main
 13664 ;; This function uses a non-reentrant model
 13665 ;;
 13666                           
 13667                           	psect	text69
 13668  005CFA                     __ptext69:
 13669                           	callstack 0
 13670  005CFA                     _ADCC_SetADIInterruptHandler:
 13671                           	callstack 24
 13672                           
 13673                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 13674                           
 13675                           ;incstack = 0
 13676  005CFA  C015  F0EC         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 13677  005CFE  C016  F0ED         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 13678  005D02  C017  F0EE         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 13679  005D06  0012               	return		;funcret
 13680  005D08                     __end_of_ADCC_SetADIInterruptHandler:
 13681                           	callstack 0
 13682                           
 13683 ;; *************** function _DAC1_SetOutput *****************
 13684 ;; Defined at:
 13685 ;;		line 66 in file "mcc_generated_files/dac1.c"
 13686 ;; Parameters:    Size  Location     Type
 13687 ;;  inputData       1    wreg     unsigned char 
 13688 ;; Auto vars:     Size  Location     Type
 13689 ;;  inputData       1   20[COMRAM] unsigned char 
 13690 ;; Return value:  Size  Location     Type
 13691 ;;                  1    wreg      void 
 13692 ;; Registers used:
 13693 ;;		wreg
 13694 ;; Tracked objects:
 13695 ;;		On entry : 0/3D
 13696 ;;		On exit  : 0/0
 13697 ;;		Unchanged: 0/0
 13698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13703 ;;Total ram usage:        1 bytes
 13704 ;; Hardware stack levels used: 1
 13705 ;; Hardware stack levels required when called: 4
 13706 ;; This function calls:
 13707 ;;		Nothing
 13708 ;; This function is called by:
 13709 ;;		_main
 13710 ;; This function uses a non-reentrant model
 13711 ;;
 13712                           
 13713                           	psect	text70
 13714  005D1E                     __ptext70:
 13715                           	callstack 0
 13716  005D1E                     _DAC1_SetOutput:
 13717                           	callstack 26
 13718                           
 13719                           ;incstack = 0
 13720                           ;DAC1_SetOutput@inputData stored from wreg
 13721  005D1E  6E15               	movwf	DAC1_SetOutput@inputData^0,c
 13722                           
 13723                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 13724  005D20  0060  F057  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 13725  005D26  0012               	return		;funcret
 13726  005D28                     __end_of_DAC1_SetOutput:
 13727                           	callstack 0
 13728                           
 13729 ;; *************** function _DAC1_GetOutput *****************
 13730 ;; Defined at:
 13731 ;;		line 71 in file "mcc_generated_files/dac1.c"
 13732 ;; Parameters:    Size  Location     Type
 13733 ;;		None
 13734 ;; Auto vars:     Size  Location     Type
 13735 ;;		None
 13736 ;; Return value:  Size  Location     Type
 13737 ;;                  1    wreg      unsigned char 
 13738 ;; Registers used:
 13739 ;;		wreg, status,2
 13740 ;; Tracked objects:
 13741 ;;		On entry : 3F/2
 13742 ;;		On exit  : 3F/3E
 13743 ;;		Unchanged: 0/0
 13744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13749 ;;Total ram usage:        0 bytes
 13750 ;; Hardware stack levels used: 1
 13751 ;; Hardware stack levels required when called: 4
 13752 ;; This function calls:
 13753 ;;		Nothing
 13754 ;; This function is called by:
 13755 ;;		_main
 13756 ;; This function uses a non-reentrant model
 13757 ;;
 13758                           
 13759                           	psect	text71
 13760  005D28                     __ptext71:
 13761                           	callstack 0
 13762  005D28                     _DAC1_GetOutput:
 13763                           	callstack 26
 13764                           
 13765                           ; BSR set to: 2
 13766                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 13767                           
 13768                           ;incstack = 0
 13769  005D28  013E               	movlb	62	; () banked
 13770  005D2A  519C               	movf	156,w,b	;volatile
 13771                           
 13772                           ; BSR set to: 62
 13773  005D2C  0012               	return		;funcret
 13774  005D2E                     __end_of_DAC1_GetOutput:
 13775                           	callstack 0
 13776                           
 13777 ;; *************** function _ADCC_ISR *****************
 13778 ;; Defined at:
 13779 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;		None
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;		None
 13784 ;; Return value:  Size  Location     Type
 13785 ;;                  1    wreg      void 
 13786 ;; Registers used:
 13787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13797 ;;Total ram usage:        2 bytes
 13798 ;; Hardware stack levels used: 1
 13799 ;; Hardware stack levels required when called: 2
 13800 ;; This function calls:
 13801 ;;		Absolute function
 13802 ;;		_ADCC_DefaultInterruptHandler
 13803 ;;		_Adc_Isr
 13804 ;; This function is called by:
 13805 ;;		Interrupt level 2
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           
 13809                           	psect	text72
 13810  005740                     __ptext72:
 13811                           	callstack 0
 13812  005740                     _ADCC_ISR:
 13813                           	callstack 17
 13814                           
 13815                           ; BSR set to: 62
 13816                           ;incstack = 0
 13817  005740  006F FFE8  F006    	movff	pclath,??_ADCC_ISR
 13818  005746  006F FFEC  F007    	movff	pclatu,??_ADCC_ISR+1
 13819                           
 13820                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13821  00574C  0139               	movlb	57	; () banked
 13822  00574E  95A1               	bcf	161,2,b	;volatile
 13823                           
 13824                           ; BSR set to: 57
 13825                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13826  005750  0100               	movlb	0	; () banked
 13827  005752  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 13828  005754  11ED               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 13829  005756  11EE               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 13830  005758  B4D8               	btfsc	status,2,c
 13831  00575A  D00C               	goto	i2u628_49
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13835  00575C  D801               	call	i2u628_48
 13836  00575E  D00A               	goto	i2u628_49
 13837  005760                     i2u628_48:
 13838  005760  0005               	push	
 13839  005762  6EFA               	movwf	pclath,c
 13840  005764  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 13841  005766  6EFD               	movwf	tosl,c
 13842  005768  51ED               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 13843  00576A  6EFE               	movwf	tosh,c
 13844  00576C  51EE               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 13845  00576E  6EFF               	movwf	tosu,c
 13846  005770  50FA               	movf	pclath,w,c
 13847  005772  0012               	return		;indir
 13848  005774                     i2u628_49:
 13849  005774  0060  F01F  FFFB   	movff	??_ADCC_ISR+1,pclatu
 13850  00577A  0060  F01B  FFFA   	movff	??_ADCC_ISR,pclath
 13851  005780  0011               	retfie		f
 13852  005782                     __end_of_ADCC_ISR:
 13853                           	callstack 0
 13854                           
 13855 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13856 ;; Defined at:
 13857 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13858 ;; Parameters:    Size  Location     Type
 13859 ;;		None
 13860 ;; Auto vars:     Size  Location     Type
 13861 ;;		None
 13862 ;; Return value:  Size  Location     Type
 13863 ;;                  1    wreg      void 
 13864 ;; Registers used:
 13865 ;;		None
 13866 ;; Tracked objects:
 13867 ;;		On entry : 3F/0
 13868 ;;		On exit  : 3F/0
 13869 ;;		Unchanged: 3F/0
 13870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13875 ;;Total ram usage:        0 bytes
 13876 ;; Hardware stack levels used: 1
 13877 ;; This function calls:
 13878 ;;		Nothing
 13879 ;; This function is called by:
 13880 ;;		_ADCC_Initialize
 13881 ;;		_ADCC_ISR
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           	psect	text73
 13886  005D38                     __ptext73:
 13887                           	callstack 0
 13888  005D38                     _ADCC_DefaultInterruptHandler:
 13889                           	callstack 18
 13890                           
 13891                           ; BSR set to: 0
 13892                           
 13893                           ;incstack = 0
 13894  005D38  0012               	return		;funcret
 13895  005D3A                     __end_of_ADCC_DefaultInterruptHandler:
 13896                           	callstack 0
 13897                           
 13898 ;; *************** function _Adc_Isr *****************
 13899 ;; Defined at:
 13900 ;;		line 83 in file "main.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;		None
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;		None
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  1    wreg      void 
 13907 ;; Registers used:
 13908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13909 ;; Tracked objects:
 13910 ;;		On entry : 3F/0
 13911 ;;		On exit  : 3F/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13918 ;;Total ram usage:        1 bytes
 13919 ;; Hardware stack levels used: 1
 13920 ;; Hardware stack levels required when called: 1
 13921 ;; This function calls:
 13922 ;;		_ADCC_GetConversionResult
 13923 ;; This function is called by:
 13924 ;;		_main
 13925 ;;		_ADCC_ISR
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text74
 13930  00592E                     __ptext74:
 13931                           	callstack 0
 13932  00592E                     _Adc_Isr:
 13933                           	callstack 17
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;main.c: 85:  ana[adc_chan] = ADCC_GetConversionResult();
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;incstack = 0
 13940  00592E  EC1A  F02E         	call	_ADCC_GetConversionResult	;wreg free
 13941  005932  5044               	movf	_adc_chan^0,w,c
 13942  005934  0D02               	mullw	2
 13943  005936  50F3               	movf	243,w,c
 13944  005938  0F39               	addlw	low _ana
 13945  00593A  6ED9               	movwf	fsr2l,c
 13946  00593C  6ADA               	clrf	fsr2h,c
 13947  00593E  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 13948  005944  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 13949                           
 13950                           ; BSR set to: 62
 13951                           ;main.c: 86:  if (adc_chan++ >= 2) {
 13952  00594A  2A44               	incf	_adc_chan^0,f,c	;volatile
 13953  00594C  0444               	decf	_adc_chan^0,w,c	;volatile
 13954  00594E  6E05               	movwf	??_Adc_Isr^0,c
 13955  005950  0E01               	movlw	1
 13956  005952  6405               	cpfsgt	??_Adc_Isr^0,c
 13957  005954  D002               	goto	i2l6188
 13958                           
 13959                           ; BSR set to: 62
 13960                           ;main.c: 87:   adc_chan = 0;
 13961  005956  0E00               	movlw	0
 13962  005958  6E44               	movwf	_adc_chan^0,c	;volatile
 13963  00595A                     i2l6188:
 13964                           
 13965                           ; BSR set to: 62
 13966                           ;main.c: 89:  ADPCH = adc_chan;
 13967  00595A  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
 13968                           
 13969                           ;main.c: 93:  adc_tick = 1;
 13970  005960  0E01               	movlw	1
 13971  005962  0100               	movlb	0	; () banked
 13972  005964  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
 13973                           
 13974                           ; BSR set to: 0
 13975  005966  0012               	return		;funcret
 13976  005968                     __end_of_Adc_Isr:
 13977                           	callstack 0
 13978                           
 13979 ;; *************** function _ADCC_GetConversionResult *****************
 13980 ;; Defined at:
 13981 ;;		line 139 in file "mcc_generated_files/adcc.c"
 13982 ;; Parameters:    Size  Location     Type
 13983 ;;		None
 13984 ;; Auto vars:     Size  Location     Type
 13985 ;;		None
 13986 ;; Return value:  Size  Location     Type
 13987 ;;                  2    0[COMRAM] unsigned short 
 13988 ;; Registers used:
 13989 ;;		wreg, status,2, status,0
 13990 ;; Tracked objects:
 13991 ;;		On entry : 3F/0
 13992 ;;		On exit  : 3F/3E
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13998 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13999 ;;Total ram usage:        4 bytes
 14000 ;; Hardware stack levels used: 1
 14001 ;; This function calls:
 14002 ;;		Nothing
 14003 ;; This function is called by:
 14004 ;;		_Adc_Isr
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           	psect	text75
 14009  005C34                     __ptext75:
 14010                           	callstack 0
 14011  005C34                     _ADCC_GetConversionResult:
 14012                           	callstack 17
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;incstack = 0
 14019  005C34  013E               	movlb	62	; () banked
 14020  005C36  51F0               	movf	240,w,b	;volatile
 14021  005C38  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 14022  005C3A  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 14023  005C3C  51EF               	movf	239,w,b	;volatile
 14024  005C3E  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 14025  005C40  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 14026  005C42  0E00               	movlw	0
 14027  005C44  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 14028  005C46  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 14029                           
 14030                           ; BSR set to: 62
 14031  005C48  0012               	return		;funcret
 14032  005C4A                     __end_of_ADCC_GetConversionResult:
 14033                           	callstack 0
 14034                           
 14035 ;; *************** function _TMR6_ISR *****************
 14036 ;; Defined at:
 14037 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 14038 ;; Parameters:    Size  Location     Type
 14039 ;;		None
 14040 ;; Auto vars:     Size  Location     Type
 14041 ;;		None
 14042 ;; Return value:  Size  Location     Type
 14043 ;;                  1    wreg      void 
 14044 ;; Registers used:
 14045 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14046 ;; Tracked objects:
 14047 ;;		On entry : 0/0
 14048 ;;		On exit  : 0/0
 14049 ;;		Unchanged: 0/0
 14050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14055 ;;Total ram usage:        2 bytes
 14056 ;; Hardware stack levels used: 1
 14057 ;; Hardware stack levels required when called: 2
 14058 ;; This function calls:
 14059 ;;		_TMR6_CallBack
 14060 ;; This function is called by:
 14061 ;;		Interrupt level 2
 14062 ;; This function uses a non-reentrant model
 14063 ;;
 14064                           
 14065                           	psect	text76
 14066  005968                     __ptext76:
 14067                           	callstack 0
 14068  005968                     _TMR6_ISR:
 14069                           	callstack 17
 14070                           
 14071                           ; BSR set to: 62
 14072                           ;incstack = 0
 14073  005968  006F FFE8  F009    	movff	pclath,??_TMR6_ISR
 14074  00596E  006F FFEC  F00A    	movff	pclatu,??_TMR6_ISR+1
 14075                           
 14076                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 14077  005974  0139               	movlb	57	; () banked
 14078  005976  91A9               	bcf	169,0,b	;volatile
 14079                           
 14080                           ; BSR set to: 57
 14081                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 14082  005978  4A41               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 14083  00597A  2A42               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 14084  00597C  5042               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 14085  00597E  E104               	bnz	i2u629_40
 14086  005980  0E17               	movlw	23
 14087  005982  5C41               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 14088  005984  A0D8               	btfss	status,0,c
 14089  005986  D006               	goto	i2l454
 14090  005988                     i2u629_40:
 14091                           
 14092                           ; BSR set to: 57
 14093                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 14094  005988  EC81  F02D         	call	_TMR6_CallBack	;wreg free
 14095                           
 14096                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 14097  00598C  0E00               	movlw	0
 14098  00598E  6E42               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 14099  005990  0E00               	movlw	0
 14100  005992  6E41               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 14101  005994                     i2l454:
 14102  005994  0060  F02B  FFFB   	movff	??_TMR6_ISR+1,pclatu
 14103  00599A  0060  F027  FFFA   	movff	??_TMR6_ISR,pclath
 14104  0059A0  0011               	retfie		f
 14105  0059A2                     __end_of_TMR6_ISR:
 14106                           	callstack 0
 14107                           
 14108 ;; *************** function _TMR6_CallBack *****************
 14109 ;; Defined at:
 14110 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;		None
 14113 ;; Auto vars:     Size  Location     Type
 14114 ;;		None
 14115 ;; Return value:  Size  Location     Type
 14116 ;;                  1    wreg      void 
 14117 ;; Registers used:
 14118 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14119 ;; Tracked objects:
 14120 ;;		On entry : 3F/39
 14121 ;;		On exit  : 0/0
 14122 ;;		Unchanged: 0/0
 14123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14128 ;;Total ram usage:        0 bytes
 14129 ;; Hardware stack levels used: 1
 14130 ;; Hardware stack levels required when called: 1
 14131 ;; This function calls:
 14132 ;;		Absolute function
 14133 ;;		_Led_Blink
 14134 ;;		_TMR6_DefaultInterruptHandler
 14135 ;; This function is called by:
 14136 ;;		_TMR6_ISR
 14137 ;; This function uses a non-reentrant model
 14138 ;;
 14139                           
 14140                           	psect	text77
 14141  005B02                     __ptext77:
 14142                           	callstack 0
 14143  005B02                     _TMR6_CallBack:
 14144                           	callstack 17
 14145                           
 14146                           ; BSR set to: 57
 14147                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 14148                           
 14149                           ;incstack = 0
 14150  005B02  0100               	movlb	0	; () banked
 14151  005B04  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14152  005B06  11EA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14153  005B08  11EB               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14154  005B0A  B4D8               	btfsc	status,2,c
 14155  005B0C  0012               	return	
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 14159  005B0E  D801               	call	i2u601_48
 14160  005B10  0012               	return	
 14161  005B12                     i2u601_48:
 14162  005B12  0005               	push	
 14163  005B14  6EFA               	movwf	pclath,c
 14164  005B16  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14165  005B18  6EFD               	movwf	tosl,c
 14166  005B1A  51EA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14167  005B1C  6EFE               	movwf	tosh,c
 14168  005B1E  51EB               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14169  005B20  6EFF               	movwf	tosu,c
 14170  005B22  50FA               	movf	pclath,w,c
 14171  005B24  0012               	return		;indir
 14172  005B26                     __end_of_TMR6_CallBack:
 14173                           	callstack 0
 14174                           
 14175 ;; *************** function _Led_Blink *****************
 14176 ;; Defined at:
 14177 ;;		line 67 in file "main.c"
 14178 ;; Parameters:    Size  Location     Type
 14179 ;;		None
 14180 ;; Auto vars:     Size  Location     Type
 14181 ;;		None
 14182 ;; Return value:  Size  Location     Type
 14183 ;;                  1    wreg      void 
 14184 ;; Registers used:
 14185 ;;		wreg, status,2, status,0
 14186 ;; Tracked objects:
 14187 ;;		On entry : 3F/0
 14188 ;;		On exit  : 3F/0
 14189 ;;		Unchanged: 0/0
 14190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14195 ;;Total ram usage:        1 bytes
 14196 ;; Hardware stack levels used: 1
 14197 ;; This function calls:
 14198 ;;		Nothing
 14199 ;; This function is called by:
 14200 ;;		_main
 14201 ;;		_TMR6_CallBack
 14202 ;; This function uses a non-reentrant model
 14203 ;;
 14204                           
 14205                           	psect	text78
 14206  005BB0                     __ptext78:
 14207                           	callstack 0
 14208  005BB0                     _Led_Blink:
 14209                           	callstack 17
 14210                           
 14211                           ; BSR set to: 0
 14212                           
 14213                           ; BSR set to: 0
 14214                           
 14215                           ;incstack = 0
 14216                           ;main.c: 69:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 14217  005BB0  A0BE               	btfss	190,0,c	;volatile
 14218  005BB2  D002               	goto	i2u592_40
 14219  005BB4  0E01               	movlw	1
 14220  005BB6  D001               	goto	i2u592_46
 14221  005BB8                     i2u592_40:
 14222  005BB8  0E00               	movlw	0
 14223  005BBA                     i2u592_46:
 14224  005BBA  0AFF               	xorlw	255
 14225  005BBC  6E08               	movwf	??_Led_Blink^0,c
 14226  005BBE  50BE               	movf	190,w,c	;volatile
 14227  005BC0  1808               	xorwf	??_Led_Blink^0,w,c
 14228  005BC2  0BFE               	andlw	-2
 14229  005BC4  1808               	xorwf	??_Led_Blink^0,w,c
 14230  005BC6  6EBE               	movwf	190,c	;volatile
 14231                           
 14232                           ; BSR set to: 0
 14233                           ;main.c: 73:  disp_tick = 1;
 14234  005BC8  0E01               	movlw	1
 14235  005BCA  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
 14236                           
 14237                           ; BSR set to: 0
 14238  005BCC  0012               	return		;funcret
 14239  005BCE                     __end_of_Led_Blink:
 14240                           	callstack 0
 14241                           
 14242 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14243 ;; Defined at:
 14244 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 14245 ;; Parameters:    Size  Location     Type
 14246 ;;		None
 14247 ;; Auto vars:     Size  Location     Type
 14248 ;;		None
 14249 ;; Return value:  Size  Location     Type
 14250 ;;                  1    wreg      void 
 14251 ;; Registers used:
 14252 ;;		None
 14253 ;; Tracked objects:
 14254 ;;		On entry : 3F/0
 14255 ;;		On exit  : 3F/0
 14256 ;;		Unchanged: 3F/0
 14257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14262 ;;Total ram usage:        0 bytes
 14263 ;; Hardware stack levels used: 1
 14264 ;; This function calls:
 14265 ;;		Nothing
 14266 ;; This function is called by:
 14267 ;;		_TMR6_Initialize
 14268 ;;		_TMR6_CallBack
 14269 ;; This function uses a non-reentrant model
 14270 ;;
 14271                           
 14272                           	psect	text79
 14273  005D3A                     __ptext79:
 14274                           	callstack 0
 14275  005D3A                     _TMR6_DefaultInterruptHandler:
 14276                           	callstack 17
 14277                           
 14278                           ; BSR set to: 0
 14279                           
 14280                           ; BSR set to: 0
 14281                           ;incstack = 0
 14282  005D3A  0012               	return		;funcret
 14283  005D3C                     __end_of_TMR6_DefaultInterruptHandler:
 14284                           	callstack 0
 14285                           
 14286 ;; *************** function _Default_ISR *****************
 14287 ;; Defined at:
 14288 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;		None
 14291 ;; Auto vars:     Size  Location     Type
 14292 ;;		None
 14293 ;; Return value:  Size  Location     Type
 14294 ;;                  1    wreg      void 
 14295 ;; Registers used:
 14296 ;;		None
 14297 ;; Tracked objects:
 14298 ;;		On entry : 0/0
 14299 ;;		On exit  : 0/0
 14300 ;;		Unchanged: 0/0
 14301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;Total ram usage:        0 bytes
 14307 ;; Hardware stack levels used: 1
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		Interrupt level 2
 14312 ;; This function uses a non-reentrant model
 14313 ;;
 14314                           
 14315                           	psect	text80
 14316  005D3C                     __ptext80:
 14317                           	callstack 0
 14318  005D3C                     _Default_ISR:
 14319                           	callstack 19
 14320                           
 14321                           ; BSR set to: 0
 14322                           ;incstack = 0
 14323  005D3C  0011               	retfie		f
 14324  005D3E                     __end_of_Default_ISR:
 14325                           	callstack 0
 14326                           
 14327 ;; *************** function _UART1_tx_vect_isr *****************
 14328 ;; Defined at:
 14329 ;;		line 235 in file "mcc_generated_files/uart1.c"
 14330 ;; Parameters:    Size  Location     Type
 14331 ;;		None
 14332 ;; Auto vars:     Size  Location     Type
 14333 ;;		None
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  1    wreg      void 
 14336 ;; Registers used:
 14337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14347 ;;Total ram usage:        2 bytes
 14348 ;; Hardware stack levels used: 1
 14349 ;; Hardware stack levels required when called: 1
 14350 ;; This function calls:
 14351 ;;		Absolute function
 14352 ;;		_UART1_Transmit_ISR
 14353 ;; This function is called by:
 14354 ;;		Interrupt level 2
 14355 ;; This function uses a non-reentrant model
 14356 ;;
 14357                           
 14358                           	psect	text81
 14359  005800                     __ptext81:
 14360                           	callstack 0
 14361  005800                     _UART1_tx_vect_isr:
 14362                           	callstack 18
 14363                           
 14364                           ;incstack = 0
 14365  005800  006F FFE8  F00B    	movff	pclath,??_UART1_tx_vect_isr
 14366  005806  006F FFEC  F00C    	movff	pclatu,??_UART1_tx_vect_isr+1
 14367                           
 14368                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 14369  00580C  0100               	movlb	0	; () banked
 14370  00580E  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14371  005810  11F0               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14372  005812  11F1               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14373  005814  B4D8               	btfsc	status,2,c
 14374  005816  D00C               	goto	i2u631_49
 14375                           
 14376                           ; BSR set to: 0
 14377                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 14378  005818  D801               	call	i2u631_48
 14379  00581A  D00A               	goto	i2u631_49
 14380  00581C                     i2u631_48:
 14381  00581C  0005               	push	
 14382  00581E  6EFA               	movwf	pclath,c
 14383  005820  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14384  005822  6EFD               	movwf	tosl,c
 14385  005824  51F0               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14386  005826  6EFE               	movwf	tosh,c
 14387  005828  51F1               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14388  00582A  6EFF               	movwf	tosu,c
 14389  00582C  50FA               	movf	pclath,w,c
 14390  00582E  0012               	return		;indir
 14391  005830                     i2u631_49:
 14392  005830  0060  F033  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 14393  005836  0060  F02F  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 14394  00583C  0011               	retfie		f
 14395  00583E                     __end_of_UART1_tx_vect_isr:
 14396                           	callstack 0
 14397                           
 14398 ;; *************** function _UART1_Transmit_ISR *****************
 14399 ;; Defined at:
 14400 ;;		line 253 in file "mcc_generated_files/uart1.c"
 14401 ;; Parameters:    Size  Location     Type
 14402 ;;		None
 14403 ;; Auto vars:     Size  Location     Type
 14404 ;;		None
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  1    wreg      void 
 14407 ;; Registers used:
 14408 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14409 ;; Tracked objects:
 14410 ;;		On entry : 3F/0
 14411 ;;		On exit  : 3B/39
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14418 ;;Total ram usage:        0 bytes
 14419 ;; Hardware stack levels used: 1
 14420 ;; This function calls:
 14421 ;;		Nothing
 14422 ;; This function is called by:
 14423 ;;		_UART1_Initialize
 14424 ;;		_UART1_tx_vect_isr
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           
 14428                           	psect	text82
 14429  005A30                     __ptext82:
 14430                           	callstack 0
 14431  005A30                     _UART1_Transmit_ISR:
 14432                           	callstack 18
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 14436                           
 14437                           ;incstack = 0
 14438  005A30  0E40               	movlw	64
 14439  005A32  6049               	cpfslt	_uart1TxBufferRemaining^0,c
 14440  005A34  D011               	goto	i2l640
 14441                           
 14442                           ; BSR set to: 0
 14443                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 14444  005A36  0E40               	movlw	low _uart1TxBuffer
 14445  005A38  244A               	addwf	_uart1TxTail^0,w,c	;volatile
 14446  005A3A  6ED9               	movwf	fsr2l,c
 14447  005A3C  6ADA               	clrf	fsr2h,c
 14448  005A3E  0E01               	movlw	high _uart1TxBuffer
 14449  005A40  22DA               	addwfc	fsr2h,f,c
 14450  005A42  50DF               	movf	indf2,w,c
 14451  005A44  013D               	movlb	61	; () banked
 14452  005A46  6FEA               	movwf	234,b	;volatile
 14453                           
 14454                           ; BSR set to: 61
 14455  005A48  2A4A               	incf	_uart1TxTail^0,f,c	;volatile
 14456                           
 14457                           ; BSR set to: 61
 14458                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 14459  005A4A  0E3F               	movlw	63
 14460  005A4C  644A               	cpfsgt	_uart1TxTail^0,c
 14461  005A4E  D002               	goto	i2l6156
 14462                           
 14463                           ; BSR set to: 61
 14464                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 14465  005A50  0E00               	movlw	0
 14466  005A52  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 14467  005A54                     i2l6156:
 14468                           
 14469                           ; BSR set to: 61
 14470                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 14471  005A54  2A49               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 14472                           
 14473                           ;mcc_generated_files/uart1.c: 264:     }
 14474  005A56  0012               	return	
 14475  005A58                     i2l640:
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 14479  005A58  0139               	movlb	57	; () banked
 14480  005A5A  9993               	bcf	147,4,b	;volatile
 14481  005A5C  0012               	return		;funcret
 14482  005A5E                     __end_of_UART1_Transmit_ISR:
 14483                           	callstack 0
 14484                           
 14485 ;; *************** function _UART1_rx_vect_isr *****************
 14486 ;; Defined at:
 14487 ;;		line 243 in file "mcc_generated_files/uart1.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;		None
 14490 ;; Auto vars:     Size  Location     Type
 14491 ;;		None
 14492 ;; Return value:  Size  Location     Type
 14493 ;;                  1    wreg      void 
 14494 ;; Registers used:
 14495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14496 ;; Tracked objects:
 14497 ;;		On entry : 0/0
 14498 ;;		On exit  : 0/0
 14499 ;;		Unchanged: 0/0
 14500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;Total ram usage:        2 bytes
 14506 ;; Hardware stack levels used: 1
 14507 ;; Hardware stack levels required when called: 3
 14508 ;; This function calls:
 14509 ;;		Absolute function
 14510 ;;		_UART1_Receive_ISR
 14511 ;; This function is called by:
 14512 ;;		Interrupt level 2
 14513 ;; This function uses a non-reentrant model
 14514 ;;
 14515                           
 14516                           	psect	text83
 14517  005840                     __ptext83:
 14518                           	callstack 0
 14519  005840                     _UART1_rx_vect_isr:
 14520                           	callstack 16
 14521                           
 14522                           ;incstack = 0
 14523  005840  006F FFE8  F00D    	movff	pclath,??_UART1_rx_vect_isr
 14524  005846  006F FFEC  F00E    	movff	pclatu,??_UART1_rx_vect_isr+1
 14525                           
 14526                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 14527  00584C  0100               	movlb	0	; () banked
 14528  00584E  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14529  005850  11F3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14530  005852  11F4               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14531  005854  B4D8               	btfsc	status,2,c
 14532  005856  D00C               	goto	i2u633_49
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 14536  005858  D801               	call	i2u633_48
 14537  00585A  D00A               	goto	i2u633_49
 14538  00585C                     i2u633_48:
 14539  00585C  0005               	push	
 14540  00585E  6EFA               	movwf	pclath,c
 14541  005860  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14542  005862  6EFD               	movwf	tosl,c
 14543  005864  51F3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14544  005866  6EFE               	movwf	tosh,c
 14545  005868  51F4               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14546  00586A  6EFF               	movwf	tosu,c
 14547  00586C  50FA               	movf	pclath,w,c
 14548  00586E  0012               	return		;indir
 14549  005870                     i2u633_49:
 14550  005870  0060  F03B  FFFB   	movff	??_UART1_rx_vect_isr+1,pclatu
 14551  005876  0060  F037  FFFA   	movff	??_UART1_rx_vect_isr,pclath
 14552  00587C  0011               	retfie		f
 14553  00587E                     __end_of_UART1_rx_vect_isr:
 14554                           	callstack 0
 14555                           
 14556 ;; *************** function _UART1_Receive_ISR *****************
 14557 ;; Defined at:
 14558 ;;		line 273 in file "mcc_generated_files/uart1.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;		None
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;		None
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  1    wreg      void 
 14565 ;; Registers used:
 14566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14567 ;; Tracked objects:
 14568 ;;		On entry : 3F/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14576 ;;Total ram usage:        0 bytes
 14577 ;; Hardware stack levels used: 1
 14578 ;; Hardware stack levels required when called: 2
 14579 ;; This function calls:
 14580 ;;		Absolute function
 14581 ;;		_UART1_DefaultErrorHandler
 14582 ;;		_UART1_DefaultFramingErrorHandler
 14583 ;;		_UART1_DefaultOverrunErrorHandler
 14584 ;;		_UART1_RxDataHandler
 14585 ;; This function is called by:
 14586 ;;		_UART1_Initialize
 14587 ;;		_UART1_rx_vect_isr
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           	psect	text84
 14592  004FD0                     __ptext84:
 14593                           	callstack 0
 14594  004FD0                     _UART1_Receive_ISR:
 14595                           	callstack 16
 14596                           
 14597                           ; BSR set to: 0
 14598                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 14599                           
 14600                           ;incstack = 0
 14601  004FD0  0E00               	movlw	low _uart1RxStatusBuffer
 14602  004FD2  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14603  004FD4  6ED9               	movwf	fsr2l,c
 14604  004FD6  6ADA               	clrf	fsr2h,c
 14605  004FD8  0E01               	movlw	high _uart1RxStatusBuffer
 14606  004FDA  22DA               	addwfc	fsr2h,f,c
 14607  004FDC  0E00               	movlw	0
 14608  004FDE  6EDF               	movwf	indf2,c
 14609                           
 14610                           ; BSR set to: 0
 14611                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 14612  004FE0  013D               	movlb	61	; () banked
 14613  004FE2  A7F9               	btfss	249,3,b	;volatile
 14614  004FE4  D015               	goto	i2u605_49
 14615                           
 14616                           ; BSR set to: 61
 14617                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 14618  004FE6  0E00               	movlw	low _uart1RxStatusBuffer
 14619  004FE8  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14620  004FEA  6ED9               	movwf	fsr2l,c
 14621  004FEC  6ADA               	clrf	fsr2h,c
 14622  004FEE  0E01               	movlw	high _uart1RxStatusBuffer
 14623  004FF0  22DA               	addwfc	fsr2h,f,c
 14624  004FF2  0101               	movlb	1	; () banked
 14625  004FF4  82DF               	bsf	indf2,1,c
 14626                           
 14627                           ; BSR set to: 1
 14628                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 14629  004FF6  D801               	call	i2u605_48
 14630  004FF8  D00B               	goto	i2u605_49
 14631  004FFA                     i2u605_48:
 14632  004FFA  0005               	push	
 14633  004FFC  6EFA               	movwf	pclath,c
 14634  004FFE  0100               	movlb	0	; () banked
 14635  005000  51E6               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 14636  005002  6EFD               	movwf	tosl,c
 14637  005004  51E7               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 14638  005006  6EFE               	movwf	tosh,c
 14639  005008  51E8               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 14640  00500A  6EFF               	movwf	tosu,c
 14641  00500C  50FA               	movf	pclath,w,c
 14642  00500E  0012               	return		;indir
 14643  005010                     i2u605_49:
 14644                           
 14645                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 14646  005010  013D               	movlb	61	; () banked
 14647  005012  A3F9               	btfss	249,1,b	;volatile
 14648  005014  D015               	goto	i2u607_49
 14649                           
 14650                           ; BSR set to: 61
 14651                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 14652  005016  0E00               	movlw	low _uart1RxStatusBuffer
 14653  005018  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14654  00501A  6ED9               	movwf	fsr2l,c
 14655  00501C  6ADA               	clrf	fsr2h,c
 14656  00501E  0E01               	movlw	high _uart1RxStatusBuffer
 14657  005020  22DA               	addwfc	fsr2h,f,c
 14658  005022  0101               	movlb	1	; () banked
 14659  005024  84DF               	bsf	indf2,2,c
 14660                           
 14661                           ; BSR set to: 1
 14662                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 14663  005026  D801               	call	i2u607_48
 14664  005028  D00B               	goto	i2u607_49
 14665  00502A                     i2u607_48:
 14666  00502A  0005               	push	
 14667  00502C  6EFA               	movwf	pclath,c
 14668  00502E  0100               	movlb	0	; () banked
 14669  005030  51E3               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 14670  005032  6EFD               	movwf	tosl,c
 14671  005034  51E4               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 14672  005036  6EFE               	movwf	tosh,c
 14673  005038  51E5               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 14674  00503A  6EFF               	movwf	tosu,c
 14675  00503C  50FA               	movf	pclath,w,c
 14676  00503E  0012               	return		;indir
 14677  005040                     i2u607_49:
 14678                           
 14679                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 14680  005040  0E00               	movlw	low _uart1RxStatusBuffer
 14681  005042  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14682  005044  6ED9               	movwf	fsr2l,c
 14683  005046  6ADA               	clrf	fsr2h,c
 14684  005048  0E01               	movlw	high _uart1RxStatusBuffer
 14685  00504A  22DA               	addwfc	fsr2h,f,c
 14686  00504C  50DF               	movf	indf2,w,c
 14687  00504E  B4D8               	btfsc	status,2,c
 14688  005050  D00D               	goto	i2l6176
 14689                           
 14690                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 14691  005052  D801               	call	i2u609_48
 14692  005054  0012               	return	
 14693  005056                     i2u609_48:
 14694  005056  0005               	push	
 14695  005058  6EFA               	movwf	pclath,c
 14696  00505A  0100               	movlb	0	; () banked
 14697  00505C  51E0               	movf	_UART1_ErrorHandler& (0+255),w,b
 14698  00505E  6EFD               	movwf	tosl,c
 14699  005060  51E1               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 14700  005062  6EFE               	movwf	tosh,c
 14701  005064  51E2               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 14702  005066  6EFF               	movwf	tosu,c
 14703  005068  50FA               	movf	pclath,w,c
 14704  00506A  0012               	return		;indir
 14705  00506C                     i2l6176:
 14706                           
 14707                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 14708  00506C  ECC7  F02D         	call	_UART1_RxDataHandler	;wreg free
 14709  005070  0012               	return		;funcret
 14710  005072                     __end_of_UART1_Receive_ISR:
 14711                           	callstack 0
 14712                           
 14713 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 14714 ;; Defined at:
 14715 ;;		line 309 in file "mcc_generated_files/uart1.c"
 14716 ;; Parameters:    Size  Location     Type
 14717 ;;		None
 14718 ;; Auto vars:     Size  Location     Type
 14719 ;;		None
 14720 ;; Return value:  Size  Location     Type
 14721 ;;                  1    wreg      void 
 14722 ;; Registers used:
 14723 ;;		None
 14724 ;; Tracked objects:
 14725 ;;		On entry : 3F/0
 14726 ;;		On exit  : 3F/0
 14727 ;;		Unchanged: 3F/0
 14728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14733 ;;Total ram usage:        0 bytes
 14734 ;; Hardware stack levels used: 1
 14735 ;; This function calls:
 14736 ;;		Nothing
 14737 ;; This function is called by:
 14738 ;;		_UART1_Initialize
 14739 ;;		_UART1_Receive_ISR
 14740 ;; This function uses a non-reentrant model
 14741 ;;
 14742                           
 14743                           	psect	text85
 14744  005D3E                     __ptext85:
 14745                           	callstack 0
 14746  005D3E                     _UART1_DefaultOverrunErrorHandler:
 14747                           	callstack 17
 14748                           
 14749                           ; BSR set to: 0
 14750                           
 14751                           ;incstack = 0
 14752  005D3E  0012               	return		;funcret
 14753  005D40                     __end_of_UART1_DefaultOverrunErrorHandler:
 14754                           	callstack 0
 14755                           
 14756 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 14757 ;; Defined at:
 14758 ;;		line 307 in file "mcc_generated_files/uart1.c"
 14759 ;; Parameters:    Size  Location     Type
 14760 ;;		None
 14761 ;; Auto vars:     Size  Location     Type
 14762 ;;		None
 14763 ;; Return value:  Size  Location     Type
 14764 ;;                  1    wreg      void 
 14765 ;; Registers used:
 14766 ;;		None
 14767 ;; Tracked objects:
 14768 ;;		On entry : 3F/0
 14769 ;;		On exit  : 3F/0
 14770 ;;		Unchanged: 3F/0
 14771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14776 ;;Total ram usage:        0 bytes
 14777 ;; Hardware stack levels used: 1
 14778 ;; This function calls:
 14779 ;;		Nothing
 14780 ;; This function is called by:
 14781 ;;		_UART1_Initialize
 14782 ;;		_UART1_Receive_ISR
 14783 ;; This function uses a non-reentrant model
 14784 ;;
 14785                           
 14786                           	psect	text86
 14787  005D40                     __ptext86:
 14788                           	callstack 0
 14789  005D40                     _UART1_DefaultFramingErrorHandler:
 14790                           	callstack 17
 14791                           
 14792                           ; BSR set to: 0
 14793                           
 14794                           ; BSR set to: 0
 14795                           ;incstack = 0
 14796  005D40  0012               	return		;funcret
 14797  005D42                     __end_of_UART1_DefaultFramingErrorHandler:
 14798                           	callstack 0
 14799                           
 14800 ;; *************** function _UART1_DefaultErrorHandler *****************
 14801 ;; Defined at:
 14802 ;;		line 311 in file "mcc_generated_files/uart1.c"
 14803 ;; Parameters:    Size  Location     Type
 14804 ;;		None
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;		None
 14807 ;; Return value:  Size  Location     Type
 14808 ;;                  1    wreg      void 
 14809 ;; Registers used:
 14810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14811 ;; Tracked objects:
 14812 ;;		On entry : 3F/0
 14813 ;;		On exit  : 0/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14820 ;;Total ram usage:        0 bytes
 14821 ;; Hardware stack levels used: 1
 14822 ;; Hardware stack levels required when called: 1
 14823 ;; This function calls:
 14824 ;;		_UART1_RxDataHandler
 14825 ;; This function is called by:
 14826 ;;		_UART1_Initialize
 14827 ;;		_UART1_Receive_ISR
 14828 ;; This function uses a non-reentrant model
 14829 ;;
 14830                           
 14831                           	psect	text87
 14832  005D2E                     __ptext87:
 14833                           	callstack 0
 14834  005D2E                     _UART1_DefaultErrorHandler:
 14835                           	callstack 16
 14836                           
 14837                           ; BSR set to: 0
 14838                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 14839                           
 14840                           ; BSR set to: 0
 14841                           ;incstack = 0
 14842  005D2E  ECC7  F02D         	call	_UART1_RxDataHandler	;wreg free
 14843  005D32  0012               	return		;funcret
 14844  005D34                     __end_of_UART1_DefaultErrorHandler:
 14845                           	callstack 0
 14846                           
 14847 ;; *************** function _UART1_RxDataHandler *****************
 14848 ;; Defined at:
 14849 ;;		line 297 in file "mcc_generated_files/uart1.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;		None
 14852 ;; Auto vars:     Size  Location     Type
 14853 ;;		None
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  1    wreg      void 
 14856 ;; Registers used:
 14857 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/3D
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14867 ;;Total ram usage:        0 bytes
 14868 ;; Hardware stack levels used: 1
 14869 ;; This function calls:
 14870 ;;		Nothing
 14871 ;; This function is called by:
 14872 ;;		_UART1_Receive_ISR
 14873 ;;		_UART1_DefaultErrorHandler
 14874 ;; This function uses a non-reentrant model
 14875 ;;
 14876                           
 14877                           	psect	text88
 14878  005B8E                     __ptext88:
 14879                           	callstack 0
 14880  005B8E                     _UART1_RxDataHandler:
 14881                           	callstack 17
 14882                           
 14883                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 14884                           
 14885                           ;incstack = 0
 14886  005B8E  0E00               	movlw	low _uart1RxBuffer
 14887  005B90  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14888  005B92  6ED9               	movwf	fsr2l,c
 14889  005B94  6ADA               	clrf	fsr2h,c
 14890  005B96  0E02               	movlw	high _uart1RxBuffer
 14891  005B98  22DA               	addwfc	fsr2h,f,c
 14892  005B9A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 14893  005BA0  2A48               	incf	_uart1RxHead^0,f,c	;volatile
 14894                           
 14895                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 14896  005BA2  0E3F               	movlw	63
 14897  005BA4  6448               	cpfsgt	_uart1RxHead^0,c
 14898  005BA6  D002               	goto	i2l5876
 14899                           
 14900                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 14901  005BA8  0E00               	movlw	0
 14902  005BAA  6E48               	movwf	_uart1RxHead^0,c	;volatile
 14903  005BAC                     i2l5876:
 14904                           
 14905                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 14906  005BAC  2A46               	incf	_uart1RxCount^0,f,c	;volatile
 14907  005BAE  0012               	return		;funcret
 14908  005BB0                     __end_of_UART1_RxDataHandler:
 14909                           	callstack 0
 14910                           
 14911 ;; *************** function _TMR5_ISR *****************
 14912 ;; Defined at:
 14913 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;		None
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;		None
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14931 ;;Total ram usage:        2 bytes
 14932 ;; Hardware stack levels used: 1
 14933 ;; Hardware stack levels required when called: 1
 14934 ;; This function calls:
 14935 ;;		Absolute function
 14936 ;;		_TMR5_DefaultInterruptHandler
 14937 ;;		_TMR5_WriteTimer
 14938 ;;		_Timers_Isr
 14939 ;; This function is called by:
 14940 ;;		Interrupt level 2
 14941 ;; This function uses a non-reentrant model
 14942 ;;
 14943                           
 14944                           	psect	text89
 14945  0055D4                     __ptext89:
 14946                           	callstack 0
 14947  0055D4                     _TMR5_ISR:
 14948                           	callstack 18
 14949                           
 14950                           ;incstack = 0
 14951  0055D4  006F FFE8  F013    	movff	pclath,??_TMR5_ISR
 14952  0055DA  006F FFEC  F014    	movff	pclatu,??_TMR5_ISR+1
 14953                           
 14954                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 14955  0055E0  0139               	movlb	57	; () banked
 14956  0055E2  9DA8               	bcf	168,6,b	;volatile
 14957                           
 14958                           ; BSR set to: 57
 14959                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 14960  0055E4  C03F  F00F         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 14961  0055E8  C040  F010         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 14962  0055EC  EC93  F02D         	call	_TMR5_WriteTimer	;wreg free
 14963                           
 14964                           ; BSR set to: 57
 14965                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 14966  0055F0  0100               	movlb	0	; () banked
 14967  0055F2  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 14968  0055F4  11DE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 14969  0055F6  11DF               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 14970  0055F8  B4D8               	btfsc	status,2,c
 14971  0055FA  D00C               	goto	i2u635_49
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 14975  0055FC  D801               	call	i2u635_48
 14976  0055FE  D00A               	goto	i2u635_49
 14977  005600                     i2u635_48:
 14978  005600  0005               	push	
 14979  005602  6EFA               	movwf	pclath,c
 14980  005604  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 14981  005606  6EFD               	movwf	tosl,c
 14982  005608  51DE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 14983  00560A  6EFE               	movwf	tosh,c
 14984  00560C  51DF               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 14985  00560E  6EFF               	movwf	tosu,c
 14986  005610  50FA               	movf	pclath,w,c
 14987  005612  0012               	return		;indir
 14988  005614                     i2u635_49:
 14989  005614  0060  F053  FFFB   	movff	??_TMR5_ISR+1,pclatu
 14990  00561A  0060  F04F  FFFA   	movff	??_TMR5_ISR,pclath
 14991  005620  0011               	retfie		f
 14992  005622                     __end_of_TMR5_ISR:
 14993                           	callstack 0
 14994                           
 14995 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 14996 ;; Defined at:
 14997 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 14998 ;; Parameters:    Size  Location     Type
 14999 ;;		None
 15000 ;; Auto vars:     Size  Location     Type
 15001 ;;		None
 15002 ;; Return value:  Size  Location     Type
 15003 ;;                  1    wreg      void 
 15004 ;; Registers used:
 15005 ;;		None
 15006 ;; Tracked objects:
 15007 ;;		On entry : 3F/0
 15008 ;;		On exit  : 3F/0
 15009 ;;		Unchanged: 3F/0
 15010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15015 ;;Total ram usage:        0 bytes
 15016 ;; Hardware stack levels used: 1
 15017 ;; This function calls:
 15018 ;;		Nothing
 15019 ;; This function is called by:
 15020 ;;		_TMR5_Initialize
 15021 ;;		_TMR5_ISR
 15022 ;; This function uses a non-reentrant model
 15023 ;;
 15024                           
 15025                           	psect	text90
 15026  005D42                     __ptext90:
 15027                           	callstack 0
 15028  005D42                     _TMR5_DefaultInterruptHandler:
 15029                           	callstack 18
 15030                           
 15031                           ; BSR set to: 0
 15032                           
 15033                           ;incstack = 0
 15034  005D42  0012               	return		;funcret
 15035  005D44                     __end_of_TMR5_DefaultInterruptHandler:
 15036                           	callstack 0
 15037                           
 15038 ;; *************** function _Timers_Isr *****************
 15039 ;; Defined at:
 15040 ;;		line 48 in file "timers.c"
 15041 ;; Parameters:    Size  Location     Type
 15042 ;;		None
 15043 ;; Auto vars:     Size  Location     Type
 15044 ;;  i               2   16[COMRAM] int 
 15045 ;; Return value:  Size  Location     Type
 15046 ;;                  1    wreg      void 
 15047 ;; Registers used:
 15048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15049 ;; Tracked objects:
 15050 ;;		On entry : 3F/0
 15051 ;;		On exit  : 3F/0
 15052 ;;		Unchanged: 3F/0
 15053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15058 ;;Total ram usage:        4 bytes
 15059 ;; Hardware stack levels used: 1
 15060 ;; This function calls:
 15061 ;;		Nothing
 15062 ;; This function is called by:
 15063 ;;		_main
 15064 ;;		_TMR5_ISR
 15065 ;; This function uses a non-reentrant model
 15066 ;;
 15067                           
 15068                           	psect	text91
 15069  005532                     __ptext91:
 15070                           	callstack 0
 15071  005532                     _Timers_Isr:
 15072                           	callstack 18
 15073                           
 15074                           ; BSR set to: 0
 15075                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;incstack = 0
 15079  005532  0E00               	movlw	0
 15080  005534  6E12               	movwf	(Timers_Isr@i+1)^0,c
 15081  005536  0E00               	movlw	0
 15082  005538  6E11               	movwf	Timers_Isr@i^0,c
 15083  00553A                     i2l6248:
 15084                           
 15085                           ; BSR set to: 0
 15086                           ;timers.c: 52:   if (tickCount[i] != 0) {
 15087  00553A  90D8               	bcf	status,0,c
 15088  00553C  3411               	rlcf	Timers_Isr@i^0,w,c
 15089  00553E  6ED9               	movwf	fsr2l,c
 15090  005540  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15091  005542  6EDA               	movwf	fsr2h,c
 15092  005544  0E80               	movlw	low _tickCount
 15093  005546  26D9               	addwf	fsr2l,f,c
 15094  005548  0E01               	movlw	high _tickCount
 15095  00554A  22DA               	addwfc	fsr2h,f,c
 15096  00554C  50DE               	movf	postinc2,w,c
 15097  00554E  10DE               	iorwf	postinc2,w,c
 15098  005550  B4D8               	btfsc	status,2,c
 15099  005552  D00C               	goto	i2l6252
 15100                           
 15101                           ; BSR set to: 0
 15102                           ;timers.c: 53:    tickCount[i]--;
 15103  005554  90D8               	bcf	status,0,c
 15104  005556  3411               	rlcf	Timers_Isr@i^0,w,c
 15105  005558  6ED9               	movwf	fsr2l,c
 15106  00555A  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15107  00555C  6EDA               	movwf	fsr2h,c
 15108  00555E  0E80               	movlw	low _tickCount
 15109  005560  26D9               	addwf	fsr2l,f,c
 15110  005562  0E01               	movlw	high _tickCount
 15111  005564  22DA               	addwfc	fsr2h,f,c
 15112  005566  06DE               	decf	postinc2,f,c
 15113  005568  0E00               	movlw	0
 15114  00556A  5ADD               	subwfb	postdec2,f,c
 15115  00556C                     i2l6252:
 15116                           
 15117                           ; BSR set to: 0
 15118                           ;timers.c: 55:  }
 15119  00556C  4A11               	infsnz	Timers_Isr@i^0,f,c
 15120  00556E  2A12               	incf	(Timers_Isr@i+1)^0,f,c
 15121                           
 15122                           ; BSR set to: 0
 15123  005570  BE12               	btfsc	(Timers_Isr@i+1)^0,7,c
 15124  005572  D7E3               	goto	i2l6248
 15125  005574  5012               	movf	(Timers_Isr@i+1)^0,w,c
 15126  005576  E105               	bnz	i2u616_40
 15127  005578  0E06               	movlw	6
 15128  00557A  5C11               	subwf	Timers_Isr@i^0,w,c
 15129  00557C  B0D8               	btfsc	status,0,c
 15130  00557E  0012               	return	
 15131  005580  D7DC               	goto	i2l6248
 15132  005582                     i2u616_40:
 15133                           
 15134                           ; BSR set to: 0
 15135  005582  0012               	return		;funcret
 15136  005584                     __end_of_Timers_Isr:
 15137                           	callstack 0
 15138                           
 15139 ;; *************** function _TMR5_WriteTimer *****************
 15140 ;; Defined at:
 15141 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;  timerVal        2   14[COMRAM] unsigned short 
 15144 ;; Auto vars:     Size  Location     Type
 15145 ;;		None
 15146 ;; Return value:  Size  Location     Type
 15147 ;;                  1    wreg      void 
 15148 ;; Registers used:
 15149 ;;		None
 15150 ;; Tracked objects:
 15151 ;;		On entry : 3F/39
 15152 ;;		On exit  : 3F/39
 15153 ;;		Unchanged: 3E/0
 15154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15159 ;;Total ram usage:        2 bytes
 15160 ;; Hardware stack levels used: 1
 15161 ;; This function calls:
 15162 ;;		Nothing
 15163 ;; This function is called by:
 15164 ;;		_TMR5_ISR
 15165 ;; This function uses a non-reentrant model
 15166 ;;
 15167                           
 15168                           	psect	text92
 15169  005B26                     __ptext92:
 15170                           	callstack 0
 15171  005B26                     _TMR5_WriteTimer:
 15172                           	callstack 18
 15173                           
 15174                           ; BSR set to: 57
 15175                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 15176                           
 15177                           ; BSR set to: 0
 15178                           ;incstack = 0
 15179  005B26  A49A               	btfss	154,2,c	;volatile
 15180  005B28  D009               	goto	i2l721
 15181                           
 15182                           ; BSR set to: 57
 15183                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 15184  005B2A  909A               	bcf	154,0,c	;volatile
 15185                           
 15186                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 15187  005B2C  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15188                           
 15189                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 15190  005B32  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15191                           
 15192                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 15193  005B38  809A               	bsf	154,0,c	;volatile
 15194                           
 15195                           ;mcc_generated_files/tmr5.c: 141:     }
 15196  005B3A  0012               	return	
 15197  005B3C                     i2l721:
 15198                           
 15199                           ; BSR set to: 57
 15200                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 15201  005B3C  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15202                           
 15203                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 15204  005B42  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15205                           
 15206                           ; BSR set to: 57
 15207  005B48  0012               	return		;funcret
 15208  005B4A                     __end_of_TMR5_WriteTimer:
 15209                           	callstack 0
 15210                           
 15211                           ;
 15212                           ; Interrupt Vector Table @ 0x8
 15213                           ;
 15214                           
 15215                           	psect	ivt0x8
 15216  000008                     __pivt0x8:
 15217                           	callstack 0
 15218  000008                     ivt0x8_base:
 15219                           	callstack 0
 15220                           
 15221                           ; Vector 0 : SWINT
 15222  000008  174F               	dw	_Default_ISR shr (0+2)
 15223                           
 15224                           ; Vector 1 : HLVD
 15225  00000A  174F               	dw	_Default_ISR shr (0+2)
 15226                           
 15227                           ; Vector 2 : OSF
 15228  00000C  174F               	dw	_Default_ISR shr (0+2)
 15229                           
 15230                           ; Vector 3 : CSW
 15231  00000E  174F               	dw	_Default_ISR shr (0+2)
 15232                           
 15233                           ; Vector 4 : NVM
 15234  000010  174F               	dw	_Default_ISR shr (0+2)
 15235                           
 15236                           ; Vector 5 : SCAN
 15237  000012  174F               	dw	_Default_ISR shr (0+2)
 15238                           
 15239                           ; Vector 6 : CRC
 15240  000014  174F               	dw	_Default_ISR shr (0+2)
 15241                           
 15242                           ; Vector 7 : IOC
 15243  000016  174F               	dw	_Default_ISR shr (0+2)
 15244                           
 15245                           ; Vector 8 : INT0
 15246  000018  174F               	dw	_Default_ISR shr (0+2)
 15247                           
 15248                           ; Vector 9 : ZCD
 15249  00001A  174F               	dw	_Default_ISR shr (0+2)
 15250                           
 15251                           ; Vector 10 : AD
 15252  00001C  15D0               	dw	_ADCC_ISR shr (0+2)
 15253                           
 15254                           ; Vector 11 : ADT
 15255  00001E  174F               	dw	_Default_ISR shr (0+2)
 15256                           
 15257                           ; Vector 12 : CMP1
 15258  000020  174F               	dw	_Default_ISR shr (0+2)
 15259                           
 15260                           ; Vector 13 : SMT1
 15261  000022  174F               	dw	_Default_ISR shr (0+2)
 15262                           
 15263                           ; Vector 14 : SMT1PRA
 15264  000024  174F               	dw	_Default_ISR shr (0+2)
 15265                           
 15266                           ; Vector 15 : SMT1PRW
 15267  000026  174F               	dw	_Default_ISR shr (0+2)
 15268                           
 15269                           ; Vector 16 : DMA1SCNT
 15270  000028  174F               	dw	_Default_ISR shr (0+2)
 15271                           
 15272                           ; Vector 17 : DMA1DCNT
 15273  00002A  174F               	dw	_Default_ISR shr (0+2)
 15274                           
 15275                           ; Vector 18 : DMA1OR
 15276  00002C  174F               	dw	_Default_ISR shr (0+2)
 15277                           
 15278                           ; Vector 19 : DMA1A
 15279  00002E  174F               	dw	_Default_ISR shr (0+2)
 15280                           
 15281                           ; Vector 20 : SPI1RX
 15282  000030  174F               	dw	_Default_ISR shr (0+2)
 15283                           
 15284                           ; Vector 21 : SPI1TX
 15285  000032  174F               	dw	_Default_ISR shr (0+2)
 15286                           
 15287                           ; Vector 22 : SPI1
 15288  000034  174F               	dw	_Default_ISR shr (0+2)
 15289                           
 15290                           ; Vector 23 : I2C1RX
 15291  000036  174F               	dw	_Default_ISR shr (0+2)
 15292                           
 15293                           ; Vector 24 : I2C1TX
 15294  000038  174F               	dw	_Default_ISR shr (0+2)
 15295                           
 15296                           ; Vector 25 : I2C1
 15297  00003A  174F               	dw	_Default_ISR shr (0+2)
 15298                           
 15299                           ; Vector 26 : I2C1E
 15300  00003C  174F               	dw	_Default_ISR shr (0+2)
 15301                           
 15302                           ; Vector 27 : U1RX
 15303  00003E  1610               	dw	_UART1_rx_vect_isr shr (0+2)
 15304                           
 15305                           ; Vector 28 : U1TX
 15306  000040  1600               	dw	_UART1_tx_vect_isr shr (0+2)
 15307                           
 15308                           ; Vector 29 : U1E
 15309  000042  174F               	dw	_Default_ISR shr (0+2)
 15310                           
 15311                           ; Vector 30 : U1
 15312  000044  174F               	dw	_Default_ISR shr (0+2)
 15313                           
 15314                           ; Vector 31 : TMR0
 15315  000046  174F               	dw	_Default_ISR shr (0+2)
 15316                           
 15317                           ; Vector 32 : TMR1
 15318  000048  174F               	dw	_Default_ISR shr (0+2)
 15319                           
 15320                           ; Vector 33 : TMR1G
 15321  00004A  174F               	dw	_Default_ISR shr (0+2)
 15322                           
 15323                           ; Vector 34 : TMR2
 15324  00004C  174F               	dw	_Default_ISR shr (0+2)
 15325                           
 15326                           ; Vector 35 : CCP1
 15327  00004E  174F               	dw	_Default_ISR shr (0+2)
 15328                           
 15329                           ; Vector 36 : Undefined
 15330  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15331                           
 15332                           ; Vector 37 : NCO1
 15333  000052  174F               	dw	_Default_ISR shr (0+2)
 15334                           
 15335                           ; Vector 38 : CWG1
 15336  000054  174F               	dw	_Default_ISR shr (0+2)
 15337                           
 15338                           ; Vector 39 : CLC1
 15339  000056  174F               	dw	_Default_ISR shr (0+2)
 15340                           
 15341                           ; Vector 40 : INT1
 15342  000058  174F               	dw	_Default_ISR shr (0+2)
 15343                           
 15344                           ; Vector 41 : CMP2
 15345  00005A  174F               	dw	_Default_ISR shr (0+2)
 15346                           
 15347                           ; Vector 42 : DMA2SCNT
 15348  00005C  174F               	dw	_Default_ISR shr (0+2)
 15349                           
 15350                           ; Vector 43 : DMA2DCNT
 15351  00005E  174F               	dw	_Default_ISR shr (0+2)
 15352                           
 15353                           ; Vector 44 : DMA2OR
 15354  000060  174F               	dw	_Default_ISR shr (0+2)
 15355                           
 15356                           ; Vector 45 : DMA2A
 15357  000062  174F               	dw	_Default_ISR shr (0+2)
 15358                           
 15359                           ; Vector 46 : I2C2RX
 15360  000064  174F               	dw	_Default_ISR shr (0+2)
 15361                           
 15362                           ; Vector 47 : I2C2TX
 15363  000066  174F               	dw	_Default_ISR shr (0+2)
 15364                           
 15365                           ; Vector 48 : I2C2
 15366  000068  174F               	dw	_Default_ISR shr (0+2)
 15367                           
 15368                           ; Vector 49 : I2C2E
 15369  00006A  174F               	dw	_Default_ISR shr (0+2)
 15370                           
 15371                           ; Vector 50 : U2RX
 15372  00006C  174F               	dw	_Default_ISR shr (0+2)
 15373                           
 15374                           ; Vector 51 : U2TX
 15375  00006E  174F               	dw	_Default_ISR shr (0+2)
 15376                           
 15377                           ; Vector 52 : U2E
 15378  000070  174F               	dw	_Default_ISR shr (0+2)
 15379                           
 15380                           ; Vector 53 : U2
 15381  000072  174F               	dw	_Default_ISR shr (0+2)
 15382                           
 15383                           ; Vector 54 : TMR3
 15384  000074  174F               	dw	_Default_ISR shr (0+2)
 15385                           
 15386                           ; Vector 55 : TMR3G
 15387  000076  174F               	dw	_Default_ISR shr (0+2)
 15388                           
 15389                           ; Vector 56 : TMR4
 15390  000078  174F               	dw	_Default_ISR shr (0+2)
 15391                           
 15392                           ; Vector 57 : CCP2
 15393  00007A  174F               	dw	_Default_ISR shr (0+2)
 15394                           
 15395                           ; Vector 58 : Undefined
 15396  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15397                           
 15398                           ; Vector 59 : CWG2
 15399  00007E  174F               	dw	_Default_ISR shr (0+2)
 15400                           
 15401                           ; Vector 60 : CLC2
 15402  000080  174F               	dw	_Default_ISR shr (0+2)
 15403                           
 15404                           ; Vector 61 : INT2
 15405  000082  174F               	dw	_Default_ISR shr (0+2)
 15406                           
 15407                           ; Vector 62 : Undefined
 15408  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15409                           
 15410                           ; Vector 63 : Undefined
 15411  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15412                           
 15413                           ; Vector 64 : Undefined
 15414  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15415                           
 15416                           ; Vector 65 : Undefined
 15417  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15418                           
 15419                           ; Vector 66 : Undefined
 15420  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15421                           
 15422                           ; Vector 67 : Undefined
 15423  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15424                           
 15425                           ; Vector 68 : Undefined
 15426  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15427                           
 15428                           ; Vector 69 : Undefined
 15429  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15430                           
 15431                           ; Vector 70 : TMR5
 15432  000094  1575               	dw	_TMR5_ISR shr (0+2)
 15433                           
 15434                           ; Vector 71 : TMR5G
 15435  000096  174F               	dw	_Default_ISR shr (0+2)
 15436                           
 15437                           ; Vector 72 : TMR6
 15438  000098  165A               	dw	_TMR6_ISR shr (0+2)
 15439                           
 15440                           ; Vector 73 : CCP3
 15441  00009A  174F               	dw	_Default_ISR shr (0+2)
 15442                           
 15443                           ; Vector 74 : CWG3
 15444  00009C  174F               	dw	_Default_ISR shr (0+2)
 15445                           
 15446                           ; Vector 75 : CLC3
 15447  00009E  174F               	dw	_Default_ISR shr (0+2)
 15448                           
 15449                           ; Vector 76 : Undefined
 15450  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15451                           
 15452                           ; Vector 77 : Undefined
 15453  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15454                           
 15455                           ; Vector 78 : Undefined
 15456  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15457                           
 15458                           ; Vector 79 : Undefined
 15459  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15460                           
 15461                           ; Vector 80 : CCP4
 15462  0000A8  174F               	dw	_Default_ISR shr (0+2)
 15463                           
 15464                           ; Vector 81 : CLC4
 15465  0000AA  174F               	dw	_Default_ISR shr (0+2)
 15466  0000AC                     ivt0x8_undefint:
 15467                           	callstack 0
 15468  0000AC  00FF               	reset	
 15469                           
 15470                           	psect	text93
 15471  000000                     __ptext93:
 15472                           	callstack 0
 15473                           
 15474                           	psect	rparam
 15475  0000                     
 15476                           	psect	idloc
 15477                           
 15478                           ;Config register IDLOC0 @ 0x200000
 15479                           ;	unspecified, using default values
 15480  200000                     	org	2097152
 15481  200000  0FFF               	dw	4095
 15482                           
 15483                           ;Config register IDLOC1 @ 0x200002
 15484                           ;	unspecified, using default values
 15485  200002                     	org	2097154
 15486  200002  0FFF               	dw	4095
 15487                           
 15488                           ;Config register IDLOC2 @ 0x200004
 15489                           ;	unspecified, using default values
 15490  200004                     	org	2097156
 15491  200004  0FFF               	dw	4095
 15492                           
 15493                           ;Config register IDLOC3 @ 0x200006
 15494                           ;	unspecified, using default values
 15495  200006                     	org	2097158
 15496  200006  0FFF               	dw	4095
 15497                           
 15498                           ;Config register IDLOC4 @ 0x200008
 15499                           ;	unspecified, using default values
 15500  200008                     	org	2097160
 15501  200008  0FFF               	dw	4095
 15502                           
 15503                           ;Config register IDLOC5 @ 0x20000A
 15504                           ;	unspecified, using default values
 15505  20000A                     	org	2097162
 15506  20000A  0FFF               	dw	4095
 15507                           
 15508                           ;Config register IDLOC6 @ 0x20000C
 15509                           ;	unspecified, using default values
 15510  20000C                     	org	2097164
 15511  20000C  0FFF               	dw	4095
 15512                           
 15513                           ;Config register IDLOC7 @ 0x20000E
 15514                           ;	unspecified, using default values
 15515  20000E                     	org	2097166
 15516  20000E  0FFF               	dw	4095
 15517                           
 15518                           	psect	config
 15519                           
 15520                           ;Config register CONFIG1L @ 0x300000
 15521                           ;	External Oscillator Selection
 15522                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 15523                           ;	Reset Oscillator Selection
 15524                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15525  300000                     	org	3145728
 15526  300000  AF                 	db	175
 15527                           
 15528                           ;Config register CONFIG1H @ 0x300001
 15529                           ;	Clock out Enable bit
 15530                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 15531                           ;	PRLOCKED One-Way Set Enable bit
 15532                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 15533                           ;	Clock Switch Enable bit
 15534                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15535                           ;	Fail-Safe Clock Monitor Enable bit
 15536                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 15537  300001                     	org	3145729
 15538  300001  FF                 	db	255
 15539                           
 15540                           ;Config register CONFIG2L @ 0x300002
 15541                           ;	MCLR Enable bit
 15542                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 15543                           ;	Power-up timer selection bits
 15544                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 15545                           ;	Multi-vector enable bit
 15546                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 15547                           ;	IVTLOCK bit One-way set enable bit
 15548                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 15549                           ;	Low Power BOR Enable bit
 15550                           ;	LPBOREN = OFF, ULPBOR disabled
 15551                           ;	Brown-out Reset Enable bits
 15552                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 15553  300002                     	org	3145730
 15554  300002  FF                 	db	255
 15555                           
 15556                           ;Config register CONFIG2H @ 0x300003
 15557                           ;	Brown-out Reset Voltage Selection bits
 15558                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 15559                           ;	ZCD Disable bit
 15560                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 15561                           ;	PPSLOCK bit One-Way Set Enable bit
 15562                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 15563                           ;	Stack Full/Underflow Reset Enable bit
 15564                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15565                           ;	Debugger Enable bit
 15566                           ;	DEBUG = OFF, Background debugger disabled
 15567                           ;	Extended Instruction Set Enable bit
 15568                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 15569  300003                     	org	3145731
 15570  300003  FF                 	db	255
 15571                           
 15572                           ;Config register CONFIG3L @ 0x300004
 15573                           ;	WDT Period selection bits
 15574                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15575                           ;	WDT operating mode
 15576                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 15577  300004                     	org	3145732
 15578  300004  9F                 	db	159
 15579                           
 15580                           ;Config register CONFIG3H @ 0x300005
 15581                           ;	WDT Window Select bits
 15582                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15583                           ;	WDT input clock selector
 15584                           ;	WDTCCS = SC, Software Control
 15585  300005                     	org	3145733
 15586  300005  FF                 	db	255
 15587                           
 15588                           ;Config register CONFIG4L @ 0x300006
 15589                           ;	Boot Block Size selection bits
 15590                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 15591                           ;	Boot Block enable bit
 15592                           ;	BBEN = OFF, Boot block disabled
 15593                           ;	Storage Area Flash enable bit
 15594                           ;	SAFEN = OFF, SAF disabled
 15595                           ;	Application Block write protection bit
 15596                           ;	WRTAPP = OFF, Application Block not write protected
 15597  300006                     	org	3145734
 15598  300006  FF                 	db	255
 15599                           
 15600                           ;Config register CONFIG4H @ 0x300007
 15601                           ;	Boot Block Write Protection bit
 15602                           ;	WRTB = OFF, Boot Block not write-protected
 15603                           ;	Configuration Register Write Protection bit
 15604                           ;	WRTC = OFF, Configuration registers not write-protected
 15605                           ;	Data EEPROM Write Protection bit
 15606                           ;	WRTD = OFF, Data EEPROM not write-protected
 15607                           ;	SAF Write protection bit
 15608                           ;	WRTSAF = OFF, SAF not Write Protected
 15609                           ;	Low Voltage Programming Enable bit
 15610                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 15611  300007                     	org	3145735
 15612  300007  FF                 	db	255
 15613                           
 15614                           ;Config register CONFIG5L @ 0x300008
 15615                           ;	PFM and Data EEPROM Code Protection bit
 15616                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 15617  300008                     	org	3145736
 15618  300008  FF                 	db	255
 15619                           
 15620                           ;Config register CONFIG5H @ 0x300009
 15621                           ;	unspecified, using default values
 15622  300009                     	org	3145737
 15623  300009  FF                 	db	255
 15624                           tosu	equ	0x3FFF
 15625                           tosh	equ	0x3FFE
 15626                           tosl	equ	0x3FFD
 15627                           stkptr	equ	0x3FFC
 15628                           pclatu	equ	0x3FFB
 15629                           pclath	equ	0x3FFA
 15630                           pcl	equ	0x3FF9
 15631                           tblptru	equ	0x3FF8
 15632                           tblptrh	equ	0x3FF7
 15633                           tblptrl	equ	0x3FF6
 15634                           tablat	equ	0x3FF5
 15635                           prodh	equ	0x3FF4
 15636                           prodl	equ	0x3FF3
 15637                           indf0	equ	0x3FEF
 15638                           postinc0	equ	0x3FEE
 15639                           postdec0	equ	0x3FED
 15640                           preinc0	equ	0x3FEC
 15641                           plusw0	equ	0x3FEB
 15642                           fsr0h	equ	0x3FEA
 15643                           fsr0l	equ	0x3FE9
 15644                           wreg	equ	0x3FE8
 15645                           indf1	equ	0x3FE7
 15646                           postinc1	equ	0x3FE6
 15647                           postdec1	equ	0x3FE5
 15648                           preinc1	equ	0x3FE4
 15649                           plusw1	equ	0x3FE3
 15650                           fsr1h	equ	0x3FE2
 15651                           fsr1l	equ	0x3FE1
 15652                           bsr	equ	0x3FE0
 15653                           indf2	equ	0x3FDF
 15654                           postinc2	equ	0x3FDE
 15655                           postdec2	equ	0x3FDD
 15656                           preinc2	equ	0x3FDC
 15657                           plusw2	equ	0x3FDB
 15658                           fsr2h	equ	0x3FDA
 15659                           fsr2l	equ	0x3FD9
 15660                           status	equ	0x3FD8

Data Sizes:
    Strings     168
    Constant    33
    Data        26
    BSS         737
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     56      75
    BANK0           160    121     160
    BANK1           256      0     255
    BANK2           256     24     219
    BANK3           256      0     255
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    fh_hi@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_ho@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1761$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_26(CODE[4]), STR_21(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_26(CODE[4]), STR_21(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 74
		 -> vfpfcnvrt@ct(BANK0[3]), STR_9(CODE[21]), NULL(NULL[0]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[74]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 74
		 -> vfpfcnvrt@ct(BANK0[3]), STR_9(CODE[21]), NULL(NULL[0]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[74]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_10(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK2[131]), STR_4(CODE[10]), STR_3(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_5(CODE[74]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), dbuf(BANK1[80]), STR_10(CODE[3]), cli_read@i(BANK0[1]), 
		 -> cmdm(CODE[28]), cli_ctx(BANK2[131]), STR_4(CODE[10]), STR_3(CODE[10]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_9(CODE[21]), STR_5(CODE[74]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_9(CODE[21]), STR_5(CODE[74]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 74
		 -> STR_9(CODE[21]), STR_5(CODE[74]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_9(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    S2521$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2521$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(1) Largest target is 1
		 -> cli_read@i(BANK0[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1761_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    S1761_t_cmd$cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    fh_hw@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    build_time	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    S1768_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _printf->_vfprintf
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    _linux_getc->_UART1_Read
    __cli_interpret_cmd->_fh_hi
    __cli_interpret_cmd->_fh_ho
    __cli_interpret_cmd->_fh_hw
    _strncmp->_strlen
    _fh_hw->_puts
    _fh_ho->_puts
    _fh_hi->_puts
    _puts->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _cli_read->__cli_interpret_cmd

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _scmd_init->_cli_init
    _cli_init->_sprintf

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  187007
                                            117 BANK0      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                             _printf
                          _scmd_init
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0   78043
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4   78043
                                             20 BANK2      4     0      4
                             _memset
                               _puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7   69423
                                              0 BANK2     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21     4     17   68987
                                            115 BANK0      2     2      0
                                              0 BANK2     17     0     17
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     1      5   68693
                                             55 COMRAM     1     1      0
                                            110 BANK0      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           44    39      5   67481
                                             79 BANK0     31    26      5
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    9760
                                              0 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     536
                                             20 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     554
                                             20 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    4144
                                             31 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              62    55      7   41977
                                             17 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              6     4      2    1318
                                             26 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     649
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1248
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    7900
                                             40 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     890
                                             45 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     482
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     686
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    5410
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    4742
                                             20 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     196
                                             20 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    5194
                                             34 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1220
                                             46 COMRAM     8     0      8
                                             13 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     912
                                             20 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3620
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     818
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     842
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                10     8      2    2172
                                             27 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     321
                                             20 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     437
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     698
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      42
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   31209
                                             49 COMRAM     5     3      2
                                             10 BANK0      3     3      0
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2020
                                             20 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    6644
                                             43 COMRAM     3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (2) _linux_getc                                           2     1      1     202
                                             21 COMRAM     2     1      1
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Read                                           1     1      0      54
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  14    12      2   21529
                                             45 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                   Absolute function *
                              _fh_hi *
                              _fh_ho *
                              _fh_hw *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             12     6      6    1404
                                             24 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     710
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _fh_hw                                                2     0      2    6220
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_ho                                                2     0      2    6257
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_hi                                                2     0      2    6178
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    6178
                                             40 COMRAM     3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                9     5      4    3148
                                             31 COMRAM     9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    2284
                                             22 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0     126
                                             21 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      84
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     884
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1550
                    _ADCC_Initialize
                    _DAC1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     740
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     254
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     254
                                             23 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      48
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     254
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      42
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            2     2      0       0
                                              5 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (13) _Adc_Isr                                             1     1      0       0
                                              4 COMRAM     1     1      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (14) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Led_Blink                                           1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   2     2      0       0
                                             12 COMRAM     2     2      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            2     2      0     319
                                             18 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (13) _Timers_Isr                                          4     4      0      90
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     229
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_hi *
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_ho *
         _puts
       _fh_hw *
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _scmd_init
     _cli_init
       _memset
       _puts
       _sprintf
         _vfprintf

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0     111        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhh    22A      0       0      85        0.0%
BITBIGSFRllllll    181      0       0     109        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     18      DB       9       85.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBIGSFRllhhhh     CB      0       0      81        0.0%
BITBIGSFRllhhhh     A1      0       0      78        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     79      A0       5      100.0%
BITBIGSFRllhhhh     92      0       0      74        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     38      4B       1       78.9%
BITBIGSFRllhhhl     49      0       0      87        0.0%
BITBIGSFRllhhhh     3F      0       0      76        0.0%
BITBIGSFRllllll     33      0       0      98        0.0%
BITBIGSFRllllll     29      0       0      96        0.0%
BITBIGSFRhhhhh      28      0       0      68        0.0%
BITBIGSFRllhhhh     1C      0       0      73        0.0%
BITBIGSFRllllll     16      0       0     101        0.0%
BITBIGSFRllllll     11      0       0     100        0.0%
BITBIGSFRlllllh      B      0       0      95        0.0%
BITBIGSFRllhhl       B      0       0      88        0.0%
BITBIGSFRllllll      7      0       0     106        0.0%
BITBIGSFRllllll      7      0       0     103        0.0%
BITBIGSFRhhlh        6      0       0      70        0.0%
BITBIGSFRllllll      5      0       0     102        0.0%
BITBIGSFRllhhhh      5      0       0      86        0.0%
BITBIGSFRllllhl      5      0       0      94        0.0%
BITBIGSFRlllhl       5      0       0      92        0.0%
BITBIGSFRllhll       5      0       0      90        0.0%
BITBIGSFRllllll      4      0       0     104        0.0%
BITBIGSFRllllll      4      0       0     107        0.0%
BITBIGSFRllhlh       4      0       0      89        0.0%
BITBIGSFRlllhh       4      0       0      91        0.0%
BITBIGSFRllllhh      4      0       0      93        0.0%
BITBIGSFRhhll        3      0       0      71        0.0%
BITBIGSFRllhhhh      2      0       0      82        0.0%
BITBIGSFRllhhhh      2      0       0      83        0.0%
BITBIGSFRhll         2      0       0      72        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      80        0.0%
BITBIGSFRllhhhh      1      0       0      79        0.0%
BITBIGSFRllllll      1      0       0     108        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRllllll      1      0       0     105        0.0%
BITBIGSFRllhhhh      1      0       0      75        0.0%
BITBIGSFRllllll      1      0       0      99        0.0%
BITBIGSFRllhhhh      1      0       0      77        0.0%
BITBIGSFRllllll      1      0       0      97        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C4     110        0.0%
DATA                 0      0     3C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar  8 17:47:44 2022

                                ___fldiv@aexp 002D                                  ___fldiv@bexp 002C  
            __end_of_TMR5_SetInterruptHandler 5CFA                                  ___fldiv@sign 0025  
                                ?_display_led 0001                                  ___awdiv@sign 001A  
                         ___wmul@multiplicand 0017                             ??_TMR5_WriteTimer 0011  
                             _DAC1_Initialize 5D08                                           l185 5BE4  
                                         l616 5894                                           l971 4D0A  
                                         l981 4D16                                           l965 4D04  
                                         l991 4D22                                           l976 4D10  
                                         l986 4D1C                                           _GIE 01FE97  
                                         l996 4D28                                           _ana 0039  
                                         _pad 510E                                           _res 0043  
                                ___awmod@sign 001A                                           tosl 003FFD  
                                         wreg 003FE8                                _DAC1_SetOutput 5D1E  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0062  
                ?_ADCC_SetADIInterruptHandler 0015                            _UART1_Transmit_ISR 5A30  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                        __end_of_DAC1_GetOutput 5D2E  
                                ___fltol@exp1 001E                                          l1001 4D2E  
                                        l1011 4D3A                                          l1021 4D46  
                                        l1102 3DFA                                          l1006 4D34  
                                        l1016 4D40                                          l1026 4D4C  
                                        l1116 4316                                          l2080 40C0  
                                        l2068 490C                                          l2166 58EA  
                                        l1705 38E0                                          l1386 49AA  
                                        l1650 35A4                                          l1651 3582  
                                        l1716 394E                                          l1717 394A  
                                        l1735 3192                                          l1559 4A92  
                                        l1752 342E                                          l1744 33A8  
                                        l1745 33A4                                          l1569 4FAE  
                                        l1666 3676                                          l1850 513C  
                                        l1675 36DC                                          l1915 274E  
                                        l1676 36D8                                          l1783 4760  
                                        l1951 45C2                                          l1776 46E2  
                                        l1970 3E1A                                          l1972 3E22  
                                        ?_pad 0029                                          l1887 23EA  
                                        l9002 39B6                                          l9012 39EC  
                                        l9014 39EE                                          l9006 39E0  
                                        l9110 336E                                          l9104 3350  
                                        l9210 53BC                                          l9130 33EC  
                                        l9034 313E                                          l9220 53DE  
                                        l9052 317E                                          l9036 3142  
                                        l9230 5400                                          l9214 53C8  
                                        l9134 340A                                          l9062 31B0  
                                        l9054 3182                                          l9038 3152  
                                        l9310 4CBE                                          l9400 4B36  
                                        l9234 540E                                          l9226 53F6  
                                        l9218 53D6                                          l9250 522A  
                                        l9242 51D8                                          l9146 344C  
                                        l9306 4CAE                                          l9180 52F4  
                                        l9172 52D6                                          l8700 34D6  
                                        l9324 4CEE                                          l9316 4CC6  
                                        l9412 5490                                          l9190 5314  
                                        l9166 52C6                                          l9246 520C  
                                        l9262 497E                                          l9318 4CD2  
                                        l9406 4B76                                          l9430 4026  
                                        l9510 2140                                          l9334 4A0C  
                                        l8632 58B4                                          l9272 49E2  
                                        l9280 5A1E                                          l8712 34FA  
                                        l8704 34DA                                          l9440 40E2  
                                        l9600 2442                                          l9336 4A20  
                                        l8634 58B6                                          l8618 5880  
                                        l8650 4F1A                                          l9178 52EC  
                                        l9194 531E                                          l9266 4994  
                                        l9258 494A                                          l9290 4C64  
                                        l9370 5126                                          l9602 2446  
                                        l9530 21D0                                          l9346 4A7C  
                                        l9362 4F98                                          l9354 4F3C  
                                        l8644 4E86                                          l8900 379E  
                                        l9444 4118                                          l9380 515E  
                                        l9612 2464                                          l9532 21DA  
                                        l9356 4F50                                          l9198 532C  
                                        l8806 369A                                          l8822 36BA  
                                        l8742 3536                                          l9374 5134  
                                        l9702 2836                                          l9710 285A  
                                        l9622 2498                                          l9518 2156  
                                        l8656 562C                                          l9464 57B8  
                                        l8920 37DE                                          l8816 36B0  
                                        l8680 3492                                          l9448 4146  
                                        l9384 518A                                          l9376 5146  
                                        l9560 22C0                                          l9528 21B4  
                                        l9536 2200                                          l8658 5630  
                                        l9474 4182                                          l8850 3748  
                                        l8842 3722                                          l8770 35C8  
                                        l8754 3590                                          l9730 2932  
                                        l9650 2660                                          l9618 2488  
                                        l9570 2380                                          l9546 225E  
                                        l9554 227C                                          l9802 4586  
                                        l9476 4190                                          l8916 37DA  
                                        l8780 35EE                                          l8756 3594  
                                        l8676 348E                                          l9396 4B2C  
                                        l9628 24C2                                          l9636 25B6  
                                        l9564 22F8                                          l9820 460E  
                                        l9812 45D8                                          l8942 3840  
                                        l8934 3828                                          l8854 3750  
                                        l9670 2768                                          l9718 28F0  
                                        l9662 2724                                          l9582 23D2  
                                        l9566 2346                                          l9830 466E  
                                        l8872 5438                                          l8960 38B8  
                                        l8952 3890                                          l8928 3812  
                                        l8856 3752                                          l9592 23FA  
                                        l9816 45F0                                          l9920 2AE6  
                                        l8778 35EA                                          l9746 297E  
                                        l9682 27E8                                          l9586 23F4  
                                        l9498 2114                                          l9834 4686  
                                        l9826 4654                                          l8868 5422  
                                        l8972 38F6                                          l8788 3600  
                                        l9748 2988                                          l9668 2746  
                                        l9940 2B00                                          l9932 2AF2  
                                        l9924 2AEA                                          l9916 2ADA  
                                        l8966 38DE                                          l8798 3666  
                                        l9782 2A58                                          l9758 29DC  
                                        l9694 2816                                          l9918 2ADC  
                                        l9942 2B46                                          STR_1 2081  
                                        l8896 379A                                          l9768 2A08  
                                        l9848 3E5A                                          l9960 2BE0  
                                        l9936 2AF6                                          l9928 2AEE  
                                        STR_2 20A1                                          STR_3 208D  
                                        l9882 4844                                          l9874 47F6  
                                        l8978 3914                                          l9858 3F46  
                                        l9954 2BC0                                          STR_4 2097  
                                        STR_5 2022                                          l9884 484C  
                                        l9972 2CA8                                          l9956 2BD8  
                                        STR_6 20C7                                          STR_7 20C1  
                                        l9894 48B8                                          l9886 4850  
                                        l9878 47F8                                          l8998 3992  
                                        l9990 2D8A                                          l9974 2CC0  
                                        STR_8 20C4                                          STR_9 206C  
                                        l9888 487E                                          l9978 2CC8  
                                        l9998 2DFA                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _LATF 003FBF                                          _T6PR 003F93  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        u9600 3558                                          u9610 3568  
                                        u9460 4E7E                                          u9620 356A  
                                        u9480 4EC6                                          u9800 36D2  
                                        u9490 565A                                          u9650 35AC  
                                        _PLLR 01CEE0                                          u9900 546E  
                                        u9920 59CA                                          u9497 564C  
                                        u9930 59CC                                          u9907 5460  
                                        u9860 372E                                          u9780 36BE  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                          _WPUF 003A91  
                            __end_of_ADCC_ISR 5782                                   main@mode_sw 00D7  
                         ?_UART1_Transmit_ISR 0001                                          _dbuf 0198  
                                        _cmdm 2006                                          _atoi 47E4  
                                        _main 39F6                                          _ival 0194  
                                        _mode 00FD                               __end_of_Adc_Isr 5968  
                                        _prec 00F9                                          _nout 00F5  
                                        pad@i 0030                                          pad@p 002D  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0032  
                                        fsr2l 003FD9                                          _stoa 455C  
                                        _puts 58F4                                          _vval 00D9  
                                        _utoa 3DFE                                 ___fpclassifyf 4AB4  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 003F  
                             ___fldiv@new_exp 0026                 ??_UART1_SetTxInterruptHandler 0018  
                           _UART1_rx_vect_isr 5840                                  ___param_bank 000000  
                                 ?_UART1_Read 0001                            ?_UART1_rx_vect_isr 0001  
                                       ??_pad 002F                          ??_UART1_Transmit_ISR 000B  
               __end_of_OSCILLATOR_Initialize 5BEA                                         l10002 2E24  
                                       l10012 2EA4                                         l10020 2EF4  
                                       l10122 57F2                                         l10052 30BE  
                                       l10028 2F72                                         l10150 445C  
                                       l10046 3084                                         l10038 2FDA  
                                       l10062 30DC                                         l10056 30CA  
                                       l10170 4552                                         l10162 4504  
                                       l10410 42D0                                         l10090 5510  
                                       l10164 4536                                         l10156 44C8  
                                       l10350 3C5E                                         l10334 5AFE  
                                       l10414 42FA                                         l10360 3D7C  
                                       l10424 4386                                         l10432 43E4  
                                       l10088 54EE                                         l10520 3A92  
                                       l10362 3D7E                                         l10530 3AD2  
                                       l10514 3A6C                                         l10452 4710  
                                       l10356 3C7E                                         l10524 3AAC  
                                       l10508 3A4A                                         l10454 4716  
                                       l10446 46F2                                         l10550 3BDA  
                                       l10542 3BC6                                         l10518 3A86  
                                       l10464 4786                                         l10456 4722  
                                       l10392 4D5E                                         l10552 3BDE  
                                       l10560 3BF0                                         l10528 3AC6  
                                       l10482 47D2                                         l10466 4792  
                                       l10458 4748                                         l10546 3BD0  
                                       l10562 3C14                                         l10538 3BBC  
                                       l10572 3C34                                 ___fltol@sign1 001D  
                                       _ADACT 003EFE                                         _ADCAP 003EF5  
                                       ?_atoi 001C                               __end_of___fladd 376E  
                                       ?_main 0001                                         _ADCLK 003EFF  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 39F6                                         _ADREF 003EFD  
                             __end_of___awdiv 5336                               __end_of___flneg 5A30  
                                       STR_10 2069                                         STR_11 20AA  
                                       STR_12 20B2                                         STR_21 20BE  
                                       STR_15 20AE                                         STR_24 20BA  
                                       STR_16 20B6                                         STR_26 20BA  
                                       STR_19 20BE                               __end_of___awmod 5418  
                                       _ADRPT 003EEC                               __end_of___flmul 3462  
                             __end_of___flsub 56FC                               __end_of___fltol 4D00  
                                       ?_stoa 0020                                         ?_puts 0029  
                                       u10100 3944                                         ?_utoa 0060  
                                       u11010 41EA                                         u10140 39A0  
                                       u11100 2130                                         u10150 39C4  
                                       u11040 4222                                         u10320 33FA  
                                       u10240 319E                                         u11017 41DC  
                                       u11050 4254                                         u10330 3418  
                                       u11210 23E0                                         u11060 427E  
                                       u11070 42AA                                         u11055 424E  
                                       u11047 4214                                         u10440 53E2  
                                       u10280 339E                                         u11240 2412  
                                       u11057 4240                                         u12121 3C78  
                                       u10610 4CD8                                         u11067 4270  
                             __end_of___lodiv 4AB4                                         u10380 52F8  
                                       u11180 23A8                               ___awdiv@divisor 0017  
                                       u11077 429C                                         u12150 3DBA  
                                       u11350 2650                                         u10631 49EC  
                                       u10560 4C52                                         u10800 4B70  
                                       u11280 2460                                         u10490 5226  
                                       u10570 4C82                                         u10810 54D6  
                                       u11530 29F2                                         u11610 4604  
                                       u10650 4A24                                         _U1P1H 003DED  
                                       u12260 479C                                         u12148 3D68  
                                       u10740 4AF2                                         u11620 4638  
                                       u11700 3F72                                         u12340 3AB8  
                                       _U1P2H 003DEF                                         u12085 5730  
                                       u11701 3F70                                         u12086 5732  
                                       u10910 4100                                         u11550 2A50  
                                       u11470 2914                                         u11710 3F80  
                                       _U1P3H 003DF1                                         _U1P1L 003DEC  
                                       u10575 4C78                                         u10840 3FF4  
                                       u10680 4F54                                         u11720 3F84  
                                       _U1P2L 003DEE                                         u10745 4AE8  
                                       u10817 54C8                                         u11561 4566  
                                       u10850 4014                                         u11650 469A  
                                       _U1P3L 003DF0                                         u10915 40F6  
                                       u11627 462A                                         u10940 59FA  
                                       u11820 2C1A                                         u10845 3FEA  
                                       u10950 59FC                                         u11750 48EA  
                                       u10790 4B6E                                         u11670 3E10  
                                       u11920 2F4A                                         u10785 4B50  
                                       u10970 57B4                                         u10890 40A6  
                                       u11850 2D02                                         u10875 403E  
                                       u10876 4044                                         u10877 4052  
                                       u10990 41BA                                         u10895 409C  
                                       _T5CLK 003F9D                               __end_of___lomod 4FD0  
                                       u10997 41AC                                         u11990 5C86  
                                       _T5CON 003F9A                                         _T6CON 003F94  
                                       _T6HLT 003F95                                         _U1UIR 003DF8  
                                       _U1RXB 003DE8                                         _U1TXB 003DEA  
                      __end_of_DAC1_SetOutput 5D28                                         _T6TMR 003F92  
                                       i2l454 5994                                         i2l640 5A58  
                                       i2l721 5B3C                                         _T6RST 003F97  
                         ??_UART1_rx_vect_isr 000D                               ___awdiv@counter 0019  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00B1  
                                vfpfcnvrt@llu 00B8                                         _TMR5H 003F99  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                       _TRISF 003FC7                                   _Default_ISR 5D3C  
                   ?_TMR6_SetInterruptHandler 0015                             _UART1_tx_vect_isr 5800  
                            __end_of_TMR5_ISR 5622                              __end_of_TMR6_ISR 59A2  
                                       _fh_hi 5C5C                                         _fh_ho 5C4A  
                                       _buff1 0300                                         _fh_hw 5C8A  
                                       _flags 003D                                         _fputc 4E6E  
                                       _fputs 5418                               __end_of_isdigit 5A02  
                             ?_DAC1_GetOutput 0001                            ?_UART1_tx_vect_isr 0001  
                                       atoi@n 0024                                         pad@fp 0029  
                                       atoi@s 001C                                         _width 00F7  
                                       _putch 5D14                               __end_of_isspace 57C0  
                             __end_of_isupper 59D2                                         pclath 003FFA  
                                       pclatu 003FFB                                         tablat 003FF5  
                                       plusw1 003FE3                                         plusw2 003FDB  
                                       stoa@i 002C                                         stoa@l 0034  
                                       stoa@p 0032                                         stoa@s 0022  
                                       stoa@w 002E                                         puts@s 0029  
                                       utoa@d 0062                                         utoa@i 007E  
                                       utoa@n 0076                                         utoa@p 0072  
                                       utoa@w 0074                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 5CB4                   _UART1_SetRxInterruptHandler 5CA6  
                             __end_of_sprintf 55D2                                ?___fpclassifyf 0015  
                             __end_of_tolower 58F4                               __end_of_strncmp 42BA  
                            ___lodiv@dividend 0015      __end_of_UART1_DefaultFramingErrorHandler 5D42  
          ??_UART1_DefaultFramingErrorHandler 000D             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 5D40                           ??_UART1_tx_vect_isr 000B  
                   __end_of_UART1_rx_vect_isr 587E                ??_TMR6_DefaultInterruptHandler 0008  
                             _TMR5_Initialize 566E                               __initialization 5072  
                                __end_of_cmdm 2022                                  __end_of_atoi 4916  
                                __end_of_main 3C3A                       __end_of_DAC1_Initialize 5D14  
                                __end_of_stoa 46A4                                  __end_of_puts 592E  
                                __end_of_utoa 3FAE                   ??_UART1_DefaultErrorHandler 000D  
                                ?_UART1_Write 0001                                        ??_atoi 001E  
                                      ??_main 00D5                      _TMR5_SetInterruptHandler 5CEC  
                                      ??_stoa 0024                                        ??_puts 002B  
                                      ??_utoa 006A                                 __activetblptr 000003  
                             ?_DAC1_SetOutput 0001                     __end_of_UART1_tx_vect_isr 583E  
                            ___lodiv@quotient 0025                               _TMR6_Initialize 5A5E  
                            _UART1_Initialize 4DB8                                        ?_fh_hi 002C  
                                      ?_fh_ho 002C                                        _ADACCH 003EE9  
                                      ?_fh_hw 002C                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                     ??_Adc_Isr 0005  
                                      ?_fputc 0017                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 0020  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0015                                        _ADUTHL 003EE0  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _ANSELF 003A90                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RD1I2C 003A7B  
                                      _RC3I2C 003A6A                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                            __cli_interpret_cmd 3C3A  
                                      _RC3PPS 003A13                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _RC6PPS 003A16                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      _ODCONF 003A92                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l6252 556C                                        i2l6156 5A54  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _INLVLF 003A94                                        i2l6248 553A  
                                      i2l6176 506C                                        i2l6188 595A  
                                      i2l5876 5BAC                                        _OSCFRQ 0039DF  
                               vfpfcnvrt@done 00C2                         _UART1_SetErrorHandler 5CD0  
                            __end_of___xxtofl 47E4                    ??_ADCC_GetConversionResult 0003  
                         ?__cli_interpret_cmd 002E                              __end_of_cli_init 52B2  
                            __end_of_cli_read 4410                       DAC1_SetOutput@inputData 0015  
                                vfprintf@cfmt 0038                                        ___flge 4916  
                                      ___fleq 51A4                                     ??___fladd 001D  
                                      ___wmul 5A8A                                     ??___fldiv 001D  
                                   ??___awdiv 0019                                     ??___flneg 0019  
                                   ??___awmod 0019                                        _g_cmds 01EF  
                                   ??___flmul 002B                                     ??___flsub 0037  
                                   ??___fltol 0019                                     ??___lodiv 0025  
                                   ??___lomod 0025                                        _efgtoa 20CC  
                                      _floorf 3FAE                                        _memset 4410  
                                      clear_0 50C0                                        clear_1 50D2  
                                      clear_2 50DE                                        clear_3 50EA  
                                      clear_4 50F6                              ___awdiv@quotient 001B  
                             ___awmod@divisor 0017                                    _Timers_Isr 5532  
                                      isa$std 000001                               ___awmod@counter 0019  
                                      _printf 5B4A                                        pad@buf 002B  
                                      _strcpy 5480                                     ?_ADCC_ISR 0001  
                                      _strlen 5622                               _ADCC_Initialize 5336  
                                      fputc@c 0017                                _PMD_Initialize 5B6C  
                        ??__cli_interpret_cmd 0060                                        fputs@c 0026  
                                      fputs@i 0027                                        fputs@s 0020  
                                   ??_isdigit 0017                               ___fpclassifyf@e 001D  
                             ___fpclassifyf@u 001F                               ___fpclassifyf@x 0015  
                                __mediumconst 0000                                     ??_isspace 0017  
                                      tblptrh 003FF7                                     ??_isupper 0017  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                                      stoa@cp 0030                                        stoa@fp 0020  
                            __end_of_vfprintf 5532                                        utoa@fp 0060  
    TMR5_SetInterruptHandler@InterruptHandler 0015   UART1_SetTxInterruptHandler@InterruptHandler 0015  
 UART1_SetRxInterruptHandler@InterruptHandler 0015      TMR6_SetInterruptHandler@InterruptHandler 0015  
 ADCC_SetADIInterruptHandler@InterruptHandler 0015          __end_of_UART1_SetOverrunErrorHandler 5CC2  
                _UART1_SetOverrunErrorHandler 5CB4                     _UART1_DefaultErrorHandler 5D2E  
                                   ??_sprintf 0039                                     ??_tolower 001D  
                                   ??_strncmp 001F                                    ___flge@ff1 002F  
                                  ___flge@ff2 0033                               ??___fpclassifyf 0019  
                     __end_of_TMR5_Initialize 56B6                                  ___xxtofl@arg 001F  
                                ___xxtofl@exp 001E                             _SYSTEM_Initialize 5AB4  
                                ___xxtofl@val 0015                                    ___fleq@ff1 0015  
                                  ___fleq@ff2 0019                                    __accesstop 0060  
                     __end_of__initialization 5108                                    ___flneg@f1 0015  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                                  ___fltol@f1 0015                               _TMR5_WriteTimer 5B26  
                           __end_of_Led_Blink 5BCE                                __pcstackCOMRAM 0001  
                                __pidataBANK0 5D34                                  __pidataBANK1 5C1C  
                         ??_SYSTEM_Initialize 001A                              ?_DAC1_Initialize 0001  
                               __end_of_fh_hi 5C6E                                 __end_of_fh_ho 5C5C  
                               __end_of_fh_hw 5C98                                     ?_TMR5_ISR 0001  
                                   ?_TMR6_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 4F22                                 __end_of_fputs 5480  
                           ??_SPI1_Initialize 0015                                 __end_of_putch 5D1E  
                     __end_of_TMR6_Initialize 5A8A                        __end_of_PMD_Initialize 5B8E  
                                  ??_ADCC_ISR 0006                         __end_of_TMR6_CallBack 5B26  
                          _spi1_configuration 2001                         TMR6_ISR@CountCallBack 0041  
                   _UART1_FramingErrorHandler 00E6                                       ??_fh_hi 002E  
                                     ??_fh_ho 002E                                       ??_fh_hw 002E  
                                     ??_fputc 001B                     __end_of_SYSTEM_Initialize 5ADE  
                                     ??_fputs 0024                               linux_putc@a_len 002E  
                                     ??_putch 0016                                    __pbssBANK0 00D9  
                                  __pbssBANK1 0100                                    __pbssBANK2 0200  
                                  __pbssBANK3 0300                 ?_UART1_SetOverrunErrorHandler 0015  
                      ?_UART1_SetErrorHandler 0015                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                            linux_getc@a_data 0016                                cli_init@a_cmds 02D9  
                                     ?___flge 002F                                       ?___fleq 0015  
                                ??_UART1_Read 0015                                       ?___wmul 0015  
            __end_of_TMR6_SetInterruptHandler 5CEC                       __end_of_ADCC_Initialize 53A8  
                                  ??_TMR5_ISR 0013                                    ??_TMR6_ISR 0009  
                                     ?_efgtoa 0071                                       _ADFLTRH 003EE7  
                                     ?_floorf 002E                                       _ADFLTRL 003EE6  
                                     ?_memset 0015                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                                   ?_Timers_Isr 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 02C3                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 4FD0                                       ?_strcpy 0015  
                                     ?_strlen 0015                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                              ??_DAC1_GetOutput 0015  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0015  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                     _IVTLOCK 003FD4                                       _SPI1CLK 003D1C  
                                   ?_cli_init 02D7                                     ?_cli_read 0032  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                     _SLRCONF 003A93                                       _Adc_Isr 592E  
                                  _build_date 00FF                           ??_UART1_Receive_ISR 000D  
                                  _build_time 00FE                              ___lomod@dividend 0015  
                     __end_of_TMR5_WriteTimer 5B4A                            __end_of_UART1_Read 57FE  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0015  
                                     __Hparam 0000                                       __Lparam 0000  
                    __end_of_UART1_Initialize 4E6E                    ??_TMR5_SetInterruptHandler 0018  
                    __cli_interpret_cmd@a_ctx 002E                                       ___fladd 3462  
                                     ___fldiv 376E                                       ___awdiv 52B2  
                                     ___flneg 5A02                                       ___awmod 53A8  
                                     ___flmul 3110                                       ___flsub 56B6  
                                     ___fltol 4C46                                       ___lodiv 49E6  
                                     ___lomod 4F22                              ??_DAC1_SetOutput 0015  
                   __end_of_UART1_Receive_ISR 5072                                     ?_vfprintf 00CE  
                                __psmallconst 2000                                       __pcinit 5072  
                            ?_TMR6_Initialize 0001                                       __ramtop 2000  
                                     _cli_ctx 0240                                       __ptext0 39F6  
                                     __ptext1 5C04                                       __ptext2 522E  
                                     __ptext3 5584                                       __ptext4 5B4A  
                                     __ptext5 54E0                                       __ptext6 2A98  
                                     __ptext7 3DFE                                       __ptext8 4F22  
                                     __ptext9 49E6                         _OSCILLATOR_Initialize 5BCE  
                                     _isdigit 59D2                                    ??___xxtofl 0019  
                            ___awmod@dividend 0015                      ??_PIN_MANAGER_Initialize 0015  
                                     _isspace 5782                                   Timers_Isr@i 0011  
                                   _T5CONbits 003F9A                                       _isupper 59A2  
                                     efgtoa@c 0077                                       efgtoa@d 008F  
                                     efgtoa@e 00A7                                       efgtoa@f 0073  
                                     efgtoa@g 00A1                                       efgtoa@h 0099  
                                     efgtoa@i 00A5                                       efgtoa@l 009D  
                                     efgtoa@m 0089                                       efgtoa@n 00A9  
                                     efgtoa@p 0093                                       efgtoa@t 0083  
                                     efgtoa@u 00AB                                       efgtoa@w 0096  
                                  ??_cli_init 0039                                    ??_cli_read 0034  
                                     atoi@neg 0022                                    _linux_getc 5ADE  
                                     _sprintf 5584                                       _tolower 58BA  
                                  _linux_putc 5C6E                             __end_of_scmd_init 5C1C  
                                     _strncmp 4158                          end_of_initialization 5108  
                                     floorf@e 0064                                       floorf@m 0060  
                                     floorf@u 0066                                       floorf@x 002E  
                                     fputc@fp 0019                                       memset@c 0017  
                                     memset@k 001D                                       memset@n 0019  
                                     memset@s 001F           __end_of_UART1_SetTxInterruptHandler 5CA6  
                 _UART1_SetTxInterruptHandler 5C98                                       fputs@fp 0022  
                              display_led@led 0017                ??_UART1_SetOverrunErrorHandler 0018  
                           __end_of_vfpfcnvrt 3110                                    efgtoa@mode 0098  
                                  efgtoa@sign 0091                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                                  ??_vfprintf 0038                             UART1_Write@txData 0015  
                         _UART1_RxDataHandler 5B8E                                       strcpy@d 001D  
                                     strlen@a 0017                                       strcpy@s 001B  
                                     strlen@s 0015                                     _PORTBbits 003FCB  
                    _TMR6_SetInterruptHandler 5CDE                         _TMR5_InterruptHandler 00DD  
                                 ___fladd@grs 0024           __end_of_ADCC_SetADIInterruptHandler 5D08  
                 _ADCC_SetADIInterruptHandler 5CFA                                 ___xxtofl@sign 001D  
                                   _TRISCbits 003FC4                                   ___fldiv@grs 0028  
                                 ___fldiv@rem 0021                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 000F                       TMR5_WriteTimer@timerVal 000F  
                                 ___flmul@grs 0063                 ??_ADCC_SetADIInterruptHandler 0018  
                             _SPI1_Initialize 5BEA                  __end_of_INTERRUPT_Initialize 5740  
                                   _Led_Blink 5BB0                                 ??_display_led 0015  
              ??_ADCC_DefaultInterruptHandler 0001                                __end_of___flge 49E6  
                              __end_of___fleq 522E                                   vfpfcnvrt@ap 00B2  
                                 vfpfcnvrt@cp 00C0                                   vfpfcnvrt@ct 00CB  
                                 vfpfcnvrt@fp 00AF                                __end_of___wmul 5AB4  
                              __end_of_efgtoa 2A98                                __end_of_floorf 4158  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F526 018C  
                              __end_of_memset 455C                     ?_ADCC_GetConversionResult 0001  
                              __end_of_printf 5B6C                                __end_of_strcpy 54E0  
                              __end_of_strlen 566E                           start_initialization 5072  
                             ___lodiv@divisor 001D                               ___lodiv@counter 002D  
        __end_of_TMR5_DefaultInterruptHandler 5D44                  _TMR5_DefaultInterruptHandler 5D42  
                                 __end_of_pad 51A4                       ??_UART1_SetErrorHandler 0018  
                                 ?_linux_getc 0016                                   ?_linux_putc 002C  
                       ??_UART1_RxDataHandler 000D                                   putch@txData 0016  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0200  
                       __end_of___fpclassifyf 4B80                                 _uart1TxBuffer 0140  
                                 vfprintf@fmt 00D0                                      ??___flge 006D  
                                    ??___fleq 001D                              ??_PMD_Initialize 0015  
                                    ??___wmul 0019                                    ?_Led_Blink 0001  
                                    ??_efgtoa 0078                                   __pdataBANK0 00FD  
                                 __pdataBANK1 01E8                                      ??_floorf 0032  
                                    ??_memset 001B                                  ??_Timers_Isr 000F  
                                  memset@dest 0015                                      ??_printf 0039  
                                    ??_strcpy 0019                                      ??_strlen 0017  
                                   ___fladd@a 0019                                     ___fladd@b 0015  
                                   ___fldiv@a 0019                                     ___fldiv@b 0015  
                         __end_of_display_led 4DB8                                     ___flmul@a 0027  
                                   ___flmul@b 0023                                   __pbssCOMRAM 0039  
                                   ___flsub@a 0033                                     ___flsub@b 002F  
                          _UART1_ErrorHandler 00E0                                 __pcstackBANK0 0060  
                               __pcstackBANK2 02C3                       __end_of_SPI1_Initialize 5C04  
                    _UART1_RxInterruptHandler 00F2                 ?_TMR5_DefaultInterruptHandler 0001  
                                    ?_Adc_Isr 0001                                linux_putc@data 002C  
                ?_UART1_SetRxInterruptHandler 0015                            __end_of_Timers_Isr 5584  
                       _TMR6_InterruptHandler 00E9                                   _efgtoa$2653 007F  
                                 _efgtoa$2645 007D                                   _efgtoa$2654 0081  
                      _PIN_MANAGER_Initialize 4B80                                 cli_init@a_ctx 02D7  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5CD0  
                _UART1_SetFramingErrorHandler 5CC2                                 cli_read@a_ctx 0032  
                                    ?___fladd 0015                           UART1_Read@readValue 0015  
                                    ?___fldiv 0015                                      ?___awdiv 0015  
                                    ?___flneg 0015                                      ?___awmod 0015  
                                    ?___flmul 0023                                      ?___flsub 002F  
                                    ?___fltol 0015                                      ?___lodiv 0015  
                                    ?___lomod 0015                            ??_UART1_Initialize 0018  
                            _uart1RxLastError 0045                                 _cli_read$2073 006A  
                               ??_UART1_Write 0015                                      _DAC1CON0 003E9E  
                                    _DAC1CON1 003E9C                                     _disp_tick 00FC  
                                    _ADCC_ISR 5740                               ___lomod@divisor 001D  
                                 __smallconst 2000                               ___lomod@counter 0025  
    __end_of_UART1_DefaultOverrunErrorHandler 5D40            ??_UART1_DefaultOverrunErrorHandler 000D  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 5D3E  
                                    ?_isdigit 0015                                      ?_isspace 0015  
                                    ?_isupper 0015                                      ?_sprintf 02C3  
                                    ?_tolower 001B                                      ?_strncmp 0019  
                                 _U1ERRIRbits 003DF9                          _INTERRUPT_Initialize 56FC  
                                    _T6CLKCON 003F96                          __cli_interpret_cmd@i 0031  
                              ___wmul@product 0019         UART1_SetErrorHandler@interruptHandler 0015  
                                    _LATDbits 003FBD                                      _LATEbits 003FBE  
                                   _scmd_init 5C04                                      _LATFbits 003FBF  
                                    _IPR1bits 003981                                      _PIE1bits 003991  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                   _tickCount 0180                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                   cli_read@i 006C                 ??_UART1_SetRxInterruptHandler 0018  
                                    _PIR1bits 0039A1                                      i2u601_48 5B12  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    i2u605_48 4FFA                                      i2u605_49 5010  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                      i2u616_40 5582  
                                    i2u607_48 502A                                      i2u631_48 581C  
                                    i2u607_49 5040                                      i2u631_49 5830  
                                   _puts$2836 002B                                      i2u609_48 5056  
                                    i2u633_48 585C                                      i2u633_49 5870  
                                    i2u635_48 5600                                      i2u635_49 5614  
                                    i2u629_40 5988                                      i2u628_48 5760  
                                    i2u628_49 5774                                      _PIR8bits 0039A8  
                                    i2u592_40 5BB8                                      i2u592_46 5BBA  
                                    _PIR9bits 0039A9                    ??_TMR6_SetInterruptHandler 0018  
                                 ??_Led_Blink 0008                    __end_of_UART1_Transmit_ISR 5A5E  
                                    _TMR5_ISR 55D4                                      _TMR6_ISR 5968  
               ?_UART1_SetFramingErrorHandler 0015                                   _display_led 4D00  
                                   _vfpfcnvrt 2A98                             ___wmul@multiplier 0015  
                                   main@dac_v 00D8                                 _TMR6_CallBack 5B02  
                   ?_TMR5_SetInterruptHandler 0015                           __end_of_UART1_Write 58BA  
                                _isspace$2757 001B                                    vfpfcnvrt@c 00C6  
                                  vfpfcnvrt@f 00C7                              ?_SPI1_Initialize 0001  
                                 _INTCON0bits 003FD2                                     copy_data0 5086  
                       ?_INTERRUPT_Initialize 0001                             ??_DAC1_Initialize 0015  
                      _uart1TxBufferRemaining 0049                ??_TMR5_DefaultInterruptHandler 000F  
                                  ?_scmd_init 0001                                  _uart1RxCount 0046  
                                    __Hrparam 0000              __end_of_ADCC_GetConversionResult 5C4A  
                                  vfprintf@ap 00D1                                      __Lrparam 0000  
                                  vfprintf@fp 00CE                       ??_OSCILLATOR_Initialize 0015  
                                  ?_vfpfcnvrt 00AF                                      _adc_chan 0044  
                                    _adc_tick 00FB                                ?_TMR6_CallBack 0001  
                          ___fpclassifyf@F465 0190                                    sprintf@fmt 02C5  
                                    ___xxtofl 46A4                                      __pivt0x8 0008  
                                    _cli_init 522E                                      _cli_read 42BA  
                                    __ptext10 455C                                      __ptext11 20CC  
                                    __ptext20 3462                                      __ptext12 58BA  
                                    __ptext21 5A02                                      __ptext13 59A2  
                                    __ptext30 59D2                                      __ptext22 3110  
                                    __ptext14 5480                                      __ptext31 5A8A  
                                    __ptext23 4916                                      __ptext15 510E  
                                    __ptext40 4158                                      __ptext32 4D00  
                                    __ptext24 51A4                                      __ptext16 3FAE  
                                    __ptext41 5622                                      __ptext33 42BA  
                                    __ptext25 376E                                      __ptext17 4AB4  
                                    __ptext50 46A4                                      __ptext42 5C4A  
                                    __ptext34 4410                                      __ptext26 53A8  
                                    __ptext18 4C46                                      __ptext51 5AB4  
                                    __ptext43 5C5C                                      __ptext35 5C6E  
                                    __ptext27 52B2                                      __ptext19 56B6  
                                    __ptext60 566E                                      __ptext52 4DB8  
                                    __ptext44 5C8A                                      __ptext36 5ADE  
                                    __ptext28 47E4                                      __ptext61 5CEC  
                                    __ptext53 5C98                                      __ptext45 58F4  
                                    __ptext37 5C7C                                      __ptext29 5782  
                                    __ptext70 5D1E                                      __ptext62 5BEA  
                                    __ptext54 5CA6                                      __ptext46 5418  
                                    __ptext38 57C0                                      __ptext71 5D28  
                                    __ptext63 5B6C                                      __ptext55 5CB4  
                                    __ptext47 4E6E                                      __ptext39 3C3A  
                                    __ptext80 5D3C                                      __ptext72 5740  
                                    __ptext64 4B80                                      __ptext56 5CC2  
                                    __ptext48 5D14                                      __ptext81 5800  
                                    __ptext73 5D38                                      __ptext65 5BCE  
                                    __ptext57 5CD0                                      __ptext49 587E  
                                    __ptext90 5D42                                      __ptext82 5A30  
                                    __ptext74 592E                                      __ptext66 56FC  
                                    __ptext58 5A5E                                      __ptext91 5532  
                                    __ptext83 5840                                      __ptext75 5C34  
                                    __ptext67 5D08                                      __ptext59 5CDE  
                                    __ptext92 5B26                                      __ptext84 4FD0  
                                    __ptext76 5968                                      __ptext68 5336  
                                    __ptext93 0000                                      __ptext85 5D3E  
                                    __ptext77 5B02                                      __ptext69 5CFA  
                                    __ptext86 5D40                                      __ptext78 5BB0  
                                    __ptext87 5D2E                                      __ptext79 5D3A  
                                    __ptext88 5B8E                                      __ptext89 55D4  
                                ??_linux_getc 0017                                  ??_linux_putc 002F  
               __end_of_UART1_SetErrorHandler 5CDE                                    strcpy@dest 0015  
                                 fh_hi@a_data 002C                        __cli_interpret_cmd@ret 0030  
                                 _IVTLOCKbits 003FD4                                   fh_ho@a_data 002C  
                                    efgtoa@fp 0071                                      efgtoa@ne 0087  
                                    efgtoa@pp 0085                                      efgtoa@ou 008B  
                   _UART1_OverrunErrorHandler 00E3                     _ADCC_ADI_InterruptHandler 00EC  
                                   stoa@F1164 01E8  UART1_SetOverrunErrorHandler@interruptHandler 0015  
                                    isa$xinst 000000                    ?_UART1_DefaultErrorHandler 0001  
                                    _vfprintf 54E0                                     printf@fmt 02C3  
                          __end_of_linux_getc 5B02                                   fh_hw@a_data 002C  
                           _UART1_is_rx_ready 5C7C                            __end_of_linux_putc 5C7C  
                                 _UART1_Write 587E                    __end_of__cli_interpret_cmd 3DFE  
                           ??_TMR5_Initialize 0018                            ?_UART1_is_rx_ready 0001  
                               ??_Default_ISR 000B                ??_UART1_SetFramingErrorHandler 0018  
                              _vfpfcnvrt$2692 00C4                   __end_of_UART1_RxDataHandler 5BB0  
                                 _uart1RxHead 0048                                   _uart1TxHead 004B  
                                 _uart1RxTail 0047                                   _uart1TxTail 004A  
                                    isdigit@c 0015                        ??_INTERRUPT_Initialize 0015  
                         ??_UART1_is_rx_ready 0015          __end_of_TMR6_DefaultInterruptHandler 5D3C  
                _TMR6_DefaultInterruptHandler 5D3A          __end_of_ADCC_DefaultInterruptHandler 5D3A  
                _ADCC_DefaultInterruptHandler 5D38                                      intlevel2 0000  
                                   sprintf@ap 02CA                                      isspace@c 0015  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0018  
                                 ??_scmd_init 0039                                     strcpy@src 0017  
                                    isupper@c 0015                                     strncmp@_l 0019  
                                   strncmp@_r 001B                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 0095                                    _SPI1SDIPPS 003ADF  
                                  _SPI1SCKPPS 003ADE                                      printf@ap 00D3  
                   __end_of_UART1_is_rx_ready 5C8A                                    _UART1_Read 57C0  
UART1_SetFramingErrorHandler@interruptHandler 0015                      _ADCC_GetConversionResult 5C34  
           __end_of_UART1_DefaultErrorHandler 5D34                                   ??_vfpfcnvrt 00B4  
                                    stoa@nuls 0025                               ??_TMR6_CallBack 0009  
                                    sprintf@f 02CC                                      tolower@c 001B  
                                    sprintf@s 02C3                                      strncmp@l 0021  
                                    strncmp@n 001D                                      strncmp@r 0023  
                    _UART1_TxInterruptHandler 00EF                                 ___fladd@signs 0021  
                         __end_of_Default_ISR 5D3E                __end_of_PIN_MANAGER_Initialize 4C46  
                           ??_ADCC_Initialize 0018                                _DAC1_GetOutput 5D28  
               ?_TMR6_DefaultInterruptHandler 0001                                  ___fladd@aexp 0022  
                                ___fladd@bexp 0023                 ?_ADCC_DefaultInterruptHandler 0001  
                ?_UART1_SetTxInterruptHandler 0015                    __end_of_spi1_configuration 2006  
